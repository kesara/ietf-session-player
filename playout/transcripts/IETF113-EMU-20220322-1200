[
  {
    "startTime": "00:00:28",
    "text": "ah all right um i think we'll get started i don't know how many people are going to be in here and versus online um but uh this is emu at ietf 113 here in vienna and online um uh next slide might you all should be familiar with the note well kind of a code of conduct for the ietf talks a little bit about ipr and keeping things uh professional here in the meeting with our discussions uh and thanks uh ian for uh offering to take notes and if somebody else you can easily get to the notes through the ether pad link on the or the code emd link on the agenda and if you can uh take notes while jan is presenting that would be wonderful thank you um next slide okay so um there are around the room little qr codes that you should scan so that that's the method for signing in with your blue sheets so please scan the qr code so that your attendance will be recorded"
  },
  {
    "startTime": "00:02:00",
    "text": "um that's something you agreed to do when you signed in and for people who are online that's already taken care of um all right so let's go to the next slide just a quick overview of our agenda which is packed today um we have a couple of working group draft items so we'll have uh yari talk first about aka pfs then alan uh we'll talk about uh the eep types and then we have some other drafts uh that we will go into some of them we're gonna see if there's uh some uh desire to kind of take them on as working group items in in this meeting um and if we don't get enough information from this meeting we'll have to take that to the list the uh adoption call would be taken to the like list anyway um does anybody have anything to add to this agenda we don't really have time to add anything but all right next slide please up all right let's uh go to uh yari slides all right uh hi guys my name is yadi arco and uh together with a couple of my colleagues and many contributors from the working group we've been doing this uh forward secrecy or perfect forward secrecy uh draft um an extension of eap aka next slide and um what is the status of that it's been sort of hanging around uh i guess partially at least due to lack of cycles on the author's part my part in particular but also some final details we were sort of trying to nail down um not much but a little bit we'll talk about that in a bit and waiting for you know clear"
  },
  {
    "startTime": "00:04:00",
    "text": "opportunity to put this into real world use but i at least i'm a little tired of waiting so i think it's better that we make this an rfc and nail those final details and and then it's ready to be used and i think it's important of course the forward secrecy property is important for security next slide so we submitted the new version 06 has a couple of changes not much um at least not substantially much we updated some of the references because they've been made rfcs recently okay no biggie um there's also a discussion in itf in the sarc group about the use of pfs terminology and they came to the conclusion that one should use forward secrecy instead and so we're trying to comply with the conclusion of that discussion there's a link on the slide to mail that john sent to the list i think um so we made that change and so that that sort of editorially fairly big change because it shows up on many places in the document we change the name next slide there's not much open issues that i know of i think it's pretty straightforward there's one issue however that has been having some discussion on the mailing list and some people discussing occasionally at least and my interpretation of the discussion was that it did not result in in a conclusion that i i could easily implement in the draft so i asked the working to to take a look at this in particular the people who were participating this uh john and renee and mohit you as well and maybe others so the question is about the encoding of the public value and how long it is and so on and um you can you can look up the"
  },
  {
    "startTime": "00:06:00",
    "text": "the discussion on the mailing list archive but um from my perspective i need some some input from the working group or from from the guys i'm not the expert on this encoding so i'm kind of looking to others maybe my person's you can say something but uh basically on the right side of the slide you can see the the the actual text that we have right now let's talk about two curves and how they are encoded um and then there's uh some discussion between john and renee for instance on whether it should be 32 or 33 and what the implications are um so that that that's the open issue i don't know if people have thoughts now or so uh i think uh john is in the queue and in in theory uh you should join the mike q through your uh mobile app but so john go ahead and then yeah so i i'm fine with this 33 i mostly had comments about the reasons and some of the motivations behind the change and some of the statements regarding 32 byte values otherwise i find this 33 byte encoding perfectly fine i don't have anything against that so i think we can more or less close this issue if there's anything to do i think it then it's small non-technical clarifications in the draft or something um 3d people already use this 33 byte code compression in in suki for example so um i don't have any i'm i'm fine with the current 33 byte yeah so just to clarify i don't think we have much of the background rationale in the draft it's it's been on the mailing list"
  },
  {
    "startTime": "00:08:00",
    "text": "maybe in the change notes but not in the actual so you're happy with the text as it is in the o6 i can check that but i i i i'm fine with the technical solution to use this 33 byte encoding yeah let's look through that section together later offline maybe yeah dan uh dan harkins so the only reason you'd need the extra byte is if you care about the sign of the point but if you're if your shared secret is just the x coordinate of the the divi helmet shared secret point and you throw away the y coordinate they don't care about the sign anyway so you don't need you don't need the extra bite you don't it's it's not helpful there was also discussion by renee about like uh you were seeing the same encoding exactly as others and what the libraries do and so forth so i don't know if that played the role in that discussion but yeah well uh it was encoded as 33 because they wanted to compress it but there's some use cases required uh both sides to have the exact same sign representation so that that's what the byte is for so you can whether it's you know plus y or minus y but if you're throwing away y anyway then you don't really care what the sign is and i think you're throwing away why in in this in pfs draft right joan do you have a comment on that i agree with everything dan says this this single bite is not really useful but it doesn't really matter so much either so i i personally don't have a strong opinion i think com clients most libraries doesn't support this 33 byte either so to get compliance you need uh 64 byte encoding"
  },
  {
    "startTime": "00:10:00",
    "text": "mostly but but yeah but it's a single bike we're talking about so it might not be such a big issue i can live with both personally mohan um so maybe just thinking of the bigger picture here uh ebay and then ebay bfs would most likely be used um let's say more in 3gpp deployments than in other deployments and if i understood john correctly the way 3gbp currently uses this curve is with 33 bytes in that case we should just follow whatever 3gbps is using just just because uh it will be like lesser path of resistance for them to hopefully adopt once this becomes an rfc and i don't know if aka bfs is going to be used in super super constrained iot scenarios where the one byte would make a difference so yeah that's that's my feeling okay so um if i'm trying to summarize the discussion um just just my opinion of course but it sounds to be like nobody is objecting to what we actually have now it also sounds like it's useful maybe for me and john to go through um some of the stuff offline particularly like the references and and that there's no no other other language anywhere in the draft that would actually speak about some of these things that we were arguing a little bit but but uh substance seems to be acceptable unless somebody screams now yeah i think um if if you guys could go on and kind of make a final decision and and update the draft if necessary and then uh you know let us know and then we"
  },
  {
    "startTime": "00:12:01",
    "text": "can start uh working group last call i think yeah we will report on the list that what the conclusion was so awesome thank you uh there's still one more person in there help you hi i just had a question about like using 33 bytes i guess this question is like with the libraries i guess they introduced some ambiguity because you don't know they might expect they might libraries might want to know which white coordinator they should take and so that could you know that could be an issue that's all i wanted to say um so i think the spec will say exactly what to do and whether that matches the library that you have easily available or not is another question i think we're discussing that like what is the right choice here in terms of making that that thing easy with with the implementations well that that's part of it at least but um but the spec will be clear that you have to do that like you know this many bytes and go read here what you know what the what the format is and and i don't think that's this ambiguity after that this only ambiguity here deciding that what should the spec say but after after it says something i think it should be should be clear and if it's not then then we have a problem but i don't think we do okay jonathan to build off what nick said so it's not an ambiguity it's just that when most cryptographic libraries as john pointed out requires 64 bytes um then you would have to with a 32 byte representation you would have to use the curve equation to determine what the y coordinate is which would require significant computation which the library may or may not have"
  },
  {
    "startTime": "00:14:07",
    "text": "you have to do those computations with 33 bytes anyway i mean the only thing that extra byte tells you is which y to use you still have to to do the equation of the curve to get y squared you take the square root and now you just decide whether it's plus y or minus y based upon the the third byte so you have to do the work anyway whether you have the 33rd bite or not okay so i i think we still have the same uh direction for for the author and authors to kind of go look at what's available in terms of libraries and other specs and come up with a proposal that we can then run by the group all right thanks all right next we have uh alan with tlse types okay my linkedin looks to be linked i think there's only one slide here um so if we go to the next one mo heat um multiples client server implementations it's allegedly good to go um one issue raised was um sort of a throwaway comment in the ttls rsc that it should be okay to do client authentication using only the client skirt cert and just a skip phase two um i don't know anyone that's implemented that it seems a little weird if you want to use client cert authentication you should just use tls um and the suggestion was to forbid that in tls 1-3 for both ttls and peep that doesn't seem controversial"
  },
  {
    "startTime": "00:16:01",
    "text": "so i think it should be okay it's already in the the last issue last version of the draft i published and no one seemed to comment too much on the list um the other issue which showed up in the last week or two is um a client deciding to not do session resumption for ttls the issue with pap when you do ttls plus pap there's only one even half round of information being sent from the supplicant to the server here's my password and the answer is deep success or eep failure we had a bunch of discussion around this do we want more to go back so that we have a protected success or failure indicator the larger issue is that if we send a session ticket instead of eve success or failure this implementation decides it's unexpected and treats it as reject um so i would suggest updating the document to suggest that this is not the proper thing to do um and you should continue doing tls whatever that means until you get the deep success or eat failure and this is perhaps a side effect of not having that protected success protected failure indicator other than that everyone seems to be happy implementation seems to be mostly okay and i think we're good to publish but i'd like a little more discussion or comment or something around around that last issue all right does anybody in attendance have uh"
  },
  {
    "startTime": "00:18:02",
    "text": "comments uh about that issue mohit um maybe uh not so much on on this second day issue i haven't had a closer look at it but uh this allowing clients are i think this should be acceptable i'm just worried are we not aware of some niche deployment and would it make sense to for us cheers to send like a heads up that this update of let's say ttls and peep specifically highlighting this rfc numbers 5281 saying that uh we are basically going to forbid uh client or that client authentication with client certificates only uh in which case you're better off with using dls and if you have any implementation or use cases where you are doing that say now or then then don't complain later tim hey tim cabelly um mac os lets you configure it via profile whether it works or not i'm not sure yeah this is alan again um from what i can tell the peep specs are silent on this issue so implementations may or may not support this um i know with with my server implementation um you can configure this it's pretty rare so far as i know um for for me i mean it's one of these things of it doesn't really break anything to allow this but i tend to be a little conservative"
  },
  {
    "startTime": "00:20:01",
    "text": "in the we already have a client certificate authentication method if you want to use client certificates only you should just use that um and so forbidding it in the document you know given our experience with various similar forbiddings doesn't really necessarily affect implementations but perhaps serves as a warning that this doesn't really make sense if you want something with a phase two authentication then you should be using the phase 2 authentication um and we really don't know why or what the benefits are use cases um therefore officially speaking it should be either forbidden or frowned upon um and that exact phrasing is up in the air all right are there any more comments in the room or on the meteco on this particular issue if not i think we want to try to resolve this discussion on the list and uh so we can get a new draft spun up and uh move it forward so i don't i think we're we're pretty close on this one yeah i'll get a new draft out um after ietf and i think we should be good to go okay yeah just alan if you could note what the changes are make sure that we have that so that we can run that by the the working group i'll do that yeah i'll uh i'll send summaries to the last great all right i believe next"
  },
  {
    "startTime": "00:22:00",
    "text": "we have [Music] eep usability uh there's only one slide here again not a lot to discuss i did issue a um new update with some minor tweaks and all this um really what this is is this is this is a way not just to configure eve but it it's a trade-off in cost um there are possibilities like fast teep um and some other proposals later in this meeting where you use eep almost as a general transport protocol to transport all kinds of provisioning information and there's provisions for queries and teep has provisions for requesting client certificates and pushing all kinds of information back and forth and speaking as an ape implementer and someone deploying and supporting these things it gets complicated um it's certainly easy in some respects for administrators who support this just to click a button saying allow provisioning um but it makes the implementations more fragile the error messages that show up to the user tend to be opaque if they exist and this proposal pushes the eep configuration complexity off onto standard internet protocols followed by a os specific configuration tool which just does whatever it has to using private apis or whatever you want so there is a little bit more work for site administrators to set this up"
  },
  {
    "startTime": "00:24:01",
    "text": "but the nice thing is once it's set up um you really don't care what else is going on in your network it's independent of eep type etc etc so we do have buy-in from a bunch of people um to move forward with this implement this so the question is what does the larger working group think elliott hey uh good afternoon to those in the room good morning to people who aren't in the room and elsewhere in the us um alan thanks for this draft um i looked this over a long time ago there were there were a couple of issues that i'd seen back then but i just wanted to address one point here first which is um my focus is really as you guys know on iot where you don't have user interfaces you need standard interfaces to run things and one of the standard interfaces we need is a way to get a certificate so um and not just a certificate but a trust anchor right so the exact things that you were talking about in teep are the exact things that an iot device needs and you are suggesting that these be taken using standard internet mechanisms i'm presuming you're referring out to stuff like est or acme or some such can you elaborate a little bit more on where you think you're going in there yeah um the the standard internet tools here really are not sorry the the intention here is not so much for iot where you have a device with no ui no network connection looking to bootstrap um that's a complicated thing you definitely need something specific there and yeah that really does have to look a lot like eep"
  },
  {
    "startTime": "00:26:01",
    "text": "generally speaking for other devices um you know my phone for example pretty much always has two network connections wi-fi and a backhaul on 4g 5g whatever my laptop for example i can always walk down to starbucks and get a completely unauthenticated internet connection when you do that you have dns https acme est whatever that will almost always already be on the device and already have software there and so the use case i i really envision is you know someone starting at a new company and you get told yeah here's the standard dns names for all of our configuration um all the certificates etc are available on https go and do that the the issue for me is loading all of this into eep is very very complicated and when it works it's absolutely fantastic and when it doesn't work um the user and the administrator generally get messages like failed and it could be one of 16 different things which fails and they have absolutely no idea okay bernard hello um yeah so i generally agree with where alan is going with it with this you know absent some considerations for iot because as was said in the original applicability statement eap is not"
  },
  {
    "startTime": "00:28:01",
    "text": "really good at transferring large amounts of data which would include the configuration um and that's why it's probably a better approach if you can do it to just get on the network and then download the stuff using you know a full tcp stack and the configuration i don't know how big it is alan but uh it can be complicated so as you said it's a lot less fragile to do with the way allen's recommending yeah just to respond to that i mean it's it's certificates certificate chains um in the worst case i've seen you know 64k of data and then people complain right yeah in particular uh yeah those are those are where you get the failures because you're sending a lot of data you know you get into all the issues that we got into uh you know recently with etls trying to shorten uh the certificate uh sizes because of those exact same failures um so yeah you're right you're gonna dramatically improve the likelihood that configuration will succeed i think elliot is still in the q value please go ahead thanks um i mean my my thinking is we should i'm not i i understand ellen's use case we sort of have two directions we can take direction number one is alan you just scoped the document in terms of in terms of these are the use cases i'm trying to solve and these are the use cases that may not be applicable for this document that's one approach"
  },
  {
    "startTime": "00:30:01",
    "text": "another approach would be that we see if we can ponder the model that we really want that covers them both and sometimes that's reasonable and sometimes it's not right the the issues that you're talking about in terms of um data transfer sizes there's probably timeouts involved as well that that come into play in some of these cases the link path issues relating to you know what's what's running underneath you know there are a myriad of problems that he can run into but and it's nice to keep it nice and thin on the other hand um when it when we push these things into other layers the complexity isn't just um in one place uh it spreads into l3 for instance where you have trusted untrusted uh mechanisms that that end up getting into place especially with the iot case we see this in some of the deployments we have and we'd like to get away from that you know because that complexity leads to other problems so one challenge i think we face then and it really to me all this pulls down to is you know what do you do with teep and and things like teep you know how do we make how do we make it what is the right approach to get trust anchors inserts and such into a device without having to apply a whole lot of layer 3 complexity because that that complexity hurts too it can also be um difficult for administrators to handle it adds its own fragility so i'm not saying let's not do this draft you know don't don't get me wrong i'm just saying that"
  },
  {
    "startTime": "00:32:01",
    "text": "um we should you know we should think about you know how how we want to tackle whether we want to tackle these these problems together or apart and it may make sense to tackle them apart because you can you know at least reduce the pain for some group and you're right allen that there are a number of devices that already have some form of connectivity and maybe there's some relief here for them uh you know the the other thing that we have to think about in terms of that relief is um it also may open up attack surfaces that we want to think about too um specifically do you you know do we really want you know the moment you say okay let's have an est server or something like that to handle certificates um you end up thinking about how you have to harden the est server to client requests and if you can put something in between that that that that is already doing some sort of policing uh that has its own value so i'm just saying it's this is a it's a bit of a admire and i'm sure alan that you know in terms of you know what you're doing you're living this something that this this nightmare so i don't want to understate the problem that you're trying to address i think it's a legitimate problem anyway i'm sorry for talking so long yeah tim yeah um tim paulie microsoft i'm alan super in favor of this um it's frustrating even just to connect here it took me five minutes for a ietf i etf um it may make sense in my opinion to scope this to user-centric devices and flows right i think scoping it down to the non-iot use case makes it much easier for a consumer of the spec and i think in theory when some of the work dan's doing and others are doing on iot that could become a parallel document that covers iot i do think they're discreet they can share but i think ultimately it's 2022 and people still can't get on the network in under 30 seconds with their phone or their"
  },
  {
    "startTime": "00:34:02",
    "text": "don't think you have to change much of the dock maybe it's just the scoping in the intro and even the name potentially what what i'd like to do with this uh particular thing is not go for an adoption call right now but have a little bit more discussion on the list on the scoping because i think that would be you know appropriate to make sure we have the right scope um so i i think uh that that's what we should do so take it to the list all right alan yes looks good yeah uh next i think we have dan and dpp is it yeah okay thank you uh next slide my name is dan harkins and uh owen friel and i've been working on this idea of using uh the device provisioning protocol which is it's a wi-fi protocol that solves the onboarding catch-22 where you you need it credentially on the network but you need to get on the network you get a credential it's basically the problem everyone's been talking about uh and it does this by gaining trust in what it calls a bootstrapping key and then it uses this trusted public key to authenticate the device and provision it so we want to leverage that same sort of uh dpp bootstrapping key uh but use it uh with eep so the way we do this is we we glom onto tls authentication uh using rc 8773 uh that defines an external psk which we derive from the pub the trusted bootstrapping key and then we do uh 7250 uh tls authentication with raw public key so the client can prove possession of the corresponding uh private key the the corresponds to the public bootstrap key and then we we have to signal that we're doing this uh using the extensible psk's"
  },
  {
    "startTime": "00:36:00",
    "text": "uh draft so uh next slide please so uh this is what this is the classic tls authentication exchange uh in the the normal font is just normal normal tls the boldface stuff is what's added for dpp and the red boldface is the new stuff so all we're adding that's new is signaling this uh bootstrapping key id other than that it's the same 8773 and 7250 external psk and raw public key authentication uh so next slide please so how this all fits into eep then is uh we want to do this with teep so what what happens is uh identity response the supplicant just says you know tls poke or whatever uh to signal that it wants to do this sort of authentication and then uh the t exchange gets authenticated with with what i just showed you in the previous slide and once teep has been authenticated we can use the pkcs107 exchange that's already in teep to uh to provision a certificate on the supplicant and then the supplicants subsequent connection we'll be using classic tls with the cert so next slide please so uh the graphs in o4 uh it didn't really change much from o3 just some minor editorial changes we do have running code uh and we're looking to get rough consensus okay um if there are uh mohit and bernard mohit first just very quick uh comment about the a773 i think i like that uh rfc and thanks for us for the work uh but it was labor less experimental and at that time there were not many libraries supporting it so i wonder if that status has has changed now i i"
  },
  {
    "startTime": "00:38:01",
    "text": "i'm unaware of the status of that well this is a little experimental but uh you've just heard about one implementation that may be enough to advance that was russ i'm sorry russ i didn't i didn't catch what you said but it's still experimental based on your implementation we may be able to move it ask the guys next year said it's still experimental but we may be able to okay it's i think uh russia broke up a little bit it's still experimental but we may be able to move it beyond experimental based on this case okay well you as the tls working group chair after you call that one yeah well put a lot of hatcho we'll have to discuss that in a tls context but yeah uh bernard one thing uh you mentioned dan is the use of uh an identity response in a way that's actually fairly common but it's never really been standardized so very often in these kind of initial context you want to get the server you want to tell a server you want it you want to do something like you use anonymous or use tls poke or something else with the intention of of getting eliciting a certain response from the server we've never really documented these things uh and it might be a good idea to do it so that at least we get some standardization but i've seen that one quite often i don't know if allen commented that is a good suggestion thank you oh yeah"
  },
  {
    "startTime": "00:40:02",
    "text": "yeah um i'd like to see the strap move forward um it has the benefit of essentially providing an analog function to uh what's what's already available in the wi-fi alliance um for the wired system and it looks uh like a pretty elegant solution actually and um i do think one question that comes up is once this work is well enough along right we probably need to do you know dust off the teep update um and get that going again the only we it can be a lot more narrowly scoped than earlier attempts though um the the good news there is that we've seen a number of the errata verified already uh thanks to um a couple of people working on that yoni and um you know roman who did the verification the last time around and oleg pakar the um the only reason i say we need to open up teep is i think probably we want teep to or or maybe a rev of t to reference this work if we um don't move this forward though we end up with a chicken and egg problem and so i'd really like this to move forward uh yeah one regarding teep uh and referencing that uh can you go back one slide mohit please so one thing that i'm i kind of slyly avoided was the csr attributes tlv doesn't really exist in teep yet and i think it really should uh so yeah i think they're a deep update draft needs to happen and and when we add csr"
  },
  {
    "startTime": "00:42:01",
    "text": "attributes then we can reference this draft as well okay i think um i think there's uh maybe some things to resolve with tls um i don't know if that i'll have to talk with you and talk with other chairs and see if there's if that's a blocking thing for this or not i don't think it is if it's not um i would like to do an adoption call i think for this because it seems like there's a couple people have gotten up and expressed interest and um so is that sound reasonable mohit um yeah i joined the queue again so i am for uh adopting this uh the reason i joined the view was basically as as you as the tls chair as well uh it doesn't have to happen before adoption it can be after adoption to get some like tls eyeballs on this because i okay it could be wrong since i haven't read it in a while and i couldn't follow the slide so closely but h777b is basically combining certificate based authentication with external psk but what this draft is doing is combining external psks with raw public keys there shouldn't be any issues with that but it would be good to have like more dls eyeballs on on this and and that that can happen after adoption there's no i don't know if that would be a blocker but as the co-chair of the lsjo if you could like uh i don't know reach out to the right people to have a look at this so actually the what our previous uh way to do this didn't use uh 873 what we did was we generated a a new uh elliptic curve point"
  },
  {
    "startTime": "00:44:01",
    "text": "using the bootstrapping key and injected that into the tls key schedule and when we brought that to tls uh both uh watson ladd and eric scorla uh said that it was complicated and it required you know a lot of heavy lifting to pry that into into tls and it was easier and better to use 8773 and 7250 so it was actually the you know the mandarins and the tls working group that suggested doing this in the first place yeah okay i think uh let's uh i think we need to move to the next presentation so okay um thank you yeah okay next uh i think we have mailing and eep ibs hello hello okay hi everyone on my linkedin from channel bio i would like a quick introduction for my draft fts ibs again next slide 6 we should be most concerned about use cases currently concise 2 y is used for iot authentication and the other is distance that not support x find their online certificate the goal is to improve the authentication options as for the code we have implemented the prototype in 2020 for our internal internet of things system so far we have received some comments both online and offline as i list on the site sister ross and c again next slide six this is a simple example eccs i used for fts ibs the most important thing is the"
  },
  {
    "startTime": "00:46:03",
    "text": "use of extensions server certificate type and the current certificate type which first defined in rfc7250 to support raw public king and signature algorithm which defined in fc 8446 but new added in ef test merged for signature selection in my draft and we wrote it identify basic nature contents in the certificate and certificate verify fields you'll see ibs based raw public key in ipts does not change the message for roles next slide things people who have not read rfc6507 in detail may not exactly understand how the verification is completed in this example so in on this page i outlined the whole process prerequisite it parameters several sent to cried and the current procedures for verification is more detailed here than uh the draft finally successful signature verification means that this identity has been verified nestlight for this presentation i took a picture for the eccsi the procedure of initialization signature and signature verification is very clear in this procedure it is worth noting that"
  },
  {
    "startTime": "00:48:01",
    "text": "eccsi is only one algorithm of ibs makes the usage raw publications and x 509 certificates it can also be used here you only need to specify the corresponding certificate type such as their client user accessing k4 kite authentication and the server pro ysn 5 8 0 9 certificate for server authentication we hope this will become a one group item thanks any comments just uh maybe for the benefit of those who who haven't read or followed this if i'm not wrong at least this draft requests a separate method type and doesn't use the same method type number for for standard etls1 1.3 so it would be a separative method number saying smoke it but i i think um not get your questions exactly can you uh speak slowly for me again things i'm sure there was actually no question i was just waiting for okay benefit of the audience that this will be a be a separate um method number but maybe now it's time joe if you want to get a sense of the room i'm going to use the show of hands tool and so if you've logged in like you should have into the room thing you should be able to respond"
  },
  {
    "startTime": "00:50:01",
    "text": "to this thing what i'd like to know is if people have uh read this draft or not okay so we have uh i'm gonna end it in five four three two one so i think did it does it show the result somewhere it looked to me like there were about eight people that had read the strap so there are some at least some folks that have read it um 29 participants 21 did not raise hand and eight raised hand so just for the minute taker okay and then um what i'd like to do is maybe i think we should have a a call on the list um since we have people who have read it i think there's um does that sound reasonable to take this take this to the list do an adoption call i guess is there anyone who in the room or online who [Music] who thinks that we should not adopt this yeah would there be any objection to adopting it that people would want to raise now yes i think i think so um maybe i uh we can try"
  },
  {
    "startTime": "00:52:00",
    "text": "adoption for this draft because i think this way will push more people to pay attention to this merced and ibs i think there are many people can help yeah so i think we'll we'll take this to the list okay thank you all right next we have i think yawn with not much time i'm sorry yeah it's okay i'll try to rush through it um yeah my name is jan i'm currently for a masters project looking into uh noob and as part of my my work at the german research and education network i'm also in the eduroam team so i found this very interesting and i have read the draft and tried to implement it and while implementing it i have noticed some things uh about noob that i just written uh in this observations draft you move to the next slide please so the the first observation that i made that uh kind of puzzled me a little bit is uh why use json as the payload encoding i've seen uh some uh communication on the mailing list um uh why this was chosen but i had some problems with implementing it because of the kind of canonicalization problems with the json especially for the for the mac and hoop calculation the status of the server info and peer info was kind of ambiguous for me um because there are some different uh specifications throughout the draft um maybe i read the draft wrong maybe not i'm not exactly sure next slide please um and uh the number of messages exchanged"
  },
  {
    "startTime": "00:54:02",
    "text": "seemed to be a little bit on the high side um so especially the the initial communication where the first message has no information at all and the second message is just for communicating the the pr id and the peer state um and one small editorial net i'm quite new to to the itf so i don't know if this uh justifies an errata the version is never explicitly set to this is version one they're just example values given um coming from that but also noticing that the method itself is very good and i actually like the the design principle i've come up with a new specification eep utter user assisted trust establishment if you can move to the next slide which basically uses the exact same design principles as ibnook does because they are actually quite good from my point of view um but uses sibo as payload encoding i've seen that this was already a discussion item on the lists and um was on the agenda for possible version two of eb noob um c-bar has some advantages over json for example i can have the exact byte strings and don't need to encode them base with base64 and for using integers instead of strings as map keys i have shorter messages and my current specification uses a mac calculation over the whole message so the communication partners do not really need to understand the complete message or all protocol fields because um that would possibly break extendability you can move to the next slide so for the zero zero version of this draft this is a very early draft version"
  },
  {
    "startTime": "00:56:00",
    "text": "i don't know if anyone has read it yet um this is part of my masters project so i will develop it further in the next month i have already made some modifications i'm not exactly sure if i already pushed them to the github repo and i have some completely open questions for example how will i specify the cypher suites my idea was to piggyback on an existing registry for example the cosi elliptic curves registry but then i have the problem with what hash function will i use so these are some of the um open questions right now and uh for now my question to this working group would be is this something that i should continue to work on is there interest here okay i don't think we we have time for questions but certainly uh feel free to contact yan and and there could also be some discussion on the list on this as well um so i'm gonna move to next uh presentation which i think is max uh while i opened the last presentation just uh young i'm obviously interested in the work so we can continue the discussion on the list right i don't think it's max presenting it's uh if you want yeah okay yes so thank you guys and i'm glad that i still have time to present my size and i also saw max join in the chat so feel free to check me max if you want to leave any comments or answer other people's questions so uh today's my presentation is about you know the eep class overview and this is the method uh well a nip method that that's used for um you know secured network's credential management uh next slide please thank you yeah so while we're working um and"
  },
  {
    "startTime": "00:58:00",
    "text": "defining the architecture and also um you know the stack language of you know the sas network and we find that you know automated a credential management is a very important issue as um it may cause user data privacy risks and also the steps of services if misconfigured and meanwhile being a typical sense network there are different types of credentials that may that that need to be uh provisioned and also managed and that includes the user level credentials network and also device levels credentials and those credentials tend to be forgotten and remain to be managed for quite a long time due to the possible operational and also administrative difficulties or the costs and uh meanwhile today's credentials management also requires active configuration such as you know ipa provision fbo just provisioning all the devices and also the service endpoints so uh so because we notice those um um you know the features and challenges of the automated credential management in the sas network we propose leap class as a method and currently the euclid's protocol supports different types of assessed networks already and that includes the world network which is you know the taxes with repair plus and also the wi-fi network and also the 3gbp network and the meanwhile already defined the eep class with the simple provisioning protocol um for the cbrsa network and the documentation number is ts 1003. uh next slide please thank you yeah and here you can see this is just offer you an example uh of where uh the security is provided so between the eep client and also the authenticator we will rely on the max security that could be the nas in the gpp or the bpi plus in dances and meanwhile between authenticator and also the server we will rely on the application layer security and that could be the tls and other types of vpn protocols"
  },
  {
    "startTime": "01:00:00",
    "text": "um next slide please yeah and to just to just give a quick overview of the upgrades so leave class just provides a non-ip-based mechanism to support mythical protocols credential management and it will offer offered the active management and also calculation of the device or the network layer credentials and meanwhile we try to keep the ip class message flow to be simple and like i said if class will just rely on the security of the external communication channels for confidentiality and basically in the eve class protocol we define three phases the first phases is the initial addition phases where both entities will exchange the credential configuration also the information and also the supported version and the protocols and in the provisioning phase both the server and the client will execute the encapsulated protocol such as the simple provisioning protocol for example and the last phase is further validation where the server well validates the ability for the clients to correctly use the uh credentials before the server claims this is a success of the yip class um next slide please thank you yeah and this one this the this diagram just simply offers you how you know the message flow uh between uh you know uh well in industrial network cases and also the world um and also the world network and at the above of the if class that will be the protocol that is encapsulated in the eep class a payload so in the first cases of the three-speed network that will be the spp messages for example and also in the second case that will be the cmp messages for example and next slide these so the next slide just tells you that yeah so this slider just tells you that how the class encapsulate and also decalculate the messages so epcot is"
  },
  {
    "startTime": "01:02:01",
    "text": "leave base so which means that the abstraction layer is the base of the class and meanwhile um the effect server will germinate the yip class messages and it discalculates the payloads of the ep class and then forward the content of the encapsulated protocol to the corresponding provisioning protocols and points and next slide please thank you so uh the current status of leap class is that we already have the ipads core internet draft available at this link and our key focus now is try to offer a separate and independent id drop which is the eep class spp id drive and this new id will just describe how the snpp is is used with the ubclass protocol and this can be used as a template for supporting other protocols encapsulation within class for example the certificate management protocol and um so our goal is to have the initial drafts ready for review and comments and then we will plan to resume our activities within the working group and hopefully we can just you know continue our discussion and and and with uh you know working group at the next coming meeting and we are also currently looking for the collaborations and contributions so if you are interested or if you would like to offer your um points or you know comments or ask any questions please feel free to reach out to us and thank you and that's all for you know deep class presentation thanks okay um i think we're just a bit over time so thank you all for uh attending thanks uh for the presentations everyone i'm sorry next time we'll uh try to get our meeting times a little bit uh more in line with the number of presentations um and we hope to see you either online or in person at the next ietf and we're looking forward to everybody's"
  },
  {
    "startTime": "01:04:00",
    "text": "participation on the list thanks thanks you thanks everyone bye you"
  }
]
