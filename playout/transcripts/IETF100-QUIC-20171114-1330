[
  {
    "startTime": "00:00:04",
    "text": "up of the agenda so let\u0027s go ahead and get started this is quick it\u0027s working can you hear me in the back okay cool thank you thank you Andrew this is quick if you\u0027re not here for quick you\u0027re in the wrong room let\u0027s go ahead and get started this is the note well statement whether this is the first time you\u0027re seeing this or you\u0027ve seen this on a hundred different weeks in a hundred different cities in the world this is important because it\u0027s the intellectual property terms under which we participate here so please do make sure you\u0027re familiar with it you can find it by typing IETF note well into your favorite internet web search engine just as important our participation here we expect it to be professional and productive if you have any problems with something that you feel is harassment or something like that please feel free to talk to your chairs Mars myself or if that\u0027s not comfortable for you we have a team of special people who can you can talk to the on spud team sorry Ombuds team I will provide no perennial in this pronounce that word blue sheets I\u0027ll send around in just a second we have a scribe thank you very much Brian Trammell you are a king amongst men jabber relays can anyone volunteer to relay what\u0027s happening in the room to jabber and vice versa I would necessary anyone I see Patrick McManus thinking about it you don\u0027t know lucky you anyone please thank you very much agenda Bash I\u0027ll get that I\u0027ll do upcoming meetings in a second our agenda today we\u0027re gonna have a hackathon report from ekor Martin is going to talk about quicken variants we\u0027re gonna talk about a message that we had on the mailing list a little while ago about the working group status and scope and our schedule then Martin will come back to give us an editor\u0027s update and then finally we\u0027ll have a light and frothy discussion about this bin it value and evaluation design team from Ted then tomorrow we\u0027re gonna go in deep into loss recovery with Ian John is going to talk about connection migration we\u0027ll discuss what the third implementation draft is and finally if we have time we\u0027ll get to some open issues any bashing on the agenda lovely so real quick this is our homepage I\u0027ll make it bigger there this is can you see that in the back maybe okay we have an upcoming interim it\u0027s in Melbourne Australia in late January you register online from the arrangements page here there we go oh yeah I can\u0027t see it down there thank you and we have I think "
  },
  {
    "startTime": "00:03:06",
    "text": "around 20 to 25 people registered right now I wanted to bring this up because we\u0027re closing registration early because the holidays that closes on the 8th of December so if you haven\u0027t decided to decide soon if you\u0027re coming I\u0027ll also mention it as we have before that hotels around there may be getting more expensive because it\u0027s during a major event so if you haven\u0027t booked a hotel you should get to that as soon as you possibly can and just to give some people some visibility we do anticipate meeting in London at the next ITF at ITF 101 and we\u0027ve been starting to talk about an interim meeting after that and right now we\u0027re penciling in probably early June or late May early June in Europe somewhere so that\u0027s still TBD but that\u0027s our current thinking about the meeting schedule any questions you\u0027re not coming up for a question Bob are you ok everyone so let\u0027s go on hackathon and interrupt a kurd you want to talk briefly about what happened during the hackathon yeah so pile of us got together some physically some virtually to try to interrupt with draft oh seven in in in in classic form we already a draft oh eight which has changed quite a bit but we do the seven um so this diagram shows the what sort of worked and what didn\u0027t things that are agree are good things that are not in green or not as good things that are you know this HDC code tells you kind of how much actually works the good news is a lot of green the bad news is HD and see if I\u0027m actually covers much the specification so but still it\u0027s a fair amount of progress and it was you know we\u0027re starting I think we\u0027re showing again our rhythm of you moving I work with each other and get that stuff working on the I guess the thing I would say that um so what these means specifically is I\u0027m most people can handshake with each other established native connection and move some HTTP over it hup 0.9 for those who are not paying attention and sometimes we can get a close though people a little unclear on what exactly the test for close works is in those circumstances so I think the two gaps that I\u0027ve been identifying I think other people perhaps have two are on into in terms of like our readiness test our first of all on having clear standards for what success in any given test means as I say it\u0027s kind of obvious I mean it\u0027s obvious of you handshake successfully but even that\u0027s not complete and um you know is one day to channel the ten dated channels if big files the small files um no one has the answer there\u0027s questions Wow the um and you know what is closed mean so I think as we going into a Melbourne um I would suggest they would be good first try to recruit some volunteers who\u0027d be willing to actually write down like we\u0027re also we detailed with us these things are um so that we can actually know what success and failure "
  },
  {
    "startTime": "00:06:06",
    "text": "means on the second gap is sort of a lack of clear continuous integration and continuous testing and also you know what abate in Rob testing so there\u0027s a lot of hey can you make your server work so I can test against it where\u0027s your endpoint oh your server seems to be down I\u0027m not gonna send you a client initial and nobody answers is that because you\u0027re down or is exceeding like my client initial um so we\u0027re slowly evolving you\u0027re on lauren had a conversation over this meeting about trying to put together an actual framework that people could like fit into and you know test their own stuff and other test other people\u0027s stuff on maybe they can run on though machines maybe they could run it in docker and make a run in the cloud it\u0027s not quite clear on anybody who\u0027s been interested in that effort and we like to volunteer some effort um please do I imagine otherwise what happen is we\u0027ll have something not very good together and you\u0027ll kind of be stuck with it or not um so um anybody who\u0027d like to spend some time on that um be appreciated any questions for the things people wanted to bring up about the hackathon or interrupts in general like I said why green here so this is pretty good news um yeah the handshake everybody\u0027s really up a handshake nailed and unless you have the data thing working so that\u0027s actually a Wapato that eastery it\u0027s a lot of green which is nice thank you hmm okay let\u0027s move on then martin is going to talk for a little while about this concept we have been calling invariants and I won\u0027t describe what it is because I don\u0027t want to steal any of his slides from him if I can get it onto the screen that\u0027s kind of good uh yeah I assume you all know who I am next right so um we\u0027ve made something we would attempt in the in the draft at the moment to document the things that are quick and I said quick in the generic sense not quick in the sense of quick version one that word finding that has HTTP running on it I mean quick in the sense that is as much as possible in mutable over time we do really poorly at those sorts of things generally and we find that they need a great deal of attention and effort in order to actually work over longer periods of time but the goal here is to work out the things that won\u0027t change in future versions the things that we\u0027re going to commit to and so part of the point of this presentation is to simply see if the room agrees particularly on the guiding principles that I\u0027ve outlined here and and this is pretty simple it is can you negotiate the version of quick that you want to talk with the other side and in defense of that making sure that middle "
  },
  {
    "startTime": "00:09:09",
    "text": "boxes don\u0027t interfere with that to the extent that they need to do their jobs and the primary primary function that we\u0027ve identified for the for that being routing the packets to the right place as long as the middle box and continue to route the packets to the right place we are happy if we do not provide something that\u0027s invariant that will mean that the packet will need that the middle box will need to know about the specific version of quick that we\u0027re talking we don\u0027t want that to happen because that will mean that we won\u0027t be able to deploy a new version of quick because of the way that the endpoints in the middle boxes have nests it don\u0027t necessarily have alignment in terms of upgrade schedules and things like that currently the idea is that anything that doesn\u0027t contribute towards these goals is subject to change we could decide that we do want to randomize the initial packet number or we could sorry in in a given version we could we could decide to do that and we could all start using that version and therefore you would not see a packet number of 0 or 1 ever at the start of a connection we could decide to do any number of things as long as they fit within this framework so just so I clarifying question young when you version of this context we\u0027re talking about quick 1 over square - oh not version 5 draft 0-5 or scratch your assets correct so we\u0027re talking about weight we can change anything up into the point that we ship quick that\u0027s right okay including these things but I would like to get to the point where we have at least a reasonable level of agreement about the principles and then hopefully if we can agree on the principles we can agree on the implementation of those principles and we change our minds too often between now and the end of this process because changing our minds on this particular aspect is painful very painful particularly when people start talking about actually deploying the stuff that we\u0027re talking about building there is a hope that certain people will put out reasonable-sized experiments and reasonable scale with the versions of quick that we\u0027re going to be defining prior to publication of RFC s and if they\u0027re going to do that they need to have at least some degree of certainty about these things does anyone want to comment on these things I think there\u0027s a probably good point to pause and say have I missed something major do I have this wrong and Brian is going to say that I\u0027ve got everything wrong no this is pretty hyper and trammel and I might yeah I am this is pretty reasonable um I think this is the right I think this is the right definition of invariance I will note that there is a lot of stuff hiding behind be correct and you can put a little bit of digging on that okay I will I will come back to the mic after we\u0027ve dug right there\u0027s some digging to "
  },
  {
    "startTime": "00:12:10",
    "text": "do there\u0027s some more digging to be done later on I\u0027m gonna try to carve out what-what digging we\u0027ve done as opposed to what digging we will do as we go out but yes all right Ian\u0027s wet google yeah this seems excellent and and thank you for writing this down there\u0027s there\u0027s also a little bit behind a particularly in terms of in reality they\u0027re going to be like basically like things are going to ossify ish on the handshake packets in some way and I don\u0027t know if there\u0027s anything we can do to prevent that but I think the the short-form packets I think we can do something with that the long-form packets I think we\u0027re going to end up with some issues potentially unless you have some clever solution to it not yeah so one of the things I want to do was get to the point that we agree on the principle and then based on that we can do some things to defend against the sorts of ossification that we have you had some ideas where flooded them around those are reasonable ideas and we can work within this framework on that I hope crossed my fingers yeah I\u0027m just gonna interject really quickly it\u0027s a large equity room so if you\u0027re speaking please make sure you\u0027re very close to the microphone as I\u0027m trying to do now so I mean very close to the mic inside you like that yes okay good so I am a meal and is a multipass part of be to come again on multi path not a part of a B or C so um multi path is an interesting one we haven\u0027t really talked a whole lot about what multi path might do to the wire image but the my expectation at least is that multi path is part of B to the extent that it needs to be part of B and if that means that we need to do is in talking about multi path in order to resolve this question I\u0027m not certain supposing that but maybe we can defer that question the whole thing will be independent of the version if you have multi path that would be the hot yes yes because if you have meaty patterns which the routing is going to change regarding the multi path issues the people who have the draft or multi path are aware of that there might be ways with the current wire image how to do this so I guess this could be this could be this over in this way please I really can\u0027t here up here I\u0027m sorry I need to kiss the microphone while you\u0027re speaking the people who would have the multi path quick draft are aware of alternative how to do it with the current wire image with the current invariants excellent Mike Bishop Akamai I will also point out that even though it may not be obvious "
  },
  {
    "startTime": "00:15:10",
    "text": "that it\u0027s per to be stateless reset is also packaged in here whether that\u0027s B or it\u0027s a separate item because stateless reset implies you don\u0027t know the version so yes stateless reset is an interesting one here the the current design more or less assumes that it is version dependent but there are aspects of this invariant header that mean that it\u0027s not possible for that to be true so we need to do some a little bit of work around that yes sorry I\u0027m vertically challenged Bret Jordan I think this is the right level of abstraction for right now given our current state so I I support that Ronni of it so will this cause any more limitation on what you can do in future version in terms of the header yes absolutely and that is why we need to get it almost right because at the moment the only thing I mean the version is the last place where we need to have supported in all versions but that means that we cannot change the header it enlarge the header do anything because if you want to do it this way no it\u0027s not true and so the location of the version field is necessary for version negotiation yeah but we can check we can put other things in the header after that version so how will it work if you if you do if to do it independent of the version it means that you need also to be able to understand previous versions in order to not start at your previous header structure so you need to as long as the version negotiation aspect of the protocol continues to work across versions once you\u0027ve agreed upon a version you can do whatever you what have you please the question I was asking do require that if I support the version in I also have to support all version below down no absolutely not and so so that break here because I don\u0027t know what is I mean if let\u0027s say that currently the headers they had to stop at position 10 and now we make the header position 12 and I only support this version that has only 12 I think is the word routing I think mark means routing two words on and Martin sorry means routing towards an endpoint like in a data center while I think you are talking about routing inside a network yeah I mean if you understand that at all but that\u0027s not what Martin is talking about Martin is talking about at a at a server farm how do you consistently route to the same endpoint not in the network and suddenly there is a different route the words are in either route it there\u0027s no problem it doesn\u0027t need to understand the message that\u0027s routing not understanding keep in mind that we do have IP addresses and UDP port numbers are listening so Brian "
  },
  {
    "startTime": "00:18:14",
    "text": "Trammell I think that Lars is clarification is not a clarification I think that it\u0027s modification I think that that like routing of quick packets independent of version means weird of it packets go whether that\u0027s at a data center boundary or at some random point in the network I think trying to say we only care about data center boundaries is an excellent way to break shit um and I think I mean we have you know the closer you get to the edge of the network obviously the more problematic this becomes but this is what I mean by if there\u0027s a lot of stop pining mind eat yeah I don\u0027t think we need to necessarily rathole on this particular choice of word in fact it was that that was all I wanted all I wanted to say with this is we need to make sure the packets when they\u0027re sent end up in the same place well it may be not even the same place the intended destination without any sort of possibility of ambiguity or version dependent behavior now there may be version dependent behavior that\u0027s added on top of it but we wouldn\u0027t be able to rely on that that\u0027s all hi Colin Perkins so what you just said I absolutely agree with yeah I think Lars his clarification did not clarify because he I if we are only considering routing to servers that happen to be you know in a data center or somewhere that I think we have a problem yes yeah I think there is something we need to consider an IVA rule in scope or explicitly rule out of scope but we should have the discussion about that yeah let us put Lars example as an example jump Linux I mean well I mean one thing these are all inherently things that are outside the encryption right anything inside the encryption is not invariant yes I believe that is currently true so I mean I think would have to be true there\u0027s the things you\u0027re talking about here are all things that would not have the would not be part of the crypto anyway so I think you know that might make it easier to figure out if it\u0027s concur up that it\u0027s it\u0027s not an invariant so don\u0027t even think about it actually the set of invariants that we have is actually considerably less than the set of things that are actually that are not protected by encryption we don\u0027t make any promises about packet numbers for instance and we would continue to make no promises of our packet numbers maybe we should move on I just understand that but do you really what you mean is just that routing should be done by IP and UDP header \u0027the only no no absolutely not the point is that it should be possible for someone to mark a packet using the bits that a version independent in a way that is consistent "
  },
  {
    "startTime": "00:21:14",
    "text": "across versions that ends up in the same in the intended destination so if you\u0027re talking about using connection IDs that\u0027s absolutely part of this and connection idea is actually part of the invariants that are on the next slide when someone take me to that so that we can start talking about concrete things and not in the abstract so do you guys have clarifying questions I was going to respond to that very briefly quickly sure the the point here is if you have if you use connection IDs for version one then you can continue using connection IDs for version two three four five six it\u0027s not to say that you can\u0027t use IP address is important numbers it\u0027s not to say that you must use them it\u0027s independent of that that\u0027s our independence is right I actually got up to talk about connection IDs because I don\u0027t think they\u0027re neither a nor B strictly speaking require them yet I peek to help you have those into the mic so yet the connection that I don\u0027t think I required by Fever a nor B yet you have them as I saw on your next slide so I\u0027m wondering in another guiding principle is the risk of opening up this rathole what is it is another one of these environments what we\u0027re going to allow say the NAT boxes or the middle boxes to see as an invariant and guarantee that will never change and connection ID would fall in that that is essentially what we\u0027re saying here yes I mean do you want to smooth this down a little bit more but it\u0027s I think we\u0027re angels on the head of a pin at this point yeah okay yeah I\u0027m not sure it is you\u0027re looking at funny mark I\u0027m just looking I\u0027m not sure it is just like angels the head of a pin I mean the UM so the there\u0027s this right as you say there\u0027s routing in the data center and there\u0027s writing of people who do not have relationship with and so the UM for the purpose of writing in the data center the connection ID can move around between versions because you only set versions you know and you know how to find a connection ID but look at the version number for purposes of routing it for like middle book like matte box is on the clients network that is not the case so I think it probably does need to be it may be inconvenient to do a conditional lookup but it\u0027s not impossible um and so um so but but the UM so there\u0027s I think the the thing that is important to recognize is the um there are things which have to be which have which require which it was required for cooperating people to be able to interact with each other and the things were required for non cooperating people they talk to each other and you\u0027re and so I mean a is only about cooperating people and B apparently you think is about non cooperating people as well that is a good that is a good thing to draw out I don\u0027t actually know that we\u0027ve properly explored that particular aspect of the writer question I mean just like I saw you in twitch somebody like to be feel like I mean they like always within scope in these discussions when someone opposes version 3 to say that would be incredibly inconvenient "
  },
  {
    "startTime": "00:24:14",
    "text": "for me please don\u0027t do it but that\u0027s different from the version negotiation which basically is a practical matter once we agree when first year she didn\u0027t version goes like it\u0027s getting almost a pause it\u0027s getting more much pain in the ass for everybody to change the version right I\u0027m you\u0027re gonna be like in like hash finger position like that right so you know that\u0027s that\u0027s what so I think that it\u0027s important to sing recruiting things that we think are basic principles of variance and things that we just like hard to change yeah so so just to give folks some context we asked Martin to give this presentation because we think it\u0027s important to start the conversation about documenting our invariants we\u0027re not going to finish that conversation today and it\u0027s great to hear some engagement on it but but let\u0027s get through martin slides and figure out what our next steps are as a group rather than trying to nail down exactly the principles and exactly what the invariants are today yeah i\u0027m gonna try to knock those out a little bit quicker now okay next this is what we currently have in the document we have a section that says these are the things that won\u0027t change between versions and i believe this to be a fairly accurate translation of the principles that were described on the previous slide it essentially says anything you need in order to do a version negotiation anything you need to do to identify if the connection idea is present where it is and that is just about it nothing more nothing less Ben Schwartz MTU MTU how that is not guaranteed and in fact there\u0027s there\u0027s text on that and the initial the client initial has it has a size restriction and in fact that is how you identify a potential initial packet from a version that you don\u0027t understand is you use size so there\u0027s some fudging around that but we do not guarantee that the 1200 is actually an invariant Brian Trammell the semantics of Coe points one through five and the long header type are also invariant I don\u0027t believe in my deck commitment can you say that again we have not made that commitment okay um that commitment will be made for you that was that was two ends point before and we may do some things to make sure that those particular code points I\u0027m not the only ones that people see in the particular circumstances you\u0027re talking of that that seems aspirational to me it\u0027s a fairly simple techniques you can use but so I definitely think like greasing we can make sure the other code points are still usable but I think Brian to Brian\u0027s point like we\u0027re gonna be stuck with one through five unless like someone comes up with something like stupidly clever that I can\u0027t think of and I\u0027m not even sure it\u0027s worth trying to fix that problem anyway but "
  },
  {
    "startTime": "00:27:14",
    "text": "it\u0027s not a big we don\u0027t make here promise I realized that the ossification problem it happens and it exists and and things do sort of start relying on things that we inadvertently hand out I mean I guess I\u0027m actually surprised to hear people think that this is difficult we just you know we just make the we all 0 and we stuff the actual value inside the inside the encryption battery with huge crazy last bunch of created like two weeks ago so unless no that\u0027s not that\u0027s not a terrible idea I mean like I don\u0027t mean like on I say I\u0027m the five he\u0027s in before yeah did you program them value in the front and then yeah right version number we put breakpoints in the first few pockets or the breakpoints are going to be put in for us if we put the breakpoints where we think they\u0027re going to be then we know where they are if we don\u0027t then they we\u0027re not going we\u0027re going to discover where they are that seems to remain a poor ass better aspirational as far as I\u0027m concerned Jana Inger I don\u0027t I think the point of this is to say here are the things that we won\u0027t change what you\u0027re talking about are the things that might get ossified right there\u0027s academic questions there\u0027s a pretty big gap between those two things and I think it\u0027s important to recognize that this is simply saying across quick versions we will not change these things there might be more things that we decide not to change in the future because they\u0027re inconvenient to any number of people and that\u0027s fine right this is the minimum set so just want to remind people this is the second technical slide of the session and we are half an hour into it so it\u0027s a good conversation but you know we do have an agenda Donovan just one : this is just a location not the semantics of those fields no semantics not the values another page in fact we\u0027re not committing to sending the same connection ID on every packet from the same client we\u0027re not committing to sending setting the packet number in monotone Oh interesting you can rename the to say you decide that election you\u0027ll call it the something else they\u0027ve different semantics you can do that different semantics are possible yes and and I would suggest it would simplify the discussion if we can constrain this to just what our intent is about what is invariant and and the discussion of well what goes inside a crypto and what gets greased is a separable discussion all right let\u0027s move on that\u0027s right I wanted to talk about this stuff I did they slide a few weeks ago so the big question that I think we\u0027ve we\u0027ve got here well there\u0027s two big questions that we that I think we needed to discuss in this context first one being how does have as quick sort of multiplex with other things that has been raised as an issue and I I know that we closed this previously but I think there was a bit preemptory and the other one is what other commitments might we make in light of the demands that middleboxes impose upon us and we\u0027ve got a later discussion on that and "
  },
  {
    "startTime": "00:30:15",
    "text": "I\u0027m not going to talk about that now if that that work produces some things that we need to commit to in terms of this but then we\u0027ll add them but I\u0027m not going to talk about that right now I we\u0027ll talk about the multiplexing stuff now : do you want to talk about that now because I\u0027ve got a number of slides on the topic I actually like to talk about the formulation of the problem you have fear so emulation of the problem okay so so compact inside sorry is this better yeah so I think you\u0027re so I don\u0027t think this affects the latest slides but I think it affects the perhaps importance to which you put on the solution I think that the characterization of this is how do how do we do multiplex quick and RTP is not to me the right way of looking at this I think the problem we are that I have been trying to raise with with this is how do we run quick in a peer-to-peer manner which means we then need to do multiplex done and if we can also do multiplex RTP and things like that that\u0027s a bonus but the key thing is done so we can run peer-to-peer okay and characterizing that\u0027s there may be like CP is a different problem than how do we run pit appear right and so it\u0027s done may be may be easy if as I could point out but um yes that is a much better formulation in the one I had here but the the question that was raised was multiplexing and I think that\u0027s a much better way of approaching it which is saying if we want to use quick for things like peer-to-peer which have a number of different existing solutions in place how do we make sure the quick fits in with the things that are that already exist there without causing too much disruption for those people yes we could run RTP within quick we cannot run stun and the pits pissed off with him quick we have to do that at the level of yeah at the exposed levels it was a it would be seriously disruptive to put stun inside of quick I don\u0027t quite know how to do that it would really quite increase our workload right all right next slide please okay people want to use a quick for things like peer-to-peer as a practical matter that means multiplexing or at least finding some way for these protocols to coexist this is not really talking about using quick for RTP putting RTP on the inside as has been explored in a draft this is really talking about the work that sexually bernard did and peter i think it was in a bt core and and one of the fundamental problems that we have here is that the the multiplexing schemes that are in use today rely on having unique values for the first octet quick assumes that it has use of all of "
  },
  {
    "startTime": "00:33:15",
    "text": "the values of the first octet and so we have something of attention there next so option number one we make the observation that all of these protocols use crypto in one form or other all these packets are authenticated in some way if that packet fails authentication for protocol one then try it with protocol two if it fails authentication with protocol to try it with protocol three this is possible this shows that is possible to multiplex off authenticated protocols of any form using any format using any values in the first octet it sucks next you have a question anyone but not go ahead well my question was out about actually about option two not about this option one which I agree sucks but next place that\u0027s that\u0027s good the question so the draft that Bernard wrote actually suggests that we change our invariants and we commit to providing the first two bits of the first octet as one and that would conveniently place quick in the bucket that\u0027s currently unoccupied the final quarter of the of the space and then we could very easily identify quick as distinct from SRTP and turn channels and ET lesson or these other protocols that people run altogether apparently have some questions about that if we do that we commit to that now we make an invariant and we make a promise that we\u0027re not going to use any of the other values on that first octet and so this is why I think we need to discuss this because this was one of the options that that draft put forward and I think it would be responsible of us to actually engage with this particular suggestion and make a decision about it : all right : Perkins um so that\u0027s one option yes the other options are to pick some subset of these code points who wish to we could decide that we don\u0027t we only wish to avoid collisions were stunned for example or who\u0027s that RTP Oh with which we have a subset of this we feel like so it doesn\u0027t necessarily have to be right those two bits yeah something along that that line would be would be fine Ronnie often what roles we with that is that we have eight bits in the first byte and I think we already also talking about spin bit and there are other uses for bits in this by so unless we have a 32 bits by then I don\u0027t think a byte is enough for the future in order to allow for each one for each of these flags so one option is to extend the first byte two bytes maybe it would be better but otherwise I see a problem with allocating two bits from from those and agree this is this is one of the major drawbacks from this is that were it we don\u0027t have that many bits and we "
  },
  {
    "startTime": "00:36:17",
    "text": "have been talking about using them in various ways Decker suggestion is actually an interesting one because it means that we don\u0027t have that problem but we\u0027ve been talking about using these bits in various ways and giving away a very large portion this space means that we have a lot less flexibility in how we approach it that\u0027s the downside of this sort of approach dispenser mr. Dawkins as a curious individual I think at this point what\u0027s your level of confidence that that\u0027s the set of protocols that should be access to likes with quick we had this discussion on the AVT core list I think recently we have good so the multiplexing scheme that\u0027s been used in peer-to-peer is generously a happy accident more than anything else and it just so happened that the protocols tended not to collide and some of the later ones that came along we\u0027re officially actually engineered to fit within that scheme specifically because of the but I talked about turn-turn channels and rtcp has they\u0027ve made some specific design decisions to keep on using this thing but ultimate originally this was a happy accident and I don\u0027t think that it represents a good architectural basis for these sorts of things to simply say well we continue to fit into the into increasingly narrow spaces within this first octet I don\u0027t think that\u0027s that\u0027s a sustainable approach particularly since you know we\u0027re already finding that the space is running down pretty hard if you\u0027ve got an option 3l sit down there\u0027s there\u0027s an option three night in the queue let\u0027s do burn our first let\u0027s say burn out yeah you can I see option three and then I\u0027ll make my comment yeah I would encourage you to do that this is my comment on option two is that aside from the problems that cause us for the quick header it also allocates all of the remaining code points to quick so if you believe it\u0027s possible it could be something else needing a code point and that\u0027s a problem from the RFC 79-83 side as well yeah there\u0027s there\u0027s some tiny little slices left but it basically makes the rest of the rest of the space unusable right it\u0027s a huge slab and and we don\u0027t like it because there\u0027s not enough space for us and I\u0027m sure that anyone using this scheme would not like it because they\u0027re just not that many slots left can we rule that option too I think we\u0027re moving on to option 3 and I put the bad options first guys are these clarifying questions okay I want to see three and then I I have an option of a question or comment about okay I don\u0027t want to waste our time so the other thing is in the peer-to-peer case you can spend that bite and take just one value and then burn that you know scrub that bite throw it away and then the rest of the packet is quick that\u0027s another option fairly "
  },
  {
    "startTime": "00:39:19",
    "text": "similar the last one uses less of the space gives us control over the entire octet the people in the peer-to-peer land they spent one extra octet per quick packet that\u0027s in next flight please this is a more convoluted one that was in in the draft and this is another option so the observation here is that long packets are only really used during the handshake and during the handshake you\u0027re not going to be doing SRTP necessarily depending on whether you have well well number of observations quick provides the same sort of services of detail s it has a terrorist connection it can be used for generating keys for SRTP so you could define something like quick SRTP rather than detail SS SRTP you need for DTLS is greatly diminished and you end up with something like this where you say that long packets are only used during the handshake the long packets are the ones that are in that latter half they never appear at the same time as RTP so you can distinguish them temporarily as opposed to by number and the short packets collide with with stun but you don\u0027t see that many stunts packets and they\u0027re pretty easy to identify based on the magic cookie that\u0027s in the front of them or the message integrity thing or the fingerprint thing there\u0027s any number of ways you there\u0027s like four different ways that you can identify a stun packet as being unique uniquely stun right and there\u0027s only the first four of them right we could avoid those first for it if it came down to that as well we just add five to our to our short header types and problem solved there\u0027s some various ways in which I don\u0027t think that\u0027s particularly ideal turn channels I\u0027ve got to admit I really do not understand 79-83 on that point so we\u0027ll just call them collateral and move on next slide sorry you think about where they used and I don\u0027t understand why you would need to do marks them look quick so quick cursor to be fucking s s s s RT p you don\u0027t have any problem during the handshake for stun and quick you do have a problem between stun and the short packets for quick if you\u0027re using stun for consent freshness so you have to rely on one of the one of the 500 ways in which stun packets uniquely identify themselves in order to distinguish them from from quick or shove quicker side [Music] quick short packets and SRTP don\u0027t collide someone\u0027s who actually have the handshake out of the way there\u0027s no risk that those two would ever collide and you have a D maxing scheme that is a little more complex than than the existing one but maybe not too awful I "
  },
  {
    "startTime": "00:42:20",
    "text": "have more slides and I\u0027m sure people are gonna want to like tell me that I\u0027m terrible and I\u0027ve got terrible ideas and I\u0027m a bad person I was gonna make another suggestion but now that I\u0027ve seen this this is fine we can do this let\u0027s let Martin get through slides and then we can drain the queue how\u0027s that I have another slide real quick as a comment from Victor which I don\u0027t on Java saying turn channels can only happen after you negotiate session vs done they don\u0027t a curve during the handshake they are negotiated via full stun packets correct Victor they\u0027re negotiated with turn servers you don\u0027t exchange the quick with the turn server I would hope but that\u0027s why that\u0027s why the WTF so the the the other option and one that I kind of like is well you define a new quick version that has all the properties that you want and problem solved maybe the other thing maybe you could do something that\u0027s substantially similar to the sort of quick that we\u0027re defining today but a new version of quick can do just about anything and we\u0027re not making any commitments about the type fields in the in the first octet so you can define type fields that are friendly to the peer-to-peer traffic that you actually want to exchange and that\u0027s the last one I have I think there might be another slide but I don\u0027t know oh yes we can talk about this multiplexing thing for a little longer I think but should try to keep it tight so yeah when they\u0027re I guess two discussions here one is about the multiplexing and the other is about the overall concept of invariants and I want to make sure we don\u0027t lose the letter due to a discussion I\u0027ve discussed on the floor so um before before we get back into the discussion on the multiplexing thing the point of having the multiplexing discussion is to make the people who want to do this satisfied that they have enough options available to them that the invariants that we have have not backed them into a corner or we conclude that our own variants aren\u0027t necessarily generous enough and we need to make some additional promises so that those use cases are properly handled and so I would like to hear from people whether they think we need to commit to further things or whether we can get get by with what we have in I was gonna say I\u0027d like I think this is a great example of your invariance from a personal perspective I am happy enough saying we can do for for now and do five we need you but I think the example of five it is an excellent example of why we can totally change everything with a version as long as it fits within the invariance and it certainly gives us enough freedom to solve problems including but not limited to this if for some reason we came up with some food protocol in the future that like for some reason just couldn\u0027t change its locations and we need to interoperate with it and I think the version bump gives us a heck of a lot of flexibility so I think this is an excellent example and yeah let\u0027s do something of or the nature of four and five from a personal perspective yeah and I point out the option one it "
  },
  {
    "startTime": "00:45:20",
    "text": "remains the safety net please remember to be close to the mic gen-i younger I just want to point to the chairs that the other Martin walked up closer which is sorry Oh closer Jana Inger I I definitely think that we are that I agree with you on the invariance I think that the invariants are a oh my god I\u0027m gonna be kissing this mic no but this is this is a big actually hear you yeah sorry you you need to be you need to be doing also for us to hear you okay I\u0027m sorry to the people behind me so III think we have that thing this is great thank you for putting this together and and I think the medians are I think they have the right invariants I want to talk about the multiplexing option very briefly though what I so I\u0027m going back to what colin pointed out earlier and in in the context of something else which is that you do not as it is have an exhaustive list of all the different conflicts we can have even with the list that you have generated there that is not in practice the conflict that we will see on the wire there are protocols that we haven\u0027t sanitized here example RT MFP there are plenty of others that we will conflict with on bite one and we\u0027re going to have to deal with it when that happens because the list is not going to be exhaustive and because you\u0027re going to look at every protocol and go is this really used my sense of instead of trying to do an exhaustive match of which protocols we or exhaust a match of all protocols and making sure we\u0027re in conflict with them I it may be a most scalable approach to look at stun and go or anything and go is this something we want in draft one or is this something that we want to make sure that we avoid and draft in in version one for instance in this case we can agree that perhaps agree that stun is something we want to interoperate with if we want to interoperate with Artie RTP not interoperate if you want to share space with RTP then define something and that something is either RTP inside of a shim or quick inside of our deviation or whatever it is but we have a shim and we define it later because I think what we need to know really right now is simply define the one that we know that we want to coexist with we can\u0027t exhaustively coexist with everything else yeah so I think the reason this is particularly important is that we have people actively looking at this particular set of protocols and it\u0027s used with quick and I think that we\u0027d be doing that them a disservice by simply saying sorted out for yourselves so I want to make sure that we deal with this properly but I think it\u0027s that I tend to talk about it for sure but that\u0027s my opinion would be that we we look at don\u0027t need that we work on trying to make the things "
  },
  {
    "startTime": "00:48:22",
    "text": "invariant that we know we need to interrupt that did we need to work with on bite one and there I saw them the ones which we are not sure about we leave it to the future so kind of close to cue after Spencer and after Magnus we\u0027re going to take Martin and Bernard from remote land Hank : Tom Perkins a couple of small points and then I guess a follow-on to Jonah\u0027s comment and so thinking of the shim I believe that only works if it\u0027s either always there or it\u0027s greased otherwise people will ossify around it\u0027s not being present sometimes the question is whether or not the peer to peer use case sees similar sorts of yeah you you may be right in the in the ossification sense yes given that quick is going to look a lot like the peer to peer usage of quick and peer to peer use of quick and client-server use of quick look the same from the pond line right oh right yes and so that makes it very difficult for us yes yes option for I think picking a subset of things to avoid conflicts with probably makes sense I\u0027m not entirely convinced you can demultiplex these in quite the way you specify but yeah Stroman yeah yeah I think that the key point is that we need to think about what we need to lock down to support the use cases we want for quick and as Jenna says we\u0027re never going to avoid all the other protocols yeah there\u0027s always going to be something that conflicts and very much think that that the essential thing here is to enable peer-to-peer use of quick because I think we\u0027re gonna want to do that and since I really don\u0027t want to reinvent stun I think that means we have to avoid the stun packets and specify very clearly this is how you do multiplex quick and stun and if you\u0027re building a middle box that looks a quick make sure you you understand these stun packet types as well and let it through I have a solution for that that I\u0027ll share later it\u0027s actually pretty elegant so we\u0027ll say I mean the simple one may just be to say well we avoid packets i0 avoid the zero to free in the first op so now we invert the connection ID bit think about it for a bit but we need to clearly specify a simple way of demultiplexing them we move on a little bit so we are its behind schedule right now okay Magnus resident so I want to explain to turn channels pioneer because in standardized usage it\u0027s become enough to run from one single base including "
  },
  {
    "startTime": "00:51:23",
    "text": "turn to the turn servers which I mean bases down to the turn server and setting up the channels and then you have it all though going directly towards the peers for the different options through other addresses they pair candidates that\u0027s why but it\u0027s intense you could actually run the turn turn shot tunneling is so to say of the protocol across another source port from your localhost that will be possibility but it\u0027s it\u0027s not how it\u0027s been used so that\u0027s why the turn channels included in the table so okay yeah I\u0027m not sure that I understood about that but I don\u0027t think it\u0027s particularly relevant to the dermapen do you have an opinion on the question at hand let\u0027s take it offline so it seems like a deal yeah but I haven\u0027t strongly made up my mind self if it\u0027s important not for the touch channels but I think it\u0027s done basic is it\u0027s the most important here we can avoid stun if it comes to that yeah let\u0027s move on yeah the other other Martin from f5 networks just one clarifying question on for option 5 you mentioned that the that we weren\u0027t we weren\u0027t we weren\u0027t locked into bits in in the flags bite but I thought when you talk about invariance we were actually going to take the con ID bit and maybe one other yeah so the the the first bit in the first octet along the long form bit yeah the in the short form packet we commit to the connection ID bit yes and we always convince in a long form a bit yes that\u0027s right so the it\u0027s it\u0027s the one and a half bit so what have you that we\u0027re actually committing to from that octet yes you\u0027re committing to those and you could still work around that and with enough flexibility to make option 5 work we can do that we can make some tweaks now that would make that even easier perhaps for this particular use case but yes okay thank you okay so next remote and held I\u0027m so sorry but the lot of the queues are closed thank you yeah this is Bernard just a question about option 5 is your proposal Martin to move the version field up no no okay the version field could stay where it is so unless we believe it been it would be necessary now to move the version field we wouldn\u0027t be moving the version field yeah cuz in a number of protocols the version field comes first because it allows you to change everything with a version you basically look at that and "
  },
  {
    "startTime": "00:54:24",
    "text": "then you could you know change the entire layout if you wanted to with the new version but I gather here there\u0027s it\u0027s well because but the problem is you still you\u0027re kind of committed to certain aspects based on the long header and short header but I guess my question was whether how much freedom you really have to move the version field around and say put it first yeah so we need the connection whatever we do the version field basically has to remain in the same at the same place rainy weather yeah what I mean other protocols have chosen to put the version field right up front but that\u0027s a choice that they make and we\u0027ve chosen differently in this case but we\u0027re still basically break your routing based on connection they did the ones that you had in the first line well exactly is every to Ronnies point here is that we have preferred to put the things that we use for things like routing right up front instead of things that are used relatively infrequently like the version but we still have to commit to its position sorry yeah just only the long-haul it will break the routing because it has to be version independent anyway I don\u0027t understand is there a particular point there well it was just that you could essentially if you were able to move a version field or connection ID or something else you could combine that with the shimmer approach essentially you know if you had the space to guarantee that you know an octet would have a given value and the version field looks like the best candidate for that because it you know you don\u0027t presumably don\u0027t require more than 16 bits of versions you know if you had major and minor so but if we can\u0027t if that if you can\u0027t move it it\u0027s pointless yeah I think if we were going to do a shim type approach we would we would have to do some fairly significant surgery in order to write everything working yes Ronnie Evan my major concern is a good like I said before is with having just one bite and how do we use it so will not take too much options from this by to use as flex because we at least use now three bits for the pipe and I don\u0027t know how much we want to keep there in order to allow for that so that\u0027s one limitation and then if we use three or four if you use for for example we still have just have four bits which there are other might be other usage that would like to delete something in the first byte in order to work or something in that area so either that or we have to have a machine it\u0027s okay because basically it\u0027s one more bite what you can use so I\u0027m also okay with the solution that about the using the just for stun and again that we need to verify that but we need "
  },
  {
    "startTime": "00:57:25",
    "text": "to be careful about our decision that we will not prevent that from from using the two to make too much limitation on the first byte I think I bought an A I was going to point out here that it seems likely at this point that we will produce a document that exists standalone that describes what quick is in the invariant sense it will be section five point eight and not a lot more at this point so I imagine a very short document the idea being that we can then publish that document and commit to that document and anyone who wants to say for instance describe the wire image of quick they can point to that document rather than the more complex document that contains all the details of a specific version of quick and thank you everyone for your feedback I think we have at least enough of a plan i I have a tweak that I might suggest but other than that we\u0027re good right Thank You Martin III just want to make sure people understand you know the context here is that we\u0027re going to where we\u0027re saying we want to write down the things that don\u0027t change between versions of quick that they are truly invariant and that will drive discussions like what we grace and what\u0027s encrypted have not encrypted as well as discussions about what we expose to middleboxes and what guarantees they have that our version independent and and that that that\u0027s kind of a very high order bit here and it\u0027s going to drive part of the next discussion we have about the scope of our work as well so I thank you for that I think that does that well is it controversial that we\u0027re taking this approach does anybody have concerns about this idea overall of documenting invariants we had a little bit of a side discussion about one particular example that is driven by invariance but I don\u0027t want to lose the high order concern here and Spencer\u0027s going to the mic mr. Dawkins this time I think is responsible ID I wanted to thank Martin for doing this work and I know it\u0027s not easy I just had the observation that if you document the invariants in their own document then you can open other documents for revision without without having to had the argument about whether you\u0027re going to change the invariance to it\u0027s easier to keep a document close than a section it seems like to me yeah that\u0027s a property I really like so I think it\u0027s a good idea to document the invariance um I think that the exact inference the table suggests don\u0027t be but the principles reverse the emergence arrive and then the invariance themselves need to still be kind of open tissues so I I guess I\u0027m hoping that this document will start with the principles and we can debate them and then we can debate what drives that of those principles okay great so we\u0027re gonna talk about how to get such a document started and I would expect that by the next interim we\u0027ll have something "
  },
  {
    "startTime": "01:00:26",
    "text": "meteor to discuss where we can really dig into the exact invariance and the principles behind them so so look forward to that I guess and and that leads in to another discussion I very much wanted to have that discussion before we had this one we sent an email to the list a little while ago that caused some discussion in that you know we\u0027ve been doing this now for a year we have a milestone in our agenda sorry in our in our Charter that says we\u0027re going to ship quick to the iesg in March of 2018 that\u0027s a pretty aggressive schedule but it\u0027s pretty clear we\u0027re not going to meet that right now and so as chairs you know Lars and I have been talking and we\u0027ve been talking to the editors and other folks in the working group about how we can make sure that we complete this work successfully and and the the mechanism that we were proposing that we do that that we adopt to do that are a couple of things one is is that for version one of quick we focus only on our our first use case which is HTTP and the second is is that we adjust our milestones and we focus on meeting those milestones Patrick McManus very rightfully pointed out that the way we expressed that was not ideal thank you for doing that Patrick a lot of eyes looked at that before yours and no one saw what you saw but you\u0027re absolutely correct this is a you know as a group we need to try to work towards agreeing on on getting a v1 shipped and that\u0027s what our focus is is we\u0027re proposing it date and and I wanted to have that invariance discussion first because I think it\u0027s critical for folks to understand that by focusing on just HTTP in version one we\u0027re not saying that quick will only ever be version one or that other things whether it\u0027s multipath or whatever can\u0027t be accommodated by quick we need a strategy to make sure that quick can adopt these things and and meet these use cases in the future and our strategy for that is is is largely around the invariance that we document a few things that will not change and everything else is is potentially changeable including you know our patterns of messages on the wire and and and and lots of other things that aren\u0027t covered by the invariants and so this is the proposal of our scope for the for the immediate future where we will be focusing on the HTTP use case and other concerns we\u0027re going to Park until we\u0027re working on v2 that doesn\u0027t mean people can\u0027t work on things in parallel but as a working group our focus will be on shipping that v1 for the for the foreseeable future I think the the proposal is November of 2018 is when we\u0027re going to try and put a pin in and ship v1 this was discussed on list and I think with Patrick\u0027s positioning it seems like this pretty strong consensus in the list that this is a good direction to go in but we wanted to have an explicit discussion about this here in the room and make "
  },
  {
    "startTime": "01:03:26",
    "text": "sure that people understand the and that we understand the implications of that so please hi Colin Perkins so by only focusing a little closer the mic sorry Colin it\u0027s absurd how there\u0027s really absurdly close I\u0027m not sure I want to get this close to your Jenna\u0027s [Music] bring issues to the microphone line into theory afraid so but by only focusing on a client-server protocol like HTTP we run the risk that we will never be able to run this peer-to-peer because your if unless I mean if it hurts back to the invariance discussion but unless we can run stun or something equivalent to it you know in the first version we are never going to be civil ossify and that\u0027s exactly why we had that as part of the advance discussion is there\u0027s a realization we need to do that yes but I think there\u0027s a realization that the this cannot just be HTTP yeah it\u0027s we need we need to explicitly say we\u0027re going to enable for example Pizza pair it\u0027s it\u0027s the invariance and HTTP is version 1 and and the question is whether the demultiplexing was something like stun is part of that and my personal feeling after this discussion in the list is that everybody so nobody has said as a stupid idea we shouldn\u0027t do it right so it seems like this is something implicitly seems to be consensus for but but it if we do it it needs to be part of me one because it will be part of the invariants yes and it\u0027s a you know it\u0027s a the distinction is is that it\u0027s not that we can ignore the rest of the world and only focus on HTTP and perhaps I misspoke there it\u0027s that we\u0027re not going to fully flesh out every capability of quick in v1 it\u0027s that we\u0027re going to make sure that we can cover what we need to cover in the invariants so that in the future we can you know have a good chance of being able to do whatever we need to be able to do without changing those invariants yes I agree if we say we are only focusing on HTTP and then we\u0027re building invariants we run the risk that we built invariants that don\u0027t nee work for HTTP that\u0027s my concern already speaking I think I can stand they\u0027re back because I\u0027m louder which is probably hen and ear you be more loud okay I can be even louder than that trust me so I also had some agita with the idea of doing this HTTP only for version 1 for many of the same reasons that Colin just elucidated but I I really liked your second formulation a lot better which is we\u0027re going to build v1 with a set of invariants and what we\u0027re going to deliver in the the timeframe that\u0027s currently being proposed is HTTP and a quick which obeys "
  },
  {
    "startTime": "01:06:27",
    "text": "those invariants you don\u0027t have to then say whether or not the quick which obeys those invariants and is delivered for the use case of HTTP is only for HTTP or not somebody and I\u0027m thinking of Christians work on the DNS or some of the other work that\u0027s going on with people experimenting with running their protocol over over quick can go on in parallel and provide input on to whether or not those are the correct invariants or not as you go so I think if you drop the for HTTP only and say using these invariants and delivering HTTP I\u0027m totally on board but if you say for HTTP only I believe that that will be a stick to rule things out that the invariants would have kept alive so I hope that that\u0027s considered a friendly men yeah thank you for that umm so one thing we didn\u0027t explicitly say although I think it might have been in the email um so the reason why we\u0027re sort of saying that we want to focus to work around quick for HTTP for version one is that um the editors and the chairs believe that we so we\u0027ve had discussions that took quite a bit of time especially at the interims that that were and further ago that goal and in and we have to push back six months which has caused some grumbling by implementers and and going much beyond that I think will cause significant ly more grumbling so II so so I\u0027m moving the milestone is a big deal for some people and and we recognize that and we hope that by focusing the next six months or so of work we can actually confidently ship something that people can run that that as Ted just try to summarize that isn\u0027t to say that people should stop looking at multipath or stop looking at partial reliability because we will want to know that the quick we with invariance that that supports version 1 that we deliver makes it easy to add other things in the future except you know we cannot fully architectural II do multipath and other things while we at the same time still waiting to do we won right so the idea is that we prioritize HTTP because it\u0027s the most well understood use case for quick at the moment and we make sure as soon as we can that we\u0027re greasing the hell out of everything else so that further extensions become easy and remain possible sorry I just one thing to that I think it\u0027s important to keep in mind the invariants are intentionally quite broad you know there\u0027s that so much of what\u0027s happening is inside of the crypto and is outside of the invariants that and sorry not broad they\u0027re quite limited so you know there are many things we can do without violating the invariants and I think it\u0027s important to appreciate that even I "
  },
  {
    "startTime": "01:09:31",
    "text": "listened to what last now said and I think that they the issue I don\u0027t think it\u0027s invariant it\u0027s cuz the first issue is that that doesn\u0027t address the needs of HTTP over quick but there\u0027s no quantified there\u0027s no document that says what are the needs of HTTP over quick there are assumptions what are the needs of all of HTTP quick so I think together with the first bullet that says which are realistically achievable in this time frame is the point is the point for that because a lot of things that are being discussed are also relevant to HTTP over quick like multipass have some relevance to that but you can say it\u0027s not realistic okay but just to say to say it doesn\u0027t address the needs unless you have think that says what are the needs I disagree that body part is required for HTTP over quick it would be nice to have for sure right but it\u0027s it\u0027s not required so it no it\u0027s a trick why it\u0027s not realistic I don\u0027t think it\u0027s not required I mean again the is there a document that says what is required for for HTTP over quick I didn\u0027t see such a document but that doesn\u0027t say what is the requirement that says what is the what you want to do there so I think I think I think that we at least I I think that we have to see what is realistic to have in version one and by that to to work be see that\u0027s that it\u0027s applicable also for HTTP over quick I for example not in my case I have the manageability issues that I think it\u0027s realistic and and I mean you can say it\u0027s it\u0027s relevant because otherwise you have problem with managing Network transquik over anything over Queen yes but I that is an interesting point about multipath for example we\u0027ve decided that you know doing HTTP header compression of some sort is a requirement of some sort for HTTP over quick but I mean we could do HTTP one one over quick and like ship that and that would be very easy in and it would totally work but but so I mean I think that\u0027s an excellent example I don\u0027t know if we need to write down what the requirements are but I I do think that there is an implicit set of requirements that the group or some people the group have and you know at some point we\u0027re gonna have to decide what\u0027s what\u0027s the boundary there but I don\u0027t know you have a point I think there\u0027s an implicit assumption that that would be said at GPA mint h2 like age and in fact it\u0027s in our charter okay okay my actual comment was obviously like modulo you know all the all the feedback from Patrick which was excellent feedback which I didn\u0027t see you the first time when I said this looks great this is awesome in terms of exact timeframe from from my editor hat perspective I feel like if we don\u0027t have something that we think is pretty darn implementable by London that like we\u0027re we\u0027re in bad shape like really bad shape because I don\u0027t know about everyone else but most you know it\u0027s gonna take a nonzero amount of time to finish implementing whatever people haven\u0027t implemented in "
  },
  {
    "startTime": "01:12:33",
    "text": "quick and then it\u0027s going to take you know even if you have a pretty strong infrastructure probably like another four weeks to like ramp that up to like be global maybe it\u0027s too if you\u0027re like Facebook and you\u0027re super super fast and you know actually getting a large-scale deployment and then fixing all the bugs that you find and so and so forth we need to give people like five or six months I would say so I\u0027m saying I don\u0027t know if everyone else agrees to this but but yeah I say London and if that should be really hard and basketball and at that point if we can\u0027t get something done we should start like cutting things pretty brutal ously quickly interject as a jobber comment from lucas asking whether a revised milestone plan is likely to come out and and I guess this is for marking me and I\u0027m guessing pretty soon after we have had this discussion we\u0027re gonna send an email we\u0027ll talk to Spencer and then fulfill that yeah penny well Pat McManus so you know I think the original sort of problem may be a one-time only problem here they the Charter was written and it said a couple almost implicitly conflicting things it gave a fairly short timeline to submit the original document and it also said you know everything in the document were adopting is does not have consensus and has to be revalidated and I just think those things were incompatible the good news is you know as we move along there\u0027s less and less in the document that doesn\u0027t have consensus right we\u0027re working through those issues and I think that\u0027s sort of what we\u0027ve we\u0027ve seen going on sorry I mean I think that\u0027s good news for us going forward if we just work it out slightly quicker cadence I don\u0027t think we\u0027re going in circles which would really really concern me I just think this is a matter that the original you know the original layout was more aspirational than than realistic I will put on my HTTP hat and I will say that I think the header compression is actually a requirement to make this program protocol work correctly for that use case gen-i anger I\u0027m I want to simply echo some of the at least ago some other points that sure sorry I feel very beard get frozen speak softly or step back and speak loudly those are the or both yeah yeah clearly I\u0027m gonna try so I I think this is very useful to have I think it\u0027s it\u0027s it\u0027s it\u0027s very important to have this this direction right now personally for me I I\u0027ve heard a number of implementers talk about how once work is started Commendation you can\u0027t pause and wait for things to change so it\u0027s it\u0027s important to allow implementers to go forward and finish implementing and deploying it as well I think Ian\u0027s exactly right that we need to allow for a while for folks to finish implementing "
  },
  {
    "startTime": "01:15:33",
    "text": "and deploying I think four weeks is very optimistic people need months to deploy and try and see what happens there\u0027s another bit of urgency here that I want to raise and this is ossification that\u0027s happening already this is why I think the invariance discussion is very timely and it\u0027s important and it\u0027s important to have now if we not only can agree on the invariance but we can also allow for us to move on the invariance quickly and agree on them as quickly as we possibly can meaning not just do we agree on the fact that these are invariants but we also agree on us on where those invariants up here appear in the packet this will allow us to implement and deploy these things faster and and prevent ossification of anything that\u0027s that\u0027s going to need changing as we go through this I guess what I\u0027m trying to say is that the invariance while we are saying that we want to allow for these to change up until we declare v1 done I\u0027m saying that in reality we may want to do that sooner yes I mean they they need to be done at least when we want to ship v1 but um they don\u0027t have to wait and they shouldn\u0027t wait for that so so I think the invariants are probably the most important thing that we can spend time on after this meeting or during this meeting Praveen Praveen so I had two comments here so I overall agree with this you know direction one of the things I wanted to say was HTTP over quic is very general so it might be useful to you know maybe define an API which kind of you know v1 API which would limit the amount of functionality we would ship and we one it would be pretty useful to define what that is the other thing I would say is instead of you know yes we are saying December 2018 but be nice to work backwards from that and have actually milestones and deadlines on the mailing list for for example invariance you know we lock it down by you know date X and if people have use cases that they want to try out and want to give feedback to you know expand the set of invariance then they should do without by a certain date and if you\u0027re after that then you know hard luck so I would like us to put more deadlines versus just December 2018 so I mean with with ian\u0027s goal of having something pretty stable by London that basically means we have the invariance lock down in Melbourne which I see nodding do we think it\u0027s doable yes okay so so I guess me that\u0027s my hope so okay alright Brian Trammell just just gonna throw a little bit of oil on that fire not very much I agree very much with Ian\u0027s point that we need to get I would say that if we go into Melbourne and it\u0027s not just cleaning up a little bit then we have a problem right if we have a discussion that starts like this in nan burn then we have a problem if we if we work before then and get down on it and I think "
  },
  {
    "startTime": "01:18:34",
    "text": "we\u0027re good I also agree very much with something that John has said but I forget what it was so let\u0027s just say all of it I think that we need to be with respect to really emphasizing these invariants I also agree that sort of the shape of where we want them to be right now is probably correct I\u0027m not sure how to document this split between invariance of the contract that we\u0027d like to make and the contract that is going to be made on us right so that the extra externalities I think those externalities need to be documented somewhere I don\u0027t think that we need to document them on the weak we need to know where they are on the front end but we don\u0027t want to basically put them in the document and say we already concede this point and I\u0027m not really sure how to do that maybe one of them goes in the invariants document one goes into the manageability docu I\u0027m not sure where to put that split but that\u0027s something I think we need to to pay attention to as we drive forward to that I agree we need to be aware of it certainly yeah so I think disco good and and I have having I mean yes relate you can add more manpower D scope maybe both and you know moving to more rational dates is good obviously marches now beyond science fiction and fantasy um I guess that the the question I want to say is like you can write whatever shit you want I don\u0027t like the milestones right but like what makes those dates work is people actually work on things and so I mean why not when I hear people get up and say we like we should be working faster what they\u0027re what they\u0027re really saying is I intend to work harder and um you know so I mean I\u0027m great um I work pretty hard like if I work harder um but um but I mean um you know the problem is is that the milestones are like aren\u0027t aggressive enough the problem is like people are not working fast enough and so um you know so so it\u0027s good so it\u0027s gonna take you know say that what you\u0027re saying is I intend to like you know I intend to work harder I ain\u0027t anymore and compromise I mean I intend to do things that make things move faster right um um right so um I guess that\u0027s um so it\u0027s like I want I\u0027m not I\u0027m not putting here\u0027s anybody I\u0027m sure he\u0027s bad his life is like babies and some people um maybe all but you know which one up like something difficult I share your skepticism about you know just because we set the date doesn\u0027t mean we\u0027re going to meet it and I it makes me wonder if we need to reconsider our schedule for meetings if holding more interim meetings is we\u0027ve talked about in the past and we\u0027ve decided that that was too much for commitment for a lot of people do we need to revisit that decision if we want to make an aggressive schedule I think about more but I\u0027m a guess my initial reaction would be I don\u0027t think more into meetings is gonna help almond on the problem is attorneys or SLR it\u0027s a practical work they work meaning Formosa "
  },
  {
    "startTime": "01:21:35",
    "text": "from any other working groups um I think what will help perhaps is um you know I mean I I hasten to point out this is not like the way the idft plays the game but um you know many summits of people who like are the major the major Cooper horde like having trouble Wilkins coming to coming to consensus on things those guys should be meeting themselves and trying to resolve them and I\u0027ve seen that work on other places I worked out to see what blue well um so I mean obviously wasn\u0027t the vetted in the room the working group with all those things but like if you know if what happens is you know that Martin Thompson I can\u0027t agree on something and we wait until you don\u0027t wait until nowhere to fight it out and everybody else through their watch let\u0027s fight it out that\u0027s like not that\u0027s not helpful I also observed that the the implementers seem to make a lot of progress when they\u0027re at the hackathons or the interrupts events and right before them and maybe we need to increase that base yeah I think yeah I think perhaps might be useful to have an extra hackathon I think one that happens that we found anymore perhaps he lost in with it within quick just cuz quick I think we\u0027re already certain we\u0027re just all struggling to getting the work at all is that people in the pyramid people in the hackathons were so very willing to come sir provisionally compromising something just get to work at all and then you know and then after that was done they were like people like wow you know that\u0027s a bad or you know or whatever and it like that helped me progress to Mike Bishop Akamai so I will on the question of more interims in person I will say please god no however I will observe that there\u0027s this wonderful thing called the Internet and a lot of our interrupts testing and hackathon we could do virtually by way of slack or schedule a conference call or and WebEx or whatever and if we need a more frequent meeting of a part of the working group or the entire working group or an interrupt test go for it maybe one day a month of interrupts four or something like that between now between the last ITF and and this it has been knows to be more active on a slack channel in between right so people are basically have public servers up and and other people say hey I send your client hello can you tell me what happened on your side on the slack channel so that that actually works but having a formal sort of joint time where everybody\u0027s on slack I think would be very well the it\u0027s going to say something else I\u0027ve got okay so III think we\u0027ve heard from from a bunch of folks on that both here and on the list Laura\u0027s now go and chat with Spencer and we\u0027ll figure out how best to reflect what we understand the path forward is going to be I\u0027m not sure what form that will take yet but we\u0027ll figure it out um we\u0027re gonna do a slight agenda modification we had the editors update "
  },
  {
    "startTime": "01:24:37",
    "text": "up next from Martin but we\u0027re going to shift that till tomorrow so that ted has time to talk about the spin bit evaluation design team Ted I can stretch I can see there at least eight people who recognize the Konami code little closer ted\u0027s little closer okay I can see that there are at least eight people who recognize the Konami code thank you spin bit round-trip time evaluation team report take one threat model geolocation as you remember from the discussion at our last non intro meeting one of the potential threat models that we discussed was that somebody would be able to take this round-trip time information and use it to determine the geolocation of one of the endpoints the design team consider that pretty carefully and it has consensus that the use of the spin bit is not a significant new source of geolocation information the reasons are up here but they boil down to this one there\u0027s a lot of this information already out there and therefore this this is probably something commercially available to you if you really cared to the data that you get from this turns out to be very very coarse and there\u0027s a nice thing in the links at the back of the slide from Brian which demonstrates just exactly how coarse and lastly it turns out that for a lot of this tracking the handshake round trip times or related IPs that is a an IP prefix rather than a single IP would give you very similar min RTT data and it\u0027s important to remember that minimum round-trip time data is the critical thing for geolocation because it\u0027s the best possible reflection of where something is so next question so the question to the to the design team was well what about things that aren\u0027t just min RTT where what you\u0027re trying to do is to see the pattern of round-trip times throughout the course of a flow and dkg and christian we Toma pointed out during the interim meeting that actually there\u0027s a problem here and that is whenever you don\u0027t have consistent exchanges between the peers that is when whenever there\u0027s sparse traffic you you actually get the wrong data because you get the application latency instead of the round-trip time so here\u0027s an example in in beautiful ASCII art translated into non ASCII art where you have a quick initiator talking to a quick responder it sends across a piece of work you get an acknowledgment of the piece of work theory states that at this point the quick initiator has kind of mentally changed the spin bit from up to down but because we don\u0027t act X there\u0027s "
  },
  {
    "startTime": "01:27:38",
    "text": "nothing on the wire to show you that that mental change has occurred instead the next thing you see is in fact another thing from the quicker responder to the quick initiator when the works complete that gets acknowledged and that\u0027s when your spin bit changes which means all the time between the request acknowledgement and the work being complete is not visible to the wire as having taken place post spin bit change Spencer I\u0027m I\u0027m gonna learn from the mistakes of the people who who came in front of me and asked to defer all questions to the end I\u0027m going with that okay next slide please so they\u0027re a bunch of sparse traffic examples logging for example if you ran syslog it would work like this some kinds of compute intensive applications DNS queries to a caching resolver unidirectional streams in the case of like RTP being sent over this I realize that\u0027s not v1 you would you would actually be measuring your ACK coalescence and in sort of our TCP like ways and all of these then would show up with the the previous pattern that we just discussed the the logging example itself may in fact be insensitive to round-trip time because of the way it works but in a lot of these other cases the app response time can dominate the RTT a note by the way that this is all about using this to measure round-trip time latency and all of these remain sensitive to loss even if they\u0027re not latency sensitive next slide additional processing I will note that there are people in the design team who didn\u0027t really think that this was additional because their measurement guys and from their perspective this is the cost of doing business but I doubt that you can see nods from other people who believe it\u0027s the cost of doing business but I point out that it has to occur you can you can reject samples that appear to have these characteristics pretty easily you can just throw them out on simple heuristics that do look like that was a a tight exchange I\u0027m just not going to count this if what you\u0027re trying to do is to figure out something like the mean round-trip time on a particular path but you\u0027re not actually looking at specific flows so they\u0027re definitely cases where very very lights amount to work light amount of work can get you additional information you can also and I\u0027m instead of analyzed the flow characteristics you can characterize the flow to infer a traffic type and then conducting analysis based on the inferred trapper type this is a little bit more complex again for the measurement guys this is the cost of doing business but what it turns out to mean if you can easily determine from the flow characteristics that yeah this is almost certain to be rttp like at coalescence then you can go ahead with your analysis if you\u0027ve correctly characterized the flow note that there is a concern here that you then might decide in order to help them correctly characterize the flow you need to add other things to the user visible "
  },
  {
    "startTime": "01:30:38",
    "text": "sorry to the wire visible parts of the of the exchange to help them characterize it that is in fact straight out leaking that information and nobody in the design team really proposed doing that in any any specific way but I throw it out there just because it\u0027s an obvious thing that would happen next slide please so is this worth it slide please maybe the design team did not come to consensus on this point we would have loved to have come to consensus but after a bit of back and forth I cannot claim as it\u0027s a reader of consensus that I did so we did seem to believe that the geolocation threat was negligible and no other threats were identified but clearly this does provide some information to observer friendly or adversarial we don\u0027t really know yet what the adversary would want to it but they\u0027re clever little and I have to restrict myself from characterizing them but it is clear that the network managers would would want rough estimation of the contribution of a leg of a path the latency implicit measurement of congestion and potentially some passive troubleshooting there are other ways to get each of these but if this were present it would get used for some aspects of this I\u0027m so so glad I asked you to hold them to the end really I have done nothing clever today until that please we can just you know have a line is already in line three times I can see in a psychic through the line next steps we recommend closing the design team it didn\u0027t come to consensus on this if you hand us other questions we kind of suspect the same thing might happen we think that the right thing at this point is to take the question at the working full working of discussion of this is more appropriate than more discussion in the design team we also believe that there were some output from the hackathon I\u0027m getting at CSE marker from from Brian I can I can summarize a little bit of that okay that that might have helped us carry that forward if there is other data that can come to the working group so that it\u0027s not just based on this that would be wonderful and we also probably should consider uploading the discussion to reconsider methods for delay and loss detection that aren\u0027t this last slide this is the data that the the group kind of used in this discussion please do review it before we start the working group discussion so that you don\u0027t kind of go back and it you have other links you want to share with the group those are obviously gonna be great we appreciate that I will note that we asked the design team if we could make the discussion open to the working group post facto and just kind of share the discussion but there was unfortunately an objection and since I did not make it that is an early condition I unfortunately will not be "
  },
  {
    "startTime": "01:33:39",
    "text": "able to share that so let me just count here and can we ask people to be brief yep there are already ten people in line so if you believe you might want to get in this line would it be more they cause like a folder I suggest it\u0027s probably better for you to get in the line now and step out if you decide you don\u0027t need to i\u0027m and so to be clear we come on we have 25 minutes and we have without knowing why surely you should to know okay just now Brian seeing who is behind me in line hi Brian Trammell would you like these in slide forward or slide reverse order there they\u0027re moving the slides you pick a random flight order yeah it\u0027s back together right yeah okay um priority okay so okay you called me out here so I\u0027m going to start with this one on eight we have a student who has implemented the latency spin bit in a fork of mink it does what it says on the tin when you have when you have like you know full demand right like you have full traffic in at least one direction you get a very very very good estimate of what the cinders estimate of your TT would be right lakes are comparing the internal RTT estimate to what the spend bit signals it works great with respect to the issue that you identified with ASCII art you can go back to that if you want to this is actually a relatively well-known problem in passive TCP measurement there was actually an I forgot to bring this the attention of the DT there is a paper in ACM CCR run about a year ago Hepburn do you have something that you\u0027re disagreeing with yes about yes okay I\u0027m gonna ask the folks who remembers the design team to consider that that if you don\u0027t have something that Ted hasn\u0027t covered you know we want to hear from the rest of the working group and a lot of people so please take that money okay can we go then - the thing that I disagree with that would be on six I think yes I also disagree with this that maybe is incorrect I think it\u0027s worth it can we go to five yeah so I think the concern about about this leading to traffic analysis is a little bit overblown because again this is a very well known problem and passive front for time measurement and everybody uses extremely simple heuristics and nobody says oh well I don\u0027t know what the RTT is therefore I have to like actually figure out what type of traffic business I think that that saying okay giving a latency latency signal to the path that is very easily rigid like you must be rejected all with very simple heuristics is not a slippery slope toward other nastier things I just think that that\u0027s that\u0027s total BS um yeah okay since I\u0027m only up here to disagree I will let other people speak Thanks may I "
  },
  {
    "startTime": "01:36:40",
    "text": "could have it so I I\u0027m not sure if it\u0027s a valid point to say we have a couple of use cases which are maybe even the important use case we look at at the moment and those use cases it doesn\u0027t work and so we don\u0027t need it because this is a general-purpose transfer protocol say there are use cases where it will work and you if you know that your traffic characteristics will not lead to useful values you can you can even just set the bit to zero always and then say like I\u0027m not supporting it because I know it wouldn\u0027t work that makes your life easier the other point is I\u0027m a little bit afraid that if we so we could always say we do this in a later version or whatever but we will only figure out that we need this when the deployment of quic is so high that we don\u0027t can do any measurements on TCP on like competing TCP anymore on the traffic and then it\u0027s so widely deployed that we don\u0027t have it and then it might be too late and then it might be really hard to get it in what I think it might be much easier to just put the bit in and if nobody uses is nobody needs it we can put it out at the later version so thank you for that comment because it actually reveals something that was I think a very strong assumption among some of the people here and that is that if it was in it would be used all the time because otherwise using it would be in fact a signal yes my assumption is you would have to use it by default all the time but I\u0027m just saying that is still it is still possible to set it to zero morning Oh Ronnie oven I\u0027m glad to help to hear Martin Brian talked about disagreement about that because I was I surprised reading that because I mean this is similar to TCP basically it\u0027s have the same you couldn\u0027t want to weather the RTT in the middle between the upstream at the downstream and it\u0027s done in TCP with all the things like you said it can be delayed India in the one side the message would not be continuous the arc will come better it\u0027s really disabled ISM the only difference here is that instead of the arc you get the spin B that tells you that this is basically the return the return message so today it\u0027s working and it\u0027s being used and again like I think that\u0027s important that it should be implemented as a mandatory feature in the in the first release in order to to be able to analyze what\u0027s happening there ian\u0027s but google at a high level question is are do did people largely think this approach was sufficient or and and if if so we\u0027re not like were there things that people are different approaches people like better or is that kind of like out of the scope of the discussion so I think if we do take the next step seriously and up level the discussion then other mechanisms would come into play and it\u0027s definitely true that one of the issues that many people in the design team were concerned about is capturing loss on the path and this is very poor for that okay so okay Daniel con Gilmore so I think one of the things that so "
  },
  {
    "startTime": "01:39:45",
    "text": "the discussion that was presented here thank you for for summarizing it it it doesn\u0027t mention that people may be forced by the networks if this exposure is present to basically emulate whatever the standard expected pattern is certainly if we\u0027re talking about shipping v1 of quick as HTTP only there are certain traffic flows that will be expected and if there if the network started measuring things on the basis of a spin bit like this that will be what quick looks like which means if you want to do anything other than HTTP in the future then you\u0027re gonna you may be forced by some networks that have decided this is the way that we measure traffic to emulate HTTP or the the traffic patterns of HTTP and I\u0027m I\u0027m I think that\u0027s a mistake if we put ourselves in that situation so thank you for raising this point I don\u0027t think that there is consensus in in the design team that this was a potential source of ossification it was brought up and probably I should have put on as discussed but not no consensus so we\u0027ve we\u0027ve been discussing this issue since so do you hear me now so we\u0027ve been discussing this issue we\u0027ve been discussing this issue basically since the beginning of this working group we had this discussion in in Tokyo in Paris in Prague and the we always had the question come up what what are we really gained by that there are people who claim that this will this will give us enormous benefits on the network that they need this to make it work but I haven\u0027t seen any numbers I asked for the numbers a couple of times other people have asked for those numbers but I\u0027ve never seen anything so those people who who really wanted why don\u0027t you present us the numbers so so I would appreciate it if you would review the if you are the links that are at the at the end of the presentation because some of them actually do contain that the numbers that you\u0027re looking for I\u0027m not looking for the geolocation and that not all with that not all the links deal with that so I would appreciate if you would review it and then if you find laocoon I bring them back to the working group okay I\u0027m gonna remind people not to interject for the audience if you\u0027re not at a mic please mark it up so yeah there are a lot of links there where we show that it\u0027s very useful and I would also like to say that I think among the people who actually want to use this this was quite a big consensus in the group that this this is a sufficient mechanism so can I ask you a clarifying question you meant a sufficient mechanism for latency not for loss right for latency yes thank you Gauri Fairhurst and thanks to flee analysis and you "
  },
  {
    "startTime": "01:42:47",
    "text": "looked just at the spin bit and what I understand you say you didn\u0027t see the security threat which was discussed at the previous meeting we examined the geolocation threat in detail and decided it was not a significant new source of geolocation information because of the way the RTT is determinable from the handshake data and because of other sources of similar data okay I like the list of things you said it give Gibbs are we going to look at other mechanisms that provide more feedback and better RTT estimation I mean that might be enough to go with I personally would go with that being mandatory at the moment are we looking at more okay why don\u0027t you just hand it to the person next to you rather than putting it back out Thank You Thomas nokia to the question whether this is available I think it is although it\u0027s a bit weak as a signal we would like to have more for from you know a measurement perspective but you know better melodies than nothing the team to the privacy problem having read Brian\u0027s draft the document a couple of time I\u0027m quite convinced that is not a problem everything work with the CDN and the redirect routing and getting the max mind database you have very very precise information about where the the the endpoint is so effectively this wouldn\u0027t provide any additional let\u0027s say information there are limitation and animation I see here is that the the two end points can basically faked information there\u0027s no the game is such that the the network doesn\u0027t can\u0027t rely really on the signal that comes from the end point because you know the signal doesn\u0027t change anything on the state machines on the two end points but you know if I can convince the L points incorporate this is good as I said it is better than nothing and and to versification a problem which I think because II was mentioning I I don\u0027t see this because it\u0027s used in a different way it\u0027s used it passively so if you can clarify this better so so I\u0027d like to pick up on something so just just to reinforce it into the group and that\u0027s this the way this measurement works when you\u0027re using TCP is you\u0027re taking information which is required for the state machines on the endpoints and examining it as it passes through the network in order to get this data falsifying the data going through the network requires falsifying the data you\u0027re sending to the state machine of the other end point because this is data which is consumed only by the path altering this data at the endpoints changing when you do the up and down bits in order to mask the data "
  },
  {
    "startTime": "01:45:47",
    "text": "does not require any change that influences the state machine of the other endpoint which was nothing telefónica despite that the fact that additional processing is needed you very well said we see this as a very useful tool to do travel certain to perform a better management of the network so we could like to see this included in in version one Thank You al Morten I got up to respectfully disagree with my design team colleague I don\u0027t believe that I\u0027ll can you speak up like oh sorry sorry that that\u0027s going down right yeah I I don\u0027t believe that having insufficient traffic would be a for a forcing function for ossification I don\u0027t think that the network providers would ask senders to send more traffic so that the measurements could take place that\u0027s not actually what what he\u0027s what he\u0027s saying so possibly you could work with him offline to get a truer view of his point okay Thank You Jenna and God I was actually hoping that we would have some strong sense of I I want to echo what Martin said earlier Martin\u0027s aim and said earlier about about the monster I didn\u0027t need it\u0027s not so much that that we need to show numbers about exactly control numbers until you actually have this deployed or until he have it in use or numbers are difficult I understand that but I was really hoping that we\u0027d have a very clear understanding of what all this could be used for and what all this would enable and that doesn\u0027t seem to be present at this this at this level was this something that was discussed yes there was a good bit they discuss some of it\u0027s actually in the links but the primary things if you go back I think twos to know one more one more forward so each of the three things that are bullets here are things that members of the operational community asserted that they would be able to get from this and that although there were other ways that that they could get it that if this were available that they would actively use sorry passively use to get this information I\u0027m sorry what what does the last but he said if they were not passively no I\u0027m so I\u0027m saying that there are other ways to get most of this information but that if this were available they would use this to get this information understood okay thank you so the one thing I want to point out and I don\u0027t "
  },
  {
    "startTime": "01:48:47",
    "text": "know if it\u0027s it\u0027s coming out in the it does come out is that the network the network can in fact measure round-trip time right now with quick packets it can\u0027t do it continuously throughout the connection it can be done on the first package you can be done on the handshake packets and that\u0027s a pretty critical bit of information that may not be all of it but that\u0027s certainly a fair bit of information that\u0027s available as it is in the network yeah yes and the design team pointed that out in in rejecting the geolocation as new information because you can clearly get round-trip time from the handshake packet and using a series of those you you could look for min rtt for a related set of IP addresses so we definitely consider that an agreed so in the so my concern remains that when we don\u0027t have if we don\u0027t think that there\u0027s very strong demonstrated need to have this bit exposed then it\u0027s just a bit exposed that doesn\u0027t get used if it\u0027s something that might be useful that to me is not strong enough if it is in fact necessary and useful that may be strong but we need that okay um I\u0027m gonna close the queues at this point we\u0027ve got ten minutes left and we have six people in queue so please be brief so first and answer again I think we look looking at the links and then there you will see quite a lot of demonstrations where it\u0027s actually very useful and very critical for for a lot of operations especially troubleshooting and inter-domain troubleshooting where you want to see differences in latency on different lakes or different parts of the path so say I\u0027m measuring here and I want to see if the trouble is in my domain or if it\u0027s in some domain outside and that\u0027s very very then you would need to measure latency you would and you will need to measure it in the middle to be able to discern where where the problem is so that\u0027s a very important use case that that many operators need this for and there are think two or three documents they\u0027re describing how it\u0027s being used by different operators and I have another question so if version one is focusing on a to be HTTP then many of these sort of corner cases might not apply so we might need to rethink rethink that as well because these are TP and sparse traffic examples might not be so prevalent in the HP use case so I\u0027ll point out that this is a question about whether or not this is invariant right and so I think it falls into the discussion that we have to have whether we we are trying to deliver HTTP first or not there was it was here a comment about that it\u0027s not part of the state machine and that\u0027s why it may be parse falsified and be used differently a lot of the monitoring today that are being done for example in IP PM are not part of the state machine and they are being used even though they are not part of the state machine and for example they if you do it wrong if the endpoint will do it wrong it may hurt itself and not have a problem for the network because the network by the end of that has to figure out if there "
  },
  {
    "startTime": "01:51:48",
    "text": "are problems and and those problems are very typical because if I\u0027m a user and I\u0027m watching something on Netflix and I see that it\u0027s not coming fast enough to for me I don\u0027t call Netflix I call my service provider and complain ok and what what they want to be assured is because sometimes it\u0027s go through different service providers the first need to verify where it is in the network that the problem happened ok if it\u0027s in their domain or in other domain so that\u0027s why they take the RTT a different point in the ingress if the echo address and figure out what\u0027s they are TT\u0027s to figure out where the delay is is it counter it maybe in one of their devices so they can figure out that there\u0027s something wrong with the device the cube management in the device the buffering or whatever and that\u0027s how it being used I mean you have to understand that video doesn\u0027t go and that\u0027s mostly important about video traffic and video doesn\u0027t go just from the endpoint 2d from the server to the endpoint just automatically it was nothing in the middle there are things in the middle that has to verify that it will flow and will flow optimized and I think one of the one of the if you talk about latency is one of the achievable things that you want to achieve here so this is about latency basically want to have the best legacy running the correction establishment I\u0027m sorry we are done constraint here thank you just hand it to the person by AT\u0026T I\u0027m almost much louder than my louder okay I\u0027m a little bit disappointed that the design team didn\u0027t come with the conclusion because we\u0027re will we\u0027re back to square zero and proud we discussed that they\u0027re potentially some threat surfaces and we I\u0027m glad that the result is that there are no it is needed for service providers and it is in the Charter that we need to provide at least the same level of manageability that you know no no that is not in the Charter it\u0027s that we consider it okay but in any case I think it will be useful to to be in the end of e1 and you know the working group to consider it just pass it to the person behind you yep so last week on our network we have to trouble shut but drop-off traffic actually we have was a quick traffic which dropped from 100 to 30% and in fact to troubleshot we have to rely on the fallback on TCP because about nothing available in the quick headers total shot so the question either is we fall back to TCP part of the invariance of quick so I think that\u0027s not really a question for this but I think it\u0027s an important question you\u0027re asking question act yeah CP is an invariant or not and we discussed fallback well yeah TCP to turbo short quick we don\u0027t need to spin bit but that\u0027s an interesting "
  },
  {
    "startTime": "01:54:49",
    "text": "point we should put a pin in that that\u0027s yeah let\u0027s get back there yeah I\u0027m told but I\u0027m not that tall : pokin so I\u0027m very sensitive to the concerns of the operators here and I think it\u0027s clear that they have real issues to solve I think that the point which Ted made earlier and I think Lars made perhaps over dinner last night that since you can put stuff inside the encrypted parts of the packets that drives the protocol states anything we put in the unencrypted part that the operators can see could be faked and could have no real relation on real data if that that makes this difficult flip for the for the operators so you know we seem to be talking we were going around in circles but but I think those this issue that what if we put in there may just be on untrue which perhaps changes the decisions going and very quick question we mentioned that there are other methods to get this fine grained RTT at different places along the path can you explain what those were because I didn\u0027t see them sorry it wasn\u0027t necessarily the fine-grained aren\u0027t et but for example understanding the contribution of latency for particular legs along the path if you have the I ppm techniques that were in the draft for which Christiaan made the original reference because you\u0027re actually a ppm yeah your your your tightly I\u0027m matching the the clocks of the various things and then saying hey I saw this one and and move the the up bit depth to down as I went through this you actually get very very strong information from that but at a cost and the cost is that you must now synchronize the clocks of these routers and you must be active on two points in in the in the path adding the moving the bit up and taking it back down as you ingress and egress your network but certainly if you\u0027re willing to have that kind of measurement architecture in your network you can measure your own network quite successfully without this you can measure on that we using MPLS and etc as well right so there\u0027s definitely other ways to get this information at different costs and and let\u0027s be honest this the the engineering trade-off here from the point of view of the operators isn\u0027t is this the only possible way for me to get this but is this a way that I can get it at scale conveniently for the traffic that is going to be crossing my network and I think the the question of what type of traffic is actually important there and although I\u0027m certainly willing to bow to the greater knowledge that you and Brian have about how much additional effort this looks like to measurement folks I do I do believe that this is by "
  },
  {
    "startTime": "01:57:51",
    "text": "far the most useful when you\u0027re not having to apply those secondary rejections and and and even lightweight heuristic algorithms to manage the the flow analysis because at that point it really just becomes a time series of data that that\u0027s giving you our GT which may reflect just Network RTT or a combination of network and application or tt-thanks so may I ask the the chairs if they agree with the next steps that this now moves into the working group for further discussion or do you wish it to be deferred I I think we need to talk and and figure out a way forward so it\u0027s right and I believe I do not have an action item unless you give me one later let me know one one sort of thought from the chair since we had the session earlier earlier in the session we talked about the schedule and and version one and the invariance and that being a critical blocker for implementations like so I\u0027ve heard different opinions about whether putting something like this adding something it is too quick was required for version one or not I think it would be extremely urgent for the group to come to consensus on that part and and we have a minute Brian you can you can make your way to Mike one I also have another question that\u0027s related and that is on this was specifically at Los delay tangentially lost detection was mentioned and I\u0027m wondering um so from the operator community right will you be happy with delay or is lost the next thing and will that also need to be part of the invariance or not and um we don\u0027t necessarily have to answer we have we have this discussion now so I just wanted to point out very quickly that you you have a third option here which is to reserve this so that it is not consumed in version one rather than decipher that was so did the opinions are heard was either because we\u0027re doing greasing we\u0027re gonna have bits that we can yeah use for this later yeah I think mayor specifically made the point that she would like to have this be part of version one because the traffic is going to be so large that by the time you have the problem you don\u0027t have TCP anymore so so Brian and then I think we really do have to break so I I actually came up here to say something very much like that I tend I tend to agree with Miriah that if it\u0027s just a grease signal that turns into a non grease signal then it\u0027s not clear if it\u0027s useful but I will point out that the running RTT of the spin bit as long as the handshake RTT is still available the running RTP of the spin bit happens after you have a cryptographic um connection establish so you it\u0027s it\u0027s well outside the the invariance rate so you still have the problem with it possibly being greased and then not useful but you could "
  },
  {
    "startTime": "02:00:52",
    "text": "actually if you really wanted to you to put it just on short packets for example I mean there are so it I think that this is something that if we absolutely have to we can defer it as long as we know that it\u0027s a thing that we\u0027re deferring this is not by any means the last time we\u0027re gonna talk about this um we\u0027re out of time today so we\u0027re meeting again tomorrow and I suppose if we have time and something useful discuss we can maybe continue that specifically sort of for these questions so the questions about time is affirm from the chairs perspective right we need to know whether this discussion blocks version one or not so opinions on that please send them to the list do it right now while you\u0027re waiting to go to the social tool on the bus or into it the room tonight and if you\u0027re all very good and keep the schedule tomorrow we do have a few minutes at the end of tomorrow\u0027s session arm to maybe have a summary of some people\u0027s thoughts on this thank you "
  }
]