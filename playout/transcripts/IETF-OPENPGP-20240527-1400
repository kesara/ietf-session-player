[
  {
    "startTime": "00:00:05",
    "text": "I mean see the scheduled start time here now so di your audio is a little low here I'm not sure if that's adjustable or I can probably adjust it I can also probably just not mumble oh okay not mumbling seem to work great Falco thank you thank you Falco for [Music] Stephen are there birds in your lab uh the windows open and the birds do tend to congrate on the roof nearby nice nice okay just thought there might be an unusually squeaky computer but glad to hear it's Birds it is Birds yes if they attack me I'll turn off the video Don't Worry thank you for being ready to back up on notes let's great yep so um I figed we give a couple of more minutes for people to come in see that we have everybody who is intending to present here which is good um not sure who else is uh likely to"
  },
  {
    "startTime": "00:02:16",
    "text": "join um hello I would have a brief like a a slightly updated version of the slides rather than the one I sent you the other day ah okay can you upload that to the meeting page and then Stephen and I can uh click the approve and then okay we'll click the refresh button here and maybe it will work okay so let me see what do I do [Music] this page is there's a link in the chat there to the meeting page if you click upload then I can probably pick aove or if you want to just mail it to the we can probably do that too I can't really oh no okay see I'll pass you the slide control if that's okay sure that's fine you you did the work of making him I guess that sounds fine okay I should have uploaded his SL see an email I see it"
  },
  {
    "startTime": "00:04:00",
    "text": "I'm in the process of hitting the approving button and then I suppose we should probably remove the old one we can't really verion it now uh right because the original one we uploaded as opposed to hey Bart I see you there yeah we can delete it later so we it's the the last one is the it's the recap one that we want to use today right yeah as opposed to one that I titled post Quantum photography so I'll put this in the right order so let's leave it there just for a moment we can delete it later okay um there's some way to refresh the materials I think here but I don't know how to do that I'll figure it out later so I think you're refres I'm hitting the refresh you I I guess you can far ahead with the chair slides yeah we'll start that now we're five minutes we're giving folks five minutes to join uh so welcome everyone to the uh intern meeting uh may24 for open PTP um just a few things to consider here that this is the usual iotf not well this is an iotf meeting discussions here are covered by iotf policy you probably have read these things if you participated in iotf in the past but it's just a reminder think about intellectual property and concerns about how the work group operates um remote meeting tips if you're in the meeting uh we encourage you to have your video and audio off unless you are chairing or presenting or if you're speaking from the queue um we encourage you to use a headset if you can uh and"
  },
  {
    "startTime": "00:06:00",
    "text": "if you want to speak you can add yourself to the queue if anyone wants to try adding yourself to the queue if you're not used to M Echo now is a good time to do that it's a little hand button in uh the web interface for Meo um and there's a text chat going on uh we encourage you to follow the text chat and leave uh notes in there uh one more reminder aside from the intellectual property policy concerns um is just the code of conduct concerns we want to communicate clearly um avoid personal animus um and uh avoid unnecessary jargon that if somebody needs clarification we encourage you to ask for clarification you're not the only person who probably needs it if you're confused we are all confused um the agenda for today is pretty straightforward we want to briefly touch on the status of the crypto refresh which has been uh progressing Aon Whistler I believe will present on the status of the post Quantum cryptography work which is work group material and then we have a discussion of two uh drafts that we are considering for adoption but have not uh I don't think the discussion on list has really reached a consensus so maybe we'll have an opportunity um to think about how we push those forward and if this if the answer is the work doesn't have consensus we can also maybe talk about that too Andrew will talk about the replacement keys draft um which uh he and U DNE Shaw have been working on dapne has been working on it since 2001 uh and then Daniel wein will present uh on the persistance metric H draft so if anybody wants to uh throw any other wrinkles into the agenda now is a good time to do it um and the end we also have opportunity for other business want to and I think we're set for 90 minutes"
  },
  {
    "startTime": "00:08:00",
    "text": "today is the meeting time right that's right the meeting is 90 minutes if we manage to cover everything faster than that that would be great we can give everybody some time back um but it's it's a 90 minute session so uh you know if you're presenting and your presentation goes longer than about 20 25 minutes we might encourage you to spe it up all right um so on the crypto refresh status I just wanted to mention that as of last week the draft went into the off 48 State uh and we have an RFC number that has been allocated that this will be assigned to assuming we can get it out of off 48 uh it will be RC 9580 the review from off 48 is quite large it is proportional in size to the draft which itself is quite large uh there were like 64 questions some of which were quite complicated um from the uh from the our the editor and to get out of O 48 maybe Stephen you can speak to this a little bit more clearly than I can but my understanding is that all of the authors all of the listed authors will need to respond to uh the review so if you are a listed author uh please take some time to work through those 64 questions you should see that at least Paul routers has uh responded to uh I believe all of them U but we need all of the authors to confirm that the clarifications the redor wants to make are correct Stephen anything else to add to that on as a process point no I think that's it it's uh 48 long documents can be tedious should be non-controversial but tedious y most of the changes are about clarifying terms and adjusting the width of things that are too wide and for the text format and like that but they're still there and there's potential to"
  },
  {
    "startTime": "00:10:00",
    "text": "make things worse um to to make the document harder to use so please review if you are listed as a document author um I see we have most of the document authors on this call right now but maybe not nebbe I know this is a bad time for eBay it's in the middle of the night for him so I will make a point to reach out to eBay and encourage him to uh take a look at the review process um all right so uh Erin are you up for presenting I can switch to your slides if anybody has any more comments on the CTO refresh yep we good um I don't see the slides here yet your updated slides are not here let me see if I can poke I hit the update button but it's just spinning on me oh okay so let so the slides are in the tracker so Aaron you you have them locally and you can ask to share them I guess um yeah I mean I try our slides mides and where do I GL I still see the old ones it might be better to go ahead and share your new slides from your screen"
  },
  {
    "startTime": "00:12:00",
    "text": "do a screen share ear if you're up for doing that looks like me EO doesn't sync that well in a short period of time with the DAT detector so I'm seeing eron Whistler asked to showare the slides and I don't know how to that I Tred to refresh the page to see if the the new slides appear but I need to get permission again I still see only the old ones yeah if you can you can you share the screen Lo from local okay then I'll just share the screen exactly [Music] um okay can you see this already a spoiler of the whole slides yes we can see it perfect so um here is a brief recap of the changes that have been done uh between between version two and three and then we're going to go through uh the open issues that we still want to tackle I promise to have way less slides than last time so we have this this new algorithm list we removed all the nist and brain pool curves we unparameterized uh sltsa we kept only the shake version and in 12 fs and to 156s as we discussed at the last ATF meeting um the draft with n and brain pole curs is still being created is not yet there but it will be a separate draft so what we done is a split of the"
  },
  {
    "startTime": "00:14:00",
    "text": "two draft plus a reduction of the sltsa the algorithm numbers have been assigned for now for 105 to 108 to these uh to these um algorithms because we do have implementations for them while there is not yet a fully compliant SL hdsa implementation that we could use so we are waiting to assign these uh numbers till we have a proper test Factor we can create uh we updated the key derivation function we moved the domain separation to the fixed information and we also changed it so that tomorrow like in the future we can we can upgrade this and create a new version in case it's required and we changed the um the key derivation function to use sha 3 to5 56 uh instead of kmac um this simplifies the implementation even though kmac is uh let's say cleaner from the cryptographic side of this point of view this offers the same security level at the same time for a fixed length output that is all we need so we make the implementation easier and simpler um other minor changes we've done is we uh forbade the use of symmetrically encrypted data tag n the when you ever use pqc I mean no one should be using it anyway but in order to make it very clear we added a m knot um we forbid also the use of insecure hashes uh when you use V4 Keys into with pqc components so you can't use shaan or md5 um as well as some minor like references and editorial changes that that we've carried out in the draft these are the non-editorial issues that"
  },
  {
    "startTime": "00:16:02",
    "text": "uh we still have open they are also on our GitHub page this is very very uh like the second issue we had in the whole repository and we have the following sentence implementations must not encrypt a message to pely traditional public key encryption key of A recipient if it's encrypted to a postquantum uh key of the same recipient now how is this must or actually must not be enforced like um how do we make sure that implementations correctly handle this like um there are several different type of implementations some that are just the library and those should they look into the user ID should to determine whether this the same recipient or not uh or is it applicable to their to to them at all and this clearly brings the next question like should we make it a should instead of a must so like implementation if they can they should try to avoid this but if they cannot because they do not have the appropriate context they might not do anything about it and then should we include some guidance to how to achieve this um chairs do you want to stop here or should I keep on going it's very much your call but I I guess it's probably easier if people want to join the queue to discuss this we'll do so now I guess yeah so yeah so if you're in the meeting and you have thoughts on this issue please join the queue so not speaking as a chair but speaking as an implementor um I you know if we talk if we think that must is reserved for things that will otherwise break the protocol um then I am not convinced that this is"
  },
  {
    "startTime": "00:18:02",
    "text": "a must because people will continue to be able to encrypt data and decry data what it does do is it breaks the security of the protocol um uh if we say it should I tend to think that we should we should explain what the exception is um and diffic and the difficult thing here is that I don't actually see any legitimate exceptions other than I don't know how to do it because I can't tell which one is the right recipient um so yeah I I don't know I don't know how to frame this and we could also just drop the 2119 language we could say if this if an implementation encrypts these both things then the implementation is not providing post Quantum security as expected but I don't I don't know how to squ note that that is already included in the text this note like if there's any recipient is not post Quantum the the whole thing is not po Quantum and this this is an addition in addition to this text we have this other um we have this other um requirement that says well you like you must like you know you must not do this mistake of like if it's the same recipient because if you're already using two different recipients you and one doesn't have a PQ key well there's little you can do about it Andrew go ahead hi um yeah just to follow up uh um on on what the previous two people have said um yeah if you do have um any non postquantum recipients essentially at the at the application layer it's it's uh a waste of time so I'm I'm not sure that specifically calling this scenario is particularly useful or required"
  },
  {
    "startTime": "00:20:02",
    "text": "considering that we already have you know as you say guidance about um you know not not encrypting uh postquantum to everybody being being an issue um in fact I think it would be quite unlikely for an implementation to implement twice to the same recipient or would it not are there like are there implementations out there that would see multiple encryption keys for single user and by default encrypt to all of them is that is that common practice and and just does it need to be specifically addressed here or can we just live with the the general you warning against it as far as I'm aware there's no like there's no implementation where it encrypts to multiple keys for a single recipient yeah is I think a bit there is such a thing there is yes uh emac will encrypt a message to multiple keys for the same recipient if you tell it here are the keys that I want to use and the the prompting for it is sort of encourages the user to pick all of the keys that they think might be useful for that yeah so I think this in this sentence also puts put in context of the of our RFC is the fact that um we we suggest signing the same message for uh we using a a PQ and the traditional key at the same time so this is the idea is like do this for signatures don't do this for keys for encryption okay um yeah my my question is really do does it need to be specifically called out in this particular case or you know can we just live with the general admonition against not mixing po Quantum"
  },
  {
    "startTime": "00:22:02",
    "text": "and non-post Quantum encryption um I'm not pretending to have the answer just just ru the question in there thanks Sten yeah so forgive a possibly stupid question but uh where where is recipient defined I don't think we Define what the recipient is is actually so [Music] um so if you I me I guess the issue is if we if we're going to have a must or or even a should it kind of assumes you know what a recipient is and when two things are two keys belong to the same recipient and I I'm just I I just wonder is um you know we're obviously thinking of email in the back of our heads uh um but I don't know do we do we need to have a better definition of recipient if we're going to have some either a must or a should here true um we might want to make this nonnormative then as as an idea is the fact that we just say um in the in the context where we say Implement like that the fact that if you have a if you have any non PQ uh recipient or any non PQ key then your message won't be PQ secure and uh we might want to adjust a sentence saying um in the case of email in the context of email then uh try to avoid doing this right uh or or I guess the other way to I'm not sure that sounds reasonable another reasonable way might be to say that the first part you said"
  },
  {
    "startTime": "00:24:00",
    "text": "about not encrypting to PQ and npq keys uh and then also to have some statement to say that applications using pgp such as email will have to find things like recipients and in that case this guidance applies to recipients um but I don't know it's just I think it we probably need a definition if we're going to keep language as is on the slide um maybe dkg a better idea in the que I was just going to mention that um even in the chat there's some confusion among the experts in the room here about what is a recipient even from an open pgp level right are we talking about multiple sub keys in the same certificate are we talking about multiple certificates that map to the same email address are we talking about multiple certificates that Ma to the same human um so about the multiple sub keys that case is clear we say you should pick one and you should be the the the pqt one okay and then I think outside of the open pgp context we don't have like we don't have like Stephen said we don't have control over the recipients so I think you know I think I think the right approach here is to change the Mr pref prefaces like Stephen said with you know for context where there's some other concept of recipient besides certificate um if you know what a recipient is then you shouldn't con cryp a message to you know to two different flavors of key to the same recipient but I think we remove the 2119 language we just make it not not normative and we say if you think you know what a recipient is then don't do this thing and I think that would cover it without us you know basically declaring"
  },
  {
    "startTime": "00:26:00",
    "text": "a you know mandating something that we haven't defined I don't think we should try to Define recipient outside of same certificate uh in this in this draft and and and just just to note again I think the word recipient is used multiple times in different places so if if we're figuring that we need to do something about it in this context we might need to revisit the term wherever it's used okay yeah okay I'll move on to the next slide if everyone's happy with this at least so maybe maybe if you can just summarize what you think the result discussion is for the not takers yeah the result that I I got from this is uh I'm also going to report it then back on to the issues is to make the language non normative to uh specify that if the application layer knows the concept of a recipient it shouldn't be encrypting to the same recipient uh with two different Keys one PQ and one non PQ um at the same and then uh in general a review of the concept of recipient throughout the whole draft if we have it anywhere else thank you so uh this slide instead is about issue 1001 uh we that points out the fact that we have different security levels across the the the parameters we offer in particular issue 101 specified that ml cam 768 is of level three in and then SL hdsa instead is of level one"
  },
  {
    "startTime": "00:28:02",
    "text": "that corresponds to 128 bits um we deigned to represent this as a table instead because we would like to show the fact that this is also a problem or at least an in congruence with the key with the curves because we match the 192 bit curve to the 128 bit curve um these are approximate like this an estimate say 125 100 six but this is a to give an idea of of of the range um the point where we would like to get is with ML cam we over like we wanted to keep a security margin and so we decided to go for 768 instead of 512 and same for mlsa um so the question is whether we want to keep it this way or we want to lower the ml cam to the 512 this would Grant smaller artifacts and slightly faster processing time even though they are already like very very fast um the artifact in instead it changes by like I think a kilobyte approximately across Cam and DSA um SL hdsa instead raising this to the um 192 it would increase significantly the size and the time for for computation so the question for the working group is should we match these uh security bits or are you happy with the status quo U and if we want to match how Andrew please uh yeah um I think I think the over"
  },
  {
    "startTime": "00:30:02",
    "text": "provisioning of the mlkm is probably prudent and given that there have been concerns raised about you know the actual calculation of the of the bit strength of ml cam I don't particularly follow the arguments but I think there is sufficient arguments that it might be prudent to just avoid the issue entirely by staying with 768 so I raised this issue on the issue tracker and um I looking at this table and having sort of thought over it for a while I think I'm comfortable with where it currently stands um I just wanted to make sure people were aware of it um the way that I would argue that what we've landed on is U for the um L of space crypto we just have open questions as Andrew said like there have been enough questions raised about whether the post Quantum stuff actually works we wouldn't want it to be significantly worse um but for the um for the slh work it seems um people seem confident that that is actually the 128 bit level there so I think I'm okay with it I know I raised it I apologize if this is just drag the group down but I'm okay with as a Current stand and this table actually very helpful me in thinking about what we're doing with the with the other nothing to be sorry about um if everyone is agreeing I will probably then report back on the issue itself uh with bringing this table also there and making sure that uh the argumentation that I just made also appears there so that the it's uh it's archived and it's kept for future"
  },
  {
    "startTime": "00:32:09",
    "text": "reference okay um next issue and this is uh probably the the hottest topic we have for today that is whether we should bind the pqc encryption to V6 keys or allowing it with B4 Keys uh we already had this discussion at ITF 119 on the list there was also a pretty interesting discussion and this is not about discussing whether we should allow it with V3 or V6 PKS case this that's already uh that seems to have reached sort of consensus on allowing it also with V3 the question is whether we should allow generation of P4 pqc encryption sub keys so you can attach an encryption subkey to an existing V4 classical [Music] key um as of now the draft allows it and we already put some restrictions so for instance you cannot sign the sub key with a shaan uh binding hash binding signature hash um so the question that I'm trying to raise here is I think there are in this room a few people that are of the opinion of uh not doing so and uh I would guess that Kai that is the the biggest proponent instead of of this is not here uh I would like also to bring this very issue to the open pgp Summit where more implementers of higher levels applications will be there so part hello um so my two sense is that"
  },
  {
    "startTime": "00:34:03",
    "text": "historically uh open pgp has suffered from letting from being too loose about what is um essentially what kind of comod torcs can be done whether that's you know um not deprecating old stuff or or whatever but basically the more common toric you have whether it's you know the version Dimension the gorithm Dimension the other things the more testing you have to do the more you can get combinations which are insecure and um as much as as much as you know in principle I don't think there's anything wrong you know there's not assuming it could be done perfectly or or or close to perfectly I don't think there's anything wrong with4 pqc I worry that uh it's just going to expand the zoo in a way that doesn't actually add to security and the other thing is I think it hurts the community at large in the sense that um if pqc is not I mean personally I think V6 has a lot to recommend it without pqc but I think I think we're going to have hard enough time getting the community to go to V6 without having a killer app so to speak so just from a strategic perspective I think tying pqc to V6 and making this clearly the future is good makes good Strat IC sense and again from an Implement perspective and other things avoids having to support all kinds of weird combinatorics like the worst case scenario I think is that maybe not the worst case scenario the worst case scenario is people just stay on V4 and never adopt pqc at all but the second worst case scenario is people never adopt V6 and just do V4 pqc and V6 dies in The Vine and we don't actually modernize open pgp at all and that's what I think the risk is here because it'll be easier to just go to V4 PTC"
  },
  {
    "startTime": "00:36:01",
    "text": "anyway my two sense so note that PTC in V4 is not complete it misses signatures so you can do half of pqc with V4 anyway you can't really get it's just an optimistic kind of PA but you'll never achieve uh V6 all signature still very much bound to V6 signatures and V6 Keys um the other thing is if at this point we think about competition with the V5 Pro Libra pgp um there's the problem that um they are also releasing pqc in a very similar FL flavor taste than what is happening with V6 and if you think about having the same flavor on V4 and of on V6 it's probably someone implementing it for V4 will already have it ready for V6 and instead uh of having it for V5 so I do understand the idea of uh uh of having the killer app on B6 but we would not be the only ones having the killer app and maybe someone said decides to jump the bridge to be5 instead and we get un modernization that furthers the split between the various application and instead what I would propose with keeping it like with allowing it on before is the fact that it would be I would sort of call it Landing a hand to the people uh that are not yet convinced about moving towards Bas six uh by saying here V5 forbids it from using it with V4 and instead we allow it on V4 you can start using it with v before and then once you're into the environment uh you might also want to adopt V6 and our"
  },
  {
    "startTime": "00:38:02",
    "text": "signatures Andrew I yeah yeah just just to clarify for those who aren't following I'm not sure if there is anybody here who isn't following it but um the way that the the way that um Libra is doing um postquantum with V4 is that they're allowing you to create a V5 sub key of A V4 primary key and then they're restricting pqc to the V5 sub Keys which I think from you know when we're worried about Comin a Torx I think that that's the the one that we should really be worried about that that that to me is is is you know a very fragile uh way of doing things and you I've mentioned this before um I think also from I from from the point of view of people looking into the the whole pgp of whatever flavor from the outside one thing that they're going to notice is SSH has postquantum um tooda has postquantum Zoom have now announced that they have postquantum we need to rule out postquantum or it's not just a case of you know um encouraging people to migrate from V4 to V6 uh we're we're basically encouraging people to use pgp at all at this point I think there's the big danger that we have is that um we're we're going to leave people behind where they have to make a big jump into V6 which we do want them to do eventually but if we can make the their jump into pqc as easy as possible then we can very much present ourselves as we are doing pqc encryption just like everybody else we are not leaving people behind and I think I think that should be our priority personally and I think the idea"
  },
  {
    "startTime": "00:40:01",
    "text": "of uh using pqc to encourage people into V6 I think that's still applies uh as as you mentioned AR about about signatures if you want to do full stag pqc signing yes you have to go the whole way up to to V6 because there's no point having uh pqc sub signing sub keys of a of a V4 primary key and it's just it's a waste of time completely so absolutely if you when we're going to uh if we're thinking about the software signing and and package distribution side of things vasx is absolutely the way to go but that's also easier to implement because it's really when backend people um it's distributions that are using that as opposed to end users whereas the encryption stuff is much more end user facing I think in in the short term so I I think there is a a despite the disadvantages which I agree are real um I think getting post Quantum encryption into as many hands as possible as soon as possible should be should be very high on on our priority list and the four sub keys will do that I think that's the most efficient way have to thanks I just wanted to say that I think you make a compelling case um in in in that regard my my worry and I'm not necessarily sure how the best way to um to uh to accommodate it is just that uh if we don't get good V6 adoption that uh open p GP is going to die there are very very good reasons to believe that uh some big Tech players are going to be play pushing es even in the consumer"
  },
  {
    "startTime": "00:42:05",
    "text": "clearly you know with the Schism and whatnot don't have our together so any I I I I I don't know I don't know what the best way to do this and I think you're right Erin that we should probably talk about at the summit but uh uh yeah I I don't know how much V4 pqc is going to motivate people to uh I I worry it's going to under undercut V V6 adoption and we're going to be in a situation where the default becomes essentially V4 with pqc which of course is better than V4 without pqc but basically just means open pgp all the problems with E4 we're stuck with forever and the protocol itself stagnates and eventually becomes obsolete but anyway I I I don't know if this is the right way to if Ty them together is the right way to address that or not so note that I've I've had an exchange with uh with Burner as well and I tried to see if he would come to the open pgp Summit as well not I mean did not ask him to come to the ATF since it seems to be an open FI with that but at the open pgp Summit to discuss this and it seems like he can't join um on the end the only agreement that so far we could agree is well we his open PG his uh postquantum implementation is limited to V5 and therefore it will never conflict with ours because even if the code point is the same we won't allow it on B5 and he won't allow it outside of B5 I don't want to uh I don't think this would be I don't think this is the right way forward would have been nice to have a single uh a single at least PQ"
  },
  {
    "startTime": "00:44:01",
    "text": "implementation uh I'll still try to to see if anything if we can get anywhere um but on the other hand um like at this point if this is the kind of cooperation we can only have we can have I think the only uh solution I can imagine is to well we do our thing and they do this uh thanks Erin I think we've uh um reached a conclusion on this one here um well we we reached a conclusion on the discussion today but I don't think we reached conclusion on we don't we don't we haven't reached the conclusion of the topic I think uh we had a good great discussion today um I am looking forward to meet most of you or hopefully all of you at the Meetup and have a discussion in person having a dedicated session to this problem trying to sort out what is actually the best solution and in case what would be the trade-offs we would have to do in operation in operational complexity for it we have here the links they are also the old slides if you can't find them please go onto our issues open new issues commment into existing one thank you thanks Ain um one additional comment that of like sort of outstanding uh argument that we've had on the list is about whether or not the hybrid EQ signature sorry I'm using the wrong term I never remember whether we're talking whether it's composite or composable but the the mlsa plus eddsa uh approach is needed I think Steven has been the largest Advocate uh for saying that that's not something that's necessary um my sense is that"
  },
  {
    "startTime": "00:46:03",
    "text": "everybody else in the working group besid Stephen is okay with going ahead and defining those two things um uh and so Stephen I don't know uh I mean Erin I see you didn't ask you didn't raise that point uh in your slides but Stephen if you end up sort of in the rough on otherwise working group consensus on in terms of defining the mlsa plus EDSA stuff is that something that's going to like how how are you feeling about the outcome of that not to put you on this part sure well I think I'm right and you're all wrong but that doesn't really matter because if there's consensus to go ahead and do it then I'm in the roof and that that's just what it is I'm not you know it has no impact uh so it's just you know some some disagreement time will tell who's right wrong but if the working group have consensus on something then what I think doesn't really matter um I mean as far as I like as far as I know I think we uh we decided to go with this we to reduce the number of algorithms to this experiment with this uh with these current code points we have and if actually by the time we are further in this work it comes out that this is actually the the opinion the working group changes or or anything I'm very happy to revise this and drop the ECC component of it I let's say like this what happened with um the the paper uh the one published about the factorization of uh like actually not factorization but solving on quantum computers um of uh of latis problems it came came out of the blue it went out out of the blue as well uh but shows that someone might"
  },
  {
    "startTime": "00:48:03",
    "text": "just come up with also a non-quantum algorithm to do so and well this protection would not be completely useless sure but I mean I I assumed dkg was more wondering if if I would cause trouble as a chair or something and the answer is I won't thanks I just wanted to make sure that we have in the I mean this is one of the outstanding arguments that have been going on the list and it wasn't mentioned in the side so I just want to make sure that it was at least raised here sure thanks thank you I think we should move on to the next uh the next deck here which is Andrew and Eric before we but just before we do um Aaron um you you mentioned that there's the open pgp Summit coming up does it make more sense to try and ask people to review this document after output from that or or or in the in the week before that I mean uh we we plan to we originally plan to publish this document by today because um also in view of this Summit that is happening so please I am very happy if anyone can have a look before even or after with the new information we will get I think that before would be better to show up at the summit with at least an idea of what's going on and uh an opinion then I'm I'm happy to to discuss them in person and and find a common solution okay and then what's what what's your thinking or what's the author group's thinking on another revision timing wise I will be on going on holidays starting tomorrow so my opinion is that I don't think I will have much time to publish a neww Vision by the by the how say by"
  },
  {
    "startTime": "00:50:00",
    "text": "this by the summit as I will come directly to the summit from my holidays uh but I am really happy like if some major discussion happens in the meanwhile I don't need to be there to publish a version and in case we can always do a new tag also without me yeah I'm kind of more wondering for people who are on the list and involved in the working group who won't be at the summit so so perhaps I should expect another version before the next ICF meeting something like that yeah definitely that that that for sure most likely after the after the summit we will have some updates okay so in in three four weeks something like that yeah great okay thanks uh Andrew I think you're up next I can display the slides or if you'd like to request control I can I think Stephen or I can and you off control at the sides uh yeah let me see where is request control oh I think there's a there's a share slides button at the bottom is it ask slides is that it yes it is okay yeah y okay uh is so working for y see it just if you let people know if you'd rather they wait till the end or jump in whatever is your preference is fine yeah sure sure um so the structure of this is going to be kind of there's I start off fairly concrete and then it gets uh wooly towards the end and for for reasons that are probably already obvious if you've been following the the mailing list but uh anyway so this is an expansion of the slides that I was supposed to give at ITF 119 but"
  },
  {
    "startTime": "00:52:00",
    "text": "unfortunately I was ill and couldn't attend um there probably wouldn't have been time for me anyway given the other uh items in the agenda but um so this is just an expanded version of those slides with some extra um uh some extra feedback uh included so uh as dkg I think already mentioned um so this is a Revival of a very old idea Daphne originally Drew this sub around uh 2001 um so the basic idea is that we uh Define a new signature subpacket and we can use them in any kind of self- signature but really it's going to be either standard self-certification signatures or revocation signatures um it's not particularly useful for any other kind of signature so um we call that out in in in the document the uh the kind of the wire format design it's along the same lines of intended recipient subpackets so we have a version of a version and the fingerprint of the new key which is the one that we suggest is the replacement key for the current key um there is also a subpacket version bite and a Flags bite that just gives us a little bit of Elo room to Define extra stuff in in the future if we need to um there is one flag already defined in the flags bite uh in the document and that is a specific flag to say that there is no replacement key as opposed to leaving the replacement key undefined but other than that there's there's nothing else in there at the moment it's just uh for future use so the semantics of this is that it provides a hint or an indirection for where to look for a new key for a particular user so if a user has has a key already but they want to rule that"
  },
  {
    "startTime": "00:54:02",
    "text": "uh they can add this essentially a notation to this key pointing or identifying the replacement key so that people can follow that and find the replacement key by whatever means it also uh defines a preference ordering between the two and that's kind of implicit in the fact that it is an indirection but um if for examp example a correspondent has both keys uh how do they choose between two keys for the same user if there is a replacement key subpacket that essentially defines a preference ordering subject to them both being already valid and unverified keys for that user Again by whatever means uh and and this is where we start getting into trouble because this IND direction does not contain in itself any kind of trust relief ship and that's that's deliberate because of the design the design uses fingerprints as identifiers rather than uh signing over an actual key uh get into that in a second but the standard you know assumption uh of how this would be used would be if I as a key owner want to rule my key so I currently have a V4 RSA 402 H key I'm I'm very very stuck in the p uh but I want to bump this up to a post Quantum key say a V6 post Quantum key or something like that in the future so I create this new key and it's probably a good idea for me to certify that new key with my old key to provide some kind of relationship to start with and then I make a new self signature on my old key which includes this replacement key subpacket and this replacement key sub packet identifies the new key now this point I can do one of two things I can either soft provoke my old"
  },
  {
    "startTime": "00:56:00",
    "text": "key now or I can not now I can I if I do soft revoke my old key I can include the replacement key subpacket in that soft revocation because it's a valid sub key in that context sorry a Val subpacket in that context um the reason we don't I don't mention hard revocations is of course if you hard revoke a key everything about it is suspect including subpackets so it's h pretty meaningless but with a soft revocation what I'm saying is that is I'm saying do not use this key anymore you must use the new key but in the case of a V6 or or uh a postquantum transition not all of my correspondents may be able to understand the new key so I may want to leave the old key still valid and have the new key valid for some transition period between the two and and so in that case I would not soft provoke my old key or at least at least I wouldn't revoke it yet I might do it some point in the future in either of these scenarios um my correspondent would see an updated version of my old key if they've refreshed it say from a key server then they would know to go and find the new key and then and then this is where where it starts to get complicated because because we don't have a uh an implicit trust relationship we still need to verify the new Key by standard means by whatever other means we would normally use uh to perform a trust calculation against that key in some scenarios this is fine this is not a problem in other scenarios this actually might get problematic uh so this is where um this is where we start to ask how far the scope of this draft should be so calculating the Trust on this new key is"
  },
  {
    "startTime": "00:58:00",
    "text": "is non-trivial and and the thing about trust in in pgp in general is it's non-trivial and uh the initial draft of uh of this particular document uh basically tried we tried to defer any discussion of trust to other documents or other places but after discussion on the mailing list it became pretty clear that we couldn't avoid the issue and we're going to have to deal with uh trust calculations uh or at least call out you know some recommendations for for trust uh uh methods here um so this the scope has expanded a bit so in the current draft we do specify uh a couple of usage scenarios they aren't fleshed out in full but they're kind of skeleton use usage cases and I'm going to go through a couple of them here and then I'm going to to mention one that we have not really discussed because it does expand the scope of uh of this document significantly and you know that's something I'm I'm unconvinced we need to do but we might need to do it um so the main issue here is that um the replacement key subpacket itself is crypted graphically weaker than a certification because we're only signing over the fingerprint of the new key we're not signing over the actual new key itself normally if we make a third party certification over somebody else's user ID it's also signed over their primary key and that's a particularly strong cryptographic binding but because when're we signing over the fingerprints you know there there are concerns that you know what if a particular fingerprint algorithm is deprecated in the future will we have problems with sha two and have to migrate sha three you know these the these issues come into play where they don't come into play for a standard certification signature now one way of getting around"
  },
  {
    "startTime": "01:00:02",
    "text": "that would be to actually sign over the key material of the replacement signature but then we run into other problems um the first problem is that particularly in the pqc world um the new key might be quite large um and also the new key may go steal so for example the new key May itself be revoked for whatever reason so so we don't gain much because even if we do have a full copy of the new key inside the old key we're still going to have to go and refresh the new key to see if there are any revocations on it and we're adding a lot of complication for not much benefit really so so we've decided that key trust needs to be defined by some other mechanism not just the replacement key subpacket however it is defined so there's three ways to do that um we can do we can do it the web of trustway by getting certifications over the new key to match the old key uh or we can use something like wkd or autoc crypt uh to distribute the new key in a way that has implicit trust or we could Define some kind of specific certification where we could sign using only the old key over the new key in such a way that we can transfer full trust from one to the other and this is a novel mechanism that we probably should think about a lot more before we try to Define it so I'll run through the first two quickly um we've discussed the this on the list uh at length uh sorry Daniel you want to jump jump in yeah so I just wanted to jump in and observe that um one of the issues from the working group perspective is that we have not managed to get a clear working group consensus on adopting this draft so I I really appreciate you're"
  },
  {
    "startTime": "01:02:01",
    "text": "going into the detail and this detail has come up because of the complexities that arose during the adoption call but I want to flag in particular for folks that if you're concerned about adoption uh if you're if you think the that these things are worth working on that that we have this Baseline question of adoption and for that we need to hear a clear voice from the working group that says yes we want to work on it and we think this document is the is is heading in a Direction that we want to work on um doesn't have to be that it's perfect right now I just want to I just want to re ra the adoption questions in particular yeah thank you sorry sorry no no no you're fine sorry yes I probably should have called that out earlier um I I was planning to call that out at the end but yes thank you thank you for for the reminder um Bart I can wait until the end sorry Daniel jumped in so I thought it was time for questions but I can I'll stop uh okay no problem Daniel you're muted sorry sorry about that yeah I did want to um respond to Daniel's uh Point by saying that I do think it's useful to talk through these issues before the or during the adoption call let's say because my um question on the maining list was kind of if we don't if if we don't think about the trust uh questions like is is this draft useful right does it does it serve the the purpose that we think it does or should so I think um I mean having this discussion might help resolve that uh question at least for me okay thank you so um yes so so in the"
  },
  {
    "startTime": "01:04:01",
    "text": "next three slides um I just want to quickly go through the the issues with trust that have been raised on the list and as was at that point then uh we can we can decide it gives people more context um I suppose uh as to how this would fit in to The Wider kind of uh trust concerns uh it's hard to talk about trusts specifically when we don't even have an agreed um kind of uh mechanism for trust just in general in in open pgp it does tend you know we have the web of trust but still very Willy around the edges in some ways you know there have been some attempts and some draft documents even even made to try and pin them down um so I'll try and keep this you know um limited to just what applies to this particular draft uh and we can worry about you know the wider issues of trust uh at some other point so yeah so to get back to the the list discussion um so one one of the issues that was raised is um about transition documents and the way the transition documents um have have been done in the past is people basically write something out in in human readable text to say this is my old key this is my new key I would like you to my new key you know please gather some signatures so the way that this would help automate that particular process would be if I create the new key and I as discussed earlier and add the replacement key and do not revoke um which was one of the Alternatives that I spoke about in the previous slide I can then send both of those keys to my existing certifiers over my old key and ask them please sign my new key I see you have signed my my old key and then if they sign my new key and send it back to me I can publish the"
  },
  {
    "startTime": "01:06:01",
    "text": "new key with all of the third party certifications on it hopefully that you roughly match the third party certifications on my old key and that basically implies that anybody who trusts my old key probably should trust my new key because the same trust calculation will end up being performed on both keys so they should come out equivalent so once both of these keys are then trusted then the replacement key subpacket indicates an ordering on the keys that are already trusted so that the new key is preferred over the old key and then at some point I can then revoke the old key uh depending on how long of the transition period that I want the other method would be to use some kind of trusted or implicit Trust Channel such as autoc Crypt or wkd so uh what I could do is I could distribute both keys via the same channel so if you would trust my old key if you receive it over autoc Crypt you would automatically trust my new key if you received it over autoc Crypt because it's the same thing and similarly with with wkd but again here the replacement key subpacket indicates an ordering so it says this is the one that I prefer if we are in the have not revoked the old key scenario so say for example post Quantum uh migration period now that does require that whatever your distribution channel is it has to be able to serve both keys wkd as currently defined in the current draft does not allow for multiple keys but we can look into that that's a matter for another document the third way of doing it which is is uh what Daniel Haggins and I spoke about briefly on the list was how do we"
  },
  {
    "startTime": "01:08:01",
    "text": "infer trust based purely on a signature by the old key over the new key without having to involve third parties and getting all of the certifications can we not just bind one to the other some way and just say these two are equivalent um so one idea would be you know if the old key certifies the new key and they have matching user IDs then obviously they're the same person but that introduces wrinkles into your web of trust calculations because generally in the web of trust if a signs over b b will normally get a lesser trust value than a um because you have to not only trust a but you also have to owner trust a for the signature over B to be considered in your trust calculations and you may may be using a partial trust model that requires more than one signature and this gets really complicated um with existing uh web of trust models so overloading the meaning of something that already exists in these kind of narrow circumstances might be confusing it might need to unexpected results uh so I would be of the opinion that if we are going to do this we should Define a new mechanism for it so either we could Define a completely new signature type uh which which might be Overkill or we could use an existing certification type and then add a subpacket in order to distinguish it from you know an ordinary kind of certification um one other thing that we should consider also is uh the cryptographic strength of this kind of certification because again generally as you go down through your you know your your web of trust your your trust value decreases and the places in pgp where we"
  },
  {
    "startTime": "01:10:05",
    "text": "assign an equivalent trust value to something generally involve much stronger uh certification so for example if I have a primary key that can sign on my behalf and I have a sub key that can sign on my behalf we typically require that the sub key also has a back signature over the primary key in order to establish that equivalent y because otherwise people you know can do nasty things like stealing other people's or sub keys or pretending that somebody else's signature is their own uh so we we need to consider that as well if we're going to go this way now I'm going to go slightly off the reservation here I did also have a discussion with some of the guys uh who work on the aradne also known as uh K oide protocols and uh one of their issues was actually redaction of old user IDs essentially and because there is no way that we can revoke old user IDs while also redacting old user IDs because they have to remain available for the signatures to verify um there there there's an issue uh with privacy that might arise if we have quite strong certification bindings um one one one thing that that I we did suggest was that maybe this replacement key mechanism could also be useful for the arod protocol where instead of acre multiple user IDs on a single pgp certificate you actually can roll your pgp primary Keys over time and put your new uh proofs on the new key and then eventually at some point revoke and clean up the old keys in order to maintain some semblance of uh of control over your own privacy now um one thing that they did also mention was that this"
  },
  {
    "startTime": "01:12:01",
    "text": "user history for their means should be walkable in both directions and having a trust relationship of A over B does allow in principle if particularly if it's certification somebody to take key B and then identify that back to key a and that raised an issue again in my head about maybe people don't want this replace to you know maybe people don't want others to be able to follow that replacement chain backwards so I'll skip over this slide basically I won't read through the whole thing but the general the general idea is that there are different places where we could put the certification signatures should we if we have some kind of trust equivalency signature should we distribute it on the new key or should we distribute it on the old key because from a from the point of view of calculating the trust you're going to have both keys available anyway so it doesn't really matter but depending where you distribute it also has implications for privacy which are not well explored and may be problematic in some cases and we are getting into the weeds here um but the general thrust of this is that there are uh there are options here um for how we determine the trust of a replacement key but they all come with tradeoffs and um if we do adopt this there is more work to be done in terms of uh teasing out the implications of trust uh and how trust can be inferred on on the New Key by some you know what what are the trade-offs between the cryptographic strength and the Privacy implications so yeah just a few couple couple of uh open questions on the list I think I've gone"
  },
  {
    "startTime": "01:14:00",
    "text": "through them already so the first one is you know H how does what implications does this have for how people do Transition documents I don't think very many people actually do have transition documents um certainly in The Wider kind of non expert Community I don't think they're well known or or well understood the web of trust itself is not particular well known or understood uh and and most people who have keys have no certifications over them so it doesn't really make that much difference to them but for those people for whom the this kind of certification rule over is important we we do need to be sure that this does meet their use case and and I suppose one outstanding question is is there a standard transition document use case I I know Simon has provided his own is that typical of other people I I don't have enough enough information to really make a decision um one issue that uh Daniel mentioned was that you know how does this play into tofu particularly in an autoc Crypt scenario um if you receive an autoc Crypt key do does does this make any difference to whether we accept the the new key delivered over autoc Crypt or not um should we just take what autoc Crypt gives us and just you know and just use it is that to for you or is that you as as dkj puts it um I think it's some somewhere in between maybe and then one suggestion that Bart had was that um the single key limitation of wkd which I mentioned a couple of slides ago we could fix that in a new hkp protocol but that is a separate document for another time so I will finish up uh here these are the links to the usual places um so any questions yes"
  },
  {
    "startTime": "01:16:00",
    "text": "hi hello so I have like three comments first whenever you define a new OP pgp sub packet please make sure to specify what it means to have more than one sub packet um I think that would be rather useful in this case to have a traditional V6 key and a postquantum V6 key for example okay um I'm not fond of um the version field and the flag field um I think we should rather uh slim the packet down and if it doesn't fit future use cases make a new sub packet there are plenty of free sub packet slots because um I'm worried how that interacts with subpackage criticality um for example um should a critical subpacket make the signature verification fail if one of the bits in the flag field is set that we don't understand probably but it's complicated yeah that is that is um I think I think that's a a general problem really with critical subpackets it it crops up quite a lot so um yeah it's it is definitely worth exploring that sorry you had one more yeah second uh third um you mentioned this this trust delegation mechanism I believe that is already present in in pgp um you can or we believe you can make a a direct key signature and include a trust sub packet this is like a delegation to the new key"
  },
  {
    "startTime": "01:18:00",
    "text": "yes but you still sorry go on go on well the neat thing is that um Downstream consumers will you know if if they happen to have a trust path to your old key um then this will extend to the new key um seamlessly so the trust subpacket I think you still need to have owner trust of the old key owner trust is a newg package uh it's it's gup concept that's kind of special to how gup computes the trust the web of trust yeah you see here here we're getting into you know how different imple implementations think of the web of trust uh and I think it's uh it gets it it gets messy then so just as a chair interrupt we we were down to like 12 minutes que of a couple of people um so I think the adoption call is the is the main thing so um do we I mean i' like if people would just given you know an opinion about adoption and we'll have to process on the list and then move on to Daniel's I think so Daniel did you want to talk and take consume your own time yes I will take one minute of my presentation time to say that uh I I if we include the trust um topic into the scope of the document then I will be in favor of adoption although I think we should consider like trying to solve both at the same time somehow like pointing uh pointing users to the new key and uh and delegating trust if we can do that in a in a single sub packet or if it's already possible like uh use this uh says then maybe we could write down how to do that uh without defining"
  },
  {
    "startTime": "01:20:03",
    "text": "any new subpacket um so or or combine the two somehow so I mean that's a bit of a vake [Music] um fake idea of what the what the draft should be but if we are are open to uh considering that then I I will be okay so the call for adoption is open uh on the list I can't remember what the deadline set for that was if there is one but it's long gone I guess we should we should add another week or two from now and then we should encourage people to to express their opinions on it and they can use this presentation then as uh as material to to form opinions if they haven't already think that's that sound like our way forward okay um yep I'm I'm happy to leave it there unless okay so yeah we so as chairs we we we'll send a renewal of the C option given another week or so and or two weeks maybe and ask people to express opinions uh about that and point them at this recording okay thank you okay thanks Al thanks and Daniel you want to oh yeah there we go okay and we're at 9 minutes so I guess as Speedy as we can be yes I'll do my best thanks all right so I've already presented about persistence metric Keys uh at previous ITF meeting so I I will fly through the introductions uh and then if you uh have any comments about the the concrete uh description please interrupt me during the presentation so yeah very briefly um we would like to allow users of overp to encrypt messages and files and so on uh using a long-term symmetric key uh that they store encrypted with a password um"
  },
  {
    "startTime": "01:22:02",
    "text": "uh rather than for example encrypting individual documents with a password or uh encrypting uh documents with your own public key which is uh rather common today but is obviously inefficient especially uh once we go to post Quantum uh encryption and similarly we would allow uh want to allow creating asset attestations uh using a symmetric key for example to record the result of a signature verification so that you don't have to verify the potentially postquantum asymmetric signature again every every time that you open an email or a document for example so how do we roughly do that uh well we we noticed that the semantics uh that we want are still those of PK and signature packets even though the the name of uh the bksk packet uh doesn't really match so we propose uh renaming it and also redcon in the public key algorithms registry to persistent key algorithms and then Define uh two new uh persistent key algorithms namely aad and hmac obviously the details are up for discussion and and even the red cunning idea is up for discussion um but that's what the draft uh does right now so um this is roughly what the current draft says um except for the algorithm IDs uh but um the way we've implemented it right now in our experimental implementations is with the two experimental algor algorithm IDs 100 and 101 uh the first one for aad uh um which specifies a symmetric algorithm to"
  },
  {
    "startTime": "01:24:00",
    "text": "use uh in the public key and a secret key uh it has a key material and then we have this uh this seed and the hash of the seat which is kind of meant to bind the the secret key and the b key together so that you when you decrypt a secret key um you you know that it's U belongs to the public key uh that a message was uh was encrypted with or it belongs to that fingerprint let's say although um I'll get back back to that particular detail um and then the bksk has the a algorithm and the IV in the links in Sur text although we'll also propose some changes to that um and then the hmac has very similar hash algorithm and the key material in the private key and uh an authentication tag in the signature symmetric signature let's say um so then regarding the algorithm IDs maybe the least important detail but I would propose that we uh eventually choose 128 and 29 such that you can use the first bit to uh determine whether it's a symmetric algorithm and then if we ever want to we could you know Define 130 then uh or we might even want to define a new range for experimental uh symmetric resistent key algorithms um so that you can know that they're symmetric um even if you don't know the algorithms uh one other change is uh during it19 or when making the slides I realized that it would actually make a lot more sense to put the aad algorithm in the public key so that it's um uh so that you can only use the key with one aad mode um otherwise we would have to"
  },
  {
    "startTime": "01:26:02",
    "text": "probably introduce an hmax tab to to have key binding uh which is you know a bit more expensive um and if we put it in the public key and you encrypt the private key um using aad then it's it's bound to the public key material so you can know that the key material is bound to the a algorithm then one other detail is I realized that if you do that then the key material is already bound to the public key material as I said so we could just put a fingerprint seat in the B material and that should be enough to to bind them together if we require that you uh use aad encryption meaning s2k usage o 253 when encrypting such keys and then I realized that the length is since the Sur text is last here so if we put that all together then this would be my actual proposal um rather than what the what the current draft says and this is uh more or less the state on gitlab right now uh so I'll link to that in the next slide uh so um if you all agree with these changes then and if you agree with to adopt this document obviously then I I would propose that um uh we we publish the version from gitlab um to to thep scope um but obviously if you have any comments uh about uh any of these details or any other details uh I would be happy to hear your feedback uh yeah here are the links to to gitlab uh yeah we have experimental implementations in open. J and go crypto"
  },
  {
    "startTime": "01:28:01",
    "text": "that still need to be updated to the details uh that I describe now um but other other than that they essentially they essentially implement this um this version uh so yeah uh let me know if you have uh any feedback or if you agree with uh these changes obviously we now we only have two minutes left but I'm also happy to take feedback on the list or anywhere else yeah thanks let me know if you have any feedback or questions thanks Daniel um in terms of the call for adoption I want to just remind folks that uh the you know what we're aiming to do here is produce interoperable mechanisms um and in some sense the use cases that Daniel's present mented are for what might be a single implementation and might not be interoperable in that sense might not need interoperability um I I will flag with with no hats on but for me I actually think there is still an interoperability question here but then we have this is a you know we have stored artifacts um and then you might want to use a different implementation to access the same stored artifact um and I think that's the that's the reason why we would want to consider adopting this if the working group is is interested but that would mean that we would want to ensure that there are at least uh another there's at least another implementation that's not coming from proton that would be interested in actually try to make this stuff work so in terms of the adoption call please think about whether as an implementor these are things that you would be willing to do to be able to interoperative handle um they you know store data sets just want to flag that as an adoption great so so there's an ongoing adoption call for this on the list um relatively"
  },
  {
    "startTime": "01:30:01",
    "text": "recently I guess it still hasn't got huge amount of feedback um since the adoption call but uh so I guess the action on the chairs here again is probably just point people at this presentation maybe the previous one as well and try and solicit opinion on the list about adoption that that sound right okay and again I forget what deadline was set for that but we can shift it anyway because it makes sense given that there an interim and people have something to look at but they can think a bit better about it um so in the in the zero minutes we have left I don't know if anybody wants to jump in the queue and express opinions about adoption of this or questions quickly don't see anybody in the queue so um I guess we have a uh we also have zero minutes for any other business any other zero business dkg are we I think that's I we're we're at time here I appreciate the the presentations and the um and the commentary interactions um if you're if you chew over what we talked about today uh please and you come up with um thoughts about it please share them on the list um and uh for those of you who are coming to the open pgp email Summit which is coming coming up soon uh I look forward to seeing you there and we'll I'll make an effort to report back from the summit to the as well great thanks and and uh Paul I'm not sure if you were there at the start or not if you have any kind of AD kind of wisdom to impart uh no I was not there at the start sorry I was like 30 40 minutes in late okay so we we we mentioned the O 48 on the crypto refresh um is is in work um and otherwise uh any other AD type news you want to"
  },
  {
    "startTime": "01:32:00",
    "text": "impart um no um but uh but yeah the um the off 48 is a huge one it's one of the I think the biggest I've ever seen so it's going to take some time and um as an author I responded but I definitely need the help of some of the other authors on this yeah dkg mentioned that at the beginning all right great uh so with that I guess thanks to our not takers uh you look like you've done a fine job and there's a couple of actions on the chairs to poke things along and uh I presume we're going to be requesting a session in the Vancouver ITF um so we should get to do that as well anything else we've forgotten or I forgotten PKG I think that's it um I think I may have already requested the session at the Vancouver ITF but I'll I'll double check to make sure okay great great um great and with that I guess we'll take those actions follow up as we will and see you on the list and thank you for turning up today and thanks to people for presenting our not takers and everybody else thanks all thanks and byebye thank you bye bye"
  }
]
