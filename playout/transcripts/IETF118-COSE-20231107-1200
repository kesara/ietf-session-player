[
  {
    "startTime": "00:00:15",
    "text": "Oh, I Okay. And then it's I'm about time to You extended? Okay. Hello, everyone. I think it's temporous to get started. Welcome to the cozy working group meeting. I'm available, and, this is Mike Jones. We're in the cozy chairs. I will start with a few reminders and this session is being recorded. This is our not well. I imagine one is familiar with it, but if you are not please read it before participating in any discussions. Another reminder. Please be nice to each other, and if they are the convergence of opinions. Please focus on the technical aspects and not on the people. Okay. And here, a few deep about how to use the Yes. K. And a few links that are general for the on this IETF meeting. In case we need them. And, the next item is the note taking Christian has agreed to, be taking our notes And, please, everyone else also try to help there. This is really appreciated."
  },
  {
    "startTime": "00:02:05",
    "text": "Okay. And then we will provide status of a few of our working group, documents Okay. Let me try to talk a little bit close there, Sounds good. So, next is the status of for that different working group documents. And the CWT claims is scheduled to bin ISG telechats. The end of this month, the BLS key representation is awaiting constant related draft since and CFRG. And, post quantum drafts are waiting for underlying algorithm trust in entist, and, they are also bookings and for more feedback, and the marker tree drafts our also waiting for some more feedback. And let's say TSD shared parameter, was recently adopted, and, there is no more progress since then, so they will not be presented today, the rest of the working and group drafts who have presentations today. And, with that, this is our agenda for today. Is there any passing of this agenda. I hear none. So we will move to the first presentation and then It's my"
  },
  {
    "startTime": "00:04:11",
    "text": "Hello. I'm Mike Jones. I'm not being a chair right now. My co chair is coming. Is chairing this session. I will talk with you today about what's happened with the type pet or perimeter draft. Next. 8 So this is a refresher, but I won't spend much time refreshing. What does this do? It adds a type petter parameter as protected header. Which enables typing the entire cozay, object using either a co op content format number or a media type with media type parameters. This parallels what's already in the CAUS draft for the content type value, which was included, but for reasons that I that are lost in histories, for some reason, because I didn't also include the type header parameter that was present in Jose, this aims to rectify that. So why do this? The chat, BCP, recommends what's called explicit typing. Where you put an identifier of the kind of thing that it is. In the thing in a secured way. That way, thing 1 and thing 2 can't be confused by recipients. And if an attacker tries to repurpose sing one, into a thing to context, it can be rejected. That's what explicit typing does. There's a security reason for adding this speech to"
  },
  {
    "startTime": "00:06:01",
    "text": "Kose, which parallels that in the Jot BCP. So what's happened since we last met our heroes in San Francisco cow. And We ask for feedback on the draft from the working group. We received that. We published a new draft that incorporated that feedback. That draft was adopted by the working group. And until a couple days ago, we'd received no more feedback on the draft. Which I largely interpreted in my co author, Orie, as people seem to be largely good with this Carsten gave us some useful feedback on wording having to do with entity type parameter or not entity type parameters. Content type parameters. That's a typo on my part. That. Sorry. That's from a different draft in a different world. So we added language saying yes, and sometimes There are parameters on entity types. And we published that. I wanted to get that feedback into the draft, from Kirsten before we got here. There's been no breaking changes to the draft. And no other feedback have been received since working group. Adoption, Kirsten. Kirsten Roman. I just wanted to say great PR you you put in there. I still have some warning changes. But wording changes are a good thing to suggest that the regular bus court Yeah. So please. Absolutely. Charge for the speed ahead. And it's also the case that this draft"
  },
  {
    "startTime": "00:08:04",
    "text": "is now being recommended in another draft which is I think the one you want the wording changes to, but we can work that out. Which is the CWT claims in headers. Which is recommending that, you know, gosh, if you have claims, you actually wanted to find the semantics of them. And doing explicit typing is a great way to say and this is the specification that defines the semantics of these claims. So there's, interlocking benefits of these two drafts. So, having talked with a number of people about this. I think we're at a point where it's time for working group last call. But that's not my call because I can't share my own Evo, do you wanna think about that? Yes. I think we can if there are no further comments, let's say, until the end of the IETF, I think we can start the last call. See what will be the feedback there Right. Right. Right. And and thanks again to Kersten for reading the draft and helping refine the wording. I'm done. K. Make Is that okay? Yeah. This is Jorge. So I'm, giving So, update the information about that and cause a key sampling."
  },
  {
    "startTime": "00:10:01",
    "text": "K. And since, I did 117. So I got the 3 updates for the acoustic some prints. So, I giving a walk through the about about upgrades. And first one is supporting symmetric kits, and this is request it in, I guess, 117. Especially, suit use cases. So what's all the adding and the finish line is very simple. So and, support things are asymmetric key values. And so read it, so, security considerations. So because, so, the case somebody who is, reading to, expose the originate asymmetric key values. So we added, warnings about the, entropy side, for I'm protecting I'm restricting, I'm guessing, and what is in our keys. Yeah. Of an interface task. Yeah. And second update is, adding about CWT confirmation methods are definitions in key sample print draft. So, RSC it's saver 47 defines, key proof of possessions, in the CWT, creams, So Kite. Drafted current RSC defines as 3 types. And encrypted keys. The key IDs. So in this draft, I don't know, for some types. So the value of, key sample print is can be used as a confirmation of Mister Patterson. So the Brooke, Brooks, Saco, scares that shows, displays"
  },
  {
    "startTime": "00:12:01",
    "text": "sample, confirmation samples. So but so this is a very similar about, deep ops in the So there are no, especially difference, between Yeah. JWK is France. And, I now update. So it's a kozaki sampling URI. So, and this is, proposed by all year. So thank you for So this is a, it's a also that's similar, with, a database sample into URI. So under the popsies are Yeah. It says the same ones. So the we defined the new prefix that is a showed a green strings, a CKT, but so the advertised as a, values are resuming the Riza. Devocase some print URLs. So Hushawa is is, choose from the name the information, hashtag what is registered. So not that cause they are what is and registries. And the value is, best flow basics for URL encoded, cause a key, some print. We saw be so binary string values. K. So finally, so, it shows, compare comparison with, knows the functionalities. So, Ava saw the key sample into functions. So we now covers, all of those 8 key functions are same events. So there are some, deference. But, so, we cover, we now cover our functions. Visa, yeah, knows this once. Okay. Fine. So the next step. So this some ideas was achieved by Mike. Thank you, Mike. And so we think, ready for the I asked, sending us a"
  },
  {
    "startTime": "00:14:03",
    "text": "So they are if there are no comments or no objections, Thank you. Any questions or comments Dustin Bowman again. I was just intrigued by by one of your slides. Can can you go back a little bit? One more. Yeah. This one. The the Are you chief parameters, your ins, unmitigated disaster? We we I think we all agree on that. But I think in this particular example, there may be a little bit of a confusion potential here because It actually talks about OAuth. And people may be thinking that, this particular way to take a thumbprint is somehow limited to specifically designed for wolf. I think that that's not necessarily the the best situation. Because it, can, simply influence implementation's choice on on what mechanism to use. So I think getting a more neutral, cozy a wording in there would be useful. I mean, this this is a course of text based representations that people start reading them and, finding things they don't understand and that creates confusion. Okay. Thank you for comments. So so basically, function is So that is how we need it. So, but, so, yeah, your comments are very exactly. So, so, yeah, I'm trying to fix his for avoiding the conferencing. K. And next is Christian."
  },
  {
    "startTime": "00:16:06",
    "text": "Ah, Justin. We recently had a situation in in Seebull where the question was, like, do we go for and I for the NAH hash registry, or do we go for cozy, register that hashes. And the impression I got from that discussion was that the, like, the the NII she's not that well maintains. Well, can you talk a bit about, like, why why pick that and not take what is kind of what we already have around. So, yep, you pointed about, Bripatts. Okay? So So, so map my thoughts is, so, yeah, this URI is a tortoise that's So not a binary string. So as an attorney does, usually saw yeah, for displaying, stories. So So choosing from, am, of course, I am, registry is, so final. So we embedding the value is I mean, as a numbers numbers types. So That is a an So from my from my impression, so that is not good for So just, relating by Hooman was that the youth are using a Disputing style. So, yeah, if you if you won't, It's a sample into your eyes. Trick it as a binary string. So, yeah, I think, we think, we try to think changes the format was styles for the, binary styles. Yeah. It's that good. No."
  },
  {
    "startTime": "00:18:03",
    "text": "I I think it just makes implementations harder if they have deal with 2 different register. Uh-huh. Okay. Okay. So How about, so the changing, Bruce? Of sex shunts, to using the just, cause I am choosing from the quasi I an algorithm registered. Is it good. Improvement, Yeah. Is there any Your eye. Yes. Not sure. I'll take that offline. Mhmm. Okay. This is Mike not speaking as a chair, but I am speaking as the primary author of the GWK Sunprint URI. And as shepherd for the document. That Kose Keith thumbprint URI document made exactly the same choices as the JWK thumbprint URI document, which I think is appropriate. There is an OAuth registry for these kinds of parameters, it is fine to reuse it. It's also the case that we got a lot of feedback on JWK'sumprint URI. To use the existing Ayanna or, hash algorithms registry. So that's what we did, and that's what they're doing. I do not think any changes are needed to this document. But, again, I'm an individual, not the chair saying that Thank you. Yeah. Customer moment again. Mike's arguing of course is course, it's a good argument. I just think I have a slightly better argument. And I wanted to to answer to Christian in this case, this would be minus 16. Instead of char 256 because, minus 16 is the number that that"
  },
  {
    "startTime": "00:20:02",
    "text": "Shar 256 has in the cozy registry. So we have everything in place for that. And, I mean, the thing already is is ridiculously long, but We can at least have a few current to step by step. Okay. So Okay. So, yeah, we have, discuss about, this, some print you are, I start in the mailing lists, So, yeah, please share your opinions. So I try we try to Yeah. Improvement to making, CSS. Yeah. Thank you. Okay. Thank you. Yes, please. So good afternoon, everyone. I'm on a cylinder. I'm Johan Sallander. Okay. And, I'm gonna talk about the the latest update to C509. And I have two questions for the working group somewhere in the middle and in the end. There was 2 minute slides. There we are. So C509, is as you know, a compact representation of X 59 certificates using CBOR. And having attended the Skit Working Group in on Monday, I realized that it's not forbidden to use CDDL and seaborne diagnostic notation, slides, that might actually be if you do understand that, that might be easier way of explaining what"
  },
  {
    "startTime": "00:22:01",
    "text": "they are, and that's just a recap or a crash course. So you see on the right hand side is the CDDL. And at the top, there's C5 19 certificate defined as an array to instances to, to elements, there is a to be signed certificate and the signature and to be signed certificate is the is the rest. So if you know X 509 certificates, you recognize all the components here, except the first element to type And the type, that we have defined 2 different types of C509 type 0. Indicates that everything is is that the signature is on the seabor structure. And type 1 indicates that the signature on the original X 509 certificate. That's basically C509, and there are more details in the draft. Of course, am I gonna point? Yeah. And here is the seaborne diagnostic notation of an example, This is taken from DRIP So, this is a regional airspace Authority certificate in the example Drip with TKI. And this is, as you see, in the first element, it's 1. It's a type 1 certificate. There are the annotations of the contents, the serial number issue, and so on. And if you do X Five 19, you get 131 bytes. If you do C5 19, you get 183 bytes. That was sufficiently relevant for Drift to think that this is an interesting technique to use. So the changes since last version is yeah, I mentioned the interaction with DRIP. And, they have common names, which are byte strings, So they wanted to have a compact representation. We already had a compact representation of E Y Sixty 4. As byte strings. So we needed to add a byte for this disambiguating that."
  },
  {
    "startTime": "00:24:00",
    "text": "And Then we did some work on the CSR certificate signing request in, you, in an enrollment setting. So what we have is what is new or what is requested from Lake is that we are using certificates static duty helmet keys, and and then we need to have an enrollment method for that. There is RFC 5955. By Jim Shorten, him, professional Chandra, which is defining non signature proof of possession methods. The good thing with using CSR, with staticallyhelmunkies, is that you get a Mac instead of a signature. So it's more compact object. And then the same goes for for the actual use of the static DPI hormone? So we included that. So there is no methods for non signature proof of possession in the signature algorithms. Registry, which might be confusing, but that's line with bot. RFC 6955 is doing. And it also requires a public key public development key to be distributed out of band. But that's sort of heavy. Proper color is using that need to take care of. We looked also at the attributes for CSR and, use the extension request structure, which is one attribute and then, also use that for in other attributes like challenge password. We had interactions with some other people. Some comments from Leon, Liau, on specific assignments of extensions attributes, that he found relevant to make. And this is extensive, but you could do this later. We did it already in in this document. And see if those find some errors in the extended usage table. And some updated security. Legacy considerations, examples and so on. We also, disagreed take took out all the relay"
  },
  {
    "startTime": "00:26:00",
    "text": "revocation related content from this draft So that's now separate content. And the question is How should we handle that? Should we submit an individual draft with this, or, I mean, this is actually content coming from from this draft, or do we need a separate adoption call? Any any views on that? Yes. The resolution and so on Yes. The resolution, we generally have found is that if we want to split a document, in a working group, we can just do that. And, we can also decide that the part that we have this out is it's a little bit a little bit of lower quality and has to be in your document both decisions are possible, and that's really for the breaking of chess. To this site. So if if we actually think that relocation is already kind of accepted as the subject of of the working group, then we should just split it as 2 working documents. That's not the case then you should split it out as one individual Okay. Okay. We don't need to decide now. The question is answered. Was there was not a question or Yep. I've enjoyed working with the, your team. And your reception to, on the things that I'm working on. As I've mentioned before, I'll say it here, One thing that this needs is code to actually convert a DIRR to C509 or convert the C509 to the DURE. So that we can actually show that here is a a certificate and here is a seaborne coating. We can put our documentation the rest of it and and whatever else we're doing. So one of the important things the team needs to do or others chip in and help the team is get some code so that we can actually"
  },
  {
    "startTime": "00:28:00",
    "text": "be able to do this preferably, like, I can run it in Python. Kind of a thing so I can generate these sorts of things and other people could do the same. And that's my my one request here to, to the work group. That we have a very, very good important structure to help us out particularly on how they constrained networks, but we need the tools tool. Thank you, Bob. We can discuss that. We'll come to that in next steps. Okay. But there's one remaining question from from my side or from the author side. Which we didn't manage. Oh, sorry. It's not a comment in congress. Hi. Yeah. It's John Gray. I'm just, wondering. So you showed that a byte comparison difference, the 180 versus 331. That's a good savings. Have you done any comparisons with like post quantum algorithms, So I would expect that those savings wouldn't be so much. I mean, just just what what is being compressed is not the signature. Yeah. Or the key. Right. Or the key. Yeah. So I So it's the rest. Yeah. It's just I mean, in this case, yeah, so usage of it, probably. Legacy stuff will be great, but I'm wondering, the post quantum world might not how has many advantages, but anyway, thank you for the work that you're doing there. Thank you. You get about the same number of bites compressed out, which really won't have much of impact on a, post quantum computing certificate she has some very large signatures on you. You save, you know, 130 bikes on one of those. It doesn't help all that much. So but but one point about the the numbers here, this is for one set for certificate. So if you have a certificate chain, of course, like, like, in the DRIP case where you might have 3 or 4 levels of certificates. So that's that also adds up to the savings."
  },
  {
    "startTime": "00:30:00",
    "text": "But, yes, this is for for more for the constrained setting rather than the postmortem. So but here was my I'm running out of time. This was my final question. So what we have defined, I I mentioned, but define the CSRs and So what we didn't come to conclusion about is we have as we have different formats of the certificate, the C 509. We have the X 509, and we have the 2 types of C 509. Also have the, ability to encode the CSR in different ways. And that leads us to 6 options But, what we propose is that we actually only standardized 2 of those, which did make sense to us. So we have the type 0 here, corresponding to the upper left cross where we have the the CSR is in is encoded in CBOR, signed over CBOR, and you get back a native C 59. Signed a receiver, which is the when when you're using, CBAR everywhere, or or or the other case would be the model legacy case where you have the ASM 1 their encoding. And you use C519 as a compression compression. So you start with the CSR. Signed over terror, you com you compress it to C509. You send it to the CA, And then you before they say, yeah, you unwrap it, into, into X Five 19. Sorry. In in CSR encoded in there, you get back in X Five 1 So those are the 2 proposals we have unless people think there is any other options that are relevant here. Any Karsten is Walking to the mic. Here's the mic if you want to. Think Thank you for adjusting it for me. Can we just use them as 1 and 3? 0 and 3?"
  },
  {
    "startTime": "00:32:02",
    "text": "So, if if our proof by Legination failed, then we can put in the other numbers. Nice nice proposal. Thank you. Any other commons, Then I am done. No. I'm not. Next step is okay. So we have a few remaining issues. That's this is not a lot. Which will be fixing this year. We have a code have an, and, and ROS Implementation it's not updated the latest version and that addresses. And it's actually only going in one way. From X 509 to c509. That is something which, we haven't had time to work on and people are are welcome to join here. We we have plans for finding resources to do that. I have a draft out that has code for making certificates mask goods, I think it's ECC PKI, something like that. I'll get it to you. But the point is that there are 802.1ar examples in there. Okay. Specifically in there. And and and we can look at that. We can work together, and I can get you some some good examples that you can then put into there. So we'll Right. I found one one example, we're in in one of the RFCs, and the, let's see now, what it the issue was HTTP consulting when you coded it? So, yeah, so that's apparently yours. Yeah. But you'll you'll see. I have a I have a draft, with actual code in for making certificates. Yep. And and and there are one AR examples in there. Thanks a lot. That was the 3rd sub ability. Okay. So what when we are done with this, we hope that this is ready for working group last call. But that's not right now. Okay. I would just make a comment because I see it in the chat. Please produce yourselves for the remote participants and the recording"
  },
  {
    "startTime": "00:34:00",
    "text": "I wanna make a comment this way. It's more understandable who is doing it. Thank you. And speaking with my chair head on. I agree that you wanna address the remaining issues. When you believe you've published a draft that's done so, send the list a heads up and ask the question again. Do you think it's time for working group last call? And then we'll evaluate that. Thank you. Thanks, k. And the next thpk Hello. I'm, Lawrence Lundblade. I'm here presenting slides that, Haunas and others put together, because they are here with a conflict. And, GTV sound is gonna tag team with me on some of the presentation here. So Next. So since I where last year we published the 06 draft. Which had the big change from, in in how the algorithms were specified. We instead of the 3 separate identifiers. We moved to the combined, Syprisweet the more in the style of Jose. After quite a long, process on that. Also, with that change reach, There was,"
  },
  {
    "startTime": "00:36:00",
    "text": "the way the encapsulated key parameter is is setup is is is different. And, there's a Syprisweet naming convention and some cipher suites have been defined, in a rough draft. A little more discussion on that later. And I was added as an author, and, due to my son was added as an author, Brendan Moran was removed, and Ori was added. So big think we've had a lot of different authors on this draft So David will have different ones next next time. We'll see. Okay? And then there was a a draft of 7 published, which had an example of with Jose Mack. So the the HPKE as the co, is in the cozae recipient, which is wrapping a key for, a Mac. That's that was the point of that exam. So so here's an example. Here's a picture showing how we went from the 3 integers at identifying cam, the KDF, and the AAD algorithms into a Cypress So here's kind of a the summary of the the issues we're working on. So 1st, Cypressweet reduction, there's a I guess, more Syphra Syphra Suites to find than we think we need. So, teach me, son will talk about that. And next slide or something. With, Jose Encryption, there is this internal structure, for which is a context information structure or or the cozier recipient which kind of is the structure that is the data that is that it's fed into the AED algorithm"
  },
  {
    "startTime": "00:38:03",
    "text": "which is used to secure the externally supplied data and the protected headers and possibly some other stuff. There's a a bunch of stuff in RC 9053 about that. That references some missed documents about KDF contexts So we've this has proved to be one of the more obscure areas in It took us a long time to figure it out. The stuff in Rfc 9053. And now we need to do some work on in getting it cleared for Kose hpke. So that's definitely an, work item. We also wanted to find, a key representation The plan really is not to define any new key representation. It should be pretty simple. You know, for HBKE, the the the keys are curve keys. So we've believe we can reuse, what what what what has been defined in Kosec Keys already. But there's a little bit of work to do to to to link that up. And then there was a couple of editorial issues, in terms of readability and and, sorting in the documents. So those are the remaining issues. Alright. A cheat to my son. You wanna take the It's a bit on the Sacker Suites. Okay. Hi. I'm Duske. Hi, I'm Deskesh Tumi. I'd like to talk about this, cyber switch direction. This is, major remaining issue, I think, and the Oh, and the So since, we we have, switched from the a la carte approach to the cyber suite approach. We have to dis we have to decide, which"
  },
  {
    "startTime": "00:40:01",
    "text": "cyber suites to be defined in this document. And And, and, as you can see, are there 16, Cypher Suites are defined in the current draft for now. Good for now. And but I think I think the 16 Cyprus Suites maybe, maybe to too many too many, I think, as And that so we we have we we can we can reduce that. And the so, And for and the For example, the how can I say for example, the Cypher suites are selected by the are served by the or the messaging way or security spec is only 7? But but, and this is there's a 16 Cypress suite. So and the 16 Cypress suites. So we we can we can lead this. And the and that Okay. So the, what, what I consider most, most problematic is that, that the specifications for the the CP blah blah blah. And and k ke. The Kim, CP Barbara, Kim, the on the table of this table and, And, you can see that X25519 Kyber 10, 10,"
  },
  {
    "startTime": "00:42:02",
    "text": "is, not yet, not yet published as a RFC. So these this draft can be updated And, so we can be updated and the are And the specs are can be updated. And, are the So, how can I say it? Sorry. Sorry. And the Can be the way to meet. And, So, I'll wait a minute and So the CPR NSCP a two pipe and the so wait a minute. So, can, so at the the CP go ahead. Hi, Rowan May. So one thing that was noted when MLS was selecting Cypress suites, is that the community that's interested in Chacha, Poly, such a support in here now. Is They're generally not interested in the in the nest curve chems. And so being able to re we could remove potentially the 2nd, 4th, 6th, 8th. And"
  },
  {
    "startTime": "00:44:01",
    "text": "10th. Cipherseats on this list. And then, I'm I'm guessing maybe where you were going with what you were trying to express with the CPEchems is that you could choose to not register these right now and then allow someone else later to come and register some additional combination of cipher suites. Once those become an RFC. Was that a direction you were thinking Are you I think it's not standardized. So, we have to we have to drop this type of suites, I think. Victor. Rohan, Could you do us a favor and put those recommendations in writing on the list. Sure. Thank you. Hey, custom woman. I suggested a way to to avoid all this, but let's ignore that at the moment. We we shouldn't forget this is a registry. So all the things we have in our registry tool could apply. And, yeah, this in particular means that something is missing here, it's not a disaster. We can just register. And I'm not entirely sure what the policy is right there, but I'm sure the designated will be very welcoming to to missing gaps in here. And the other thing, of course, is that we also can do earlier locations. So if if the CP stuff starts to stabilize and the people actually want want to use it we should really try to help them by by giving them the the code points so in the end, the the decision, what which representation format to use for your various cryptographic, items,"
  },
  {
    "startTime": "00:46:03",
    "text": "shouldn't be one of, where can I get my registration, the quickest? That that's, not not particularly bright. So we should try to make it easy to register register these things. And I know that I'm I'm in conflict here with other views And I'm certainly by myself in conflict with this you because I also share that. That we should try not to register garbage. So so combinations that don't work that that have, glaring security problems, we we shouldn't register. I mean, we have registered Sharwan. And there was a reason for that, and we have discussed it. And so on. Anyway, so let's make it easy to get these things in. And and make it not a disaster to to make a mistake on the living voucher 1 of 2. Kirsten, I know that on lists Steven Farrell had largely agreed with your let's not register garbage comment. Probably using different words, but the same semantics. Thank you. Are, anyway, we are Yeah. So the CP, Barbara, Kim's, and the 8 x 2 pipe 5 2 pipe pipe 19 Kate, Kyver, private, is not standardized. That's our RFC. So we have so to to to the documents, documents can be updated, and the So, the HBK are the the references the reference information, to the to them, are included in the KOS H. E. K. Are can be outdated. So so I think it is is premature to include them, in this, in this cause their HBK spec."
  },
  {
    "startTime": "00:48:02",
    "text": "And so I think, there are 4 there are 4 options this x A, ABC, and d and the first a are is the same set of Cypher switch defined in MOS. And the, the number of the Cypress switch is 7. And the B or is a plus the same, combination of the the needs car based DH cans, and chacha20. And just the number of the server switches are just him. Only 10. And their, in a sea, It's her b or, a, plus some combinations using the, compact nest curve based a a DHchance. Are in the d, these are last one d is, see for some combinations using a post quantum, hybrid cans, are, like, you using Kyber. So, the current, current choice is did, but I think, my I prefer aort be be a or b and, my preferred, and the I think b is a little bit better than b. Because b, has some kind of consistencies and consistency on the SIM c c are our symmetry, after the combinations and the variations. But it but on the other hand, a"
  },
  {
    "startTime": "00:50:01",
    "text": "are a has, too few 2 of your a 2 few variations of using acha20. So I think, I don't know about it. I think it's a, it's not good for cause they use cases or are some kind of IOT use cases. So My preference is b. My my And I would like to, move forward with b and I think, we I think we, we can expand the set of the Hi for Suites, later. By are making by making other documents after the related RFCs are published. So, And, but I would like to I would like to hear opinions from the experts in this room. So I'll note just as a procedural matter that if you in include references normatively to things that are not yet RFCs, your RFC won't be published. Until they become RFCs. So if you want to finish this before the post quantum RFCs are done. You can't normatively use them. Yeah. This, these are the details of the 4 are for Cypress, for options. And so this is, sir, this is the last ride on mine. Parts, so prescribed it. Florence, Sorry."
  },
  {
    "startTime": "00:52:01",
    "text": "Thank you. So, yeah, this was just a sample of the key representation that we're looking at. I think the main thing to look at here that's different from typical EC Keys is that the algorithm here is one of the cipher suites. That, we just were considering there. And note note that that also has HBKE base in that distinguished from, the other HPK emails. So that's the and, you know, key. The, outfield and acoustic key is a basically key use restrictions. So, we have a little ways to go here. This is just a early option here. But you know that we're working on this. If there's any comments on that so pretty simple. We've got some the issues that we talked about main mainly the, you know, which sector suites to define, the the context information structure and the, the because a recipient structure Those are related. And then the definition, comes a key to to align with it. So those those are the main open issues that areas. And then, also would like to do some more with, test factors and examples. Alright. That's it. Any other comments or questions Okay. My next again presenting the guy. I'm pretending to be honest again. Then let's see again. Okay. I told Thomas that, you know, I didn't guarantee that the"
  },
  {
    "startTime": "00:54:01",
    "text": "my presentation would be would be as good as his. He and he agreed. So Alright. So this is a a pretty early, proposal. For, basically a BCP for Jose and Jose implementation, and if you implementation designers and implementers. Am I going forward? Okay. So, you know, we've got designer developers that are using Jose and Jose you know, as being Yes. Becoming more common. So the purpose of this this document is guidance I think the One of the most, initial ones was key identifiers, how key how to use key identifiers if that was what Hamas had in his document then there was a couple other suggestions of for, by l one by Alari about API Design. And then So the last two are are related. Again, that interesting contact in context information structure and the ENC structure, which is and how you combine all the inputs to the KDF for for a lot of these. So, I think we're we're pretty open to other topics that might be added. Like I said, this is just really just getting started. So I'm not really looking to have a big discussion here. Other than maybe suggestions for other things to be covered. Think this is the only slide here. Okay. Okay. So, yeah, some discussion about key identification here, but let me Yeah. So quite I I I guess we can have a discussion about key identification. I'm not I'm not a citizen economist. And that and that"
  },
  {
    "startTime": "00:56:00",
    "text": "really prepared, ramped up on that. I'm but but but but Alright. Any comments you wanna So, you know, there's you know, Jose, there's the kid the key ID unprotected header, So there that's pretty open ended, what you can do with it. There are also fields now, you know, because a was first defined. 952, and I guess, 8152 was no x by the 5 u or X5c or X5t, for including X 509, So so there's maybe some clarification on that. You should use kid or X Five u and 1 if you got both. I think that was some of the things that Hans had in mind. To address in key identification. There are also some folks that put the key identifier inside the payload, particularly. I know I know an attestation that's done the device ID is the PID. The device ID is in the payloads. You gotta parse or decode the whole payload and to get the key ID. Okay. Can't hear me. Is that better? Okay. Alright. Thanks. Them just kinda going over the, the, items that Haunas had in mind here. So Here we go. Oh, they're also suggestion for automated, use cases. Alright. I guess I'm gonna ask, yeah,"
  },
  {
    "startTime": "00:58:03",
    "text": "I think that's all the content there is. Any support, comments, agreement, disagreement, a couple of thumbs ups. Okay. Good. Okay. I think that's it. Yeah. Thank you. And, yeah, if you have comments, you can now support them on the list. Tell Hans, I did a good job. Oh, hello, everyone. Hi. I'm Amarita. And today, I'll be presenting, hybrid key exchange in Jose and Jose. And, so it's, it's a draft versus pre it's, pretty early. It's in his initial stages. So And, so this is my first idea of meeting. So, let's go. And so, yeah, Well, the problem statement of the motivation is basically to basically 12. From the transition to post quantum cryptography, And so you use multiple well key exchange algorithms and you combine the results so that if one of the component algorithms are broken, at least your resulting, can be secure. And so this document provides a construction for hybrid key and it aligns with Josie and cozy as well. And we're presenting here the, well, the cozy version. It can be aligned to the Joseph version. And, yeah, so, The basic overview is, yeah, you have a hybrid shared secret. SPQC plus Traditional"
  },
  {
    "startTime": "01:00:01",
    "text": "use the basic concatenate plus hash approach. This specification uses a KEM combiner, which is being also presented in the CFRG group, draft. As you can see and it takes 2 or more shared secrets and it turns a combined shared secret. We're going for in CCA 2 robustness. So at least one of the K must be you know, in CC to secure, but it's essential to have at least one traditional or one peak you see. Otherwise, the whole algorithm will, other than the whole goal won't make sense. Yeah, this is a generic definition of chem where you have a key generation in caps, decaps. I'm pretty sure everyone here is aware of it. And, yeah, the terminology PQT hybrid. So there's another in the pathway working group that's discussing and the term hybrid in itself is a bit ambiguous in many aspects So we are waiting for finalizing this term. And, we'd be using a Kmac to 56 for each of the different, deficit algorithms here. Yeah. The K MAC function is actually defined in the nest, SPA156 C And so it has, like, a context specific string and basically the concatenation function and the length of output bits and PDF function. That's just a string at the end. We have some specifications here. I'm not going to go too much in details. The size length, which has to be there. And if it's a a variable blend. Key in this document can be added to an all bit string all zero beats string to actually make it a 132 bit, byte output. Sorry. Yeah. Yeah, the chem combiner. This is one of the example that we chose it has to have a traditional part and, a PTC part,"
  },
  {
    "startTime": "01:02:01",
    "text": "And, you have the old hash and concatenate a concatenate and hash, or whatever we want to call it. And, we have a our length where an encoded length is appended. Is also discussed in this draft as well. It's basically, if you have, basically variable length or you don't have and that's constantly been fixed from before. And that's actually essential. So it actually provides for variable length as well as fixed length approaches. Yeah. So thank you for presenting the HPK a draft just before this. We do acknowledge the presence of the HPK draft a hybrid term here and the HBK hybrid term is actually quite different. This rough focus is more on the traditional plus PQC exchange hybrids rather than the authenticated modes and, pre shared key modes in the HPK, and, it's preventing against and see our trip to work field event quantum computer as well as a traditional computer. And Kose already uses elliptical, difficult, many femoral static. So we wanted to use that. And so this type of hybrid, what we're talking about has already been discussed in other working groups as well. And since, HBK right now is not gonna be focusing on the hybrid the post quantum hybrid game part. So, it might be useful use the ECDS, for the post quantum hybrid KM part. And, yeah, so this is a very initial stage, and comments and suggestions are welcome. Thank you. So Russ Hausley, I'm somewhat concerned that we're gonna end up in a place where one library can't support the solutions that come out of both lamps Jose and Jose, and that would be offer, offer, Right."
  },
  {
    "startTime": "01:04:04",
    "text": "So what we wanna do is make sure that we end up in a place where one library does support all those. The documents you cited on the bottom of the previous slide, I really hope that the authors are talking to each other because that's the only way it's gonna happen. Yeah. There's a thumbs up from there. Right. And so, One of the things that happened in the lamps discussion is we talked about comes. And with a to find a way to take 2 comms and combine them and and and people, went Oh, that's really simple to implement, but, oh my god. Look at the computational explosion that's gonna happen here And so we ended up picking ones that made sense. Let's make sure we pick the same ones. Thank you. Absolutely. Yeah. We will be going for the safest suit approach as well, but know, just to focus on the right games would be quite essential. Yeah. X, Hi, Jonathan Hamill with the Canadian Center for Cyber security. I noticed on your example, slide there. You you had, Yeah. You're so you've chosen to use Kmart Kdf and and the chem combiner uses HKDF is your intention you also do hybrid KDS? No. This is actually the, I think, in FC 9053. If you see the if you help in secret, that's actually not uniformly random. So we have to pass it through a HKDF So So why wouldn't you use the HKDF for for your construction as well, so that's aligned. There. Sorry? Why wouldn't you use HKDF on the outer key derivation as well so that you're not having to implement Oh, because, like, we were thinking on the cyber perspective, it's already done. Before the shared secret is given. So it wouldn't make sense to redo it again outside for the, basically, the PQC part that's something we do. Sorry."
  },
  {
    "startTime": "01:06:01",
    "text": "Just use the same KDF. Yeah. Okay. Yeah. We need to discuss unless. Thanks. Mike Elsworth, I'll also address Jonathan's comment there. Yeah. I think So I'm the author of the draft that you got this construction from, I think the orange HKDF is not That looks weird. So where did you get the orange HKDF from? I think I probably got it from the the original draft that was there from the Cose a 9053 draft. So the shared secret was actually not uniformly random. So it was basically for the courses. It was mentioned to go pass through the HKDF. In implementation, which is already there. He's just combining that with the talking. I'm like, yeah. Sorry. Yeah. So the orange part is the existing part, which is already there, which is already in HKDF. The new part is the PQC part, which is, concatenated and then, came That was Tierra ready. Right. Yeah. Okay. So with the the I'm sort of commenting because at one point of the CFG command commander draft. We did use a KDF at that layer, but then we replaced it with a length and coating. Okay. My second, I actually came up to respond to Russ. the algorithm. So I'm I was asked to present at Pequip on Friday, and so I've got About slides that take this draft. Basically, all the ones that are listed at the bottom of the other slide. And I've got them all in a nice table, and I'm showing the algorithm actually, the surface actually do all the line. If you look at all of those and put them table, the algorithm choices all do align actually quite beautifully. So hold your hat till Friday, Russ. In the for what it's worth department. K MAC in and of itself is a valid KDF."
  },
  {
    "startTime": "01:08:04",
    "text": "I have extensive threads witnessed that of all the the s pub the spubs that they have to, update to make that official but it is recognized that the the the the sponge function does exactly what's needed that what HKD, what what FKD does and you don't have to Okay. You need K MAC use K MAC throughout. Thank you. Alright. No. 1 or the or or it's like, what is your underlying hash? If you're not allowing hash to shot to, then use the deadline you saw 3, you know, well, k. Thanks. Any other in the queue? That's thank you. Alright. Presenting on composite claims. Next slide. So I have a problem. And my problem is that I have a CWT Baratope and that has policy inside it. And it has application specific claims. It has generic claims that are defined elsewhere in RFC. Can reference those. But what I need is a way to put all of my different claims together flexibly. And so that's what I hear about. I think we need, a couple of new CWT claims. I'm hoping I can get interest. And,"
  },
  {
    "startTime": "01:10:01",
    "text": "excitement built around this. Next slide. So the first thing I need is not logical claims. And There's absolutely nothing. Nothing earth shattering here. The claim is and. Or and nor. And there's a couple different ways to select those. Those are the ones I picked. We can argue with them. But, for example, I can do a very simple claim. Imagine I had a claim that was application specific that said this baratokin is valid to this URI. And and, you know, it's valid for URI that have the extension in 3u8 at the end of them. Fine. But maybe we need it to be a little more flexible. We want to be able to say things that end in m308 or dotts. That would be great. That would be flexible. Next slide. Sometimes, Baratokans go in unsafe places. People like to put these things in URLs. Where they will be logged and and move all over the place. And sometimes we want to, hide the content of the claims. So, we already have a great way of encrypting things. And so I would like an envelope claim. So instead of saying the subject clause the subject claim is 12345678. We say there's an envelope and inside that envelope, there's a subject's claim. That has a value that is a cozy encryptoneobject. And, if you know how to open that envelope, then you can find out what the subject claim is. Without opening the envelope, You don't know the account ID. Next slide."
  },
  {
    "startTime": "01:12:05",
    "text": "And, lastly, to make those other things useful and work and and functional, Sometimes we need to know if the data inside is important. Imagine if I have, an envelope that has 2 private claims in right, Right? Private 1 and private 2. They're different claims. I need to know, I may need to know if the person who put those things in the envelope demands that I unwrap one of those envelopes if I'm willing to accept it. Because it could be that some uses of the barit token do not require me to know the value of all of the claims. For example, if I'm accepting a baritone, that provides access to, private content. I might not even need to know the subject of that bearer token. Right? I may only need to know the content and, of course, the issuer. And so the quit claim which There is no quick claim to find for CWTs at this point. Which I was flabbergasted to learn. Allows us to do this. It's defined almost everywhere else in the ecosystem. But not actually as a claim. So we need one. Next slide. So why am I here? I I have 2 options. Right? I I need these building blocks. They are very basic very generic building blocks. They are not specific to my application. Not specific to my Barretttoken. And so I I could define them, the expert review section, would be fine ish Or I could bring the work here because it's generic, and we shouldn't each build our own building blocks."
  },
  {
    "startTime": "01:14:03",
    "text": "Karsten Bowman, being an expert review of of various registries. I sometimes think Each registry should come with a dispatch working group So when something comes in, we can find out whether this should be a new working group. Maybe a new research group should be founded to to examine the general space and come up with quick registrations. So fortunately, we we we aren't at the expert review. Your viewer yet. I think this is, a good stuff. Can only stay good stuff if if it is really a home kept Small. Because the the fundamental law is that once you do something like you're doing in your logical claims, you you get in a programming language, and we're retouring equivalent. There's there's nothing you can do about it. But you you can delay it as much as possible. So so getting some restraint on this and getting a design that really is very true optimal. So so it's the 80% and the 20% I think that that's really important. And I think that can be best done when you have a forum for discussion. So my my view would be would be something we would be discussing in a place like the cozy working group because we are not going to generate a new working group just for 6 Yes. There's no loop claim. Hi, Rowan May. So I heard you say it's not the word bearer doesn't appear in the draft, but you said it your presentation a couple times? Yeah. It doesn't have to be a the the these are based"
  },
  {
    "startTime": "01:16:00",
    "text": "building blocks that can be used for things that are Barrick tokens. They can be used things that aren't Barracokin's, Yeah. It it's 2023. I don't think we should be encouraging the use barat tokens anymore. Also noticed that there wasn't any mention of any kind of binding and I think that we really need to prevent people from from using bear. Bye. Any new things that we define that allow for, you know, advanced generic functionality they should require you to include some kind of a binding so that you can't copy and paste veratokin's one place to another. Thanks. Hi. I'm, Tristan Miller I was wondering on the so on the kind of encrypted chunks of it. If you had considered some of the parallel work and the selective disclosure work. Where, particularly where the Links of the claims aren't necessarily disclosed unless you know, explicitly done, whereas if you just encrypt it, it feels like you are still disclosing a little bit of information. You have to at at I'm sorry. Sure. It it just also seems like a duplicate of work and kind of So so there is a little bit of a difference. So In the selected disclosure work, the bearer gets to choose what's select what's selectively disclosed and the bearer is familiar. It is able to read all of the claims. The holder. Holder. Yes. The the holder, can read all of those and decides what to what to disclose in this particular paradigm. And the paradigm that I that I need for the other work that I'm trying to do. The issuer is the one who decides what gets disclosed."
  },
  {
    "startTime": "01:18:05",
    "text": "Okay. I got you. So so I I can't use quite the same primitives because there are different there are different properties that are that are fundamentally desired by the different components. You are correct, though, in that, you're disclosing the length of the stuff if you do not you are disclosing the length. Effectively. And so if the link contains information. So for example, if all of the, the the Barrick tokens. I'm sorry. I'm gonna make people sad that they get issued are, have, you know, 9 digit account IDs in the then you're fine. But if all of them have addresses in them, and I can tell by how long your address is where you live, or what country you're in, Well, then we may have a disclosure problem unless at the protocol level that implements this requires the appropriate padding in order to hide that information. Totally makes sense. Thank you. Per the conversation we had in the hackathon room, I think what you're doing is building blocks for general authorization policy language. Yes. So I wouldn't call those claims. They are, it's a data structure. And You know, we there's a lot of people working in that space right now. I pointed you to a new working group. Okay? Is doing that. And I, you know, it's work that's valuable. I don't think it's, policy operators are not claims. I'll just stop there."
  },
  {
    "startTime": "01:20:02",
    "text": "Okay. I think there's I might agree with you for the envelope. I think that the the logical operators. An and claim, is is acceptable or not. It's acceptable and not based on its contents. Like, like, all other claims, right, Bye. That that's super valuable feedback. Okay. And, again, that was chair off speaking, not chair on. In the Open ID Foundation, there's a number of people have come together. Who have a history of working on authorization systems. Some of them you know, the old XML based ones, some proprietary systems, and the working group for authorization in the open ID validation that was just formed is called auth Zen, z e n. You can search for it on the web and you will find it. Course, particularly if you look in openid.net, Alright. Please look at executive don't And some of the people in the us and working group have exact will scars. Yeah. Yeah. Alright. Oh, yeah. Hi. Yeah. So it's John Gray. I don't claim to be an expert in cozy, but I I had seen the composite so I read it to the just the name of the draft because I worked on something that's totally different comps and wise with PQ. But anyway, I noticed"
  },
  {
    "startTime": "01:22:01",
    "text": "you mentioned about nesting and and things can be nested to arbitrary links. That got me worried that maybe some kind of parser or something could go into recursion or stack or flows or that. I don't know if that's possible, but I spot. Maybe your language might need to be tightened up there, if that's possible. You're you're correct. There needs to be some language that gets added that basically says that, protocols that use these claims need to need to tell you what the nesting requirements limits whatever's appropriate for that particular protocol are Yeah. So should is gonna have to define those. yeah. The implementation Okay. Yeah. Because you definitely don't want unlimited. My number is 50. Your number may be different. Okay. Okay. Yeah. Just to sure just Yeah. Yeah. Okay. Okay. Just wanted to make clear. Track, track, track, track, track, And if there are no more questions, think we're done. The the the last slide was just are there questions? And I didn't need to ask for the questions. They came naturally. So I believe that the next steps are for me to revise the draft in accordance with all of the fantastic feedback I've gotten here. And ask for adoption on the list. Yeah. That's that sounds good. Okay? Thank you. And with that, we are at the end of our agenda items. So are there any other topics you would like to discuss 10, Yeah."
  },
  {
    "startTime": "01:24:05",
    "text": "Yeah. Prince Sonava. Sorry. If this is a little bit to scope, but I would talk in with somebody in the on the weekend. I'm point interested in doing, postpantone establishment on IoT. So for instance, Kiverr. And now today, we took a lot about Evert, Kyber will be there or not. We don't know. I I knew that Audi, he proposed some causing representation of Kiverr. He was discarded. I didn't discuss in-depth why. But my proposed not my proposal, just a question. Who will represent the game of Kyivar will be I know maybe it's not in Cossi. Maybe it's in Lake. I don't know. It's something we want to work on how to represent. Postpantongumrepresenting it with Tibor, I I I'd suggest starting by having the conversation with Ori. Ori's only not here because he had conflict with another session that he had to be in. Okay. Thank you. Okay. Anything else? Oh, I don't see anyone rushing for the mic. So thank you everyone for participating. And see you Again, soon, Why?"
  }
]
