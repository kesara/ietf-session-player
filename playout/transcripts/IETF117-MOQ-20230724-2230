[
  {
    "startTime": "00:00:13",
    "text": "Okay, folks. We are at time. So if you could start finding your seats. I'm sure more people will come in as we go. But if you could start finding your seats, that would be good. Also, a reminder if you're in the room, you need to scan the QR code to sign in for the blue sheets, and there is a piece of paper with that is actually blue up on the second row there if you'd like to scan that instead of the one on the screen. You have the little blue sheet? You can just pull pass it around. Oh. Yeah. See if anybody needs. But with for listening to its Alright. We'll see how we're gonna be in charge of it. We'll see how it competes."
  },
  {
    "startTime": "00:02:09",
    "text": "she asked me to close the door. Alright. Well, while Ted is walking back to close the door, maybe we can just kick it off. So thanks everybody for coming to media over quick. Here's the note well, and MOQ firmly got an early in the week slot, so maybe it's to pay a little bit more attention than you have in our previous options, but this is very important information that defines the rules by which we participate here. code of conduct, anti harassment, IPR, etcetera. So if you have not, please make sure that you take a good look at this information Tips. So if you are here. Make sure you have signed in. As I mentioned earlier, there is an actual blue sheet with the QR code that you sign in. and you will use the little mid echo light light client to join qq, and make sure your audio and video is off. when you're gonna do the rest, or Okay. Okay. So our our agenda is posted with Bausch at shortly. we have notes. at that link, and we did get one volunteer notetaker on the ahead of time. We do have a really fancy chocolate"
  },
  {
    "startTime": "00:04:00",
    "text": "up here. If somebody else wants to help out with the notes, you can claim a bar of chocolate at the end. But maybe not. Here's our notetaker seaming in So -- Right. Wrong room. That's okay. we've so far covered the note well. Ted and I will relay anything that you need said from the chat. Okay. So what we're gonna talk about today, I think we need just kinda go over what the administrative we trivia we've already done, and then also just kind of an update on documents. since there has been some shifts since the last plenary IITF. And then our new editor of the mock transport draft, Ian, is gonna go through some of the open issues. And then we have a presentation at the end from Will Law covering the Warp streaming format. draft and the updates that have happened there, that will cover what's going on today, And then on Wednesday, which is the next slide. There'll be sort of a follow-up for additional issues with the warped draft and also with Mark Transport, and then we will have some presentations on usages, the low overhead container, and some results from some prioritization experiments. and we will talk about scheduling, interim, and wrap up. Does anybody have anything they would like to bash on the agenda for day 1 or 2. Okay. Then of Ian is making his way up? to talk about issues. Oh, no. Wait. We need to talk about Documents first. Ian is part of what we're talking about for the documents. So I can get up there and get in the in the box anyway because One part of it is to to let people know in addition to accepting the mark mock transport draft as an official working truck. We are"
  },
  {
    "startTime": "00:06:01",
    "text": "coming in as our editor of that draft. So he's joining team to help us get through the issues and to get the draft completion. Thank you very much, Ian, for volunteering. We also have a couple of new drafts this time. And as we go through them, we'll be discussing when it's time to move them into working group sessions. So we've already moved the warped draft into the common repository so people can use that common repository to record issues against it, etcetera, we haven't yet accepted it. as a working group draft, and that seems to be kind of the process that we'll use. as things start to get working group discussion, they'll move into the common repository so we can have a common issues practice around them. And once people are satisfied that they're they're they're something that we should be working on inside the working group. They'll move into being draft ITfMOQ, and we'll keep them in that repository as a successor. So as a reminder, we have 2 working group graphs ready to requirements draft and MOUT. And we're have warp and now lock as proposals to have media formats on top of them. And that's sort of part of what we'll be covering tomorrow. there kind of questions from a process perspective? Colin, you're in the Just just a clarifying question. So so, I I mean, there's been lots of discussion about lock as well. it it so lock is in the you're going to move it into the the working group repo because that'd be easier put issues and everything on it. Is that is working group tomorrow after it's presented whether that what I just heard? -- the they're ready for us to do that. and that will be the -- Okay. -- goes in after -- But we didn't ask the working group on any of the other three drafts. I'm all in. It sounds good. Actually, we did for work But yeah. full f o at the interim. k. k. Any other questions? Okay. I think we're ready to go to Ian, do you wanna present? Oh, you need to. I'm sure."
  },
  {
    "startTime": "00:08:09",
    "text": "Right. I'm Ian Swit. I work at Google. been working on Video in various forms and video delivery for a very, very long time, pretty much since I joined Google almost 12 years ago starting at YouTube and then subsequently more on the cloud TI side. Obviously, very involved in the quick effort. And I am excited to to be here and be more involved with mock, and my goal is very much to try to help The working group and all of you make Good progress. an ideally fairly expedient progress on getting the transport draft. to the point where it's it's it's fairly buttoned up you know, something we can actually ship to production. People can really start getting production experience with Hold on, ma'am. It's okay. I was I have a few slides. not too many slides on your shoes, but I did also have a few slides on kind of how I hope to And if I post the process, your feedback is welcome. And part of these came from the quick working group as well as other working groups. that use GitHub extensively. but I also had some thoughts that were specific to the MOQ issues, which I'll go into. Correct. Next slide? So we're doing this sort of a funny way because of of the last minute things. Oh, okay. What is not up to? I'm most Interesting. So I moved it. Is it Chile for Munich? load the slides back over."
  },
  {
    "startTime": "00:10:03",
    "text": "I just don't know why it's not showing what Sorry, folks. We we uploaded a new version of it, and it's showing in the meeting materials tool, but when we try and hit the share preloaded slides, it's not turning up. Yep. Okay. Okay. Can can Can you just share it from your computer? Yeah. We tried that, and it didn't move between left and right then. Nope. Never mind. Okay. So we are -- Lorenzo says he's just on it. Thank you. Okay. Just done. Yep. Yep. Next slide, fingers crossed. Welcome. So this is my unofficial media real quick logo because we don't have one. see a number of different types of media there. number of firsts in particular. And yeah. Next slide. Yeah. At least when I made this slide, there were 78 open issues. that already changed from when I first made this slide, like, 8 hours earlier. So, obviously, there's a fair bit of churn. 15 are currently marked architectural, which I, at this point, have taken to mean design of some sort there are some on there that probably don't really need to be market architectural and probably quite a number that are not marked as such that"
  },
  {
    "startTime": "00:12:01",
    "text": "probably should be tagged or at least kind of managed, but that's another issue. created a new naming tag. It's pretty clear that there are a number of open issues and historically have been a number of open issues around naming. And because those do not affect the wire format, but they are important, I wanna make sure that we kind of, like, break those out separately. So something's just probably need a PR, quite honestly. I don't think there's a ton of those, but are there a few? Obviously, you should feel free to write them. also created a new needs PR. tag, and I will write something sensible if you know, people will slap an needs PR tag on there, and it's pretty clearly editorial or, like, a very minor design change, favorite for all of you, and the biggest issue is probably One of these issues are quite old and they could use to be updated or just straight up closed, I also as I'll talk in a moment, added a new not transport tag. is an indication of an issue that is in the repo is not a transport issue, issue, that will help Will kind of triage, enterprise, like, what to move over either directly or, you know, copy important content from. this is all kind of processes. Previous stuff, but it is important, and I do feel like given there are quite a number of open issues, and I'm sure there'll be many more to be filed. once you start dealing with a 100 issues it's nice to have a bit of organization. Next slide? So, obviously, GitHub issues can always be reopened. ideally, with new information, So we're just not opening and closing things. as much as possible. I I prefer either be editorial or design and not both. and this just makes it easier to to kind of argue about one thing at once. If you know, otherwise, the issues can kinda go back and forth between the two. or similarly naming editorial or design. I mean, it doesn't really matter. or"
  },
  {
    "startTime": "00:14:03",
    "text": "other thing I've noticed that some things are marked proposals today, My personal preference is to actually have PRs for those and then discuss the proposal on the issue. I don't know if how the working group feels about that change, though. So I wanted to throw that out there and get feedback. do people Suhas. Okay. Thank you. So how's Cisco? I I I agree with and we created that process because it was bit confusing at that point in time when we had multiple issues and PRs, and we didn't had a proper way to define that one. something that requires an issue and also goes along with the proposal to explain how it can be solved. I think it go it would be nice to go with the proposal with an issue We can always discuss if that issue is worth the PR in the issue. But if the PR specific comments can be resolved in the PR. So going together makes most sense next. Okay. Sounds good. Okay. And then I'll try to head in that direction, but, obviously, I'm not gonna go through and try to to fight. all these overnight. but think it makes it easier to kind of track workflow. Look. Yeah. The the underlying issue is there are just too many PRs. We just file PRs without talking about it, and then we'd have to review comments and be like, why why are we filing this PR? So I think if we just talk about the you know, on an issue, like what the plan is, agree that this is worth making a PR, And then I think that's a better plan than proposal Sure. That's that's that probably is sensible as well. Victor. I think my main problem would be make sure is that every PR has, like, a corresponding issue. Yes. So we don't argue about solutions without, like, going back to the problem, Yep. That they're trying to solve. Yes. Please. I I guess I should have said that. But, yes, definitely, Make sure your PRs are linked to issues, design, or otherwise."
  },
  {
    "startTime": "00:16:02",
    "text": "And so that way, everyone can kind of track, like, how the changes occurred and how things got closed, all of those process. There's an RC, all about GitHub usage patents, which goes into many details. much more than I I would ever want to right here. Do people have any other thoughts or suggestions of how they want me to try to help the working group guide this or is what I've said Yeah. Sorry. I'm not gonna so I I think it'd be a good idea to schedule a call with the existing author teams and them about how they've been doing the stuff and You know? super robust, that'd be a great starting point. Yeah. I am happy with that. Let's move on. 6 well. I I did notice and these are this is certainly not an exhaustive list, but there are a number of issues that probably out of scope for transport. I marked a few of them as not transport already. the one, actually, I would like some feedback on today is there's this issue of failover when Quick is not available. My reading of the charter is that This is probably not in scope for the media for a quick working group, but certainly seems out of scope for the quick transport draft, draft, Do people want editorial text to kind of go into the fact that, yes, you either need to fall back to TCP or web transport over TCP or something if you exist in an environment where quick my network, or are they happy with the existing tech and I can just close this with no action. If no one says anything, I will do nothing by default."
  },
  {
    "startTime": "00:18:02",
    "text": "Moznatti. I think we had some discussion about this earlier that some people voiced opinions that media over quick doesn't make a lot of sense. have a fallback of something other than quick, you would maybe fall back at a higher level -- Right. -- and do media over Great. TCP or t or h to or something it doesn't make sense to just just replace the quick layer. You probably go to a higher level and replace the entire media over xler I agree. And so just that mean people would like me to write up an editorial PR to kind of top point, or does that not to need to be said because everyone understands I'm happy to write Oh. A PR if you if you That's even better. Yeah. Yeah. Yeah. Yeah. I'm happy to reschedule. just do, like, a 1 or 2 sentence blurb -- Yeah. -- and, yeah, that's great in the draft. Wonderful. Do you mind making a note and then assigning e issues? 80. Yeah. Next slide. we need to redo this. Hold on. know, to play out a technical. Yeah. Sorry. I got the dreaded connection to server unstable so we're starting again. 5 -- Yes. -- 6 I'm gonna go through a few issues that seemed worth discussing here, and then we can go into the longer She's list. later. I went through all the architectural issues in detail and tried to pick out ones that I thought we might be able to make sun. So this is the issue of who chooses the track ID. Whether it's the the client of the server, And you know, currently subscribed, okay, includes a mapping, However, you know, possibly, you could receive objects prior to the subscribe. Okay? message, and that becomes ambiguous. So the proposal is to move it from The association from the server side to the client side. there's not a PR for this yet, but do people have opinions on this, and is there"
  },
  {
    "startTime": "00:20:03",
    "text": "support or objection, it seemed like there was mild support for doing this. on the issue, but there weren't a lot of a lot of diversity of comments. should we should we Alright. Bye. Jonathan Rosenberg, 59. I haven't been participating much on the list, so I apologize if this was discussed. The problem with the client selecting it is it it is a trust issue. Like, do you trust it to pick an identifier that doesn't collide on the server? which they need to not collide. So I would be worried about having the client assign it. I Collagenyx. Yeah. I I would roughly say what Jonathan here. When we talked about CDN people, the some of the CDN implementation We're trying to leverage and sit on top of today. already have a unique identifier in their lecture, which they work across it, and they assign and make sure it's unique across the CPM. And that's a really desirable property for them to leverage their existing stuff. Now other CDNs don't have that. They can they use, like, an identifier that maps to a, you know, Tupo identifier or a flow identifier or something like that. And so we've discussed this a lot. It wasn't discussed on that particular issue, but it's been discussed in the working group a bunch. And I would argue very strongly for effectively, the sir it's it's not so much as in the survival cave or or not. I get and and I I totally get Luke's message the idea problem that this causes, right, of the driving. But I would argue we need to allow the servers to assign and the reason why is it makes it much easier to leverage existing architectures. And, also, it gives you real performance improvements if you're trying to do a lot of switching and relaying, if you can have a unique identifier that is hash indexes and and other things that you know is unique. Now the only way to do it uniquely is make sure that the servers and relays in this case are signing it. Not the clients are assigning it. So I think there's a strong argument there. Now it does cause exactly the problem look pointed out, which is"
  },
  {
    "startTime": "00:22:01",
    "text": "there is this weird sort of race condition, but I think there's many ways to solve that race condition and that we solve those a a different way. And I I I'd argue against changing this. Yep. Thanks. Suez. Suez. So, Sysco, just to give some context, I wrote this PR first. And when the first pair was written, it the client the track ID was on the client. And we went through extensive discussion over 6 weeks on just this topic. and some of the points what Colin mentioned, and made us to kind of come to the conclusion, the track ID being given by server is more useful. And on the issues of, you know, what would happen if the packets come before, and this is we we've been solving this for long time in RTP and other places where if the keys are not there's packets come, plans have to make a decision either to hold it for some time x x x amount amount of seconds or what, and then the keys come, they decrypt it. So I don't think so that's a major issue to kind of change this redo this discussion Thanks. Okay. You should -- It Will's next. I'm sorry. If they don't leave the queue, then you can't see it on your Yeah. Yeah. I I was gonna add So it sounds like the this is a problem that is solvable with reasonable mechanisms. by buffering content. today. And so though that's annoying. it's not it's not a critical issue is what I'm hearing and that the alternatives are potentially more problematic for CDNs than helpful. But that's my summary so far. Will, We'll look Akamai. So Yeah. where we care about CDNs. I agree wholeheartedly with that we'd like to have a unique identifier within the network. However, I think we can get to make it work even if a client selects it. If we go back to the first question, if the client selects something that's not unique on the CDN, a client doesn't have to do that. It just has to pick a track ID that's unique on that connection it scoped to the connection. The server could reject it if it know if it sees there's already that number being used so it can force innickness,"
  },
  {
    "startTime": "00:24:00",
    "text": "and then it can accept it. And then in the CDN, we can make up our own unique name just have a lookup table for this session tuple of the session plus the track ID would then be unique across on it. Yes. Alright. I agree. It's clear that you can make it look up table from think of it in session. I need to They're the global one. I'm sorry. I didn't mean to catch that. Luke here. So the track ID behaves a lot like QPAC. actually, where the idea is it's a it's an index and a lookup table you can take an integer and convert it to a string. The issue is right now, you can effectively reference an index before it's being acknowledged. effectively in qqqterminology, that you can send a request with an ID that the other side doesn't yet know about maybe. And then it just has to hold that request until eventually it receives that mapping. And I I understand like, it'd be nice if we could hard code QPAC Dynamic table updates, for example. CDN performance. but that is probably less important than making sure that objects of decodable when they're received. So I think this is they're both minor. I mean, I'm writing a player. I I really hate back to it could be an unknown object. I don't know what it is. I have to wait. for for, eventually, this lookup entry. I would like to not don't use that lookup entry until I tell you I have it. or let me choose it. Yeah. Collins Next. mean, I I agree with Luca that that this is miserable, but I think there's a different solution to I and we've discussed a three way handshake multiple times as a way. I mean, I think the thing is I think that trying to queue the objects until they're ready to you until you have all the information to use them. That's painful. I I get that. So the two solutions are discard them because you don't need them anyway, which a bunch of types classes of applications can easily do that. Some classes of applications that can't do easily do that. But there's also the solutions to sure nobody sends you the objects until you have this identifier and you you have the way to do that's the solution path I think we should go down is is is softening it that way."
  },
  {
    "startTime": "00:26:01",
    "text": "Yep. So that encrypts an extra round trip. But that that Is that correct? Not necessarily. I mean, the way this ends up overlapped with things I think you'd have to look at the call flows of that really carefully. And in many cases, it probably doesn't actually add or it might add a half an RTT, but it might not. And I I think you could do some analysis on that, decide whether you cared. Okay. Colin, is that written up on the issue? because I don't Think I saw it? No. Definitely not. This is a very late filing of a reissue that was discussed in times. And I don't even I like, I was I went and tried to look like, hey. Can I find the original discussion? find anything useful for you. I apologize. Oh, no. No. No. if you wouldn't mind summarizing what you just wrote on the issue just so it's recorded and and everything, about your proposed alternate solution and why you think it's It's perfect. Okay. I'm not even sure it's my proposal. I'm just sort of, like -- Okay. -- throwing out my you sure. I'm glad to try and do that, don't mean to be this is Yep. I I'm regurgitating something from long ago. I don't know who did the Yep. I I wasn't sorry. I wasn't trying to focus on attribution. I did wanna make sure it's written down. picture, I assume. It's not I can't see. Oh, I guess I can't see. personally pay for requester issued subscriber radius. So It's not just only because of the, like, the buffering issue, but the other problem is if we assume that we'll add CDNs aside some globally unique track ideas. Those would probably be fairly large. And since with sensors, track IDs often, that's over how it sets builds out Because if there are, like, if they are picked by the clients, you'll likely have, like, one by log track ID, which is different for for to aid by which it will probably end up if it's global. Yes. I agree. That is a very good point. It's very easy to end up a pipe. track that isn't, I guess. or longer. Okay. Oh, Ellen,"
  },
  {
    "startTime": "00:28:03",
    "text": "Yeah. I I jumped in as an individual because I'd had had some comments on this issue I think one point I think I had made in there is that, like, if you think about this track ID as much like the quick stream ID where, like, it's the client is choosing it, but there's, like, a prescribed algorithm for doing so. It's very and it seems to work okay. and I I like that property. And then and then the the one use case that's and it's solves the buffering problem, but it it leaves out this case where maybe the server has a special ID it would really like to use. so I sort of think maybe the proposal is to build an alias mechanism that for servers that care that much. maybe they can send a message and wait for an acknowledgment and say, like, okay. Now now this track ID means same as this other track ID. if they really need to choose it. But I think having the client chooses. simplifies a lot of stuff. I appreciate the fact that it is similar to Quick. I agree. That is certainly nice. I I would like to close the queue soon, but but at least continue. because I Yep. Mosenette, I think I'm trying to remember all the details. We did have a lot of discussions about this. I'm trying to remember all details with the clear outcome of this is that Not enough details were captured, and there's still some contention around this issue. So I don't think we'll close it right here. you know, at this minute. I think we should follow-up on the list. But from my recollection, a lot of the points raised in the RTP world about having, you know, SRCs that collide or payload type numbers that have to be remapped at, you know, at the servers because the clients chose them. A lot of those issues were surfaced And so having coordination of them by the server, know, made sense. But the more I think about it now, seems like a bad argument because that's assuming a model where there's a central server you know, that's that's the server for the conference or something. in this case, we're expecting a hierarchy of of relays, not a single relay. So then that that kind of falls apart because Now do you want the first relay to be able to to to sign this ID? Or"
  },
  {
    "startTime": "00:30:00",
    "text": "Should Akamais really be able to sign it, or should Cloudflares really be able to sign it? And one of them has to remap, you know, doesn't really make a difference if, you know, both of them had to remap. So I think the remapping arguments may actually be a little specious if if we think about them in detail, in this hierarchy model of not a single server. That's a great point. So that I think that's a good a good reason to maybe go back to the the client model grew what he had. Yep. Excellent point. In this case, many of these servers are also clients. So Okay. Okay. move on to the next one. Yes. I would like to move on to the next one, please. At comments, if we can get this resolved this week that would be amazing, but I realized that might not be possible. But Thanks for adding all the extra info and throw it on the issue as well to to make sure it's all written down. Yeah. splitting control and data streams. So quick, for example, has Typically, uses control streams or at least HP 3 does. for things like QPAC and and other such things and keeps them separate from data. QuickJeans or head of wind blocking, which actually can be a feature sometimes because In this case, controlled messages have a well defined ordering. of how they will be received and processed also this kind of vehicle related issue about prioritization, but, like, There's let's kind of put that aside. But all three of these issues kind of look go around this concept of control and data streams and how they're organized and how they're they're used. there wasn't seemingly reasonable support for splitting control in data streams. as other protocols have done. That would be the most incremental change here. and then we could potentially kind of trying to, like, resummarize, like, all the the other issues here. I wanted to get people's thoughts. on that sort of change. I'm gonna give up on the app."
  },
  {
    "startTime": "00:32:01",
    "text": "See more about what you mean. I thought they were split. Or no. I'm I mean, we're I mean, the data, like, like, we're talking about sending each object frame. Stop off Yeah. Yeah. See look. So the current draft says that any message can be sent over any stream for any reason time. There's no There's no ordering. There's no there is some text in the draft that says that message should be sent on the same stream is when it modifies, like, if you hope But Right now, we just don't have that. And what this proposal is is just copying what H3 does. is you have us settings frame that starts a stream and you send control messages on that. Yeah. Yeah. As Luke said, right now, the graph is agnostic on how you use the streams. So Oh oh, okay. But how we use the streams? Like, that's a topic. Like, that's a big talk that needs a bunch of architectural discussion totally. And but I think it's how we use the strings for Not even the control messages may be important. What a control message is is very key here too. I'm not sure we agree on that. And a control message is not the draft defines. Right? That's not a concept in this draft And and And I Luke, I I I get your point of the draft's probably completely confused on what it says right now, like, for sure, we need to fix or whatever. But I think we need I I don't think describing this as split control in data streams, although in favor of that in general. I thought that's what we already had, whatever, but I'm not even sure what I I think we'd need to go look at each one of these individually and get much more specific about what we're talking Yep. Yep. Yeah. I mean, they all kind of overlap in a ways that what what difficult to summarize, unfortunately. think in the current draft, it's valid to send an object message on a stream and then follow with a I Scribe message immediately after that object on the same stream. which is Yeah. Exactly. You should never do that, but it's not it's not required. is not forbidden. Okay. Let's let me see if I can"
  },
  {
    "startTime": "00:34:01",
    "text": "try to pound, like, these ideas into shape and everything, but do overlap a lot in issues. they some some I think I was just gonna ask, like, for the same thing. Just if you can just clarify, it sounds like what you're saying is you would you're planning to change which messages can be sent on the same kinds of streams, and I just would like if that's what it is, what exactly messages can be sent on this kind of stream and these messages can not mixed with those kinds of Yes. That would be that would be the standard proposal. Yeah. Yeah. At least it'll start Mosenatti, I think it would be mistake to put all control messages on a on the same stream, not to have a control stream because I think there may be messages even if our current messages, don't have this requirement. There may be messages which are tightly contact you know, coupled to the context of the stream So if you had a a point in the stream at which that message was relevant, wouldn't make sense to throw it over to a control stream. Now you have to have some data in that message to point to the object or or point in the stream that it cares about the stream itself. to point to the stream that you cared about, and then where in that stream you cared about it. So I think it makes a lot more sense to have some messages that are in the context of the stream of the data, then it does to push them all to a control stream. Okay. Well, let me go back through, and I think this all relates to Colin's point about what exactly defines what a Controlled messages. So yeah. Oh, Christian's still in the queue, and then I was hoping to close this out, and then we can Christian's last one. Yep. Yep. Yeah. This business of the control scheme, I think but adding a console stream is a great simplification. because we do have cases. in which we'll transform, for example, one objective downstream So one track Might be thousands of streams. And some of those streams will not actually be sent. There there might be reset for whatever reason, because they are too old, because whatever. And if that leads to"
  },
  {
    "startTime": "00:36:00",
    "text": "losing control, that's really bad idea. So I I am all for personally having one control stream per track Wiz. to control so that talk. And there may be an exception in the case in which there is exactly one stream per swack. You don't In that case, need to separate. but pretty much in all the other cases, It's just insanity to do it otherwise. Alright. Sure. If you wanna respond to that to us. Yes, Rick. I'm I'm trying to raise hand, but it's never loads anything here. Okay. I I think I agree with Christian. I I we did had a proposal at some point which we closed to later discussion. The idea was to have one control stream for track. Because depending upon the mapping that you want to use, how do you want to map one object to stream, on group to stream, track to stream, the multiple sub streams that get created. having a control stream per track basically says, if close that one, everything will go away. that's kind of a garbage collection kind of a thing. Right? And I agree. Our our current draft should specify water control message is, like the one that helps to set up things. Those things have to be separately defined and identified. There are two issues that we need to do, and both needs to be discussed further. Thanks. Okay. Thanks. That's very good input. Lucas jumped in the last minute. Oh, Sorry. Hey, Lucas. Party, cloudflare. I think yeah. Just I jumped in because this kind of one control stream per thing, is different than h b three's control stream, which effectively lives for the entirety of the connect You can never close it. Otherwise, you you screw everything up and then ties. If if you have a control string for something that's shorter lived during the whole quick connection, get you probably do it, but it's gonna cause a lot of, like, edge cases of what happens if control stream is sent, and you still have the data plan, sending data, and what to do then."
  },
  {
    "startTime": "00:38:01",
    "text": "Like, I think we probably need to get some some stuff written down and review and maybe work through the possible failure modes for this But, generally, yeah, I agree. a control stream for strict ordering of controlled messages that need to be processed in order is gonna simplify a lot of the problems we might have just Okay. Thanks. Alright. I'll try to look as I said, to go through and understand all the individual problems here because, I mean, This is obviously a change. It is not a statement of problems. even though there are a number of problems kind of potentially embedded within this. And, hopefully, once we can summarize those more effectively, we can figure out a clear path forward. Yeah. Victor. Kindly wrote this one up. streaming format negotiation. I am actually may I ask picture to come to a mic and and walk through it himself. Sure. So there is a question of how to renegotiate string format in there. multiple ways, but the ones that's, like, conceptually simple instance in in terms of, like, keeping using the same concepts we use already in transport is basically whenever you define a streaming format, you give it like, a well defined track name where it's a catalog for its trading format would but and then you just attempt to subscribe to that format ends in if you support it and if it does not exist to subscribe to the next one, etcetera in Zoom. to the proposal is, like, to extend a subscribed message to what you do is that in one subscribe. It's it's basically, as it just to the Thank you. Well, It will lower Akamai. Actually, in my slide deck that's coming up, I have a slide addressing this proposal, and there's 4 different solutions that I put them all"
  },
  {
    "startTime": "00:40:00",
    "text": "side so we can maybe revisit this argument at that time. might be a little clearer as to what some of the options are. is this in scope for the transport draft? Maybe that's a more important question. I would say no. unless we define baseline rules for what how how streaming formats in order to interrupt on top of mock transport can can declare their names. But, really, you you're defining as a subscriber and then a string. and we need the the notion that it's a catalog that's entirely in the in the streaming format side, not in the in the transport side, Okay. I do think it's more of a streaming format issue Okay. Vik tried one comment, but maybe maybe we can see your slides and then it'll be clear to the group whether it's transport or not trans I wanted to answer question of where the rate belongs to transporters, and so is we should have some answer on how to do, like, form a negotiation in the transport. This is the ones that is, like, less intrusive. There are, like, alternative ways, but, like, This is something that has to happen in the transport since you have to have some form of, like, offer alternatives and accept or the server offer alternatives and you accept. And that has to like, the protocol has to be aware. Otherwise, you just are stuck in requesting one catalog. Yep. Perfect. Next. Tennady is an individual. I I think that it would be somewhat odd if we ended up with a system where what matching means is different according to the media thing on top of the transport. So I think at the baseline, have to be clear of of of of what this type of matching is at this layer. so that all of the people who build on top of it use the same matching algorithm and What they do with it might be very different"
  },
  {
    "startTime": "00:42:01",
    "text": "But if we're if we're going to have some people do longest matching, some people do exact match, and some people do something else it's going to be very, very confusing. to be able to build the system on top of this. So I do think there might be a small piece of this that does stay in transport that's about the the syntax appropriate for expressing the semantics you want. exact question, I think there's two slides in the future. That Alright. Thanks, Ed. Oh, Suresh. I'm Sohas, Cisco. I agree with Ted. Also, There there are a couple of things. Right? There's a streaming format under this this catalog format. There's a package container format. And we have couple of cat catalog formats like you you you can send your catalogs in JSON versus binary of some CBAR tomorrow. So how would I express as an announcer as as a subscriber to tell what kind parts that I want to use to Parsner catalog. And also the other things like you want is WebCodex based packaging format or you want CMAF. I'm not sure if we have to define those two levels individually. It might be we might be we might there might be some benefits if you separate those two things. I can have binary catalog and CMAF or JSON catalog, unlock, is kind of the application decision. And having it both in subscribed and amounts might help in that case. Yep. Yep. Colin, hot. Look. Agree with the general principle here, and we'll see Alan's slides, and I like Victor's proposal like all like, the basic thing we're talking about is good. Now on the topic of which drafted goes in, I mean, if we go if we make the I I think, yes, we have the decision coming up of do we make common catalog draft. If we put in a common catalog draft, I think that's the obvious place to put this information. But if we don't have a common catalog draft, I think it's no big deal to really throw it"
  },
  {
    "startTime": "00:44:03",
    "text": "port is split the minimal thing in the transport, but the caught the the derived catalog draft all rely on and use. So, you know, either way, I I I view this as sort of, You know? You know? Yep. The throwing text around the bridge is no big deal, like, either way. Yep. And this is not overly complex. So I'm fine with keeping it transferred. Next slide. There are a number of things about clean subscribe, unsubscribe. This issue does not attempt to summarize all of them, but the the core idea is that there's kind of no really clear thin functionality today There's a few ways you can potentially do it, like, reset with no error. could add new frame. You could potentially add something to the catalog that basically says This is the end of this catalog. I had to chat with a few people today so far, and I think I don't want to actually discuss this today at the moment, but I wanna put it in everyone's mind. and I want people to kind of think about it post on the issue. And if there's interest and activity. Maybe we can come back to it later the week. But I think it it felt like there were we were still kind of at the, like, here are some things you could do phase rather than the, like, clear proposal phase. was my impression. but I do want everyone to come eyeballs on it. Right. Next slide. So this is very short slide. This is the ambiguity that I think Ted was living to, which is about naming and I believe this is Alan. Your issue? And so I don't know if you'd like to speak to it as an individual. I can try to remember what's in the issue because I wrote it a little while ago. But the idea is that to clients can each announce different name spaces where maybe one namespace is a substring of another. then they could create full track names I think you have"
  },
  {
    "startTime": "00:46:02",
    "text": "that would then be they could create identical full track names even though they each didn't think that they created full tracking that was identical and A relay would have no way to know when it gets that track name where it should route it. because it's without more explicit guidance on how you should route how how how what how you should match namespace how you can find the namespace part of a full track name. I'm not sure if that was a great I'm gonna read off my issue or do you wanna just reshare it? I think What did I say? So one possibility is we could try to just say, like, just don't do this. like, you should if you are people announced to you and somebody else announces a substring, then you can just say no. that's not cool. or subscribe request itself could have instead of just having a full track name string, it has 2 fields, which separate like, a pupil instead of so it's very clear, like, this is the track name and this is the namespace, and you can use one for routing and one for selecting. Or we could tell everyone that, no, we're we're doing prefix matching, and you have to do prefix in order for this to work that's in the median. Okay. That is my, like, I wasn't prepared for the person on this you. Absolute recollection. No. That's okay. and it formed a queue. actually a house here first. Oh, that's how's this come? I I try to So like, Alana had 3 proposals, and I kind of inclined towards the first proposal in a way and proposed another PR that tries to address some of these things. So that idea here was if If 2 publishers or producers announce the same track name space. And if the authorization allows or the policy allows for whatever reason the application decided to do that. And in that case, easiest thing to do is the last one wins. if if if if that way you not have a institution where you have the consumer getting pieces of media from producer 1 and producer 2."
  },
  {
    "startTime": "00:48:04",
    "text": "You'll get 1. That's that's that's how your policy was, and that's that's that's not a bad design in general. x. Good. Sorry. Did you say last one wins? Yes. Last one means if there's an overlapping namespace. Oh, I'm glad I'm already in queue. Okay. just wanted one thing you said, I just wanted to clarify, which is that it's not that too media producers announce the same namespace is that they announce namespace where one is a substringer of another which one cases they announce identical namespaces. Will is next. Yeah. Will lower come on. I'm I'm not sure this is this is a problem as long as we don't confuse announcing with discovery. So if I wanna publish, I say I'm example.com/will, and I'm authoritative for anything with that prefix. You come to me, and all I do is I tell the next node up above me. That's it. How that node communicates it with the outside world is up to the location, the distribution application. As a subscriber, I give the full namespace, and I give a track name. That's explicit. I don't give any subset of that. I give that full. how I map that subscription at the edge back to that Origin 1, a function of the distribution network. So the ambiguity comes if you announce example com slash will, and I announce example dot com slash -- It's the same note. -- slash w. to the same node, and then and then I can someone wants to subscribe to something slash will, Does that go to you? I think -- Or does it go to me if I have a tracking host, I know. -- because it's it's ambiguous. As soon one of us goes first. Right? the one who goes second, soon as you announce that, your your announcement should be rejected as being Yeah. That's difficult. problem to solve. I I don't think it is. So so you've just said, first, one wins. He just said last one wins. I'm still very glad I'm in the queue. I I winner should be the first one. Luke's next."
  },
  {
    "startTime": "00:50:01",
    "text": "Hi. So we do need to have a discussion about what we're even doing with this announced message? What's the role? In my view, the announced message is saying, I'm producing this broadcast with this full string name. I don't understand why prefixes are a thing. Like, I don't want prefix routing. I don't want BGP or anything in my a protocol. I wanna say that this is my string. If you want this this broadcast, please request this exact string. I'm not not a subset of it. This exact full Can I clarify when you say broadcast? You that may encompass a number of tracks, More than one track. Yes. Let's track name space. It's a broadcast. I I use them interchangeably. I assume Ted's sex. Ted is Ted Hardie, too enthusiastic. So I I have to say that when we were talking about this earlier, what we basically said is there is a namespace And there is an identifier underneath that namespace, and it is the 2 pull of 2, which must be unique. And I think that story ought to go, and I'm certainly fine with expressing them separately in 2 separate fields because then you never have the problem about whether they're overlaps or not. If somebody says hey. I'm authoritative for this namespace, and somebody has already got it. you have some either cryptographic or other method for determining who actually owns it and you you settle it that way. You don't do it first or last or some other way. this other problem of you want to smash them together to get a single identifier that that looks the same whether somebody has example dot co, bop, or example dot com, bop, Just don't do that. If you're go if you want to smash them together, go to our lady of delimiters and ask for a delimiter. Do you or I provide them Other things do as well. You just have to make sure that however you represent them, the code always treats them as a twofold."
  },
  {
    "startTime": "00:52:00",
    "text": "And if you do that, all of this falls away. You don't have to worry about whose first who second or how they look on the wire to determine what's right. You just treat them as a tool from the beginning and box your uncle. Thank you. Hello? it it I think Yeah. so quite much for you then. You can go You you're next anyway, Colin. So do you do if they're exactly the same? You get 2 different analysis from different producers. for exactly the same name, exact match. What are the Okay. So if somebody says, I'm Google and you say, no. No. I'm Google. then you have to go outside the system to determine who's Google using, like, a cryptographic mechanism or something else, but it is not based on the announcement at that point. because 1 of the 2 is lying to you. or mistaken. It's not a problem caused by identifier overlap, it's it's an attack or the equivalent poisoning to an attack. I'm gonna speak to that then and hang on. So no. I think that that's not really a tack. happens here all the time. So and what I'm and we'll talk about and our our approach to that. on the scene. So first of all, if the applications look, you're gonna have an authentication token that gave you some cryptographic material that said, I'm allowed to use this name. And we're on all of these, we're assuming that pass. Right? Like, if you don't have a valid token, obviously, your announce gets thrown in the garbage. So we've already passed that stage. But these clients are not super reliable. They're falling off the Internet all the time. and they're rejoining all the time. and they're probably going to, when they rejoin, not go through a whole different scribe thing, they're going to try and set up as soon as they can, and they're going to re announce with the same credential the same track name, and it's gonna be an identical announcement. And this is like Luke said he didn't wanna do BGP, but since he brought up BGP, this is like a BGP up date. Right? And if you have the same specificity of the route, I think your latest one sort of has to win is the earliest one to do. Now we could try and detect all possible errors. That's really hard residience to, I think but to Ted's point, which I agree about about the URIs, it's like"
  },
  {
    "startTime": "00:54:01",
    "text": "if this is not something you want to have in your application, you should make sure that none of your 2 clients ever in any things use the same URI to announce with. Right? That's like And that's easy for the application to do, and that's that's what it should do if it cares about this. The question is do the relays have to take the responsibility of enforcing all of that how do you tell the difference between a reannounce that's because somebody is reconnecting and a reannounce because something said. And look, I'm I'm ignoring the whole prefect thing here. But I think if we just talk about the exact match case, we come to consensus on that, which I think we have to solve that's a much easier case to deal with, then we can discuss the prefix case, and the answer is probably the same. I think there might be 2 separate problems. Right. I mean, I think this issue is really about the prefix case. the exact match case, I think, is different. Right? But the fact that none of us agree on the exact match is going to make the prefix the case. Not we're like we're solving yet. But, I mean, So I have a clarifying question. You're clarifying question? Sorry. So in the in the case you just as describe. You have a a client as you say that is less than got a it's got my connection to me, Dekel. It keeps dropping off. I'm coming back. Why doesn't it use quick reconnection semantics to reset up exactly the same connection instead of that. Because quick, I've got even new connection IDs, I can I can reuse the connection that I was using before at the quick layer Why do I need to do it at the MOUT layer? I mean, it probably didn't go to the same relay if you're talking about scalable system, not meet Okay. So what we've got to do at at this point is I think You're right. Narrow down to this reconnect problem because I think the reconnect exact match problem is is very distinct from the one that that Alan was doing and sounds like there's semantics there. that if we can't handle at the at the At the quick layer, we're going to functionally need similar semantics at the MOQ"
  },
  {
    "startTime": "00:56:01",
    "text": "t layer to what we have at the quick layer to allow reconnection that's distinct from re announcement. Yeah. That make that makes sense what you're How you phrase it? And I think that all of this like, the actual pre the match the the thing that drove this original issue of the partial match Chitch, which Alan had And I mostly think that the answer to that is, like, doctor, doctor, if that hurts, don't do it. So I'm less worried about that one, but I think it unveils a actual real problem we have, which has to do with about AH is a high availability design, and we need to nail that So did I hear you volunteer? He said putting on his other hat to to write up that issue, which is distinct. Yeah. Sure. Alright. So we got a new issue coming. Thank you. I appreciate it. market. Is that clear you from the queue also, Colin? Okay. Victor. Regarding prefixes versus exact match, I agree with Ted. couples are really great. do not do prefixes unless you can unless you really need to in if you need to we should for instance, separately because it track names, with separated track name, space, and track name, like, for the specific reason and I don't think we should track tracking based basis of prefixes. Regarding the reconnect to issue I do agree to to last one should win because it's not, like, just makes sense. There are only 2 possible answers I see. One is you takes the latest one, and it seems that the latest one is the, like, the current clients that are trying to connect versus the previous clients, which fell off the network for some reason. And the second act approach is you just whenever your client calls off the network, you always error out and instead of having Victor in conversation, you now have to add Victor asterisk. which it's a behavior. You have to support anyways because"
  },
  {
    "startTime": "00:58:01",
    "text": "if original vector falls off the network and has a encoder crash. that you basically have to add a new video stream anyways. So those are the 2 cases, but they do it agree that if we support re announcing the exact same prefix that should basically just means for a place. Right? Thank you. I am happy with those great discussion. Thank you for every every much everyone very much. Feel free to add more comments to the issue as well as calling for filing an issue. This is all the issues ahead, but we can Two things. We can pull up GitHub or We can use the extra time today and go through more issues later in the week. I don't know. Does anybody have an issue they wanna talk about? I can, like, spend a minute looking at the issue list. surface some I'm sure there's 1 or 2 good ones. or we can pull up Will's stuff and and do more interesting. That's what I was saying. Yeah. Alright. Will, are you ready to go? k. you very much. The please if you want to discuss an issue, if you could tell me beforehand and ideally, you know, find me for 5 minutes and can sit down together and make a slide, or you can make a slide, or or whatever works for you, then we can make sure it gets discussed this week. Thank you. Thank you. Let's see. Grant Freeluded Slides. I have Grant Alright. You got it? I'm not I'm not feeling well, Just screen. Grant screen. Who's Bill Fan?"
  },
  {
    "startTime": "01:00:02",
    "text": "Okay. I think it's working. Good afternoon. My name is Will. And from Akamai, I wrote up the draft overview. It was our first attempt, a stake in the sand, if you will, at creating a streaming format that's designed to work with mock I was asked to present an update and proposals. We have a lot of people in the room who haven't yet been following the discussion. So for those who just started playing the game, I thought I would hold this here so that I can work in the mic. gonna just go over our some of our summary. So we're media over quick. We're running over quick. We also like web transport in many instances, specific if we would like to inherit the connect characteristics. And we you've hear us pick about mock transport. This is a a separate draft it is basically a pubsub protocol over which we can move binary messages. It doesn't know about media, doesn't know about football games, streams, conferences, anything like that. It's just moving objects. On top of it then, we can map a series of streaming formats. these are the ones who understand the media And this this picture is actually back from IETF116 since then. now have warp as a first pass of the streaming format. We have lock. just came out. And I'm calling it Allan's chat. I don't know if Allan's actually written it, but it's a good academic argument say, hey. We can do text chats over the same system. And we should we should force ourselves at any time we're getting to media centric remind us that it should work over chat as well. And why are we doing this? Basically, because we're trying to separate church and state, if you will, So on the bottom part, that's what a CDN builds. Right? We if you're a CDN business, You just build the bottom half. And if you're in the media business, you build the top half. They're people who will read both sides, all the drafts. They have people to building nodes that have to both understand on Sport and and produce or consume the media. it's good to break it up. So warp at a very high level was designed to deliver CMAF. and I'm gonna go over a walk today. I'm actually in in the time I have gonna present some major changes to let's"
  },
  {
    "startTime": "01:02:02",
    "text": "not get too hung up on any of these items. Some of them are gonna change. what came from a place where it's delivering CMF because it's got good interop with much of the media ecosystem today. focus on live and near live streaming. fragment the objects over mock. and there's a congestion response based on dropping objects, which we haven't yet defined, actually. There's a lot of other details in this. These are described previously in our I don't wanna repeat them here. things I will highlight. This is the notion of a catalog. In warp, it's it's a binary catalog that describes the availability of tracks. So it says, I'm producing these tracks I'm either adding them or I'm no longer producing these tracks. there's some in niche information that I can give you to help you decoder help you decode the content, and also select the tracks. what are the characteristics of the media? Is it HD videos? Is it a codec? the client understands, then some notes on packaging. and and was very CMS specific. There's been some comments. I think Colin, you made it hey. If you don't come from a CMF world, This gets confusing quite quickly. I I acknowledge that. Right? And also CMF is a It's openly available, but it's not necessarily free. At the same time, it is the basis now of which much modern media is happening on the Internet. So we we should be interoperable with it. So does it work? So Luke who's here built built a working version. There's Luke coming at you over mock Transport plus warp, at least an early version of it. He made some some changes. catch you know, catalog is a string instead of a number. versioning is not in implemented, but that's not the point. The the basic precepts here or that this is functional. Now that doesn't mean we're done. In fact, there's multiple issues that need need to be addressed. So what I wanna do now is lay out over some slides, some of the problems, some solutions, then I'm also gonna propose a new catalog format. And in fact, a change in structure, a change in architecture as to how we architect these streaming formats."
  },
  {
    "startTime": "01:04:05",
    "text": "So issue number 1, and I was this is when I was 20, Ian, came up earlier. How do we simultaneously publish different streaming formats? I wanna publish Warp and lock and chat all at the same time. So option number 1 is that create a unique name and and number for each catalog. So there's 3 ways to do it. I can call them catalog work, catalog chat, catalog, whatever. We have an Ayanna registry to prevent naming collisions. and you can either keep came up with unique names or even unique numbers to depending on your predilection. That's one way to do it. Second way, we can create hierarchical catalogs. So I have one parent that's always called catalog within it. I can say I've got a type 0 an a in a registered type for warp, and I'm gonna call it any track name I like. and so Number 3, you produce that single catalog within it. You describe all your available types. This is certainly feasible. The difference would be it would become a lot of overhead. If I wanna make one change to my chat, catalog, I'd have to go update the media 1. So even though it's feasible, it's probably not very Cool. And number 4 is we actually let the application transfer the format. knowledge. So here, I I actually do have 2 different catalogs, both called catalog. but the path differentiates them. And this is how modern media works today. You ask for an HLS playlist We actually use file extensions as our determinant not particularly robust, but it works for 1,000,000,000 of streams a day. So we could make any one of these for work. I'm not gonna propose a solution. hope we can spend time between meetings or maybe in our Wednesday slot, to pick 1 of these. But I think within this lies 4 solutions for solving that problem concurrent catalogs. Number 2, should war continue to support only CMAF? So arguments for"
  },
  {
    "startTime": "01:06:00",
    "text": "By constraining it to CMF, you constrain the amount of codex any compliant client is required to support. is a well developed packager ecosystem and decoder ecosystem. It's available on most devices today. And if you have a catalog of content or you're producing OTT content in HLS or dash segmented media it's an easy It's an easy on the gateway drug, if you will, for getting into video of a quick arguments against it is we don't wanna create a new streaming format every time we up with a new container. it's really heavyweight for audio, 32 kilobit audio, your your your iSA container is gonna be larger than the payload. It's not natively supported by WebCodix today. You want to mix them in certain types. and most components of a catalog are common. So in this one, I actually have preference. I think we should expand Warp to support more container formats. And in fact, we should make it extensible so we can support multiple container formats. Which is a precursor to? a warp and lock, and lock is low overhead container that it's Moe and Suhas and and Cullen's proposal that just came out. Are they sufficiently different that they should remain distinct? So on the Warp side, We have a binary catalog. We got a CMF payload. We got a single delta updates. We can add and remove tracks. We have CMAF in knits, and we have rules on how to map objects. the lock side, we got adjacent catalog. We got the lock On payload. We got profiles. We got relationships between tracks, which is very interesting. we got mock object magic, magic, So my proposal is, in fact, we merge these. We take a create a JSON catalog that supports both. we support different packaging types, either the CMAP side or what I'm calling the lock overhead container side, We support delta updates. In fact, we add that to lock. We support adding remove tracks. we keep our mock object mapping. I see e n q for question, and I haven't paused speak sessions too. one really quick clarification question. You're talking about CMF and extending each other. formats."
  },
  {
    "startTime": "01:08:04",
    "text": "would the intent be that there would be 1 or more formats like CMAF that would be required to be supported. or or not. So that's an interesting question. When Yeah. We we we face this dilemma. Anytime you add you add a codec to a standard, typically, you you get your wiggle your wiggle out of it by creating profiles. say, oh, well, I only support the CMF profile of whatever the standard is, Or, yes, you're required to as a decoder support all of them. as a package You may only choose to support a subset of them. So I think if we focus on communicating what you're producing and that's clearly enunciated. So a subscriber is not just subscribe to something it does not support. then we can wiggle out of that that problem and and and still work. Yes. Colin for q. Colin, I mean, I I think adding delta updates and addremove track to lock our good improvements to it, not not downside. So, like, you you know, I see seen a problem in that. I I I guess I think I I do want to have something that I can say we need to allow people who build products to be able to express that they're compatible with a given ecosystem and they like like, if I said, I support WARP. it's very clear what it means. I mean, we know I'm gonna be able to deal that c math stuff. Like, it's gonna be mandatory to implement. You have to do some amount of c math to be able to do warp. That's fine. And but I think there'll be people who wanna build systems that say, I don't support work. I support lock. And now maybe walk, warp, and lock, or 2 profiles and whatever. But we wanna remain that property that people can say they support system xorsystemy. at that sort of container level and the media the mandatory to implement media codecs and stuff come out of that. And I'd sort of assumed we do that by saying different"
  },
  {
    "startTime": "01:10:00",
    "text": "RFC numbers, but I'm certainly open to any other way to do it. But I I I think it's a good property to is that we can you know, we can't make it mandatory to implement mean, obviously, the people doing c math are not going to do some of the web container or SVC never gonna happen. Right? So -- I agree. Absolutely. And our challenge as a group is, do we wanna spin out a new streaming format and say you support all of this, but it's a concise format. do we create profiles within the one format. Victor standing. 2 things. I think one of advantages to point out about the central pictures, which not sure if you've mentioned, but This means you can also mix different tracks in different formats. Yes. And I have an example coming up where we mix a The second one, I wanted to regarding profile with FTRO, like, because of profile. So which should definitely define profiles, and they should be very much tailored to this specific use case. So I can imagine us having different profiles for even for delivery versus ingestion. Because the people who, like, work and injection probably have, like, a very solid understanding of what specifically they to build out of all the pieces that we have on diagram. Good. Good. Good. So this leads nicely into how what might our architecture look like in a in a simplified name. Today, we just have one drop called WAF. So it's been discussed earlier. We could start with a a catalog draft. It defines the versioning catalog naming, track operations, and delete remove change. track relationships, lip sync, time aligned, etcetera. and the packaging declarations. And then we have packaging drops that tell you how to how to package CMF over with mock transport. We have another one for lock over mock transport. And I'm using lock here as a as a name, not not lock the entire thing, but lock for low low overhead packaging. And then we might have another one for text. So when I rewrite warp, then warp"
  },
  {
    "startTime": "01:12:03",
    "text": "is a is a wrapper around several RFCs. It points at the the catalog C, It points at the CMF 1. It points at the lock 1. And then there's there might be additional warp logic, right, that ties it all together. It's authentication. So what to do in the case of errors. How do I fail over? business type logic that I might wanna put in there. And Alan's chat would inherit the same draft for catalog incorporate only the text check droughed for packaging then have some specific logic. we could create as many of these streaming formats as we felt necessary. But I think it's For interop and getting this off the ground, it's in our interest to reduce the diversity of streaming formats in the beginning. so that we get at least broad support with a common one. Suwas was in the queue from the Sorry. I didn't Yeah. I'm sorry if I missed it. No problem. This slide is most more useful for me. Thanks, Suhas. I I like this idea of separating catalog as a separate graph probably to be new drafts that will come out. I'm happy to help out on these 3 drafts. one concern or one question I have is that if I with my if I would implement a stack that would have the catalog, the lock and and just the catalog on the lock in it. the would that mean that there'll be another new draft that should come out, or should we call something new? Because what mixes CMF in there which would not implement. So how should we Well, I think that's a repeat of the prior question. Do we profile 1 Do we do sub profiles of of 1 streaming format? and you can support pieces of it. do we just make separate streaming formats and you must support all of it, but they're more constrained? Right. Doesn't goes back to the point of, what should the working group define as RSC numbers here. because at the end of the day, implementation, you can do that, but I want to be very clear that as a working report, we're taking up defining a new streaming format that supports on the catalog and lock that case, that would require another draft to be written, hence."
  },
  {
    "startTime": "01:14:00",
    "text": "I think this group, we need we need we should create a for clarification on that one. Yeah. draft just for catalogs, how to set them up. a draft for CMAF, a draft for how to package with with none of the other stuff in it. and then we should discuss whether we then want a separate drop for walk and and real time streaming if we feel less efficiently different. Okay. I'm running out of time. Let me go through it. So what would this new harmonized catalog format look like? I'm showing you Jason because it's super easy for people to grip, and we can have arguments about size later, I think it's super readable. We got a format, a version. We got the namespace here that's inherited. by all the subsequent tracks, and in fact, we can put stuff in this at the top level that is in anything that's common can be inherited. we're saying here, it's it's time aligned. The example here is sports broadcast, by the way. I'm just doing audio and video or video in 2 different penetrates. And in my tracks, I've got an HD 1. It's saying I'm packaged with CMF. And he has the unit segment, and it's in as base 64. because we're putting binary inside JSON. And I do that for each of my tracks. And I think you show this to anyone. They'll easily be able to implement this pretty quickly. So I have a clarifying question on this. And and looking at the merger that you were doing before, it I was really struggling to to understand what the value of that was over creating a format that was in fact a compound format. And so if you could say, okay. This is a harmonized catalog format where the the format here has the ability to have Packaging types. Packaging types within it. Why not trust start from there and not make warp one thing, but just make the catalog type a compound catalog type distinct from the warp type or the lock type in the same way you get multi part as opposed to a single -- That that is what I'm proposing. And if you gotta a little example from now, you'll see multi multi type in here as the example is coming up. So"
  },
  {
    "startTime": "01:16:00",
    "text": "it doesn't I I guess what I'm I'm going is if you're going to do that, Why do you need to unify, warp, unlock? because today, they're too complete standards for how to they're they're both defined in catalog They they duplicate each other to a large degree I'm suggesting removing a lot of the duplicates. And in fact, they're quite similar The only real standout between the two in how I package my audio and video content and how I describe it in terms of in it or a quality triple expressing myself very badly, and I apologize. What I'm trying to say is if if instead of merging the 2 at at any other level. We just take the catalog draft, which you intend to be sent at any like, and have the catalog draft describe how individual packaging formats use itself including a compound format. Okay. I maybe we just have a semantic difference for what a catalog draft the scope of it, I if you -- I was thinking -- scope of the catalog draft, you can shrink the scope Yeah. of lock and warp so that they don't need to be merged in order to accomplish what you want. I think, maybe. Jania catalog drops gonna define this JSON syntax. Right? What can be in it? What can't be in it? And what's in it, what what's the scope of what's allowed? Okay. I think And then I still wanna wrap it with something, though. I I think we've moved beyond my clarifying question. So why don't you keep on Okay. Moving on. So that sport that sport broadcast happened. One sec. Most familiar in question. You're welcome later. Okay. Sorry. Clarifying Okay. So let's go quick. So this is do I remove the tracks? So, basically, I just announced the namespace. I got some tracks. I gotta track operation. have an enumerated operation of 0, which means get rid this track's done. And this is in fact one way to terminate a broadcast, to clean termination. I just published a catalog that says it's got I got no more tracks in this broadcast. And I would really encourage us strongly. One of the problems segmented medias. You never quite know when the streams finished. and we left with all these hanging clients all over the place. So we should really be robust in our termination strategy."
  },
  {
    "startTime": "01:18:04",
    "text": "Number 3. So now we shift to the conference site. So same catalog format, But now I got lip synced audio and video. I got 2 tracks. They both packaged low low overhead containers, not CMAF, and I'm inserted a quality profile for each one of them. This is pretty much identical. to lock as it exists today. there's no mention of CMF here because there's no CMF being used. Example number 4, this is a delta update. So say that that that conference user, Alice, wants to add slide share. We don't wanna republish the catalog repeating all the audio and video she was publishing before. So now we basically add in parent sequence number. This is telling us that this catalog depends on a prior one, that's uniquely identified by that parent sequence number. and it defines the namespace and the tracks audio and video, which are not described here. So we don't need to repeat them. We're just adding in slides. We're saying it's lip synced with the rest. then we define our our slide track and its quality profile. So you can have small little updates. You don't have to redescribe the entire thing every time. Example number 5, this is the mixed format. So I got CMF and lock. So my video in this case, This package with CMF. It's got an in it unit segment. The audio is coming in as OPUS with a low overhead container. Is that a comment? Sorry. I I yeah. from my next site or I didn't sorry. I didn't click on the tool. That does mean that however time stamps are defined in lock and over time stamps are defined in CMAF, have to be defined to be meaningful if they're gonna be time aligned. Yes? Yes. No. I think that's why it's time aligned. We gotta define rule for that, and now you would actually blend the 2 together. I think that gets tricky because those tend to be specified by the catalog. by the container formats. Yeah. And Victor is sitting in front of you. This was one of"
  },
  {
    "startTime": "01:20:04",
    "text": "Victor's use cases, so maybe Victor has ideas on on how we would tie the the 2 together. I feel like we have to define some unified timing model anyways because I'm not sure if CEMA probably solves it as a list of logs, like, you would also have to add a field to define the start time stamp, which is to say that it someone joins a video call, like, 2 minutes earlier. You still need to figure out how to align it to the timings of previous strings. Yeah. So so this is those are the problems who would just have to deal with. And Alright. if we're mixing formats probably means we should deal with it as a catalog level. I agree. Couple more folks jumped in. wanna take more questions or you wanna Oh, okay. sending it back. Do you you close to Well, I got 2 more slides after this. I don't know what time It was a 10 minute slide. Okay. a quick I'll be quick here. I I think this is one of the kind of advanced use cases we might want to come revisit it once we figure out the base use cases on separating the other things we are reporting today. That's it. Okay. Okay. then number 6, this is throwing everything together and adding in So we got video and CMF. We've got audio in lock, and we got a tracked coming from a different namespace. And this was one of Ted's earlier requests where there's a 3rd party captioning service that's producing content. we got a namespace that sports.example.com. So that's supplying video with CMF, audio with lock, then we have a an external namespace captions.example.net, that's supplying us CMaf encapsulated captioning. So this is how we can mix namespace content inside a single catalog catalog catalog and, in fact, mix packaging formats at the same time. So this is about the most complex catalog of the 6 presented. Then final slide, just some additional optimizations we can consider, we can only add sequence number for delta updates. In fact, I did that."
  },
  {
    "startTime": "01:22:00",
    "text": "can collapse the streaming format to a topple because we're toppled fans in this group we should, I think, describe quality parameters for C Matric. The reason being that there's JavaScript clients that have to make the decision about what track to play, but don't have the MP 4 pass it necessarily to extract the information. They might just hand it to a decoder. So I don't think it's a lot of overhead to repeat quality information, and I would at at least it would keep our track descriptions consistent between the CMAP side in the loxide. Whether we do JSON with binary you know, JSON converted to binary or binary to JSON, everyone has religion, but I like the convenience of Jason at the beginning. until where we prove that it's it's too large for good usage. And then track descriptors, we need to add additional things in there that aren't there today, like labels for UI. role designator accessibility, in order to make it legal for broad customer US. also ratings designator. We got a lot of broadcast compliance issues that we should also look at for here. But those are relatively trivial to add to the track description. That concludes the summary, Jordy, up for Christian. clarification question about the previous slides. So could you help me understand what this lip sync means and what's the difference with time aligned. What's the difference with? between lip synced and time aligned. I would ask Moe because that's most creation. I think we're gonna eliminate lip sync. Timeline line, I think captures it all, and lip sync is sort of implied by Yeah. Okay. Yeah. I saw lip synch because I I was roughly close to each other because I didn't ever salt timings model and time aligned would be down to the microsecond I mean, technically, like an RTP, there is support for everything is already time line. The timing is essential in our audio, but then lipstick is another signal saying these tracks are explicitly intended to be"
  },
  {
    "startTime": "01:24:03",
    "text": "lip sync. So, you know, force their play out to be at the precise same time Okay. So that's a a little bit of a nuance semantic and RTP that we thought we'd extend. the scalars. But the more I think about it, the more necessary it is, and and it's usually an implicit decision that this audio and this video be Or either time aligned or they're not. Okay. Yeah. Yeah. So has maybe I need to discuss this with more, but I I disagree with that a bit. timeline will will be applied to simulcast as well. they're saying with my my three quarter streams, are time aligned, and there is I'm the indication for the receiver to kind kind of play only one. you don't want to play all the three qualities at a time. Whereas, lip sync is, like, I want to play these two tracks together when a play out. So there is a subtle a difference that has to be made. So we should probably invent better names for them if they're intended to be displayed to or consumed either consume these together or don't consume them at all as your We can only discuss this with a bit, and I am not disagreeing, but some clarification has to be done. Thanks. Yeah. Go, Jody. a little bit of queue. I would argue if the There's if it's time aligned if the is lip synching. so Low Victor and Ali are in the queue. Mosenadi, I think I strongly support this overall direction from day 1, I've always argued to have separate catalog from the media formats. And in fact, I think the catalog is immediate format everything that is transported as a mock object, I think, should be in the registry of of media formats, and the catalog is obviously transported as a Mark object. it's just another format just like the CMF objects and the lock objects. You have catalog objects. So I strongly suggest that we can go with this, you know, central catalog format, I'm still not completely Grocking the the the separation between having the packaging formats as as one other thing and then overall streaming format as another thing. I think there's still a little bit of fuzziness"
  },
  {
    "startTime": "01:26:02",
    "text": "around whether that concept is is needed or not. And then architecturally, the, you know, document wise, how we do it. Clearly, there's gonna be an a catalog document, but I'm still fuzzy about this overall streaming formats thing that ties all of them together I think that may need some more thought before we go in that direction. k? Victor. Yeah. I I think one was a useful things that catalog does and one of the most important is that would let you communicate the alternative versions of the same track And, sir, are many notion of alternatives for instance, one of them is you can have CMF H Two Sixty Four, but like, the same strain, but that's 2 megabits versus 6 megabits. another version is you can have, like, CMF H 264 with versus seam of So Vipit's ACLAM or you can have Ugh. or you can have, like, say audio, you can have LOC op was 48,000 stereo, and then you have CMF with -- Yeah. -- 5.1 sound. And, like, there is, like, the difference in both alternatives in terms of player support, but also alternatives in terms of different quality. And It just It's as important for a format to capture those alternatives. you know, Dash does that with adaptation sets today, so you would put your Dolby audio in one adaptation set, you're stereo AAC and another -- Okay. So so so is there, like, multiple axes here. So it's, like, access of do I for this format since there is access of which quality do I want? there is the access of that's my hardware support that many channels, and so there is access of, language, which language are they attract. And Some of those might be captured by, like,"
  },
  {
    "startTime": "01:28:01",
    "text": "the containers themselves. For instance, if you have, like, languages, that might be a tag inside Cmap, but some of them would have to be captured by cathwalt. Okay. Okay. So there's a few more people in queue who are down to our last couple of minutes. I remember we are gonna talk again on Wednesday, and hopefully in between. So no. No. you know, try to keep it brief, brief, brief, Okay? I'll leave again. Will, I have a quite your process in it line based 60 per encoder data is supposed to be read. and processed by home. by the client consumes the track it was used this initialization to initate its decoder and also it That init contains the information on the resolution with the height, the codec, and the codec So it would know if we could even decode this content. But, Daniel, you wanna know this information before you said the data wanted because in this case, it's was recorded. -- performing a dual function it's it's describing the content as well as serving as it's So my JavaScript client supposed to understand Well, that's why one of the suggested home the improvements I suggested was is we, in fact, repeat the quality profile for the CMAT track so that your JavaScript client doesn't have to deep doesn't have to parse that index. And what do you mean exactly by the quality there? I mean, this is It's the one there that quality profile. If if you read through the lock space, it it defines the a a string. Because there's a bunch of stuff that we need to actually know, like, the codec profile, the products profile, all that stuff. That is all described in your net segment for CEMA. And that's what Luke built them -- Okay. -- solution networks. Alright. And my my my comment on this harmonizing the couple of formats or not. I mean, I'm I'm I'm still trying to understand how many people have actually, the use case for this kind of stuff like a you know, combining a CMAP video track with non CMF audio track. because as people pointed out, know, leap sync issues or time alignment actually requires some sort of external signaling here. And don't know whether actually that's really a good trade off in terms of reducing the overhead or not. I mean, will prefer to keep them separate."
  },
  {
    "startTime": "01:30:04",
    "text": "as I think most of the people will either use CMAP based stuff or lock based stuff. But -- But you could still you could keep them separate in your world. Yes. But if I -- wanna prohibit other I'm just trying to understand the -- Okay. people from mixing them. No. I'm I'm Yeah. I just had a quick question since I I'd had started writing the that chat based draft, and so I was writing my own catalog format, making it a poll, the idea with the if there was a unified catalog draft, would it just would that also get tied transport where, like, anybody who wanted to do anything catalog related has to use the formats to find there, or is it still somebody wants to do something over mock. They can write their own catalog. Two answers as I see it. One is we could force you that anytime you use the streaming format, you must use this catalog. dropped, I think that's a little constraining. So in fact, I would define maybe an interface to in mock transport for catalogs. and you can go write your own catalog draft, but it must just match the interface. And then and we we provide an we provide an example so we manage and produce the common catalogformat but we don't prohibit other people from making them. or from future ones improving them, and we define an interface to make sure it's interoperable we want that to be non changing. Right? We don't wanna once you have a mock transport implementation, you don't wanna change it. And that's the cool part about separating them was you can innovate on the streaming format side all day change it on the weekend. We don't have to go change our distribution architecture. No. No. No. Okay. Thanks. Jonathan, we're already overtime, so real quick and then we'll go off. it's an appropriate closing comment. as we edge ever closer to SDP. Now that we have lock, should just go and combine it with offer answer, and our specs are called local and local. you very much. Thank And and we'll return on Wednesday, having recovered from that final comment."
  },
  {
    "startTime": "01:32:00",
    "text": "Moe, you're in queue. You'll be first up on Wednesday when we return to this topic. Thanks everybody for being here. If you haven't already signed the blue sheet, by scanning into the tool, please do so now that make sure that we have enough room in Prague not to be in a cramped room, so please do make sure you do that. we'll see you on Wednesday. And, Martin, come clean your chocolate. Left became close and anticipated. Again, something else was more important. Shockingly. Yes. I don't know how I feel about"
  }
]
