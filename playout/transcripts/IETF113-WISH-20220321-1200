[
  {
    "startTime": "00:00:12",
    "text": "so good morning according to my time uh clock it's time to start but i think we're going to give people a couple of minutes we have a pretty light agenda as well we should be able to get all the way through it regardless um hi ted i like your yellow mask it's very"
  },
  {
    "startTime": "00:02:01",
    "text": "distinctive hi sean uh they were giving them out at the registration and i have a whole bunch of very boring white ones but uh it's very hard not to fall to the allure of bright and shiny colors the advantage of being remote though is you get to go and just show off your beard instead sure murray jump in [Applause] still pretty faint i can hear you but it's pretty okay same problem as before thanks i'll keep working on it all right nails unless you got any objection we'll get going here in like two minutes so next again how's that i think that's better you think it's better let me try one more turn up a little more"
  },
  {
    "startTime": "00:04:01",
    "text": "there how's that it's more much more louder all right thanks does not want to seem to let me share the slides with you the share of pre-reloaded slides so we're going to have a little screen on all right i'll do this i don't want to do that that's a bad idea let's share this and hopefully everyone sees this now all right probably time so welcome to wish um please make sure your video is turned off um unless you're speaking as well your microphone a bunch of links for the media co um how to get in the audio panel java and the minutes which is also the note-taking mechanism as well um i believe there was a qr code that comes at the beginning when you came in the room which you need to scan um to make sure that you get added to the blue sheets it saves everybody from having to worry about cleaning pens um welcome to wish neils and i are the chairs hello"
  },
  {
    "startTime": "00:06:03",
    "text": "this is only the second session of the ietf meeting that you may have been at uh know well remind you of the various policies that you um agree to adhere yourself to uh because you're participating um lots of things in here lots of ipr policy um how to work in the group any harassment code of content copyright patents etc if you have any questions um we can answer them other people in the room can answer them if you see or feel that anything's being done that's out of line with those please contact the obods team and this is kind of one that we wanted to highlight which out of contact is basically try to treat everybody with respect try to speak as slowly as possible trying to limit the use of slang i feel like they put that in just for me dispute ideas um by using a reasonable argument um use your best engineering judgment find the best solution for the whole the internet and i contribute to the ongoing work and our agenda is pretty light tonight so we're gonna go through the venus trivia um we have one draft and we have some implementation experience that uh got bumped from the last time and then we'll have some open time i don't know if we're gonna need 30 minutes to talk about the draft because there's only one open uh pull request and two issues and so we may be able to close that out and actually go for working group last call with this uh um with this one draft and that's really it so i wonder is sergio available go ahead hello yeah i think that the my party is going to be fast but we can spend later more time just thinking about the steps"
  },
  {
    "startTime": "00:08:00",
    "text": "so you can go to the first slide say again that can you go to the first place well i can okay no this is not i don't know how to do it because you shared it it should be working yeah but in the index ready to be shared there is only the we implemented with implementation experience in janus so there is no other deck there great"
  },
  {
    "startTime": "00:10:06",
    "text": "wow can you shoot the slides to me again via email and i can see if i can get about yeah cause those came through oh unless you updated those i updated it in the in the google doc that you suddenly yep and then i didn't upload the new version so that would be a problem let me go do that now apologies everyone um"
  },
  {
    "startTime": "00:12:49",
    "text": "um see that i have restored the the slides because it seems that you have ever written my my slides but i have put it again in in the in the slide deck on google drive so this should be there yes this is not true you want to share that again or should i can you share them while i upload them yep"
  },
  {
    "startTime": "00:14:08",
    "text": "uh turns out i can't i would have to restart chrome sorry about that um no still not there"
  },
  {
    "startTime": "00:16:11",
    "text": "okay yes the the slides are rotated in the data tracker and also you go to the to emitting materials in the slides then they they look at it also yeah this is it finally about that folks okay so um this is the list of changing between the the previous version of the withdraft and the on the latest one"
  },
  {
    "startTime": "00:18:00",
    "text": "there is one minor change related to the to the linear relation type of that we have in the draft that will probably has the urn of the urine itf pattern sweep and we have renamed it yesterday server and the main difference between the two drafts is the the the last open point that we have for the draft that was how to handle a patch request that could be out of order before between uh a patch required that was doing a uh i'm sending new istrical candidates from the one that was doing a restart and what happened when they were received out of order and how to to solve that the problem was presented last in the last ietf meeting and it was agreed that we were going to go we were going to implement it with a with the http entity tag and that's why this a this the patch the the pull request that has been already merged into the draft and made available in the in the in the second version is is covering that what the draft the the changes have done is that now we are associating a a unique a value of an entity tax to each ice session this entity tax is an opec opaque value so meaning that the if the the whipping the the clients has not uh have to take any kind of or try to get any semantic semantical value of it it's an opaque value and it is up to the server how to um how to choose the value and how it is generated and it could be just an auto grant"
  },
  {
    "startTime": "00:20:02",
    "text": "counter and uuid or for example the i user name and it is updo to the to the server how to to implement it and how to use it and the entity value entity tag value must be returned both in the in the 201 created response to the original post request or in any 200 okay response to a patch request that it is triggering i restart so this means that every time the there is a new ice session because it is either the initial one or the um or because a new ice restart is triggered the entity value has to be changed and report it back to the client then the the patch request for for trickle eyes must contain an if match header with the last known value of the entity tag value and then the the server can check if the the entity the identity tag value that it is in the if match header and is the same one that the one that that he has for the for the eye session and if it not if it doesn't match it means that the the the patch request is out of order and then it must reject it with a four one two a precondition fail as in the as specified by the in the itachi rpc and then the pass requests for isostar must contain an if matched value of an aesthetic as there is meaning that it in regard that the ice restart must happen regardless of which is the the value of the entity tax that means because you want to trigger the restart always"
  },
  {
    "startTime": "00:22:00",
    "text": "also i this is the one thing that we should check i think that that it is valid according to the http um specs is that we should only need to send or should only the the the with clients should only send the ifmatch header for the pass request and not for the other requests that are not changing the the i session for example in the http delete and also as a consequence of the that the patch request for sending ice candidates must contain the the entity attack of the of the investors then the client must buffer all i scan the ice candidates that are gathered after sending a nice restart until until it receives the delay the updated entity tag in the the response this is already something that we need to do anyway in the initial request because you cannot send a scan the date until you receive the the response to the to the post request so this is something that it was already uh requested or it was already required to be done before and on the original and when i started the session and now we are also having to do it when there is another start on going so we have two people in the queue i don't know do you guys want to uh do your points now or do you want to wait till the end i have ended so it's fine for days for them to so i'm fine to go on the queue all right julius hello can you hear me okay cool"
  },
  {
    "startTime": "00:24:01",
    "text": "um so could you please clarify and i'd like to see it clarified in the draft how the server determines whether an sdp fragment is a restart or a or a candidate does it just look at the if match header or does it examine the sdp and look at the ufrag value or does it do both it this has not changed that how is that and it is a specified in the rfc for the ice fragment and you have to check the username and password to see if they have changed between the one that you have and the one that it is say um for the the the one that you have for the client or not so this is this is according to i don't recall the the number of their facebook and you have to you have to check the sdp fragment and is it not enough to check the if match value for an asterisk uh you shouldn't i mean let's let's keep things where they should be i mean probably probably it will work but but the they are different mechanisms for different things so i think that an implementation should check the and the the the i say the ice username fastball and password to detect the that it is an irrestart okay okay just because they can have different semantics so we must be modified in the future and okay and i will have another comment about the document as a whole so i'll go back to the end of the queue now okay jonathan do you want to hop up thanks yeah jonathan lennox um i think the other probably another point you want to say is you can't start a nice restart while an"
  },
  {
    "startTime": "00:26:00",
    "text": "existing ice restart is pending basically you can't have more than one ice restart in flight at a time that's probably a requirement you want otherwise things get confusing as to which one actually is the current one um i've seen this like nobody would probably do this on purpose but i've seen this like when a device's network is flapping and it just thinks oh i have to do another ice restart right away so you probably want to say you know wait till the previous ice you get a response to the previous i3 start before you start another one yeah but what will happen if you're not done one question that's that's when what will happen if uh if for example you have a flagging network as you said and the previous restart is not completed so you have to wait for the timeout of the http request i will never so i mean maybe or either that or you figure out how to handle it the problem is that if you're if you've got more than one request outstanding at a time you're not sure which one actually you know is the current state yeah but i but for example i would say that the ice restart happens because you are switching networks so the previous http request is not likely to have been received or your or you didn't receive the rest or was received but you didn't get the response yeah yes or you haven't gotten the response yet who knows but yeah now i agree well i think i'm not sure what the requirement should be but we should have a description how to handle this because if you're not sure which requests actually reach the server first you could be uncertain which one you're actually supposed to which one you should actually switch to so might you might need some logic there this is a case where the fact that sip actually has a total sequence number"
  },
  {
    "startTime": "00:28:00",
    "text": "ordering helps in fact you don't have a total sequence ordering here confusion okay so maybe just the time stamp for the for the response would be enough for that to know which one is happened before i really love this channel i didn't understand in the description of patch when you do a patch does the e-tag value change or not depends of the depend if it is that the patch is for a nice restart if it is another start the the entity tag will change because you are triggering you are creating a new ice session but it is if the patch request is for and sending a new ice candidate it will not change okay can you make that clear in the in the in the dock okay i will i was trying to i was trying to figure it out and i couldn't read it from a look that's a comment to johnson there is no universal ordering of candidates in sep either or rather candidates don't exist in zip so we're outside of zip here julius yeah so that's a comment not about the latest changes that's a comment about the document as a whole if i understand the document correctly the intent is that both the client and the server are monitoring ice content and reacting immediately to a retraction of consent is that correct yeah but but this is as this is as a as webrtc works so you have"
  },
  {
    "startTime": "00:30:00",
    "text": "no change in change there yeah sure but i'm saying that uh i feel that this should be stated normatively so if you look at the places where consent is mentioned in the document the only there is uh the normative la there is normative language only in two places and it feels incorrect and it feels incomplete sorry so either you don't use normative language at all for ice content and refer to the right document but saying that you obey another rfc or else you use normative language and you say and you state precisely the behavior of the server and the client and here we are halfway okay from an editorial point that feels really weird and that you do mention two details in normative language and refer the rest to the webrtc documents okay so i feel that's a that's an editorial issue not a fundamental issue so what i would like i might not be i might be the minority here so i feel that you should be stating that non-native language clearly in this document even though it repeats other documents but that's just my opinion i don't have a strong opinion on that i mean i would just say would like to get input out what is the best way of doing the the editorial of that i mean i'm fine with both waves no seriously which is the the correct one of doing that but i will be fine to to change it to whatever is the most appropriate one so perhaps i mentioned the thing that bob that initially bothered me so in the last revision you had the fact that in any case the server must uh react to a retraction of consent okay and that's a normative language and i was wondering here are you adding a new requirement here or is it something"
  },
  {
    "startTime": "00:32:01",
    "text": "i'm already doing yeah i mean i think that it is valid the concern i i'm not sure exactly what is the formal way of doing that in the species so i we can just check it and modify it to whatever best process the best parasthesis for this but i'm fine i mean i i i start yourself so thank you adam go ahead thanks so i wanted to comment on what harold was saying the i think we really want to be careful here is that we don't try to define the e-tag semantics here as much as uh pointing to the behavior described in 7232 um and from that perspective i'm i'm not sure the answer is correct that it doesn't change when candidates arrive i think when you're patching a resource it's changing the resource value and so the e-tag is necessarily going to change but again i think that's instead of defining the semantics in this document we should point to 7232 for them okay but i will like to ask you if you can i mean as a make a small pr just trying to at least so i can't know exactly what what or where are you concerned or just try to to put a jihad issue so i can check exactly the which part of the document needs to be changed sure yeah i'll do that um i was more responding to the the discussion in the room here i'm i'm not exactly sure what the text says at the moment but i'll look at it and and uh open a pr if there needs to be a change thanks yeah i think that this is the the the trade-off is how verbose verbose would have to do in the in the document so it is splitted about"
  },
  {
    "startTime": "00:34:01",
    "text": "what needs to be done in by a whip implementation instead of having to look at too many different drafts or at least to have a more clear idea of what to what needs to be done but obviously we need to be precise on the language so sergio from experience here um i think the isd has waffled over the years whether they want lower case language if you're repeating requirements from other drafts as long as i think as long as you're consistent to make sure that we know where the requirement came from whether it's new or imported another document that's fine the only problem with repeating the requirement is that it's changed in the base document and not in the other document and there's this mismatch problem but i think long as you're clearly as defined in rfc empty squad in section block comma then you put the requirement i think it'll be fine okay the key was now drained so you can continue with the presentation sorry yeah so let's slide this so well i i said that so i think that i would like to talk about next steps there are no outstanding issues in the in the draft there are two pending ones in the github repository but one is another one by team that i will share with him i don't think that he's on the on the meeting no but it was a one night from the very beginning and i don't think that it is relevant anymore and the other one"
  },
  {
    "startTime": "00:36:00",
    "text": "was about the if we should specify the more about the http error response code i think that we are already doing that for the most of the requests that have a semantic or that means we need to to to provide responses in case of something that happened and for general errors like not phone or things like that or international better i think that and there is no need to to define that as we everyone should just follow the http response code that are already specified so i know seriously what is the the the procedure of continuing with the with the draft well we need to make some editorial changes but not probably they're not sure if we can go to the working group last call or if we need to make this editorial change before before doing so so sergio what i'd like to see is um to have you clear up the issues um if they're old like close them out um and the other pull request is just kind of like lingering there if you can close those out and then anybody else can get their stuff in as quickly as possible and then we can go to a working group class call okay please so um i'm i'm so sorry sergio i'm i'm really sorry but i disagree with you on the error handling issue and uh the reason i'm sorry is that it's horrible defining precisely all the error values is horribly tedious work and i feel and i feel that that's not"
  },
  {
    "startTime": "00:38:00",
    "text": "something that you should leave to the implementer so if i'm implementing the server side of which i don't want to have to go through all of the http rxcs in order to find out which is the right error value to send at a given point when i have a failure and when implementing your draft i have had i have had the problem so i've i wanted to get it done so i have to say that i was more or less sending errors randomly and that's something i felt the need for guidance telling me that if you have this kind of failure send this error here so some of them are obvious if i have an implementation failure if i have an unexpected error i send internal server error that's fine but in cases where the client is sending something that mismatches and so on uh whether to send which of the 400 errors or 500 errors to send i feel that the draft needs a little bit more work on that because it's horrible no no no no no but i mean what i can do this is the typical lot please feel free to to submit a pr solve with that but i'm not going to but i mean yes for example how exhaustive can we how we do we need to go into this because for example do we need to specify what happens if someone sent us an invalid sdp when when in the patch request i think that we shouldn't i mean this is already a standard http and we don't need to reference the the what code needs to be um be returning for example instead of an sdp and we get a um or something there are a lot of things that they we shouldn't er we should not be specifying because it is"
  },
  {
    "startTime": "00:40:01",
    "text": "just how um http works i mean you have errors responses that are defined for the the for the common cases i think that we have to define responses for example uh for when the semantic issues for example i cannot think of anything by now that it is not in the draft so you could put you could save some example and we can check if so there was one on the list which is you sent me a candidate that i don't understand do i ignore the candidate and return 200 or to 202 i don't remember or do i inform the client that i couldn't pass this candidate okay it's tricky because you can batch the candidates okay so you answered something which i agree with uh ignore the candidate and return success but i feel that it should be in the draft yeah no no and i have i have added that in the graph okay but but if you check this is not about whatever code to return it is what is the behavior of the server yeah so that so that's these cases i completely agree that we have to to add anything that we can find in the server in the in the in the draft for example because this is not just specified which is there were code to return it is if this is valid and what should be the behavior when receiving this kind of or having this kind of of a of candidate okay what happens if you send me delete for a resource that no longer exists do i send 404 but that used to exist that has been turned down but for yeah i mean it is standard for not found i think that this is the most clear example of still something that i don't"
  },
  {
    "startTime": "00:42:00",
    "text": "think that needs to be go is to be on the on the draft okay i mean the the first one i i agree that it has to be in the draft and it is it is in the draft what to return if the if the this resource is not from is it is the country sample of what i think don't think that it has to be in the draft okay with codex that i don't support this is the sap negotiation you have to return as an sdp with the economy okay okay that's a silly one so sorry do you mean so yeah okay but now look for the draft and see whether there are any concrete other concrete cases that i miss um but i think one way that we start to ferret out a lot of these is actually by doing the working group last call so i'd really like to get there in the next couple of weeks where we can fire this off so i'll be watching the repo and sergio i'll be talking with you to make sure that we uh make sure everything is dutifully knocked off as much as possible and then we do the work last call and see where we go and then we can start talking about all the other issues of sending mana tag and language support subtitles etc okay so i think that because i have already been working with some people that are implementing whip and are thinking about i have received a request about how to can we add more functionalities to whip so i think that my general question is if once we have the whip draft publish or ready for publishing if we have to we should be working on on adding new functionalities to whip for example the ones that comes immediately in mind to me is how for example sending metadata alongside with the with the"
  },
  {
    "startTime": "00:44:00",
    "text": "with the audio video there are a lot of specs already available that are used in the traditional streaming that we could support and for example multi-language support if we want to support it and how or for example how do we do subtitling with a with a with whip that it is something that probably a i have a proposal ready to to stop being working on with a like for sending with btt over data channels but this is a kind of a outside of scope of the of the week working group because we are not supposed to do any any new draft or new specs for this kind of things probably this would go to apt core and then we have to reference it from here so not sure exactly how should we stand and then or if we should extend the working group to handle these things or how we should do it uh sergio i too have the same question but i guess we'll need to figure out how to do that um because i know that we initially tightly scoped this working groups charter so we may have to cuddle with our 80s to figure out what they want to do whether it's you know this goes away and they all get dispatched or they all go to avt core or wherever um we'll definitely be looking at that if you have ideas the right thing to do is to start dropping drafts and then we can start thinking about it yep yeah i was just checking our charter and i think no yeah as sean said like some work to figure out"
  },
  {
    "startTime": "00:46:00",
    "text": "thank you sergio i'm going to be looking forward to getting this one in working group last call so we'll work through that uh lorenzo i believe you're up and we can drive the slides from here so you can just say next slide you can also try to to pass the control to me i can try to use the in the mobile interface over here to control the slides absolutely how do i change it over to you uh you can just hover over my name in the in the participants list and there should be an icon that says pass control to let's do that there we go look at that it has i've i believe i'm doing that now yeah all right cool okay yeah we added this new feature why not use it you know okay awesome okay i'll i'll be brief so i will i won't bother bore you too much with all these i just wanted to share some implementation experience uh with both the web client and server that we implemented as an open source uh an open source tool and in particular using two completely different webrtc stacks which was also helpful in terms of integration interoperability as well so i won't go too much into the detail of the on the implementation itself so you can find more information in that blog post if you are interested and i also made a presentation at a conference in chicago a few months ago where i also went a bit more in detail about all the different aspects but i'll share some some details about both the server and client-side implementation so for the server side we based it all on our own javascript rtc server which is an open source implementation of a webrtc server with different functionality including an sfu and the sfu is indeed what we use we used in here so specifically janus uses its own json based api so rather than embedding"
  },
  {
    "startTime": "00:48:00",
    "text": "uh the web api inside genos itself which is what julius did in galin for instance if i record correctly we chose a a simpler and more loosely integrated approach which was basically of placing a tiny wrapper in front of janus itself which means that we have a small uh server implementation that sits in front of janus that implements the web api and then it translates all the interactions on the website to interactions on the janos side so it translates the apis on the fly and of course nothing needs to be changed on the webrtc stack because that doesn't change so it's a very thin layer on the signaling on a signaling level and we implemented it very quickly using node.js so it's basically a very basic express based rest api for what implements the the web api and then the janus inter integration is is done programmatically as well and of course it only takes care of the ingest part so we make sure that the video gets to janus and then what happens after that is out of scope of the web server itself so if you need to distribute it somehow that's up to you and as i mentioned this is completely open source so if you want to give that a try you just need to to clone that repo and everything should should be working and just to give you an idea about how it works so as i mentioned it's very simply uh an application layer in front of janus for what concern the signaling so you have a web client talking talking the whip language with this simple web server the web server translates it to janus requests which means that eventually you end up with the webrtc peer connection between the web client and the janus server that is being controlled by this simple web server and as far as the this translation is concerned it's actually quite trivial which means that the same process could be done with other media servers as well in this case for instance this is the http post that originates the"
  },
  {
    "startTime": "00:50:00",
    "text": "the publishing process which means that as soon as we receive a new offer we need to pass this to janus somehow and since we are using the sfu plugin with that it means that we need to create a connection with janus create the resource that we need to talk to jarvis for that and then we join an existing sfu room as if we were an actual participant if we even if we are not as soon as we receive an answer back which means that janus is has taken care of the negotiation process we can send that answer back via whip back to the participant which means that then the negotiation for the whip producer can start happening and of course the web server also adds the needed resources for instance the the location header so that you can then interact with the resource after that which means that of course we also support handling trickle candidates and this is quite trivial because in this case we just need to translate between the sdp fragment format that we've uses and the json-based trickle signaling that janus uses instead which is relatively straightforward also when you group candidates so no problems there of course what happens when you start exchanging trickle candidates is that the actualized and dtls exchanges are going to happen between the producer and janus itself so the web server is not involved in the process after that for ice restarts the process was a bit more complicated just because on the website we just use we just exchanged the credentials not the whole sdp while janus expects the whole sdp to update a session to trigger a restart which means that the the web server needs to to keep basically a copy of the original sdp that was sent to the post and so anytime that we receive new credentials from the producer we just swoop the credentials in this sdp that we had before we send it to janus we receive a complete sdp back and then we extract the new credentials from this answer and only send those via"
  },
  {
    "startTime": "00:52:00",
    "text": "via whip instead so a bit more work but it's not really that complicated uh tearing down a session is also quite easy because we just need to basically tear down the resource on the genocide whenever we receive a delete of course the counterpart may also be happening so we may be detecting a peer connection going down because of iso or dtls and in that case janus can intercept it and notify that via the janus api to the web server that is controlling it and when that happens the web server can then clean up the resources automatically so that if appear connection was closed because there was a dtls alert but no signaling involved for instance we can still take care of cleaning everything up accordingly and of course i mean web server is nice but we also wanted to have a web client to test it all and we didn't really want to use a browser for that because even though a web client basically needs an http stack and the webrtc is stuck and so the browser is the obvious choice here i wanted to test and set the more native solution because that's what most broadcasters use anyway so they use applications like obs or extreme or others which are all native solutions that allow them to to produce a broadcast in a more controlled way unfortunately obs webrtc does exist but does not support whip at the moment it did support whip in a very early stage last year but right now it only supports the custom millicase protocol so i basically chose to use uh g-streamer for the purpose because it does come with a webrtc stack in webrtc bin and i actually had already used this stack for a few other applications in the past so i was partly familiar with it and i wanted to play with that and most importantly it is very modular and very powerful which as i explained later basically allowed me to do some more prototyping and doing some interesting things with all these uh right away and all this is also open source if you want to to play with it a bit so i encourage you to do that"
  },
  {
    "startTime": "00:54:01",
    "text": "and as far as the futures there are some limitations so it's pretty much complete in terms of adherence to this to the to the spec but there are some limitations so we do support trigger settings standard either in advance or via the link header as specified in the document we support authorization via tokens delete and so on and so forth we can also do non-triggle if you want to even though the speak does mandate support for trickle and we have a way to force turn uh in case you need it which would be pretty much the equivalent of calling ice transport relay when you do it from the browser which can be helpful in some in some cases and we chose to make the audio video pipelines completely customizable which means that you choose using the gstreamer format how you want what you want to capture and how you want to encode it up until the webrtc part that is taken care of by the web client which again gives you a lot of flexibility in terms of what you want to capture and how you want to send it which was helpful in a few different use cases in particular the problem is that at the moment webrtc bin has some limitations so for instance it does not support ice restarts yet which means that i could not test that part so far and uh there is a pull request to add support for that but it still is still stuck for a while and besides there is also another limitation that we mentioned on the mailing list which means that once you create a peerconnection object which means once you have generated your offer and sent it somewhere you cannot add a stun or turn server after that point which means that we cannot use for instance the link header in response to a post to add a stand and turn server together credentials after we have sent the offer we can only do it before which means that at the moment we only support the link header when in response to the options before the post which is a bit of a limitation but hopefully that will be overcome soon as well and finally at the moment there's only sorry at the moment this only supports linux"
  },
  {
    "startTime": "00:56:00",
    "text": "because that's what i use on my own laptop but in theory it should be easy enough to port it to windows and macos as well i just don't have much experience in development on those environments so since this is open source if you have a bit of experience in updating the make files to get it working there as well i'd be this would be very welcome and to conclude i mean this is how you can basically start with client session so for instance in this case that address is actually real so it's an address that i set up for the academy last itf and it's still active if you want to play with it a bit so if you send if you create a web session a ted address with that token then you can just choose what you want to send as audio and video uh streams and then that should just work and you can test it using this web page over here so since basically the uh the whip the web server talks to john's to create a fake participant in a room basically all you need to make sure that it is actually working is joining the same room somehow so that link allows you to join as a passive participant if you see something everything is working and in this case we are capturing a fake audio source and a fake video series but this could be an actual webcam this could be streaming from a file or something else so everything that gstreamer supports you can actually capture here basically that's the the main idea and just to just a couple of notes on the tags so i started experimenting with those as well in a couple of pull requests and right now i made some assumptions and some of those we have also addressed them in the discussion before so i won't bother you too much with those i was i just wanted to conclude with the the fact that with the web client you can actually do some experimentation as well so if you do want to make some experimentations in early prototyping with whip and webrtc in general it may be a useful tool because for instance one aspect that is important in"
  },
  {
    "startTime": "00:58:00",
    "text": "broadcasting is the ability to use existing broadcasting tools for webrtc as well which is the main reason why webrtc has not been adopted much in the broadcaster industry so far mainly because tools like obs that pretty much all streamers use do not support webrtc out of the box so i wanted to check if i could actually already used web obs as a way to produce a stream and then send it to voip rtc somehow and i prototype a prototype the way using an intermediate technology that is called ndi which is basically a standard defacto in the broadcaster industry basically i had obs i produced something in obs configured an ndi output in obs and since gstreamer has a plugin to use ndi as a source all i needed to do was start the web clients to capture from the ndi source that was generated possibly on another laptop over there and then capture what obs was producing and send it via webrtc to janus which is what i did in in these very silly this very silly demo over here where i was capturing myself playing guitar i did a lot of gifs like this was a 90s website and then basically started i produced this stream live and then vi and d i passed it to the web client the web client sent it to janus and i had in a demo there were about 20 people watching the webrtc concert in real time basically that was the idea but of course this there are more interesting things that you can do beyond beyond the silly experiment that i did because for instance just this week sergio used the web client to prototype adding support for new pixel formats and h.264 profiles in chrome itself because basically gstreamer allows you to encode everything the way that you want which means that you can easily inject a webrtc stream that is not strictly what the webrtc browser expects so you can create something and then check"
  },
  {
    "startTime": "01:00:01",
    "text": "what the browser will accept or not that way and that is basically all so i don't know if i have time for questions or if you have any in the first place thank you i think we're at the top of the hour but see are there any questions otherwise thank you renzo always helpful to get feedback from actual implementations um and with that i think thank you for attending wish sounds like we're good track to make it to working group last call pretty soon and sean and me will take the item to figure out what to do with extensions regarding metadata and subtitles and that kind of stuff thank you very much for indian english and hopefully we have a good and nice remaining itf week yeah and sorry for the chair fell there at the beginning oh yes sorry about that um my chrome had like uh asked before permissions to do the screen recording again which would have required like to restore chrome i should have tested that before"
  }
]
