[
  {
    "startTime": "00:01:15",
    "text": "hey folks uh although we're tempted uh we're we're supposed to start about now we're still missing some of our presenters so we're going to give it another couple of minutes uh but we'll we'll start very soon"
  },
  {
    "startTime": "00:02:37",
    "text": "Colin I see you're in the queue I'm just seeing if this is working I'm all good I'll get out of the queue okay and yet you started a rush Here Comes Spencer to let the chairs know I have uploaded uh slides for the last slot in about 30 minutes ago um I think Ted approved him oh and thank you thank you so much uh and if if it is okay it might that might go better because uh we're kind of walking through GitHub issues it might uh go better if I can uh if I if I can uh just share my screen so that I can you know so that I can click all the links and get to the right places quickly uh if that's okay with you all but you got some time to think about it before you decide thank you uh I I think it should be fine um thank you thank you so much okay um Ted you want to kick things off and uh see if we can get a note takers we're up to 21 people which is maybe fewer than I'd hope but okay um so welcome everybody to the interim working group meeting for the mock working group this session is being recorded it's uh will eventually turn up on uh YouTube but it's being recorded by"
  },
  {
    "startTime": "00:04:02",
    "text": "the media Co system even as we speak uh here is the note well if you are not familiar with the ITF then it will give you the pointers you need uh to understand the consequences of participation uh both for your IPR responsibilities primarily about disclosure and the personal code of conduct that we kind of expect how people should behave uh so if you're not familiar with these please take a look at them um and that is hopefully most people here are already familiar with them uh this is the agenda we are in the administrivia portion of it and the next bits are going to go through uh the new candidates for uh working group drafts the transport overview presentation will be Cullen uh then Victor will do a deep dive on the namespaces names and uniqueness uh we'll we'll talk about a draft that shows you how to use media over uh this set of transports and then Luke will go through example flows what it just looks like distribution like conferencing uh then there's a big whack of time for discussion uh about well almost an hour uh then your chairs will return with a discussion of adoption and then James and Spencer will go through the requirements draft uh the final bit is next steps where we start talking about planning for itf117 in particular questions about whether people need agenda time uh whether there are specific side meetings people want to start talking about or if there anybody has hackathon plans um Ella did I miss anything off the agenda uh I think that's uh everything on the agenda I guess we should uh offer a chance for folks to bash it yep I was giving you the first chance but then now"
  },
  {
    "startTime": "00:06:00",
    "text": "in general is there it's I wrote it I don't think I need to bash it uh any any concerns or questions about this agenda uh hearing on the next bit of administrative Is We I still have not seen anybody volunteer to be a note taker uh so if there's anybody who's uh here who can just record what our uh decisions are uh that's uh that would be very handy again we we do have the recordings we don't need a you know Martin said this Luke replied that um Mo responded with something else uh this is just a high level uh the group Matt discussed this level of notes uh if anybody can take that we'd appreciate it if not it will be a long silence uh Spencer you you have your mic on unmuted was that hopefully because you were going to volunteer or no sort of um I am in the headstock and I am uh I at least copied the agenda into it uh but uh I am I have I will not be doing well if I am the only Note Taker so I would suggest that at least a couple of people join in there with me uh so that I don't zone out and uh if the chairs could say and you know and so what the nose needs to say is that will be very helpful for me I would love to not do this alone uh so we would love for you not to do it alone is there somebody who can volunteer to help uh Spencer out and the the chairs will will do their best to say for the note takers this is the decision to record"
  },
  {
    "startTime": "00:08:00",
    "text": "that would be fabulous Jonathan can I pick on you uh Hung She also volunteered thank you oh I didn't see Hunter thank you very much and and Jonathan yeah thank you both and please put your name at the top of the Hedgehog so that uh you get appropriate credit uh sounds yeah and if you're coming to San Francisco I'll find you with chocolate all right uh I always like bribery um in the form of chocolate he said clarifying for the record uh to to the note takers the chairs are in favor of chocolate is what you should write down uh and and with that uh first comment to the Nokia takers I think we're now out of administrivia and uh over to uh transport overview and that's Cohen ask one of you to share slides if that's okay also Spencer your mic is still on uh and it's gonna be it may be like that the whole day that's kind of like I'm saying I uh appreciate help on taking notes so um I'm going to be talking about just sort of the the high level picture of the mock transport which is uh you know sort of a key draft sort of ties things together here and it's a little bit weird for me to be talking about this I'm not one of the authors that this represents I have helped do some of the work on it um but this you know really comes out of a combination of a bunch of things but mostly out of Luke's uh warp draft um and and that splits some stuff apart so um over the past you know since the last"
  },
  {
    "startTime": "00:10:00",
    "text": "ITF meeting there's been a ton of energy by a bunch of people to try and split these apart get some modular models really get this narrowed down to the part that everybody agrees on and get this to a a state that we we think is adoptable um so I'm going to be explaining this and then at the very end talking a little bit more about why I think this is a pretty good job pretty good shape to be adopted by the working group so next slide please ah there it came up so um just going to hit on reminding people that we have a lot of different goals for all of this work and you know combining together um lower latency better scalability uh unified protocol for ingest and distribution and these aren't all the goals for the working group but these are the goals that really hit this this particular piece in the layer and where I'm going to talk about it and a lot of these things are why we ended up with some of these things designed the way they are in this draft is to sort of simultaneously meet the needs of all the different sort of groups that are coming together to try and bring these things in the same time so with that jumping on to the next slide here foreign you're going to see various versions of this slide today through you know from from Luke from Will from other people um mostly better than my version of it but I want to just sort of put where the mock transport fits in this space Okay so we've taken some of the original drafts that covered a whole solution of how to deal with all of you know deciding what the media is and how the media gets organized and the how you say what media you want to do and move it around we split that up so what the mock transport draft does at this point is it allows you to sort of say I'm going to talk about what a track is later but you know I want to receive this track or I want to send this track or I have this many tracks it doesn't talk about what's in the tracks what the tracks mean all of those things that happens at the streaming formats layer where you might be using cmaf related stuff and some various things or other ways of doing it to say the details of this but this is about how you move the bits of the track and say what you want now it sits"
  },
  {
    "startTime": "00:12:02",
    "text": "directly on top of web transport or raw quick um and you know that's the thing that's actually more like a transport it's giving you the congestion control the security of those things even though we call this mock transport and really none of those are transports UDP is the transport it's all sitting on top of but when we say mock transport here we mean something that's sitting on top of the web transport and quick and it's exposing to the layers above it a way to sort of name and ask for media and get and receive media both for all the very variety of use cases so next slide um I'm going to jump in a bit of terminology here uh so I'm going to take this simple ingest case on the left hand side you know you got somebody some device with a camera and yeah it's sending media off to somebody off to some server in the cloud now we use the words client and server a bunch and client and server we mean in very much the you know quick meaning of these words okay it's it's like the TLs and quick meaning of them the the client is the thing that initiates the connection to the server okay that's that's all we mean by client and server um and you know for the ingest case we've got that going up that way the distribution case too it's still the client that connects to some you know media provider server that's going to give us up so the other terms we use are producer and consumer so producers producing media consumers consuming media the media flows in that general direction okay and uh there's more complicated cases but in the simplest cases that's what we've got right here so next slide so to bring in a little bit more of a slightly more complicated case we also have these things called relays and you can think of this as content distribution Network um and it's you know in this case the the producer is a client it's connecting to a server which is the relay that that relay may use the mock transport to connect to other relays or it may use"
  },
  {
    "startTime": "00:14:00",
    "text": "its own completely internal protocol that we know nothing about that's not what we're specifying we're specifying between the you know the the devices out on the edge how they connect up to this set of relays so the sort of producer to the relay um on the other side there are some devices with screens that are also connecting to the same relay other relays whatever okay so server uh you know the server um client the client server terminology here is the same um and also the producer consumer is like the screens over here consuming media the producer with the cameras producing the media uh next slide now the this doesn't stop obviously in like the video conferencing case you're both a producer of media and a consumer of media and that's fine you're just you're producing different tracks and you're consuming different tracks it's all fine and there could also be other elements in the system that were also producers and consumers like I wrote a transcoder on this one as it's not like the protocol describes a transcoder or anything the protocol describes how a producer and consumer can send media to each other so that the transcoder is getting media from a lot of the producers and then producing some own media itself that that other consumers do that's all fine that's like that's an application that happens outside of this and we support that type of use case fine but we don't need to talk about it deeply other than the producers and consumers so next slide so I need to talk about the model of what we're moving around and there's I want to not confuse this with it the streaming media layer layer you know later Will's going to be talking about you know how there's a ranging of catalog and cmaf and fragments and sort of Direct Media objects at the transport layer we that this mock transport layer we don't really know about those things what we know about are tracks tracks would probably contain and carry in in some form or another media uh it could be video it could be audio it might be text media it could be something totally not I mean like this this protocol you could probably you know I don't know maybe you could use it to you know distribute um haptics information for for something"
  },
  {
    "startTime": "00:16:00",
    "text": "else or text information it's not we're really talking about how to organize the data into a model and move it around we don't care deeply what the data is at this level okay so the tracks are organized into groups and the so a track contains a bunch of groups and inside of each group is a bunch of objects and the objects have the actual data um now how video gets mapped into these exact and stuff that's discussed at the higher level the streaming with the application will is going to talk about but we have a couple key points that this level of the protocol does need to know about um the groups form join points so basically when you want to start receiving a track you can you can start getting the latest group and all the information in that group of it so the groups are information that you might need earlier information in the group to be able to decode it we try and make the groups be um that they only that each group is all the data all the objects in a group are D you can decode them and understand what they mean you can feed them through a video Codec and decode and get something out of them using only the informations that's in that group they don't depend on objects in different groups now there's some caveats to that we get scalable codecs that may not be exactly true you can talk about whether lip sync violates that but for the most part we sort of think of these things as being an independent coding of information so for example we might have our HD video in one track and uh you know so low definition video and another track and a you know client-side uh receiver bandwidth control my baseline's band with select switch track it wants to receive the important thing from the mock transport is you can ask for these tracks you can get the information uh in them and that the relays can help distribute it the consumers and producers know what what data to send and how to send around that's what this protocol is about so on next slide so we do name these tracks and the the"
  },
  {
    "startTime": "00:18:03",
    "text": "full track name is is has two parts of it okay it has a track name space it's sort of you know consider that the hierarchy bits and then inside of that a track name and these are just a bunch of binary bits as far as this protocol works right maybe they're part fragments of a URL who knows maybe there's something else maybe whatever it doesn't really matter from this protocol's point of view all it ever does is match these okay combine those two combined together that the term we use for those two combined together is the full track name um now the full track name in many cases be long and we don't want to send that in all of our objects or something so we often have a short integer that in the way the protocol sets up you you know what the value is for a given name that is um is just a short Alias for the full track name so this is called the track ID and it's just a short Alias for for the full track name and we use that it's it's only exists to just make some of the messages smaller so you don't have to send the full track name all the time okay um we also have a group Sequence so this is an integer that identifies which group it is inside of the track and then inside of of that we have uh remember we have the objects inside of a group we have an object sequence which is an integer that identifies which object it is inside of the group and one thing that's important about that one is um it starts at zero in each group right so you can tell where the beginning of the group is just looking at these these integers so um those are really sort of the important terminologies names and pieces of this and from that the protocol is pretty simple so next slide um the objects that we're going to send all this media around in and what level that's known about here when we send each one of the objects and there's some other there's some messages that go back and forth to set up sending objects say what you want I'm going to get to those messages in a second but I just want to talk about what's in an actual object that we're going to send over the wire"
  },
  {
    "startTime": "00:20:00",
    "text": "um the relevant information that's really in it here is you got the track ID so you basically can look that up to find you know the full track name of it you've got the group Sequence that knows it identifies which it is you've got the object sequence and then you have some some extra metadata that might um that the the relays and the components along the path need to be able to see about this so right now there's only one piece of that which is what we call send order or priority and uh I'll talk more about that later but this is just some bits that help provide information to relays to sort of know you know which packet to send next what the priority is however you want to think about it but gives it extra meta information to know which packet to send first when they have multiple packets that all need to go somewhere um then we have the payload this would be where the actual media goes into it um it is opaque to the relays um the mock transport doesn't know anything about it doesn't look in it it's it's just like that's moving the bits that have meaning at a higher level uh there's been discussion of other pieces of metadata that can be added in here like time to live or things like that but the only thing that's in draft right now is just this this send order um that that gives the information okay next slide so here I'm going to get into the actual call Flow so first of all I'm going to talk on the distribution side so this is a client uh that um uh it you know as a consumer and wants to receive some video and it's going to go talk to some uh server to get that video so first of all it sets up a web transport or a quick connection and uh that that sets up like you would think it was um oh sorry there is some information that needs to know ahead of time before we've been you know get to this how to ban this like what is connection URL is that it's going to connect to and uh you know a track name that it might be interested in or not and that's sort of an"
  },
  {
    "startTime": "00:22:00",
    "text": "application Level thing but it might have some information like that so uh it sets up the web transport connection uh then it sends a setup message and right now this setup message just has version negotiation and role in it where the role is basically whether it's going to send video whether it's a consumer a producer or both okay um the server respond you know the server you know can respond to this I don't have all the I'm missing some of the okay messages in here but you know sends an okay message on this um the uh server then can announce this is an optional it can announce uh track name spaces that it's willing to publish um that might be useful in some use cases it might not be in other cases the client at this point sends a subscribe with the full track name of what it wants to receive and remember it may have just gotten a track name space from the server to understand what the server is even willing to send it or it may not have but that doesn't really matter too much the key thing here is it does a subscribe and passes the full track name The Scribe you can come back with an error obviously but if it doesn't come back with an error there could be some authorization information if the Subscribe comes back with an okay it uh includes a track ID and expiry time for that subscription now at that point and that's how the form and the mapping forms here on between the uh through the full track name and the track ID at that point the server can just start sending it mini media objects so those are going to start flowing across okay um and that is pretty much the whole protocol like that's it that's it it's a fairly uh you know fairly simple sort of approach to this um and I like the way that this splits it between what happens at a higher level where we're going to be dealing with the catalogs and understanding what tracks you want and which to get and what happens here which is just pretty straightforward so let me go to the next slide foreign the contribution flow so somebody the camera that's trying to send some video up to the server is nearly exactly the same right web transport setup role"
  },
  {
    "startTime": "00:24:00",
    "text": "negotiation there again um you have this optional announce I'll talk a little bit more in a minute about why that's there um and then the server this time subscribes to a full track name and the uh subscriber sends the track ID and starts sending it and then the producer here can start sending these these many objects of data uh up to the server um so it's it's identical flow on both this ingest and distribution use cases uh next slide uh so I want backup just one slide for a second um when we're dealing with the case with relays these flows don't send at all I mean right here I wrote on server it's just a server from it it does know as a relay it doesn't know whether it's like the the only server in the world that the client that connected to it doesn't even really care exactly what it's talking to Okay because the the protocol is about the same for it either way and uh that you know that's that that's you know one of the things that we've tried to keep it through this draft is that what changes because you're talking to a relay is extremely minimal on the draft there's not much changes because that's it's basically the same uh same text uh throughout for both for anybody who's you know if you're sending media you do this it doesn't matter whether you're a relay or a producer or what you are uh and likewise okay so I missed that one I was talking about next slide so one of the the open issues and I'm sure the working group will discuss this for a bunch but one of the you know the key things for this is sort of figure out what you send next okay and there's a bunch of things that we agree on which is um effectively the code needs to be able to figure out which code what what you send next given the congestion limits of the the quick connection you're about to send it on and you've got a bunch of things queued up that need to go and how you pick which one to send next okay um we know that we want more or less the same algorithm for relays and endpoints we know that that algorithm needs to be"
  },
  {
    "startTime": "00:26:00",
    "text": "based on you know looking at the information that's available there you know things like the group ID the object ID the send order or a priority the the information that's available to the algorithms doing this um so there's two algorithms that are defined in the draft right now and neither one of the these are just like these are potential options as starting points for the working group to choose one this is not a we think the working group should have both of these or anything like that it's just like there's not consensus on this we don't know why it would do so we wrote down two things that start to give a flavor and I'm sure that the work will want to do something as a working group is a little bit different than either of these but at least get something concrete that can give you a feeling of the type of thing we mean here by this in in a strong way so the send order one is on the left here um the the producer like look it knows what tracks it's dealing with it knows how they're important of them it is it knows which ones are audio video how the relative importance of them is so it can um include a send order integer and the idea is that these integers would generally you know sort of increment with uh with each frame uh or or section of audio type idea and you could make them uh slightly more important for audio to give it an advantage over video or give some video advantages over other types of videos So within a track name space the largest send order is sent first and this is just an integer space that the producer controls and puts in what numbers it wants to put in here to cause the right thing to happen from its point of view given everybody else along the path is going to execute this rule of within a track namespace the largest send orders first and it's Envision these numbers just keep growing like they're variable ants they get very large they can just keep growing forever for the length of the whole session they can get larger and larger um so the one on the right that I want to talk about here a little bit is the priority order um this one's a little bit different in in uh it still has an integer that we"
  },
  {
    "startTime": "00:28:02",
    "text": "write into the packet that people look at to decide what to do um but each object is is given a priority order and these aren't envisioned as just they they keep incrementing and getting larger over time it's just like okay we'd probably be giving our audio like one priority level and other things you know a different priority level it might be that iframes got a different priority level in pre-frames inside of a group those types of ideas So within a group um the lower priority number so priority ones most important lower priority are sent first um within a group of priorities are equal then the lower object sequence is sent first So within a group you're sending your first stuff sooner than your later stuff and that between groups later groups are normally sent ahead of other earlier groups and you know all of these have some problems um we're trying to generate some uh there's so awesome I'm trying to generate some data on you know how these various algorithms perform I'm sure we'll get more in it but the thing that I think that the the people um they've been working on this draft really agree strongly on is we need something along these types of lines and these are two sort of candidate type of algorithms with some tweaks uh any questions on this particular slide before I move on trying to watch the queue here but it's um okay so let me jump to one last slide here so uh what I really want to sort of uh get at from the from the point of you know coming out of the meeting today is this draft we put you know that's the flavor of it that's the big picture of how it fits together that's the picture of how other things split up on top of it um I'm definitely a fan of how how this has come out this way um you know I strongly think this this work uh this draft's ready for adoption um and you know it's obviously parts of it will change after it's adopted but I"
  },
  {
    "startTime": "00:30:01",
    "text": "think I think it's a good basis for understanding architecturally sort of how to pin this working group down and have something pinned to the ground you know some some of the corners of the tent pin to the ground in a way that we can really make some some rapid progress in the working group so if there's any questions or sort of meta concerns that people would like to raise that bring them you know of concerns about adopting it now I'd really like to try and address those right now as best I can or have any of the the co-authors or actual authors of this draft uh step in and speaking on but uh if anybody has some of you know sort of that level of concerns or architectural issues that would be really good to talk about Spencer you're in the queue okay and uh I can I can cut and paste what I'm saying into the notes just for the for the note takers uh Cullen uh thank you for this presentation I support uh adoption of this draft full stop I have uh a couple of comments about how this draft fits into the charter deliverables for the working group you're talking you're talking about both architecture or you're talking about architectural Concepts and you're using terminology and we really need to at least nail down the basics on both those real soon so I have two questions for the group uh we're talking about adopting this as uh the protocol deliverable protocol specification for common media publication protocol over quick that's in our Charter um can we adopt the draft as it is today and it possibly move that material into another draft later or perhaps uh the uh architecture specification for common"
  },
  {
    "startTime": "00:32:00",
    "text": "media delivery protocol over quick um so um that's that so that's what I'd like that's what I'd like to see happen and uh basically uh for us to you know we've talked about needing to focus on architecture and terminology but now that we're adopting drafts that are assuming in architecture and using terminology it would be great if the different drafts that we are adopting uh use something like the same architecture and use something like the same terms to describe it so like I said you know that that's that's for the working group and the chairs as much as it is for you Colin uh yeah but it makes sense Spencer and like look I should flag too this Dr the current draft that we just published zero zero on this right hasn't noticed at the top of the terminology section says there's no consensus on this yet um yes you can use the same words and have this nailed down in in a document but yes it would be it would be spectacular if we could remove that note before we send this to the RFC editor yeah yes so so that was one thing uh the other one was uh for the for the work for the people who have drafts in this working group can we have some specification that doesn't include mock transport in the title because it's like how many how many mock transport layers uh you know how many transport layers are we talking about to transport media and I mean I don't I don't want I I don't want to uh bike shed on this uh certainly not you know not in a beating like this but it would it would be great if uh if we could we could look at the"
  },
  {
    "startTime": "00:34:01",
    "text": "protocol stack that you presented and see if we can think of better ways to describe that that would be clearer for someone who's not a member of the working group but it might have to be implementing this later and that is that that is everything I was going to say and I will put my stuff in the in the notes uh thanks Spencer uh so for for the general question of adoption we do have that at the end of the the meeting and we probably want to talk about it in kind of a cluster way about yeah adopting this but I will point out that just as a general thing uh how many documents you you use to uh satisfy a um yeah a chartered item is kind of up to the working group so we don't have any issue there uh right on your bike on your bike question I love move very lovely color one of the original cartoil uh coal tar pigments very nice but we probably should put that off into the into a bit later yet um and I'm out and thank you um there's one thing that's not uh in the drafts as I've read them and maybe it's implicit but I think it's really important which is uh the how how how gaps are addressed for example um you know obviously in RTP we have our TCP where you get this feedback I'm assuming in mock we don't have the equivalent thing for scalability reasons but it's not explicitly stated and for example on ingest if I'm sending something if a frame doesn't get received is it up to the res sender to decide whether to resend it how does it know that the reason I'm asking this Colin is there's a pretty big differences between quick and web transport in that respect uh you know if you're running directly over quick there's a lot more information that the application can have about the transport and what got"
  },
  {
    "startTime": "00:36:01",
    "text": "received and what didn't versus in web transport right um Bernard I think that's this that's a whole kettle of fish for sure now um obviously if we're running on reliable streams mostly that question doesn't exist quite the way it's more of a rate control question of um what you subscribe to largely controls what's happening and they're and from an RTP point of view you do have reliable retrans you have our hop by hop RTX effectively right because that's what the quick the reliable quick streams um if we're not using quick in a reliable way at all um then uh I I think that that gets more complicated uh and I and the drafts have carefully avoided get you know really nailing that down one way or another at this point so I would definitely leave it you know Mark is an open issue but I think most of us envisioned it much like Ace is that the subscribes are the control mechanism when you when you ask for a track or an object or ask for a particular group over again that there are ways to re-request information and the relays may or may not cache information in a way that they could give it to you but that was definitely left as as fairly open and a bunch of possibilities there um but it was more seen as a hop by hop mechanism and most envisioning of it than a uh end-to-end mechanism because for a lot of the use cases obviously we can't have you know the equivalent of an fir frame coming all the way back to the producer yeah right so it's it's mostly the other direction of it um and the drafts are you're totally right the drafts are silent on the topic I think right now they're fairly open up they wouldn't pre collude any of the possible solutions to it well but but I think as you said it's it would be highly undesirable to have this feedback that goes back to the encoder so if you're not uh it would be useful to at least say that you're not going to do that"
  },
  {
    "startTime": "00:38:00",
    "text": "okay that's that's excellent feedback and I I suspect that most people would agree with that so yeah thank you Christian good morning uh I'd like to first to say that uh I've been participating in this production of this document and my priority for the last two weeks has been that we should get a version of that document and basically Avid adopted by the working group not because it's the best possible document but because it is good enough and because it is time to have more voices and more eyes on this document than just a subset of autos and for example I look at the questions that burnout is is giving us and and that's very good input and I would very much like that input to arrive from the working group and from Bernard and from other rather than having a continued discussion of the author in a closed group so that's one of my main motivation for saying hey we should adopt this sooner rather than later so that we can have an actual working group discussion instead of a restricted of author's discussion that's the first reason then uh yeah I mean there are issues I mean two expenses issue about the mock transport name you know RTP stands for real-time transport product that's it's well established that we use transport in a variety of things and contrary to what Karan said"
  },
  {
    "startTime": "00:40:01",
    "text": "UDP is not a transport protocol it's a pass-through it's never meant to be a transport protocol it's kind of idiotic to see that as a transport protocol UDP is a way to give IP visibility to the application that's it so and also I mean the point that two points that burnout were making um the point about the feedback we planted on that yes we planted at that because of scalability issues because I mean if you are sending a video to a million receivers I mean the fact that one of them doesn't receive it completely is kind of a fact of life it's gonna happen and that's it but that means pretty much open loop transmission and if we are using that in a small group say half a dozen receivers then it does make sense to get feedback from the individual receivers that's one of the tension that we have to resolve and we resolve it probably in the working group the same thing goes about this business of priorities I mean it's it's very only the handling of priorities and others is very unclear we have a Temptation that says it shall be entirely defined by the sender which does make sense in the sending to a million receiver scenario but does not make sense so much in small group scenarios suppose that for example we have sandals sending 10 video streams and a particular receiver is only interested in one of them I mean the fact that the receiver is interested for now in one of them and one the other one in the background just to be ready that has to be expressed somehow and that means the receiver shall be able to implement the"
  },
  {
    "startTime": "00:42:00",
    "text": "file to affect the priorities that are used so all that I said that well we have many points that will need to be resolved in the working group but please adopt it so we can actually resolve it in the working group and not infrared discussions I think we've emptied the total agree and I think we've emptied the queue and are probably going to get to the end of this I probably used up our time okay uh thanks Don oh go ahead go ahead sorry okay so I think next on the agenda it's um is Victor talking a little bit about um the how naming Works since it ended up being something that took a long time for the the author team to resolve you want me to share your slides Victor uh please do uh okay I see two copies I'm not sure which one is the most recent is it uh first or left well we'll find out I guess I I I'm not sure if you could say only if mailed one version so yeah hopefully are identical we'll find out okay uh can you see it are you good uh uh I think I can see it do I get to control it or uh I can set that or you can ask me to how do I uh there are six slices uh okay uh so uh as Colin has mentioned in the previous presentation uh Mark has a concept of a full track name"
  },
  {
    "startTime": "00:44:03",
    "text": "which is what you asked for when you subscribe to a track uh a track name is uh so a full track name has two parts tracking space and track name uh they're currently defined to be fully opaque blobs that are directly concatenated to full form a full track name uh there is uh uh no specific syntax beyond that that is all of course is subject to a bike shot or the so what is the difference between track name space and a track name uh currently it's we don't go much into it in the draft and it's mostly to the application but there are two notable features is that one we when you publish you only announce a track name space and not a track name but when you subscribe you subscribe to individual tracks uh the reason for that is we expect track namespace to basically belong to the same producer and whenever you publish something if you publish a video track and an audio track and uh you successfully publishing video track and then you failed to publish an audio track this leaves you in an awkward State and this decision to publish it to announce at the name Space level avoids at uh and the second is that in some priority related proposals track name spaces are like the boundaries which is a priorities are sent in particular send order uh so the important here are some examples"
  },
  {
    "startTime": "00:46:01",
    "text": "that are copied directly from the draft of how you can structure one of them is the first example is for a video conference the second example is video conference but like it's a press track name space and track name at a different level uh and the third one is an example of what you would do if you have a like a direct device you connect to directly the important property of a full track name that makes it uh different from what you would typically expect for instance with HTTP URLs is that uh in mock transport we Define uh full track name is like the full name of the track and there are no extra keys you can add so there the full tracks there if you want to Cache something the full track name is your cash key uh this is uh this means that like whenever you talk to a server and you ask for a track the track gives you that specific track and there is no content negotiations or no extra very headers Etc and that significantly simplifies uh implementing uh uh implementing uh caching uh so when I say unique the I said that the full track name is unique uh there's a caveat that well I'll talk about later but okay so the property of the track name is note that while those examples have domain names and they're meant to be unique those do not those are entirely logical they do not actually tell you where to connect uh the sixth"
  },
  {
    "startTime": "00:48:01",
    "text": "question of where you to connect is entirely orthogonal and it is is determined by uh a third saying called The Connect URL in the connect URL is just the web transport URL to you connect to or for real quick we have a special syntax of how you connect to a specific server or via real quick to speak mock transport uh and so if you are a client and you have no prior information of how to connect to something and if you want to fetch some specific track the three bits of information you need is a connect URL tracking space and track name but the letter to our orthogonal to the connect URL uh so I mentioned that the track names are unique uh there are some requirements of to how widely is that uniqueness is intended I don't want to say guaranteed but how much you have to widely you have to provide the naming Agnes uh specifically uh uh if you want to run a complex application which forwards media between multiple parties like for instance a video conference with a lot of participants uh you want all of the servers to provide you consistent track names and you want multiple servers so you can connect one CDN node or and make sure that like the traffic from that CDN now it would reach potentially the other CDN node because that's how uh because all you have is a track name which would theoretically tell you this is a video conference and this is the participant Etc like that that would be"
  },
  {
    "startTime": "00:50:00",
    "text": "in society track name but uh the connect URL which tells you which which CDN server you can connect uh so the draft introduces the notion of a scope a scope is uh a set of servers to which you can connect and receive the same tracks from the same name uh or you're not guaranteed to always receive them but if you will receive them they will do the same track uh so uh in very simple point-to-point cases the scope is just one connection uh in cases when you do uh things like video conferencing you need all of your notes to be within the same scope uh otherwise the video conference will not work uh I think that's roughly it uh any questions foreign there don't seem to be any questions um which slightly worries me given how much the authors discussed but on the other hand maybe I'm should be happy that uh it means that everybody is very satisfied with the solution okay uh thanks Victor uh oh um oh Lucas says he might want to see some examples um but I think those may be forthcoming um as Luke said so great so I think next up was Will to talk uh about um catalog and the new streaming format draft and do you want to control your slides or should can you share them but I can remote the"
  },
  {
    "startTime": "00:52:00",
    "text": "control because I have a bunch of clicks and yeah let me see transport if not I'll just say screaming format okay you have three copies of the slides so hopefully this is the one that you want looks good and Pest Control okay I'll see if I can actually move forward so uh good morning thank you so Cullen set the stage for our our base mock transport and Victor's told us how we can name uh tracks within it but we haven't yet moved media so this section is about a streaming format and how we can map media to our transport uh protocol so unfortunately the animation didn't build here uh for the slide sharing but at the very bottom we have raw quick and rev transport layered over that is our media over quick transport uh and then on top of it we have a number of these streaming formats and as as we discussed at the last face-to-face we may want more than one because we can either make one that's so complex it meets all use cases but then we carry this burden in the overhead uh for our very simple use cases and on the other hand we don't want it highly fragmented so we need to strike a reasonable balance we want as few as possible of these streaming formats that meet our use cases while dividing them into groups that allow us to be simple precise and efficient within a given set of use cases and what I'm presenting here is the very first one of these and we've named it warp streaming format and it's its name comes from Luke Curley it's it's about 70 on what I'm presenting here comes directly from Luke's initial contribution so my thank him for that so at a very high level it's designed to deliver cmaf packaged content and provide good interrupt with existing encoders Packaging Systems and player"
  },
  {
    "startTime": "00:54:01",
    "text": "decoders so cmap is widely deployed within the Adaptive streaming World it makes a lot of sense to leverage the ecosystem we already have for that distribution be able to play it immediately uh for a mock transport streaming format there's a focus on live and near live streaming that's a consensus view it can also be used for VOD and I'm personally interested in that but that's a point we have to debate here it works at a high level by fragmenting a bit stream into objects so mock transport provides the objects what warp streaming format tells you is how do I take my media and compartmentalize it into those objects and it uses for congestion response a notion of prioritization and send order these are the it it can only twiddle the norms and levers that mock transport provides and since mock transport has not settled on the log knobs and levers yet this is not defined for warp streaming form and other than we intend to use that to address congestion at relays or at any node that is retransmitting data so for packaging you need to encode each bit stream and that's a media bit stream now into a sequence of objects a contiguous sequence of objects these media tracks should be time aligned so if you're familiar with cmap switching sets they meet this requirement the idea is that a receiver should be able to cleanly switch media tracks at the group boundaries so I have a diagram below we see three tracks our traditional multi-bitrate stack the dark color in each block indicates an IDR or the start of the GOP the idea is that just like in adaptive streaming if either the client or server which wish to switch in the transmission it can do so cleanly at the start of any group and this Maps very directly to cmap"
  },
  {
    "startTime": "00:56:00",
    "text": "switching sets so what media objects can you place to meet this requirement so there's flexibility here at the top level we've the group is holding a cmap fragment and there's only one object in each group and it's holding the whole fragment as well and this isn't entirely feasible and can work very nicely in fact and if you have content that's hls Dash package this will map directly using this format where each each segment is in fact an object and there's one object per group the second level down the group is still holding a fragment which is an independently addressable cmf object but now we have chunks and these chunks can be a number of frames the the frame count doesn't matter but there are not every trunk is an addressable point so the first chunk at the start of every fragment is independently decodable the subsequent chunks are not but now we have multiple objects per group and then the next level down or the ultimate level down on on the video video side would be one frame per object so now we might have 30 uh cmf fragment that's one second long and we'll have 30 objects per second in that group the first object holding the keyframe and the rest being P's and B's and clearly frame per object is probably better for real-time delivery but the spec is not going to dictate you must use one or the other any one of these requirements meets the constraint of using cmath content and making the group start Point independently accessible so now we introduce the notion of a catalog so a catalog is like a menu or a description of what's available from a given publisher and it is itself a track"
  },
  {
    "startTime": "00:58:00",
    "text": "so it's a special track that when it's published describes the other tracks and the catalog's job is to both describe the the track content what's available as well as give the the consumer information that it might need to use to select between various tracks so it might give you the resolution the codec the bitrate things you need to know to make a choice it's also going to provide information you need to initialize the decode in other words to begin decoding the content on the on the receiver side catalog objects can represent Deltas from other prior objects so if we have a complex a complex offering coming out of of a producer might be producing 10 different streams and one of them changes we don't want to replicate all of that information again so we can simply issue the change as a change from a prior state so just like tracks have the notion of groups we can break our catalog into groups as well so we can have Delta updates within a group that apply to previous or only make sense when combined with previously previous objects within that group but every group emission of a catalog should be independent and not rely on on prior catalog updates so on the right hand side is the syntax denoting the the catalog payload it's a binary one at the highest level I was going to build these in the animation but it dictates the format type so the idea here is that the catalog as a track it's simply a set of objects but the catalog um as its very first varend must be unencrypted and it must hold an Ayana registered type so for warp reclaiming type 1 so the first variant you see in the payload would be one and that tells the receiving client that the rest of the catalog can be interpreted as being a warp streaming catalog because they can be meta many"
  },
  {
    "startTime": "01:00:01",
    "text": "catalogs you might receive so and since you can always be guaranteed that the the first Varin defines the type and it's registered you know how to parse the rest of the object there's a version because we might want to change this over time there's the parent object sequence This Is How We Do Delta updates you simply refer to the object sequence number on which this particular object depends then there's you can have a number of uh track changes and each one of them carries a descriptor for the descriptor which is a section in green you specify the full track name you need its length and then the track name bits and then there's a single bit flag for the operation and there's two operations currently defined either add or delete which are one or a zero if you're adding a track in in this catalog you supply the initialization header and cmap has the the init header in cmap has the very convenient dual property that it both helps you initialize your decoder and if you parse it it provides the selection information that you need in order to potentially select that track for consumption if you want to delete if a track is being deleted by the publisher then the deletion header simply publishes the last group and the last object that were emitted by the publisher and that tells us a receiver if it in fact received the entirety of that track or if some still stuck in transmission trying to click oh let's go this way so the workflow again at a very simple level a war publisher must make available a catalog track after announce and before or concurrently with any media track objects so you mustn't be firing off tracks that you haven't described in your catalog and your publisher only pushes content in response to a validated subscribe request this is core mock transport"
  },
  {
    "startTime": "01:02:01",
    "text": "Behavior so we're just inheriting that and then at the completion of a session the publisher publishes a catalog that removes all the prior tracks that had previously published and this should be interpreted by receivers to say the publish session is complete I think we need very precise ways to say when sessions have started and stopped and this is one proposed solution now there's a proposal uh for how we can join together the connect URI and the notion of the catalog track name this is just a proposal and you see there for an example we have a a single URI which is a mange of the connect URL and the path so the client would make in this case a web transport connection to that entire string the server when it's receiving it would use some fraction of this to validate it might hold a token or it might need to to know which customer or account this is being used with and then the remaining fraction it would automatically know is the full track name for a catalog and that way the server can after the setup is done it can automatically subscribe the client to that catalog and send the catalog content so we can remove a round trip of the client needing to subscribe to the catalog we're not actually removing it because the client could make a parallel subscribe request however there is a certain convenience in being able to use the connect URL along with the catalog um full track name this is just a proposal there's obviously merits for and against this another proposal for client initiated server side ABR so the proposal"
  },
  {
    "startTime": "01:04:01",
    "text": "currently does not address at all how you might a client or a server might want to switch between these tracks as a response to congestion so we have the inter-track prioritization that we've discussed however I might want to switch from my 1080 to my 720 to my 360p content how would I do that so one idea here is that in my subscribe message I append an optional object that says this subscription is part of a group group one and I set a throughput level now we don't want too many variables but we throughput is one thing perhaps we can standardize around so clearly I set the throughput level here and the as soon as this this ABR object has sent on the Subscribe the servers task is to make forward subscriptions to all of this content cache all of this content as it's received but then only forward through the track which is matching the throughput estimate at the time and it has to make the switches on the group boundaries as we've previously discussed so there's reasons why this can work reasons why this cannot work again this is just a proposal for how the client might ask the server uh to send it the most appropriate uh track at any time the client could obviously make this subscription decision itself and switch but there's an idea that we might want to have this on the server thank you there's a lot of things still to solve with this and I'll you can read them but I'll quickly go through them uh prioritization strategy this is somewhat very well not somewhat it's very dependent on what mocked offers but even once mocked off is it how should warp streaming format use that we need to find an ABR strategy maybe it's client-side maybe it's server side and if it's that server-side one I just showed that has to be part of core mocked as well because it's a core requirement that every relay is going to need to offer up should track names be strings all the"
  },
  {
    "startTime": "01:06:02",
    "text": "examples we've shown they are strings although as Cullen mentioned they're just binary blobs so maybe for warp streaming format we want to constrain them to Be Strings because they're so much easier for us to work with and if so we need to specify the the wire the wire protocol for those this is a big one number four can catalogs hold content from different track name spaces so as soon as we allow this there's additional complexity but there is there's use case reasons where this might make sense so we need to explore catalogs not literally being a directory if your catalog if your stream names if your catalog simply held the track name and it could infer the track namespace from the catalog path just like we do with hls or Dash then they would all be relative to that and I could move them around we know that works at scale that might be something we want to look at yeah but that would prohibit using different track name spaces number five should common group numbers hold media time sync data that's somewhat implicit in what I just described when you could switch between groups but if I switch from group 5 and track a to group 5 and track B is there a hard requirement that the media time is identical between those two with cmat switching sets it would be but we need to state that explicitly number six do we need a reserve name for catalog tracks the reserve name is useful because a client without knowing anything else about the content can always ask for a catalog it's a reserved name and then it can get a bunch of of tracks however in that naming syntax I showed you it doesn't necessarily need to end with catalog it could have ended with alpha one two three it's simply a track that happens to describe other tracks so do we need the reserve name for it number seven content protection there's an open issue for this number eight uh I I believe we should try to standardize"
  },
  {
    "startTime": "01:08:01",
    "text": "content protection for this from day one to prevent the split we've had in adaptive media where we have multiple incompatible Cipher modes that are out there and therefore silos of content but which format to go for is open to debate issue 13 do we want to relax the cmap packaging requirement that's a big change to this protocol this protocol was designed to leverage cmap and its its industry uh ubiquity but there's good reasons for allowing other uh protocols non-non-cmaf compliant codecs for example to be used is raised number nine what about SVC support so we speak about ABR switching and there's many models here that are compatible with the Adaptive switching world but as we moved into into a layered distribution how do we describe the relationships between these these tracks do we want that do we want to increase what warp streaming format offers or do we want to make another streaming format that is dedicated to SVC based distribution and that's a big debate for the group and then last one I'll mention here number seven do we want to support multiple catalog types within a streaming format so there there is still a lot of dissension about this notion that a streaming format has one catalog associated with it and there are there are some people who have asked for I want multiple catalog types these are all debates to have and we can't answer them all right now but I'll stop here this is the end of the section happy to take questions and I haven't been looking at the the chat at all yeah okay uh James is first in the queue foreign will um just just to clarify uh back at the catalog section you you said that there's uh an identifier of him and you"
  },
  {
    "startTime": "01:10:02",
    "text": "put number one as first um the just this is a bit of a clarifier and I'm sure Cullen will want to chime in and correct me here but what we're saying is is that the the identity for for a client identifying what format whether it's warm or some other uh that's happening in the format itself and not part of mock transport and if that's the case does that not imply that all formats must start with this kind of structure at least to identify uh what it is and to figure out whether or not it can actually make sense of it or use it so yes the what I proposed was every you can invent whatever catalog format you like with one particular requirement the first the first variant must hold a number and that number must identify a registered type and that type tells you how to parse the rest of the catalog with that in place a client can receive any catalog and know how to parse it assuming it's compliant with parsing it recognizes the type or else I could say I don't recognize this type I can't pass this catalog is the client typically knows what format it's asking for when it's when it's given something when an hls client doesn't inspect the m3u8 and check to see if it's Dash formatted right it just expects it to be m308 and it throws an error if it can't pass it that also works so we could get rid of this consistent registration as long as we're willing to accept that each client must know the type of format it's asking for before it asks for it um so I guess the point that I'm trying to to put here not just to yourself but also to the working group is is is this what we want given or do we expect implementations to only Implement one or"
  },
  {
    "startTime": "01:12:01",
    "text": "one streaming format or such or how are we going to address negotiation of the formats and I I don't have any suggestions I just want to put that on the table and say because that will that the answer to that question will have a huge sphere on whether or not this is the right way to go or not yeah that's a great question I think during setup the publisher could say I'm publishing two formats at the same time or I'm only publishing one and as part of the setup the client could be told what formats are available uh the question will then be how do you ask the specific format how do I ask for the catalog of type 1 we haven't addressed that yet but that's a great idea okay Colin um you know will I was going to ask if you could just talk for a minute about the sort of more generic version of this so if somebody is writing a new streaming format what are the things they need to Define it and I'm trying to sort of you know scope this work from a sort of adopting point of view and that type of stuff like what's what's the key things that need to be defined in any one of these that writes in any streaming format you need again the idea was you would you would Define how to identify your catalog type so you would have you would write a catalog that at least the first variant was a number to be consistent with mock if if we go that way then you also need to find how you map your your objects to the core mocked messages in other words announce how how to subscribe and announce and publish mapped to workflow Behavior within your streaming format and how do you how does your media the binary media payload map to the objects that are being transmitted and then you need to define the workflow issues around how do you authenticate it how do you encrypt it consistently how do you signal the level of encryption uh what type of error messages do you expect that are particular to your application and not particular to mocked"
  },
  {
    "startTime": "01:14:02",
    "text": "um I would think these are the things any streaming format would need to provide that makes sense and maybe yep maybe there's some of them we need we need to bake a few requirements into mock transport itself which says if you've got to make a streaming format you must do a couple of things and then we list as few things as possible but by doing that we get interrupt right we get in we get interoperable streaming formats and that should be the ultimate goal suhas yeah thanks Phil uh for the presentation I think this this is this is a good start um given that uh more and I've been working on um how do we do uh like the the point that you made on having us other streaming formats that is more real-time friendly and going back to Collins question I think if we can I'm asking you in general would it help if it makes sense to have uh if anyone who wants to define a container or streaming format this is what you should do as a catalog format as a separate thing on its own and then we have the what us uh seeing how cmaps will be used and the other thing the lock which we are called overhead container levels they'll say how that will be used would that make harder split that way uh generate anyone who wants to have a streaming format or container format defined they they all Define the same way the catalogs the things in the catalogs should be defined too so yeah I'll give my personal view on this um I there's been an idea that should be right rfcs that describe all the various packaging formats so that when I want to create a streaming format I pick an off-the-shelf packaging format and I pick a addressing syntax and I take those and off I go um we can certainly do that my opinion"
  },
  {
    "startTime": "01:16:00",
    "text": "is that the the packaging is part and parcel of the streaming format and I'm not convinced there's enough there's enough repetition or or repeat use of of a precise packaging format that it warrants breaking it out into a separate spec we already have cmath it's an established body of work we can just ref anyone who wants to use cmap can make a little reference and and incorporate it in their document do I need another RFC saying I'm incorporating cmath um in in cmaps case I don't think so for maybe more advanced formats that are particular or unique to mock transport that we developed that might warrant a separate content I'm not opposed to it at all and I think this is a core discussion we should have should should these streaming formats become basically an assembly of other rfcs that Define naming and packaging uh and they're basically just telling which of these are going to work together it's definitely something to consider okay um okay Martin hi uh thanks for this I'm uh I just want to understand the positioning of this so um the idea here is that I mean this presumably this would be an internet draft and it would propose one possible streaming for an example of a streaming form that could exist on top of it mock transport but any streaming format would have to have this common varrant at the beginning to Define the streaming format and use but then of course other other documents could follow this template is that that's not that here there can be a multiplicity like if I was writing a VR or ar format I think it would look quite there would be enough differences that I wouldn't want to try to expand this to support equirectangular distribution of talent-based media I think there's that to I would make a separate one for that um"
  },
  {
    "startTime": "01:18:00",
    "text": "like a straightforward and the correct like separation of functions in in what the work we're doing here is that's good it just is a minor knit I wonder if that that catalog Baron should go into the transport um just because well misconceptions make sense to me that the transport you have that thing says here's the point that tells you what what extreme requirement Implement so that's that's kind of a net thanks it might except I could conceivably have objects that were part of two streaming formats for some reason and then would I carry both both bits in it but yeah we could add a header to every object saying what streaming format it's part of that would be fine we could also get rid of that warrant we could just invent unique names for the catalog and that would let me call call a particular type of format that I might want uh from a client when multiple are available on the publisher these are all to be debated I guess my point is I think there should be some sort of pointer in the mock transport that tells you what streaming format is rather than having me Define industry format document this is basically just a document clip also okay Victor I have two comments or one is about how to redefine of how we Define identify which format and I I feel like there are multiple strategies but the deciding thing will be not like it's not just appear by we have to figure out how if a client supports multiple formats and it doesn't know what it can request or by contrast if the server can offer multiple formats uh what happens then and I I believe status like The Guiding problem for What specifically we"
  },
  {
    "startTime": "01:20:00",
    "text": "should end up picking and since I said like it's an interaction that would probably have to go into transport the second thing is about whether warp should be tied to cmf I don't think it should be and in fact the at least draft 04 version the previous version did not have that limitation specifically the observation here is that in order to define a stream like immediate container thing that's layered onto mock you usually need only two things you need things that goes in the catalog and that tells you how to decade and then you need to things that goes into the objects themselves uh and I believe the original draft like calls them the init objects format it's a object format but uh the observation here is that that is a problem that is mostly orthogonal to saying questions of how do we add tracks how do we remove tracks how do we change the catalog and how do we tell like the ABR properties uh yep I agree with you on on both points I I'd be open to expanding this to include non-cmf based Packaging I think that's reasonable we don't it doesn't only have to be cmaf and this as you point out there's not that assuming my packaging is reasonably consistent and I maintain the notion that I can switch it group boundaries um then why not have alternate packaging schemes and or codecs that are non-cmaf compliant be included I think that's very reasonable to to clarify there are the two roles of like the header is like we currently the reason we're like well"
  },
  {
    "startTime": "01:22:02",
    "text": "the draft is like so focused and cmf is that you can reuse a lot of things that cmf deaf in terms of things like how do I identify which track is audio and what like the audio this the track disposition if you're doing more than two channels which is something that's like whether you roll your own container you have to answer a lot of questions like that uh but that doesn't mean we have to use cmf always for that which that just means we have to specify the properties that you require from your streaming format like your streaming format has to tell you like provide you some language selection is if that's like one of the features you're rely on yep go ahead MO yes I like um how this uh ended up uh I greatly like the the approach of having the catalog itself uh as tracks um so I think uh this is going in the right direction um I I do Wonder though whether or not uh people have digested the the differences between only describing the catalog formats versus describing the actual media formats so we're kind of implicitly saying if the RTP analogy would be we're defining RTP payload types but not for any of the media we're defining RT Taylor types for the catalog itself and then the catalog spec would tell you what the underlying media types actually are and there's a little bit of um there's still a little bit of open issue there to me because those specs uh um it's not clear whether there would also be forward-facing like if if somebody created av2 bindings for cmath does that mean because you support the cmf streaming format you support av2 uh so the the those kinds of issues about"
  },
  {
    "startTime": "01:24:02",
    "text": "maybe the version or something like that maybe the version of each uh streaming format spec can be upgraded but does that mean we have to constantly rev all of those as as new codecs come on board those kinds of questions are still kind of fuzzy to me but I think this is generally going in the right direction we need to get to those details next yeah I agree on both point on on the versioning side yes you put I put a version flag in there because as cmath evolves or as anything evolves different versions of this draft of this RFC would support different codec combinations we don't want to imply an automatic adoption with future ones so we do need constrain it either through profiles or through versioning it's how it's typically done and on your first point the to be clear there isn't a separate catalog RFC right this the idea and maybe it can be challenged is that there's a a streaming format RFC one of the things is described as how the catalog is written and what its components are and then it also describes the packaging and the interrelationship that's all bundled up within one RFC right I didn't mean the RFC I meant like a Martin's Point about where is this going to be registered these variants for for identification are we only identifying the streaming format RFC as as the as the thing so that means only certain tracks were specifically only the only the uh catalog tracks would have identifying information and the actual media tracks you wouldn't really know how to identify those unless you first looked at the identifier for the for the catalog track so are we only going to register streaming formats are we also going to register the actual media formats I I think we're going to need to register the catalogs because that's the only that's that's where you want to stop People Bridge idea putting the same I ID bit in in the same place and meaning two different things so we need registration in terms of the media I don't believe we need we need to register that um it doesn't matter it's once once I"
  },
  {
    "startTime": "01:26:01",
    "text": "know my format I'm just transmitting AV content I don't need Flags to tell me that this is cmf I know it's cmf because I asked for it based on a catalog that told me it's packaging it's codec it's resolution everything I need to know about it I don't think we need to repeat that in every object I I tend to agree it just kind of breaks the symmetry of all these things are just tracks and if you can identify the catalog tracks you know deterministically and have a pointer to an RFC for them but you can't do that for the actual media tracks it seems a little uh odd but I'm willing to live with that okay and I'm willing to talk about it so thanks oh Ted looked like you jumped in and then jumped out of the queue yeah it was covered oh okay great um okay I think that was a good discussion thank you will for bringing this draft and presenting it um should we move on to some to Luke's presentation sounds good okay oops uh where to go why can't I share preloaded slides there we go uh yours is called mock flows is that right this is called mock flows it was like it was 2 A.M I couldn't come up with a cool title or a cool title slide so this is the best you got all right uh and I passed control off to you okay cool Hello everybody wake up um I'm tired I I made a mistake of drawing these slides again but hopefully it's fun um so I want to go over how media and data in general is not media specific I think that's the thing with mock transport is um yeah there's media in the name mock"
  },
  {
    "startTime": "01:28:00",
    "text": "transfer but this could be any data it could be chat messages it could be a catalog it could be Media or whatever um I just kind of wanted to cover what actually happens what's an end-to-end flow when somebody's producing media to going through relays to consuming it so in an example we have a producer's OBS um they want to publish some media and we have a consumer VLC uh and they want to consume that media these are two separate entities it could be other side of the world um and they're they're both configured with some upfront information based on the service uh right now it's the connect URL basically where you connect to to establish the connection uh tracking namespace what what do you publish versus what do you request and then off that goes with that track name space um the auth could be part of the connect URL like you could encode it in there or you could have it as a separate field um I'd like to reduce these down to like maybe one or two pieces of information we give to everybody um so you don't have to sit there and fill out eight fields in the OBS if you want to go live um but this is how it is today um so here's an example um of what a symmetric situation looks like where both the producer and the consumer have the same configuration uh so a URL I just made one up webex.acama.com um this is what you actually connect to to establish the connection in this case it's web transport because it has the HTTP um uh prefix protocol a namespace uh I took one of the Google meeting codes and I that's my namespace so it's Unique within that connect URL uh and then I add the participant at the end just as a way of saying like I am John Cena or I'm publishing on behalf you know or consuming John Cena's feed and then an auth token that says if you have permission to publish or consume at that given namespace uh um so this is symmetric this is the case"
  },
  {
    "startTime": "01:30:00",
    "text": "for same uh same for the producer and the consumer uh super easy it works in some situations for sure but it's the easiest thing to talk about and kids sexually understand uh so what do we do with this information well the first thing is we've got to connect to that URL we were given um so the url's broken the three pieces this is just a standard URL stuff it's a protocol host path um we use the host name to establish the quick connection um the protocol decides if we use web transport or if we do Native quick uh basically if it's uh yeah we just do the web transport handshake if it's uh in there but in both cases we send we do a little mock setup which includes the path so we have all the information regardless of whatever protocol you use um so you can support both mechanisms um seamlessly I wanted to avoid a world where only web transport has the path uh we so we we put the path in the setup message if you're using native quick so we've established a connection to a host um here's here's the full I forgot about this slide here's the full diagram if you care about which packets are being sent uh we're adding the blue at the bottom lock which is just a little setup frame that the client sends first and then the server replies it's very similar to the web transport connect request and response uh it could be sent in parallel if you have a good implementation and that's that little asterisk there um anyway we got a connection the producer needs to tell the server like let's say a client is connecting like OBS is connecting some ingest server it has this mechanism to say by the way here's that namespace I was told to produce so it sends this extra message and says hey here's the namespace you told me to publish with and here's off and then the other side says yes or no uh for the it's in the announce okay or error I should have clarified as well"
  },
  {
    "startTime": "01:32:00",
    "text": "green is just my the producer the person trying to send the media and red is the uh consumer or the other end so this case producer says Hey I want to publish this namespace I want to announce it on the other side uh says um sure thing or not um we'll talk about the announce a little bit because it's it's not necessarily symmetrical but it will get there but that's really all you need for the producer to be ready um so OBS connected to a server it said hey I want to publish this track this WebEx track I'm John Cena nobody's requested it yet but it's it's technically valid it is it is a live stream um and yeah namespace is effectively tracked bundle uh Martin Duke it's just a different name and different conceptually because it's not tied to a web transport session anyway uh we have a subscriber Quest so the consumer finally decides they want to actually watch the media maybe it's the first viewer or maybe the transcoder started up or something uh and it will send a subscribe request um it chooses a a track ID although I'd like to probably rename that um it gives it six it's a way of a shorthand number to say from that if you send any objects the Mark 6 I know that it's part of the subscription um you send the namespace either the one that was you're configured to subscribe to or the one that you received from the announce uh that's kind of why I say it's not quite symmetrical um or symmetric um and then the name you subscribe you need this catalog the catalog as we've discussed describes other tracks well you need to know how to request it that's currently undefined it could be with like having a well-known name like catalog as the string or we could use some sort of track format some way of deciding that this is a catalog track so I should request it to learn about other tracks"
  },
  {
    "startTime": "01:34:01",
    "text": "um and of course you can send off if you want um so so yeah the VLC sent to subscribe it says give me the catalog and the other side says sure I'll start I'll start doing that um so the producer starts um uh pushing objects uh with the given request of track ID um so in this example they request a track id6 for some reason um we're gonna sure let's just use that this is just a little way of compressing so we don't send the full string as every object and then we start saying here's group 15 object zero group 15 object one um the Subscribe message has an optional hint of which group to start at um but if that's not provided right now it's it's kind of assumed I think it's I think it might be explicitly spelled out but it needs to be the latest group but uh it's implicit and we should probably figure that out anyway you just start sending object messages out to the subscribe so we talked about a little bit about the catalog track um I wanted to talk about a little bit more it's just attractive describes other tracks it's this is maybe where this is a little different than bundle in bundle I had this very clear like a catalog describes the entire bundle but now it's kind of vague or Cala can describe other name spaces we haven't figured it out this is a big TVD and it's not part of the draft right now this is not part of mock transport um relay doesn't know that catalogs exist this is Media encoding parameters and this is for the consumer only the catalog so OBS creates this it says here's you know what each track is contains and VLC reads this relay should not read this at all it should not parse this catalog track um it could be encrypted so um yeah we'll still do that uh here's just a quick example of what data it contains um so let's say we have three tracks we"
  },
  {
    "startTime": "01:36:00",
    "text": "have the name of each of these tracks we call HD SD and audio this is what actually gets sent uh with the Subscribe message so the consumer VLC will be like subscribe SD and the relay will will fall forward that it won't know what the contents of SD are it just knows how to forward that to the producer um and then it will contain some other information that actually describes the contents of the track um like which codec it uses what resolution um so the consumer again VLC you could know like hmm I don't actually support ab1 um I should request the SD track instead uh so this is just like a little it gives choice is the catalog you can think of it that way it's a way of um announcing what is supported um that shows the words it's a way of advertising what's supported and we have to figure out what format this uses I added some examples at the bottom uh move is what warp is like we just use the existing MP4 spec but you could use the hls dash playlist uh you could use something custom we could make this Json encoded or this is kind of like sdp there's a lot of existing standards that try to describe what multiple media tracks look like and I don't want to Rattle too much over what the format is and you can let's support multiple ones um so once we know the catalog we we VLC receives a catalog it parses it it figures out that there's this shd SD track uh it'll come back and make a new subscription this time is a new ID um this is I'm calling the Subscribe ID but in the draft it's called track ID um the namespace we haven't figured this out but it could be relative to the catalog and then it's the same namespace as the catalog or it could be something wholly different it could be like an absolute equivalent of if it's a relative URL versus an absolute URL don't know but uh I'd like the support for using the same name space uh"
  },
  {
    "startTime": "01:38:00",
    "text": "um and then the other side says sure so what's really missing here and this is probably the thing that's most confusing I think with this whole thing is how relays actually handle this we got one side that says announce I'm willing to support this track name space and I connected some URL and you get another side that says I want to subscribe um to this check name space how on Earth like do relays consolidate them um so the first thing I want to make make clear is that the connect URL changes on every hop like it has to because it contains the host to connect to like it can't be the same across every host it could be different protocols too so the connect URL will change at every hop uh and it's up to a relay to have a routing table to know that if somebody connects to this URL and requests this resource I need to go to this other server to get that resource um but with the relative uh track names you can also rewrite the namespace uh that's completely optional uh and here's um one example that I would personally do that's why I wanted to do it where OBS would be given a connect URL that is connect to mock with live.twitch.tv pixelated and some namespaces some random random things to make sure you can uh tell unique broadcasts apart uh that does not need to be the same thing that's given to VLC in fact VLC is given a in twitch's case and uh is given a an edge in San Francisco and livevideo.net and the namespace contains routing information in it like which origin it's at some unique ID blah blah so this is the same broadcast but both either end of the pipeline um are configured with different information um again completely optional uh it's up to in this case twitch's CDN to figure out how I map a connect URL uh and namespace uh to the origin into the"
  },
  {
    "startTime": "01:40:01",
    "text": "ingest side and it can it can rewrite um so quick recap um the this is just like the high level uh flow so we set up the connection we send a uh setup this is for contributions this is when a client OBS is publishing to some and just service somewhere um you said the Senate the client always sends a setup message and then it will send an announce and say Here's the track name space I want to produce the other side says sure give me that catalog the client says sure here's the catalog uh as uh object zero and then if a request comes in later somebody wants to receive like the HD track then there will be a follow-up subscribe to actually get that track um so this is really cool because you can have a case where a client connects to a ninja server and doesn't send anything until until it's asked to send data so you can imagine uh a broadcast with no viewers or a um a conference call that has no other participants like everything's established the catalog's published it's subscribed but it's not pushing any data yet um it's not pushing data until somebody asks for it with a subscribe for the distribution side um the client is connecting to a server again VLC is connecting to um the server request it's still the setup message um but the the roles have flipped uh so now the server this is debated um the announce is really only used in contribution case but if it's symmetrical then it should also work for distribution where the server can say by the way here's a track namespace I'm willing to provide and the client either either it's told that which track name space is configured to uh that's kind of why I say announce is optional um then the client says give me the catalog subscribe send it as object zero"
  },
  {
    "startTime": "01:42:01",
    "text": "and uh and then eventually can request the proper media track once it's parsed the catalog and then finally here's both sides it's a mess but I think it's just really important to visualize that this is not meant to be a contribution or distribution protocol this is meant to be both simultaneously um so they don't share uh any number namespaces uh so subscribe zero either both sides can send subscribe zero um and it will work just fine um yeah that's all I got um I know it's a lot but any any questions thanks Luke I'm not seeing anybody jump into the queue hopefully that means that after talking about it for an hour and a half and reading the drafts people are understanding how it's supposed to work anybody want to jump in and ask questions okay um the next part of our agenda was sort of just an open discussion uh I know we've kind of we're a little bit behind I think what we originally said for time but some of that discussion is happened uh as we've gone along so um but if people want to just have General discussion about uh the drafts the examples uh how this is supposed to work uh now is your moment okay I think Ted told me oh here comes Martin Duke I was about to say Ted told me that we would definitely fill 50 minutes of discussion so um Martin go ahead yeah I uh I don't think I'm gonna have 50 minutes worth of comment but just so it could be"
  },
  {
    "startTime": "01:44:01",
    "text": "just in terms of the way forward so it sounds like the deliverables of this group will be the moq I mean assumingly something like the moq transport draft and then a uh at least one um uh format draft like like the warp one um and maybe more if other people want to make them is there something else that we expect to produce uh I see Colin jumping in I believe our we may be chartered also to produce an architecture draft uh and they don't have the and then um yeah yeah there's an requirement that you might choose to publish or not I guess um right that could become sure Colin I I I all I was going to mention it is I mean I will I will pitch at some point I'm I'm a fan of publishing the requirements drafts purely as incentive to cause people to create good requirements drops but I think they're valuable but um that's it you've heard that whole conversation yeah I'm most excited but you don't have to read them I keep telling the isg don't read them thank you but yeah no I I I I understand but anyway I think that that topic will bubble up at some point but not really relevant here okay so it sounds like our way forward is to uh well we have an mq draft which I guess we can possibly adopt and then in the near term is there is there a a suitable warp draft floating around that I that I missed for the for the format purposes Oh Martin I suddenly lost you the answer to your question uh is yes there is I don't think the draft was published or it wasn't recently but there is a link to uh Wills repo which does have a draft in it uh and I saw"
  },
  {
    "startTime": "01:46:00",
    "text": "of course I was answering that question when you were gone Martin I don't know if you heard me or not no I I heard you I just cut off my camera and then I realized that's it yeah I know I'm glad glad to know that uh your house has not been leveled um so um yeah okay so that hopefully answered um I saw will jump thank you will did you want to address that or say the same thing yeah he put a link up yeah I I just put I put a link it's it's not reviewed or published but you can read through the HTML it's its purpose is to form a base for the discussions of how we structure a media format it's not in any way of saying that this is the final version okay I said it before but I guess I'll repeat yeah I mean I think this seems like a sensible I I'm not I've read the the um mock transport thing but not this what media thing as you might imagine um but it seems like the from what has been explained this is a reasonable separation of of of functionality on the two documents and I think we should progress towards uh adopting um both or so some some form of both thanks okay suha sorry we jumped over you there but you have the floor to kind of say that uh um a couple of us will be submitting a updated version of the low or at Continental draft that would kind of reflect uh catalog uh changes and and some of the uh like the payload header that that might be useful for some of the real-time use cases and also we will plan to update the architecture spec um to reflect the new mock transport changes for ITF 117 though those would be probably come Landing in before that thanks"
  },
  {
    "startTime": "01:48:00",
    "text": "uh okay great looking forward to seeing those uh Spencer glad I'm glad that I went after suhas uh I I just just as a request to the group especially people who have drafts uh floating around I if you if you could make sure that the uh that the GitHub repo that you're using for your draft is included in the draft um that that that would be great uh Martin Thompson's uh uh Martin Thompson's uh uh template uh for IDs uh like produces that semi-automatically uh just uh you know it puts up at the top of the drafts but uh you know if I see if I see a draft that looks cool but I don't know where to look at it in the repo or see the most recent editor version or something like that uh it's harder for people to contribute so uh that's just a request to people who are working on uh a requests to people who are working on uh drafts that they're hoping to contribute thank you okay thank you Spencer anyone else have generic thoughts or um Ted do you want to like kick off a discussion about adoption I thought you're going to ask me to fill the 50 minutes and I was uh preparing that Ted will you be willing to Vamp for approximately 20 to 25 minutes uh I'm not sure that I'm the right person to advance but I could certainly feel the the past uh any any number of minutes"
  },
  {
    "startTime": "01:50:01",
    "text": "with things that have failed spectacularly in the past or or industry as a whole but let's skip that because we're not going to be one of the things that fails spectacularly and instead move forward to the question of how we do the adoption so I did not hear anybody in today's meeting who sounded like they were opposed uh to uh us issuing a call for adoption which of course goes to the list um for the transport draft I think the uh the moment has come where I will ask explicitly is there anybody who thinks that the chair should not issue a call for Dutch the transport crowd okay uh see none you can expect the chairs to issue same uh in short order uh the requirements draft as you will have already seen is now an official working group draft so we don't have to issue another call for that because uh that's already done so the question really comes to the media draft I think the media draft is important for us to um to have available um because as people have noticed there are some things which might fall naturally in the transport draft or the media draft and we have to think about where they go so even though the working group has not seen this particular split before um and even though this is currently an example rather than the only way to do this um I I think personally the right thing to do is to go ahead and adopt it and know that it may simply have uh either a higher level um of change or some adaptive radiation into multiple graphs describing different container formats uh so I guess my question to the to working with with Cullen first in queue is"
  },
  {
    "startTime": "01:52:00",
    "text": "knowing that it might be the first of several does anybody object to us going ahead and bringing it in to a working group repo so that we can work on it together um and if you if you don't feel my thumb on the scale there I will turn on my my uh I think for adjusted uh just a moment and uh send the video of me putting oh I have to find it putting my thumb down so you you know what my personal opinion is uh but we have several people in queue now Cullen Spencer and Lucas calling her first um so first of all to answer your direct question I mean absolutely no problem with bringing it into a working group GitHub repo I think all of our stuff should be there from the beginning and we should give you know access to anybody who wants to write anything in it like have a nice day right that's the whole point of GitHub so yeah plus one on that but I don't think it's I I don't think a draft that hasn't even made hit the draft repo yet is ready for working group adoption and more specifically I think we have two drafts here that we're probably going to want to adopt at the same time um and I think they're getting close to ready but I've been encouraging I just I I want a chance to go in common and work on those and I wanted to focus all my attention on getting the base transport draft in first so I would appreciate a bit of time to actually go work on those drafts like you know get them submitted to the repo for example before we agreed to before we did uh call for adoption on them um and and I'm referring to both Lock And War both of those tracks for that and yeah I mean I think that we should get that in the same order um and do I have a problem with moving them like moving that work to be in that in a common repo for the working group yeah we should have done that from day one everything should be there that's her [Music]"
  },
  {
    "startTime": "01:54:01",
    "text": "Spencer I can't hear you oh I'm sorry that's because I I didn't realize that uh you had called on me yet um so just uh just a note to the uh to the team here that um the uh requirements draft is not in a GitHub uh in the working group GitHub repo uh and that you know so not in the mock uh GitHub organization I think is the way our iitf organization um so we would pl we so we should plan to move that as soon as you all have a repo setup is that right uh there is a repo set up now so uh it's the repo that uh we we have available we can definitely um move that in whenever you're ready yeah we can definitely take an action to move the requirements draft over to the um to the mock WG uh organization cool uh like I said let us let uh James and I know if we can help um we yo I don't I don't do this often but I have done it before so um but thank you Lucas hello my order is probably pretty bad because I'm on a bad computer but um just quickly I think personally I think it's just a bit too early for a media document um just because like I've even seen one and I hear there's two now and there's some time to read them and see like yeah we could adopt it and say we're going to throw this away but I I just don't see why we need to do that right now maybe in a few months time or whatever like after the next ITF work we made like a bit more progress um at that point whatever there's two or or things I think that the approach you outline Ted is is good I just think it's"
  },
  {
    "startTime": "01:56:02",
    "text": "slightly too early to make an adoption call for those things cheers okay Colin I just want to be clear on a move to uh particularly with the uh the the warp the the repo that was warped and now became transport it has so many open issues on it and so much discussion I want to really move that one so that we don't lose all that would be my one request I don't care about the other week those people may think it's good to do it or not but if we move this one I prefer to move it if that's possible so that we don't lose the issues and the discussion and the history basically uh yeah thanks I I personally am a huge fan of preserving all history when possible so uh that's my preference as well yep uh so I don't see any time somebody else I don't see anybody else in queue uh so what I'm hearing is uh folks would be happy with an interim step where we asked uh uh will as as the author of The this draft or the lock authors to both rev the draft and publish into the internet drafts reap internet drafts directory uh the current version of whatever they they think they're ready to um to have in the drafts directory and at the same time then move whatever they just published into the mock working group um organization and so we would not change it to draft ITF Dash mock at that point and make it uh formally adopted but uh we would have a single GitHub repository so that if there were issues that for example people wanted to raise against it they only had to go to that one repo And subscribe to the individual pieces they cared about so that's what I'm hearing as the result of this discussion is there anybody who thinks that's not a"
  },
  {
    "startTime": "01:58:02",
    "text": "fair summary Ted I just want to make sure you're precise on something here because I took it I heard things that sort of like we will have multiple each draft will have its own repo inside of the working group org right that's that's our plan of record I just want to be clear on that because it sounded like you were thinking they'd be in the same repo which I don't think they will be like uh they'd all be under uh github.com mock-wg right which is an org not a repo right yeah perfect sounds good okay is there anybody who has an objection to that way forward okay uh so an action item for uh for Will and for uh the lock authors uh to go ahead and uh publish into the internet drafts directory whatever you think the current state of play is and then share with the chairs uh the um The Source you'd like to have put into the repos under the mock Dash WG org uh in the meantime uh chairs will issue the uh call for adoption for the transport craft and we'll move with the help of James and Spencer the existing requirements draft under the same work uh just to be clear for relocating or transferring repositories into the working group uh just as a no uh you'll have to give uh myself uh and presumably to the other repos the owners uh permissions in the working group organization uh in order to transfer it all across because we we definitely want"
  },
  {
    "startTime": "02:00:01",
    "text": "to take the issues and and all the history over along for the ride right so we'll have to work with you off offline to get that done um I don't think we're going to do it while people watch as amusing as it might be to have that all recorded and uh put it put onto YouTube I think we probably won't do that so we'll we'll we can do that Ted we can do that in the next interim it will be awesome um okay um thanks for letting me know that you're going to be doing that in the next interview Ellen handle that one by himself then um okay I think that closes off this item on the agenda Ellen do you want to talk about next steps slash uh uh prep for hackathons ETC well we do you want to jump ahead I think we had the requirements to have folks uh next on the agenda if I'm remembering it correctly you were correct sorry I wasn't looking at the agenda and uh so the next uh thing would be the requirements okay Spencer you want me to share your slides uh transport this this is Spencer and I think I was asking to share my screen oh you wanted to share your screen if if that's if that's okay absolutely since I couldn't find your science anyway okay and you have to ask him and I approved uh sounds like a deal and let me start a side show so that I have something to ask about and um I am asking you to share the screen and uh just for the people who are taking notes I am not taking notes for this right now so please do um oh and it asked do I really want to share my screen yes I do cool um and"
  },
  {
    "startTime": "02:02:02",
    "text": "foreign [Music] okay cool sorry takes a minute to figure this figure out where I am here uh but I think I'm here so anyway uh I James and I wanted to just let people know what was going on with the use cases and requirements draft which we always call the requirements draft um and um let's see um sorry um so this has been adopted and this is just the details on the uh the adoption poll and the feedback we got and US replying to the comments uh on the mock mailing list and then uh we submitted uh-05 uh version uh May 31st last week we were closing so uh in our repo uh tags mean something we closed all the tags that issues that were tagged for adoption in the GitHub repo and so if you click on those links uh in in the uh in the presentation that's in the meeting materials you see that and we provided the devs for uh zero four to zero five and then the diffs from zero five to uh the zero zero working group draft and that was submitted uh June 5th which was what two days ago and the chairs approved that so uh that's how we got where we are and uh so let's talk about where we're going um so one of our labels that we're using is current author Focus which is uh authors are working on PR text and one of the things that we had talked about in Yokohama uh we had the suggestion for Bernard that a significant portion of the draft called"
  },
  {
    "startTime": "02:04:01",
    "text": "exploration of mock scenarios and data model uh would be better placed in the use case requirements draft and uh we agreed with that we just haven't done that waiting for uh adoption of our draft just so we're not just randomly moving text around between individual contributions uh so we agree with that and be working on uh PR text for that also we have an issue called uh how many ends are involved in end-to-end security we've been hand waving about uh Indian security since before we were chartered and the tension here is about what intermediate devices know about payloads I think for my my understanding of where we are in the protocol drafts uh is that we have a lot better understanding of the nuances there but just for us to uh because you know because we have a section about security and Indian Security in the requirements section of our draft uh just basically making making sure that we can that we can uh explain to people what what that means so that they you know so that they understand uh what to look for in the in the requirements on that uh any questions on that [Music] uh if uh if done and if people can jump in anytime um so for priority for discussion is the label we're using basically that we need other issues to be resolved first uh one that we've had um using terminology correctly for relays"
  },
  {
    "startTime": "02:06:02",
    "text": "and caching and replication points and media translators which if I remember correctly those were the things that are named in the uh Charter um you know now that now that uh we have an architecture draft and we have you know from from uh uh we have uh also architectural kinds of things that are now in the transport uh the mock transport draft um that seems like a really reasonable uh start to produce the architecture draft that we are I charted to produce um and this is something this is something that I want to contribute to because um it's it you know it it's kind of gating for a lot of the things we want to say in the use case especially requirements draft uh we want you know we want to describe if we if there's a requirement we want to be able to describe what is the requirement on so that people know how it fits in with everything else we we've had uh a um maybe you're not terrifically important issue but it's becoming more important about the use of BCP 14 language for requirements in our draft um so uh two things to do things to be sure and mention uh about this is um our thinking is that mock requirements in our draft apply to them the way a mock system works uh and the mock protocol specifications may have their own requirements that are specific to that you know to that protocol or that uh"
  },
  {
    "startTime": "02:08:01",
    "text": "or that uh or to that uh uh format or whatever you know whatever we're doing um and any any comments on this one yet [Music] so we've got uh label uh itf-17 uh and the goal is to label the pr you know basically we're targeting PR text for 117. um an easy an easy one is uh that we reread uh Dash 05 after we submitted it and uh we had proudly announced that we were going to submit-05 as the working group zero zero draft with no changes and um but we do have a a uh largely editorial uh issue that uh will be working to resolve by 117 and um we also have one from uh I believe this one's from Martin Duke uh about filtering use cases based on quick properties is the title the idea is basically uh for each use case that we're talking about what value does doing that use case over quick add uh like I said just because you can use mock doesn't mean you should use mocker that you need to use mock so basically trying to identify what the um basically trying to identify what the um what the you know what"
  },
  {
    "startTime": "02:10:02",
    "text": "what the incentives for deployment are and I can say that um and uh Bernard um Jack do I I do I see do I detect you in the queue uh yeah no I think this is a very important Point Spencer um but in particular not just a question of over quick because HTTP 3 also runs over quick I think it's uh I think you have to say why is it better than HTTP over quick um because the you know quick quick is an HTTP 3 if if you're just transmitting those dreams in in a single dependency like cmf why is this better than low light and chls I think I think you do have to answer that yeah yeah I think I think he having that written down in some so the the I'm I so uh Bernard I agree with you as I almost always do um and I think that uh when this issue was created uh that over quick uh or based on quick properties um was kind of shorthand for why would why would you use mock um and you're talk you know you're saying that uh the only the reasons that you would use Mark may be related to Quick Properties or to uh other you know other other parts of the mock solution and that I take that as a very friendly Amendment thank you uh Lucas what you got hey hey Spencer uh yeah I just I just want to pick up on this last Point um not not just from mock but like anything um just because you can use characters I mean you you should but you see like a whole load of of drafts of like X over quick and whatever and it's always clear"
  },
  {
    "startTime": "02:12:00",
    "text": "what the benefits are um so for some people they don't care like they they it doesn't matter they just want to try something out or or there's there's benefits aren't specifically from the protocol itself but in the kind of the the the deployment and operations of something so you know quick has features like connection IDs which help load balancing or things we've tried to capture in the applicability OR manageability drafts so um for the specific issue in the question I probably can't help in any way but definitely this is something kind of I'm trying to raise awareness for in in a general quick using community that we want people to use Quick where it makes sense um and maybe there's ways we can help them identify where it's good or bad for them and still let them make their own decision and but if there's anything missing from from the current drafts we have maybe at some point in the future you know we needed to define the thing before we see how people use it and what patterns emerge so um maybe maybe we should just grab a coffee when I see you in person we can chat a bit more about that but yeah got my support yeah that that sounds that sounds perfect uh so I think the uh the other thing that's worth me mentioning is that um I'm also contributing to the RTP over quick draft in ABC core and uh that is also a uh request that we've had uh on that draft is basically uh you know uh RTP over a quick is awesome but why is it awesome uh you know what what what advantages are you getting and if you're giving up anything or if you're exposing yourself to any problems what what problems are they so uh I think that uh I think that this is a really important point for both this draft and the RTP"
  },
  {
    "startTime": "02:14:01",
    "text": "over quick uh draft in an avd core um I don't know if how many people in this working group have noticed but uh the RTP over quick uh work has now been uh renamed as roq so rock so we're Contin you know we're continuing the over quick uh naming uh shorthand naming uh in avt core as well anything else [Music] I see uh Christian talking about a specific use case about peer-to-peer including peers acting as relays for other peers and um I think that that is a really good thing for me to cut and paste into the uh into the repo as an issue right now um and so that I don't forget thank you thank you uh Christian did you want to say more about that [Music] Christian you you may be muted I'm seeing Zero uh kilobits output something like a commission uh that they give to them like once and it's weird and I think that yeah I mean my concern is that the walking group is very focused on the real estate scenarios I mean we it's clearly one of the world is one of the big features one to have be able to use a CDN to distribute a large conferences yeah but uh he used the peer-to-peer"
  },
  {
    "startTime": "02:16:02",
    "text": "operation we are losing something and we want to make sure that that scenario is supported um if only because there are some people who are not really interested in having a intermediaries in the communication uh exactly yes and I'm just and I'm just typing that I'm just typing that as an issue so that um is now part and it's now part of my memory uh Bernard is that you yeah to uh follow up on what Christian just said uh within the discussion of rock of course in our last meeting uh Spencer we had a discussion of peer-to-peer quick transport uh particularly quick tightly coupled to ice um and that you know and the idea of creating a document for that for describing how that works um that is important I think because uh there are scenarios in addition to what Christian mentioned where you have peer-to-peer cash [Music] so we see that today in streaming where you could have an hls stream coming into a company and then have a peer-to-peer quick or uh caching going on within the company so anyway it's something to figure out whether this is part of mock or just something completely separate uh but there are use cases for it it is used today very widely in streaming so it's it is a real thing typically with a webrtc data Channel but you know obviously quick is better than sap for that purpose yeah and uh the the other the so the thing I would say about that is uh in the repo that we're using in uh ABC core for this we have a label that we're"
  },
  {
    "startTime": "02:18:00",
    "text": "using that says basically uh this is a this is an issue but it's an issue that is bigger than uh RTP over quick you know that it applies to other things running over quick as well um and so I think what what you're talking about there especially if that becomes a generic here's how to do quick over ice document um would be would be a maybe a good example of that but we we could but we can talk about that more on the mailing list that we have yes and I I think there should be an initiative of doing something that quick with our eyes or whatever it is that we use instead of eyes and uh but once we have quick over eyes or even if we have just basically think of people running quick because they are on the same local network the land of the scenario then we we should make sure that the moq works in that case if you do have ice gives you connectivity but if you do have connectivity we still have to make sure that there is no something that makes hypothesis and block yeah yeah um we have had conversations in the past uh when I say we I mean me and people standing around uh but we have had uh conversations in the past about um also how uh how connection migration works and to a lesser extent how uh multi-path quick uh plays into all of this as well and one of the conversations we've had about using eyes uh is that if you are using ice you you might be hiding details of the"
  },
  {
    "startTime": "02:20:02",
    "text": "like that from the applications so that the applications are much less affected when if you have to choose A New Path uh with eyes because there's some problem so I I think there's a lot of I think there's a lot of good work there um that uh that mock and rock and whatever else is running over quick this week uh could benefit from but uh like I say it's just for us to make sure that we don't forget uh you know forget that uh issue that we need to work on regardless of where we put work on it does that does that I should ask the chairs does that make sense [Music] I'm not sure that the chairs are the right people to answer that um and we could and again we can talk about this on the uh mailing list so uh so you know so that's fine but uh if people wanted to tell me that this is a stupid idea this is a this is a great time to do that because it's being recorded [Music] I thank you all um and um I did have some closely thoughts uh just uh the reminder the mo you know as as Christian was saying about uh adopting the mock transport draft so the working group now owns the requirements draft and the draft needs to reflect what the working group actually thinks uh we have been taking issues incumbent seriously uh on the individual draft and uh"
  },
  {
    "startTime": "02:22:00",
    "text": "we will take you know we will commit to take issues and comment seriously on the working or draft uh but please as fishley as this moves into the working group repository um working group organization repository uh please feel free to submit and comment on issues and submit a comment on PRS um we do have work to do and the goal that I'm one of the girls that I have is to try to make mock systems easier to implement and deploy uh based on what's in the use cases and requirements draft so that's not the that's not you know that's Spencer's goal that's not the only goal but uh that's what I'm shooting for um any other questions on anything that I've talked about [Music] [Music] if not I thank you all uh and I observe that I never I've never come out of one of these meetings without having learned something about the way people expect to use this protocol thank you all thank you and uh Ellenwood would you like to LEAP in now sure and I'll even turn on my camera so you don't have to just hear my disembodied voice um so I wanted to ask questions about what people are interested in doing for the next iitf particularly if given that we have a transport draft that folks are generally supportive of adopting and"
  },
  {
    "startTime": "02:24:00",
    "text": "will likely I think probably be adopted before then is anyone interested in uh getting hackathon space and trying to do anything uh and should we try to organize that um I have ideas but if maybe anybody else wants to jump in and say whether that's something they want to participate in uh or not uh Bernard yeah I I think it would be useful um you know um if it would help I'm willing to you know give to provide tutorials on web codex or web transport or coding or anything like that no um we even have Now sample code that people could play around with I know Jordy has put out some you know we have other sample codes so I think there's some resources that people could use uh okay that's that's cool one thing I was thinking is that I think several folks maybe pointed out is that the transport protocol does not actually need to transport media you can so we some you know we could come up with a you know an interop type draft that transports something simpler than than video uh if people want to make sure that the transport and Pub sub pieces are working as expected independently from being able to actually send media bits um but anyway Luke oh yeah I just wanted to say that I've been working on um some open source implementations too that are would be starting points for people if they wanted to hackathon okay thanks Christian as we should have some recommend on that a very minimal things that we transport I mean like maybe mimic the movement of a mouse or something like that so that we can have something that was real time and and can be displayed but uh and and yeah it's tight I mean my"
  },
  {
    "startTime": "02:26:04",
    "text": "UF estimate is that it's about four weeks of work to be ready so we are hardly have four weeks until the uh ietf so it's it's the interesting challenge okay yeah I agree it is tight uh and you know it's also okay to show up and if people just hack together in the same space and we don't get there that may also be valuable use of time um even if you don't have time four weeks to prepare so um cool uh Lucas yeah in like the the vein of just turning up and hacking um I think I wonder how much of like given the the key dependent technologies that we're talking about like how much overlap is there with things like web transport and and other stuff and actually um if we can get something to Advanced so it's like oh I don't know some interop protocol for to mock great but if not they maybe just make a table of like what uh sorry a web transport and mock enthusiasts and people kind of self-arrange like uh I'm way more into the transport bits and the media part and I could learn some stuff by seeing some demos from people while I'm hacking on on stuff like that but I might need to then step away and go on to you know another table that's looking at other things related to Quick you know and we shouldn't try and make a quick mega super table I think that's unmanageable but there are some overlaps like key technology things here and um you know you could effectively divide that table up into little sub projects and to me that would seem to work the sub projects particularly for remote folks who can't be there in person that that need to kind of focus on whatever they're doing and I don't know what the uh the population constituency is for mock of people who will be there in person versus remote and stuff so maybe you've got a better handle on that but it feels definitely we should try and do something you know there's no there's no"
  },
  {
    "startTime": "02:28:02",
    "text": "end of if we achieved our goals or not really it's just just fun yeah and uh as somebody who also has uh web transport work to do I always appreciate um time to work on what my web transport implementation so uh having either share a table or adjacent tables uh and uh I can talk to the web trans chairs uh one of whom is in this room um about that Spencer uh and uh thank you for that and uh it's always good to notice who's in the room that you can grab quickly um so uh I applaud the uh planning for a hackathon whatever that means um and because I think uh I think this group does really well with uh the opportunity when they have the opportunity to spend time talking to each other uh for an extended period of time so you know no matter what you all do at the hackathon uh sounds like a good use of time to me uh the the one thing that I was going to ask is um we've we've I we've been we mentioned uh the use of an architecture and the use of terminology to describe the architecture that are starting to get into uh actual drafts that people are uh submitting and requesting publication on is is do people think that that's a thing that we could talk about at our meeting in San Francisco basically we could we could uh come up with a presentation"
  },
  {
    "startTime": "02:30:00",
    "text": "of what thieves what people seem to be using as a middle image of the architecture and what people seem to be using as the terminology to describe that middle image is is that doable do people think uh so this was you're correct that was also part of the topic we were we wanted to cover in this section in the agenda one was hackathon the other one was what should we talk about in the meeting time so yeah let me just quickly uh if nobody else wanted to talk about happening let me summarize that I Heard lots of people say they're interested in participating so uh we will make sure that we set up a table we'll coordinate with web transport um I would say if somebody is interested in trying to make a streaming format draft of something simpler than video um to try to interrupt on um maybe just ping me because I can also try to to bang one out um this is something that people want to hack on um or if anyone has any other ideas you know please prescribing them to the list um yeah moving on to what Spencer want to talk about which is um what we're going to do in San Francisco eating wise so I we requested two 90-minute sessions I think they have announced uh the scheduling thereof um we will we will get to argue about different things and we have been arguing about so far because there seems to be um some coordination around transport now I imagine by that time there'll be plenty of issues we would like to start digging into that have been identified or will be identified against the transport sounds like we will want some agenda time to talk about streaming formats um possibly and then you mentioned architecture Spencer and I think I heard suas earlier say that there was planning a revision of the architecture draft so I I think at least right now it doesn't seem unreasonable to add some time to talk"
  },
  {
    "startTime": "02:32:01",
    "text": "about what we're look what we think we're going to do to meet our architecture uh requirements and uh and getting on the same page terminology is also also heard mention was a little bit of a to do so uh that seems pretty reasonable to me I'm not sure if anybody else has clots on that yeah I I I've I've spoken with Sue has about and uh Cullen I think I'm not sure who else about uh wanting wanting to help uh you know to contribute to the architecture we're moving that forward and uh so they are not alone okay I see Luke in queue yeah I wanted to say um as well like I know we're returning for an architecture but I really want to plus one what Christians said like this should work pop the Hop you shouldn't need to spin up a big architecture so I think there's a lot of overlap between a non-normative architecture and requirements document and they could be combined got it okay Spencer you want to respond to that all right speaking speaking only to uh only for my cell phone that I think that uh Luke is very wise on that statement and that that would be that would be something that uh I could live with as one of the authors or editors or whatever it is we're doing with working group documents now but thank thank you for that suggestion Luke [Music] uh okay so I mean other than that uh if folks have other things they want to uh bring or request agenda time uh before San Francisco please you know send notes"
  },
  {
    "startTime": "02:34:00",
    "text": "to the chairs you know we'll be making the agenda obviously sometime before then um but um those are kind of that's the rough shape of things we think we'll be talking about and somebody who thinks we should be talking about something else let us know um I'm not sure I had anything else uh so uh but Spencer does well I just wanted to thank the chairs and the working group for uh a really productive meeting uh to enter a meeting today uh it see you know it seems like to me that we get we're getting better every time we meet and so uh and and it seems to me that the virtual interim meetings really really have really helped also but uh thank you all for the work you're doing and thank you to the chairs for uh the way you are leading the uh pack of squirrels uh uh you're like I don't know if you say you're welcome I really appreciate that uh Spencer I would like to relay the thank you on to the team of authors that put in a lot of work between Yokohama to get to here um it may not have been visible unless you were carefully following uh the the mocti repo um but there was a there was a lot of work a lot of I know a lot of discussions happened a lot of time investment and um I think I just want to acknowledge folks or this is a volunteer job and people are um putting a lot of time in and we appreciate that foreign Ted anything you want to add or should we send everybody home with 25 extra minutes I am always in favor of sending people home if we're done and I think we're done uh so let me add my thanks to uh to everybody for putting in the work today and to those who've been putting it in consistently both on both sets of our author teams uh for"
  },
  {
    "startTime": "02:36:00",
    "text": "um getting us to here we'll take up the action items and see you on the list yeah thanks everyone if I could just also mention please uh take a look at the meeting minutes and see if we were able to capture what people said uh I was doing my best and uh all I can say is I was doing a better job here than I was at ABT Corps uh two weeks ago make a choice thank you Spencer we'll definitely make sure we review the minutes thank you all right have a good day everyone"
  }
]
