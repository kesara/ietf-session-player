[
  {
    "startTime": "00:00:08",
    "text": "Tabo getting some ad support here from all over the place it\u0027s really great thank you whoa any of that this is where it gets easy to remember which IETF meeting we\u0027re in alone behold my the supplies I prepared earlier now this is super good so we wrote start the TSV DWG meeting and this big box here comes walk over this way so mind your step otherwise stand on the pink cross thank you see now great support here as well thank you ever so much okay so welcome everybody this is T has to be WG it\u0027s the second meeting juices meeting and we start with just a quick review of the agenda star agenda you\u0027ve already seen the not well they\u0027re not well is in the slide that remember everything in this meeting is colored by the not well read it if you haven\u0027t done so our agenda has two slots fiscally working group drafts where we have three drafts scheduled for today and then a couple of individual drafts the individual drafts are looking at two topics and where does HTTP to as a transport fit into the IT a very big question it could be here or it may not be but surely we should talk about this draft and we\u0027d love to get feedback on that and today an sctp retransmit bit is one more bit the SCTP hugger and that we presented as the final presentation for this session so we start with a CTP and end with SCTP Michael "
  },
  {
    "startTime": "00:03:26",
    "text": "okay this is about our revision of RFC 4960 piece ever seen I\u0027ve seen a 4960 which is the base bag of SCTP so RC 4960 was way back written in XML went to the RFC editor was converted to end off and published so in doing a base document we wanted to submit the RFC almost as is as an internet draft and then you can follow whether diffa to all the changes so this was happened the simple thing was to suddenly version 200 which was basically the internal sources tuned up a bit making from an hour making an internet draft out of an RFC changed the legal stuff and submitted then the stuff was rewritten completely in XML to match the formatting which were ok ish except for one section which is dealing with the abstract API and it had a strange formatting which I couldn\u0027t teach XML to do so but that section is not that critical because it\u0027s an informational only so the text should be there and different formatting and the rest you can check with a with a div to what\u0027s in working progress is getting 50 changes applied to the XML sources and that will be version Oh - basically incorporating all the stuff from the errata RFC that we have to do to do stem basically updating the reference is something we didn\u0027t do with the with the era other document so some of the AR sees have been we are referencing have been updated so we have to update the references that should be an editorial thing and in the Arado document we made sure that all the new text doesn\u0027t have mass Church and so on in non-capital letters so I they use different words I use that in capital letters and we have to go through the document to make sure that this is consistent in the oh three version and then you can we can think about layout improvements are not so taking tweaks out of the XML stuff which made it look like ROC 4960 or not but basically that\u0027s it so the plan is to do the discussion on the Matheson shirts this week are some of the stuff amen it can stay around for a while - for "
  },
  {
    "startTime": "00:06:27",
    "text": "people reading it and catching minor issues we are not aware of any technical changes so that should right now work out any questions regarding that sorry about the floor and just a chat question and to be clear the the next Rev will the next Rev will be Oh - yeah which is the with their artist correctly yes and so that should be a fairly boring thing because it\u0027s the same document we have it set it just merges two of them together effectively yeah not as boring as I\u0027m building animal to XML but then maybe there\u0027s a bit more interest when we get to the version 3 and then we do the clarification of things where maybe seem clear at the time but maybe now in retrospect could be made slightly clearer without changing their intent exactly yeah and you can use the dev tool to see the differences and there is of course this is of course a new working group document so if we do find things which are important to fix then it is still open for people to send those pictures in and contribute to this document is not just an editorial path so when we get to stage 3 on expecting more people in the working group to add comments and start discussing this exactly Mira Mia who live in a little bit of provoking question will this obsolete theoretical document obviously - absolutely no it it updates 4960 but the error replaces are obsolete 4960 the other one is an informational document which they surround documenting the differences ok 4960 this will disappear as an as an active useful document because this will incorporate everything in it 4960 will disappear can you repeat yes sir ok we\u0027re having too much fun with with with process your honor RFC status so what should happen is that I mean and as Randy suggests if we can get it done fast enough this will be 8960 which would which would be a very nice number that will become the new standards track reference for SCTP so as part of that it\u0027s pretty clearly got an obsolete 4960 what we do with the errata RFC I think is up to us as Michael said it was published it was published as as as informational we could shoot we could choose to obsolete it obsolete or not now much suggest to do the same what we did for the first 60 or whatever we have for there we have the same document for the differences between 29 60 and 4960 "
  },
  {
    "startTime": "00:09:28",
    "text": "just propose something like that it was not the point of any of my questions I didn\u0027t ok another question enough coffee to write asked the correct question the the correct question was if the a miner do we propose to perhaps take this document along the standards track up from proposed standard yes this is something that we have to track as a working group as we go forward and that that decision can remain up to the point at which we submit the iesg and and possibly even afterwards but I concur that advancing this from proposed analog along the standards track could be a very could could be a very good thing to do okay and I think we\u0027re done and I\u0027m with that document that\u0027s one next slice line eight oh can I do next slide no I can like one eight the different PDF perfect this is about NetSupport it\u0027s describing how you do how you can a way to do net for SCTP version 12 was considered finished by the authors sorry as so we said we are done Gauri looked at it and did a review and provided substantial suggestions for editorial changes like moving things around but it\u0027s this editorial of me and Maxine provided editorial things but also technical comments based on in the Linux implementation I think and this has to be integrated some of the editorial stuff as well hoopha texts around we need to figure out how to do this the technical thing basically was like some of this was splitting up different functionalities of of the document so we do single homing multihoming and so on boxing person there was a one technical issue that I don\u0027t like how it described in the draft today so you propose to keep the track of all associations that device and in case there are many many associations that will lead to many hash "
  },
  {
    "startTime": "00:12:29",
    "text": "entries and what we observe today that in case of many associations that will lead to issues educate works slowly and I made a proposal how to avoid tracking of each Association and track only SCTP instances be kind of they\u0027re not device so I have a hard time to understand you bit louder you don\u0027t you didn\u0027t want to put pan cheaper Association got what I think I heard was that the text currently requires you to track all the association\u0027s state where the union or not and some a careful attention to detail perhaps aging things out which in which all other Nats do anyhow might reduce the amount of state that the the doc requires you to carry to what implementations are likely to do well what status package it\u0027s not needed well in my comments I I made one suggestion how to avoid tracking although all these associations and I won\u0027t I mean I want you to look at it and we can discuss I mean we can we can think of how to avoid I mean that amount of entries in the indication but I think you need an entropy association but yeah we can discuss okay okay so this has to go in this might be technical changes will be ready by the next idea when Michael idea Nick ready I mean get we will have an extra vision of Maxim being happy and you being happy by the next idea I think it\u0027d be good to get that going right and expectation is that that will send that revision almost directly to work last call last call when it appears so that next IETF we\u0027re mostly concentrating on on this drop okay hang on whoops that was my want to do [Music] okay he opium pewdie hi it\u0027s Gauri first as an individual of much louder as an individual and this is an exciting document but a very boring presentation and you\u0027ve probably got the longest acronym we intend to keep that price for DPL PM tud the author\u0027s have been "
  },
  {
    "startTime": "00:15:30",
    "text": "working on the draft and we improved the description of ICMP and ICMP issues are more clearly defined this is a tricky thing to get right and I think the test is now more or less there please read it if you\u0027re concerned and we also then describe the path to big processing part of the algorithm and I think that\u0027s kind of ready as well so what\u0027s the main contribution are you ready it\u0027s a simpler diagram it\u0027s the same state machine so I said was a boring talk I\u0027m sorry it is but it\u0027s the diagram is much much simpler because Michael with redrew it for us with help from our a new co-author so you might just spotted the awfulest has increased the editor list and this is the state diagram you can even ignore the RS state if you want to be really simple because that\u0027s to deal with strange things and it does make it look simpler and I\u0027m trying to say please read it and we\u0027ve done some work to play with this to work with the text to test it to help feed into quick and basically we\u0027re working on trying to get more experience of using this and making sure that it\u0027s absolutely correct before we publish it as RFC there\u0027s lots of gotchas in this space about how to deal with loss reordering how to deal with Roc things on the path that might send you something to ignore you etc and so these are things that we want to get right and we will provide as much but as we can for the next ITF where we may be ready for a working group last call which would be cool because I think quick would like to reference this and that\u0027s their time skill as well any questions then I\u0027ll show you the exciting bit the diagrams easier to read next slide please I\u0027ll do Jo as well okay maybe we have more question only peel p.m. Tod while you\u0027re getting ready Martin Duke from f5 um has anyone implemented that Tom\u0027s tried get into the night so Hank as it stands we\u0027ve had five or six implementations over the lifetime of the draft we haven\u0027t had an implementation since we changed the diagram but if you look at the diagram it\u0027s like we pull the t-shirt through its neck hole and so it\u0027s the same machine it\u0027s just different so yep so "
  },
  {
    "startTime": "00:18:34",
    "text": "the answer is so the answer is the answer is yes yes has been implemented even implementation is not doesn\u0027t even at the comments implantation don\u0027t exactly match the new-and-improved diagram okay so in what context is that done or was it a commutation terms at some other UDP issue we have three implementations with custom UDP protocols implementation with UDP options and an implementation on most quick in July like is your time frame for what pravin a question less about this job and quick referencing it so when quick references this is it going to be recommended as the way to do beautiful quick Isis recommendation so h2 PL P and T beauty and the kwiktext also says he can do PMT UT if you can how to do that for UDP which could be challenging but that\u0027s what the current text says we work with the quick contribution Texas so it does align with what we say here which doesn\u0027t mandate all this stuff because this does not kind of published as an hour I\u0027ve seen maybe in the next version equipped we can be stronger and we have more experience tomorrow yeah I think the big difference in quick versus you\u0027re UDP is that quick is authenticated and to add and so that makes the security consideration easier to resolve because I mean it if your peer says I did receive this packet that contained only 35 bytes then you know that that\u0027s true and that that creates a difference in them - consideration is a feedback mechanism which is actually a stronger feedback mechanisms and the other feedback mechanisms we have the algorithm can be more or less than saying it doesn\u0027t matter what you\u0027re sending as long as the transport can target as long as the transport understands that it\u0027s not real data the algorithm can be the same with quick but the feedback is encrypted which makes the feedback authenticated which is which is definitely good there the one thing that would be very very useful is that when you do an end-to-end basically implementation you\u0027re doing a search yes and when you are doing a search it\u0027s nice to have some kind of Bayesian logic based on what you know about the network yes and so what would be very helpful for those implementation is open statistics about what are the commonly found empty use I agree I had to have a research proposal unless best to do some big surveying try and work out some great algorithms at the moment the algorithms are purely heuristics but I think we can get that data out so "
  },
  {
    "startTime": "00:21:34",
    "text": "people want to help because really love that because what I found myself writing in the air in the Big O quick implementation is the cost-benefit analysis does it make sense to send another probe for that particular value based on what I will do on the rest of the connection and if I know that the rest of the connection only has to send two and a half kilobytes well maybe not yeah and but the answer to that question is dependent on what is the likelihood that the spot will succeed and that is based on knowing the statistics about the over the Internet and also perhaps information about paths because we don\u0027t know whether we have previous status it\u0027s whether they will apply again there are a few things in this face which would be really good to get grant rate on before we get an algorithm that\u0027s the main reason why the current draft doesn\u0027t have an algorithm in because I think this is currently a good area of research but I think can get there quickly okay and let me just quick quick quick quick yet yet yet another double entendre a check of the time scale on which this graph needs to move in order to avoid having a quick workgroup descend on us in MERIS if you\u0027re just me officially it\u0027s July um I can talk to you afterwards having taught to the quick chairs but there are a lotta wear of this dependency and I think we are aware of their requirements okay so the this this would need to move around around the time this need this needs to move around the time of the Montreal IETF should we be looking to last call a for Montreal or after I think the initial customer for this is quick rather speak to the quick chairs about the real-time lines because they know the dependency and we need to meet their dependency okay let\u0027s let\u0027s let\u0027s let\u0027s do that let\u0027s do that offline because I think we we\u0027ve got a lot of graphs potentially headed for work last call we\u0027ll talk talk with with chairs off mine if it and and and figure out when when to do that to this one okay so in the next presentation I shall attempt to represent the document editor "
  },
  {
    "startTime": "00:24:35",
    "text": "for the UDP options drugged I will do my best to do what job was asked to present to the working group and job coaches the editor of the UDP options draft this has been around for some time it changes each IETF and there\u0027s been a lot of discussion on the list prior to this ITF and just made an update that includes some of the responses to this but not all recent changes he has he believes incorporated the CCO work that was done that\u0027s presented by Tom oddly at the last ITF and we now think that all those changes are incorporated in this version of the draft so that should improve the traversal of middle boxes and the checksum treatment rules have been extended for dealing with options and how to extend them and the basic rules that Joel puts forward are always drop options if the LCS fails but still deliver the body and the receiver decides whether to require any option and there was discussion on the mailing list about whether we should always require CCL John\u0027s position is that and the receiver decides whether the CC option is required to be present and current internet operability probably means you want that in general and Joe puts forward that any option and is decided by the sender they decide what to include the receivers decide what to require and here\u0027s the possibility of having a soft state to this so that you can tell the receiver that once it\u0027s got an option it would always need that option to carry on and there\u0027s issues with that with somebody injects a packet with the option so that needs to be thought about at the overriding design of the UDP our space is a design which will be consistent with legacy applications so if the legacy start does something like strip all the options then the behavior should be the same as UDP Joe wanted to include a slide to say that these are UDP options it\u0027s not an encapsulation method is not designed as a way in itself of providing transport of other things other than the UDP payload so there are things are added to the body and options themselves should be discrete items they don\u0027t depend on one another and except perhaps for the OCS which is required to validate the whole packet Joe says you cannot declare the order of the options occur except when they are fundamental to the processing of the option then we have the more "
  },
  {
    "startTime": "00:27:38",
    "text": "detailed slide about the more detailed problems or questions or debates this slide refers to use of fragmentation more UD with the light option of UDP options and this is an area that\u0027s been discussed on the list and there\u0027s various views about how we should do fragmentation and light and job puts forward they the view that they checksum is zero is allowed and if you you must have the checksums it set to zero to allow traversal of middle boxes that misbehave he is keen that we look at reassembling and I don\u0027t know really what else to say the if you\u0027re really following this please read the slide in detail the test is too small to Pewter perhaps read here but please read this just not present so we saw the feedback method mechanism to jaw is comments on the slides comments on the presentation all on the list and your promises to respond actively to anybody who brings this up on the list to continue the debate he just physically can\u0027t be here the was discuss of what we should include to require or ignore flight in options and such that we have at the IP layer so when we negotiate extension headers and things in network layer protocols we have to know whether we require or don\u0027t require these options because they have processed entirely with the packet without any transport context and Joe\u0027s argument is that we don\u0027t need this because the what these are simply options to the transport so we don\u0027t need these flags and a receiver is built to expect options or is built to ignore options and these are the only possibilities and Joe was asked about surplus area after the end of the UDP options the way UDP options work is it uses the the length of the packet after the payload to insert the options could you have a space after the options which is yet more space which could be used for something else and does the option have to fill rest the packet or not I guess probably I agree with John we haven\u0027t said they have to fill all the rest so there could be something else afterwards in future and how that works well all bets are off as to how you know what is in there and given the previous presentation you probably need another check some compensation option insert than that use of the surplus area as well that\u0027s for another IETF I believe it\u0027s for another document if anyone ever wants to write that this isn\u0027t something that Joe wants to take forward and if I would sit over there with my chair hat on I would say please don\u0027t bring this forward let\u0027s just "
  },
  {
    "startTime": "00:30:38",
    "text": "check that things are possible and bring that a forward at some future time there\u0027s other possibilities here there\u0027s there\u0027s many ways in which we can design this this is partly a design activity as well as a protocol development so we could have a fixed header and we could require different things and at some stage the working group has to decide and John\u0027s draft represents what he thinks is the right way forward and of course please discuss unless this changes because in the effort to make this available for the site you have a few things still remain on the pending list so there\u0027s anti polls in various places there\u0027s a list of current titles and they\u0027ll be fixed in you ref soon and the middle box traversal section needs to be updated now to reflect that the OCS work works and how that doesn\u0027t work if you in future decide to put something in this surplus surplus area and as ever light and fragmentation remains a point of discussion should we have a kooky option um potentially this is an option if we understood the need for it and somebody wanted to come forward with a proposal I guess this could be included it could be a separate draft it could be incorporated in this draft if the reason for it was clear and clearly as possible to send you a cookie as an option Tom you contribute on the list I think a kooky option if I remember right myself is the idea of just sending a or pic value as an option and getting it reflected from the other end so that you can then do you can then verify that this packet hasn\u0027t been inserted by an off path attacker or whatever you want to do or even set up some soft state so Tom said okay by the way just for the record so we I think we got that any other questions though could you take off your virtual Joe had put put your chair hat back on let\u0027s let\u0027s quickly talk about timing of this draft my sense from the state of this discussion and the number of topics on the slides is we need another IETF cycle of soaked time before we before we working to blast callers so I just heard Gauri say yes I\u0027m proposing to move the milestone for this but from a deceptive from from from May to September this year and I\u0027ll respond to that and then with my chair hat on and at the moment there is a small dependency of this with the you P PL PMT UT but we should discuss how we deal with that because I think being a normative reference too quick is important and this is another way of transporting just just bringing this up "
  },
  {
    "startTime": "00:33:42",
    "text": "as in some time we\u0027re gonna have to development on this if we\u0027re going to have it as a mechanism that there are ways out of this as well because the the things we need in DP LPM tud could be exported to this draft and we could simply refer to it as another way of doing it we will address that issue we\u0027ve got also packages with PLP MTD which is currently currently thinking shortly out shortly shortly after March we also plant that the plans not broken yet okay thank you no okay clearly we will talk with the chairs offline about what about what we\u0027re gonna do here tom Herbert so I do agree there are a number of issues that and they are coming up on the list so you can go through that but I\u0027d like to point out two of them in particular so one is the idea of the surplus area having other uses yes I look back I cannot find any reference to the surplus area in any RFC so I do not believe IETF ever reserved that area which means it may be in use by somebody else or it may have garbage but I I can not deploy this on the internet without a way to disambiguate those other uses from this use so I think that\u0027s a pretty pretty clear requirement the other thing I didn\u0027t mention this on the ok which meant let\u0027s go for that one first would the incorporation of the OCS checksum of over the UDP options area serve as a way of rejecting garbage yes that\u0027s why I advocate a fixed header in the surplus area so I there\u0027s a draft on that that would effectively give you that but also including the OCS option would give you the same protection if it was always required to present having a fix checksum makes sense from from many of you points there\u0027s also a sub issue so one of the ideas was always force UDP checksum equals zero cannot do that an ipv6 right because the UDP checksum is required so we have a big hole there I don\u0027t think that 69 36 is going to be easily twisted to allow this use case for 0 so that\u0027s really not an option to say we\u0027re forcing UDP checksum equals 0 and besides that\u0027s a bad idea because we\u0027re losing UDP checksum there is another site issue a few years in fraggin light and you move the UDP payload into the surplus area that is no longer covered by the UDP checksum so now we have a whole hold there so you really need that checksum regardless in the UDP and in the surplus area for several several reasons I think we need to CCO checksum any way to get through Knox ok a UDP mechanism so we expect to go three knots so we can revive that discussion I think that the biggest issue for me though is this concept of option negotiation mm-hm this is referenced in the draft and "
  },
  {
    "startTime": "00:36:42",
    "text": "there\u0027s a concept of soft state this is just a big question mark for me I don\u0027t know what this is if I was implementing this I would have no idea how to do a robust option negotiation nor how to make it interoperable so either this needs to be fully qualified and normative language or to somehow be taken out but if it\u0027s taken out then some of the assumptions like what to do with unknown options really really should be changing so this is trying to trying to straddle the world between stateless options like we have an ipv6 that are our kind of item potent versus TCP options which are completely negotiated so somehow it\u0027s like there\u0027s an in-between here but I\u0027m not clear what that in-between is or if it\u0027s even if it\u0027s possible to have something that\u0027s robust in between those two I think let me not ants this is presentable answer this as a chair I think we should be clear on what that means I have ideas about what Tom means in this space and I have ideas of what Joe said in the space but um the draft text needs to reflect that in a way that other people understand less Christian we tomorrow I have a concern about using UDP options in general when using encrypted transports uh-huh because I mean take the example of quake there\u0027s absolutely zero chance that quick will consider anything that is outside of the encryption algorithm I\u0027m not sure why quick would want to use UDP options to negotiate over between the endpoints because quick already has mechanisms for doing this yeah and so so basically we we have to be very clear about the applicability statement I think anything encrypted is more not applicable anything in which the application does end-to-end MTU discovery that\u0027s why not applicable either because if you do end-to-end PMT you discovery you are very likely to use some kind of comm fragment option in which case there is no space at the end of the packet yeah not sure I understand the last one well the reason you diversification - and - and do MQ discovery is because they don\u0027t they don\u0027t want fragmentation which which flavor of MTU discovery so and do you mean the path MTU discovery Network layer or they okay so you mean something like DPL p.m. tud algorithm okay fine yeah so you do that to find the MTU yes and then once you have found "
  },
  {
    "startTime": "00:39:44",
    "text": "the MTU will you typically do is it you\u0027re going to send packet at exactly that legs and but the don\u0027t fragment bit I don\u0027t know whether you work because you know you\u0027re combining the PM tud semantics with the pl PM Tod semantics which I\u0027m not sure is a good combination I think you can do this but you end up with two algorithms creating two controllers and I think you could have a third controller actually because if you use UDP options with quick and path MTU discovery with DF underneath you\u0027d have three ways of doing them - you discover at the same time which is never good and probably isn\u0027t good for security I\u0027m certainly good isn\u0027t good for performance don\u0027t do it more than once okay and Christian I think I heard some use your comments which is that we have to be careful about level reliance on these because the application can arrange there to be no space in the UDP packet to put anything well just the application that\u0027s the option so yes Sherpa and we may need to rethink this through an introduction strip you need to be careful here particularly if the application is structured as stuff that does useful work on a shim layer that uses options to get the network to behave you can get back into the corner Christian\u0027s worried about tunnel era I agree on the level that you don\u0027t want to use UDP options with quick right yep but first of all it\u0027s both under control at the endpoint say if you should hear it sudden the foot it\u0027s like your control and then I think it doesn\u0027t matter it\u0027s not a concern for this document this is like an extension to UDP if you don\u0027t want to use UDP option is quick that\u0027s a recommendation you should give in the quick document would be fine with me my culture is typing I could take anymore questions otherwise I can stop pretending to be joking okay the one thing I would request is that we try and get your to publish and frequent updates so that we capture what\u0027s discussed on the list in the draft right and the action I\u0027m coming to the chairs out of this is both this draft appeal came to drafts we need to have a need to talk to the talk to the quick chairs and make sure that we have a compatible plans for when when when things move I\u0027ll tell myself "
  },
  {
    "startTime": "00:42:49",
    "text": "[Music] excellent all right I\u0027m Eric near Tommy and I have a draft out for using http/2 as a transport which we\u0027ve discussed a little bit previously in HTTP biz but we wanted to bring here as well because a lot of it is using HTTP too but as a transport and so a lot of the kind of transport properties of that come into play so I\u0027m going to kind of bump briefly through the how we do it and what we\u0027re doing so that we can talk a little bit more at the end I\u0027ve got some questions of you know how much do we address different topics and different potential issues and kind of how do those apply so in terms of motivation we\u0027re looking to have a generic transport for secure arbitrary byte streams and we want to do that over multiplex streams on a single underlying transport connection there\u0027s a number of ways to do that quicks going to be one of the future ways to do that but we also want to be able to do that over TLS and TCP in a way that looks like something that actually gets across the internet some of the benefits we get from that are the low set-up cost for new streams we want to have a single congestion and recovery context so if we know that we\u0027re sending multiple streams worth of data to the same peer if we can share a congestion context then we are effectively you know using that link to its its best ability and can use all the information about that data actually getting there we also want to be able to use this for peer to peer communication and this is where we start to do things that aren\u0027t as traditional in HTTP Lent where we want the server to be able to open a stream back to the clients so once I\u0027ve got this tunnel established I want to be able to make a new bi-directional byte stream in either direction and have either side initiate that and then send my data across it one of the example use cases for this is remote IPC or other associated things and we want to share this underlying transport with existing infrastructure if possible so this is kind of a nice to have but it is nice to have a situation where you already have an h2 connection to some server because you\u0027ve made a request to it or something like that and you\u0027re sending normal HTTP to streams with requests and responses and at the same time I\u0027d like a white stream to that server to send other data with its own framing or its own protocol I\u0027d like to have that share the same underlying transport connection a little bit on why we\u0027re trying to do this within HTTP to effectively hb2 gives us a really nice framing layer that has a lot of transport features that we\u0027re looking for we have a configuration exchange "
  },
  {
    "startTime": "00:45:51",
    "text": "which leads us to a very nice extension mechanism which is how we\u0027re doing this in the first place it gives us the stream multiplexing it gives us the stream state machine that mirrors other byte stream like TCP state machines fairly well it\u0027s pretty easy to map that one on top of the other we get that shared congestion control we get that shared recovery state we get flow control so we can have per stream back pressure we get stream relationships and priorities which is something that you don\u0027t actually get if you just open up a bunch of TCP connections or TLS connections and it\u0027s also kind of nice because it traverses the internet pretty darn well at this point a lot of the properties that we\u0027re getting here in terms of the shared congestion control and the shared recovery state are actually coming from the fact that h2 is going over TLS and TCP so it\u0027s not that this is purely something that HB 2 is giving us this is the entire set of that connection and the underlying transport that it\u0027s already using we\u0027d like to be able to reuse for additional streams going to the same place very briefly just the mechanism by which we do this which is not necessarily the thing we\u0027re looking to discuss the most right now and there\u0027s been several proposals on how to do this many of them are equally good right now there\u0027s a connect method in HTTP that lets you establish a new connection from the server to somewhere else and tunnel your bytes through it on a particular h2 stream and for WebSockets there\u0027s an extended connect handshake defined that allows you to not just use connect to tunnel through the guy you\u0027re talking to to someone else but also establish a new stream directly to that person this is nice because it also allows us to potentially proxy UDP if we stick some framing on there some of the reasons to use connect over the alternate proposals are you can always stick extra stuff in these GP headers for additional negotiation of what the next protocol is going to be which is one of the discussions that\u0027s come up so far is how do you know once you\u0027ve got this nice byte string to the other side what you\u0027re going to be talking on it and and to make sure that everybody\u0027s coordinating properly and it also can coexist really nicely with existing HTTP request and response streams so you can be making requests and reuse that same connection that you\u0027ve already got there you\u0027ve already opened up the congestion window you\u0027re already having a very nice effective conversation with somebody let\u0027s reuse that without having to handshake all over again it\u0027s for somebody new in order to do this basically the extended Connect handshake for WebSockets defines a protocol pseudo header which currently has one value WebSocket and we\u0027d effectively defined two new values one for byte stream and one for Datagram byte stream maps to hey this is a byte stream and I\u0027m going to send you a stream of bytes Datagram map - hey I\u0027d like to send you delineated messages and I\u0027m going to use some framing on that the actual wire format of the framing is not yet in the draft and that\u0027s come up on the list as well so we can bike shed the precise format that gets used there at some other day "
  },
  {
    "startTime": "00:48:51",
    "text": "but effectively this allows you to say hey on send any messages that I\u0027d like to come out delineate it on the other side or I\u0027m sending you a stream of bytes which you can feel free to repackage however you choose as long as it maintains its order so that so far just by adding the two new protocol values gets us most of what we\u0027re looking for with the exception of this piece for peer-to-peer communication because right now the server is unable to send that back to a client and this is like I said useful for remote IPC if you\u0027re trying to talk between two different peers it also comes in a little bit handy for quick so quick is interesting because unlike you should be too quick splits out the transport layer from the HCP mapping on top of it and this effectively brings that concept back into htv-2 so if I\u0027m using HTTP 3 and that\u0027s mapped on top of quick and I discovered that I can\u0027t use quick on some network or it\u0027s been disabled I need something to fall back to so I fall back to HTP - mapped on top of TLS and TCP if I\u0027m just using quick transport as a transport protocol without the HTTP mapping on top of it and I discover that I can\u0027t use that because it\u0027s been disabled I need something to fall back to and so if I\u0027m just doing quick transport this effectively provides you something you can fall back to that\u0027s going over to LS and TCP and is going to be the analogous fallback as it were from the htv-3 to HTTP - so all those nice transport features that we get from HP - are also transport features provided by a quick transport TLS and TCP come together to form what\u0027s missing from quick transport which is the reliability and the congestion control and all of the rest of that so if you put those together you effectively have a nicely mapable transformation from quick transport back to HP to transport so we take our existing solution which is defining the Additional Protocol values for byte stream and Datagram and we defined a new setting that allows us to negotiate this as a further extension on top of HTTP - that says yes I\u0027m willing to process these frames in a direction that other people would be very confused by and allow the server to send me a connect request saying hey I\u0027d like to open a stream to you and we\u0027ve gotten a couple people have have spoken up already with interesting use cases for this that we had not yet considered but that are all equally great and and where this comes in super handy so effectively what we\u0027re trying to do here to kind of recap why we actually care from a transport perspective is if we can share multiple connections and byte streams to the server if if all of that can go over a single underlying transport that helps us out a lot it also helps if we need to "
  },
  {
    "startTime": "00:51:53",
    "text": "be proxying UDP traffic which is one of the things that\u0027s come up through some of the helium and hint stuff that Lucas has been doing as we start trying to make more room for that this gives you a framing layer and this gives you a way to to traverse the bits of the network where you previously couldn\u0027t and this also gives you kind of built-in security the same way that you get with quick transport and the same set of you know low-cost set up for new streams and and all the benefits that come with RT having a relationship established with the server and existing communication flowing between you and them the bi-directional part of the connect handshake lets you do the same thing for pierre-pierre and pulls in the quick use case which i think is about to become much more significant so the big questions that we have here and the reason why we\u0027re trying to talk about this so much from a transport perspective is as you start to do this some of your assumptions about what you\u0027re provided by the network change and the biggest and most this one\u0027s here are things like now you have head-of-line blocking in a place where quick transport previously didn\u0027t you now have some very interesting questions about what you do with connection limits on flow control and and how do you manage the credits for balancing what might be a reasonable kind of credit for a request for a response where you\u0027re expecting fairly small data to go in one direction and larger data to go in the other where suddenly now you\u0027re sending a differently defined protocol that that may have a completely different pattern of usage of the transport and can those coexist within the same context I have an additional items bullet here as a there are probably other things that come up I know we have a draft that we talked about previously I think in Montreal about trans encapsulating other things within TCP and that hit upon some of the same now your multiplexing multiple flows over a single underlying flow here are some of the concerns so this may be somewhat of an extension of that conversation we also had a bit of a question of how much we want to make this a little bit more generic to discuss how this applies to many other multiplex transports like SCTP etc how much do you reference that include it talk about it as a brief kind of strawman proposal for how you handle this in an interaction sense the current thinking is that you would both allow introspection or discoverability of what happened so if I say please get me a connection to this other place I would like a new stream there and I was expecting it to be over quick transport but now all of a sudden it\u0027s over h2 transport I suddenly have head-of-line blocking I may want to adjust my "
  },
  {
    "startTime": "00:54:54",
    "text": "behavior or the amount that I\u0027m I\u0027m balancing fairly what I send on different streams etc etc so you need to be able to say hey now that I\u0027ve connected what happened what are the properties of the transport that I\u0027m going over now and then there\u0027s an entire other subclass of people who are very likely to want a stricter mode where they say prohibit this and basically I I cannot handle having head-of-line blocking my application I would rather not connect then connect and experience some of those those caveats so you that\u0027s currently kind of the bimodal approach that we\u0027re taking but that\u0027s where the that\u0027s where the questions and the ask for a discussion comes from yes what\u0027s the name of the draft name of the draft ah um yeah we didn\u0027t get a drop name the title so uh it is using HB 2 as a transport for arbitrary byte streams which is currently draft canary HTTP vis HP to transport - PO 1 okay david black from from the floor so we have additional on have additional item for you the first approximation what I\u0027ve got is yet another way of tunneling UDP over something which means you need to put on your what goes wrong with tunnels and framing and the first thing that goes wrong is them to you so please think through MT MT you from the start if you\u0027re running basically you\u0027re running UDP over what looks like a very funky link that link has an MT you see the ante area tunnels drafts for a lot of a lot of useful thinking not all of which will be applicable because there\u0027s an awful lot going on in this going on in in the stack under you this is particularly important because if you make this work sooner or later somebody\u0027s going to figure out how to Gateway this into actual UDP over IP from the far side yes that is a very good point well make sure to pull that in yeah Spitzer Dawkins responsible area director for this working group for about forty five more minutes so I I think I just want to follow along what David says and I think you know you\u0027re you\u0027re definitely pushing and on this is an interesting play in interesting ways and I think you\u0027re doing it leaves some of that conversation in the right place here thank you for coming here and bringing it I think I think david has a good idea but understated the possibility for the stuff to be stacked up in doing exciting ways with other stuff I\u0027m waiting for somebody to be running MPLS over UDP over this challenge accepted over here with my left so like I say things I just "
  },
  {
    "startTime": "00:57:55",
    "text": "remember you know you\u0027re looking at general-purpose protocols you really don\u0027t have a lot of control over where people might use them so you really need to be thinking about what the worst thing that could happen in all of our collective imaginations as you\u0027re doing that yes and and especially as we look at other references to pull in and and some of the existing work there is I think you mentioned at least one and there\u0027s a couple more that people have pointed out to us that are that are really good to pull in so we should make sure that we at least reference them and hopefully pull some blob of text to say hey like if you think you\u0027re going to do anything in this area make sure you thought about this and if that sounds scary to you go read that so tell me Paulie as a author just a question on process stuff because I know we\u0027re quite out of time here when we originally presented this to HDTV Biss they said hey cool that you\u0027re doing this please take it over a transport to see what they think and AD sensor here agreed so we\u0027ve done that here I think there\u0027s a lot of good advice that you\u0027re bringing up I think these are things that would need to be incorporated into the document I guess the question is does this go back so we have an agenda item two on Thursday talkback page you be best to say what did Transport think and so we\u0027ll summarize some of these things what do we want to do as far as moving the document forward is this something that we just do an HTTP and come back here to say please review our transport bits or the other way around oh yeah I would like to go on this one because I don\u0027t answer the question but can I give a hint at the answer to the question and if it was to come here we would want to talk to the Intel people about tunnels and the usage they have of this but we would like to do the scary stuff about how the transport functions work it sounds like that\u0027s the place where the scariness is but the clue for doing this it looks like a synapse so it\u0027s gonna fit between all of these things I have no problem currently as a working group chair and giving you time here to discuss this and I think this place is the right place to discuss some of these issues where your home is I need to speak to somebody with the relevant colored dot a yellow doctor to figure out who actually wants to take home that we\u0027ve worked with documents that go across areas and I\u0027m sure that\u0027s fine I do think the transport properties and the transport features have to be dealt with first so I really would encourage you to come back here and work on those here irrespective of where the final working group is there\u0027s some answers at the mic and he still got a yellow dot at this moment it\u0027s fading mr. Dawkins again and I mean you know seriously you know what we\u0027re pretty good at stuff that fits in one area and cross area stuff is it is a challenge but it\u0027s one of the things that separates the IETF from a lot of other SPOs a lot of other technical organizations "
  },
  {
    "startTime": "01:00:55",
    "text": "so making this work well will be a challenge I hate to be the one to echo what has been said before but it will be a challenge but it\u0027s really important and I think this was actually one of the better places that you could take a shot at that so like I say thank you for bringing it here and good luck and I will help as much as I can help about dots and I\u0027m doing it I was just going to say you know it\u0027s turning into a tunnel there for ecn considerations and mr. mister congestion Charles yay oh yeah and what I was going to save something along the lines of what both Spencer and gorya said which is that such first one like my reactors a lot of the draft content is going to belong in HTTP bits because it\u0027s going to be highly specific to exactly how we how how how HTTP 2 is being used to carry UDP nonetheless are crucial technical issues here this does need to be spanned across both working group team and the incoming ad might even want to assign one of us or someone from this community as designate victim to make sure the transport issues get dealt with appropriately in the draft one of the things that\u0027s interesting is we do have that other document about some of the tunneling and the other concerns there so it it is one possible way to take this is to stick the H be specific you know we\u0027re updating a registry that already exists do all that stuff in Asia P biz and have that be very tightly coupled to have a lot of the considerations in there just because you don\u0027t want people to miss it if they read the main document but have the other one that\u0027s here that that is much more in-depth on the on the tunneling considerations I\u0027d actually prefer one doc that\u0027s totally knows the food they otherwise the the person who\u0027s not clued in to what we did reads a summary doc and doesn\u0027t understand where the bodies are buried reading lists are hard to make by myself yes but it\u0027s alright right let\u0027s put Travis as long as you recognize that there\u0027s one document at the end yeah you want to get something captured right short draft um we will go and talk to the author\u0027s on the 80s and he\u0027ll thank you I mean work we\u0027re out of time but we wanna try to get one one slide maybe chew up on what the SCTP r-tx bid is let\u0027s do that quickly so this is a new individual topic so I guess heads up this is something to look up yeah exactly so so this is a draft where I try to solve the problem where setp cannot distinguish if suck acknowledge its original data or retransmitted data and the idea is to "
  },
  {
    "startTime": "01:03:56",
    "text": "just reserve one between data and suck chunks since both hands are imported requires negotiation urine association establishment and there are two basic rules if successfully negotiated then a CTP should set they are meet every time a tree transmits data or I data and when data or I bet with rbt\u0027s received the city must immediately respond by stock in our bit set so from that sack when stock is received back we can distinguish if sock doesn\u0027t include our bit it means original data is acknowledged it if it includes our bid that is retransmitted one I mean it\u0027s straightforward for implementation there are a couple of challenges the first challenge is that if the same data data was retransmitted multiple times then you can distinguish between those retransmitted data but still it brings you some some possibility to at least detect spurious retransmissions so and the other challenge here is that if you get packet which includes data\u0027s build and without ER bid it brings some complexity of implementation because then you need to send back to acknowledgments one with RB them develop the other one without our bid so the current version is 0 0 and there are a couple of DVDs the main TBD is state recovery after spirit transmission detection so we we need to describe it it\u0027s implemented in Arizona city B but only enabled between Arizona city endpoints we have local patch of Linux City beef very simple implementation without negotiation just started some fears into probability which is successful and our plan is to to work on tivities hello so and continue into probability with Linux SCTP and we encourage encourage people to click back on this draft and if we don\u0027t have serious objections negative feedback we like to adopt it in the world room or ever slightly higher bar I think I want to see if it actually gives a benefit to enough people to want to adopt it so so and the and I would like to see some performance and analysis of the results as you go forward and we can make help that to inform the adoption yeah ok and any languages thank you for presenting any questions I really think the question is can we take it on the list we\u0027re short of time yeah thank you um this may come back again but please read it on the list and please comment on the draft if you\u0027re interested in SCTP this may be a useful feature or maybe something you want to experiment with or maybe something you don\u0027t want but please discuss on the list we have "
  },
  {
    "startTime": "01:06:57",
    "text": "any last question last comment thank you ever so much for coming to TS vwg the next meeting will be at the next idea please use the mailing list thank you ever so much bye bye thank you "
  }
]