[
  {
    "startTime": "00:00:04",
    "text": "but you're creating it commercially for your own company yeah yes yes very good and I think still there's no sound I don't know why how about now yeah that's fine that's fine yeah I wonder what happened are you still seeing like uh places where the spec is unclear in general it's fine but I think I'm a bit based here because since I wrote a part of it I'm not sure yes but at least it it makes sense from what I'm doing it makes sense um but then I'm not entirely sure someone that's not participated in in the writing of it will understand everything and I'm not sure it's um but at least it's going well hi Justin hey Justin hello okay I think I've got everything unlocked on my browser here now took a moment good Justin do you have any slides or is it uh no no slides prepared for the day uh"
  },
  {
    "startTime": "00:02:02",
    "text": "we've got the the only change was the uh the set of diffs that went into the latest Draft so I figured we could talk about that directly maybe view the diff itself directly um but no slides on top of that I think we lost your audio though we had the same issue a few just before you arrived gotcha foreign yes yes loud and clear nope yes yes we can can you hear us okay can you hear us I can hear you no wow okay well okay now I can oh okay oh good good I was afraid we were going to have it be uh was that that's a single mutex audio"
  },
  {
    "startTime": "00:04:01",
    "text": "Kodak if I remember my multimedia codec days Simplex simplex anyway that's right here we go there's exactly one participant on the list I don't recognize and I don't even know how to read it so okay we have one more person joining all right is Leif uh gonna be joining us do you know I haven't heard from him okay foreign well not Quorum um but then we will need to run things on the mailing list that's always required but this time it's not only formality we"
  },
  {
    "startTime": "00:06:04",
    "text": "need to get some packing to move forward to the isg yeah uh we posted to the list after making the changes um but nobody nobody responded at that time yeah happy to go through them today uh do you want to share or should I please do okay um all right so I did the screen share request over here and you have to this is pretty good for something okay share my screen let's see if I'm gonna okay there we go all right okay um so there were a couple of changes in the latest uh draft um most of them uh most of them small editorial uh things like rotating the token's value instead of rotating the token just being more precise there the biggest change you can actually see starting in this example and that's the token management like we talked about in Yokohama um instead of token management uh now being based on just a URI um it is now set up much like the continuation uh response in that there's a URI and an access token uh structure"
  },
  {
    "startTime": "00:08:01",
    "text": "that goes with that the access token is mandatory here it is this is the text that defines it um so the manage field uh when it comes back with an access token object it means that you basically uh you get a special access token just for managing the access token and and for nothing else um previously we had used the token itself to call the token management API um but uh there was pushback on that during last call and after discussion we uh we backed that off and now are using a separate access token for accessing that API uh this is a little bit more complicated but it is parallel with the rest of the um with a lot of other functions in the draft and um in fact most of this text we took from the continuation token text that's already been um uh discussed at length uh in the group so two Fields here the URI that you call and then the access token that you use to call that um it has the same constraints that the continuation token has um which is to say it must be bound to the client's key must not be a bearer token which means the flags array must not have the string pair and and the key field must be omitted um also to prevent uh infinite recursion the token management access token must not have its own token management access token for managing the token management token"
  },
  {
    "startTime": "00:10:00",
    "text": "um so basically this is a special use token and if it stops working then it just it stops working there's you you have to go get a new access token um from from the grant API and then I have uh that's a simple can I have simple implementations that don't know about the management token and the the base access token just expires and that's that yep yep you don't uh returning the manage field is optional entirely so you can you can completely have an access token that just dies um or is manually revoked or anything like that and then you don't have to worry about this and this one of the reasons that we were uh we were comfortable with doing this is that uh that's how most of the implementations we've seen so far are built they just have simple tokens that expire and then then that's the that's the end of it um but the feedback we got um from the uh from the thin Bose folks and from um uh the uh the Gen folks gen digital is that uh if they were to implement this then uh what we had had in the draft previously where we were using the same token value was uh was not going to be um easily implementable for them um but separating it out as a separate field that they could track was a pattern that that you know we've already already done in a lot of ways it's similar to the oauth 2 refresh token uh with slightly different properties but uh a a similar"
  },
  {
    "startTime": "00:12:01",
    "text": "idea of using a separate value to control access to uh to token management this also gives you token revocation capability at the client because that's all it's all part of the same API so along with that definition we of course changed the token management API specification down below um so we now no longer have this if it's sender constrained if it's Bearer blah blah blah it's always just the token management access token uh that's always the one that's used and similar to the continuing continuation API you must uniquely identify a token being managed from the token management URI token management access token or a combination of both of those so just like the can uh just like the Grant Management API it's the same same set of constraints which I think simplifies a lot actually yeah I I think so as well uh we're putting less weight on just the API and allowing or sorry just the URI and uh allowing the as to uh make some deployment decisions there but from an API point of view there's no change I mean yeah there's it's still a token protected endpoint it's just which token you're using to protect it is now different but the management apis on change uh yeah the actual management apis themselves uh are not changed um sort of what the as has to do with it is simpler now um because we don't have to have all of this if the tokens expired then you can"
  },
  {
    "startTime": "00:14:00",
    "text": "still rotate it which was the source of uh uh contention and we also don't have to have the if it's a bearer token then don't treat it like a bearer token uh text which is which was also confusing to people I think a lot of this comes from this being a less uh a much less exercise part of the specification um so uh I think that's why we're only hearing about all of this now even though all of all of this has been in this fact for a very long time and those are really the main changes um you know there's a little oh uh there is key rotation um which I can go into in a bit uh once we're done with this topic that's why I wanted to pull up the diff to make sure we didn't miss any major topics but this is the difference in the token response so instead of a managed URI you get to manage URI and token value thank you before we move into uh irritation do we still have any outstanding issues um no we do not hearing uh yep all issues are closed amazing yeah there was uh one other issue that got raised about um uh interaction uh responses and sort of bundling the Finish methods and things like that um and we talked with the author about"
  },
  {
    "startTime": "00:16:01",
    "text": "that uh on GitHub and um proposed that that might fit as an extension and they agreed so we closed that on we closed that one under needs text and because they nothing's been proposed yet but those those were the two outstanding issues all right uh so if we're okay on that topic I can talk about the the key rotation changes yeah let's do that um so there was actually a um a uh security report on HTTP message signatures uh about how we were proposing it being uh getting used um namely signing the signature value in order to compound signatures um and that's what we were using to do uh key rotation in gnap um and so we fixed uh we fixed HTTP signatures there weren't actually any protocol changes there but the advice on how to apply it changed a bunch that of course affected uh both gnap which we have here I'll talk about in a sec as well as the fappy profile of hdb signatures which was doing the same thing um so the the researchers were right to call this out and and carefully explain why uh why it wasn't a good idea because uh several groups saw the obvious um use which turned out to be turned out to be not very good"
  },
  {
    "startTime": "00:18:02",
    "text": "um so in any event um key rotation previously you would just sign the old signature value um so yeah and that was it so that's the only change at the HTTP signature layer nothing at the gnap player really uh so I took an app layer the requirements for doing key rotation are now you sign the whole request again including the signature and signature input um so previously you could get away with just with just this line and now we're saying no you actually have to tie it to the entire message because you don't get the transitive signature property that we thought we were getting before so you're still doing HTTP signatures you're still applying two signatures in order uh but you just also have to tie it to the rest of the message in order for it to be considered secure is there any hardship at the implementation level that you see here no because this is all stuff that you would have to do uh to apply the first signature anyway so you just need to save the the individual fields and verify them when they come back yep yep exactly which you have to do to verify the first signature anyway now it's just you have them both in both signatures instead of uh only applied to one signature and the up and the examples here are updated from uh from the script that generates all of these"
  },
  {
    "startTime": "00:20:06",
    "text": "when we do have the application tag of gnap in the example now oh we did before okay we did do that before otherwise that their authorization had uh signed kind of at a different layer to me so this is the call to the um the since this is key rotation this is a call to the either the token management endpoint or the um uh Grant Management endpoints so those are both token protected uh which means that the access token itself is bound to the key and so signing the authorization header value uh shows that you are presenting this token value underneath this particular key yeah okay with HP signatures we were very deliberate about not using the authorization header to carry the signature itself which previous drafts of the signature the signature scheme uh did allowed that which I think does conflate the different layers and just out of curiosity you said that this also applies to Fat pay is that a"
  },
  {
    "startTime": "00:22:02",
    "text": "profile of Fabi some specific like variant uh so fappy has the HTTP signatures uh or signed HTTP requests or uh subsection uh uh so there's the core fappy and then there's a couple of sort of additional documents one of them is about signed HTTP which uses both HTTP signatures and all of the oauth Jose methods like you know jar and charm and Par and all of this other stuff in order to uh to tie everything together thank you so flappy has a similar requirement to sign uh to sign the authorization header but also you know method uh method uh I don't remember if they do Target URI or just at authorization digest if it exists pretty sensible set of defaults and yeah that's um that's that's pretty much the set of changes uh there's a couple of editorial updates but those are the two those are the two big ones and that should address all of the things that came up in last call uh both in ganapa and in HTTP Sig that we depend on"
  },
  {
    "startTime": "00:24:06",
    "text": "all right looks good so what I suggest we do is I will send an email to the list saying everything seems to be closed no issues blah blah blah and if there are no additional comments coming in within the next I don't know week we will write shippers document and move it to the ID okay so default yes but we're still I still want to run it but by the mailing list absolutely um so hopefully we can get it into at least uh at least 80 review space um before San Francisco um and uh yes maybe I'm optimistic but maybe iesg review bye then at least for court yeah and then we probably don't need to meet in San Francisco which is yeah interesting well we do have the uh the RS draft uh not a lot of changes on that but uh any plans on that one before San Francisco we need to add the uh we've got the token model section so we need to add this token management token to that uh that's the only thing that jumps to mind soft Fabian just came off mute though so yeah yeah no there's a few things uh"
  },
  {
    "startTime": "00:26:01",
    "text": "yeah we could at least publish a new version okay sounds good I don't think we need a long meeting though in San Francisco I am planning to be in San Francisco anyway it's a it's a relatively simple trip for me at least it's not International yeah it's a longer trip for neighbor I'm planning to be there okay yeah I won't be there I'm ex my wife is expecting a child so oh congratulations thank you all right I think this was it thank you very much thanks a lot bye-bye bye"
  }
]
