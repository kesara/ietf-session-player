[
  {
    "startTime": "00:00:17",
    "text": "K we'll begin in second. So folks wouldn't mind settling in. Okay. I think let's begin. It's extremely late. So I just wanna make sure that the don't go longer than we have to. Hi, everyone. Welcome to the Ob Http application mediation working group. Session at f one sixteen. We are your chance, Siobhan and Richard? This Yeah. This is the Of note. Please do not well. By participating in the you agreeing to follow It processes and policies and code of conduct. So do you read that at some point? Some general notes for the meeting. Guys. Some general notes for the meeting? If you're here in person, then please do use the on side tool. For queuing up helps with key management. And if you remote then just make sure that you're you are often unless you presenting or sharing or speaking, And as a reminder, there's a mask policy masks must be worn. And Yeah."
  },
  {
    "startTime": "00:02:01",
    "text": "There are no exemptions and unless you're an active speaker, which is means basically here. Yeah. We have no takers, so thanks to Chris and Martin for going to take notes. Also wanted to say that the main protocol draft o has been submitted for publication. It is in the Rf editor queue. And there was a few discussions that the authors work through and thanks that for that and then... Yeah. I think got congrats to looking group for for doing this. Take thanks to the authors for working through some complicated there. Yep. Thanks richard. And... Yeah. I think you can begin tommy? Did you percent? Yes. It says you have control. Control? Alright. Good afternoon everyone. So As we know our core High documents or ships. So we'll be talking about our other adopted document, which is about one of the discovery mechanisms that we can use for O specifically how we can discover the gateways. And I'll jump right in."
  },
  {
    "startTime": "00:04:04",
    "text": "Great. So as a recap to what this is doing, this is for a model where we have some target service that we're trying to access as an oblivious target resource. That has an associated oblivious gateway And a client would like to discover that this target has associated gateway. The client is zoomed to already have or already know about the oblivious relay and one of the constraints for this model that came out through the discussion in the analysis was that the gateway and the target for this type of discovery, essentially have to be c or at least have their resources on the same origin. So recently, we did make round of updates for this right before the draft right. It was based mainly on the things that we discussed last time, so these things should not be hugely new. One was a lovely bike shed. We renamed s parameter and all of the other strings to Oh, they used to be oblivious but works better is also more consistent with the core doc. So, yes, this influenced the well known Uri ui. And then the other major thing is that we clarified the behavior for using oblivious H for Dns. So I'll re recap I'll go do a little bit more detail. Of this. So here are the examples we heard these before, But now they're updated. So they having green these strings that or o instead of Bounds oblivious."
  },
  {
    "startTime": "00:06:00",
    "text": "So again a lovely bike should. But just so we walk through what we actually are doing here we have a Dns record that we get back when we're looking up a particular service. And along with other things like the Lp, he can have a perimeter that says I support. Which means that there is a gateway associated with this. And so this can happen for an H https record can happen for an S records such as that Sv record that is describing a Dns result. So once you have that information, the client could look up the... Well, they can derive the location of the Oblivious gateway. And they can also look up the key configuration. So the oblivious gateway is defined as a well known Ui. Off of the same origin as for the same host. As the target service that you're trying to access. And this gateway could you know, redirect or something, but it has to be owned by that same origin, so we can be sure that actually is a safe thing to use. Then to get the key configuration, we have a way to also go find a well known location to look up the keys. So then the other major clarification was around the Dns behavior So is the model where you have o h p being used to transport dough. And so this is do which I Yeah. Or do duo. I think we actually you should pronounce a duo. Is the the new make this in here. Similar to O, but it's different spelling so it's duo. So essentially, this is just a case where you have standard any H oblivious history three messages to the gateway."
  },
  {
    "startTime": "00:08:00",
    "text": "The content of those binary H messages are dough messages. And so it's quite straightforward to just compose those two protocols. And you can discover this using the Dns towers over the Arp we defined from the Add working group. So that's a great way to learn that the local network you're on and what whatever Ip address you had configured for your Dns was over. Also supports connecting over duo. And we did note that when you're doing this, we still need to have all of the server certificate? Validation that is required when we're discovering a dns. It was all in this way. And this I believe it's actually a pretty straightforward thing to do since we have to fetch the key configuration anyway for the oblivious Http dns server. At the same time, we can validate that it has the certificate that matches the requirements of a discovered dns server. So that's the changes that went into this most recent version you can read the diff yourself as well. So like as, know, as as a preview, my next slide will be think the main issue we have left is consistency. I would love to hear if we have other issues beyond that. But I I think the major gap which we talk about a bit in the document but I think needs to be fleshed out further is how we have good models for consistency and there two main areas of consistency. That I think are relevant here. First, we have the key consistency, so we do have the key for the oblivious gateway and that we look up with the well on your ride."
  },
  {
    "startTime": "00:10:01",
    "text": "There are different approaches you could do here. We could have our double check type of approach. Where we do, like, a a get style reverse proxy, potentially using the oblivious relay to find this. We can also do. Forward proxy silent and check that the key config we get in both manners is the same. You could also just have a model where you check once directly with through connect proxy and then you also ask you relay. Hey what do you think the key config for this? Target. For the gateway is and see if it's the same. This... I think all needs to be written out in more detail. Would love to hear people's input on what we should do here. Chris, do you wanna comment on this one. Yeah. And the privacy pass meeting on Friday, there's gonna be a section dedicated to he distance for that particular protocol. I imagine whatever comes with that particular work would equally apply here. So I don't know if you're looking for a specific like standardized mechanism or more like considerations for consistency. I think that is a question of For mechanisms like this in general, consistency is very important to get right to actually have the security model we expect. Yep. So just under Is it enough to just point out vaguely to you must do consistency, That's, you know, one extreme. We could have another model where we mentioned and describe non norma, several of these approaches and how they work. And we could have, you know, works stream model where we it give like a really detailed Algorithm rather try to be more norma if about it, But I don't That's probably going a bit too far. Yeah. My my sense is that since we were comfortable doing the first option for privacy pass we could just do the same thing here. And then like, lean heavily on that, like, informational draft then potentially"
  },
  {
    "startTime": "00:12:01",
    "text": "a more mechanical standard track traffic that comes of that work. So that is... Don't put any, like, stuff in here just say, like, see consistency you you must do consistency see this other document for information. Yep. That's that seems like a reasonable welcome outcome here. I don't... I because like, the consistency thing might take a long time depending on how complicated we ended up trying to make it or intentionally trying to make it complicated, but like, the actual solution that we might end up like standardizing might be more than double check which is like you know, pretty simple. Right. I mean, what I I I do find it a little bit un to yep merely punt consistency, if that is not flushed out, I would potentially lean towards Yep. Pointing out to you do whatever consistency eventually says you should do and maybe give one concrete example of here is a way that we believe works. Of, you know, some form of double check or a check with relay approach. I guess I'm curious like, why treating privacy pass differently in this case. Like, we don't do that for privacy pass. Which also has, like, very, like, important important consistency requirements in order to, like, achieve the desired properties. Whatever we do here, we should just be consistent across these two things. No. Nope. That's pretty meta. But, Like Maybe we should double check. Yep. Ben. Wanna go ahead. Hi. So I agree that the key consists problem is the same as privacy das consistency problem. We we you know? We should be said we could we should say the same thing here as we say privacy plus. The Doe path consistency problem is quite different. And Yes."
  },
  {
    "startTime": "00:14:00",
    "text": "I don't have a very strong opinion about how we ought to solve that. I think it's worth doing something. I think that limiting, like, just declaring it that it's a default, we're limiting it to a default is like, kind of flexible but not unreasonable. But having that default slash dns n s query, strikes me as a little bit of a problem because it squats on a portion of the valid Http name space. And in the past when we've tried to do that, the H P have told us we are in the wrong place. And that we should go to dot well known. And so, like, know, maybe we could just hard coat of path and dot well known for this. That's interesting point I mean, I I think to some degree it's that the unfortunate nature of dough that we don't use a well known, but every single dose ever encountered use the same path. And it is slash dns s query. We could do something, you know, Cage like if the client receives an extremely common path I e. Ds query or something else that comes along that standardized is a well known. Then it's not interesting to try to double check or verify that your path is consistent. If you get a weird path that you've never seen before, then you should check it. Make sure you're have being targeted. Yeah. I mean, the history here is that dough originally tried to say, we're just gonna use a dat well note and at the time, that also, you know, basically, we got the well known for static metadata. This is not metadata about the origin, so you can't put it in that well down. But maybe the it seems like maybe the treatment of that well known has changed since then. So"
  },
  {
    "startTime": "00:16:01",
    "text": "But Anyway, I think we'll we'll be able to come up with some kind of solution here. And I'm happy to help with that. Cool. But yeah it is a good point. I I agree with you that even if we copy the text from privacy password for key consistency, the doe path consistency is a unique problem. So we should address that in this document. Okay. Eric. Yeah. Mostly I I agree well but people said there's very complex stuff last tap of his key consistency and privacy passes working on graph specifically for that. And so we should let those be the primary draft consistency. I do think we either reference them and the draft though. We do need to say you must use some sort of key consistency here's the draft that specifies the general how do it. Here's specific one that we recommend using. And I think that's where we go. We been need to have them. Privacy pass has similar problems and is working on them and it was a thing privacy capacity, hey, these could be worked on either Ohio or privacy pass. When you pick one and set up the privacy pass. Those are the drafts we should be using. Consistently at least. Great. I I we we need to point to one of them and besides just that reference of this graph. Unless there's a little bit of Hey, here's the parameter you specifically for doing with o ohio. There's not a lot room for specifics. I've been pointing if I wasn't saying. This is what he use. Thank you. Okay. So update to point to privacy issues. Key consistency document add some text about path. And Guess the last question is we think there's anything else that we should address in this beyond that or once we've done that Can we wrap it up? Put on it."
  },
  {
    "startTime": "00:18:05",
    "text": "Take silence is yes. Alright. Thank you. Thanks. Two. Here Yeah. Just to put a go in that discussion, it sounds like if we can start working your last call once telling it's drive addresses the company you talked about here. Thanks. Did you want me to share? Yeah. Hello, everyone. I'm. I'll talking about Obvious backdrop. We have presented this draft I will couple of times with the idea of next slide, please. A quick recap on that is basically, if there is it overload of the target, then how would it signal the load back to the relay so that it would start rate lifting the clients, but at the same time, making sure the rate is not dion any of the clients. We basically leveraging should keep with potatoes. To publish quotas and service limit to the relay and not to endpoints. Next slide, please. Yeah. So one of the major feedback that we got we presented this chapter, but the last session was don't do any rate limiting meeting for client or subset of the clients even with all the mechanisms mechanisms that we had because that could possibly be is used by an malicious target. So what we have done is now we remove that all those mechanisms which were discussing limiting meeting"
  },
  {
    "startTime": "00:20:01",
    "text": "a client or subset of clients. And now it basically talks about rate limiting meeting all the clients and and it's some... We have used language to say that the relay is not supposed to rate limit eight or a subset of the clients. And we pointing back to some of the discussions with regard to if if if it if really decides to rate limit all of the clients, then how would you do that it it should be serving a a large number of clients and which should be still processing a good amount of messages from them and discussing back to some of the correlation avoidance that's discussed in the wire draft. Next slide. Yeah. So we have introduced a new o target quota policy parameter that gives signal back to the relay that it this policy to the relay. And it can opt in apply the rate limit or it they decide to skip and not on all these policies. Next slide. I think we have addressed all the comments that we help. Seen so far and we think it looks ready for working branch. Chris would So I've read the drafts, And I I I guess I'm not sure I understand, like, why we actually need this in practice. So for context, like, Cloudflare runs an no relay. Has not needed this. So is there like, a use case or a deployment that we know of that would actually benefit from this mechanism. Yeah one of the correct vectors that we we had looked into was, like, if there was an overload scenario that was created on the target and it wants to rate limit Right? Then it would start greatly meeting all the clients and There is no fair distribution of the request that are coming in. So"
  },
  {
    "startTime": "00:22:03",
    "text": "a message back to the relay help, fair distribution and not to penalize all the clients, for instance. Sure like, I understand like in principle that that this is, like potentially useful. I guess I'm wondering of, like, people who have actually deployed this and run relays. If they would actually use this and consume this signal and, like, use it for the benefit of, like, perhaps protecting. Yeah. That's my previous organization when I was working for a I... I mean I I hear some of the folks to worked on this that tip on this useful. But I I don't know who worked for the organization or I can't come. I think like, would be very useful to know if they could come like if they could like, state their interest in potentially using this thing. Because that seems like a useful signal to consider whether not adopt this. But like from my perspective from cross perspective, we haven't had any for this using this thing at scale. Yes. So, Chris, it seems like the need for this would be driven by a gateways targets or because you're trying to preserve the the uptime of of that resource. The silly question for relay operators being more whether they would actually consume this signal and do anything with it. You know, if some coordinate gateway where they were interacting you. So, you know, please don't don't send me so much like is that a that you could you could useful respond to? I guess that's what I'm saying. Sorry. Like, we have not gotten a request to potentially rate limit in any particular way. So like, we we wouldn't use a signal, I guess. Is that So to clarify. That yeah. That's that's the... That's what I was asking you. Okay. Great. You, I think that's okay That's an interesting point. So I think to clarify, Chris point, this useful feedback here would be from operators gateways or target resources, you know, is this risks that you're running into in practice and realized is signal that you would respond to or that you're hearing."
  },
  {
    "startTime": "00:24:01",
    "text": "From the the gateway gateways targets you're you're operating with. That this is a concern. They would want you to to respond to. To this is sort of a mildly related question because it it goes to the part of the document, which describes the impact severity. So you're pointing off to the business severity thing that Roman has. And I think the there's no difference as far as I can tell in the document that describes anything you would do differently as a relay depending on what the severity is. And You don't pass that information to anybody So I'm a little bit unclear as to why it's being included if there's no expected difference in behavior depending on what it is. And I'm guessing that it kind of relates to this. Right? That maybe you're just trying to track how often people tell you that there's a problem And how often, when they tell you it's a problem of what severity it is. But if there's no like, evidence that this has been kind of strongly correlated with activity in the in the past I'm I'm not sure that this parameter is doing anything. In fact the mechanism is needed at all. So maybe you could explore a little bit what you were intending and including that? Is it just telemetry or were you really thinking it was a key to maybe later behavior. Yeah. The Tech severity was not added in the initial one, but I got feedback from people who had implemented the while saying that... At least they would like to see the severity levels I decide of that whether to act on the limit or not. So if it's if there's done some configuration of they would have, like, if is high. Right, then they've... Then the idea was to create limit... That severity is low. Then wait for such signals, multiple signals coming in. Right to see if that is increasing and then applied it. So it hit it"
  },
  {
    "startTime": "00:26:04",
    "text": "sets and threshold shoulder Alarm to raising alert, and then to watch out what's happening whether that is increasing or or it stays like that Okay. So I think if that's the the logic behind, you probably want to add that text to the document to describe that logic, because that would be helpful. Sure. And I think you also probably want to be pretty careful because that sounds like a set of things where you say, Hey, I'm gonna obey the rules about not doing correlation and targeting. Except if I get one that's really high. And it really sounds like a place to hang. The kind of business logic to ignore some of the issues that are in the security and privacy considerations. And I don't think that's what we want. Thanks. Lou. Tony Poly Apple. Thanks for presenting this. So to follow into this conversation, I guess, you know, to Chris point I think we haven't seen a need for this in the existing deployments. But I think in in the defense of this the existing deployments where we've seen aren't that many of them, and they're relatively new. And I think they do follow a model where we do see a pretty explicit trust or like, we know some guarantees about what the relay are doing the gate gateways are set up, etcetera. So one potential area I could see us wanting to explore more and maybe this could even be explained in the documents for the types of deployments where you'd want this. Is if there is a weaker relationship, potentially between the relays and the gateways or there's less confidence in the relay"
  },
  {
    "startTime": "00:28:00",
    "text": "validating what users come in. Right? So like, when we are currently doing stuff with, Oblivious Http There's enough attest Of clients that there's already rate limiting going on. Before you get through the relay. You can trust doing the right thing. If some point, people start deploying totally open relays that just let anyone in the world come to them then maybe that will change. But I think it's good to think about this in context of are we assuming the relay is doing in the trust model and when is this actually applicable or not? The other part that may be interesting and I don't think this is something that office can answer, but I think we'd want to hear more from implement is that I I think there are going to be more use cases that start adopting ability Oblivious H, for example, like a safe browsing type use case and there may be services that start using it. At a different scale or that have different fraud prevention requirements that maybe will be interested in this. So I think I don't know how we coordinate this. But if people have an intent, of working on high deployments who haven't done it yet, who maybe haven't needed to use it do they anticipate they will need to have it in order to allow them to use this more broadly. Yeah. And and the service discovery is one such aspect but where I see, like, Isp would start deploying the release. Right? And put kit with Eddie a target, which is a public deal with server. Right? I think that's where it makes most sense some of the threat that we had done was mean, our previous use organization was like, do you have to put a wav right to identify any of the http request attacks and all of that work This was probably the most simplistic attack that we thought we we'll start with before we see a realistic of attacks where it would have it then only make sense to come back, but"
  },
  {
    "startTime": "00:30:00",
    "text": "Yeah. As you say, as the deployment catches up we we'll see more and more actors get using it and we'll will see how what kind of attacks happen. So this is is I believe the one zero one attack that would be the starting point before they move to more matching better. Wanted to say one quick thing. Timing lays a really good point that, like, this is really quite early in and the I guess the the overall use of o where... Deployments are kinda just starting up. So perhaps sitting on this until we see a need for this in actual practice seems like you know, the the the the the correct thing to do or perhaps was, like, a new use case that you were talking about with, like, different trust relationships that might warrant this this particular type of thing. But maybe maybe a more like concrete use case will emerge in time. In which case we can revisit adoption. But the way that the draft is currently written in the way that the sort of trust relations are currently like set up in practice. It doesn't seem like that bar has been but like, that doesn't mean like that won't change. Either below the bar or the bar eventually or might not. But was just maybe wait a bit and see how things go. Sure. Hi, Alex. I wanted to ask if there is assumption and your draft about the size of the deployments because it listen to the issues that were just brought up. It sort of sounds to me like there's an implicit, or possibly supposed to assumption that the oblivious gateway is deployed at larger scale than the oblivious target. And it's not obvious to me. That that's actually going to be true in general. Because if you go and look at regular Http resources today, without looking at any of stuff. It's usually the responsibility of every target somehow defend itself against service attacks. So whether that means using, like, a first party Cdn or third party cd or something else,"
  },
  {
    "startTime": "00:32:00",
    "text": "it still seems to me that you would need to have the capability defend off directly from a attacks even if they were going through one of these gateways. So My question is Does that change here? It still seems to me that, like, the target would need to have especially if it has also non oblivious resources, quite potential serving power. So, like, does this draft actually in his current form do anything other than provide like, and a advisory signal to the gateways to if they're polite that they should do this. Because otherwise, even understand how the trust relationships that you were describing earlier how was done like as Isp operators that anyone would do anything other than best effort follow this. It it doesn't seem like there's any way force without having the target be able to sync any attack. And at that point, the targets and the attack. So I... I'm I'm struggling a little bit understand how the ecosystem concerns would actually turn into an effective deployment of us right now. Yeah. And typical target deployments, like you say, right, Targets do have firewalls volts to different them from various types of attacks right, with cdn absorbing at attacks at very large scale. Right? That's a default deployment. Right? One of the default policies to basically identify the accurate and then basically, create to basically block that target and all of that techniques, but it with the organization that's happening. It's some of those mitigation are no longer possible. This is acting as a way to see if this feedback would be taken and a policy could enforcement, But if if the relay relay is loosely coupled, it may not even enforce these policies and and and see, we could imagine an impact on the service that is is provide to the clients at the policy not at. It's it's not it's it's not a strict policy. Right? I mean, there's no feedback. Back from the relay back to the target whether the rate is applied or not. So"
  },
  {
    "startTime": "00:34:04",
    "text": "did proxy relay the. I... I'm struggling a little bit with this draft because I find that On one hand, it is kind of too vague, and it's not clear, like, exactly one is needed then, like, you know, what assumptions it's having about the size of the deployment types of deployment. And on the other hand, it's also a bit too specific to Http and two specific to rate limiting. Right, many other aspects that like if you're running a mask pro see your regular connect proxy. You can have similar problems where there is abuse or dos or anything going through them. And having maybe a way to tell them that there's a problem I'd be useful. But to kinda go back to Chris woods point, we haven't so select I I at Google, we have a partnership with use Gdp for things like say browsing. And we haven't seen the need for this yet And so my gut feeling would be to say but not throw this out, definitely not. It I I can see this being useful in the future, but not yet. And once we get there, we might learn that maybe it's not right limiting that we wanted something else and other things. So that would be my my personal opinion would be to nod it adopt at this time, but not in a way to tell you that we're never going too, but it feels a bit too early right now. Thank you, David for the excellent segue way to the wrap up I was gonna try and do here. So showing I've have been chatting in the background. It it's kinda something to us, like, the authors here have you know, addressed a bunch of the technical feedback And and at this point, it's sounded like folks in the room"
  },
  {
    "startTime": "00:36:02",
    "text": "don't really have kind of technical blockers or know, differences in approach to to... That would it be bar as and adoption. It's more question of whether there is enthusiasm or demand for this this functionality. So we were gonna propose that we actually go ahead and do an adoption call and use that as way to measure whether there's enthusiasm and energy for for for from this functionality. So it'll be little different from your usual adoption call and that there won't be presume adoption. So it'll be a an actual actual open question adoption calls. So he encourage the authors and those who are interested in this to some interested voices and get opinions in the list. But I think we can... Give given that we we have addressed bunch of typing pressures and we've it seemed fairly aligned on the general approach here at this point. I think chair the puzzle Video, Had initiated an adoption call. And and use that as a tool to measure whether there's citrus interest if if anyone have concerns about that approach it's the micro. Seeing no leaving up. Either virtually or Ir. I think we can go go ahead and get that unless pretty soon. Alright. Thank you, Sir. Thanks. Cool. That was productive. Do we have any other things people wanna talk about? Because going once going twice. Richard. Did you have anything else? That's all land. Cool. Alright then. You next time. Thanks. We do run of applause for the the publication... Or imminent communication, I think."
  },
  {
    "startTime": "00:38:10",
    "text": "On the note that'd perfect."
  }
]
