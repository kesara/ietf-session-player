[
  {
    "startTime": "00:00:38",
    "text": "Yeah. Yeah. Hello, everyone. Welcome to the joint session of DNSSD and Snack. So DNS SD will cover the first 45 minutes of the session. And then we'll move on to snack. So I'm Chris Box. Next to me on my left is David Skinowski. We are the chairs of DNS SD. Darren is on my right."
  },
  {
    "startTime": "00:02:01",
    "text": "Mystery. 45 minutes. So as usual, this is, an IETF session, which is covered by the note well. If you haven't read this, you you should read it. Basically describes all of the information, all the Rules that you agreed to by participating in the IETF. So you should be aware of that. We we don't have a volunteer for taking notes, Thank you, Stewart. Stewart is very good at taking notes. Thank you. And, for because of this, this is a joint session, and we haven't run a joint session with Snack before, these the links for this are a little different. So the the note taking button does take you to the notes filed for snack, but we will put the DNS SD notes in there as well. And, of course, it's integrated, Mitekka chat as well. So These are our useful links for reference. What's different in this case is that the meeting materials are are of course the snack link there. As usual, DNS SD uses GitHub We have an organization, which is where we keep our working group documents. And there's a list of there, and you can also always contact the chairs if you want to put a non working group document there that you're working on. So this is our proposed agenda. So we're gonna start with, multiple queue types, then move on to SRP advertising proxy. SOP replication, and then TSR followed by, additional"
  },
  {
    "startTime": "00:04:01",
    "text": "any request to modify that? If not, we can crack on. So, Ray, do you wanna come up while I find the slides? Yep. Yeah. Big cross. Do you want to click on? Sir, would you like to click on it? What do you need to say next slide? To really do that. So I actually see my slides, but I think it's like a look around hover To it. To it. I'll contact me at COVID. K. Well, there's not many of them. Notably. That that that that Okay. I will try and see what I've been doing without see my slides very well. This is a very, very old draft. First rode it, I think, about 12 years ago, 17 NSX still existed. Hopefully, You've seen it because it's, been adopted as a working group draft. This is a solution to the issue of how do you you get multiple, record types back from the DNS within a single query. I have a related draft data sock currently in working group last call. Which clarifies that trying to set the QD count field of a DNS query to more than 1 is ready not a viable solution. So this draft will send up here. Proposed an alternate solution for that. So, yeah, well, draft status is, yeah, it's working group draft, which was stopped shortly off the last physical meeting, I sent sent a fairly long email to the group back on 5th December, with a summary of some of the office discussions that have been had both But, yeah, in person, I'm, on the DNS op working group where they've been some description of this draft. There are a few points on, there that needs some technical clarification,"
  },
  {
    "startTime": "00:06:03",
    "text": "There are some where my own assessment model, so there was no consensus. Yeah. People post a few ideas and be able to support those ideas, I said in that document, I propose there was no further action on those. The question then to the working group, which I guess will have to go points to the, the email is, are we actually happy that The with with with with with with with with with with proposal to basically take no further action on those. Chris Bot sent me some, editorial changes just a couple of days ago. Because they are merely editorial, they're not going to the working group for approval basically just Yeah. Yeah. That because they're not changing, I think, substantive So they're within my editorial remit to actually get those in. Those are in the GitHub repository, but they haven't yet resulted in a dash 01 being published. So there were This is the first of two issues that on the technical design of the E DNS option that's been proposed. Sorry. I should ask. People here not familiar with what the draft actually tries to do. But people are often even what truck prices do. Oh, no. So I I know the DNS had snow. The draft is trying to do. Assume that there's always someone who's Yeah. to Okay. So maybe I'll do a quick recap there because I assume everybody actually knew what we were trying do. Else in all the last question, you get one record type, in the question so you might be asking for an a record or a AAA record. That's what you'll get back. But there are some optimizations we have on low bandwidth networks, where you might want to say we'll actually can you give me the a record on the AAA record moving the HTTPS record now all in one request. And rather than issue 3 separate queries. This provides a method using an EDS option where they eat in this option actually includes the additional queue types you'd like the serve to answer for And, this is particularly designed for the case where All of the questions have the same owner name, the question,"
  },
  {
    "startTime": "00:08:00",
    "text": "domain name that you're actually trying to look up so if you're, yeah, it's w w w dot exams.org, get the a record on the holiday on the HTTPS record. They want to go. But if the option is not supported, there is still the primary queue type in the initial question. And that's the record we'll get back. And then if the server doesn't support this feature, client can then go back and ask explicitly for the other ones. So there is a fallback, and it's all completely backwards compatible. So that's the general idea. So the current design has a single bit within the DNS option code, that says whether this is a query or response that's similar to the essentially the direction bit in the dense header itself. The reason that exists is because there are unfortunately a bunch of, uncompliant DNS systems out there. Where if they receive an EDS option, they don't process it but they'll just echo the option back instead. Without modifying that in any way. So the idea of the direction bit was to basically allow the client to sense the query to be able to tell the difference between a server, which has recognized the query and processed it, from one that has simply echoed back the data, without processing data at all, because the client does need to know whether the data it's got back is somatically valid, whether it's just simply missing. That had been a suggestion from Stuart Cheshire, that it may be simpler to simply, use 2 idNS option codes instead. One for the request and one for the response. I'm personally completely ambivalent on that. Yeah. But basically put it to the working group to see is there actually a preference? Do we care I don't think there's anything to put much we said in either way, so it really helps the choice Yeah. Both work. Current implementation for"
  },
  {
    "startTime": "00:10:01",
    "text": "it seems marginally easier to do to option codes, but Yeah. Yeah. There's really almost nothing in it. Yeah. I Yeah. think. So Reminder to state your name at the mic and join meet echo. Cool. You know the deal, Ted. Ted Lemmon. Sorry. I I've been around so long. I forget these things. That's what I'm here for. Yeah. So I'd ask the working group members who actually care about this to go back and review the email I sent back on 5th December. So whether you have a preference, there there's a related question, which is the 2nd technical one. Because Both of these fields fit into the same offset of the edensalption code. Where I have specified that there's currently a 3 bit field So the range of 0 to 7 or in practice 1 to 7 which says how many additional Q types are there embedded within the message? The reason it's kinda related is that If we don't put this field in, actually the server configured out anyway because of the link for the option field. But conversely, if we don't put it in then The limits on how many options sorry, how many q types can be specified isn't constrained at all, could only be constrained by the specification. For example, the the RSC could say Yeah. Lab Shoutman put in more than 7 of these. But then that's a like, that's a, that's a, it's a technical requirement for functional crime that's only actually written in text and not actually constrain on the wire. Is and swings from roundabouts. But both the QT account field and the QTidirection field, both fit in the same opt test at the moment. So, yes, there is a theoretically simple design where option field literally just has 2 bytes to say, hey, it's gonna be a AAA record at another 2 byte same HTTP record, or you have the count field, and then the server can do a bit more validation on the has Stuart joined the queue."
  },
  {
    "startTime": "00:12:10",
    "text": "Okay. I don't wanna waste time fussing with this, but I will state your name is what you will do. I'm sure from Apple, and I have a very quick comment because I think we agree that we're we're all happy doing it either way. The reason I made the comment I did is just it makes me nervous when you have 2 ways of expressing the same thing that might be in conflict. And if the option length is a certain length, but the three bit lead filled within it is more than that, then that's an error. And then do you return the form error? And then and then we have to specify Do do you use what's there and ignore the excess? Do you reject the whole thing as format error? You forget to do either of those things and now you have a buffer over on security bug? So just a general protocol design principle that anytime you have 2 fields, that have to be in agreement, and it's an error if they're not. That's extra code handling the errors and extra thinking about how you're gonna handle the errors and you just don't have the 2 fields in conflict. Now you can't have an error. The option is what it is. And you just interpret it. Yeah. Yes and no, because there are still classes of error that could happen anyway. Like, if the client dozen. Yeah. If the client puts in an odd number of bikes, for example, that calls an error. Yep. Yep. If yet. My general view, somebody's written a lot of DNS passing code. I'm sure you have 2 is that Dennis passing code is very, very used to having to cope with underruns and overruns of of of the data that arrives in a packet. I mean, I remember actually agreeing, while you sent you were actually arguing that, well, if you if you get rid of this field, front, then you can fix some alignment issues and actually sorry, you can't because you can't control. You're liable to wear that packet where those bytes arrive in packets, but there's all kind of"
  },
  {
    "startTime": "00:14:01",
    "text": "it's so much swings and roundabouts. So I I'd be happy to go. I've, you know, whatever other group thinks. As author, I will let you choose and I won't talk to you about Yeah. Yeah, I could go either way. I'm slightly concerned about the idea that if we don't specify, you know, we'll Should we actually just specify a limit in text to say there shall not be more than 4 or 7 if we do that, what is that number? For me, the only argument of really a favor of having the cutie count field that it does put that technical limits because there's only a three bit field. On what's allowed. Actually arrive there. But then some people have argued we should Allows as many queue queue type of end fields as we want. So it's ready. Yeah. way. It could it could go either So I'm eagerly waiting for the download of the page that I can click the button on, but here we are. So Ted Lemon again, I think that, independently of this question. We should answer the question how many queue types are permitted because the more queue types that are permitted, the, larger, the possibility of an apple amplification attack. That's true. And therefore, And we might also consider whether there are some things that we should not allow some key types that we should not allow because of the potential for them to be used as an application attack. I'm not sure we should, but we should definitely For example, like keys are pretty big. So I it's important, but but it's it's worth it's worth at least considering don't know that that. Yeah. Interesting I mean, idea. There are other techniques available to mitigate amplification attacks these days, such Dennis Cookies. So I'm personally not concerned about that. Yeah. How many is too many? I can't answer. I say I picked a 3 bit field. It could be a two bit field, say ranges for, sorry, 3 additional few types. Yeah. How long has this been strong? I haven't yeah. Yeah. Some people said"
  },
  {
    "startTime": "00:16:02",
    "text": "no limit at all. So it's certainly a case for at least 2 additional queue types because a aqua and HTTPS is a very obvious one. Right. So Ted Levin again, if you don't think that there is a potential for an attack here. I don't see any reason to limit the number I don't think it's likely that anybody's gonna ask for more than 2, but why do we care? Yeah. Yeah. I mean, if the if the general consensus is, we don't really care that much. I'm happy to go for just a straight arrived 2 bite. Values. Values in basically drop both the QTD and what sort of drop QTD in favor of a pair of opcodes, and, drop the outfield. Yeah. It could go either way. Lorenza Cooley. You mentioned DNS passing code. Maybe an amusing anecdote I, implement some data. Passing code. In our, Android firmware bytecode interpreter, which, can't jump backwards and has only 2 registers. A number of instructions to to execute. I was able to do DNS decompression, which is or should I thought was kind of a major triumph, but, so, no, but my real question is, This stuff is going to hardware offload. And the vendor implementations that we've seen have a variety of interesting behaviors. And What can we do? To make it. So you're obviously keeping it simpler. Right. So so just an example, right? We have API Android right now that says as an basically, if you see something matching one of these names, Send this blob. And, What we're gonna do with this is ignore it. Probably we're gonna ignore it. We're gonna send the blob on our fingers that the extra data won't hurt anyone. But I do wonder maybe we should be thinking about this because MD And S definitely. So just just as a sort of, like, re just to serve as a structural reason for this, There's flat panel TVs where the CPU is on the same power rails as the as this video display circuitry,"
  },
  {
    "startTime": "00:18:00",
    "text": "and they burn 20 Watts. Turn on the CPU. And the EU regulations say that you get to burn 1 watt. And you basically so they can't turn on the CPU for every MD and S packet. They have to do it in hardware. And the hardware will do what the hardware will do. So, yeah, maybe this is even already already to complicate for that. So maybe we should That noise. If there's anything that we can do too. Yeah. For example, if we were to, like, I hate I hate to say it, but if we were to say, look, you know, here's what you do to Can we hard code more stuff and say, look, this is only for Anne AAA. Then the hardware get hardware get it right more of the time. Now, horrible trade offs, but Yeah. Alright. Yeah. The point is to make this general purpose enough that it isn't just used for a, Yeah. They're all other uses outside of, yeah, apples, was it threads, I think you call it? The the, like, the, the very lightweight stuff No. I I do realize that, but sort of any television will be doing this. Just for and I agree that it's it's good to have something flexible, but if the flexibility closes hardware to get it wrong, you we end up with a worse outcome than you have. Yeah. So I I think that's that's certainly a strong argument keeping it simple. And I think going for, yeah, meeting those two fields would Yes. In practice, make it slightly simpler. Yeah. I'm afraid just on point of principle, I wouldn't support the idea that we're gonna do, like, how code of packets because that's just a way to get a system that isn't the best conformance I I do understand, especially if this is sort of general purpose. I I just wanna say that The pressures that drive hardware off load do not care about technical correctness. And we've tried that argument, and it just has not worked over and over again. So, you know, just sort of, like, you know, in terms of, like, owning the consequences or actions, we need to consider what might happen if we make something that's, yeah, he's a form and generic. Yeah. The simple case, you know, if your TV doesn't support this option, It'll just means the client will send 2 or 3 packets to get the same data whole will receive to Sorry? us. I will decide those. Takes"
  },
  {
    "startTime": "00:20:00",
    "text": "because you'll get the DNS option back So, basically, because it's leading its option, it's transparent to the any Yep. Yep. Yep. That that that that that So it's gonna send me this. It's gonna send me this. Is gonna be like, I don't know But anyway, I saw what I wanted, and I know So a conformance any any any conforming DNS server. Should ignore a need in his option that doesn't understand. Yeah. And because it's ignoring it, the fallback behavior is that it basically acts like any other query. Right. The client will recognize that the server hasn't just did the option. So then I do want a number here. That says that's greater than 1, because the hardware at least can look at the number. Without having to do the TLD parsing of the of the types of options that are there. Right? Because it's here's the thing. The only thing that you'll ever get out of hardware is I'll send you the other records as well or I'll just send you one because otherwise you're gonna break. You're not gonna, we're not gonna get any better behavior than these 2 modes. Got it. I I think Lorenzo, you can do what you want because I I think maybe the part you're missing is, as Ray says, it's an option, meaning it's completely optional. If you choose not to implement it, there's no harm. You just ignore it and this is primarily aimed at unicast queries to what I'd call conventional servers. If you're doing the multicast DNS query to a smart TV that you're describing, you can simply choose to include additional records that make sense. And in fact, That's what multicast DNS already does. If you query for a or quarter, it gives you both of them because you probably want them and multicast packets are expensive. So let's pack it all into one use the name compression. So whatever heuristics you wanna put on your smart TV to give the record that you know are useful for that use case. You can do that today. This is where I'm giving a hint to binds 9 or Yeah. Some similar big INDNS of, or even"
  },
  {
    "startTime": "00:22:01",
    "text": "Myth Smaller. I understand. Yeah. Yep. Yep. But the reason we need the hint, is that But but the reason we need the hint is that we have observed our implementations full over when we send packet without it. Right? We we need a client side indication that says, hey, I I'm willing to end more than one answer. Otherwise, Right? Otherwise, we wouldn't need to define something like this. Is that correct? Perhaps I misunderstand the whole thing. No. Basically, if the server understands it, you'll get back the same EDS opt well, EDS option code plus 1 because that's how the server indicates. I have re I have pass your field and here are the answers you wanted. Yeah. If the response does not contain the U. S. Option that that is basically an indication that service did not support it? I I'm thinking we might be the point where it makes sense to to discuss this privately. Yeah. Because this is something that's being discussed as racist more than a decade in in in the DNS community. Yeah. The reason I came up with my phone was cause you asked a specific question. Is should we have a limit on the number And I'm gonna say I believe quite strongly there should be, should should be. not. There should be. Oh, And I'm gonna say 8, 8, it doesn't really matter as long as it's more than 2 or 3. Reason I say we should have a limit is it really worries me wearing protocols that don't have to find limits because then when you're trying to test your implementation to know whether it's conformant. There is no reasonable limits the number of queue types you'd be expected to put in Somebody could craft a malicious packet, which is 6 4 k long that requests Well, that's, yeah, we actually can't because the DNS option link is only late bit field, but, Okay. So That's a a good point. So, yes, that's good point. That's more options, then we could have a re re and particularly for constrained implementations,"
  },
  {
    "startTime": "00:24:00",
    "text": "if they've if they need buffers to stage information or whatever, actually being able to know how much RAM do I need to implement this thing and compliant is is really be helpful. Yeah. Okay. So I think what I'm going to propose to the chairs I do on these two points specifically is write off summary a brief summary of the discussion to the group. And where I think what I'm going to propose is we basically drop these two fields, I'm I'm quite happy with Stewart's proposal of a, of a limit of 8 options in the on there. I'll just put that to the working group for a consensus call. That sounds great. And if, you know, used to it and Lorenzo are free for the breakout and you wanna chat through the far firmware, but that could be useful too. Yeah. Okay. So Last slide. As I say, there is some text already in the GitHub that isn't yet a 1. I know there's a couple of things that I still need to actually add to that. There is an issue with A bit handling, that I need to fix because of weird ways to do nest works if you talk to an authoritative server, and ask, for example, for both the NS records and the DNS records for a zone, should get a conflict in the AA bits because MS records at the top of the zone or above the zone cut, not authoritative Zs record is authoritative. Likewise, the new proposed their leg record, which is also a potential use case with us in the future. For, you could ask for NS plus Delo in the same query. Again, NS records not afforded to direct records are afforded there's a bit of an issue there about how we might resolve that. Doing some text. But I also mentioned earlier that I've got the CUDA counters, one draft in DNS op, And a lot of the text and introduction of this draft, sorry, of this draft I'm discussing now, was written before the QD Council bond draft existed and is covered by that draft. So essentially some of the text we've got will be removed replace with a normative reference to RFC to be D counters 1."
  },
  {
    "startTime": "00:26:01",
    "text": "That's it. Okay. Hi. Thank you. Thanks, Ray. Ted, you're up. Oh, that's another question. Yep. Unless. So we're positive gift. Gonna get short on time. So since, you know, we As a reminder, we sent a call for agenda items and got crickets. So we have a session of 45 minutes this time. Of which we oh, No. No. No. I mean, I no. It just means you will be able to talk less. I'm a I get paid either way. So we have 20 minutes left. So I'll let you decide how you wanna allocate that time, but let's focus on the adopted documents. Go ahead. Sure. Yeah. So, there's actually not I think we'll be fine. Very quickly. So the SRP servicer registration protocol we've been working on for how many years now. It's basically at the point where, Eric has threatened to press the publish button. Let's go to the next slide. So all the discussions have been cleared. The only remaining issue is that, Paul Waters, had a question about, the way that we're doing the constrained UDP case and how we're doing source address valid validation in that case. And, It's not clear. I I I I have a question to him to ask him what he wants us to do because we could probably tighten up the text a bit. There was a proposal made to, set the, The hop count, the hot limit to prevent, off network, delivery of, and basically, to check the hot limit to to verify that the packet has not been forwarded we would have to do an update to the draft to account for that, and I just haven't heard back from Paul. So that's where we stand on that one. And, you know, one way to address this would be to not address it now and address it later when we"
  },
  {
    "startTime": "00:28:03",
    "text": "write a document that talks about how to deal with the case where we have a a stub router, is sort of the the general use case for the UDP ver version of this protocol. If we have a stub router, that is, acting as or a stub a stub router that has SRP clients on the far side of it, on the stub network side of it, but the SRP server is on the infrastructure network, like your home router or something. Best's best 1 hop. So we need to figure out how we're solving that problem. One way to do it would be sort of DHCP style where we have a relay. So we basically are you know, authenticating each step by by by, restricting it to one hop. But but but Whether we need to solve that in this document or not is an open question. I have a bunch of, stuff to the the go to the next slide. If anybody wants to comment on this, by the way, please is true, but Yeah. So, during the IS ISG review, We added a number of things. I'm trying to figure out if any of these are important enough to highlight, highlight if people are really interested, they can look at the disc and the documents or look at the slide. The pre IASG reviewed version of the document was 22. So It's pretty easy to see the diffs. One thing I'll highlight is that we didn't actually explicitly say that that updates have to be sequenced and that creates a problem, an SRP Quester could send 2 updates back to back without waiting for an acknowledgement. And, That makes life a lot more complicated. And so the draft now explicitly forbids that. Which You know, that's actually a fairly significant change. So That's one thing to be aware of. Next slide."
  },
  {
    "startTime": "00:30:00",
    "text": "See. No. I don't think there's anything else that I really need to call out there. Everything else was relatively minor editorial or just, like, making things clearer Eric Veng, the AD for this group. So that's what's that just said it's important, right? There's been multiple change during the IHG review more change in the usual. So it's up to the working group to decide whether we want to redo and restart from vertical plus score. So it's basically am waiting for 1 week. If somebody wants to go redo the working group last call. Please stay on the chair, and we will redo it. Okay? But I think the change are important. But in a good way. So the that's not me, the new working group last call. Just to be king. I would propose here at this So what chair, assuming that's okay with everyone, is, as soon as Ted's decided what he wants to do on that last bit, to and we have a published draft that you're happy with. Then we would let the working room know and give the working room, like, 2 weeks I wouldn't necessarily call it a working with last call require a review whereas here, because I would If 2 weeks crickets, it passes, and then we move just to give everyone an opportunity to review, but not to require it like we would do a normal workgroup last call. Perfect. Good for me. Thank you. Sounds good. Okay. Next slide deck. Next slide. So, we talked about some updates advertising proxy and Prague, and I think maybe even in San Francisco, basically the draft had a very broad scope and covered a bunch of things that don't really have a whole lot to do the advertising proxy function because they were related but, we concluded that it was better to just explicitly describe describe the advertising proxy and nothing else."
  },
  {
    "startTime": "00:32:00",
    "text": "In this document. And so the document's been updated to do that. I think there's Still a bit of work to do. But in fact, I think I have another page about that changes, sort of protocol level changes are that we no longer choir. Or even suggest that, any special behavior occur with respect to conflicts. If there's a conflict, it just means that that that we don't wind up advertising that record. And, hopefully, it gets resolved later. If not, whatever. It's we're basically being agnostic about that because it turns out that it's it's highly problematic. To to handle conflicts like that, and they generally do not happen except in cases that are essentially self inflicted wounds where where the conflict is actually two things that are actually the same thing. And so it was just causing a lot of problems, and we weren't getting any benefit out of it. So the additional thing is that we now, have have the the TSR record mandatory to implement, which has implications on working group adoption, I think. But, the reason for that is, again, it addresses the problems that we have with self inflicted wounds respect to, the same data being advertised by 2 different advertising proxies. So I think, like I said, so next slide, so, The I think, sort of the next step is that we need to implement TSR and see how well that goes and also implement the the letter of the current draft, which we don't currently do currently, at least the Apple implementation. I don't know about Open Thread. Is really very DNSSD specific. And the advertising proxy is not DNS ST specific. It's basically just Here is a DNS zone, advertise it with MDNS. So I'd like to do that implementation and see what happened before saying that this is done. But I don't know of anything in the draft currently. That's a problem there. There is one additional thing that we could do that I think would be really good"
  },
  {
    "startTime": "00:34:00",
    "text": "if it works, and I have also haven't explored this yet, is use a sub domain for the advertising proxy services except for the PTR records. Since this is a DNS SD, the PTR records are are how we how we find a service. So they need to be at the top level. But they can't conflict. So a PTR record that's pointing at, say, in the example here, blasnorf.food.bar.link0.local is only gonna conflict with another PTR record pointing specifically to that name, which is not a conflict. So So what this would do is basically prevent sort of, real conflicts with where there's a service being advertised on the network locally, with a particular name, and there's another service that has the same name that that's being advertised from a DNS zone using the advertised proxy. So I'd like to explore that. I'm curious if anybody else is thinks that's a good idea or a terrible idea I don't know if we have time to go into any detail about it right now, Looks like Epton wants to say something. Yes. So, opt in from Google, you're gonna echo what Ted said, yeah, I think that's a great idea. And I think if we can make that work, that's the right way to go. Yeah. Yeah. I mean, I think the the challenge is gonna be making sure that the consumers of this data don't do something weird if they got a name that's got multiple labels. Yes. Basically. So I I I know for a fact, the the the multilabeled thing does work in terms of just advertising the record. So the only issue is just whether the consumer would fall over for some reason, Mhmm. So So, I I guess, you know, we'll let you know how the implementation stuff went Hopefully next to IETF. Next slide. That's it. Yeah. So next deck,"
  },
  {
    "startTime": "00:36:00",
    "text": "Okay. Next slide. SRP replication, So, we haven't actually had a lot of time to work on this. And so, we did, Jonathan did an update, to address one of the outstanding issues. So he's documented the startup process a little more thoroughly. And, and so startup process now documented in a way that's likely to actually work. Would be good. But we have a bunch of work left to do on this. So this is still we just haven't had time to to do all of the stuff that we sort of, would like to do to finish this. So Not much more to say about it right now. Next step. Unless anybody wants to see no questions. And that was our working group adopted documents, and now we're going into the individual address. Yep. Okay. Time since received. Next slide. So we talked about time since received before. And in fact, Apple has an implementation of time since received that we have a lot of experience with and the experience has been somewhat painful. And the reason was that we when we originally did time since received, we thought we were dealing with resolving conflicts and really what we should have been dealing with is noticing that we have 2 copies of the same data, and one of them is stale. This is, say, not a conflict but just stale data. And so the new document, addresses that. So we now we now use the, The key, basically, the DNS key that's used to do the update as a way to distinguish between, to notice that that we have 2 conflicting data that's not actually in conflict but just stale. And then we just throw out the older data. So"
  },
  {
    "startTime": "00:38:00",
    "text": "and and because we're using the key instead of using, like, a hash on the message or something like that. We don't have to worry about, like, you know, disagreements between hashes and stuff like that. Because the key never changes. So, Next slide. So, We were using we we originally had the TSR record be a resource record. It's now an EDNS 0 option instead. And that's because, we want to be able to include it in MDNS packets that we're sending to consumers of the packet that Mike not implement, implement, TSR. We don't wanna confuse. We don't basically, we don't want the TSR packet the TSR record to wind up being in some in in some devices cache when it shouldn't be. Causing confusion. So, So the way we do that is the EDS 0 option has an index into the DNS So if you think of the DNS message as having One question, and, some number of answers and some some amount of authority data and some amount of additional data. So the first answer is gonna be index 0. The second answer would be index 1. Say there are only 2 answers, and then the the authority, the first authority record would be 3 and so, 2 and so forth. So That is how we Relay the owner name without either fully representing the owner name and the EDN S 0 packet, which would be big or or using compression, which we're not supposed to use for eating a 0 ones, So, We the the spec currently uses a key hash, but I think that too big. I think we can just use a key tag. This is not crypto. It's just we want to be reasonably sure that we don't have a collision. And as we know from discussions on the DNS op mailing list. The likelihood of collisions is Not 0, but quite low. So And on a single subnet, I think it's extremely low. So"
  },
  {
    "startTime": "00:40:02",
    "text": "we can talk about using something a little fancier than a key hash if we think we need to, but I don't think we need to. And so and then also time since received as in the previous document, And, we only do one TSR for owner name because we don't expect to get separate updates with records. With the same owner name. So, this is a bit SRP specific. That's sort of intentional. Next slide. So, I already talked about this. Yeah. One big win about this new way of doing TSR is that it means that we don't need to do MDNS probes in the advertising proxy when we're just publishing or processing a record. We know the record is unique. And so we can set the we can we can enable the no uni known unique behavior in RFC 6762, which means we don't have to probe which means, 1st of all, the registration happens faster or the the the, advertisement happens faster. And secondly, we don't wind up sending, like, all this extra multicast traffic that's essentially spurious, especially if you've got, like, got 5 advertising proxies advertising the same data, that's a lot of multicast traffic. This this really reduces the multicast traffic. Next slide. So we haven't implemented this yet. So everything that I just said is speculation. But we're working on it. Hopefully, we'll have an implementation soon. Will tell you in Was it Vancouver? Or yeah. Tell you in Vancouver what happened. And it'd be really cool if other people who have MDN implementations, would be interested in also implementing this and doing some interrupt testing. So That's it. I think next slide, Yep. That's it. Okay. So we've got one more. We have 4 minutes unless you need a little extra time. So Dima came up to me, in"
  },
  {
    "startTime": "00:42:00",
    "text": "Prog, right? Product, right? Yeah. Yeah. And And, basically said, you know, actually need to do something about like, additional records. And we actually somewhat miscommunicated about this and he had a slightly different idea in mind than I did, but, this is what came out of it. So next slide. So did you wanna present, or did Yeah. It's fine. It's fine. You can do that. Okay. So Next slide. So, DNS push, basically, the idea is you subscribe to some name, if you're doing DNSSD, the name you subscribe to is probably the service name. So, like, underscore airplay._tcp.local, for example. And, And you're gonna get updates whenever there's a new record a new a new PTR record with that owner name. Whenever you get one of those updates, that means you've discovered a new service. And so having discovered a new service, now gonna wanna go look up all the records associated with that service. Means that you're getting a message from the server And now you're gonna have to send a couple of messages to the server to subscribe to the individual things that you subscribe to and then you get those back. And so you've got some additional round trips and and more bookkeeping and stuff like that. So the motivation is to see if we can do something about that. Next slide. So, So with MDNS, if you if you were to do a browse on a particular service, the MDNS respond that you would get from anybody that's advertising that service would almost certainly include The PTR record, which is the service name, the, SRV and text records, which are on the service instance name, and All of the A and AAA records, which are on the host name. Those would all just come to you in the same MDNS packet. And then so you wouldn't"
  },
  {
    "startTime": "00:44:00",
    "text": "to do a second query because you already have all the answers you need in order to use that service. So, the goal here is to basically give us parity there. That when we ask for the PTR records that that list that that allow us to browse services we can get back same sort of data without doing additional queries. Next slide. So, 60 RC6763 actually recommends in section 12 that we return additional data So we actually have a spec that says what additional data we wanna return. But DNS push actually forbids that. So and and it makes sense, right, because we need to validate the responses. We want the the whole point of that was we don't wanna just get random responses and stuff them in our cash. But this is a fairly constrained use use case. We, I think, can reason about it, and we can code that validates the responses. That's safe. So, So the idea here is basically, to to, replicate the 6763 behavior Next slide. So, the idea is that we're gonna include us an additional secondary TLV and that indicates to the push server which additional records to include and it can limit the number of responses. So there's a couple of different patterns that you might do browsers. One is I really wanna know all of the services on the network because the the of this type because I wanna I wanna use I, I wanna communicate with all of those services, like a light bulb or something like that. You wanna be able to either tell whether the light bulb is on or not. Whatever. Gonna want all of the information, all the servers. So that's sort of no limit. Another use case is I just want, like, a printer. I don't care which printer. So then you'd say, just give me one. And there might be cases where need a couple, but not too many. I don't know. So, basically, we're just proposing to have"
  },
  {
    "startTime": "00:46:00",
    "text": "an explicit numeric limit to how many services get returned. And there's text in the draft about that, which I think is a little bit weak right now. So I see nods. So, we'll work on that but that's the idea, basically. Next slide. So, yeah, this this is the this is the format of the extension. So we'll, include account and a list of our types. And, in the document, I'm kind of reaching in the direction of, like, this sort of weird recursive thing that I'm not sure is actually a good idea. We might actually wanna make it a little bit more DNS SD specific. In which case, I think we wouldn't need quite as much complexity. So second bullet on this slide is talking about all that complexity, which I don't think we have time to get into were already over our limit, So next slide. Yes. Alright. 10, unfortunately. The koala. We are over time, so we won't take questions at the mic, but if folks are interested, please send them to the list, especially as chairs, given that this is new work. We wanna see if people are interested. Even if you don't have questions, you wanna say, Hey, I'm interested in implementing this, or I think this is good work that's super helpful for us. So please discuss this on the list. And, of course, questions too, I'm sure demanded would be happy to answer them. So With that, that's the end of our DNSSD session. Was switching over to snack. Thanks so much, and sorry for going over. We're gonna make this work. Okay. Part? Cheers. It will be, but we'll cure in Scotts and procedures. Yes."
  },
  {
    "startTime": "00:48:01",
    "text": "Alright. We do need a notetaker for snack. If we have a volunteer in the audience, wants to raise their hand, Excellent. Thank you. Okay. Everyone. Welcome to snack. Kieran is remote. She's at home. She's on the screen. And, She's gonna take us through the chair slides and, kick us off for the snack, part of this session. Thanks, Karen. Would you share the slides? And just one sec. Content. And Good afternoon, everyone. So you have, like, 30 seconds to stretch yourself between the unnecessary and snack. And Take where There at the top, the first slide deck. Yeah. Just getting them shared. K. Some reason, Okay. For some reason, I'm not seeing the Share on my end. If you wanna go and go ahead and kick that off, Karen, if you can, from your side? If you can click on them. Sure. try. Let me No. I don't want to share my screen."
  },
  {
    "startTime": "00:50:02",
    "text": "As well as insurance, that's the thing. Alright. Are these slides visible? Yep. We've got them. Thanks. Okay. And Alright. Welcome, everyone. One more time. This is a joint session with DNSST. And, Thank you very much for pretty much stopping on time. Usual note will again for people who might have joined in just for the snack session. Just be respectful and stay on the topic, and you'll be fine. And I assume you guys are familiar with the IETF Policies in terms of meeting management, we found the note taker. And, please make sure you are signing the blue sheets by scanning the QR code. In terms of agenda, we would like to update, how the work group is progressing from the chair site. And then we have two drafts that, we plan to discuss. With the Snack's simple document, we will try to take pretty much the same approach that we did last time. And we'll try to pick up the issues and see if we can do some kind of wordsmithing Around the paragraphs and improve the text there. So any issues with the agenda? Alright. Looks good. Okay."
  },
  {
    "startTime": "00:52:01",
    "text": "Repositions 118. We ended up hosting 2 interim meetings. Within which we and we resolve, like, five issues, closed five issues, and we were meeting every 2 weeks And you can see the changes that came into the document, through this link, and it will show you all that has changed between 118 and now. So we want to keep making the forward progress and the the idea will be right after this meeting, within 2 weeks, we will start scheduling interim meetings again. And we would like a lot of participation from the work group So if there is a time zone issue, for you Let us know. We will try to accommodate for that. And I've seen that authors are pretty, like, as well. They are quite flexible with the time zones. So Let us know if you have certain time zone restrictions, and we can make that that happened. We are pushing for finishing up the document by next idea That means we have 90 days from now. Please look into the documents, see if it's implementable with with which I mean that can you read the document and translate into code. And, we are also considering that can we do some kind of Hekaton. That could be an open source implementation, or it could be an interop between, different vendors. So this is something we started talking about we will try to brainstorm more about it on the mailing list, but just wanted to make you guys aware of it. Then, with respect to stub router RF flag, we are desperately looking to finalize the home for this document should it be 6 men or snack working group? So what we have done is, we have received the initial set of review comments from the slack, working group. And, we will push it to 6 men for"
  },
  {
    "startTime": "00:54:02",
    "text": "for the, review comments and see how fast we can get the last call on it So this document, adoption is pretty important to get the IANA, stub router bit allocation? So this is that's why we would want to speed this process of adoption pretty fast. And wherever we can help 6 man group and get the reviews from, Stack Working Group, that would be great. Did, did you intend to remove the sites, And, Jen, did you wanna come up with a comment? Yeah. One chairs. Yes. We do have you on the agenda. We'll take a look. As far as I know, last minute suggestions was made on yesterday or today on is change of the format of the, like, option and use another extended, like, option field. There are some maybe the text of the draft will need to go through some changes But, I think there is an email thread about that. Yeah. But, yeah, 6 men is, like, definitely, I would like to take a look and be charge off, like, agents and stuff and, So let me ask you a question. In terms of work group adoption, Are you waiting for this change to be uploaded, the new revision? The work group adoptions. So Monday, I think if it was suggestions made, like, yesterday today? I I don't know. We discussed it yesterday, but I don't know when it was the list. So Eric Bank has the entity for this weekend request. So I strongly suggest Jonathan, the change is very small. would To do with the change today or tomorrow. Then we can be according for adoption in 6 months officially. And the name should then be draft dash week dash 6 months. So we're clear. Mhmm."
  },
  {
    "startTime": "00:56:02",
    "text": "Yeah. So I know there are some discussions about submitting new versions of the draft like, Day before the session, but I think it fully justified in that case. Yep. Just, quickly skimming through the map as a Lorenzo. Learns liquidity. As quickly skimming through the draft as a sort of a 6 month participant. It occurs to me that if I just read it, I would have no idea what this bit means. And it would not so that the only thing that I would conclude on reading it would be I have to read all of snack simple. Understand what this does. And I think, it would be helpful in that document to say, Here's what I stop it. In case you don't want to read these other 50 pages, here's what a stub router must and must not do. And here's the promises that makes. And here's what this bit actually means. In terms of like who sends it. What are they committing to, and what are other things that wanna send a bit supposed to be committing to and what can things expect? I think, yes, this is probably is may or may not covered in in the snack draft, but I think also in terms of implementations, having it in one place would be easier. Just a a note. We do have time for that draft to be discussed specifically after we get through these chair slides. Actually. Yeah. So, I mean, I I'll just point out that, It actually is good to only specify behavior in one place. And so the behavior of snack route of of stub routers is is something that I think should be specified by the snack working group, not by the 6 man working group. And so we really can't put the text that you're requesting in the RA flag document. The RA flag documents purpose is to allocate the RA flag. Is not to document, all of the details of how it's used. We do document what it's general purposes, but"
  },
  {
    "startTime": "00:58:04",
    "text": "going into vast detail about it in that document wouldn't really make sense. That's why we did that that's not something that I'm I mean, we could revisit that, but that's why we did Yeah. So we should be discussions to the mailing list And, Stuart, do you wanna go? Yeah. Listening to this discussion. I I think I agree with Ted's comment that You don't want the same text repeated in two documents because then there's a risk of it contradicting. Is the answer to combine these 2 documents rather than just have Ted's laughing at me, so I'm guessing that was a really stupid thing to say. So the mic did I mean, may maybe From what I'm hearing, it sounds like it's better to have one document that describes both the behavior and the expectations and how the bid is represented. And maybe the 2 work groups have to cooperate on reviewing that document. But splitting it into 2 seems like to Lorenzo's point, somebody reads one document and they stroke and say, I don't know what you're talking about. And if the two documents end up across referencing each other, then maybe just make them 1 and save an RFC number. Runsically. I I would like to note that there's some, that there's some, interesting text at the end of the 6 month charter. That says, if we think 6 months should review this must review this. And, that's, we could basically say, okay, then this can just go through a snack. And then 6 months does have the authority to review changes to V Six specifications as as part of charter."
  },
  {
    "startTime": "01:00:00",
    "text": "Then we would say this go through would go through snacking just has has to go through some sort of 6 month review In terms of merging the docs, I mean, yeah, it's true that the doc is very long, but at the end of the day, if I if if it's not possible to understand the behavior, of this flag as a 6 month participant, then, you know, they're gonna have to read the other one anyway. Janine. I think yes. So there are pros and cons of those approaches. Orange, I understand your concern, but on the other hand, I do not think 6 months should be adopting a draft when most of the texters, like, has nothing to do. Like, 6 money, I would not be able to have should be And we So I I think we've done that before, right, when you, for example, we we make an changes, like, requested, extension with people talking about extension headers options and extension header. Right? You do not specify the behavior of what the devices do with data, right, to specify the format, and that's reviewed by 6 men turn sure is that it doesn't break anything. Right? So it complies with specifications in general. So I do not see much harm of having a short draft in 6 months saying here is the flag. And behaviors specified in this particular document may be to address your comment. We might It might be desirable to have a subject say only those type of devices should care about. No. You should say If you're a host, you do not care. Right? Host should ignore this flag routers need to look into this document router implementation should read this document to find out what they do. And that should save you a lot of time without actually as, making the process too complicated. Like, we do have Stuart in the queue next. Bob Hindon, the one of the other six men shares. I'm okay with 2 documents, but would clearly be very important that"
  },
  {
    "startTime": "01:02:01",
    "text": "They that there be normative references to each other. And, yes, we don't wanna have texts that different trying to say the same thing. It it should at most quote text, or it should shouldn't say anything at all. It said go read this in this document. Sirush Krishna. So Stewart, are you in front of me? Okay. We'll remove them. How did you get out of me? Like, That's like, oh, like, it's 2 1000 specialty. So, My preference, like, I understand Lawrence's concern. And I also heard Stuart. I prefer like a single draft That's also reviewed by 6 man. I have, like, existence proof of this, which is the mobile IP V Six spec. Which took a bit from the advertisement, but, like, mobile ipv6 working group did the whole thing. So there's, like, no separate document in 6 man to do it. So, but, like, I think 6 man job would be to actually review it and say, is this the thing to do in an RA or not. And and And I think that can be, like, you know, if somebody can kind of summarize send it over and say, Hey, this is what we're using it for. That email could be useful for man to look at it and say like, hey, are you using the right tool like, to do this, and that should be done. At least that's my view. Thanks. Go on. No. I I I yeah. That is because I I think one thing to point out is that the text has, but as as currently written has a bunch of normative language which are already causes the possibility of a conflict between this draft, which says stub reader must pull up a blah, must pull up a blah, right, which already create the call, possibility of a conflict. So I I, I do agree. The other thing is, like, you know, I think it would be for 6 men participants to review the whole of this. To make sure that, like, you know, you can't really say whether it's appropriate in the RA unless you understand how it works. Eric Green, in TD. I hate when we want to overdo the process. Honestly. There's a simple flags where we are using the"
  },
  {
    "startTime": "01:04:00",
    "text": "standard flag We have 48 of it or or them or 64. I don't remember. Now, you get a point, Lorenzo, the text in the current draft is way too simple to understand the context. This one, this issue needs to be addressed, but it could be in a single drop my own preference would be to make it this draft in 6 months with more text because you're you get the point there. I have something interesting there, which I think I do agree with. Which is why I came up. Maybe I said before make one document, but listening to the comments, Maybe we want a document which is first snack, router implementers, which is here's what you need to know. And we need a much shorter document for everybody else saying This is what you should do with this bit. And what one specific thing is hosts should ignore it. Because it would be an inadvertent owned goal If some host vendor. Says, oh, the snack bit is set. I will ignore this RA as not being relevant Right? Cause that's not what we want. So actually writing that down somewhere. I think would be helpful So you don't need to ignore the snack. Router is. But treat it like a real one treat the routing information options and the prefix information options treated as normal. If you see this bit, saying explicitly, ignore it doesn't doesn't concern you. I think it is important to that day. And if if, you know, nothing else about snack, host system. We should know that Okay. Yeah. So, mean, my reaction to all this discussion is that if we have a separate document, it actually say less, not more. Because, basically, the point of this document"
  },
  {
    "startTime": "01:06:01",
    "text": "The reason that it needs to be reviewed by 6 man is because we need a bit, and 6 man has changed control over the bits. The reality is this bit is not should not be of interest to hosts or routers. The only thing that should ever pay attention to this bit is a stub router. If you are not implementing the stub router specification, you do not need to look at this bit. And you shouldn't look at this bit, And so maybe that's the thing to say in the document if we do have 2 documents. But Because options are bigger than flags. Main main, why why the this it's like this is weird conversation of, like, you know, we're we're we're basically like, you know, tying ourselves in knots to do something that's trivially easy, which is just allocate a bit in the header. No. guys. At the mic, please, Yeah. So Right. So, Yeah. Yeah. I don't know. I mean, I think And and and, yeah, to to to Stewart's point, I think that that in fact, that what well, So what Eric was saying, not at the mic. By the way, I'm Ted Lemon in case anybody missed that. What what Eric was saying at not at the mic was that, we, we have behavior that we want. For things other than stub routers. That behavior is don't pay attention to this bid. And maybe not. Maybe this is where be written down. In fact, maybe that's the only thing we need to write down here. Because I think it does make sense to have a document that somebody who's not implementing a step router has to read if they wanna know what to do about this bid. But to have them have to read the whole stub router document to figure out what to do about this bit seems a bit unkind. So I think there is some value in having separate document for that reason, but Again, it should be really, really short."
  },
  {
    "startTime": "01:08:00",
    "text": "In fact, I think that, you know, we have a lot of texts, which I have up on the slides, for us to talk about in a bit, which, maybe we shouldn't even have in the docking So learn to create. I'm not gonna express more opinions here. I think we have at least 3 different opinions in partial conflict. So that that's kind of a it's kind of a problem because it's just gonna slow us down. I would want to propose one way of looking at this, which is this this actually two questions, it should be, should it be one document or 2 documents and where should those document. If if 2 documents should the should the, flag document being 6 man. So maybe if we split those two questions, it might be easier to answer them separately. I don't know stranger things have happened. I do have a proposal And with the I would encourage, you know, Hey. I would encourage the chairs to see if anyone cannot live with this proposal. So I would, you know, and and the proposals as follows, There should be no draft in 6 men. The draft should be here, and it should claim a bit. And 6 men should be required to review this and should assert its authority to review this and some 6 man experts should go through this draft to understand how it works. And say, yes, indeed. This is a good use of a bit and further the the authors of this document should make it easier for said reviewers to execute their sort of like their reviews by, consolidating as much as possible. The text explaining what this bit means and how it should work in a section that is easier to view. That's a proposal. And, you know, I I am I do think it has the virtue of, like, being roughly as good as any other proposal that anyone could make because this is, like, not very complicated. So I think we just need April. Yeah, queues cut. We have one more Hello, Mark Smith. I I think the the broader question, which I think is a 6 man question is, What is the purpose of RAs? Is it to advertise rare information to hosts, or is it for inter router?"
  },
  {
    "startTime": "01:10:00",
    "text": "I think, This seems to be the first instance of inter router, maybe I haven't read the draft, but It seems to be interrata. And and the question becomes whether you're implementing you know, interrata protocols and should it be carried in the United States and so and Okay. Tim Winters QA Cafe. The only thing I'm gonna say here having read the 6 man draft is you definitely, wanna make sure that you specify what people should do if they wanna ignore the bit. I think it's fine to have two graphs here. I I Lorenzo wants to get rid of the 6 man. I don't have super strong feelings about that, but you keep that draft, you need to tell people to ignore it. Otherwise, CPEs will do bad things. I promise you. Alright. Okay. Ahead, Karen. Yeah. Clearly, we need some more discussion, about the adoption of this draft, but keep in mind, we have to make this decision in couple of days or so because IANA bit allocation depends on this. So whether you want to consolidate the document or keep 2 separate documents. We should resolve this quickly. And and if I I'll just interject that there was a lot of the conversation that we heard is you very much. It's very good. Think we can I think we can get to that conclusion between the chairs and and work to an end to, to where this thing will will show up in a couple Alright, sir? The last thing is since we are kind of putting deadlines on our documents that we want them to be ready by the croopcroop by next IETF. So what's next? We promised"
  },
  {
    "startTime": "01:12:00",
    "text": "2 deliverables from our charter snack charter perspective. Once we are done with snacks, simple, it's time to move on to multi link infrastructure book, book, And, Since we are hosting interim meetings, we wanted to see if there are volunteers or interested parties who start who can come up and start talking about the applicability requirement or the problem statement related to multi infrastructure network so that we can kind of Start this work forward and also get get some energy that we will be have to swift, would would It it it Next FTF. So it's this topic is also worth some discussion I don't know if people want to come to the queue and talk about it. Why didn't you start that? Tell my man. Yeah. So, my reaction to this is I don't have time to work on 2 documents once. So if somebody else wants to work on this document in parallel, that would be great. But but but but but but I mean, that really would be great. Be nice if I didn't have to do the second document. Yeah. But, if nobody else has energy to do that, then I'm not gonna be able to work on this until we get first one done. But you can if somebody Yeah. Yeah. It's a it's a great opportunity for someone to start writing the recommend or start with something, and I'm hoping that Ted will mentor that person and send moving forward, Isn't it? Yeah. I learned security. I mean, what What? Problem can we possibly solve that it's gonna be acceptable and large class of networks. Mean, pretty much the only thing from a, from a rooting perspective, pretty much the only"
  },
  {
    "startTime": "01:14:00",
    "text": "I feel that pretty much the only possible answer here is just use DHP PD. And and that's just I don't see anything else. I mean, you're not gonna speak ISIS or OSPF to an price network. Right? So So do you really have even other, any alternative to DSPPD, for example? Because because that's a short document. So, like, you must do with HTTPS. So, Ted Clement again. So so, I mean, that's a really good point. Actually, we already have the 6 pd in the current document. The original I I don't I wouldn't actually describe the scenarios document is a multi link infrastructure document because As Lorenzo pointed out, we've solved half of the multi link infrastructure problem already. The difference between snack simple and snack advanced is in my mind is that snack advanced supports multi link advertising of services. And, and that requires support from the infrastructure. So we're talking we're still talking. Personally, I don't think that we care about this for enterprise, well, actually, maybe we do. But that's an interesting point. So So, yeah, this this would talk about, like, okay, you've got a stub router that you want to configure on your enterprise network, and your enterprise network is maybe there'll be some manual configuration of the router, but maybe there'll be some automatic stuff happening too, That's one case. The other case is you've got a home network that's multi link, and you want to be able to have a central DNSSD server. That is updated by devices on a variety of different subnets. Some of them might be subnetworks. of them might just be regular or IP subnets. Some And Some piece of that problem is relevant to snack. Probably not the whole problem. So then the multi link advanced scenarios thing, whatever it's called, needs to talk about that. Those how to solve those problems. And, you know, we need to decide which of those problems we need to solve."
  },
  {
    "startTime": "01:16:01",
    "text": "So this is something we've talked about multiple times in the IETF in the past. It's not really, A new topic the difference between what we did last time I would say, so last time being, like, home net, is we bid off a very, very big slice of the pie. And I think we did not succeed. And so the idea with snack is let's solve some small problems that get us real meaningful benefit and not try to solve every problem. And so To my mind, the big thing that is missing in snack simple is multi link service discovery. And that's what I think is the interesting part of the multi link infrastructure or or advanced scenarios or whatever we call it, document, So Eric Link, the NDDI If I remember correctly, when you were chattering the snack, We were simply starting first and only with a simple some people wanted to make it more complex. With the advanced 1. So we put in the charter a potential extension to have an extended More complex case, but it was never the plan. And I'm really, really concerned. To open This one, if the booking group wants to do it, we will do it. Why don't take me wrong? But I am personally concerned as a new job contributor now that if we start this path, we will end up in all net base. Step steps Right. This is a real risk here. So in short, I would not mind if we skip completely the advance. Is it in Teddy? Would not mind if we skip completely this part of the noise. To to to Ted's Aaron. To Ted's earlier point, right, if all we need to do is solve multi link service discovery, I mean, Sorry. That's reductive. But, you know, if that's the only problem we're trying to solve, shouldn't that just go to DNS it's it's it's Good."
  },
  {
    "startTime": "01:18:01",
    "text": "Yeah. Maybe so. I will say that when we originally chartered snack, there were a lot of people who were thinking At least that seemed to me to be the discussion at the time, If we actually, like, managed to get some of this stuff done, then we've actually gotten the camels knows about halfway under the tent. Maybe we can get the whole camel So Okay. So, point taken, we will see how we can scope out the next deliverable or whether it needed or not. And with that, We can move on to the document discussion. Starting with Stubborn, a bit and I'll stop sharing now. Thanks. And stop earning. This is the Stubbornner deck. And confirm. Do you want the clicker? Sure. Was was Alright. Yep. That should give it to you. So, An interesting question came up. As we were discussing the Stub Browder RA option, which is The term stub router actually has a variety of meanings. And, we have claimed the meaning of the term stub router is if it doesn't have a variety of meetings. And that might create confusion. Oh, wait. This is not the new version of the document. Alright. Let me find the link. So I will tell you what's on the first slide, is which should we pick a different name? And I suggested a couple of additional names. I know this is, I feel like we're doing a lot of just like talking about stuff that's not really technical and not really important, but I think,"
  },
  {
    "startTime": "01:20:00",
    "text": "confusing people about what what it is that we're referring to when we say Stub Browder not a good thing. ESco's suggestion was called an unmanaged stub router but I don't think that really first of all, that's a really big name. Which I don't like. And secondly, I don't think it describes the essential thing that we care about with respect to stub routers. So I proposed, some additional names that we could use instead, one of them is subrouter It's very close to stub router. So, maybe, The idea is basically it's a dependent router. Like, it's not It's not a router that's connecting networks to each other. It's a router that's connect well, it's It's not a router that is connecting a through network to another through network. A router that's connecting a through network to a network that is not a through network, a stub network. So sub router Might be a actually, we are talking about the same thing that everybody else is talking about when we say stub network. But sub router. Another thing we could call it is a dependent router. Same deal. And so, That's what I've done. I'm still looking for the newer slides. So, if you can go off these ones, maybe I just didn't update them. Anyway, the point is we need to we need to have that conversation reasonably soon is, We need to resolve ESCO's comment. And, Rinda. Clarify question. Do you mean, like, do you mean that if I am a router And then primary thread, router or some other thing that provides access to a network behind me. And depending on whether I prefix delegation or not. I am or I'm not a sub reader. No. Okay. So then maybe that slide is confusing. just No. So I am a Stubruder because You're Stubruder. So a What we mean by a stub router in"
  },
  {
    "startTime": "01:22:00",
    "text": "The context of snack Specifically, is a router that is connecting a stub network to an infrastructure network essentially opportunistically, like, like, you just plug it in and it works. There isn't some management process you have to go through to make it work. It's essentially intended to handle sort of, home network and maybe Soho network use cases more so than enterprise use cases where you kind of expect there to be some management process or you know, some some, you know, Yeah. we So, basically, we expect expect the network operator to be in role of the router rather than the router just opportunistically connecting on its So Anyway, I will go through the presentation. So this is the presentation that I prepared for for 6 men you guys know. So everybody here, I'm sure already knows that a stub router is an unmanaged self configuring router. Especially since I just said so. And, its goal is to provide routing to a stub network like thread or, you know, any sort of, constrained network or it doesn't have to be a constrained network. It could just be a home router plugged into a network that another home router is plugged into. We want actual routing and not Not a double net. Double net. So the main use case constrained networks, And, So you can have devices that I'm not actually sure. Oh, yeah. Yeah. So you can have devices, that, route to stub networks, things that are called stub networks globally, like you know, you know, the general use of the term that are not stub routers because they're not doing this sort of up opportunistic connect to infrastructure thing. So, Let's see. I need to work on that slide for the next meeting, I think."
  },
  {
    "startTime": "01:24:00",
    "text": "It's not working. Here we go. Okay. So why do we need an RA flag? So Stub Browters wrap between stub and infrastructure, We have to have IPV 6 because we need the RA. That's the only way we can actually establish routing. And, there isn't an equivalent RA at ipv4 unless you count like like like What was that protocol we used to use? Anyway, nobody implements it anymore. Sorry. Rip. That's it. Rip. Yeah. Anyway, so, So we have to do this whether infrastructure provides ipv6 or Right? Like, we need ipv6 to do the routing, but maybe there isn't any ipv6 on the infrastructure that we're connecting Stubbroader to. In that case, we have to provide addressing. But but but If The infrastructure does provide IPV 6, we don't wanna provide addressing. So we need to have some way of distinguishing between stub routers and other routers so that we know whether you know, we know basically what's being provided on the infrastructure. So and we need to notice particularly, like, like, Normally, like, if the when we originally did this, we just said, The stub router advertises an RA if there is an RA price. Like, if we do router solicitation, We don't get an answer back. Okay. We'll publish a route, or we'll publish a a a prefix. The problem with that is that, you can get into race conditions where you wind up with 2 stub routers that each think the other one is the router. And so they're they're basically round robin deprecating each other's prefixes. And that doesn't work. So we wanted to be able to very clearly indicate whether or not we're a stub router so that so that when another stub router sees our RA, it does think, oh, that's the infrastructure router. I'll turn off my my myRA. So So there's a little Well, that's this. I'm pointing it to Conway."
  },
  {
    "startTime": "01:26:02",
    "text": "Shouldn't have to. Yeah. So, so the two cases where we really need this bit are the infrastructure versus stub prefix thing that I just described. Just so that we can tell the difference between an RA that a subroader sent and an RA that the structure rotors sent. Ahead, Lorenzo. Is it forbidden to also be a stub router and announce a prefix for the purpose only of stub network communication. If the infrastructure, that's a really good question. And it's it's something that we'll talk about in the, In the stock in the stub router as the snack simple document later, The answer is if you are The infrastructure router then, yes. Your routing. You're you're a stub router in the sense that I said on the first slide, but you're not a stub router in the sense of snack. So so you would be you're you're the if you're the structure router, then you're in charge of addressing on the infrastructure network. And so it doesn't make sense for you to set the stub router But that network might not have ipv6, for example, if I'm I'm a CPU and like a normal home router with a fiber connection, right, I'm always there. There is basically or if I'm the wife access point, there's no networking without me, why wouldn't I say, okay, you know, I also support being a sub rooter. There's no V6 on the upstream. I'm just gonna send an RA with with s. Well, whatever. What's flag, oh, our s equals 1. And by the way, you know, if you wanna use this, this is a stub prefix that everyone can use because it it's useful. It seems useful to centralize this function. Sacca is coming along with, you know, none of this stuff is deployed. So, you know, this doesn't exist, but in the future, would be nice to to avoid this, like, you know, stub rooters finding out about each other by just having a centralized function that's always there that does that. So like, if if we did do it that way, should we say Right. So, flag or not, I don't know, but that's an interesting Well, so so that's that's actually a slightly separate quest because what you're really talking about there is you've got potentially 2 home routers connected to the same link. Either of which could advertise"
  },
  {
    "startTime": "01:28:03",
    "text": "a ULA prefix that's essentially a stub prefix just so you can do ipv6 on the network. Right? Maybe one of them has a connection to an ISP And in that case, yeah, that's a really good point. You you might wanna be able to something similar to this where you don't have to have both routers advertising A ULA prefix because I we don't need 2 UOLA prefixes. right now, like, if you install open WRT and you Right? Because don't explicitly turn off ipv6, even if you don't have an ipv6 still get a ULA prefix. Right. And and it's not just a question. Open double g. I think that's like, that might be mandated in 7084. Right? Yeah. I hit it right. Right. So so, yeah, so then, like, kind of, like, in many cases, there's already, I mean, I guess we just need to So, so basically, we're that's that's that is out of scope for snack, I think, is the main Right? Like, like, you might be right. But whether we actually need to have something like that is kind of orthogonal to this whole question. This this is strictly about Stub Broader's. And I think trying to do that with the infrastructure router would probably cause more harm than good. If we need something like that, we probably need another bit So Yeah. Suresh, so, like, Lorenzo, it helped me at least Suresh, conceptually. I'm just gonna throw how I understand this. So, like, maybe it helps you with the infrastructure out a bit. So it's I see it as very similar to the neighborhood harassment or red bit. Just the opposite of it. Like, you know, you're saying, like, is there a stub router? Like, don't get it or something because I said so. Right? I think that's really the it's like a orbit set to 0. That's how I thought about it. It kind of makes sense consistently. If you think it that way. Hi. This is Priyanka I just had a question regarding what you consider as a stub network. Would you also consider multi hot large moneys on this side and the infrastructure, wired infrastructure on the other also, this such as a stub a stub network."
  },
  {
    "startTime": "01:30:03",
    "text": "No. So stub networks in at least from the snack perspective are always a single hop. Just a sing basically a single a single raw a single broadcast on there. Sir, Suresh, you're basically saying that the stub router is a Is there RA provider of last resort? That's what you're saying? Yes. Okay? Would be very helpful to to state it that way, I think, because it it clarifies a lot of Yeah. A lot of what we're trying to do. And basically yeah. I mean yeah. As we talk about this, I'm wondering if there actually isn't a an actual 6 men problem here, but I digress. So so And this is why I think now that I think about it, there might be an actual 6 man problem because So there's this MNO bit consistency thing in the neighbor discovery document. Where, It's supposed to be the case that all of the routers on the link. Consistently advertise the same MNO bits. Because we don't wanna be don't wanna have, like, alternating RAs coming out from 2 different routers on the same link. The disagree about whether the link whether the link is managed. And whether the link you know, basically, whether you whether you can use DHCP. Stewart? Priyanka just asked a question and I think we might have given the wrong answer. I mean, I mean, maybe I'm being a bit pedantic, but if on this right, Frank, Frank was asking, Can a stub network with multiple hops? And we said, no. It's but a thread mesh kind of is multiple hops. So I think it depends how you count the hops. Well, okay. That's a good point. It's it's a single it's a single layer It's a single layer too. Right? Like, it might be a it might be a layer to mesh. And then there would be multiple layer 2 hops. But Threat is not a multi link layer 3 network. Okay. Mhmm. Bryce. Yes. Single prefix."
  },
  {
    "startTime": "01:32:00",
    "text": "Yeah. Yeah. Eric said the right thing. Single prefix. That that we're clear on. Yep. Yep. So anyway, so so the other issue that we the the other reason that we need the the stub router bit is to, Get our MNO bit behavior correct. Stub Browder basically should not be overriding whatever the infrastructure router So when we see an RA from a router that does not have the sub router bit set, that's got the MNO bits that we should be including in our RA's. Right? Because we're not gonna change the M and O bits. And so that creates some complexity. Not bad complexity, but the point is if we see MNO been set in the infrastructure router advertisement, then we want to persist those MNO bits for a while. When in our RA's that we send out as a stub router, if we see MNO bits in another Stubroader advertising, we probably wanna also send the MNO bits, but we don't wanna persist So in other words, because we just saw an advertisement that's that's set the MNO bits a particular way, The was that was from a stub router We'll set them the same way. But if we later see different M and O bits from infrastructure, we're gonna prefer those and presumably, the stub router that that is reflecting the old MNO bits that it saw in an RA a long time ago maybe. Will continue to persist those until it times out at which point they will go back to the default date, which is probably off Eric Klein. Sorry for not having followed things terribly closely and I thought I had maybe brought this up at some point in the past. But, And I know you wanna save, bits where you can, but Is this not what a PVD option is for? I I I mean This is absolutely not what PVD options for."
  },
  {
    "startTime": "01:34:01",
    "text": "It it's own, it's is, it's it's it's it's it's its own sort of You you only want things that understand the PVD to actually process it. Want things to be ignored otherwise? No. No. There. No. So No. It does not. It does not. Yeah. Only if you wanna do the bootstrapping together, doesn't require DNS access or Internet access. It's just defining a consistent set configuration information for using the network. That's what so I'm I'm just gonna suggest something in the interest of time if you think that's it. Solution, maybe we should take that to the list and and describe that Yeah. Yeah. I I'm willing to just to accept his answer. Okay. Just just just to just to just to to slightly answer your question. Bear in mind that the consumer of these RA's is hosts. Right? And it's hosts that we don't expect to have special software on So the stub router RA is just an RA. The only purpose for the stub router bit is to tell other stub routers. That this RA came from a Stubber River. That's it. That's all it's for. It's not Doing anything special. It's not There's not a special provisioning domain. It's just the signal to other Stubborns. And if we try to make it more than that, we're gonna be very, very that Okay. you. I understand. Thank So I think you're all thinking this a bit better, right, like for the MNO bit, right? So, I'll tell you at least my point of view. Like, if you have multiple orders on the link, If they advertise different MNO dates, you have a configuration file a configuration error, you know, I need to address it. Okay. That's the first thing. So, like, don't consider condition at all. No. No. That's the first bit. Right? The second one is Even if you don't want to persist. And even if you say the stop it, the hosts are not gonna understand it. Right? Because you're not they're not looking at the stop bit. So, like, if if they're flagging, they're, like, still gonna go up and down. You're, Yeah. No. You're not understanding what we're doing with this No. He says, like, don't wanna purchase the MNO beds."
  },
  {
    "startTime": "01:36:01",
    "text": "So what you just said is not what we're doing. K. We're not trying signal to the host. to How to treat the M and O bits. We're signaling to other stub routers. To treat the MNO bits. The host is supposed to ignore this authority. Exactly. Well, it's no. It I mean, it's Other stub routers, I'm also a stub router. Don't listen to me. Sort of. But it's not even that because worse, as you said, Suresh, it is a configuration error for us to send different M and O bits than the other routers on the net Correct. And So We have this sequence of time over which RAs have been sent. Some of which will be infrastructure RAs and some of which will be stub router RAs. And a of any particular stub router that's of the network may or may not have ever seen an RA from a from an infrastructure when the time comes for it to send its first RA. I still understood. Yep. Yeah. So but it's it's probably gonna have gotten an answer when it sent out the r the router solicited, and that answer may come from from another stub route. And the stub router that it got the answer from is copying the MNO bit from an RA that it got from an infrastructure, Robert, ages ago. Correct. Right? I, I, I understand all just this, but I'm seeing, if you see a stub router bit set, right, I'm not gonna get any information out of rather than ignore the stuff that's coming out of it and not copy it. Right? No. saying. No. That's not what we're Okay. Like, th then I'm confused because, like, that how I understood the subject, like, saying, your subroader gets, RA with a subroader bit set, I'm not gonna take that as authoritative. Right? No. You're not reflect gonna say it was authoritative, but have to you still You're just treating it differently. Right? Okay. The so so so if I've seen an advertisement from from from an infrastructure router within some time limit, that had the MNO bit set a particular way. Then I'm gonna reflect those MNO bits. Mhmm."
  },
  {
    "startTime": "01:38:02",
    "text": "Now another sub router comes along. For whatever reason, the infrastructure router is an isn't answering the router solicited at this moment. So we don't see the answer from the from that infrastructure router. We do see an answer from a stub router. We're gonna copy the bits from the stub router. The difference is the lifetime on those bits is basically like if I now see another heismit from that stuff route stub router it's not gonna I'm not gonna pertain it. Okay. I, I in understand what you're saying. It's not the draft. Right? Like, so, I think it's probably like, you know, something you need to do. I have concerns that I'll probably write an email about it because, like, I didn't get it from the back. There's an issue. There's an issue in the issue. Sorry. I'm Yeah. Verizon Credit. It given the complexities that you've just described, it seems prudent to say that hosts must not if it's if they host that have been upgraded to understand the specification, must not look at the m and o bits from a stub. And at least, you know, 10 years from now, the problem will be solved. So it it seems prudent. I'm not saying it is a solution, but we do still need this sort of, like, weird, like, you know, time based stuff, but it would be a lot better to say, look, you know, if I'm a stuff, because the problem the reason why I actually erased it, I I think I was the one that raised this problem in in originally, the problem is that you cannot say anything about MNO everything else in the RA, you can you can basically decline to state, but the MNO bits are there. And the rural lifetime is there. But but that's always here. But even if you even if you say that the stub router bit says ignore the MNO bits in this RA, What are the value of the what what if you haven't seen any other RAs? What's the value of the M and O bits? Their undefines, Okay. 0. You see the problem? No. But, like, it the MNO bits are about infrastructure that exists. Right. So if you don't see any RA, then you assume their non so Yeah. So I just took up the line on that, Ted. I think there is text in the current that describes the the use of those MNO bits and the draft, right, it'd be great to everyone's very familiar with that. Yeah."
  },
  {
    "startTime": "01:40:03",
    "text": "Hi, yeah. Mark Smith. From an ISP perspective, we've delegated prefixes, etcetera. Simple c the single CPU is common. I generally think of these sub routers as more like edge routers and downstream of that, whatever the MO bits are, whatever people do with the slash 48. Is up to them. It's, it's a black box. So And I appreciate that. That does sort of fit in the stub definition. the Also do see this issue as well once Price 2. Yeah. But but it's then they well, like, up to them, what they've set their m o m and o bit too. It's not my not my position to say it's how they do it on their own network. To me, it's the edge. Yeah. It's packet source. This actually goes back to the point that we were talking about Laurens was talking about earlier, which is if you've got 2 ISP routers connected to the same link. I do. Right? Yeah. So this is exactly. So so So are the ISP routers tracking each other as MNO bits? Yeah. be. According to the spec, they should Yeah. Yeah. And then there's but bits with, yeah, in in overseas to say, there's other combine the 2 together and the M and O bits are, like, the evilest thing ever. Stewart. I'm wondering if next time in Vancouver, should probably start off with, like, like, a 10 minute reminder of what we're working on here. Because I'm thinking a bunch of people with the best intention coming to help, but maybe don't know all the background. Is this is a very fair point. And, the the background, as, as I recall, I hope I'm gonna get this right now, But, and I'm gonna be talking at the IAB meeting on Wednesday about threat. Which is part of the genesis of this. Are We People do home automation with Zigbee and Z Wave and other things. Thread is different because it's IPV6 technology. And there's"
  },
  {
    "startTime": "01:42:02",
    "text": "internet people, Ted and I were predisposed to like that. And, and we thought this is great because you could mix and match ethernet Wi Fi thread, anything carries IP packets. application is the same, I think, opening the room. The Knows the benefit of that. And then we went down this of what do we need path due to make this work, Without SIS admins configuring things by hand, because you have to sell products to end users who're gonna put them in the home and you don't know what they have in their home or what their ISP might provide So thought this would be fairly easy and as many things are to not be not quite as easy, but not too bad. I think we're making good progress. So So the idea is you you put this device in, which a thread border router. And it uses IPVisa routing. It's not NAND. It's not an application. I go to a we thought we believe in IPV6 and routing, so we're going to do it that way. And we can use all this wonderful stuff that V Six has that V Four doesn't like rapid Versum and route information options and prefix information options. And in principle, all the toolbox was there, for us to do what we wanted. There was some bugs in iOS and and Android be fixed because it did not really been tried in that way. So So that's what we're doing here. And the the challenge here is The customer has an ISP that doesn't support V Six their home gateway is not doing Dushupv6 or route revertsments but they want to use home kit or matter, which uses V Six, across multiple prefixes through the router. Through multiple routers. So on day 1, The user installs their little glow, And it says, uh-oh, I see no V Six here at all. It's all down to me. I have to basically make a and not just a B6 network. 2 V Six networks and route them together here."
  },
  {
    "startTime": "01:44:01",
    "text": "So it does router adverts on the wifi side. It does the equivalent on the thread did add picks, random ULA prefix for the wifi network a different one for the threat network. It advertises route information options to tell the wifi clients, hey, if you wanna reach prefix go through me because I can reach the other network. And it And that that part works amazingly. We've been shipping that for, like, 3, 4 years now. And, yeah, you dropped this little ball on paraton, and now you've got working V Six. Where where we're hitting now is We went from customers having no thread border routers that was a problem. To than buy 1. To now they have an Apple home port and an Apple TV and another home port and a Google home hub max, and an Amazon echo, Now they've got suddenly, they have they have lots of border rafters. My point, my point, my point, my point, my point, my point, my point, my point, my point, my point, So so we've got a different problem. And then you get this situation where all these border rafters don't know the things they talk to also thread border routers. Doesn't know that they're stop routers. And then your ISP ships you a firmware update and offers V Six service. Well, we won't tell all these border artists that have been sort of in this little echo chamber, repeating what they heard each other say to go, oh, like, The big boy's in town now. He's a real VC factor. He knows what he's talking about. We should start listening to him. And that is my summary of what this bit is about. To say that we're kinda second class searches at the front. We'll do the best to run a IPV 6 Network Care. If somebody comes along, who knows more than we do, We should all listen to that thing. Not to ourselves. Very well said, Stuart. Yep. I think it was a useless conversation. Yeah. I I think I mean, this has been I I I may have expressed a little bit of frustration up here, but this has been discussion. So so I apologize for the,"
  },
  {
    "startTime": "01:46:01",
    "text": "the frustration that may have come out. This is this has been a good discussion So, So I think we've covered the MNO bits pretty thoroughly. Wow. Oh, you know what? In a second. Yeah. Irrigo quickly on the MEO bid. I painted a couple of text on RSC 4861 in the chat. Doesn't seem so dramatic. To having consistencies. Yeah. I mean, the reality is at this point, hosts pretty much need to deal with inconsistencies anyway for the you know, you know, So, Yeah. So, I mean, I think we've we've, clearly, got some thinking to do about how we're gonna proceed with this I I don't feel strongly about having 2 documents The reason we originally started to have 2 documents was because that seemed like it was the right thing to do process perspective, So I'm perfectly happy to do one document. If we do do one document, I think it's gonna be a little challenging for people who aren't implementing stub routers to get the information they need without bogging down an information don't need. So To me, that's the argument for 2 documents, At this point, I will say, the question of whether to use the RA flags option or whether to use 1 of existing RA flags did come up the beginning of this conversation. When we issued the version of the document that we just issued we had made an explicit decision that we were gonna leave that decision up to 6 men. And that means that We just put in what we want, which is A flag bit And it's up to 6 men to tell us you know, to do, and I feel like that should be a consensus thing at 6 men, not just a directive, Personally, but but but"
  },
  {
    "startTime": "01:48:00",
    "text": "you know, We don't have a strong investment in in how that comes out. I I got the sense that there was a feeling that there needed to be some rush about deciding this. And so we should get the document exactly the way it should be before submitted 6 man, a, given the conversation we just had, it's not clear to me that in that big of a rush because we need to actually make some decisions. So I don't think we're gonna make those decisions prior to the 6 man meeting. Think it's still worth presenting this in the 6 man meeting, and I'm probably gonna update the slides based on what Stewart just said, because I think that was a much better way to present this. So I think we we will wanna talk about this in 6 man, I'll also summarize, like, you know, all the controversy that occurred here. And, That's it. I think so. Yeah. Thanks, Thanks, everybody. Ted. Maybe wanna take a a breath. We've only got 12 minutes left in our session. We are going to so just say thank you for everyone who's come up to the mic and expressed, concerns and opinions and thoughts. Yeah. Certainly, from the chair's point of view, I think this has been a valuable discussion to have in this group. So we've got 12 minutes, we will the next part of our our meeting we intended to be doing know, going through issues, and doing live updates, live editing of that. Let's take, now, just let's say 30 seconds here and and think is is there is there anything we could come up with? Is there any of the open issues week should be tackling next or or first in the limited amount of time that we have."
  },
  {
    "startTime": "01:50:03",
    "text": "So, don't know if you saw this go by, but I did actually update a couple of 2 of the issues. And I think I put in a pull request on one of them. Okay. So we could talk about that if that seems productive. I mean, that seems like a productive, use of our time. And we can close those perhaps and or move them along a little bit. Yeah. Okay. So, how are we gonna do that? We will share the open issue and conversation. Sounds good? So just go to GitHub. Yeah. Let's see. Ted, would you like to drive that or want me to bring procure and bring it up. I'm not in the meeting room. So it's probably faster for you to do We'll race. Yeah. One of mine. Rentals, the circuit How does this look? Kieran Wins. It's a little bit of an eye chart. Yeah. that's That Yeah. Okay. That's starting to be legible. I think I can Which one would you like to? So, the issue there's there's 2 issues. 1 is that that that I worked on today. One of them is the taxonomy issue. So and the other one is the, the issue that you'd open a while back. So let's look at the yeah. So"
  },
  {
    "startTime": "01:52:00",
    "text": "the taxonomy issue is basically we had had a conversation this point probably to IATS ago about whether snack, should be considered harmful and prevented. Basically was the, contention of of the person who raised this And so we actually went through and try to do an analysis of what scenarios snack might be configured in and whether any of those were problematic. And, of course, you know, through the the heavy use of of motivated reasoning, we came to the conclusion that that there are no such problems. But the value of the exercise is that we made a list of cases. And then if somebody wants to come along and say, you know, there really is a problem, then they need to add an they need to add an entry to the list or point out why we were wrong about one entries. It's already on the list. So This is, ESCO's summary, but we can actually look at the pull if that would be helpful. So there's only one pull request open, Karen, and that's the pull request that I'm talking about. I need to go. Okay. Yeah. If you that just if you just click on pull requests and then just, yeah, open I wanna and then click on files changed. X. Files Okay. Okay. So side who side by is Alright. So, we probably- it's probably not that helpful to have a side by side comparison here. It's probably better to show the, in line because I just added a bunch of text. Not really a change from one thing to another. Just on the little gear button. This is assuming that I actually pushed the right change."
  },
  {
    "startTime": "01:54:01",
    "text": "That's pretty weird. Maybe I didn't push the right change. Yeah. That's weird. Sorry. I guess we can't really review this I seem to have screwed up. Sorry. Yeah. Now this is unless there's down below, more changes there's a large chunk down below. Yep. Is there? Yeah. So keep scrolling down, Karen. These changes are not to change. Keep going. There we go. Okay. So, basically, I just added this. And, so it's an analysis of deployment share scenarios in which other other cause problems, And, I went through the list of use cases that were raised on the mailing list a couple of ITS ago. So the first case is the unmanaged home network, which is actually our target market And so the conclusion that I drew there is that we don't have an issue because the whole point of this is to address that use case. Of 2nd use case is a properly managed network by which we mean a network where the network operator intentionally does not want random devices connecting to the network and advertising routes. Router advertisements. And in that case, they have configured RA guard on their network, which is blocking spirious RAs. And so what that means is that if you connect a stub router to this network, it's not gonna work. Also not gonna cause any harm. Tim. You're okay with that not working? Because somebody asked for RA guard on 70 corpiz. And that should definitely not happen."
  },
  {
    "startTime": "01:56:00",
    "text": "Okay. We should talk about this. Yeah. I know. Somebody asked me for that, and my eyebrows went up. Yeah. No. Our a guard explicitly is for managed You have to enable it explicitly. Okay. We should we should we're gonna put some text in 78 for because this is gonna go sideways real quick. Yeah. No. You She cannot have a regard on it. Okay. I I I hadn't it's not in there now, but I did get the request yesterday. Yeah. don't No. I think it would be good to add some text that says, put R and R. I will add that text. You can have a click box that turns it on. It just shouldn't be on by default. So Eric Vincare, as a Cisco guy, we do not implement in regard on switch by default for the exact same reason. Yeah. Oh, this hot topic. I don't know if there's anything we can do about this, but, I mean, our corporate network has already guard, but sometimes these RA is just like happen to be received. So I don't know if there's anything that we wanna do about that in the sense that probably our yard implementations aren't perfect. Do we wanna think about, like, how to set these lifetimes to sort of limit the extent of the damage. Maybe there's really nothing we can do. I I don't think that there's actually damage I think it's just like, like, like, like, like, you know, you get an extra address. Like, what's what what act the the reason to do this is not really to prevent harm so much it is as it is to prevent weirdness. It's possible that the if the RA if the RA leaks through, but host to host, communication is otherwise prohibited by using the Wi Fi wireless network isolation then you get an address that doesn't work. Yeah. It is a bug in the RAguard in not sure if we should say anything about It it doesn't really feel like that's our fault. Now, the other question that was raised is do we actually want it to work in this case? And"
  },
  {
    "startTime": "01:58:02",
    "text": "one other answer to that is that if your network is and I think we cover this in the next item here. If if PD per host is enabled. You don't actually really need to send RAs anymore because in principle, the routing is gonna work. So so then you can turn on our a guard, and your sub router will still work as long as PD is supported. And as long as it's routed, correct, Sorry. I just want to go follow-up on as Lorenzo said because I realized it's actually will be harmful. You know, why? Because if I have a device, which got your array, with a prefix. And it was exactly the moment when device decided to enable a guess which address will be used for slot. In this case. No. And guess how well your communication to before the destination's gonna work. So it will be actually harmful in some race conditions scenarios. So I don't think we can claim such as advertising around the prefix we we we're trying to address this and fill out the draft in V Six ops. But current implementations will be badly broken. Okay. Mean, it seems to me that that that the the way that this should be addressed is by having configured on your network that works correctly. But, but because, I mean, even if even if Stubber outers aren't doing this, somebody if somebody wanted to deliberately attack your network. It would be very easy to do it by sending RA's. So if you don't have a working RA meditation So You're vulnerable to this. Not our it's not really our problem. I was just actually, this is a comment that if we leak Like Yeah. No. No. I get it. Yeah. Look. So the last tonight was when we can arrive with additional precursors, actually, Yeah. So it'd be it'd be worth if you wouldn't mind maybe sending a note or adding that to the to the issue so that we can track this. And we're out of time, Well, Aboom. We got through two sections. Yeah. So that pull request is up"
  },
  {
    "startTime": "02:00:01",
    "text": "right now, if anyone has thoughts on it, burning desires to say anything on it. Please furiously type into the, comments on the potty crust and review it. I thought that would be fantastic. I'll fix the weird, like, text changes that were not when you're not intended. Sorry about that. I I just wanna thank everyone for the, you know, the that it happened and, and we were able to have that here. We didn't necessarily get through things to the our our pull requests and our issues as we thought we were going to, but, we had some really important discussion and, Thanks everyone for coming. We will see you Momentum is in a couple of weeks in the next inter meeting. Kieran, did you wanna say anything? Hello. It was a great meeting. Thank you, everyone. Thanks."
  }
]
