[
  {
    "startTime": "00:00:22",
    "text": "okay so i guess we're at time so good afternoon welcome to the lake meeting it's itf 114 my co-chair militia is remote but is popping on screen say hello hello hello this is malicious speaking great uh i think we marco's kindly agree to take note so thank you marco we'll keep an eye on the chat ourselves as chairs okay so there's the note well i guess you've seen this before during the week um have a quick read and enjoy it additionally uh we're as a hybrid meeting we need to kind of pay attention to remote people so if if you're a remote uh please keep your audio and video muted unless you need to speak uh if you're here and you want to go to the mic please join the queue if you can but we don't have thousands of people so that's it's probably quite manageable but no harm no harm to join the queue uh if you can do so before going to the microphone and if you go to the microphone please also state your name you need to click onto the data tracker somewhere or scan the qr code as paul is doing in order to sign into the meetings for record keeping so please do that too uh so there's some links in case you need to do a bit of clicking and here's our agenda for today um so administrator we're doing then we'll have mark we'll talk about some computational analysis as then we'll baptised so the main kind of goal of today's meeting is to get"
  },
  {
    "startTime": "00:02:00",
    "text": "this feedback from people who've been doing analysis of the protocol then john i think will give us an update on the draft and traces and so on and marco has a quick report on the hackathon and then we have one other thing uh malicious i forget what it is you remind me yes so we received one request on from marek to give an update on the uh his work on test factors but i don't see mark in the participants list so uh with that i guess if we can just do the regular gender bashing see if anyone else has any proposals so great so if he shows up and we have time we'll get to that and then finally we want to try and discuss what else we think is needed before we get to working your best call and move towards being done so status militia i think you want to talk to this yes so i wanted just to give a brief update on the status uh so essentially as as steven noted we are kind of wrapping up the formal analysis stage of the protocol uh during the previous itf-113 meeting we had the symbolic analysis presented of all ad-hoc meta authentication methods uh right in this meeting we will have two presentations on computational analysis of method 0 and method 3 by mark and baptist respectively so as you can see we have kind of all almost all parts of the protocol covered which is great on the implementation security side i won't be giving an update as due to the lack of agenda time but we made some good progress on that and completed uh the hacks back implementation that i mentioned during the previous ietf meeting uh i will be giving an update on the implementation security of one particular implementation during the london meeting uh during the itf 115. so as steven noted the goal of this meeting is kind of to to gather the final results from the formal analysis"
  },
  {
    "startTime": "00:04:01",
    "text": "stage as well as to discuss what else is needed before the working group last call so one note we created the page lake workinggroup.org lake wwg.org where uh we are keeping track of the different activities uh around the uh the working group mainly interoperability testing formal analysis some informal uh presentations of the protocol like key schedule so just something that facilitated the formal analysis in the past so give this a a look and we welcome any feedback if you have any uh on on this particular page uh that would be pretty much it on this slide one one more aspect that i forget uh forgot to mention previously the external people have uh people external to the working group have mostly been referring to this to the protocol as a lake so uh we as chairs uh we wanted to kind of uh brief uh kind of paul the working group on the uh on the question whether uh renaming uh ad hoc two lake makes sense and we will be doing this in the next days on the on the mailing list so that would be all i wanted to to mention on this slide i think we can go ahead with our first presenter unless even you have something to add yeah i just i didn't i neglected to give people an opportunity to actually bash the agenda so does anybody want to bash the agenda not seeing anyone then yes we'll move to the next presentation yeah so the first presentation is mark hello uh just test me you can hear me"
  },
  {
    "startTime": "00:06:00",
    "text": "and see me okay we can hear you and see you and you should have control of the slides perfect thanks and i guess i can get started right so hello everyone so in this short presentation is about our work on a computational analysis of adopt six sick the work was done in the context of my master thesis which is being supervised by felix gunter at zurich given the time restriction i will only focus on the most interesting part insights of our analysis a detailed write-up should be available once the thesis is completed in a few weeks time actually in a week um so with that said i would like to start by summarizing our main results the main takeover message from our analysis is that the educ is structurally sound and secure we targeted key secrecy we analyze explicit authentication and the four secrecy guarantees of adopt six sig for our security model we analyzed edoc in the multi-stage exchange model that i will briefly explain later so the main output of our analysis is a security proof for erdogan however a caveat or analysis that i should state is that our bound is not tight um however belief that the recent work of davis etal on tls 1.3 should be a good opportunity there to provide the better tighter security analysis of edoxing along the way in this analysis we also gained some insight into the market and signed protocol that we'll share as well in hope that it helps with potential further development so let me then start by explaining our security model as mentioned we analyze edoc in the multi-systec exchange model we closely follow the work of doling a tile on analyzing the ts 1.3 and check"
  },
  {
    "startTime": "00:08:00",
    "text": "protocols so in the msk model we consider a key exchange protocol here denoted by pi that can be used for example to establish a key to communicate over an insecure channel furthermore users will run typically multiple concurrent instances of the protocol that we call sessions we additionally consider a strong adversary that can compromise long-term secrets can eavesdrop and modify messages arbitrarily so they have full control over the network key indispensability then will capture the notion of the secrecy of the session key since there is a question yeah so the goal of the adversary is given access to either a freshly generated session key or random one they should try and distinguish which they received a closer look at edoc shows that edoc is not just a protocol that derives a single session key but there are actually multiple stage keys that are derived throughout the protocol in particular four in our model so just the msk model is adapted to edoc so in particular multi-stage protocols um may introduce dependencies between stage keys that are potentially unwanted and so the sql model allows us to capture such issues and it also enabled fine-grained analysis of the stage keys thereby giving an overall security proof explicit authentication was of particular interest in our analysis um and this will be the the subject of the reminder of my of my talk very informally explicit authentication captures the fact that"
  },
  {
    "startTime": "00:10:00",
    "text": "for authenticated stages only the peers knows about the stage keys and they also demonstrated actively knowledge of that key however in edoc we particularly looked at the specification for credential identifiers and the possibility that they may be non-unique there is sort of an ongoing discussion going about this and what we did is that we took a very conservative approach and we modeled this aspect by assuming that all identity i don't um all credential identifier may be non-unique and furthermore in our model we actually allow the adversary to choose these these identifiers arbitrarily in order to essentially see what sort of security guarantees we can have in addock so with non-unique identical credentials identifier i'm sorry so at glance it seems like a receiver of a message for example here in shetty would have to verify multiple public keys related to the same identifier in order to then validate the identity of the pier so in the scenario that i'm depicting here we see that we could have an adversary who would intercept the second message and then what they would do in our model is that they can then register a new user with a public key that is associated to the same id cred and this key pair is specially generated in a way that for every message and signature this public key always verifies and the consequence of this is that this protocol as depicted here at least this sort of simplified version of edoc will run through um and the protocol will not stop and i will explain a bit later why so here we're saying that again i've sort of simplified edit by"
  },
  {
    "startTime": "00:12:00",
    "text": "showing that in the second message the receiver the responder would send sort of a key identifier a signature and then some message obviously the message is not really sent in edok as we know um only sort of partially and uh interesting observation is as well that's the message that the the actual responder sends is always different than the one that will be verified for the malicious key this is because the credentials are signed if you recall the run of edoc the credentials are signed therefore the message always different so the natural question then here was what type of security guarantees do we need from the signatures well we realized that in fact we need more than the normal unforgeability that is usually sort of the minimal required guarantees in the previous attack actually the transcript hashes as you've seen the adversary never changes the communication transcript so the transcript ashes nor the keys will are modified therefore the protocol runs through without error so this inside the fact that we need besides forgivability we need a notion of exclusive ownership of signatures and in particular because as we said the messages are different for different users who are authenticating themselves we need the minimal required security guarantee would be destructive exclusive ownership interestingly the macdon sign protocol would also be vulnerable to a similar attack if the signature scheme would contain weak keys and additionally we also saw that the ambiguous and ambiguous nature of sebor and when it's encoded also prevented some issues that would for example come from concatenating but by"
  },
  {
    "startTime": "00:14:02",
    "text": "strings as is done in the computation of the [Music] mach 2 for it for instance so fortunately um we could show that the signature scheme in adult six sig provider required exclusive ownership guarantees so in particular edwards 25519 is known to provide universal exclusive ownership for scdsa it's not really the case however the fact that the public key is also signed um is enough to provide the security guarantees that we need namely exclusive ownership um however this requires that there are no weak keys and also inside the fact that the implementation must be must perform all the checks um as we've seen it's not always the case with the recent cv for example on such psychic signatures and beside exclusive ownership our proof um we also required strong enforceability instead of just the existential unforgivability of signatures this is because in contrast to tls 103 uh the magnet sign um the mac is under the signature and not it's not the other way around where the mac also covers the the signatures without that the consequence is that an initiator for example would accept a second message even if it was modified by sgfcm attack the consequences here are probably not interesting it's not clear what practical issue will happen here but it's it's it's good to be aware of this and as for the signature schemes well for edward 2019 um while this is not to provide um it's not to be it is known to be src may secure obviously it has to be the itf1 as it's been shown that the original air2519 is actually not uh as you have"
  },
  {
    "startTime": "00:16:01",
    "text": "cma secure and for ecdsa again there are ways to modify the signatures um in a way that breaks your cma so to this effect we um we suggested two modifications to strengthen exclusive authentication although we could already prove it namely this is to add the credentials to the transcript hashes as as shown there uh the benefit is that an attempt to identify spinning attack as i've shown before will lead to diverging transcript hashes which then sort of stops the protocol and leads to a termination of course assuming with some collision resistance assumption on the hash function so with all that being said how many theorem is essentially an upper bound uh on the advantage of an msk adversary so the msk being the security model again i can't really go home into the details now um but essentially what it shows is that we can reduce the security of edox 66 to its main components namely uh collision resistance hash function um strongly unforgeable um signature scheme that also provides exclusive ownership a prf function which is the expand on the prf assumption on the expand function and the prf odh assumption on the extract function finally let me briefly evaluate some of the past suggestion that we propose to sort of improve the protocol the first one is having an explicit session key um this obviously made really easy to prove security and to have sort of a clean indistinguishability proof and so by that i mean secrecy proof for the prk out which is now the sort of final session key and computing transcript hashes over the"
  },
  {
    "startTime": "00:18:01",
    "text": "plain text was our second suggestion and that also simplified our proof in the sense that we did not rely on some potentially non-standard assumption on the encryption schemes so with that i conclude my talk thank you very much for your attention and i'm really happy to take any questions great and thanks for all the work uh i think we have john on the left yeah john here thanks for all this work you really really great the the pre yes pointing out the previous recommendations have been included in the latest version for the update of three and th four there is already and pr there's also ongoing discussion between different teams here in the issue right now but it seems like a very it's a very simple change but please look into the issue and the pr thank you thank you okay i don't see anyone else in the queue so thanks mark again for for the work it's really valuable um and keep doing more of it okay so with that we'll switch presenter and baptiste if you could jump on you should have control of the slides now hi everybody great thank you go ahead yes we hear you about this you can go the floor is yours"
  },
  {
    "startTime": "00:20:01",
    "text": "okay thanks so um sorry baptiste the audio is a little bit low i don't know if you could be closer to the microphone or oh sorry is it better no oh no so yeah keep speaking and we'll let you know when it works it's better right okay so thank you all on the computational analysis of the ad doc protocol in the stat stat method so first represent some equations we made some notations so pi a single pi will be the one time encryption scheme while the pi prime will be an authenticated encryption scheme the a will be not an adversary and g is a secret group of order p we choose to denote ski the key denoted ki in the specification and x s is the initiative we can keep the energy the i in the specification so the first basis we use is the compositional defiant so uh given g to the u and g to the v it [Music]"
  },
  {
    "startTime": "00:22:00",
    "text": "you the an adversary has to compute g to do g to the e v and the advantage of the adversary is denoted as on the slide we also use the gap edition assumption so that is the cdh assumption we have an access to film an oracle so that is an oracle can unlike an anterior if if a triple is a different triple and the best attack known on this on this assumption is the baby step doesn't step attack that run in the square root of b where p is the the size of the group g the hypothesis for the symmetry encryption so we have the injectivity so for any key in the space of keys two encryption of different message with the same keys will result in if you have an equality in two encryption of two messages with the same key it means the message are equals also we have in the one time the undiscussibility so for an adversary given an extrusion of m0 and an encryption of m1 it can say with a consequent advantage which one is an encryption of m0 and which one is the inclusion of m1 know the hypothesis about the authenticated encryption so for the industry and distinguishability we do the same as previous with an access to an encryption in decryption oracle so here again the adversary has to distinguish between an encryption of m0"
  },
  {
    "startTime": "00:24:02",
    "text": "and an encryption of f1 but you can ask do you recall can you entry and decrypt these messages so and the advantage is denoted as advantage in the in in distinguishability of p pi in a polynomial time a t we also have the invaluability of the auto ticket authenticated encryption so here again the baby has an access to the encryption and decryption records you have to generate a valid cipher text and the advantage is denoted as the as the capacity to for the srv to afford to further well it's a text with chosen messages so her results so we use a queue arrow to the number of queries to the random records and sigma to denote the number of running sessions uh capital n the number of users and ash is the length of the hd and lmac is the mac digest length so for the carry the key privacy we have this disadvantage so that that leads to around 128 bit security so the best attack is in one hand the baby steps in step to try to break a gdh assumption and together with the birthday paradox to try to find a session key or"
  },
  {
    "startTime": "00:26:00",
    "text": "an intermediary so we have the square root of b for the baby step and 2 to the lh divided by 2 for the birthday paradox for the explicit authentic responder we have the the terrain 2 that gives [Music] a security of 64 around 64 bits because the best attack is simply to guess the tag t2 so the tag when you are in a cipher suit 0 and 2 the tag t2 is 64 bit length and in this case the security is 64 bits this is the similar for the initiator explicit authentication so however you even if the initiator use an authenticated encryption this this has no impact on the on the security as this is the it is encrypted using the key sk3 that any imposter can compute so that that does not give any uh security for the authentication initiator for the identity protection of the responder so here we have similarly at the key privacy security of 128 bits with the same attacks and similarly for the identity of the initiator"
  },
  {
    "startTime": "00:28:00",
    "text": "so in the summary so if you consider the cypher suits 0 and 2. we use a tag mac tag of length 64 bits and we have a key privacy security of 128 bits and another protection for both the initiator and the responder of 128 bits and for the authentication we have a 64-bit security each so and uh in the protocol as a defined protocol we make the use of the authenticated encryption but that's used in the point of view of the security as sk the key sk3 is independent of xs and any investor can compute it so we made some we suggest some improvements so the first one is in the case the mac is 128 bits so as sk3 is independent of xs and uh as the mac is 128 bit length we have 128bpt for the authentication so it's simply the idea to replace the authenticated encryption with one type encryption as there is no impact on security we have the same security for the key privacy the material authentication and the protection and we have another we have a shorter messenger tree because as when encrypting with authenticated encryption this is a block cipher while when we use the one type pad this"
  },
  {
    "startTime": "00:30:02",
    "text": "is a stream cipher so the cipher text is the same have the same size as the plain text so we have the same security the same security for a smaller message for the case of the mac are 64 bits length this is different so we will use the detected authenticated encryption to to have a better better initiator authentication so yeah was first to compute the sk3 depending of xs but doing so the responder not compute the key as to the key init defamation ide that is sent in the message so the solution was to compute two encryption so the first encryption with the key is key sk3 that will encrypt ide and external data with the symmetric key once the responder decrypt this message he has the information to compute the key the key before that depends of xs and in the message the initiator an authenticated encryption of s of t3 with the key is key 4 and agent vector 4. and using these the initiator authentication reaches security of 128 bits as we have 64 bits from the tag t3 and now we have 64 bits"
  },
  {
    "startTime": "00:32:01",
    "text": "from the authentic authenticated encryption so before trying to fold a tag the adversary will have to forge the valid surface text and so the security are multiplied and we have a security that is around 128 bits and about the length of the message three it depends on the length of the plain text 3a so ide and e3 because if this message is smaller than 64 bits modulo 128 we have a longer message and if this is not the case we have a shorter message this is due the fact that um t4 t33 will be a 64-bit message that will be encrypted under 128 bits block so we lose in some kind of los 64 bits and depending on the length of the text we have a either shorter or longer message and we can use the similar idea for the message too so to increase the responder authentication where you would send is a in the information key stream ciphertext and use the authenticated encryption for better authentication security but this will uh this will lead to a higher bigger message too but better security so there may be some compromise to do here also another way to"
  },
  {
    "startTime": "00:34:01",
    "text": "the authentication is to add a first message that appears in the documentation and with this message that's the same idea as before with the authenticated inclusion we have a 64 extra bits security as the key pair key for e3m depends of ys the ciphertext c4 will depend yes and if the if the sulphur tax is valid it means that either the ssi broke the unforgivability of pi prime or exactly the respondent so we have an ad the advantage is multiplied by the advantage of the of the adversary in forging in a valid ciphertext so this advantage is around 2 to the minus 64. and multiplied by the 2 64 security of the responder thanks to the mac this lead to an authentication security of 128 the last minor improvement is that in all our terms we have n sigma times a q airport and this comes from the fact that the key pr key to e is uh computed according to an empty string and because of the empty string when the adversary make a query to the random oracle it can find a match with any of the sessions so if you have a 10 session a second query can generate a collision with any other 10 sessions so that's why we have a factor in sigma"
  },
  {
    "startTime": "00:36:00",
    "text": "the idea to uh [Music] to protect from this is simply to use th2 as the input string of the computation of player key to e as in this case each th2 is is related to a single session so when the industry will make a query to the random record you will have to shoot which session he will target and this has no extra cost of competition and now we gain we have a better security for the for all the key privacy the authentication and the protect and identity protection and therefore the security is independent of the number of users of sessions independent of the number of sessions so thanks everyone and if you have questions i will listen to you so we have john in the queue thank you baptist for the all this work really appreciated uh we made some there's been recent issues created for these things and for the th2 the th2s yes and have had an issue and a discussion ongoing whether these extra factories is needed or or not very recently a few days ago made a pr turns out that adding three also simplifies the specification because each kdf has"
  },
  {
    "startTime": "00:38:01",
    "text": "some strange behavior with the empty string so we needed so we could actually remove text so it might be worth doing just for for that alone uh joram made this morning i think an issue for the other and also started looking at how how it would affect the implication i think it would increase in many cases the message tree with a single bite to do this but i think that needs some more more discussion and analysis on github yes john so what i hear from you is that we are tracking the improvements um suggestions that are proposed by baptist and that we have the ongoing discussion on github uh around these which is very important as and please let's keep on doing that uh i think we have mark in the queue uh mark did you want to comment on something or yeah thank you thanks that is for the presentation i just had a question i was wondering whether the sort of your work would be available published somewhere yes uh so it's uh still a draft but we are working with uh david poncheval and uh i think soon depends on on the conversation or how it will uh evaluate but yes there is a paper that may be soon be a preprint and uh why not be a submit but yes there is a ongoing paper great thank you you're welcome great thanks baptiste uh thanks again for all the work"
  },
  {
    "startTime": "00:40:01",
    "text": "and i think next is john so just say when you're not in a new slide yeah i think how many if you have like around 10 minutes i guess or something yeah yeah we've twenty left so yeah so we can today's presentation about all the updates and ongoing issues uh this is an overview so version 13 was just a resubmission and then quite major changes in 14. but we waited with submitting that to oh maybe it's often just like so yeah much better uh so this is an overview of the submitted version we waited with 14 for a long time to have a stable version now i guess the slides disappeared yeah it's like it's reconnecting um and then there was a recent update of the traces aligning with 1450 1415 has the same buyer format and then very recently just a few days ago zero two traces was submitted with a correction i think the oscar master salt was wrong in the draft version and then we can go to the next slide yeah next so what are so this is i don't have time to go through all the changes but the major rewrites and updates to the"
  },
  {
    "startTime": "00:42:03",
    "text": "3 5 which is authentication and then a major rewrite of ead section yeah and some technical change the ad value is now a bit string uh quite a lot of changes to the adhoc key derivation and key schedule based on comments from the formal verification uh the three main updates are that there's no more key derivations to be able to use different keys in the kdf expand and extract before the same key was used in both the transcriptasion context input has been made a single context input and all the labels are now integers you can take the next also changes to the identifier encoding this has been an ongoing discussion [Music] with different solutions all pretty same strong conclusion in the group that we need to have this one byte encoding but unclear how now we have gone back to before it was in discussed to have integer kids in cosi that has now been scrapped and it's specified as there are byte strings but they are encoded as integer this is similar to the solution before but presented it's a new solution which is much simpler hopefully so hopefully this is the last version of that next"
  },
  {
    "startTime": "00:44:01",
    "text": "here is a new dramatic of the key schedule yeah and as before major change more key derivations there's also a new key the prk exporter there's a new session key called prk out to have a very well-defined session key formal verification typically wants to have a very formal session key that is you can state properties with next slide so quite a lot of changes in the processing partly technical partly more clarification this ead and id cred needs to be passed a bit earlier there's padding has been added to hide length of things optionally quite a lot of clarification security updates i think we can go to the next next so there's some new uh now we're coming to more discussions there's a few remaining discussions and issues left um in 15 there's a new section on authenticated operation this was previously an empty trust on first use section but we realized it can be included you can there's more options here there's been more generalized yeah then there's a lot of clarifications a security concer can take next slide so now we're coming to ongoing"
  },
  {
    "startTime": "00:46:00",
    "text": "discussions and some changes to the ead based on the item issue created by christian amsas i think about encrypted client hello types of use cases but one of the things that popped up there was that it would be good to have a critical non-critical flag for the ead and this has already been included in the latest version i think and negative values are now critical and positive values are non critical and this is quite similar to extensions in x 509 certificates [Music] i think that might please look at this and especially any processing requirement what you're supposed to do might need further clarification next open issues so this has i guess most of this has been inc already discussed the tree first as are based on the formal verification that is i think already discussed uh except this one remaining issue is that it was realized that the hkdf has a length limit depends on the hash algorithm used but when you use char256 the maximum output is 8160 bytes can take next slide i think the first question is is this a"
  },
  {
    "startTime": "00:48:02",
    "text": "problem [Music] normally not but you could imagine that you have a quite large ead or you could have a large certificate chain or you could have both and so the first question is this something we should fix and second question if we fix it how should we fix it this is a list of basically all the potential solutions we could think of and of these number two and number five are backward compatible so you only need to change your implementation if you actually use low messages uh and h and hkf expand piece here would be hkdf with a 16-bit value instead it was it's still hkdf according to the academic paper but not hkdf according to the rfc next and the most promising solution if you want to fix this seems to just use hkdf according to the rfc several times if you don't want to support very long messages you don't have to do anything and if you do you can still use an implementation compliant with the rfc and there's an issue and i think a pr4 for this yeah github next this is this is based on the form of verification the changes to"
  },
  {
    "startTime": "00:50:04",
    "text": "the how to encrypt the authentication in message three i think we can take next and then traces next so this has been updated aligning with ad hoc 14 and then there's some embark was fixed in zero two there's been very recently a new bug just submitted so i think there will come a new version of traces fixing that next then next steps i guess that we will discuss are there any questions so we have yeah so nobody in the queue okay so we'll discuss this shortly great thank you marco hi everyone this is marco i have just one slide uh a second report next please thank you yeah it was me and militia and we had our implementations up to date version 15 of edoc and same implantations we consider the previous acaton and in vienna and in fact we considered exactly the same um setup with malicious initiator and me as responder and well the the most effective configuration if you want because that's the one really bringing you to the smallest possible message to you which is uh 45 bytes and we specifically considered the cypher c2 uh method three both peers with ccs and"
  },
  {
    "startTime": "00:52:02",
    "text": "kids as credential identifiers with a kid such that and call it as an integer on the wire and yes everything eventually succeeded we converted to the same master secret and sold and i'm aware of more people updating their implementation so i would expect more tests in the following weeks or months that's it great thank you thanks so we have joran in the queue you're on yeah i just wanted to add to what mark would said we have a confirmation from stephan ristof that he his implementation is also updated to version 15 and marek who couldn't be here has made has updated the test vector code [Music] also to version 15 and there are now test vectors for ecdsa and eddsa in a folder in the github called something like test vector 15. yeah that's it just as a qualification when you refer to test vectors you're referring to the json version in the github file right exactly yeah the json version of the traces drive it's it's not only the traces draft it's the additional one there are multiple yeah there are additional test vectors not only the two two test vectors in the traces right [Music] thank you very much great so so i think we have a about seven minutes left i think that the topic that we position i would like to cover is how do we get done uh what's the next things obviously there's some outstanding prs and things that need to be discussed but what else is needed now that we kind of have some of the analysis done before we're ready for working group last call so i'd"
  },
  {
    "startTime": "00:54:01",
    "text": "appreciate your thoughts on that what else do we need to do before we're finished and if nobody has thoughts i presume the answer is nothing and then we think we're finished so let's hear from john yeah i think i would say nothing more unless something pops up but we need to we have some current issues there's nothing coming in very much more issues so i think we fix these issues publish a new version then of course we need some implementation but after that i think we are ready for working group last call we already had very substantial reviews before yeah john john is it here okay so maybe as a reply to john i mean it seemed that uh yes so the uh suggestions proposed by baptist will also affect the key schedule and therefore also uh affected the traces so they still seem to be kind of not i won't say substantial but important as they affect the security level of the uh of the static static mode right so we want do we need an interim to discuss those or should we uh call it a break now for the summer do what are the people's thoughts on this so i guess people are agreeing with john that there's not much more to do you're on yeah yeah i'm about to say the same thing but so i think that we definitely need to look at carefully at the security analysis"
  },
  {
    "startTime": "00:56:00",
    "text": "the latest input maybe we could have a meeting with the some of the teams uh i'll reach out to webtest here after the meeting see if we can have a short meeting and and discuss the latest input and then we need to do the to the prs and then the specifications should be fine and we of course we need to update implementations also but this is not as big any change as 13 to 14 i'd say so i don't know if we need any interesting before uh before the vacation there's a lot of people going on vacation now sure okay so i think what i'm hearing is we you know depending if we might or might not want to organize an interim around october time but other than that we'd like to hopefully get to start the working group last call before the november ietf meeting so that the working group last call ends just as that meeting happens or something perhaps does that sound reasonable yes and earlier we're ready but otherwise okay so nobody seems to be screaming and objecting which is very nice um so i think that's the plan uh we'll try and aim to wither without an intro and get to working past call completed before november um seems that seems feasible to me i think given where we are so it's good and thanks all for the work uh i think we're at the kind of any other business part of the agenda where we have a couple of minutes if there is any other business don't uh yes paul our id is jumping up sorry i'm just on the preview topic um you could maybe do an early sector review if you're anywhere in a sort of lull where there aren't any big changes happening it could perhaps be useful yeah yeah okay that's a good idea so once we get the next drive that resolves"
  },
  {
    "startTime": "00:58:01",
    "text": "the issues that came out of the analysis i think we can hit the sector review request button and with that i think uh militia anything else so i just wanted to pass my thanks to the formal analysis teams doing the analysis many things guys i mean this is really valuable for us yeah actually i have a final request now we are i mean if we follow um a proposal from baptist and and and david we are making changes uh and it would be great if those teams who have been analyzing the protocol could make another round and see that we don't mess up things when when we make those final changes sure yeah we should definitely ask i mean you know can't expect too much effort but it's definitely worth asking uh okay so with that i think we're we're done for today thanks for coming uh thanks for all your work thanks again to the people doing the formal analysis that was really good and we might we may well meet next time i guess depending on if working group last call has any comments thank you thank you thanks bishop you"
  }
]
