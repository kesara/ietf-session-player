[
  {
    "startTime": "00:00:51",
    "text": "I have a slice between the stamps okay both well that\u0027s yeah how do i oh okay can I go back to the good good morning everyone so this is scripta forum research group meeting so if you are here for the FRG please take a seat thank you so let\u0027s so i\u0027m alexi and my co-chair kenny is not here so maybe he\u0027s present online let\u0027s do a quick agenda bashing just to double-check so I\u0027ll talk about status of documents and a few other things then we\u0027ll have three presentations on three active working two active working group documents and one potential research group document and so I hope you\u0027ve seen note well we followed the same note well as ITF so we have minutes taker we have job relate to microphone person thank you both "
  },
  {
    "startTime": "00:03:54",
    "text": "I\u0027ll quickly talk about document status so at the moment we don\u0027t have any artsy\u0027s published since last ITF no documents in RFC editor skill but chairs mostly clear the backlog of Shepards review so far we have two documents in IRS G review McGrew hash signatures got one IRS G review the comments were addressed so this is now waiting for fully irst review and the king is waiting for initial irst review we have three documents nearly done aspect to waiting for Shepherd serve you can agree to review the document so hopefully he will do this I think you said about a month so that should happen very soon the other two documents they\u0027re currently expired we send comments to document editors they are revising documents based on feedback so hopefully this will be updated soon and then we\u0027ll send them to Irish give review and at the moment we have four active documents we\u0027ll have presentations of cup on a couple of them on hash the curve and randomness improvements the other thing is Kenya and I was asking for volunteers to serve at the third to see FRG co-chair I think we selected the shortlist at the moment this is being finalized so sorry I don\u0027t have specific news at this point but we\u0027re trying to get closure on this very soon with this just looking at how many documents we\u0027ve finished recently and active documents Kenya and I decided that we would like to do back selection process hopefully we\u0027ll come up with a single back out of this process it should follow our Etsy 8125 with which set some requirements or requirements on documentation that was already done in this research group "
  },
  {
    "startTime": "00:06:54",
    "text": "suggestions how how to go about this process are very welcome please send them directly to chairs what kind of questions you think we should ask when we\u0027re working on elliptic curves we were asked asking questions to help narrow down on specific choices so if you have a good set of questions that will be great we\u0027re also hoping to involve clip the review panel for to compare proposals if there are multiple proposals and come up with recommendations so what insulting thank you for doing this my only suggestion is to pick a type and make it soon please okay I have a need for this we can discuss you desired a date offline I still have suggestions to replace the one or more with zero or more Thank You Steven your your opinion is well noted right I think I\u0027m done with chair slides oh yeah do I strike you or more just pick one yes I think in ideal world we would like to have one and if we fail then we\u0027ll have zero but I\u0027m just not trying to limit ourselves you know in case we really have a deadlock and there are two backs that up you know have slightly different qualities that we can recommend for different things sometimes to add to what rich said I want one and I don\u0027t want one with 500 tuning options but I can say yeah yeah I understand the story so my name is Han Xin ASD as you know the Delos of the several paper protocols were published as other fishes for example the tarragon fry was published as RFC 766 for JP Carducci 806 SES picot pro as RFC a 160 but these these protocols was well publishers are from after concerning from the shivaji my person is that actually that i don\u0027t know what is the purpose of this extraction process if opaque there was already published as "
  },
  {
    "startTime": "00:09:56",
    "text": "RFC was selected as for this from this process what kind of other she documents it I should the the pic II right so that\u0027s a good question so I haven\u0027t consulted with Kenny my opinion that begs that will already published as RFC they sort of you know obviously I don\u0027t have a time machine I cannot go back so they already done whether we can select one of them and recommend it again as the result of the selection process that might be so I I don\u0027t know I don\u0027t want to prejudge the results we don\u0027t know yet so yeah I think it\u0027s a good question we\u0027ll need to think about that thank you very well thank you Paul Hoffman who I think this is the first time I\u0027ve come to the mic to agree with Steven Ferrell but going to with what you just said if the result of this is going to be a document that simply says we think that thing is the best one or that one with certain things or none of them that\u0027s just fine but I haven\u0027t heard before this that this is going to be a separate document or decision or whatever and I don\u0027t know how that works in a research group but I know that P I don\u0027t know either about doing it for the first time okay so well and it\u0027s just that we have as the previous speaker said we have a bunch of pigs as RFC\u0027s there\u0027s a lot of questions about what does that mean and so we\u0027re gonna have to be sort of careful about it I still think that zero might be the right answer to say we couldn\u0027t pick one you know make your best guess and here\u0027s the list of the ones we have now and that list is gonna grow I mean this group has been pretty bad at saying no more pigs hi rich salsa I I know you this is more time than you wanted to spend on this the parallel I draw is we had lots of elliptic curves before and we were able to pick a few a small number that we\u0027re like these are the ones we want and it seems to me that the pake situation exactly parallel to this so there\u0027s a sort that\u0027s sort of what I had in mind but as I said you know we can on the back in time and you know the packs which are already published we don\u0027t you know room item might not want to say anything about them both figure it out recommended or no comment yeah all right thank you and on this let\u0027s start with the first presentation a good morning everyone mrs. posh laughs crypto pro and this is "
  },
  {
    "startTime": "00:12:57",
    "text": "a status update for randomness improvements for security protocols draft is a joint work with SkyScreamer sluggard Nick Sullivan Christopher wood so a quick reminder what what is about the motivation has been the following that since we may have some problems we Spearin G such bugs backdoors some problem space hardware are energies that are used to initialize the initial state of Piran G and the sample nner abilities joint entropy pools so we might want safety net to avoid system compromise so some backup for all Pyrenees and to propose some construction that is always better used that not used with the current parent G\u0027s so the idea here is to base on Nexus trick but since there are some technical problems such as in real world we usually don\u0027t have a direct tax access to private keys we only have API is to use them for some purposes and since it\u0027s not a good cryptographic practice to use long term keys outside of their primary scope we shoot pigs construction very carefully and we should make a lot of very clear recommendations here and we should get tricked security proof for the exact construction so the objective is to provide one ready-to-use solution with full security proof with models that exactly addresses practical security security model and so just have one RC with one construction maybe with some agility own algorithms on basic algorithms so the construction has evolved a little since we started this work and now it looks like the following so if you have some P R and G G then we can define here ng g prime using expand and extract function hash function signature function and two values of tech one and tech to where tech one is a value that is needed to bind your construction to the environment so to specific device the protocol maybe to make address or virtual machine user and tech to is some unique string that includes timestamp or counter so it must be unique per one call of this G prime so everyone who uses G in his "
  },
  {
    "startTime": "00:15:57",
    "text": "applications can just change it to G prime and it should become better and the draft is why it should become better so we have had a lot of changes and one of most significant ones is connected with the virtual machines issue it was was was duration why David McGrew on the list it was really important issue about some problems with usage of parent G\u0027s in virtual environments and we\u0027ve added two items to the bibliography and edit several security durations several recommendations about to use the construction if virtual machines are in scope so these are two citations so first of all we strictly recommend to incorporate all known properties of an environment in the tech one and secondly that no security guarantees can be if the virtual machine is totally cloned without any differences without any distinctions so the constructions is as draft is not a silver bullet that can make magic if we can distinction between two virtual machines then waited some clarifications for weak initial and repairs additional motivation for easy with hsn\u0027s what happens we\u0027re all sorry Martin yes I just wanted to clarify that if if tag one is duplicated the consequences that you produce duplicate random outputs right that\u0027s a good question in fact if you just duplicate Tech one but you still have some guarantees of ingenious with tech 2 as security still remains but in this in this case you should have some some way to provide uniqueness of tech - and if tag one and take two our boys are both collided then yes there may be a collision of the whole G prime because of when we use signature as a deterministic signature you just have any differences between two cases oh I should have probably said it it\u0027s you back to GL as being your source of entropy essentially of course yeah of course the draught side that because the text did you put up a list on the screen ok so if you have detail that that is broken and if all these this various collide then we don\u0027t have any any chance to be good but if any one of these values differ then it\u0027s proven and I\u0027ll go to it later a bit that Hugh is a security can still be obtained so that remains the issue then additional clarifications about does "
  },
  {
    "startTime": "00:18:59",
    "text": "another motivation for the walk we can initial entropy source about user issue is HSM there was some questions on the list what happens well when you use ethic instructions with some key stored in HSN\u0027s some some additional recommendations about how to use it about procurement a pair computations about requirements for tech one and tech 2 we have added some recommendations that are really needed and that are used also in security proof later some minor changes about terminology about enough usage of swarf so some minor changes and I think that the most significant walk since monreale is about security proofs I\u0027ll remind that they decided to give the properties that are declared in the draft and that must be proven are the following the first two actually means that the construction doesn\u0027t make anything worse so first of all is if some parent G works fine then the output construction will be fine even if long-term keys are not secure anymore and secondly that we don\u0027t make any harm to the private keys because of our construction so that we can use this and as I said in the beginning it\u0027s not good cryptographic practice to use keys in various scopes but this is a property that we should address here and the third is that the construction makes the world better that if the parent G is broken or controlled by adversary\u0027 then the output will be indistinguishable from random if the security key is still secret so we\u0027ve published a paper on ePrint and we hope that we will evolve with this in the future to something and to some peer review to journal maybe so it contains full security proof of what and I\u0027ll make a quick review of physics so to sum it up property number two is quite trivial one if all requirements that are mentioned in the draft are met and we\u0027ve had complete game hoping proofs for properties 1 and 3 so that parent e makes it only better with some assumptions and in really strong adverse remodels so in fact we\u0027ve proven ever sink in very strong assumptions about adverse sorry even more strong keys and it\u0027s reasonable in practice but we know some things that could be still improved so the versa model in one slide is that of course say your aim is to distinguish an "
  },
  {
    "startTime": "00:22:00",
    "text": "output from the random from some random output and she can do a lot of things she can choose that one and take two on her choice she can learn all values generated by the inner says parent G except for the value she\u0027s taken on she can choose any any number of output which she wants to italic and to distinguish it from random and she can ask to reveal either the value generated by parent G or with a private key bus of course not both because in this case we don\u0027t have anything secret and so we really believe that the model perfectly reflects practice and even is much stronger than needed for practical assumptions but we try to do this good there are no issues with the proof in the random Oracle model but we saw that we can do better and so we improved the proof add in some additional assumptions to get rid of most and obvious problems with random Oracle\u0027s so we the assumption of that extract function is indistinguishable from random if one or another of its input is known it must be said random so there is an issue here and I\u0027ll talk about it in the next slide is that for hkf we are currently using as a proof is only for one half of these variants so if X is fixed and the Greek is not but not jasm not vice-versa so we\u0027ll try to prove it or make minor changes to the whole construction to deal with this issue and two other assumptions strictly follow from the recommendations in the draft and they are quite obvious so intermediate values must be kept secret and that secret key is never used for values from the set of tech 1 values outside of the construction so we had an objective of the fully specified and construction that can be secured now we have complete security proofs in very strong case our model without any invisible assumptions the construction is quite specific but we have some work to do first of all if you think which improvements should be done first of all as I said before we have complete security proof for a KDF in general but we want this to be proven as specifically as we can so we should address the issue with hkf because it wasn\u0027t proven for one quite reasonable quite intuitively true but it wasn\u0027t proven for one property so we should try to do this and we have performance issues with edge graph here so thanks to "
  },
  {
    "startTime": "00:25:03",
    "text": "Christopher root we have some primarily results of experiments we have some numbers about reduction it can be from five to ten times lowers and without this construction and now we are thinking about whether we should do something else or whether we should leave it as it is because as for example case Kramer\u0027s thinks that it\u0027s it won\u0027t be bottleneck in most applications so it\u0027s one of the questions we still need to consider it that seems to be really important so our current state in plans that overall principles overall structure overalls ideas of the proof and structural proof is its completed but we should make new experiments we need to think about recommendations for specific protocols we should improve the proof in two ways first of all to weaken limitations of the set of tech ones and to refine it for hkf be sure I was talking about the phones as a previous slide and we hope to get a version addressing these issues until Prague and yes the questions are very welcome Valerie so for this plus on just a clarification you use a signature to improve randomness for those systems that don\u0027t use public key cryptography and use and rely on a shared key is your technique likable so can you clarify thank Roberto special yes actually the same ideas are applicable but and the signatures are can be changed for any symmetric primitives but as I said before since we really want this to be quite specific construction we needed to go not with many of choices and many of variants about one specific construction maybe we should think about adding some commands what we should should be done if based K is needed I think that\u0027s a good question so if you have a scale yes license that\u0027s a good idea to address this I\u0027d I don\u0027t you thank you thank you other questions quit commenting on I mean it it\u0027s it would cause a laws this long discussion so I want to do it on the list but yes a lot of people don\u0027t want to use a private key just willy-nilly but it\u0027s so good here and it wouldn\u0027t hurt to throw it in I\u0027m gonna suggest later that that you you aren\u0027t so down on mixing in the private the private key if you happen to have one sitting around and two included "
  },
  {
    "startTime": "00:28:05",
    "text": "in something else so just wanted to bring that up but I\u0027ll certainly bring it on the list okay thank you thank you very much and I think that Christopher would was wanted something to add about probable experiments via secretive right yeah so the initial experiments were just some kind of a Dark One\u0027s that I did to get some sort of numbers we\u0027re looking into other primitives like sea KDF like sea mac-based at Katie I see mac-based KDF to see if we can use things like ASM transfix to speed this up recognize that that\u0027s not a RFC of any particular form it\u0027s just a draft that Adam I only wrote at one point then abandoned but it might be useful for this particular use case to help speed things up so and the security proof should ideally take that particular permitted into account yes yeah thank you and also questions comments oh thank you yeah alright hello we\u0027re going to talk about a draft that was adopted by the working group and is continuing to move forward about taking strings and mapping into elliptic curve groups so as an overview for a review of this the goal of this draft is to Devine some algorithms to efficiently map from a string to a point on a curve this is for use in various high-level constructions such as the vrf document that\u0027s going through CFR G as well as various Pakes require this and different in various places you need to be able to map into a curve and there\u0027s different requirements of what type of map it can either be have to be an injective encoding or potentially a random Oracle encoding so we\u0027re hoping to cover these cases and this draft is meant to be a foundational piece to be plugged into a lot of these these constructions going forward so the current draft is at draft number 2 I\u0027m gonna go over the recent progress as well as open issues so the first piece after a lot of email on the list and some really good feedback from the working group we we got the feedback that this should be much more concretely defined in terms of taking this document and turning it into an algorithm and and being able to deploy it so rather than being descriptive of the mathematics it should be very prescriptive in terms of exactly what to do the first step in being able to take a string and hashing it into an elliptic curve point is often taking that string in half has to dashing it into or mapping it into the "
  },
  {
    "startTime": "00:31:07",
    "text": "base field for that elliptic curve and so we defined this explicit formula which is one way hash from a string to element in the base field of the curve this is deterministic and constant time are the important pieces there were some flexibility earlier on in terms of different curves have different biases with respect to how you could take however large the the input is to mapping it into the curve field itself so depending on the structure of the field you can have different biases so we were sure to clearly articulate how to reduce this bias so that it becomes negligible for for any application the second piece that was suggested was to give a concrete list of steps for various elliptic curves and so in in this we decided to go with a cipher suite type of construction so a list of four different pieces that put together will kind of constitute a single hashing to curve algorithm so this includes the destination group so whether it\u0027s P 256 or some of the CFR G standard curves a specific hash to base algorithm that would make sense for that curve a hash to curve algorithm which is the most of the meat of the draft itself there\u0027s different algorithms to consistently take an element of the base field and map it into the curve and this is this is the the heart of the document and then optionally a transformation afterwards so some as I mentioned earlier some use cases of this construction have different requirements some of which are that you\u0027re dealing with and that the result of hashing into the curve is an element of a prime order subgroup of the of the elliptic curve so there\u0027s different ways of doing a transformation at the end of the construction to make sure that you get something that does not have a cofactor and also in some situations such as the draft that I\u0027ll be talking about after this vo PRF and as well as the the vrf graph that\u0027s currently going through you need to have this act more like a hash function and not be reversed so you should be able to have this look like look like a real hash function and not be reversible so there\u0027s there\u0027s various options there\u0027s something called FF STV which is essentially you do have to curve twice and add it together and this gives you a random element in the curve so this is something that\u0027s optional not neither in all applications so in terms of this overview you can we put together a list of these cipher suites that correspond to the NIST "
  },
  {
    "startTime": "00:34:09",
    "text": "curves there\u0027s only random Oracle versions of that as well as the CF RG curves in both the injective mode and the random Oracle mode so these are these are now in the latest version of the document so there are some open issues these were raised there\u0027s a question about including pairing friendly curves so there\u0027s a construction by fuking to bushi about how to do this efficiently and there\u0027s an open pull request on github about a new cipher suite that is is meant for bien 256 which is a commonly used pairing friendly curve there are some questions about the security level of the specific curve but um but this is this p RS is is under review another more important piece for the cipher suites that is not yet included in the draft is test vectors so if someone were to make an implementation of this they would need to be able to have inputs and outputs to check them against so we\u0027re working on creating test vectors and validating them with multiple implementations of each of these cipher suites in various languages as well as sage so open issues there\u0027s a couple open issues that were raised on the list as well as on github about some corner cases which with respect to constant time so for example in curve 448 in the Montgomery form you don\u0027t have a complete addition formula so we\u0027re considering changing the cipher suite for cur 4 for 8 to use edie 4 for 8 and because the Edwards formula has a complete addition formula this helps make sure that it\u0027s constant time there\u0027s a situation in SW you as currently written glare if a equals zero such as in the Bitcoin curve for example you there\u0027s a division by a so we have to have to fix that algorithm slightly so there\u0027s a couple of edge cases and corner cases with respect to the algorithm and these should all be flushed out once we have working implementations in multiple languages okay so the next steps are as I alluded to complete the test vectors review the pairing friendly algorithm and also review the other open issues and make sure that these if necessary there\u0027s a a constant time cipher suite for every single one of these use cases going forward and yeah but that\u0027s that\u0027s the update on the hash to curve algorithm drive questions or comments seems like enough so next we\u0027ll move on to something that I alluded to earlier "
  },
  {
    "startTime": "00:37:11",
    "text": "which is this is a proposed draft this has not been adopted by the the working group something that we proposed to IETF segoe that builds upon some of the work that\u0027s going on right now in the ITF in that C FRG around VR FS as well as hash to curves so this proposal is called verifiable oblivious pseudo-random functions so to give some intuition around this vrf this is something we\u0027re standardizing this is somewhat equivalent of a public key version of a cryptographic hash function so you can hash and then you can verify that only the the participant with the private key can have so it\u0027s it\u0027s this isn\u0027t exactly it it\u0027s more like a commitment to a pseudo-random input but this can be verified given a public key and this is this is useful in a lot of cases this is a foundational piece for say and SEC 5 in the DNS world there\u0027s another construction here called oblivious pseudo-random functions this is kind of like a digital signature and it works in a two-party relationship where a someone who wants something signed can give it to the signer they can sign it and it can come back and that the value that they give to the signer is blinded so that the signer does not have visibility into what the the signature is of so they know that they signed something and then eventually even you can verify that the certificate this are these signature is valid over the unblinded piece so this is interesting for this was used in I guess proposed in ecash systems and it allows systems to sign information with without having the knowledge of what it is and there\u0027s a couple different places in which this is useful so what is vo PRF well it\u0027s kind of a combination of the both of both the RF and O PRF so it\u0027s it\u0027s a v RF for which the signer is blind to what they\u0027re computing the vrf over so very specifically if you recall some of the definitions of vrf this this will this will make a lot of sense this this reflects this pretty pretty closely so it\u0027s several pieces one is an algorithm to compute a hash and then a proof from an input given a private key then it\u0027s also an algorithm given a hash and a proof you can compute a verification that this was generated by a specific private key associated with the public key in the last base which is which is what makes this puts the o PRF into the vo PRF is so yeah both those initial pieces are commonly known for in VRS but um the ability to hash compute the hash of an input from a hash of a blinded version of that input so if you take an "
  },
  {
    "startTime": "00:40:12",
    "text": "input and you blind it and you give it to the signer or the party who\u0027s computing the vrf they can compute a hash and a proof that is publicly verifiable with the public key and you can take that blinded value and unblind it and then you will have a hash that matches what the vrf would be so vrf SAR deterministic so this gives you the ability to take that hash hand it back to the signer and they can compute the the deterministic signature on it again and make sure that matches so in essence this is equivalent to what a no PRF does in that you can give back the data to the to the signer and they can confirm that they previously signed something that was say the preimage of this what makes it different from of a no PRF is that it\u0027s only the signer that can verify this once you\u0027ve unblinded it it\u0027s so it\u0027s it\u0027s not publicly verifiable it\u0027s verifiable by the signer itself yes Richard yeah so I\u0027m just going to confirm understand here in terms of which of these steps are oblivious to involve the signer so it sounds like one and three other the creation of the proof and the verification and both involve designer that\u0027s correct one in three involve a signer and so you can apply the algorithm one on either a blinded or unblinded output if it\u0027s non unblinded out but that\u0027s essentially a vrf it\u0027s on the blinded out input it\u0027s this what is the as the does the blinding mechanism become part of the final output like or is it or is it just as it just a private construction to the person who\u0027s requesting the computation as in are stabilized measures it\u0027s similar to RSA blind signatures and that\u0027s it it does become it does become part of the output from the signer but when you unblind it it retains some sort of verifiable property right right guys what I mean to say is like as I understand our set point signatures right I don\u0027t need to I get back like an RS advise ensure I get back a signature over the input string and I don\u0027t need to carry around the blinding factors in order to in order to have validated drive an ordinary valid signatures that\u0027s that same case here it\u0027s almost the same case so as you see here you get back a hash and a proof when you unblind you only get back the hash so the proof is something that needs to be recomputed from the input by the signer in order to confirm the value of the hash you lose the proof when you unbind the proof is really what ties the original signature to the public key of the signer okay I\u0027m gonna make one more stab at this and then this if I don\u0027t understand it and sit down it\u0027s kind of like diffie-hellman actually yeah I mean so imagine the following construction where the where I "
  },
  {
    "startTime": "00:43:12",
    "text": "supply you with a blinded I supply you with a I supply you with a random value is right I said I think I want signed or PR but Volvo preferred and I huh and I I do I get I give it to you I blind it I get an RSA blinds integer back um um that that\u0027s that\u0027s the proof and okay never mind if I see guys yeah so yeah you know say Boeing signature it becomes a signal signature that\u0027s publicly verifiable in this case that\u0027s not necessarily because the problem is I need a tree idea transform the signature in order to get that signature over the actual value and that\u0027s the piece that\u0027s missing that\u0027s right yep so it\u0027s it\u0027s relatively close but it\u0027s still very useful in that you can you can use it in a couple different applications that I\u0027ll go into right now so just this diagram might be helpful for an overview of how it works so you send a blinded message from the verifier to the prover the prover proves that computes a signature of s with M as long M Prime along with proof and if you remove the blind so you get back from M Prime back to M you can send m and the signature to the prover and then they can then compute from M another signature and just check to see that the signatures are the are the same so the main advantage of this is that the original transaction and the final transaction are not linkable together so if you were to do this in bulk and you would have this the prover compute a know vo PRF over over a number of messages you wouldn\u0027t know which one they would correspond to so it could be anything that was sent as an input could could have been the original signer so if you as this prove er you compute you know a hundred million vo prfs with the same key you don\u0027t know which which input actually course wants to that the verification and this gives you the properties that you want or at least the properties that that I enumerated so what this draft provides well specifically if there\u0027s a generic construction to do a vo PRF you can what you need is a prime order group with difficult discrete logarithm you need a one-way map from a string to a group element of this group and you need a discrete log equivalence proof this is this is where the proof comes into place and you can actually do a batch discrete log equivalence proof over an arbitrary group of this of this size using a Chow Peterson base proof so "
  },
  {
    "startTime": "00:46:13",
    "text": "the specific construction that we\u0027re presenting here in this draft is over a prime order group P 256 which is the NIST curve and then there\u0027s a potentially proposal to use CF RG curves which as I mentioned in the previous presentation do not have a prime order group so you have to make sure that when you\u0027re hashing into this group that you either eliminate the cofactor or use some sort of encoding that ensures that you\u0027re on a prime order subgroup of this of this curve but um just for simplicity let\u0027s consider this P 256 then you have a hash to curve cipher suite something from the previous draft I presented and then you can use this construction which is a batched Sean Peterson proof this is from Ryan Henry\u0027s thesis in twenty twenty fourteen but it goes back to John Peterson proofs back in the day so this is what\u0027s presented in the draft what are the use cases well there are many privacy-preserving applications you could imagine interacting with the service and proving something that you\u0027re a member of a group that you\u0027ve performed a specific operation and then returning to that same service and providing a proof that you had done this thing in the past such that it son linkable so the main inspiration for this was a application called privacy pass that we developed at CloudFlare privacy pass is a way to solve one CAPTCHA on one site and get back a bunch of via VOP RF outputs and then redeem them to solve other CAPTCHAs on other sites so that your interaction with the first site is not known to the second site it\u0027s just known that you did a proof-of-work of some of some type specifically solving a CAPTCHA there are other potential applications to this privacy-preserving authentication or I guess authorization so you can imagine if you have a service set say you have a verified Twitter account or a Facebook account with a certain parameter you could use that as a proof of belonging to a authorized set to a third-party service so you could go say to your identity provider and do a vo PRF and then reading that ticket with with a third party and they wouldn\u0027t know exactly which account you would correspond to but but simply that you\u0027re part of a specific set there\u0027s applications we\u0027ve looked into here for checking for compromised passwords so you can use something like a vo PRF with a database of compromised passwords and kind of anonymously check to see if your password is in that database without leaking it to the the database provider and there\u0027s there\u0027s "
  },
  {
    "startTime": "00:49:14",
    "text": "also I\u0027ve heard some potential applications here in proof of advertising for example online so you prove to some service that you viewed an ad and you can do so without leaking which ad that you saw so here are some open questions I have before we go forward with this is is a lot of the constructions here a lot of the meat of this draft overlaps a lot with the vrf draft but this draft includes two specific things on top one is the blinding mechanism and one is the batch verification mechanism that allows you to do multiple VRS or vo PRS at once so maybe this is better suited as an extension to the vrf craft rather than a second complete draft in itself but it\u0027s not clear to me that these features are really fit to be included in in the existing vrf Draft and so this is sort of food for thought and wondering if anybody has anybody who\u0027s read the vrf draft and this proposed draft and I\u0027ve have any comments or thoughts on on these questions thank you very much Nick I think that\u0027s mostly through the pro synchromesh first presentation I think that\u0027s really really interesting construction I\u0027ve read both this draft and Arab draft and I think that yes they can be merged together but I believe that here you have a lot of quite quite difficult questions to solve and maybe it should be done the USS effort walk just because of too many questions that Sharon and learn it should address in their draft and you should address the draft in any case I\u0027ll be happy to help with review in this or original ease and making some suggestions my personal opinion that this draft should be separate but in any case I\u0027ll be happy to help raise review in this thank you very much great thank you so Richard points so you said some things earlier that in certain cases this you get kind of vrf as a special case of this is that the case for my misunderstanding passing comment I believe so I\u0027d have to work out the details but yeah you you get something vrf ask if you don\u0027t if you have if you have a null blinding factor for example okay so so depending on how asked that is I think it may be worth "
  },
  {
    "startTime": "00:52:15",
    "text": "considering whether you know whether it would be close enough to merge the vrf into this as a special case is kind of a subsection says if you specialize in this way then you then you get this other function that has some different properties so just out of interest could I see a hands of people who have read this proposed draft out there just to get a sense of sense of the REB zone not too many oh I don\u0027t know how much we can do here at the mic but eventually I\u0027d like to ask the chairs to have a call for adoption for this draft or to figure out exactly what the right combination of this and vrf should be to move forward yeah we\u0027ll take a take it offline so just a quick question and have you discussed this with Leonid and Sharon Goldberg about what she what they think about emergence of drafts I haven\u0027t spoken to them about merging yet but they\u0027re very well they\u0027re very aware of this of this this proposal and the details of it and what do they think about these questions I think I don\u0027t hear these these questions address a different use case than the one that they\u0027re trying to address with vrf so I guess factoring out how these use cases overlap is something that we have not done together thank you yeah I don\u0027t think we need to decide here you know whether it\u0027s a single single merge they\u0027re after two documents I think that\u0027s more editorial but we can discuss later I\u0027m signing USD thank you for the great presentation and I have a one question about the use cases over Bo PRF you talk about pestle compromise pit checking so could you explain must agree how this use case works do you actually need vo PRF or I just thought that Oh caliper could be in up to this case right it OPR F maybe just maybe enough for that case that\u0027s true but the VIP of PRF brings you an additional factor to it I\u0027d I\u0027d have to think about it offline I\u0027ll get back to you okay thank you all right thank you at this stage we have five minutes left so any other business any other topics people want to bring up so I\u0027ll go "
  },
  {
    "startTime": "00:55:22",
    "text": "little previous and work I\u0027ve been what\u0027s your name sorry I\u0027m Richard Lawrence I\u0027ve been chatting with Karthik getting a couple of other folks about doing some work on ICI IES because we need this primitive for MLS for encrypting things to a tree a tree full of public keys so you know there\u0027s obviously already a kind of diversity of standards around ec IES but nothing kind of wildly implemented a available.look that has been through the rigor of this group so I\u0027ve got a draft in progress that I haven\u0027t posted yet but if anyone will be interested in collaborating on you know encrypting to D H keys I\u0027d be interested to check okay don\u0027t have some suggestion some draft already but I have a draft in progress that has not been posted yet okay well once it\u0027s posted leaflet chairs now just wanted to come on there another use case for EC is is for yes and I and so I\u0027m certainly interested in moving that forward at least for that particular for that particular problem yeah I mean the sooner the better because we have some like totally ad-hoc construction which I\u0027m sure is completely awesome Henry nice like not have it totally ad hoc probably also new construction okay so I I\u0027m hearing there is some some sort of urgency in okay that\u0027s fine thank you any other questions announcements all right thank you thank you for coming I think we\u0027ll see we\u0027ll see some of you in Prague "
  }
]