[
  {
    "startTime": "00:00:00",
    "text": "So who would like to volunteer to a note taker? Is fun. Exciting this you have to let me share the screen to have the request there are. Okay. Let's see. Yeah. I think you and have to request that. Okay. I'll do. Let me bring up. Okay. Okay. I see a request So Or maybe it's let me the test. Let's see Then could you accept my request to share the board. I'm pushing the grant screen. Oh do have to stop. Maybe have to stop myself. There. Should take a second. Yeah. Think it but you're working now. So Okay. Folks well. While Do you know? Demos out his demo and try his drive run. Get protocol shoot doesn't stay. Stands for group. Address allocation protocol, if it's a way for applications to get a unique group address across the network. And be able to run a receivers and sources. I'm showing three that hash from group pin dash dash. Sound better for you. Now let me start to setup up. That sounds pretty good. It's"
  },
  {
    "startTime": "00:02:00",
    "text": "joined. Good. The the screen is on inception mode and gonna join in Alright. Cool. That worked. So we We're about ready to get started. But we need a note taker who would like to be the note taker. Just a reminder. Cannot needs voluntary, but he doesn't what's the direction I'm what needs to do Just take break down high level some semi important things. How else would you describe the role of note taking. Do your best. That's all I can say. We we do have transcription. We do have video So it doesn't have to be exact But you know, the high points. So nate are you officially? And Right. He is an Alright. Okay. In that case, we can get started. We'll wait one more minute for folks to come in. Okay."
  },
  {
    "startTime": "00:04:01",
    "text": "We can get started. So welcome to him inbound. Here is a note well. You've probably seen here a few times this week. Please be aware of it? Please review it. And Please note it well. In terms of meeting tips for those of you who are in the room, we do ask that you still sign in to Me echo, and let's use it doesn't look like we're gonna have a lot of chaos at the microphone. And I don't think S is going to have to be breaking up many fist fights tonight. Looking at the size of the room, but Please do use the mid echo to join the mic queue even physically on just to in fairness to the people who are off like last last meeting, we had a bit of a contention issue. Where we have people patiently waiting online in the queue, and they were skip a ahead by folks who store in the room. So we'd like to avoid that. For those of you who are in the room, please do wear a mask. Just like you happen. All other working group meetings. And that's the usual stuff. Then here's our agenda. Anything add the additional batches to the agenda. I think we missed. Okay. We actually should have should be able to finish early. Get out of here. Early. Kind of a late agenda this time."
  },
  {
    "startTime": "00:06:01",
    "text": "And Let's jump straight into the status of working group documents. The first document to discuss is the telemetry draft. That is currently in working group last call. Through it's scheduled working with glass costs scheduled to through the end this week. We have not heard enough folks to support advancement. Thus far. Thus part we have heard from zero non authors. In support of advancing this draft. So if you'd like this... So first, we'd encourage folks to read the draft And second, if you do support advancement of the draft please speak up or You have any comments. We don't support advancement of the draft. For publishing. Please do speak up. Game models draft, is Sandy on the line. Or any of the other authors from that draft? Any any updates on that one? Think the usual update is looking for feedback from from folks in the working group. And redundant ingress failover overdraft. Do we have any folks online who are c authors of that one. Yes. Hello, Jenny? So he's on a. Above the young model and the redundancy ingress fell overdraft we'd like to update his a new working for, and maybe we will"
  },
  {
    "startTime": "00:08:00",
    "text": "That's the meeting and the call for working group for last call. Okay. Right. Thank you, Sandy. The other drafts are the Jake's multitask to the browser documents They have all expired jake has been reassigned to different work. And is not able to devote further time on these docs. So if no one they're kind of looking for someone to take over. So if anybody is interested in taking over these drafts, please let us know. Otherwise, they may fall by the wayside. Other documents, there's name. T yang draft that Yi young will be discussing. Next. And and let's see what's up. If you would like to Europe, Would you like for me to drive your slides? Or would you like to drive the slides or so. Try can control this lines. I'll ask have Yep. Hello everyone. I'm Liu from Tim bell. Today, I will pretend the mp yam model This is the second time for this draft. Last eye have, I have introduced the young"
  },
  {
    "startTime": "00:10:01",
    "text": "the end cam models configuration and the state information and this time, update for the two to add the... Instead fifty Sorry? Firstly, we add some statistics of the specified empty tunnels on the Empty relay side. That in the flight Secondly, we add some message for both the receiving message message on the p relay This flight showed that we also add some error message that statistics on the end mt k. And the next is that from for the mt gateway that, and we at some message that speaks of the classified pseudo in the interfaces. And this the empty gateway me guide sending message or for the post message and a receiving message statistics And this... If thirty information or a reference from the implementation from some lenders. Now did this job and uncovered empty"
  },
  {
    "startTime": "00:12:02",
    "text": "configuration and the state information and the status take the information. So I represent the the call to ask her for the working group adoption. That's all. Thank you. Alright. Thank you. You saw any anyone have any questions? Has anyone let's see a shop hands. Has So we're gonna start a question. A poll on who please raise your hand if you have red draft. Okay. Like we have, about five folks who were at the draft. Okay. Next Whole question is there we go. So six folks have read the draft. And now the question is an unofficial polling pole supports. Option. Okay. There's a second the second old question."
  },
  {
    "startTime": "00:14:13",
    "text": "Okay. Alright. It's a trickling in? Alright. So it's nine to zero in support of this. So we'll take this to the list But do encourage folks to read the draft and by the authors with Any feedback in comments and Looks like we'll we'll start an adoption call. On the list. Sure. Thank you. Thank you. Alright, Gin, You're. So when I start the demo, you Well, I guess the Michael stay fine there. Hi name's Dino. And I'm gonna talk about new protocol that we just developed recently called Gap Hoop address allocation protocol, and it was inspired by a lot of the use case discussion with Nate for his marine network plug and place sort of requirements. So we're trying to build something that's a general group address allocation protocol for the network layer. And"
  },
  {
    "startTime": "00:16:03",
    "text": "the the network layer and now... And multi cancel application don't have to depend on a third party entity like at the application layer to figure out what the group addresses. So it's a network layer solution that's probably been needed for a long time. So we're given give a shot at a new idea. Please. So what is gap? The goal is to make it totally decentralized and they it a group allocation protocol that's allocated by members that might wanna be part of a group, receivers, multiple senators or whatever. So there's no central entity to add addresses And of course, we wanna allocate addresses in unique matters. So So they... So the groups don't inadvertently merged to each other. And multiple groups that are different, don't collide at layer two in snoop switches. Group addresses are allocated and guaranteed to be unique across all the gap speakers. And the nodes don't have any zero configuration other than specifying at the application, a group name that they need to run with So the protocol will allocate both Ip four and Ip six group addresses and the group addresses won't collide as I mentioned at layer two. So we could allocate uniqueness and Ip six group address up to thirty two bits because that's what we'll fit into an ip six Mac layer address and up to twenty three bits for an Ip four address. Should work on a single subnet as well as a layer three infrastructure. And it should also a layer three infrastructure smart data multitask, but also that an where the native infrastructure doesn't support cast, you can use overlays to to realize multi cast for the multi cast applications. It can go coexist without a group allocation protocol by using an"
  },
  {
    "startTime": "00:18:00",
    "text": "ian gap allocation block. So the idea was go to I and request an allocation block that Gap addresses will hash two, and and also request a single multi cast address so the Gap protocol could run on that. And of course, when when multi cast not available use cast capable overlays. How does it work? While multi cast source and receiver notes participate in the gap protocol they want to be able to join or send to a group, so they will request the gap protocol that runs on their system, actually in their application space. To run the protocol There's an... The application would specify a group name and all the applications that specify the same group may name means they wanna join to the same or send to the same multi group address. The way it works is that the group addresses is a hash of the group name using s two fifty six, and we try to find a unique address with those with that hash. The gap notes then send after the hash they send claim messages to verify that this address is unique And and the the claim message is a group name, a group address and a timestamp when the group was created by the first member or Sender Clay messages are sent every one minute. So we're trying to minimize messaging here. A known part of a group name and receives a claim for group, for the group name. It resets it's one minute timer. So we only have among all the group members and sender, there's only gonna be one gap at any given time and it keeps changing because the one minute timer relatively random. Within a ten percent range, plus or minus ten percent range of of the one minute timer."
  },
  {
    "startTime": "00:20:02",
    "text": "If a node uses a group address found in the claim message for a different group name that's defined to be a collision. So if you have group name a, group named b, if it happened the Hash the same group address. One of them has to resolve it and the claim process does that. So if b comes later sends a claim message for this group address. And a says it sees a collision a trigger a claim message and b will real do a hash plus one to build a new group address for this group name, and we do it up to four times. So you use the group name. And if there's a collision you do group name plus one. If there's collision you try plus two, and then you try plus and then you give up and you can tell the application that there's no group that you can allocate and then other procedures have to be done like, pick a new group name. So when a protocol or network partition occurs not all the will be able to see same see claim messages. So in the case of A and B came up and they weren't able to communicate with each other. They would both hash the same group address. They would the applications to start sending and receiving from it. And then when the partition healed, then there's a conflict in the group address. That's no different than somebody coming up for the first time doing a claim with a collision address and a he would send a claim and tell them to do the plus one thing. And whenever a group address changes it and the application's already started up, the way the Api works is that you... There's a callback function into the application where if a group changes, you can call the application back, and then it knows that the group change and it can actually Igm join or Ml join the new group or start sending to the new group. So the point about protocol scales, there's really only one claim"
  },
  {
    "startTime": "00:22:02",
    "text": "message per group name regardless of the number of nodes that are using the the group. And there's all the only one at most one claim triggered claim when the collided group is detected as well. Client addresses were not used and converge quickly since collision detector triggers claim. So it's something that happens pretty quick. A sub second at most one second. I should say. So all the messages are encrypted. We decided to use charge out twenty cypher because it's pretty simple. Uses a shared key to encrypt and decrypt claim messages. The Gap protocol has a single message is called the claim message. Right now, the default key is the group name. So everybody that wants to send clay message could you use the same group name. If there's multiple group names running at same time, you have to make sure that if all those gaps speakers are running, that they need to use the same encrypted... The input my implementation she uses the the group name right now, so because it doesn't wanna configure anything. But really, what you need is a well known encryption a well known key that our group members use because they're gonna be joining different group names. And you could run it hybrid mode. You can do both. That there's a marker in the message where it tells you. If you don't see this marker in the message, it means you couldn't decrypt it. And so you just drop to packet. If it comes in plain text, you'll see the marker without trying to decrypt it for your... When you're not using a configured key, The protocol can detect bad actors is important because we don't want the cap group to be signal jammed So if they're sending too fast or forging a time, or creating bad hash from the group name you you put it on a local list and start ignoring it. And if necessary, you we're gonna do... There's this is work in progress. If there's too many bad actors k event, our bad actors we can re key to exclude the bad actors. So"
  },
  {
    "startTime": "00:24:02",
    "text": "the good the good guys can talk, and the bad guys can't hear it so they can't get involved in... Because if the bank I see the messages, they could try to do bad things. And so if you if you encrypted it by keying it'll hopefully it'll be a cat mouse, but we'll try to solve that problem. But that's work to be done in well reported future How that's coming. Now if you're running running gap over an overlay, the actual... At least for the lisp overlay, the mapping system can decide who comes and who goes. So if gap sees these bad actors doing things, You can tell the overlay to not send packets not have that guy and packets anywhere, and you've actually pushed the problem all the way back to the source. So you don't... Because if the bad actor is gonna send a multi group everybody to receive it and throw it away. But if you can tell the overlay to not let them send, at the router close to where the the bad actor source is you could stop him from sending packets. So it's a good solution to not have him you know, Doc, the gap group you could actually regroup do the regroup too. If everybody hash, let's say to the plus one for this group name, And you see that that group is being doc tech, you could switch them all to plus two pretty easily. But more protocol specifications required for those sort of things. These kind of things we have in mind that can could go wrong with the protocol. And we have to decide if we should address them or are they rare occurrences? So that that's Tb stuff. So since gap is pretty lightweight, doesn't send very much simple processing, the worst the worst The most Cpu it uses is probably decrypt and encrypting the packets. But two fifty six is pretty lightweight. It's it's additive and exclusive or based. It's not poly based. So it doesn't take a lot of Cpu to encrypt the packet. And the message is relatively"
  },
  {
    "startTime": "00:26:02",
    "text": "small too. It's... I think it's less than seventy five bytes or something like that. So we decided to have gap run inside the application process space and it would... There's four Api calls to the protocol. So you open up the the Api using the call and you provide a callback function. So if the group does change, you can take action. And when you need a group address you simply call allocate with the group name and you get returned back a multi cast address. Before v six or both And then you use it to join or send depending on what the what instance of the application's running. And then when you're done with it, you can release it. Releasing it just means that this node won't have... Doesn't have to gap claim it if it sees... If if it sees a collision and it's not part of the group name. It doesn't have to participate. It's only the guys in that are joined to the group name that participate in the collision detection and then closing closing the Api means the gap protocol shuts down in the application. Usually is gonna happen because the application's is gonna shut down because it's done doing what it needs to do. Gaps which participate the same group or started with the same group name. Apps can use multiple group names since they may have requirements for multiple group address use. And a lightweight app can use a lighter weight rest full Api to a Gap proxy node that runs the protocol if you have an Iot device, and you don't wanna to run the protocol there, the gap call could actually do a rest call to to do an allocation in another node that's running the gap protocol. It could be standalone node, which we hope it doesn't because it looks centralized then but it could be another node that's participating in it as well. What's unfortunate about the rest Apis, you have to point it to something and that that causes configuration and centralization So we're we're trying to decide that that's gonna be useful. If it's lightweight enough, we have to look at the implementations"
  },
  {
    "startTime": "00:28:03",
    "text": "the implementations will be done in python and see and about to see how fat that would be in an Iot type device. So we did an implementation and I did it Python, and I built a couple of applications the application was really simple just to showcase the protocol and just to send messages. So the the sending applications call is an echo server source and I called it es then there's a echo receiver and simply what they do is when you type them on the command line. You specify the group name, and the echo source will send a message and their echo receiver will simply hash the group name using gap Igm p joint and wait for that message to come in and displayed on the console. So pretty pretty simple, and I'm gonna do a demonstration of it in about a minute. So then we have a monitoring tool called Ga shark, which somebody could they could listen on the gap group on a particular group name or everything, and and it's like a wireshark equivalent so you can debug the protocol. So that was used as a tool for Meta. To develop the protocol. And there's utilities gap hash scale gap to do various things to to help debug things. Okay. So I have two demos. This one first one's pretty short. It's a a minute or so. And it's just a very high level just showing you Es and e r running and then we also have a protocol demo where we can go deep dive under the covers and see how Gap works show how the hash works and how in and the case where is no collision. And then we're able to use a scenario where we could make a collision occur and we'll see that it gets resolved. The environment is I'm just running this right now on my laptop running in docker. So the Docker bridge is"
  },
  {
    "startTime": "00:30:02",
    "text": "going to provide native multi cast connectivity, single subnet multi test connectivity and the three nodes on the right hand side are the three receivers and the two big windows are gonna be where the sender are. So we're gonna... It's a movie that's gonna play. We're gonna go ahead and put the mic up to it. And then I know it's a little bit hard to see those characters So I'm gonna try to zoom in where the focus goes in the windows. So question good now. No. Go ahead. Yeah. So. So I see in a message format. You have both probably before and then we six address field Yeah. Sorry I expecting that you will we allocate both for them at the same time, possibly. Yeah. I was thinking at at least for the first try, allocate both of them at the same time, and then maybe that that group address that's returned is an array of two two elements or something I'm asking because, you know, for most or all the multi they have today, we generally some separate before in six messages where the... Whatever is in the payload is kinda reflecting the the address where know the the message itself from. Yeah. Yeah. Right. Oh, I mean, like, you know, I can help you if here at for p message. Right? Yeah. It it's essentially not before the destination address. Correct campaigns only before. Yes. Addresses services. Yes. But in theory, mean. Could have done it differently. And... Yeah. Well, what I wanted to do was I didn't want to be address family proactive. And so it's really supporting a multi address family implementation. So you ask you have a group name, you get two addresses you decide if you wanna use v four or visa six. Yeah. Yeah I was wondering slightly if fuse the same hash. I mean, it will be the same thirty two bits or twenty three bits whatever right. So I think in I haven't done the v six portion of it. Yeah It's just simple writing code, but was gonna return thirty two bits of uniqueness for v six and twenty three for"
  },
  {
    "startTime": "00:32:02",
    "text": "Yeah. Yeah. Yeah. I was wondering slightly if you could What should I say, just get, like, unique thirty two bits basically. And then you start to for both of four and Yeah. But it it'll end up colliding for a layer two switches so we have to be careful. etcetera. Because we have it the twenty eighth of twenty three mapping problem. Yes. So only way would be to allocate twenty three bits that are unique, I guess, and we start for both before in this six. Yeah. Right. That that that was kind of the plan. Yeah Well, the thing is we we could certainly do that and then the higher the the other nine bits or whatever would would not be used for v six. But the thing is is if use thirty two bits. We have less likelihood of collisions. Yeah. So one thing I think... And we have... And we have four bytes of Mac address that we can use out. Yeah. Yeah. One thing we maybe should think about is today, we have, like, thirty one bits that basically are used by Mad cap. Right? Yeah. And and there's no other dynamic protocol. So we should maybe think about... Is it first splitting that into, like, like, smaller spaces where each protocol can get their thrown twenty eight bits or whatever. Any allocation protocol can? Yeah. It's yeah. Basically, let's say If you split the thirty one bit space into c like eight or sixteen blocks. Right? U. Then it could have up to eight thirty in different assignment protocols to the other their own space. Yep. We can do that. You think it would be better to do that than ask Diana for more. Is what you're saying. Yeah. So today, it's like you got thirty two bit. And half with this for static config. Yes. Yeah. And the other thirty one are four dynamic. So it can't, I think, extend dynamic you know, into what is static today. Oh, I see. I see. Maybe we could, but... Okay. The other option is yet to split to... I think whatever you think is the best to do that. And and"
  },
  {
    "startTime": "00:34:01",
    "text": "I don't know if I need to specify that in the gap spec. But I do need... I I do I should write some text about what is the uniqueness with So... Yeah. Because So it good potentially and should it be consistent. Is something for us to think about. Yeah. to be a separate document that kinda to first care splitting up the space. And to give recommendations to elementary phone protocols. Yeah Okay. Just one more thing. Yeah. No go ahead. I see that you for six use link local scope in in the draft. Did it's like f o two Oh okay. Yeah. So I was thinking a bit. That there wasn't that was a Yeah. A lot possibilities to make it like scope right cycle price. Once you get the allocation you can use any scope U. Well problem is you need to make sure maybe that the get protocol works over Yeah. Different. Right. Oh right. If you do link scope, it's fine gap is just on that link. Oh I didn't intend... I didn't mean it to be linked local I should used F f zero one. Yeah. Because if you need to use Link locally, you still use an F f o one yeah. Address. Okay. So I'll I'll fix that. That's good. But yeah may need to think a little bit about yeah scoping works. Okay. Sounds good. Okay. Yep yep. Okay. Good. Yeah. Great comment. Okay. Name from Ga. I just wanted to add to the discussion that, you know, stake about the the the allocation blocks for multi house addresses I you know, I said you kind of a document about that and I'll forward that to you as well staying. So Thanks. Okay. So"
  },
  {
    "startTime": "00:36:03",
    "text": "other questions other questions any other questions other questions questions okay ready for the demo. Oh, Alright what. Yeah. The need I have time lenny I need like about ten more minutes. Sure. Got it. A demo of the Gap protocol. A Gap protocol. Okay stands for group address allocation protocol, and it's a way for applications to get a unique group address across the network. And be able to run the v receivers and sources. I'm showing five nodes here. A demo of the Gap protocol here the Gap protocol stands for group address allocation protocol, and it's a way for applications to get a unique group address across the network. And be able to round the receivers and sources. I'm showing five nodes here. You'll see the three receiver knows on the right hand side, they're gonna run an application called Gap receiver, which they're simply going to join the group that hash from the group game Tim dash m bone dash group. Let me start this week up. So this guy is joined. And I'm gonna join it join receiver two and receiver three. They're just waiting for messages to come in. On the left hand side, these two windows are two sender. Individual centers that will sent to the same group name know the group name is remember the group and the sender is gonna send a message a text message, cast,"
  },
  {
    "startTime": "00:38:03",
    "text": "anywhere and it's gonna to send it to the same group address that the three receivers are join through. So let's start that up. And we see that The cast group is t twenty four dot two fifty four dot ten dot fifty. And those... That's the same group that the three receivers had joined. And therefore you see them receiving the messages on the right hand side. Every message will have a sequence number. You see that there individual messages and they're continually being some Okay. Now what I'll do is I'll also start up another sender here on the left hand side. And we'll have it send a message called multi cast everywhere. Of course, it's gonna send it to the same group The group name is Pin Boom group, and it will hash the same group address. So let's start that. And you see that it is hash to the for the same group. And then you see the receivers on the right hand side are getting inter lead messages from the source that's sending anywhere. And the source of sending everywhere. K. If we stop this source here, we'll see what jeff we're just getting messages from the first sender. K If I stop the source here, you'll see no messages being received. And then I'll just start it up again. Just to show you that there's new sequence numbers starting And that's basically the application of demo. If you stay tuned for the second part, be able to see what's going on under the hood in the protocol demo. Thank you. Any questions on that?"
  },
  {
    "startTime": "00:40:01",
    "text": "Okay. Let's go to that protocol demo. Be good, lenny. Yep. Okay. And I'm about to give you a gap protocol demo. This is the second part of a two part series The first part was demo to get a gap set of applications with no detail on protocols. We're gonna give you detail on the protocols. So to start off where we left from part one, We had three receivers on the right hand side and two sources on the left hand side. What I'm gonna do for this demo, is fire up this receiver and log protocol events. Now it turns out that we're going to join a special group name called collision Pi group. And that's gonna force a collision to happen from this source over here. It's intentional so we could show collision detection on a hash group. Let's first start up this guy and it will be doing some gap logging. So wherever you see time stamps these are messages coming from the gap Api. And otherwise, their messages is coming from the application directly. So for this guy, he is ip address dot five. So let's start him up. Can see the messages received on the monitor. We see that five sent a claim message and this guy received it. And they claim that the to Phone group group name, ashes to two twenty four dot two fifty four dot ten dot fifty. That is correct. We store the state and we detected that there's no collisions. We'll do the same thing here for this receiver. This receiver is"
  },
  {
    "startTime": "00:42:01",
    "text": "done. Six start him up. And we'll see that this node received from dot six. It hash to the same group that the other node did And so there's no collision. So everybody's is doing just fine. Let's go ahead and start up the source will hash to the group and we'll see that the source is dot eight Let's start up the application there. And we see that dot a came in just like the other two nodes, everything's good. You see the two receivers running just fine. Okay. Now note that these two receivers are joined to Mod group and this guy appear is joined to collision Pin Member group And so this source, what we're gonna do here is put logging on this source, and we're gonna have it send to the collision group. And the reason we're gonna do that is because it's gonna start sending on a bad group name. So this is just a fictitious group that is gonna hash incorrectly Okay. And as as it turns out when you look when you come up here you see that it was received by seven, which is the the source down here. And that we they claimed that it was this erroneous group two twenty four dot two five dot two five that two fifty five. We said that it was an legal hash because the hash must be one of these four hash. We try four times to find a unique cash for for the group. So for if for example, it was a correct task say the ninety one. But there was some other group name that attached to the same group. Then a claim would be sent back with the second one"
  },
  {
    "startTime": "00:44:02",
    "text": "And then if that collided had been the third one and the fourth one, and so on So we're thinking at this point that since this dot seven node as to this address here that it's really a bad actor because it didn't even try one of the four. Good. Okay. So we may immediately send a claim back and what we do is we claim that the real hash is ninety one. Which is the first one here. And we send that. We send that out. Now when this guy received it go back to where it collided Top four node. This kind up here, He said he's gonna claim the correct address. And this guy detects a collision erroneous Okay? He believes there's there's test code put in to the application to believe that two twenty four two five two five fifty five is the real group. So this guy thinks that dot four as collided So what he does this time is he's gonna rehash using normal code. Actually hash to the same group address You now, he's a happy camper and he... And he goes ahead, and he started sending to the new group address the ninety one. And when you see that, you come down here, you see that this receiver that's joined to this address It's the right correct address is starting to receive application packets. And by the way, while that's all going on, this other group is just running just fine because it's completely unaffected. Anyways thanks for listening. That's the end of the protocol demo. Okay. So any questions with that? Okay. So just wrap up wanted to make a quick point about collisions. We did some simulations for a twenty four bit"
  },
  {
    "startTime": "00:46:01",
    "text": "unique with hash. And we ran one million groups And we found that there's a two percent chance of collision. If you look at the right hand side above, you could see that Most of the collisions twenty eight thousand happened with one collision hundred happen with two collisions eight with three note that dis simulation was going through a million group names by increment the character string at the last Oc. So they weren't random random or they were very similar type group names. So if you I I I'll do a simulation with some arbitrary group names. And see if this rate goes down, but two percent out of a million is is... Yeah I think it's pretty small. Then we ran it for ten million which is below and it moved up to twenty percent But note if we do it for ip v six over ten million nodes. That percentage is gonna drop significantly on on using thirty two bits. So that's kinda what's motivating. So the point of the slide is is that collisions are very real, and we may not even have to run the collision detection machinery at all, because the hash will go a long way. On creating groups that are unique Next step so we're going to do more testing of course try to find corner cases. And some more security features, especially if you have to re key how do you re key in decentralized environment? And who do you trust And how do you actually distribute the new encryption key to. So there's a a multi multi party computation algorithm called Sham algorithm where you can transmits part of a key to multiple nodes. Uses a poly on map to be able to skate and and fragment the key, but it can be resembled by the receivers that you wanna send it to. So if necessary, you can us these things to who you believe are the good actors and leave the bad actors out and we can then re key"
  },
  {
    "startTime": "00:48:03",
    "text": "if necessary. Not sure this is necessary, but these are things that we're thinking about if we have to re key The most important thing is I wanna test on overlay, and I'll use a list overlay to see how this works. So I'll put some knows at my house. I'll use my laptop. I'll use some Aws Vms and have all this run over list multitask and we'll see the Gap protocol. And then I'll be able to report on that in the next etf The the the jury still out on the the code the lightweight rest Api because it's really at least it's important to me that this becomes centralized. He... I mean, decentralized. Let me re emphasize that. I want this to stay decentralized because it's more plug and play and it's more fair in in this centralized world we're starting to see more and more. Maybe write more apps if there's anybody out there that wants the right apps I know Nate application or use case the apps are in in c. So maybe on the to do list is right write the protocol in a c Api and so that'll go on the list as well. So and just seek more developers that wanna play around with the stuff. That'd be great. Just contact me There are few guys that were involved in this that ran some ideas mostly Nate and Chris Hops. Thank you for that. And if you guys wanna watch the demo, just grab those Qr codes and you can watch the demo. Yes questions. I'm not saying we do the. Just want to come and for the protocol. I think this protocol is were designed because every aspects. I I thought kinda it has been in writing. It. So I think that it's good. And I have our question, maybe Has management"
  },
  {
    "startTime": "00:50:02",
    "text": "before. I I'd like to know if the link local address will be assigned or just side local at or global local. Address will be assigned. My intent was it to be global a global address, and it... And Stick just brought to my attention that I made a typo in the spec and used f f zero two, which implied Link logo. So I apologize for that. So I plan to use F o one. Do you think that's... Okay? Okay. Okay. That's. Yeah. And and the reason why also It's just not a question between Link local or multi hop if it's gonna run on an overlay, most overlay nodes, you don't know where they're gonna pop up. And it's most likely a global scenario anyway. So you wanna be consistent with the scope of Seems like things where the overlay is gonna be as well. use case, in views. Right? Sorry I didn't I because it jeans the arrow. Situation. I think local also used. Yeah. Right? Oh, yeah. Link local could be used if the overlays doing a layer two overlay. Yes. Yeah. Yes. So if it will So it would work in either okay. Yes. But in the case where we don't use overlay, we wanna use layer three native multi cast we have to use a global address because the gap knows have to travel across a pi domain or something. Right. The allocation protocols run over the pin dummy domain. Thank you. Yeah. Dig again. Yeah. You know, I asked you about doing the same message for for in the location. Are you sending the same message over both fifty four and the six or you're just choosing one of the protocols. It it needs to go over both. Yeah. Yeah."
  },
  {
    "startTime": "00:52:01",
    "text": "I mean, it could go over one either or both. So Yeah. And I'm not sure since we don't wanna configure anything, it needs to go over both Yeah. Not this for The realized this, you know, you might have some some hosts that only supports say one address family. Right. So if you sent one message for both then, you know, some might own support, the other address type and yeah see those messages. Okay. So I'll make sure it's clear in the spec that we send two messages and we make it we we make it robust for that. Yeah. I know, it's kind of... The main thing is to test all spell and stuff and Yes. So details you can sort out Yeah. I I mean, if we don't send two messages then we have to figure out who's who failure too. and there's more delay in figuring out who wants what, and it just adds all this complexity to them so Why do that, you know, So... Yeah, good comment. I'll make sure I update. Hi. Hi. Dino know. Nice to see you again. I still have a question because just now, you mentioned that there is there are two percentage of collision rate. Why you just simulate in about one million Mh. data science. So I think maybe it's better to provide more sense of different different taught types of or different amounts of the whole amount for the data, it will be better because we can see For example, if we set about one hundred groups, how much of how many of them will be clear. Clayton. Yeah. I think we have a lot of flexibility with Ip six. And if we think this is gonna run mostly wide area, What I've seen working at Cisco and doing multi cast over the years is that If you do a lot of wide area multi cast, the switches well do we have to do... They do Ig snoop, but there's less collisions that happened on wide area, then it happens locally because of the type of applications. And"
  },
  {
    "startTime": "00:54:00",
    "text": "The other problem is is the group allocation was always ad hoc in the past because network administrators would decide and then they would learn that snoop was it was not was failing because of the the the overload that then they would have to take pay really close attention. When I worked at the Nbc Olympics and we did multi cast there they basically sign the low order three bytes of the multi cast address with the same three bytes of the source because there was always one source which sent to the multi cast group. It was always won the many. So they did that for ease of network management. When they looked at a group, they knew it was a long jump or versus track and field or something like that. And so they just decided to keep it a simple mapping. And they did assign the source addresses of those sources where the lower of twenty three bits did not collide because they wanted just to avoid the Ml... The Ig snoop problem. Yes. That was my my question. Yes. I was wondering why can't just avoid that question by configure configuration deliberately. Okay. Yeah. So... So I I I mean, it's when you say the things gonna be zero configuration, you have to really make your design respect that point. And so we're gonna have to gonna have to be an architectural constant, but I don't see any reason why you could we use twenty three bits for Ip four and thirty two four ip six, and we know Ip six will have less has collisions and before will, you know, but the problem is I I don't know the... I mean, maybe sticker comments on this. I don't know the state of multi cast in general in the industry where if people are moving from v four multi cast to v six, and we're seeing more v six applications pop up, but Not sure. Okay. So Now question is one a question happens, how long will it take to solve the"
  },
  {
    "startTime": "00:56:03",
    "text": "No. No more than one second because when everybody sees the claim message that collide with an address collision. All the members that other park nodes that are part of that group name, will set a random delay timer of one second. Zero to one second. So it could be as fast. And I I think I I think I put a little jitter of a hundred milliseconds... So between a hundred milliseconds and and one second is a timer will expire for one of the nodes. And that one when it expires for that note, they send claim message. Everybody receives it. And if their timers are running, they cancel it. So it's only one node that will send it within one hundred to I think it's actually one hundred to nine hundred milliseconds because I get a a ten percent jitter of that a little bit as well. So So I'm playing with the timer just to see what it what what it how it works out. So less than a second to resolve it. Yep. With... With never propagation. Time that has to be added to it as well. Okay. Okay. Thank you. Yeah. Thanks. This is nate again two comments. One, the zero configuration came from our requirements because our users don't how to configure stuff. And The other one... So you mentioned that you wanna to do global scope, but that's f f one, is that F f o e or what's I think it's f four one if I recall. These will e global. Okay. Yeah. Good. Thanks. I'll go read my Ip six documents to make sure I use the right one thanks for the correct. Yeah. Okay. Okay. That's it, any other questions? Comments. So so what is the status of the document is it as it been adopted and it's it's... I assume you're looking to adapt some Pin. And has it gone for option call or plans too."
  },
  {
    "startTime": "00:58:03",
    "text": "Yeah. Mike and I requested the working group to consider it and stick, you wanna Yeah. So I don't two remember exactly what the his said him yesterday, but Yeah. We might do another adoption column on the list at least that okay I think it's in charter. It's something we seriously should consider doing in tim. But Yeah. I I don't see any urgency in and adopting it to though Pull. It really isn't to see we get. We hit right? Yeah. have a couple more reps of the document and some more presentations and see where testing takes us Yeah. But I think one thing we need to think about is no relationship with your document versus what nate is doing. His stuff and Yeah. do we want to adopt both in the working group? Yeah you one to... I think we're trying to figure that out is authors as well. Okay. Look. Alright. You'd like Sad, would you would you like, to drive the slides yourself? Or do you want me to drive? Go ahead, Please. Go ahead and share it. So yes. Thank you for taking this item. Good afternoon, good morning. Reading very. So but basically, this this talk is about enhancements to list multi authored with Den des. This was presented at at list yesterday"
  },
  {
    "startTime": "01:00:01",
    "text": "So but pin had already suggested that we to set Him as well. So next. Yeah. Thank you. So the problem statement is essentially very straightforward, meaning, you know, at least to to people have upgraded the eighty three seventy eight the signal three rf that is the list signal defines you know, pretty good mechanisms for having multi traffic between list sites using an application that is a us based on. And and that that has good semantics essentially for the receiver sites riding a particular group or leaving a particular group either using v four r v. And then, you know, that getting propagated into the map server where the the the such giant requests related or consolidated and then then then A consolidated replication list... Constructed and then it is sent to the It, that is the be the head where the source is connected are hosted on the list site where the source is hosted. And essentially, you know, good procedures are defined. But all of this is only possible with the uni, which which is a very good starting point. But but the... You know, as as kind of things scale, then we we we go into situations where we would want to, you know, as as the larger... The number of lists site sites increase then we would want to take advantage of you know, multi application in the end, and this has also kind of, you know, let us to think about using the multi capabilities while while still keeping the backward compatibility still maintaining, you know, the backward compatibility because that is a very important point. And another another"
  },
  {
    "startTime": "01:02:01",
    "text": "a dimension of of of... This is actually the different families, you know, some of the sites may use a v four under list some of them use visits related it would be quite interesting. So, you know, those those have have to be taken into account as well. So the that's kind of the overall background where we started or why we started thinking about this this problem. And of course, the draft tries to, you know, probably give some solutions in that direction Of course, it's not complete. It's just made start. And and and we hope to get some feedback and try to refine the proposal and and go ahead. Yeah. Next slide, please. So... Yes. So I'm sorry. I did not include the term terminology slide, but most of the terminology that we have used here in the draft are from the eighty three seventy eight. We have been trying to be consistent with the eighty eighty three seventy, you know, terminology and syntax slash semantics. So we we don't want to kind of, you know, put anything new. Of course, you know, augmentation is also fine. But there's the only two terms that we would want to augment our add is essentially whenever we refer to the No. Es state, that is the S e a d comma g state. Then essentially, we are referring to the overlay multi cost that is essentially the overlay source and the Oral multi group. And the that there could be essentially request coming in the Igm p request coming in from the the end endpoints to the egress lisp site, which will turn essentially take that and and try to construct some lisp that we define that is the tl we define in this in this draft and convey to the map server that the intent is the interest for the e d comma g. And whenever we refer to be yes r comma g, then we refer to the under multi... There is the multi state for the under. So so the idea is is need to, you know, not use a a protocol like pi but use the signal three semantics. But"
  },
  {
    "startTime": "01:04:02",
    "text": "to essentially convey the interest that the overlay there is the clients have... The the lisp clients have and and and and you know, tell the map server that that there are list sites where there are interest for the multi G state and that will list in turn cost, you know, s r g state to get created because because the trees are required to anyway you know, be transported over the under. Now... And as I mentioned earlier, we want to all, you know, support the mixed mode where you have both and multi class that is capable in the core. There is certain certain sites have capability receive cost or multi or both, but certain certain have you know, us only. And and therefore, we want to keep it and of course, the subset of that is the multi are only under like case where everybody talks to the you know, under unlimited cost. And of course, the another subset, which is missed tier for that is the Only, and and there are no regions really needed for this, but whatever schemes you be use here that's not prevent that back compatibility. So so that's the kind of the overall scope. And of course, the the the the mix the objective of the graph is essentially to construct the application list and we... You know, thanks to the really putting this in a mathematical way. Where, you know, the idea is just given an a ad and the g, Right? Then you construct the replication list, which which is nothing but a set of tu where each tu is essentially Alright. Yes. Are you are like where, you know, the difference between between the green and the Blue essentially is that the green represents the the space where the unlocks are capable of receiving multi traffic and therefore, they use the multi group in the, whereas the the blue ones essentially represent the paste other set of sites where we are not really"
  },
  {
    "startTime": "01:06:02",
    "text": "capable of receiving multi cash traffic in the layer therefore they would still continue to receive traffic in the us. You know. So... And and as you know, when when those sites migrate essentially, you would have the hourly the greens... The the blue blue blue sites collapsing into to the green and that that can sort of migration. You eventually ensure level evolution can happen. Or the... Over period of time. And kind of would probably even help customers where they have... You don't have to increment, you know, we don't have to upgrade all at once, but incrementally appeared or a period of time. I think... That's that's that's the idea. And and, of course, what we have not included are layer to release where where we layer to... I mean, that's probably provide this Ethernet as a service which we have not considered here our or any other, like, B our m p. We don't want to, you know, make rather... We we we not decide that we don't want And and and of course, we don't have any mechanisms to compute the multi group they could use any kind of a hash function or any any any look mechanism where you know, the previous work that was presented, you know, had very good mechanisms for group allocation which you know, which are not covered in the graph. So we don't talk about any such things. Next slide please. Yeah. So in terms of So... the procedure defined in the graph very similar to the eighty three seventy eight we kind of split the procedures into three different aspects. I I touched upon it a little bit briefly. So essentially if you talk about the receiver site procedures, we would, you know, have the Igm and p join coming the begin from the end endpoints that is the the and then the the Egress lisp sites would get them and then map it to whatever you know, instance mapping that they have"
  },
  {
    "startTime": "01:08:00",
    "text": "and that that would essentially then result in taking that join or the interest and and conveying it to the map using, you know, the the formats. Again, the the formats are kind of called out in the draft. There is nothing new that we probably need most of it is already there in the eighty three seventy. They're kind of only giving the procedures. But but basically essentially the there there are two two or three aspects here. One is the the aspect being, you know, the the join slash leave semantics have to be taken from the eighty seventy eight the only the addition here that we really need is essentially the Etfs that is the Eager egress sites will tell the maps server that I I need you know, the the over multi being transported in a particular Group the mapping is already been done done in the in the egress site and then the site based on each policy or whatever it's it's... Algorithm of kind of determines the Group and and communicate Absolutely. And naturally, the next logical step is essentially the consolidation of such application lists from different eager sites, the maps server will take them all Some of them can be uni, Some of them can be multi and combined them And and and, you know, and and of course, there is there are certain bit the the merchant that we use to tell the map server that, you know, we don't have to ignore our override the the later one with the previous one. So so it kind of merges them and consolidate it and and at later point of time in the. Site where you have a source connected in the source. Site will essentially get it via other from the app server, you know, the list of sites that is the list of sites of receiving requesting gas traffic and then the site list of sites that are requesting in the multi. That consolidated list will be obtained from the from the head end site and and the streaming will start and and kind of go over as new sites join they may request additional copies I rather additional"
  },
  {
    "startTime": "01:10:01",
    "text": "hourly elements. Where which could be either uni or multi cost of sites in go away and therefore, the the that list should be kind of maintained over a period of time and and finally, when the... When all of them goes down in the the kind of tear down happens. So that's that's those two are are are not so clear in the draft. I would say, you know, definitely they're more work be done it's the zero zero version, but I thought, you know, we've made a start and then probably get some feedback and and I'm kind of order for bit of So that's mostly what I wanted to cover. Yeah. The reference model is just there. Any discussions we want to use examples. I think I'm mostly done probably any questions. I'll be trying to answer and You know you're up? You're taking up the question. Hi. This is Dina. I don't know if you were at the end of the lisp working group yesterday, but Darrell made a pretty good comment about we We kind of en all the combinations of using under lay groups and the uni cast But he made a comment of what if some of the members aren't on the overlay at all. And Yeah. The rep and if that happens, we actually need to encode the replication list to say we then have to replicate natively. In other words to an under lay multi multitask group directly. And what that means is even though the group outlook is in there, those the packets that go to that group are encapsulated list packets where we'd have to send to the exact same group again that une encapsulated so they could make it to the non overlay notes. So I think it could be done, but I think we might need a bit"
  },
  {
    "startTime": "01:12:01",
    "text": "And I haven't looked at I a long time, the format of an Roe entry but we might need a bit in the Roe saying forward native don't caps something like that. So that's just an Fyi. So that that's an action item for us to go off and look at and put text in spec to deal with Sure Sure. Sure. You know. I'll I'll note it down and and I'll do the homework and get back to you. So what was the outcome of lisp is is just looking for adoption list? Or are you looking are you looking for feedback from And. Yes. I I would think so. Mostly this would be in list if I'm not mistaken stick is also here. There is definitely overlap with bim and d. But I thought we'll start with list because the Yeah. I guess that's probably a decision for the list left chairs, you know, whether they should go in list for. Dig here. To me since clear that it should be done in list, it's pretty heavy on on the list. But... Yeah. We'll see. Sure. This seemed to be a pretty good interest in in the working group yesterday I felt. Any other questions for up? Thanks for sharing. Thank you. Thank you. Final Talk will be on Three n."
  },
  {
    "startTime": "01:14:02",
    "text": "Which is three based. For live streaming mass audiences. This is a draft. That since one fifteen was It was recently adopted in the mo working group. And the moss working group they were they had the suggestion of the the the draft is intended It talks... It utilizes multi multitasking components that we're all familiar with. But so synthesized in a way that can be used well for the media ops group and they some of these suggestions from that working group was they would love more feedback from the A remember day. To help review some of the multi multitasking parts of the draft. So what is three d n for those who don't remember. It's it's addressing the problem of network resources being consumed by live streaming. Specifically with with as live audience sizes are kind of exploding and combine that with increasing bit rates for things like four k a k and augmented reality. We we may be at an inflection point. And questions. Are we at this inflection point? If not now will we ever be And if the answer to either of those questions is yes. Then, you know, the questions well what what should we deal? And and so that's ...that's where treat the concept of treaty comes from. The other thing is for those folks is who think... What live stream is really"
  },
  {
    "startTime": "01:16:01",
    "text": "not really any different than on demand. Much me is is has some fundamental differences than on demand. Streaming in that there's expectations for much lower latency when it comes to live streams than on demand streams. You can't just stream at... You know, have a minute or two playoff buffer because, you know, you run the risk that your neighbors or at the bar across the street, everybody's cheering for the day. Score. While you're a minute behind. Also join rates are you know, vastly different. There's. And on demand video the the the the rates grow significantly on the in the course of the night, but if they're they're predictable and kind of gradual and and smooth. Whereas with live events that you could have, you know, millions of viewers joining, you know, a couple of minutes I a quick time starts. So the idea of addressing this problem with network based replication is obvious to us, of course. But... And and multi multitask has been, you know, pretty successful school in a number of places, you know, things like financial networks, it's absolutely vital. But when it comes to Internet over the top multi multitask hasn't obviously then very successful. So it's worth looking back at, you know, what went wrong. And it's kind of you know, three main problems of Internet multi multitask where, you know, the all nothing problem where every single layer three hop between sourcing and receiver must be multitasking enabled is a pretty significant barrier. Essentially get getting getting every single interface on every single router and firewall the Internet. To support a multi gas routing protocol protocols"
  },
  {
    "startTime": "01:18:01",
    "text": "a very high bar. D six, by the way has the same exact challenge and, you know, you can see why it's it's it's also struggled with widespread. Ubiquitous deployment, you know, the past two decades. There's the complexity problem. Where the benefit the perceived benefit. Has not been seeing as we're the cost. Of deploying managing and troubleshooting and operating multi gas network. And then there's the chicken the egg problem of that. There's no multi gas audience because there's no time vice versa. So the good news and is that and this isn't, you know, she comes a surprise of people in this room. You know, the folks in this room, no and understand this better ever, but better than anyone, but there are technologies out there to address each of these problems. What kind of better at an inflection point on the supply side. And specifically what are those things. So tracy... Tree d you know, tree based Cdn it it essentially leverages native and overlay concepts. To to deliver a service that addresses deliver service over the Internet. That leverages multi cast and addresses those three fundamental problem that have multi multitask previously. So there's the native component on that and and the idea there is simply to just use s. It turns out that most of the the vast majority of complexity of multi multitask comes from As. And if you just use send, we radically simplify You can get rid of say ninety percent or so. Plus of the of the of of the complexity problem."
  },
  {
    "startTime": "01:20:02",
    "text": "Typically, you know, we we're not prescriptive prescriptive. Prescriptive it's kinda like. Which one is the right way be use now? But Usually, you know, Ss ssl usually uses Pin in, but could be any technology that can deliver. System. Services. And combine that with over. So so Ss is used in the in the in the native part of the network. And to reach receivers who are on uni only networks. That's where overlays coming. Am is the most is the typical protocol. That is technology that is used here. Could be any overlay technology, but Anti han the most obvious candidate here. Because it integrates well into the application layer and every dan hers and it's... And it's the right dynamic built tunnels. So A and solves the last mile problem and and enables receivers on Uni cancelling only networks to x two be able to receive multi test content. So you know, in that way, it it addresses the all nothing problem. You now don't need every single supporting multi multitask. You can just tunnel over those parts of the network. And the parts of the network I do enjoy multi multitask. They're that that have deployed gas to enjoy the benefits of multi pass. It also addresses the the solve the chicken egg problem because with Am pretty much every internet user becomes a potential viable audience member. Again, in in the past that was It was difficult to do incremental deployment. It was kind of"
  },
  {
    "startTime": "01:22:00",
    "text": "Said the only nothing. Deployment. But but this this technique this architecture. Enables you know, incremental deployment and as I mentioned the parts of the network that are our multi multitasking enabled able enjoy the benefits and the parts that aren't, just get tunnel over. And and and most importantly, end users. Received and enjoy the service. They don't have to depend or coordinate with their last provider. Or cross their fingers and hope their last mile provider. Supports anything. So you know, it's it's really just that's plus I t. And and this is diagram kinda illustrates that. You have to the big eye Internet. And, you know, some subsets on portion of that network treaty is is the three d provider. Is multi multitasking enabled. You have a content provider. That is delivering content, which delivers it natively to native receivers who are on that and for receivers that are off met our new networks. That traffic gets sent natively with relay, which mean to relay which sends it be a and p tunnel. To the receiver. So that's that's if you look at traditional cdn without multi cast, you know, there's different Cdn models, but then, you know, one of those common one is you you have a bunch of Cdn boxes that get deployed in the network and you send content to each of them and they handle local replication. By contrast, you compare that with cdn with multi multitask, which is tree. One, we we renamed that eight that that Cd box. It's it's now an Am relay. And it can be much closer to receivers. And traffic on. Get sent to relays that have interested receivers local."
  },
  {
    "startTime": "01:24:03",
    "text": "And most importantly, the real value here is that Cdn box. Is no longer, you know, some x eighty six rack of servers that needs to be powered rack stacked and plugged into revenue generating ports. On routers. If the infrastructure and say the routers support am natively. Essentially you've got a cdn on a chip. You can deploy a a network a network provider. Can provide Cdn services at essentially zero Capex. It's it's it's just a, you know, a couple lines of config to enable. And you've got a a Cdn on a chip And and and it it costs nothing to offer a service. You can even argue maybe zero Op too because it really doesn't you don't have to take up an additional power or space. So that's the benefit of service providers. You get more efficient network utilization. And it's not just about scaling for, you know, existing content. It it enables new content that perhaps isn't possible. You know, that the Internet has got along just fine thus far with brute force unit ask, but the question is how far can improve Towards munich cas? This fall we saw you know, thursday Night and I nfl football with you know, the first the first week had I believe it's the team over the thirteen million simultaneous yours. What happens when that's they're all four k or what happens if you want to do in, you know, an a live streaming ar. With, you know, a one gig stream, for example. To hundreds of thousands of yours. Millions of simultaneous yours. Is the Internet up for that. You know, at at some point does brute force unit asked."
  },
  {
    "startTime": "01:26:00",
    "text": "Run out of steam and you have to do something else. The other benefit is it allows service providers to offer replication as a service kind of a new service and that, you know, potentially zero additional cost deliver this if there existing infrastructure already supports A. It's it's also an open standard based architecture. Using widely understood and available protocols as opposed to most traditional Cd are you know, proprietary and not. And it also is far less coordination between the contact provider and the Cdn. You don't have to worry about storage. Data storage and protection, key manager. Essentially, a tree d n is, you know, a provider that is delivering three services just pushing packets. And all of that stuff that transport stuff. It's handled by the endpoints the source in the and receive it. It's also with democrat monetizing and decentralized technology. You know, is it healthy? For the Internet in society that only a handful of companies kind of control nearly all contribution. Treating and kind of addresses that. So I focused on live streaming and, you know, video that's really the most exciting and sexy use cases. But it's really about any any multi submission content. To be, you know, but the least sexy, but probably more tactically viable use cases, large file uploads sorry. Large file downloads I almost upgrade stuff like that. And that is That's something the Kills networks today. So kinda summarize were we may be at a point where you know, supply and demand curves across, you know, demand meaning. The demand for network resources because of live streaming. You know, up until now, maybe we haven't needed multi multitask."
  },
  {
    "startTime": "01:28:00",
    "text": "Know, audience sizes live body and sizes one big enough. Rates went larger. But now they're we're beginning to see them, you know, tens of millions of simultaneous viewers of stuff at really high rates. So the demand is there. And the supply you know, previously, we had a alphabet that multi routing protocols and, you know, that that kind of blew, you know, for for people who aren't in this room. You know, they they found it to be way too difficult to manage. Or care about. But now, you know, with Asm and Ss, all the other stuff. Isn't necessary anymore. So you know, that's what treaty is designed and optimize to deliver. So the feedback from Mobs at in on on on Monday was, you know, they gave some suggestions the biggest questions that came up were mostly transport related issues. That have to do. They rarely aren't multi cast issues they're really Tcp versus Udp issues. There are a lot of things that Cdn enjoy that come from Tcp things like you know, packet loss and resiliency and you know, handling loss and reliability. Visibility of packet loss. Encryption how how is encryption handled in it in a multi cast environment. It's been done. I think it's far less understood. Authorization and billing, how how how exactly does the billing work? Or or how could it work It's certainly possible, It's a slightly different build billing model, but it's it's it's something to call out And things like Ab r, you know, this is something that comes naturally with an it's you know, a vital service in Cdn."
  },
  {
    "startTime": "01:30:04",
    "text": "How to do this with multi multitask, You know, the short answer is, but I'll just have different groups. With different bit rates. And the question of, you know, multi multitask over quick. You know, this is something that there's there was a draft there there is a draft out on this. And it's probably really worth, you know, pushing that driving that because that can address a lot of these things. So part of the challenge for us is to determine the scope, what is and scope what is out of scope? And, you know, what we're the thoughts are for most of these there's it's... The the draft is kind very layer to be focused. But or transport related issues. We plan to at least call them out maybe not necessarily provide solutions, but just say these are the gaps are the things that be aware of and made a call for additional. Work But the part for inbound d, the reason why we're speaking about this here is that like I said, ops would love additional review. From the multi gas experts. So Please encourage folks to read and five feet back on drain. Be happy to take any questions then that it might have? Okay. Looks like there's no questions. Any other questions for items. Anybody has? About any Jeffrey. I'll only one question. About the Trillion Have you ever thought of working with what's did echo team to to try to broadcast a few small sessions like Em b session itself. Using Three d. We have spoken. I don't know. Lorenzo, are you listening? What'd you? What do you... What what do you think? But yeah. The short answer is yes. We we have communicated with"
  },
  {
    "startTime": "01:32:00",
    "text": "they have some infrastructure they they have to use multi multitasking in the past. They actually spoke inbound d couple inbound... Couple meetings back. They would love to leverage multi multitask technology and their deployment have some challenges as I recall. With with the the cloud providers that they use don't support multi multitask. But... But, yes, we would love to. And and thanks for reminding me. I'll I'll I'll ping the team again. Well, I guess if we cannot get it working here, it's it's not going happen on elsewhere. So maybe start here isn't. Maybe three recap as well. Our hope is to start with Nfl football or or or something even bigger than the It this. But but, yes, Would be a great place to talk through this technology. Any other questions on Treaty d n or anything related to M bundy. Alright and Thank you. Everybody and we'll we'll we'll closed the meeting and We'll see you next time. And thank you S, and thank you Nate. For make for taking notes. State standing."
  }
]
