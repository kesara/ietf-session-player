[
  {
    "startTime": "00:00:06",
    "text": "yep sounds good morning right foreign"
  },
  {
    "startTime": "00:02:11",
    "text": "thank you all for joining good morning you still sound tired right oh sad Roy I'm not overly tired Hank you are connected already yeah I was checking my my audio now it's working I think uh is this working yeah I can hear you excellent okay perfect um yeah I think we should get started uh I would take some notes as well as anyone else has a chance to take some notes that would obviously be fantastic um but I will try to do my best so for today's meeting we want to talk about a few things um first of all we had a little bit of a break uh to find out what the meeting slot should be and we ended up with the meetings that we had before um so a little bit of detour but um here we are the topics uh as John sent around already in the email to the list uh we wanted to talk a little bit about this topic uh and specifically following up on the discussions we had a few months ago on the mailing list about um bits in general which we unfortunately didn't conclude I re-read the mailing this discussion and and there were a bunch of good comments but uh no real conclusion"
  },
  {
    "startTime": "00:04:01",
    "text": "um so we we need to make a step uh forward on this we also want to talk about the hackathon um as a preparation for the next IDF meeting to work on some like we did at the last hackathon work on running code and to move that forward and then um we also want to create an agenda item for the next meeting for the next week's call so I can also make the announcement and update the meeting invite um I I think uh and we can discuss that later I think registration policy would be a good topic to make some progress on there as well okay um any other topics you guys want to discuss Ray obviously say that um since it's been a long time I think it would be good and I think there's been some progress made in the architecture uh or whatever the uh editor's meeting regarding the um uh I just forgot what I was gonna say oh from the hackathon uh the the things that I thought were important there were the fact that if we're going to have a receipt or some way for the for the public or you know the user groups to check on the Integrity of the of the log the append Only log um then there needs to be some additional information additional information that that varies based on architectural law and that we want it to be variable so that was one of the seems like loose items from that came out of the hackathon I think there was one other"
  },
  {
    "startTime": "00:06:01",
    "text": "one um but I was I was super impressed I think everybody was with uh I want to participate in those those look like the best part of the me of the ietf meeting so maybe I'll try to do that more next time um thanks um yeah um John do you want to say a few words about the hackathon topic because you have been presenting the status last time yep uh yeah I can do that so um yeah I'm sure some folks didn't see it there's um a link I can throw into chat probably um when I'm not talking um which is about a 10 minute hackathon readout but the the the basic thing that we did was um Mike Rickert uh and a few other folks at Microsoft were working on a an open source um uh an open source kind of skit emulator as they called it which is a client uh behaving to the best of our knowledge against the draft rest API and a server that just takes science statements and um sticks them in a ledger gives you a cozy receipt back and then you can verify that on on the other end so that was all sort of pre-work um ahead of the hackathon then at the hackathon itself um we showed a couple of interoperable implementations of that so um Ori and transmute have a an encoding and decoding tool that's able to take uh sign statements uh cozy sign one statements uh throw them in make a receipt and then you know check that all of that all that works and that was interoperable with the open source uh sort of test client and what I did was"
  },
  {
    "startTime": "00:08:00",
    "text": "slightly different I gave the drafts back and a link to the go cozy library on GitHub and told a couple of my engineering team to give it a go um so not only to implement the uh the simple uh interoperable receipts format but also to see how good the quality of the spec is um whether people could actually follow it who aren't really involved so although they're in my company these two particular folks have never touched skit or attended one of these meetings or anything like that um and happily they were also able to do that so um one really important thing that we proved which I think has been a question over time was that the minimal cozy receipt format which is essentially an enumeration and a Merkel tree proof a packed Merkel tree proof that that actually works three different independent implementers all did it and we all have cryptographically verifiable open source implementations of skit receipts in that um uh format that's that's prescribed in the current draft architecture so yeah we actually had an end-to-end implementation uh with with my live service and with um transmute and and Microsoft also taking a Json structure calling it a claim signing it submitting it to a service over the standard API and getting back a fully offline independently verifiable receipt in the Cozy format so it was pretty pretty decent really and it didn't didn't take terribly long uh which is which is great so I'm going to stop there because there's a person in the queue that doesn't answer Ray's very specific question about verifying The Ledger but we can come to that in a second uh Roy thanks John um there were some other uh reviews that we do the hackathon through the the architectures document and smoking questions that we still have opinion"
  },
  {
    "startTime": "00:10:01",
    "text": "issues that we have to go through um there was also the spin-off working to the Cozy group for trying to get Merkel proof receipt approved the other comment of uh people realize is due to reductions in some of the stuff Microsoft was doing uh the team that was working on the open source emulator was let go so I'm trying to re-shuffle that and adapt with all the other tasks that were also impacted across the company and picked that up we're a little bit quiet in the Microsoft side but we're still actively working through all the other issues we have at this point the John did a good job of enumerating how interop worked we're still trying to figure out some of the the future proofing that we needed to do around How We Do Federation and how do we deal with some of the the bigger aspects of it and I still think we're working through those there's open questions I to raise question I always thought at some point we may need an out for the various implementations to do a very deep audit of ledgers and I'm willing to be proven wrong on that conversation you've been working on is that public um has that been sort of published despite all the developments uh in Microsoft so the answer that um they're in a completely different group than I am and then people around the company so no I have not seen what they've done I have to go find that code from shiv and others and see if I can pull it into another group or take ownership of the repo so I can't comment on this point okay working progress okay John I think he wants to say something uh yeah so"
  },
  {
    "startTime": "00:12:01",
    "text": "um the let me put that link in as well so that um at least the code up to the point of the hackathon plus some um some work that's been going on and a branch um is is open source and is available I'm an admin um a number of folks uh in the working group or admins on that um uh that repo and I mean frankly everybody's everybody's welcome obviously so let me stick that in the I'll stick it on the end there there you go um my stuff isn't pushed it's on a branch so it is public and readable but it's out on a branch um only because it refers to a commercial product um there's there's no interference with the open source code but we weren't quite sure whether we wanted to push that or when we would want to push that before there's a second alternative but anyone who wants to see it working or whatever I'm happy to I'm having to go with the will of the group uh how quickly we do that um so to the question very interesting question about how deep of an audit we need to do um with with ledgers I think that's a great question because the more we prescribe that the more we will restrict innovation in how things are actually protected so you know transmute and archivists both use Merkle trees I'm not quite sure what transmute uses I just use the ethereum um and the auditability of all of these things is relatively straightforward because it follows the auditability of hundreds of other um sort of blockchain type networks we use completely standard code we use Quorum we use consensus tools and we use regular Merkle trees and regular confidential transaction math for doing"
  },
  {
    "startTime": "00:14:00",
    "text": "the the key distribution of federation so it's highly auditable and verifiable given just a few routes of trust plus whatever you know admin keys and passwords and whatever you need to look at but that will always be there um so if we want to just say that something based on a Merkle tree is is what we mean um then actually it's relatively straightforward there are very good commercial companies out there who are able to do those kinds of audits and to prove whether or not you have genuine decentralization all that kind of thing um with my chair hat off I would say that's great because that suits me in my commercial um capacity because that's the product I've got um with a sort of Standards development hat on or my chair hat on I would suggest it might stifle Innovation somewhat because I can see quite a lot of circumstances where that complete sort of network based or fully decentralized or consensus-based thing isn't necessarily the best choice and we could have a different kind of append only Ledger enforced by different maths or different code um but obviously that would make it much harder for us to prescribe other than thou shalt go through some sort of audit and make it very hard for us to prescribe the technical points of that audit so I don't know if you had actual thoughts rayon what you would want to see or whether it was just a kind of General good practice question uh no I I think I'm kind of with you on that I would not want to get too balled up in in that um because I do agree that that there are these these um already existing systems that can provide that that you know that functionality and and so then then either because I was kind of reflecting on the thing that happened with the the time the time stamps uh"
  },
  {
    "startTime": "00:16:03",
    "text": "where yeah they can give you a time stamp but you kind of don't know if you can trust it uh and then to figure out if you can trust it maybe a lot uh nearly impossible and so um if it is based on an existing you know a service like qldb or a miracle tree that is you know well defined um then uh then maybe we can get out of really exposing too much there and just say uh it has to be done or you know have some kind of principles for how the the skit Ledger or audit log you know whatever the thing is will be the registry will be audited by someone else because I don't think most people that using this want anything to do with an audit they just want to be able to trust that the audit is being done and and so so I'm with you I won't talk anymore right now but I noticed and I mentioned here I thought Ori uh had something that was pretty cool of paper that was written on on that I don't know if that is applicable maybe or he wants to say something about it yeah I wonder whether this whole um audit topic is something that can be dealt with let's say in a paragraph in the in the architecture document but is otherwise beyond the scope of the group because in general for IDF groups I would I would argue um it's of course important in sort of for the deployment and so on and so on but I don't think we need to worry too much about it like a person if we can do the basic"
  },
  {
    "startTime": "00:18:01",
    "text": "audit you know not a deep of it and we can get to graduate levels log for that we can make consistent that's fine but I I tend to agree with John you know the issues of what are you doing 15 years from now if the thing has been um put on tape and into stone in Iron Mountain those things are not going to be always available online so we need kind of this what are we going to do sort of conversations and I I agree with John that getting too deep will kind of staple Innovation you know what the right new shiny product that might be around the corner might be yeah John go ahead Yeah by way of um just making sure we actually get our our outcomes and things um maybe this is another candidate for one of the um priority work items because we we did promise some months ago now to get the security Target done and a good way of dealing with this might be to add operational or key integrity requirements to the security Target and then the audit question simply becomes all of these things are adhered to so yeah no no single human shall have access to the root signing key of a timestamp server um it's pretty reasonable um so maybe we could add potentially add some some work item time to spend more time on the security Target um yeah uh I I think it's going to be important to do uh it's going to be more complex than"
  },
  {
    "startTime": "00:20:00",
    "text": "that uh more having just one person or like saying more than one person isn't enough I'll tell you right now but but I think have having a way to to say okay for this maybe we can profile it later I don't want to um I brought this up only because I thought it was something that did need to be done I don't know if we need to do it right now there's a lot of things that seem like um they could be more easily dealt with in this this is pesky issue and um and so I'm certainly think we should acknowledge that it exists and then um work on it like you say with a paragraph or something later thank you okay um to search it back to the meeting after the discussion we had just earlier about the hackathon I think um for us uh it would be good to know um about who is interested to do a little bit of uh preparation work for the hackathon like I know it's there's still some time um to do that work but I think it would be worthwhile to have a separate conversation about what we could focus on the hackathon who is writing what code so we can actually show something afterwards they are you are you volunteering to join that because you are raising your hand right now yeah yeah hello Hamas hello everyone yes uh oh yeah would like to uh be a consumer side tester so we'd like we'd be interested in writing whatever software's needed to query uh you know transparency service so that's the that's the part we have the most interest in thanks okay and Ray already mentioned earlier that he would be interested in I assume John um you I can definitely put your name"
  },
  {
    "startTime": "00:22:00",
    "text": "down yeah I'll be able to put a couple of people on it yeah I definitely want to do that to demonstrate how it can be used in this use case cool um what about the others hang can I see Ori and Roy I um I'll let you think about it but um hopefully hopefully you you joined that development as well um in the chat right it's yes or myself will be there could okay and you you will be uh most interested in the sort of like the lecture type of side of things or more on the on receipts or or apis or what I had to figure out where we're short and I'll try and get other people to fill in but I think the ebi stuff and uh the rest of it is something we have to get further along okay but I I will um write down your name so that's good I think you just jumped into the queue yeah because too many view buttons I wasn't you think here but on my headphone I forgot that so um um yeah so interesting topics to work on is um how do you feel coming over and over this again we have to consolidate uh and this isn't this is a long term work thing but it has to be done the the um policism Force for an issue to write a uh a signed statement to the transparency server so it becomes a"
  },
  {
    "startTime": "00:24:01",
    "text": "transparent statement um that thing has to be um gate there's a Bill Gates keeper function here and we're calling this gatekeeper function and that's after discussions that's a great name a registration policy and I think that really ripples through a lot of other work because um ideally uh such a registration policy would allow for a marshalling and encoding and in sibo that would be nice so that that kicked off uh uh other things that we are trying to figure out right now uh because we will definitely not invent a totally new policy language that doesn't make sense but there are candidates out there that are prominent which everybody can agree upon and uh they're using Json and that is very close to uh uh using CDA to sibo in the end and and let's find out that how much we can done until the next episode meeting on that front um because why is that so important um because these can change and the receipts probably and that's a that's a point of discussion I think we have to consolidate it at 7.17 is that the receipt will will have to uh present some indication which policy was in place when uh the science thing was accepted because if for a minute a registration policy changed and was accepting some nonsense uh so to speak this becomes garbage and garbage out and therefore uh will lose the property of judgments obviously so you have to find out uh for deep audit and I think that's one of the things you want to deep audit at some time uh has uh how what was the uh threshold for policy supplied for checking them was it in scope two bears in the weasel is in or was it like a"
  },
  {
    "startTime": "00:26:01",
    "text": "hard atomistic thing um that was was making it basically on a fundamental level incapable obviously then and I think that's a very important thing for the uh one of the teas and sketch and and so I assume that all this uh discussion we're doing right now on on the howl encoding and and and and not really but weird for policy language uh will will end up in a representation in the receipt but that is a long road there's a lot of ifs here um we will try to uh check as many boxes as possible until the next idea of meeting to to have some better understanding uh then I think that's an important uh uh item we have to deal with on a daily basis basically under that uh yeah I I added some nodes to the meeting minutes please check what I uh like obviously very brief uh captures what you had in mind but that's already pretty good and I hope the others uh who didn't say anything um hours or thinking about attending the hackathon and contributing something to their work I assume Ori is going to uh work on the receipts um but I don't think he's listening right now good okay um John is there something else to add to that hackathon I think that's pretty good already I will send out an email to the list to see whether there's someone else who hasn't had a chance today to join the meeting um and would otherwise start to plan for the hackathon itself for the next one great so I think just just two short things so yeah that's enough I do want to Echo the point that that Roy sort of almost made um which is that there was a lot of other works it wasn't just the code ready there was a lot of hacks backing you know spec hacking and that's that's important too so we we might expect"
  },
  {
    "startTime": "00:28:00",
    "text": "people to show up at the hackathon simply to do dedicated editing and and complicated spec work and that's that's all great um the other thing is just to make an appeal I suppose we have landed by default on sort of registration policies being the thing we prove we we did sort of think as as chairs as we look through all of the activity registration policy seems to be the thing that is most wanted and most valuable to work towards at 117. I just want to put out an explicit appeal to ask if anybody thinks that isn't the the sort of area we should be targeting for 117 or if there's a different candidate and hearing hearing none let's let's call it done so yeah that's that's great Hannah so if you can just send out that mail to the list that'll be cool yeah okay um that was the hackathon um now uh jumping to the did topic and and maybe I I summarize how I understood um sort of where we are today so we had um an email discussion I will look up the link uh it was a good thread various people provided feedback and my impression was that um there were two did methods and I will also post a link into the chat uh box namely that did key message and they did webmaster and both of those uh methods uh are not actually finalized yet so they are working progress specifications my understanding is that the key method is um less mature than the web method but both of them were mentioned I read through both of them uh and the the web method uh roughly works as follows um so the idea is that you have"
  },
  {
    "startTime": "00:30:01",
    "text": "um and which includes uh Keys public Keys it's kind of um almost like you can almost think of it as a certificate encoded in Json uh maybe that maybe it doesn't do it justice but uh that's sort of the shorthand version and there is um there is a URL uh to identify that uh specific a specific bit document and in the case of the did web method it's um there's always a URI scheme which is um and Then followed by uh in the simplest Case by domain name where the the document is actually stored and so the idea is then and then there's there are variations with paths and so on uh will ignore those but the idea is that you you as a developer um you have a domain name and you store your edit document in a specific place on that domain and if you send someone or someone has access to your did web URL they can basically find you uh the key in that uh or the whole did document in the corresponding key and applied to the skid case that would mean that this developer then has obviously simple session somehow of the private key and stores it somewhere hopefully secure on his development machine and then um he uses that to First gather the statements and then uh to sign the statements uh using that private key and then send that sign statement uh to the append only a lecture which then uh looks at this and retrieves the the did document verifies uh also the uh the signature and then there's all sorts of other"
  },
  {
    "startTime": "00:32:00",
    "text": "processing and then finally if everything is successful it turns the receipt that we talked about before that's kind of the the way how I understood it and uh but of course none of this is described anywhere um and so I'm wondering whether I understood it correctly uh and what Echo specifically was asking for in that email discussion was to um ideally select a small number or even one of those did methods because there are many of them registered in to describe uh it as applied to skit and to elaborate on the security properties of that scheme and uh because the other method which I didn't talk about the Deep key method is uh very different um and then there are many others so and I think that's definitely something we need to do and if that would also be in my opinion uh a good Target for a hackathon activity um to get that dip handling in in quotes identity management cupboard because that was also a significant difference uh to the six store project um which used open ID connect and and ephemeral uh public private keys as you heard uh I think it was in January when we had that presentation so did did any of that what I said make sense uh yeah honest in fact what what I'd like to suggest is that we start with a pretty simple use case for the hackathon um and and what I'm I'd like to put forward a proposal uh that we to demonstrate how skit can be used to supply consumers with software trust scores as one simple example of how it"
  },
  {
    "startTime": "00:34:02",
    "text": "could be used and so I'd like to propose that we go ahead and say that one use case to consider for the hackathon is the distribution of software trust course thank you okay that's fine um um could any any other thoughts on this one or did anyone look at other methods which went uh mentioned in a discussions and probably they are more favorable for use with kit than uh then they did weapon they did key method I guess just a technical note um that we did use oidc um for all of the hackathon targets and it works really nicely so um there's a there is a question over the kind of application Level implementation versus the core route standard elements of persistent data so I think did web did key are perfectly fine to be proxied through and use oidc but just worth bearing in mind could you elaborate a little bit on that but you um like uh of course in the the web case um there is the assumption that somehow the developer is able to load digit document securely onto his web page uh it's obviously something that is kind of out of scope um or where did you is that the place where you used automatic connect or or somewhere totally different um it was for the pass-through authentication for the rest API so this was all headless"
  },
  {
    "startTime": "00:36:01",
    "text": "transiting uh a common yeah the way the way um the emulator Works which is quite neat really uh is that the client is a single client that absolutely anybody can use no matter what service is they are um interacting with and then you just specify as a configuration which service you want any particular request to go to so there's only one piece of client code and one client authentication to do um and then that gets sent through to a separate back end which could be archivist it could be an emulator it could be um you know Carfax probably for for dick or anybody else um so IDC is just a really nice way of collecting up all of these different application Level uh claims to reuse an unhealthful word uh and Transit those through multiple authentication contexts and it works really nicely with the standard web Frameworks and request tool belt and stuff like that so um for the rest API and for the standard client um it was a really nice way of getting the auth data through but of course auth and ID are not exactly the same thing so the identity primitive itself and things like proof of possession of a key those are separate to creating an oidc context in the first place so I don't I don't see any problem as such it's just a practical thing to think about how we would um I I guess a warning not to pollute what is identity and what is authorization because they're because they're different please dick do you want to you did you join the queue uh yeah I'm I'm trying to get back in thank you harness so one thing I I would like to see if we can do it is set up a test bed page somewhere on you know data tracker or wherever we we want to"
  },
  {
    "startTime": "00:38:00",
    "text": "that has all the details about which services are available documentation on how to interface with those services and if you do have any code like what John was describing like a a client code that calls the apis having that available through that one testbed type page I think would be very beneficial thank you I think we we can actually put links to implementations uh to the um sort of working group page there's a separate um sort of with each specification there's a separate sort of item related implementations I think it's called uh where we could include uh pointers to those to those implementations so uh that may actually be quite useful okay I know it would be for us because we would be looking to try all the various services that are out there to confirm that the interoperability is you know consistent across the ones that we'd be communicating with and would like if if there is available tooling like what John's describing would certainly like to be able to use that and test that as well thanks okay um yeah I will um I guess John you had a couple of links in your presentation I need to look it up and add that to the for example to the architect architecture specification as these related implementations I think that could help but um question to you John um did you document uh the use of automatic connect for these uh for these restful apis somewhere because I think that's something that is um missing uh in the in the architecture specification maybe maybe maybe it could be described right uh it could it was actually Mike um Mike Rickert who who put it in"
  },
  {
    "startTime": "00:40:00",
    "text": "um so I guess I didn't put it in my work product um it is part of the readout so if we take the hackathon slides uh which is just part of the standard deck so and you know everybody here has access to the 116 um materials and the the ignore the chair materials that's just the standard you know fire escape stuff but the actual um presentation materials includes uh the kind of the end-to-end flow and oidc is in there and it is documented very briefly in in one of Mike's pull request is probably not as clear as it might be so um yeah let's take a look I mean it would maybe dick you and I could have a a chat offline uh and see how easy it is for you to pick up the stuff that we've done already um and then anything that's not clear that clearly becomes a candidate for being better documented on the uh in the readme rather than just in PRS yeah that's a great idea John I'm happy to work with you on that we've worked with archivists in the past and we've successfully tested with you guys so we sort of have a sense for what you're doing over there but anything you can put specifically for this purpose we're doing some real skit-like API interaction that would be fantastic but we'll work yeah so we've got that brilliant brilliant so we've got the the open source thing I put those links in the hedge hedge doc notes already for this meeting um so yeah we'll work on the all the open source stuff the skit Community stuff and um yeah good I I I don't think it should be too hard John I looked at this slide you didn't include include links uh into the slides but uh so like I think maybe we need to uh uh also on the description that Mike has been working on um uh we need to look this up I think this would be good material for a next um draft iteration architecture"
  },
  {
    "startTime": "00:42:02",
    "text": "cool okay yeah that's that's not too much uh Ori has uh posted into the chat we talked about the resolution and did it resolution was this was something I didn't uh I didn't look at um so so this may be yeah thanks for sharing uh Ori do you are you available to Briefly summarize uh that resolution mechanism yeah so um many folks were uh frustrated with what the did working group chose to standardize and chose not to standardize and one of the sort of contentious points was did resolution which is the process that converts a dead URL into a representation of a document or a particular key within a did document um and so this community uh group specification here describes did resolution from the perspective of an HTTP web server so this is a middleware component that you can take a dependency on if you need to resolve you know any did method regardless of what kind of method it is but then you need a trusted resolver because obviously you're returning key material and it's important that you trust the thing that you're getting public Keys from um so that's kind of like the basics of how did resolution works you take a data URL in you get back at the document which contains keys and various relationships for us the relationships we would care about are the authentication relationship and the assertion method relationship and then inside of those relationships are specific key serializations usually in jwk or multi-base format and so if you want to resolve a particular key used to sign a Json web token or a seaboor you know cozy sign one you need to look inside at the did document in"
  },
  {
    "startTime": "00:44:01",
    "text": "the particular relationship you're expecting find the public key and then use that to verify the signature could um but uh thanks um when do you expect the the specifications that did methods to be uh finalized or is there is this or is it a working sort of a living document um it's not a living document the working group's currently not active um there's a chartering process for the next Charter version of the working group uh that chartering process is being held up because of w3c process and politics and most of the folks working on dids also work on verifiable credentials and so that is that working group's currently active and so a lot of their time is being spent on deliverables for the verifiable credentials working group currently I think the next Charter for the did working group will allow either uh the concrete specification of what did resolution means or and or concrete specification of a single specific did method like a standard one um it's just incredibly politically contentious that second part because obviously standardizing particular method raises the Specter of you know particular vendor Technologies or blockchain or you know these other things and so there's a lot of uh frustration over like many people don't want the w3c to standardize a particular did method they want they'll be 3C to Define resolution for all bid methods um and other people want it to just Define did web for example and and not Define resolution for all did methods so that's kind of what's going on right now I think the expected timeline is like years for getting uh a did method to the through the standardization process at"
  },
  {
    "startTime": "00:46:01",
    "text": "w3c it could be done at ietf by the way like you you could create a did method and standardize it iatf um but it's still you know that's a lot of work that has to be done yeah yeah just only bore it a little bit because um because there's obviously a dependency uh and having at least one method described very clearly uh would provide a benefit to developers um and ideally it would be just finalized already and and would not have to worry about it because um they did a key method which I didn't talk about that is so different uh to the web method um obviously because otherwise why would you have to um but it it leaves out a lot of the sort of challenging aspects like it just has the if I understand it correctly the URL uh has uh just a key uh India so that and the public key in a in a specific encoding um so it's uh it's obviously different okay okay uh yeah thanks thanks uh URI for it did jwk which I didn't look at um so it wasn't that wasn't um raised any discussions but I I definitely think that eckers right in the sense that we need to at least have one method to clearly explained um and on and not the method to explain but how it relates and is used in skipped so that would that would be important"
  },
  {
    "startTime": "00:48:01",
    "text": "okay good Ray uh what is your what is your question how does this square with key trends what do you mean I think that it sounds similar to the um it seems similar to the initiatives that were very interesting at the last ietf meeting regarding how to to make you know your public Keys available um I don't know if that was a good match First skit the dead stuff and I'm gonna have to read this some more and study it uh I'm trying to get some time to to Really spend but the uh it seems like it's okay with skit for us to have a little bit less or more constrained um access to the keys but maybe not um it seems like that that whole thing about whether you you were talking about putting the the public key in a URL I hadn't seen that one um but the the concept of how do you how do you provide the public Keys Etc was was the subject of all those discussions that were pretty interesting [Music] um okay so so I anyway it's it it's in the same realm of of I think but uh I I don't want to belabor it I think that I'm just going to uh I see arya's answer just a little bit um thank you and I will I will study it some more but we do need we do need that you know we need a way to to provide public keys in my situation I'm also looking at how do I provide the public keys of devices um which are which have a private key"
  },
  {
    "startTime": "00:50:00",
    "text": "that's you know nested inside and that no one can get to and I need to have those all those public Keys um posted somehow you know and and so it doesn't need to be too fancy but just I think if we could just say okay here's how you do it you you post them like this to secure it like this and and it's done um but I'm probably smoothing over a lot of details okay enough for me thanks yeah I I unfortunately cannot tell you and how it relates to key trans because I've um I wasn't at that meeting uh so we'll um have to reach out to the GS to see what the next steps they are um Hank you raised your hand yeah um I was coming back to the uh horrible words that some sdos slower than the ITF um sorry and so uh so no um yeah we can do our own did Flavor um so what I would uh so you know my naive and and hopeful nature and they love in India so much and so um some of my my proposal would be uh that we uh mimic the resolution of uh did Uris for today uh as as that described by w3c we implement the naive version of each Sea World phase what works make our own addendums to them find out when w3z moves again if they move into a different directive uh do it here and create another flavor um um because we can't install on on so we're not doing the ideas because the idea is so cool uh we are doing deities because we need flexibility and identity document agility"
  },
  {
    "startTime": "00:52:00",
    "text": "and uh we can't be stuck into pkix because that won't work for long and so um so I think that the ID route is an escape mechanism to uh allow to move from uh various continues to others create conduits between them and and allow for different identity document formats to uh and to operate and and if that can't be achieved in the near-term goal by a w3c stable dead web well then we have to act but but we have to also Implement so I think the hackathon and the implementations and the the text we write will show what's working and what's not working if we are diverging from essential decisions from the dwcc at some point we have to Splinter off I would have been assuming um so that's my point of view so we we shouldn't shouldn't be deterred by the decipheness and the particularness of the Ws we see we should take this as an opportunity to test it thoroughly and have our own opinion yeah thanks for the positive words Hank yeah and take thank you harness so uh I'm not familiar with jid uh so maybe my question is really sort of irrelevant but here it is uh we we use standard pki type Technologies in libraries to do things like certificate you know verification and other certificate processing will we will we be able to use the existing certificate processing tools that we use today as part of this or did something completely different uh I think oh okay I'm not going to jump in looks like you might have an answer yeah sounds like"
  },
  {
    "startTime": "00:54:02",
    "text": "yeah so I mean if you have a key that is a certificate and you're dereferencing it from a did URL then you can think of certificates as kind of fitting inside of deads um but I I think from an i identity perspective like they in some way solve the same problems as as honest mentioned so you know Deads were designed to hopefully be backwards compatible with certificates although there was people who tried really hard to make that not possible um so they can be used together but I think if you're entering a world where you're specifying both interfaces that's gonna eventually become sort of problematic for implementers because they're going to be carrying that if statement everywhere around in their code that's it okay so it sounds like there you pick one or the other is that what I'm hearing no you you could you could pick dids and then you could use certificates inside of it or you can pick certificates and dids and have to handle the switch statement everywhere I see okay so so can we can we agree on the on the at least a hackathon to say you know there's going to be did with a payload containing certificates in the standard der one well we we can of course uh and that's also I think what Ecker asks us um to write about this like to have that written down and analyzed and to see what the results are the hackathon would give us the the extra bonus of um seeing how the experience looks like uh after doing that so so it sounds like a very useful a useful exercise for us yeah so that'll be a decision point that we have to include in the hackathon"
  },
  {
    "startTime": "00:56:01",
    "text": "design okay I get it thank you yeah just just quickly adding to Dick's uh proposal that this is this is a the fallback use case so if you can't do the the the connection between the all Continuum of pkx and new consumer of the flexibility of this resolution well what's the point right so uh so I think yeah that should be a use case we uh that is a checkbox for the hackathon yeah and Hank what what I suggested earlier just one idea of course is that the access material actually be something really simple like as simple as a trust score you know and then just to keep things you think was possible yes already a question for you uh in the in the dead case um is there a way to sort of instead of using uh um a key structure cozy key structure in white not the courtyard a Json web key structure with the let's say for elliptic curve cryptography X Y coordinates um instead use use an X5 for nine certificate like let's say subject public keying for something like that yeah so the the did spec describes these things as verification material and it supports basically two formats that are acknowledged in a specification and one is public key multi-base which uses multi-base encoding which is not standard but popular in the blockchain community and the other format is public key jwk which supports uh the x5u and"
  },
  {
    "startTime": "00:58:00",
    "text": "x5c parameters that are used for working with certificates but you could also do you know public key pem or certificate you can invent your own you know object that's going to be included in the verification method that's going to be used for verification um and then you can include that object in the did document but obviously not all did methods will support your new object representation for verification and I mean that might not be a huge issue if you're also making a did method at the same time but if you're trying to make this work with every did method out there which I don't think anybody should try and ever do um then you're better off sticking to jwk in my opinion and with that um thanks thanks um would they actually be a sort of a cozy based variant of this as well because for um in other places we talked about like using using a cozy cbos slash cozy face uh structure yeah rather than a json-based version is that I would not encourage anyone to use cozy-based structures for key representations currently it's very hard to get like Library support that understands cozy keys and there's tremendous amounts of contention over cozy key formats on the Cozy working group list I think jwk is a much better portable key format for this particular layer however having said all of that there was at one point a did document format that was Seaboard based and there was an attempt to support cozy and it received so little contribution and it did work in group that it got moved to a note that I can share the note with you all what but it doesn't necessarily need to be but just a question because uh if we if you sent the that web URL then"
  },
  {
    "startTime": "01:00:03",
    "text": "obviously that's just a domain name plus a bath element and then all the other stuff would happen in the back end and then you would be you would be fine using json-based things in the in the back end anyway right foreign that's a yes I think uh um I see that we already exceeded our time um so I think in in terms of the debt uh conversation I think what would be good is to get a few interested uh parties together um and write something up so that we maybe maybe a patreon so uh which we could then stick into the architecture document uh providing readers a little bit more background into how we plan to use these um different Technologies in combinations is is would anyone be interested in that um sort of call it that a sign team or whatever you like uh but just a few people who uh knowledgeable in that area and interested to write something up so that we can push the ball forward foreign hi uh just a clarification question um so then you mentioned an architecture document so would this text go into an already existing architecture document or are you um asking about interest or volunteers for writing a new architecture document that would mostly cover did methods"
  },
  {
    "startTime": "01:02:00",
    "text": "um yeah I was thinking more um thanks thanks for the question um yeah I was thinking more about the existing architecture document because it like content-wise um I believe it uh it fits in there uh and also I don't I hope uh it's not such a long text that it actually justifies its own uh undocumented um and I I I agree with Orion tanks previously that I at this point in time I I don't think we have anywhere in our Charter an attempt to rewrite uh well produce new did method specifications or rewrite an existing one and making an IDF specification so in that sense um I think it's mostly about clarifying on how we use an existing technology in our context does that make sense that definitely answers my question and I I think it does make sense um if if that's good without thank you would you be willing to um contribute to that work without making big commitments right now um I will be inclined to say yes uh but that would this would be something that I would need to you know take back to the team and discuss a bit more good perfect uh yeah please let um John and myself know whether you have some uh spare cyclists uh obviously always appreciate it right absolutely thank you yeah and and of course to everyone else you think about it and uh because I would like to move this topic forward so we can next week uh we'll talk about the registration policy um unless there's some other suggestions and and then and I would send the mail about the hackathon topic as well anything else yeah"
  },
  {
    "startTime": "01:04:01",
    "text": "a little few minutes overtime already I've got John anything from your side yeah I've got a bug report for um for meat Echo um yeah no nothing for me thanks everybody I think this is a good a good restart so we know you know what we're targeting for next week we know what we're targeting for hackathon um I think that's a good that's a good thing so thanks everyone thanks very much yeah thanks to all and uh see you hear you next week great thank you bye"
  }
]
