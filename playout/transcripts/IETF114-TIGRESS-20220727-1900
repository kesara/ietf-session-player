[
  {
    "startTime": "00:00:04",
    "text": "but this it's the background that won't quit um and uh they I'm lady once on chair along with Patrick Jane from fastly it was remote today um and uh let's um let's flip the flip the slides and look at our agenda all right so we're gonna do the usual intro and then we're gonna let um um spend quite a bit of time this is the first working group meeting on a a an introduction um and then um we are going to talk about sort of the the proposed solutions for for solution space for the use case for the use case for the problem statements and then we're gonna see where we take it from there from here um next slide so since this is the ITF and since this is a new working group note the note well well um some of you are have probably never seen this before you may be new attendees and there there is a there's a whole lot of material behind this this summary go read that material and make sure you understand it before you contribute uh next slide ipf also as a code of conduct summarized in these four bullets um and for this meeting we also require masks at all times for meeting especially in the meeting rooms the only people who can take off their masks during meetings or the people are at the mic presenting um and remote yes very funny all right um with that um I'm going to invite"
  },
  {
    "startTime": "00:02:01",
    "text": "um or um our initial contributors to the working group to come and present sort of the problem statement that led to this work being established um this is you know what we typically do in the IHF the first working group meeting we spend a little time making sure everybody understands what we're actually going to be doing that's not what we're going to be doing for the next and subsequent working group meeting so we're going to be actually doing work anyway so I don't know which of you is going to come up and present this line so Casey all right so uh there we go [Music] I'm gonna see if we can get the magical sort of remote control thingy working here we go all right okay hi everyone thank you so much for attending this is for the Tigress working group my name is Casey and I will be presenting alongside Alex and Dimitri who are sitting right here in front um next slide so this is just a little look over our agenda for today we're going to start off by talking through our problem statement for the working group the goals vocabulary and move into some use cases requirements and what is considered out of scope for the working group and we'll pause for a q a session after that and move on to our proposed solution and then a diagram of our stateless and stateful working flow which all makes sense when we present so I just asked that you have if you have questions you wait until the Q a session at the end of each of these two sections next I just wanted to list up our authors and contributors you can see there's quite a big list that's gone into contribute to this um to note we have Matt Byington also from Apple online and Nick Shaw from alphabet that will be help dealing"
  },
  {
    "startTime": "00:04:02",
    "text": "sessions all right with that we'll get started with the problem statement so as the prevalence of digital wallets has expanded there are more and more ways for the average user to add digital credentials to their wallets users wanted to take full advantage of the convenience and security offered by these digital wallets are moving towards dishing their physical Keys entirely naturally many scenarios come up in an everyday life where you'd want to share your key with somebody else and we're looking to find a solution for that so digital wallets exist on many different device types as well as device operating systems in addition digital wallets are have expanded to allow for different types of credentials or verticals to be added for example Hotel Keys car keys and home keys each solution has its own complexities and we seek to find a standardized solution for all of these so kind of our core problem statement is that today no standardized method exists in a cross-platform cross-vertical capacity that would enable users to share their credentials foreign so we have three main goals for this working group our first goal is to minimize fiction for sharing and cross-platform and cross vertical sharing so our goal is to create a layer onto a layer on top of existing protocols like HTTP to simplify the communication between devices of different operating systems we are not trying to create a new communication protocol by any means our goal is to Define a simple set of apis that can be implemented by any party while that party is leveraging their current ecosystem and their own implementation of secure credentials foreign this will allow us to minimize friction both for a new user that's trying to"
  },
  {
    "startTime": "00:06:01",
    "text": "learn how to share as well as a new device OEM that's looking to like Implement sharing as well and being part of the network our next goal is to maintain Access Control so when a sender is sharing with their recipient that sender is actually approving that recipient for a subset of their own access so that that recipient can go talk like mint their own credential with the credential Authority if two people were to share the exact same key we wouldn't actually be able to maintain access control because we'd never know who was using a key at what time and so say I have one hotel Key and I'm sharing it with all my co-workers which is not the case we have our own rooms but um we wouldn't be able to just block one of us we'd have to block all of us or none of us so our goal here is to maintain Access Control throughout the whole sharing process including while you're in the transfer in case either party wants to back out at any moment and lastly or you have a lot of security and privacy goals um we will be talking about them later in the slide deck but we just want to make sure that all of these goals and requirements are met so that we have the safest experience for our users while also maintaining a nice user experience so I'm just going to Define some quick problem vocabulary all these are defined in our Charter I think as well as our draft just that you are aware while we move on so first we have the credential Authority so this is an entity which facilitates the trans facilitates credential information lifecycle on a device so the lifecycle might include provisioning of that credential information termination or update so you can think about if you have a hotel Key the credential Authority would be the hotel company that owns all those hotels and is saying oh I have access to XYZ room next we have credential information this is the information that's actually used"
  },
  {
    "startTime": "00:08:00",
    "text": "to transact with that data point or that access point so it says like yes you can actually open that lock next we have the provisioning information this is the data that is the data structure transferred from the sender to the recipient that comprises the data both necessary and sufficient to provision it to the receiving device next we have the sender device so this is the device that initiates the transfer of provisioning information to the receiver device and in contrary we have the receiver device which is the device receiving that provisioning information so that they can use it to register or provision that credential information with the credential Authority and lastly we have the relay server so you can think of this just as an intermediary server and for our purposes we called it the relay server but it could go by any name so with that I'll pass it on to my quarker Alex thanks Casey now we'll be looking at thanks Casey now I'll be looking at some common use cases across three distinct verticals first we'll look at car key sharing let's say Ben owns a vehicle that supports digital Keys which comply with the CCC open standard and Ben would like to let Ryan borrow his car for his weekend or let's say Sam is going out for dinner and would like to park their car with the valet at the restaurant in both of these scenarios Ben and Sam would need to share their car key with another person second we'll explore home or residential key sharing let's say Brandon owns an apartment and is having Abby visit over the weekend if you would like to give Abby access to the apartment while she is visiting or let's say Sarah has a housekeeper that comes weekly and Sarah wants to give them access to the front door and only the front door in these cases sharing a digital key would provide an easier and more secure experience than having to give someone a physical key and digital keys can be"
  },
  {
    "startTime": "00:10:00",
    "text": "revoked at any time so in the unlikely event of a personal falling out the key could be removed without having to coordinate with the receiver to get back the physical key and third hotoki sharing let's say Fred is staying at a hotel next week and the hotel supports digital access credentials and Fred added the credential to their phone his partner Daphne is joining later and Fred wants to send them the hotel Key digitally so they can access the room when they arrive or let's say Lexi is staying in a large hotel room that they are sharing with several people and Lexi wants to share the digital key to other guests so they can access the room these are just some common use cases we are working to solve with this working group but you could imagine many more use cases that will arise as digital Keys become more prevalent um and we're focusing on the digital key use cases because that was our first use case but there are tons of other use cases where credentials need to be transferred between devices securely so next we'll talk about requirements and constraints for the solution that this working group creates we expect our solution to have some general properties in order to facilitate a secure credential transfer a sender should be able to initiate the share over any communication channel for example email SMS WhatsApp Etc and a recipient should be able to view a preview of the share before accepting it the sender device and receiver device should be able to perform multiple round-trip Communications within a limited time frame after the initial share has been accepted and the receiver should be able to request additional provisioning information if needed the solution should not require that both the sender and receiver device are online at the same time and this is especially important for mobile devices using cellular data and the solution should support opaque message content based on the credential type and because the message content is opaque the solution should be able to handle arbitrary message formats including those adhering to public standards like the car connectivity Consortium"
  },
  {
    "startTime": "00:12:00",
    "text": "and proprietary or close Community formats and the sender and receiver should be able to manage the transfer process and interrupt it at any time digital car keys represent access to very expensive assets and residential Keys Grant access to where people are staying so it is crucial that bad actors are unable to obtain digital credentials while they are being transferred so sufficient security measures must be embedded in the protocol in an effort to ensure only the intended recipient is able to provision the credential and to ensure the credentials can only be provisioned once anti-replay attacks we also want to ensure the sender has the intent to transfer proof of the fact that the share initiation is attributed to a valid device and a valid user in addition to our security goals it is also crucial that a user's privacy is protected while transferring a credential so aside from Network level metadata the relay server should not learn information about the sender or receiver the relay server should not be able to create associations between different shares and they should not be able to create a social graph the relay server should not be able to see sensitive details of the share like the provisioning information and the relay server should not be able to provision the credential itself acne as an intermediary for the receiver or a person in the middle attack and this is especially important because the relay server could have thousands of mailboxes full of provisioning information and the provisioning information is necessary and sufficient to redeem a credential so a lot goes into block goes into provisioning managing and using a digital credential and this working group is only focused on the transfer of the provisioning information so most of that is going to be out of scope for us and as part of the credential transfers some key aspects of the flow are also out of scope for example defining the mechanism the receiver will use in order to provision the credential with the credential Authority is out of scope and similarly the mechanism the sender"
  },
  {
    "startTime": "00:14:01",
    "text": "device will use to get the provisioning information from the credential Authority is out of scope and the user interface that is displayed on the sender and receiver device during share initiation and share Redemption is out of scope for us and this will largely depend on the device manufacturer's interface guidelines and finally defining the format for each field within the encrypted data is out of scope for example the provisioning information message structure stored on the relay server and we hope by now we are able to provide a clear picture of the problem this working group is hoping to solve and we hope we've piqued your interest in the problem space as well before jumping into the solution we'll be happy to answer questions about the problem presented all right I see people running virtually at the mic so it's it's fine to run to the mic hi I'm I'm Jim Fenton when I look at your your problem statements and and I've I've uh skimmed your draft when I look at the problem statements I think of let's take the hotel room case if I want to have my partner let into my hotel room I would get my partner's public key tell the hotel let the person with this that proves ownership of this public key into my hotel room and uh problem solved uh similar situation for the others that you're showing so I I think if this is an authorization problem um why is that simple simpler I think solution not responsive to your requirements so our protocol is really uh more of a transfer protocol not authorization and so we could allow any sort of authorization to take place for example something like you are talking about where uh with pki could be transferred over the relay server and then back to the recipient device which is how car key sharing Works um or you know other completely"
  },
  {
    "startTime": "00:16:01",
    "text": "disconnected types of credentials like Hotel Keys which are um symmetric keys well they don't have to be but but yeah I mean I it seems like you're focused on a particular protocol rather than on the problem statement is that true that you have particular protocol that you want to fit into this requirement rather than trying to solve a particular problem because you started with a problem so yes and no um the problem here is that we're trying to cover multiple credential types right and simply speaking about hotels some of them use symmetric key some isometric key pair and the example you gave with the public key of your partner it covers like as a matter keeper right but it doesn't cover the case with the symmetric key and at the same time we specifically mentioned that we want to have granular control over the credential which means if I'm sharing the same key with my partner and the key is reboot it's a vote for both of you but the example I gave gave you that granularity as well I'll let somebody else foreign Gilmore thanks for uh for bringing this forward obviously this is something that we're all going to be dealing with as more and more things require digital authentication so I appreciate you thinking about it I wonder whether you have any perspective on the um the hotel example uh and sort of the valet or housekeeper example I think are interesting where you have different authorities that are there I can't imagine that a hotel doesn't want me to share my key with the five folks that I met at the bar last night um but at the same time if I want to give somebody access to my car so they can drive me home I don't feel like I need to share that information with the car manufacturer so the car manufacturer might disagree so I'm wondering what your perspective is on the um"
  },
  {
    "startTime": "00:18:01",
    "text": "on whether the framework that you're building will like who who controls knowledge about the different parties that are involved in your framework can you speak to that so all all of that is owned by the credential Authority at the end of the day and based on the use case the credential Authority could be uh you know the hotel chain or for car key it's your you're the credential Authority and so it's really it's out of scope for this working group what the credential Authority does we're just facilitating the transfer of the provisioning information that's used to before before we go on because there's been a little bit of confusion in the chat um about this working group this is in not in fact a working group pouring both it's a working group right so there is a charter Etc and the purpose of this presentation is to make sure that everybody understands or has a chance to catch up to and understand the problem description right so like let's let's try to zero in our comments and questions to clarifying and making sure that you have a chance to understand what's going on rather than propose alternative solutions to the same problem yeah I'm not trying to I want to be clear I'm actually asking this as a clarifying question because I want to understand what what we're thinking this scope is here perfect uh because I mean I can imagine there being car manufacturers and I won't have to I won't name them but I could imagine there being some car manufacturers who think they are the credential Authority for their cars and if I own a car I would like to think that I am the gradual Authority for my car and how how will this architecture that you're designing here uh make that ownership level clear uh and and will will it allow someone to say I would like to take ownership over this car from the from the manufacturer no so this uh great question by the way this protocol would not make any Distinction on who the credential Authority is or enforce any opinions on it um I think the entire relationship"
  },
  {
    "startTime": "00:20:01",
    "text": "between the sender and receiver device and the credential Authority we're hoping not to tackle with this working group yeah and in addition to your question just to provide additional context for those of you that don't work with digital credentials every day so those relationships between like the actual device that has a secure credential and then that credential Authority if they're not in an open standard like the car contact car connectivity Consortium the CCC then it's up to that device OEM to really communicate with that uh a credential authority to figure out what's their technology and what their what is their needs so each time you talk to them it's like it's like each each one you have to basically do your own battle make sure those privacy pieces and those ownership pieces are like maintained as much as possible um on our those things are so complicated and we definitely don't want to tackle that within this transfer but it is something we think about a lot Sam Weiler I'm concerned about that answer and the word I would have used is permissionless as the user I want to be able to do these things without seeking the permission of the relying party or the ca whether it's giving out keys to my hotel room or giving out keys to my car or and here's the question for you about how do you see this relating to Fido web authen pass Keys pick your name up them how do you see it relating um thank you for a question uh that's an awesome um remark and we specifically mentioned that we want to distinguish the credential transfer from provisioning a lot of your questions will be covered with the provisioning the relation between sander receiver and credential Authority right so that part is out of scope for us because let me say why because there are variety of different protocols some of them are open standard some of them proprietories"
  },
  {
    "startTime": "00:22:01",
    "text": "when we're referring to CCC cover connectivity Consortium part of the provisioning is covered in the standard and you can go and treat the standard they definitely will use authorization mechanisms we use them to for instance to um provide assurance that they're sure or provisioning information was negated on authentic device by a user so we use other often I think this is this isn't quite answering where I'm going in my head with a use case which is I want to give someone else access to a particular website usemyunite.com credential and United wants to stop me from doing that I want to do be able to do that without seeking their permission will this help me that's disappointing yeah so this might not be the answer you want but this cannot help you with that um and that's actually in a sense by Design we wanted this system to know nothing you know especially after the share and you'll see you saw in those uh in the Privacy requirements we wanted to make sure this system could not create that sort of like couldn't know anything about that user anything about that share or created like a share Network between everyone let me just quickly remind everybody who's at the mic that you need to get on the my queue in order to stand up okay in that case and make sure to sign up on the scan the QR code and sign up on the blue sheet as well ready hi can you hear me yeah just to finish the answer to the question I just think um basically to to do the things that you're saying I think you would actually need to go away from some of those privacy requirements and have this be a much uh much smarter system than what it really is um to like to be able to con like know to control that stuff from the sender"
  },
  {
    "startTime": "00:24:00",
    "text": "versus what it is is really just transferring that one piece of data from sender to receiver um and hopefully when we go over the solution when Dimitri presents the solution so it'll make a little bit more sense hi uh Michael B uh UK ncsc I've got a question about the architecture that relates to the relay server um specifically we're sort of implying that we definitely need it in this problem statement and discussing the goals do you think a lot of this could be accomplished without the use of the relay server in the middle okay fair enough okay yes uh potentially you could use like different solutions but this one is specific for this uh narrowly defined problem and we implemented certain mechanisms to address the goals and the requirements out to these different problem uh you could use some maybe S3 buckets with some extra mechanisms over the problem is solvable in multiple ways and our proposal is just one of the way to solve it okay um thanks I was just just thinking that you've got already got a secure channel from the sender to the recipient so there's an awful lot you could put in that but we don't actually need it then well we mentioned WhatsApp the emails whatever those are off those are asynchronous so anyway thanks thank you hi Erica squirrel Mozilla um so I guess two points one uh a visual Point um this is not working before it's not about here correct but also this presentation is not the thing they're chartered this presentation is in is a is their view is their view of the thing discharger and so so the questions are out of scope are only the ones that are really removed by the chart not by this presentation um so I'm not seeing anything wrong with your presentation I just want to clarify whether it's Up For Debate and what is not um so um can you go back to security um thank you oh"
  },
  {
    "startTime": "00:26:04",
    "text": "did you get it I can I can just well prachi can step back maybe this is maybe okay maybe he'll just do it really I think you need to give um permission it's okay um you said you you said you want to not have replay attacks why um why not have replay attacks do you want to go over here I know what a replay tag is but why is that a problem in this case so uh the problem let's say you're sure since we're passing credential flight brings in the information separately from the link right that link can be copied and sent to whoever want to um uh whoever want to provision that credential right and let's say 10 people at the same time want to provision the same pass in their wallet and we definitely want to prevent that sorry you have to start from the beginning okay so yeah understand the question uh why do we want to prevent a replay attack so and uh recently also obvious we don't want the same credential to be added to 10 different people without uh the original intent of the sender so if the sender wants to send it to their partner we want only Department to be able to redeem that sure Sydney making some very strong assumptions about the about the receiver of the message it's a very strong assumption between the receiver and the credential Authority again what I'm trying to drill into is that by the time I've received the credential it is mine to send around and so um and so so you you absolutely can ensure that there'll be only one or only one interaction between the receiver and the gradual Authority but that does not ensure the only copy the credential and"
  },
  {
    "startTime": "00:28:01",
    "text": "so I'm sure you're about to tell me it's a trusted Hardware module on the receiver but that's not like I'm pointing at that as like that's an assumption you're making that does not like necessarily a valid assumption I think another another reason that we wanted to avoid anti-replay attacks is a security requirement is that if there's no if we have that security requirement then we can have more of an easy user experience around the actual security of the transfer if the link is short-lived and the mailbox is short-lived no I still understand that probably a good point with this do you mind if we take this to the mailing list and dig into it oh is oh sorry go ahead well I guess what I'm trying to say is that I think there is an implicit assumption in this entire entire presentation that these credentials are embodied and some sort of pieces of trusted Hardware are not available to people who own the device and like that may be will be true but like that should be documented and I have to decide if that's something that you want to assume or not because um Matt I'm I'm happy to help try to answer this um I think I think we should separate out the constructs here right and I'll try to keep this short but I don't think it's related to Hardware in any way shape or form right the way that the credential is housed on the device whether it's in a secure chip or not is not the question I think specifically what we want to avoid here um or what we're trying to guarantee actually when a sender wants to share a credential with the receiver right there's there's the ability for a single receiver and that is the goal of this of this Charter is is to share it with a single person um to to to have that transfer of the credential only be redeemable for a credential by one party that does not preclude that party from not further"
  },
  {
    "startTime": "00:30:00",
    "text": "sharing the credential and that is encapsulated in the design if that makes sense what we don't want to have happen though is the sender initiate a transfer obtain the necessary material from the credential authority to facilitate that transfer and let more than one receiver receive that transfer that that is I think more than more than an assumption that is a distinct goal how would that happen um sorry Dimitri go ahead I just wanted to say that we utilize a number of security mechanisms that are defined in the job document I've read the document okay so uh I'm asking to describe the threat model precisely when we established that channel between two devices The Binding right uh it um enforces the fact that only a single receiver can read that you know so before we get into that discussion because we're getting into the sort of the part of the when a little bit later we're going to go through the proposed sort of first version of the draft that's kind of linked to this working group and maybe we should try to stick with the like the the problem statement part of this before we get to the into solution space just helps but I'm asking for the threat model actually I'm asking about the threat model yeah and so I mean I guess my point is that you're sending a link around and so like if you want to sit down okay but if you're sending the link around like like how does it how does the link get redeemable people if you don't provide the security medicine you claim you provide how does that how does that how does the other person get a handle on the link so I'll I'll try to oh sorry go ahead I mean so I wanna I wanna share with the credential with dkg and I shared link with EKG and and so well okay but you could just put the key up on the slides that's my point and so I'm trying to understand is aside from dkg's malfeasance which you've all which which already allows the key to be shared what what is the attack model"
  },
  {
    "startTime": "00:32:02",
    "text": "well I think to Casey's point I think we need to separate security mechanisms that would prevent that individual from sharing the key itself one sharing is complete from a Potential Threat in the sharing itself so for the actual transfer of the credential what you want to avoid specifically is you send a link to your friend and that friend posts it online and anybody with that link could then redeem for a credential that is a different problem than if you send that link to your friend they provision the credential and then they share the actual credential itself those are two different problems and all right yeah go ahead it's only a different problem because you think that he can't see the key you can't see it otherwise I think it's a different I think it's a different problem because mechanisms used to predict to protect a cryptographic key are different from mechanisms used on a protocol for sharing keys yes responsibility but okay we'll pick this up later so it it this discussion kind of does beg a question that the chairs have been meaning to bring up and that is maybe that the working group does need a separate problem statement uh draft and that could include a clear threat model discussion so I think it's something to keep in mind here that that it maybe is a document that doesn't exist today but needs to be written remember the working group doesn't actually have any adopted working group drafts yet right um so but it's a good point that you make Eric that a good threat model is a sort of integral part of this now Michael do you wanna Michael oh you really all right so I'm going to take you off cue Wayne hey this is Wayne from Spruce I just wanted to confirm some uh understandings I think I have about this and um ask if something could be possible so um one thing is it seems that the"
  },
  {
    "startTime": "00:34:01",
    "text": "model relies on appreciating symmetric encryption key for the mailboxes right and that's that's been uh so far so the setup is kind of out of scope right you would have to use some other protocol whatever that is right um yes and no so we depending on the security model like we um defined that certain credential verticals may require more secure solution uh what we propose for the solutions which are not that important to attach the secret to the URL which probably Eric is calling out here but um for some use cases that might be secure enough given that the channel being used to transfer that sure is uh is is trusted okay and uh the follow-up is a little different direction so intentionally it's an opaque token format so it can potentially conform to other standards bodies out there across different verticals right and that's good and I guess that also would not preclude like an authorization credential model that could be like down to a different key or something for example instead of sharing the private key material through this protocol you could share a delegation to a different key that opens the hotel room is that model possible yes exactly and we think that model would be like all the use cases that we're hoping of we're talking about uh definitely not sending private Keys hopefully [Music] Peter hi it's Peter from DEC um yeah so the proposal doesn't deal with the credential logic itself right so what the credential what's the name Authority or something does is out of scope um so are any problems that may be resulting from for example sharing a secret symmetric key it's a lot of scope which is fine and um so we just assumed that there"
  },
  {
    "startTime": "00:36:00",
    "text": "already is um a credential and it's an opaque set of data fields and that's somehow the combined set of credential information and provisioning information if I got that right and the goals are that only the recipients can use it and enter replay and the server knows nothing and participants don't have to be on it at the same time and content is opaque and all that and it just sounds very much like the requirements for sending any secret message not specifically credentials my question is in what way the proposal does go beyond any other protocol to send secret messages between two parties who have some kind of set up with let's say symmetric keys they exchange beforehand or for example the signal protocol which already is around and I presume that probably your probably your tend to tackle is different because otherwise you wouldn't be making the effort but I I don't see that in the problem statement yet so if it does go beyond just exchanging secret messages between participating parties then I think the problems that needs to be extended to explain in what way that's different because I don't understand it so far um I think that's a very valid question so um if we're comparing that to the problem with sending an encrypted message so we need to uh split it into two pieces right so establish and secure Channel and then like send encryption message there sorry in the secret pretty sure in secret and then encrypting data here what we want to achieve is to share the encrypted content and the link to that content like separately secret and the content they go through different channels and we don't want to use we don't want to introduce a mechanism of pre-shared secretly if it explains it"
  },
  {
    "startTime": "00:38:00",
    "text": "and this is very narrow scoped for uh credential transfer like we have let's say some provision information which in kind is a token right and we want eventually that information be passed to and from between two quarries like a ping pong and we want to uh make sure that only two actors can exchange that information for a given mailbox okay so you just mentioned some kind of Link um that there's one thing and then there's another thing so I didn't see that requirement in your list of requirements it would be cool if you could add it and um I don't know I I think that is kind of where where it gets into the proposed solution right then Eric is actually quite correct both of these things are proposals yet right we're talking about stay away from the solution yeah we're coming to that right where you know I just want don't want us to lose track of time and okay and I have we have a few people on the Queue um and we're gonna stop the queue right after Victor and um and let's try to have a little bit of time left for the rest of so Ian you'll hear me okay uh Ian Williams with AWS um I noticed that your um protocol here implies a certain amount of trust between the sender recipient and the relay um I'm wondering like is there any consideration for if the relay agrees to be a part of this operation um for example if I as a sender tell the recipient my mailbox is at Mom and popburgershop.com they might not enjoy if the recipient starts asking them for keys or for this credential so I'm wondering like what kind of considerations might be made there um that's a great question"
  },
  {
    "startTime": "00:40:00",
    "text": "um I appreciate it yes there is a consideration specifically for uh sure initiation ran a sender device creates the mailbox right so we don't want to trust anyone there is a regulation between the sender device and the daily server which means the sure and the release server probably would be implemented by the same party uh to establish that trust so we have a mechanism of attestation which covers the whole content of the mailbox and release server before accepting that information needs to be able to verify the content and verify the route of trust like whether it's produced by the authentic device etc for the recipient it's less important because like we think that recipient they have a mechanism of see what they accept in and they Trust they need less trust let's put it this this way to the delete server because they have a link coming from the front over a separate Channel and they probably know that Trend right they know their phone number URL they can make a call to the friend and um there are additional mechanisms which we propose uh in the draft document such as Verification codes that can be communicated uh using Voice or other mechanisms yeah I saw the the the Verification codes that may be used between sender and recipient but I didn't see how that would again connect to the relay server because that seems to be kind of the mutual body between the three of them here again using the you know Mom and Pop burger shop as an example they would probably not enjoy the added traffic yeah um yeah so as I said the regulation between sender device and the release server is covered because we have that trust established during uh using of uh device attestation uh block which which carries"
  },
  {
    "startTime": "00:42:03",
    "text": "the certificate specific to the device and the root of trust um it is shared between sender and the UV um we find that it's less important to establish the same level of trust between the relay and the receiver uh let's put it this way but we are open to discussion if you find really good uh arguments to establish the same level of trust uh we have uh an option to introduce the same level of authentication attestation between recipient and regulation sorry this is Nick also from alphabet I want to just chime in for your concern about maybe like the mom and pop shop server just getting all these inundated um like traffic for it and I think maybe that's where you were headed um I'll take on like the recipient side this will you know very per vertical of course you know depending on they want to use the relay server but at least when it comes to things like the the CCC and for the digital car keys there is an allow list of different known relay servers that we would want to use so the recipient would have to choose from one of those um relay server otherwise we will not just simply reach out to any any kind of uh you know random URL that's been sent from from even if it was from linked owner yeah I mean the random URL consideration is kind of what I was going for next to but if there's going to if the plan is that there would be an allow list of appropriate there certainly will be yet okay that that would be my main suggestion thank you all right um I just want to put a pin in this describe that part of the discussion because actually I don't really understand why there should be a law list of automated servers um because as far as you can tell them on the security properties depend on that um so it seems like some other property which is unclear to me so let's just say that"
  },
  {
    "startTime": "00:44:00",
    "text": "that's not not decided um there are um uh it seems to me there are two assumptions being made here that like perhaps people are having trouble in this busy stages one might like um one is that the channel That the sender and receiver have to them available to them is not sufficiently capable to deliver arbitrary amounts of data um so it is encrypted but it cannot deliver arbitrary amounts of data is that correct yes okay so that's hence the relay server because otherwise you would just like spin up your WhatsApp Channel and then the whole thing or Whatsapp right okay um and the second is that the um sender is not able to transfer the credentials directly to the recipient because it requires the cooperation the credential server correct yes good okay so I think that's like without saying that I agree with everything here that's how we get to this design there's those two constraints because otherwise otherwise as Jim Fenton says it would just like spit up signal and like shift the entire thing over like like like a verb signal right okay maybe to your point we could add in a constraint section to our draft maybe that would be really helpful so Paul and Jake says I think my question I think Ecker more or less asked it but can you say a little bit more about what the constraints on that out of band channel are that you're you're assuming and and what we need I mean is that something we can be discussed in this requirements trying to get just a better feel of what you see the limit of that so that we can design to it you try not to so we've we've been thinking about the constraint for that messaging Channel as any uh we want to be able to use any messaging channel that users can talk over including uh like writing the URL on a piece of paper and giving it to someone um so any missing any messaging channel that can transfer you know 100 characters um or less kind of as our constraint or lack of constraints I mean makes sense can you say a little"
  },
  {
    "startTime": "00:46:00",
    "text": "bit more about what's driving you to that sort of size or the ways you imagine it's being transferred um that would that would put to that I'm just trying to pull out the reverse out the requirements here I think primarily user experience so we want users to be able to share their credentials over any messaging channel that they are already yeah what messaging channel does so obviously that's already way too long for me to type in okay so they're not being shared that way from a user experience obviously so which message channel is it that's in that you that would practically be used that's putting that's causing a limit what's that limit looking like like 100 is pretty small yeah I think uh one of the common ones was like SMS has 240 characters um yeah this one that was one of the main MMS doesn't have that line I mean like I I think this is an excellent discussion for us mailing list later but but I it is an important aspect to cover I think right right look I'm not expressing opinion on it I'd be fine like saying it has to work over SMS for that channel that'd be a fine requirement or no we're okay with MMS over that Channel or whatever I just think that that's worth poking on sort of what drives that limit a bit yeah um I think I can answer that more or less like SMS is insco uh email is in scope WhatsApp iMessage I I think it's great but I don't think the requirement is that anybody be able to answer all these things right now right I mean let's just let's just keep like put a pin in this this goes into requirements document it's uh right uh I wonder how much attention is being paid to uh potential abuse is this a kind of a standardized fishing channel effectively where somebody can start soliciting credentials from me and if I'm a naive user I will start giving them away uh to all kinds of parties whom it misrepresent who they are or what they want or why I should give the credentials to them uh what's the story on uh protecting the mostly naive audience that's likely to encounter this facility"
  },
  {
    "startTime": "00:48:01",
    "text": "so because the relationship between the sender and the credential authority to get the provisioning information is happens before this protocol comes in we don't think there could be much or any fishing on the sending of a credential side it would only be sharing credentials to someone that maybe they didn't necessarily want right well that's the key question right I mean sure I'm I have a pre-established relationship with the relay uh Bank car my car company whoever now somebody encourages me to share do I really know who they are how easy is it to misrepresent what's going on to me and so on uh you know it's how much thought or our attention needs to be paid to this um great question so potentially there is a risk like when we generate that mailbox and we generate a share URL to that mailbox right um as Nick previously said the least of the relay address is trusted the address is it's uh limited by the allow list second the content of the preview which I will discuss later the content shall be trusted by really server so it shall originate from a trusted server for us it's a device manufacturer server so uh the picture that they will see in the preview it won't come from Bob and mom.com whatever flowers.com it will come from a trusted server and I think it's it's um one of the security considerations mentioned in this is what the recipient sees or what the potential sender sees um uh the recipences because I mentioned what the potential sender sees when somebody says please share the credential with me I am your sister stuck in some place where I need help this is this is something uh worth thinking about a lot um but I don't think it's part of The Proposal at least at this point maybe that should be something that we look at"
  },
  {
    "startTime": "00:50:00",
    "text": "further yeah um the one piece over that is the bond to the solution yet but we have a delete mailbox API and the idea is that you could call that at any moment um not just so if you were to send that share link you know oh no even if like you're kind of talking about malicious situation but even on an accident you sent it to the wrong person you're able to go delete that mailbox before that recipient has provisioned um so that's from from our perspective how we could uh have a little bit of security about that in the relay server and then from a larger perspective that credential Authority is in charge so like worst case scenario everything goes wrong you could talk to that credential Authority and say hey this was wrong please revoke that and we have that like third party outside the relay server that could handle that situation so um just wanted to confirm whether a part of the question is the trust relationship between the sender device and the delay and um what's the attack here um or is it like user experience with the device when they unintentionally share something they didn't want to system feature it's to what extent will I know who I'm really sharing with uh it applies more broadly really than this particular thing but naming is hard and this thing really automates it to a degree where the attacks become easier I think uh and you know do I really know who I'm sharing with how strong is that when it's intermediated by a third party especially yeah I want to just chime in again this is Nick from alphabet again um I think this whole identity of sender receiver especially on the receiver side maybe um this is a little bit more difficult to solve and definitely out of scope for"
  },
  {
    "startTime": "00:52:01",
    "text": "um the working group that we're we're trying to propose here for the solutions the the relay server here is it's not an Arbiter of like identity here and we're really trying to not you know at least right now maybe in the future you know we may have ideas around this but not not trying to solve the identity issue um or be the authority of that yeah I think um and uh this is Matt again I think just to add on to what Nick said you know when you really come down to it you're initiating the transfer over credential let's pretend you use SMS or email just just just to you know use an example you know you don't as the sender really have confirmation of the identity of the recipient you only know that you know you know for example I've been texting this person at this you know SMS number for you know five years technically you know one minute before you issue that share they could have gotten a new phone number and that phone number could have been reassigned from the carrier um and in possession from somebody else and so I think you know to Nick's point and to you know Dimitri's point it really the onus is really on the sender to make sure that they're sending the credential to a channel that is tenured from their perspective and that they have confidence of who is on the other end of whatever Communication channel they choose to send it through and that that doesn't really have anything to do with the relay server in my mind at all all right um all right um I I um we're at um the point today where we're going to switch over to talk a little bit about the proposed solution lathe yes I have a minutes question for you then go ahead you said at one point does the working group want a separate threat model draft and later you said no I said does the working group want a separate uh requirements draft actually I could"
  },
  {
    "startTime": "00:54:01",
    "text": "include a threat model discussion okay at least that was but you also later said something about an assumptions draft are those all in one I I don't remember using that term exactly but I would assume that we would follow the typical model of whitef working groups or handling requirements draft that includes you know enough of these things too make sure that everybody hi Roman denilio as the responsible ad we'll take the document thing offline because we made some decisions in the charting process not to do separate architecture and requirements documents so we'll sort it out all right all right I think try to have to step up step forward to the yes there we go and we can continue um there we go hello my name is Dmitry I I will present to you a proposed solution uh to the problem of transferring credential um digital credential securely so um thank you the Crux of our proposed solution is a release server that facilitates a short-lived Communication channel between sender and receiver devices sender and receiver devices will communicate over that um agility server using a single mailbox all the messages will be encrypted using asymmetric encryption key or Secret communication over a release server is completely decoupled from the provisioning logic and uh the content of the messages is opaque to delay server"
  },
  {
    "startTime": "00:56:00",
    "text": "uh English cell no have any visibility to the content or sensitive information within the encrypted provisioning information and the content shall never be revealed to it some metadata may be visible such as a format type which is required to define whether it's stateless or status flow let's walk through the solution at a very high level so um the standard device initiates the transaction by uploading provisioning information to the delay server creating a mailbox uniquely identified by mlbox identifier and then it sends a share URL containing secret over a separate Channel SMS email WhatsApp to the receiver device a receiver device downloads the content decrypts it using the secret and Provisions a new credential to the device uh the process of redeeming a credential given a provisional information is out of scope for this working group we defined two data flows here one is stateless another is stateful status facilitates a single unidirectional data transfer from sender to relay to a receiver new credential is generated by credential Authority here uh in a stateful flow again a server facilitates multiple data transfers to prepare credential data and for registration or provisioning by receiver a green server does not limit the number of such data transfers between sender and receiver"
  },
  {
    "startTime": "00:58:01",
    "text": "the new credential scheme material is generated by a receiver device according to CCC spec for instance for example here and it needs to be authorized by sender hence an additional round trip is required uh the details will be provided later on in a couple of slides when I go through the data flow um now we're going to discuss our Solution on the API level for our solution we describe degree storage as mailbox are there simple data stores along um to be written to enter up from so to begin we create a mailbox it would be at the beginning of the transfer flow a standard device would call again a server to create a mailbox storing encrypted provision and information degree server will generate a unique mailbox identifier and now for that data and return Azure URL pointing to that mailbox when it's even sure you're well most messaging applications will perform a get request to read display information preview in open graph data format the messaging application on the receiver will if it supports open grab format it will generate a credential preview in a messaging app so that the user can realize what they are accepting before they add the credential and this is mostly for a user experience better user experience uh when a user has clicked on the link and accept uh the um sure the receiver device will go read the secure information from the real email box in order to fetch encrypted provision information um it will use the secret past industry"
  },
  {
    "startTime": "01:00:01",
    "text": "URL in order to decrypt it uh and provision the credential to the device for situations that require multiple round trips to the delay server we have an update mailbox API I hear sander and receiver devices could upload and update the same mailbox in a limited time in accordance to the protocol they are following you can imagine a back and forth between sender and the receiver device uh where each device reads and updates the information um with their own once the transfer is complete there is a delete mailbox API in order to clean up um this way we can ensure that mailbox are purged after the transfer process is finished also it allows users to cancel the transfer process if they choose so by deleting the mailbox and rendering any share URL useless now let's work through the shrugging process in details we have the following actors standard device a receiver device a really server and an optional actor credential Authority so which is out of scope for this working group but given here for clarity so first Credence sender chooses what a part of credential to transfer and initiates the process um standard device makes a call to the credential Authority in order to get provisioning information it generates a secret and encrypts the"
  },
  {
    "startTime": "01:02:02",
    "text": "content of the provisional information with that secret third it makes a call to the academy server creates a mailbox and uploads the encrypted content to the ugly server again server um generates an email box identifier builds a show URL link returns it to the assembled device fourth standard device sends the show URL with a secret in the URL fragment over a separate Channel as I said SMS email WhatsApp iMessage uh to the receiver device the receiver device uh there is a messaging application which sees the incoming message it makes a get request and redisplay information generates a preview shows it to the user user sees a new message as a credential preview in a messaging app and decides to accept the sure clicks on it sure URL is forwarded to the platform specific credential management application for instance wallet uh six a receiver device makes a read secure information call to the relay server downloads the president information uh decrypts it uh using Secret in fragment part of the Azure URL it gets the prison uh information as a result seventh slide please seventh um receiver device makes a call to provisioning Authority in order to redeem provision information for credential information and then Provisions a new credential to the"
  },
  {
    "startTime": "01:04:00",
    "text": "device and final step 8 uh receiver deletes the mailbox and this concludes the stateless flow uh in a stateful flow there is no credential Authority per se instead a pair of sander and receiver device act together as a credential Authority generating new credential information and authorizing it for a new device and second flow has additional steps after step 6 comparing to the previous stateless flow so let's start with seven um a receiver device generates a new key material for the receiver updates provisional information with key sign in the request and uploads the content to the delay server using update mailbox API eight sender device against updated provision information from the mailbox and receives key signing request 9. sender authorizes new receiver scheme material in a key sign and response and updates the provision in info uploads it to the mailbox with update mailbox call and receiver device downloads the updated provision info decrypts it and Provisions the new credential locally uh done finally the receiver device deletes the mailbox and this concludes the status flow so we just presented to you the problem and the solution to the transferring digital credentials securely between two devices as we stated in the beginning the proposed solution is based on the transfer of authorization information or provisioning information that we call it previously between two devices in order to obtain new credential from the credential Authority rather than"
  },
  {
    "startTime": "01:06:01",
    "text": "transferring original credential with all related cryptographic material uh redress both privacy and security concerns and requirements to the solution using mechanisms defined in the draft document please feel free to read the document at the following URL uh so thank you very much for showing interest to this working group I really hope that more people will participate in this working group and uh we hope our proposal will be adopted by ITF community and now we move on to q a session right before everybody rushes to the mics again I want to ask who um quick show answers read the draft well that's that's good you're you can raise your home like kind of like this right all right that's good uh it's a good size number of people all right uh Victor is um hi um the the protocol looks a lot like GSS API embedded in HTTP with the uh credentials of the uh receiver sent asynchronously so they can participate in the ongoing conversation uh is this roughly correct have you looked at GSS API because in some sense uh the state machine is sort of indistinguishable from what goes on GSS um good question uh we look into a number of protocols but not into that precise I'm not familiar with that [Music] your scroller um I'm just trying to"
  },
  {
    "startTime": "01:08:02",
    "text": "so suppose we relax the requirement that you have to go over Channel that only cares multiple bites how much this is left that's very good point um we do consider that different credentials may have different value and based on that they may have different requirements and additional mechanisms that we can enforce in addition to that search Channel where are those enforced um I believe part of them will be enforced as let's say for the car key uh enforced by a CCC standard uh at the time of provisioning there are multiple mechanisms that we can utilize additional Verification codes uh second factor and such no I think you've lost me I mean so like like fundamentally what you got is you've got a system where the you've got you got a Dropbox on the server and the initiator sends a like the rest of the Dropbox to the receiver and then they bounce back and forth messages to the Dropbox so but the Dropbox doesn't make any other kind of the messages so my question is if we just assume the channel had like wide capacity instead of narrow capacity what will be left of this protocol I think this is Matt Byington again I think there are some really simple you know borderline non-technical reasons as well Eric like like you don't want to see like you know like an x509 encoded public key you know coming through on a on a communication Channel That's shown to end users that would be very confusing to them right in like an email or something like that you're bringing a whole bunch of constraints I didn't I didn't stipulate so if we just assume we had a channel that had white capacity like and yes controlled entirely by the endpoints like what we lost the protocol"
  },
  {
    "startTime": "01:10:01",
    "text": "yeah it would absolutely work you don't you wouldn't need a relay if you ignore user experience and if you if you send the you know messages back and forth it would totally work yeah I mean I mean well but when you say like you say like ignore user experience right but um you know you already have to modify the um like there's a bunch of modifications being made in various places and like the operating system is completely is completely able to like for instance have some SMS messages bypass the SMS viewer and go directly to something like doesn't entirely when the scope of the operating system so like I'm trying what I'm trying to push on is like the requirements of the system is like you're creating this like kind of like weak sauce replica of web dev that then like that then is being used and I mean I'm like we have like a zillion ways to like send messages back and forth from people and so I'm trying to figure out like like why we're creating like like this involves creating like a new messaging system that like has this drop weird kind of Dropbox metaphor and trying to figure out why we're doing that and so and is any other reason other than the channel has narrow capacity and that and that you think before the message out of the users like mlx yeah I mean just to reply to your operating system comment I mean the operating system is not in control of the UI on the screen if it's like a you know third-party Standalone messaging app like WhatsApp or WeChat or something like that right how would the operating system help help the experience there well it seems like if the receiver is going to engage in some special protocol here the receiver has to have some smarts already it's got to treat these URLs uh in the correct way or is the receiver just doing a normal get request to this and so if you've seen if you've seen the receiver is in special logic presume like they could also do special UI logic yeah I I I don't think it'd be possible to do special UI logic in an application"
  },
  {
    "startTime": "01:12:01",
    "text": "that controls its own UI when it's being drawn on the screen like an email client or Whatsapp or WeChat or any of those type of you know programs um it's worth noting those programs would do a simple HTTP get on that URL in fact they do that on every URL at least with the HTTP protocol and and that's where you would get some of this open graph preview coming into play right um that you know they would do that but um but they you know those operating systems would need special logic yes to actually receive the share ingest it and get the credential provisioned totally agree with that foreign messaging protocol like this is a messaging protocol right it just happens to only be useless one purpose it's not I wouldn't say it's a messaging protocol how not I wouldn't say so why uh it's a protocol um to solve this given problem to transfer provision information from one device to another that's technology not technology maybe I could draw a different analogy here um there was a bunch of discussion in dispatch on Monday of um file transfers uh over limited channels you know like you see this all the time in messaging systems where you transfer a URL to a file that's stored somewhere else you send it the URL and the messaging Channel and then the receiver goes and downloads the thing and people you know commonly augment this with a little bit of crypto so that the URL either you know has a key embedded in it or has a key alongside of it the server where the file lives it doesn't see the plain text concept so it's largely similar to what we're doing what we're doing here um so I guess what I'm wondering is to what degree is this kind of an"
  },
  {
    "startTime": "01:14:00",
    "text": "instantiation of that design pattern in the sense of being a way to transfer some sensitive data over a you know where you have a limited Channel um that you maybe you have less trusted maybe slightly less processing if you're still sending the key over it but maybe you you entrust the server threats and access controls or something um and to what degree is it specific to this credential use case so to reset that like it seems like you're talking about using this transfer protocol to transfer credential related information could I not use the same mechanism you've laid out here to send cat pictures or nuclear submarine designs or whatever sensitive thing I'm trying to send to hacker foreign what you described here was a more generic let's say some distributed file system right when we can store something and then uh the reader can read it uh it wasn't the goal of this solution um to transfer generic files and we um we had a number of the goals like which were defined in the very beginning we needed it to be a short like token right uh personal information we needed to that token to be delivered to one device and we wanted the transfer process to be limited between one sender and a receiver so once the transfer started we wanted that limitation one receiver can read that or update that and provision"
  },
  {
    "startTime": "01:16:02",
    "text": "uh third we wanted that temporary storage uh not to be able to look into what was transferred like not to be completely um completely unaware it's it's opaque for them that's that was goal number two third we were heavily um trying to solve problem of mobile devices not always having uh cellular coverage all of the time and we still wanted the problem to be solvable under those conditions and there are additional um limitations due to the nature of those mobile devices um such as [Music] um uh we added potential push notifications in order to react as soon as the data was updated right on the Gili server so it is this problem is very negative focused on a given use case we didn't want it to be a generic solution for file transfer so let me just follow into that Richard here Association um before the I want to ask about something you actually just said in your last thing and I stood up before to ask about which you push notifications because well before we even started on the boff of this one of the things that made me think this was quite different than many of our other mailbox protocols at ITF was a requirement for uh the relay to be able to or the mailbox to be able to send push notifications to clients and that hasn't been mentioned in the stuff today and I was wondering is that still an extension you're looking at is that part of the problem space because that obviously changes the design a little bit if we need that down the road um one way or another so maybe you can talk a little bit more about the how the thoughts on that have evolved over time that is definitely still something we're"
  },
  {
    "startTime": "01:18:00",
    "text": "looking at and it's included in our draft proposal right now we're thinking about it pretty generically where the push notification type can be specified and then each relay server operator can work with different device oems to interact with their push notification infrastructure but that's definitely a requirement for the mobile devices yeah and when I presented solution I try to present it in a very simplistic way hi Rowan May wire um so I heard um I've heard half a dozen to a dozen different requirements that weren't explicitly mentioned in the first presentation um and I think um you've got you know the reason you have many people asking questions is they're kind of trying to poke around and ask basically requirements questions it's very traditional for a new working group or even for a boss to start off with requirements and then to and then to go to a protocol um and if you do start with some pre-existing notion of what your protocol should be um I didn't read the complete document but I did like scan through quite a bit of it and there's no real mention of the protocol so I would like to recommend that you please do a document that said that gives those nice use cases that you had in your in your presentation and lists requirements including these subtle requirements and then I think that you're going to get some people some people are going to push poke at those requirements some people are going to add requirements or propose new ones that might you might like and you may end up with a protocol very"
  },
  {
    "startTime": "01:20:00",
    "text": "much like the one that you came up with or somebody may just show you that they make say oh by the way I can do everything in these requirements with this combination of stuff that already exists thank you yeah thank you for the suggestion I think that's great idea just to add to that I think that your point is really good and I think that a large answer to a lot of your questions which might not be as satisfactory is just when we're looking at all these different existing applications or ways that we could have transferred we just always found something that was missing it's like like oh this is almost what we needed oh but we need to miss one requirement so hopefully whenever we create that requirements document I'll make it clear sorry I just to add to that we seriously considered it's it was a problem where we tried to find the right balance between security and usability as it is always the case in us with Security Solutions so we tried to provide the best possible user experience that's why the lacks sometimes relax security requirements and there is a security considerations uh section at the end of the draft document it might address some of the questions departments okay point taken thank you so crystalman's Comcast um it's not clear to me that it is possible to uh develop a solution that works for credentials specifically without specifying what kind of credentials and making them completely opaque without making it also just as useful for cat pictures um and so so I mean I to me the messaging protocol uh comments are exactly on point and so I I find myself wondering what kind of relationship does"
  },
  {
    "startTime": "01:22:00",
    "text": "the relay server have with uh both the sender and the receiver of the credentials does it know their identities does it keep track of them so the sender and the sender has a relatively tight relationship with the relay server they have they're able to generate access stations to prove that they have rights to create mailboxes but those attestations are Anonymous and it's a very important feature of the relay server that they don't know any identifiable information about senders okay Savers so what's preventing the relay server for just from just being free storage on the internet uh nothing is uh now the question is what makes the sender to start using that daily server so there should be certain level of trust between the sender and the release server so the sender starts using given release server mm-hmm right so the sender starts using the the relay server to store his cat pictures right absolutely okay um I assume that the relay server has finite resources and wants to allocate them independently and so it probably wants to try to keep track of who's doing this right good point so that's why uh we precisely mentioned and a DOT document that we want to enforce the elite server not to see anything sensible like any sensitive information uh that's why we mentioned device attestation potential like optional device attestation and that device attestation is the basis of trust between sender and receiver if sander covers his cat picture with the device at the station and a release server trust that sender trust that device attestation which is anonymous potentially which doesn't reveal any user information to the relay"
  },
  {
    "startTime": "01:24:02",
    "text": "really trust that I want to also oh sorry go ahead I think I just interrupted somebody all right Matt okay let me let me just uh add a few more comments to that I think like any other messaging Channel you know you could try to use the the relay server outside of its intended use that's always something that that could happen with any kind of like messaging system right um the only kind of thing is the sender or the user are they okay with the Restriction that is sent I mean that are set for this messaging Channel and and that that's really the Restriction that's applied here right are you okay with having a short-lived TTL to send your cat pictures or you know are you okay with just sending this information just to one other party and not not to like one to many messaging uh uh Channel things like that so uh the the idea is like yes you could you could use this channel outside of the intended purpose um but are you okay with the Restriction that's that's going to be set forth in in that relay server okay thank you yeah and just one other little piece is that you could configure your mailboxes you know this is dependent on whoever is implementing this but you could configure your mailbox to have to be really small so for us you know like this provisioning information is going to be quite small so less than a cat picture so then you make it so unusable that no one would want to use it except for your purpose not to say that's like 100 like you know foolproof but it gets a little closer so I just want to make sure the people who are still in the queue are you actually in the queue or did you yes excellent um Richard yeah I just want to make a brief amendment to my earlier comments and be clear that I didn't mean to be be negative on this work I I was actually kind of yes ending um like clearly I think that it seems clear this is uh an okay starting point at least for for the credential use case I think all I would meant to suggest is that it could be useful to some other parts of the ietf if we look and clarify those boundaries and see if it can be expressed in a way that would be useful"
  },
  {
    "startTime": "01:26:00",
    "text": "in some other folks just to think about uh how to express things more generally thank you Richard for clarifying that so I'm just like trying to write my attestation thing so the attestation in this case is I have a car key like what is that station representing that this that causes the the relay server to allow me to store data so the protocol defines the attestation pretty generally and then leaves it up to um held the sender and the receiver device want like what type of attestation they want to use but generally it's just around the user and the device being authentic and not uh like a device Farm thank you okay nothing to do with the credential on the device it identifies the user correct effectively can I just jump in on this one sorry Dmitry I think the the the protocol or like the relay server proposal has this attestation which which is very very generalized right I think it's kind of left up to the implementation of it to create this relationship of what that testation really means and it doesn't necessarily have to be an identity Source it could just be a very generalized like even just like key pair where you have um like a root key that you could identify some you know Hardware that that's been uh that has like the public key that's stamped in from the manufacturing process or something something as simple as that so that you trust that this device has uh some form of authority to create this mailboxes on your relay server but this again is it's you know it's for implementation detail rather than it is a restriction on the The Proposal itself so I don't know go ahead oh if you if you deem that you don't need this kind of you know uh security like if you are implementing this uh really server yourself or for whatever other purpose that you want to use uh for your own proprietary kind of um like uh transfer credential and you"
  },
  {
    "startTime": "01:28:00",
    "text": "know you want to make it open and you don't have to use that attestation if you don't want to well so I guess is your assumption that the choice of relay server is determined by the application domain for the type of credential being transferred yes yeah I think I mean it can be it can be right um you know it depends on the implementer and and on the person adopting the the credential right you you might have uh a home key and you want to use a relay server you you have many different choices of using either implementing your own or or just using something that has been implemented but it all kind of depends on the implement or of all of this I I I'm not really following so you know I have the Hilton app hypothetically and I like push the button because I want to share my room key with dkg and um I met him in the bar earlier as he mentioned one of the five people um and um the um uh and um so like I push a button that's got to go somewhere right like I don't choose some reason I'm not going to raise her right so like where does it go and who decide who makes the decision and what Creations if you're seeing a Hilton I think the short short you know answers if you're staying at Hilton Hilton would try to decide which where that that relay server will be at right uh they're the one who wants to do the transferring of that hotel Key they would be the domain owner of that now they might have you know options at the Genesis of light trading that the application of which um relief server to use whether they host their own or maybe use one that already exists that would be entirely up to like Hilton okay so the reason I'm pushing on this is because if the security requirements of the system depend on access controls they're allowed to write to the relay server then those are part of the scope of the system and they have to be defined and if it depends on Hardware attestation that has to be defined and it's like like the entire like this goes back to requirements of describing how the system like works right and so like you can't just say like it's gonna be stored somewhere if security security"
  },
  {
    "startTime": "01:30:00",
    "text": "requirements the system depend on having that Define so um so maybe like the answer is it doesn't matter and it doesn't matter what the server it is but like that's like an input like then we need to know that um so and so the second reason I'm pushing on this is because it seems like one of the consequences of this potentially is that because this is if every if if like um if every relay server creates its own if every application has a relay server then this creates a new locus of um of tracking of what credentials are being shared with other people besides the credential server and so um that seems like a personalizable property as opposed to some more generic system so is there some way to remove the property if this creates a graph of everybody who shared with everybody else the idea is not to create this graph right um but how what aircraft has created right how is it not created so for uh like if the hotel owns the relay server they're already as the credential Authority creating a graph of who shared with who um but maybe to your point we need to specify more about the device attestation to really show that it's Anonymous and not the Privacy bearing well I mean yeah that's part of the system yeah um so a simple question uh like simple answer to a question it's up to credential authority to manage whoever owns the key at the moment make any uh connections with them that's specifically why we put the credential management out of scope for this solution for us for the email server it's just a set of calls right HTTP calls coming from different IP addresses and the IP addresses is what we are supposed to be able to track the only piece we shall not be able to see the content what's"
  },
  {
    "startTime": "01:32:01",
    "text": "inside right what kind of credential is there any uh sensitive info there and that was the the goal of the solution and the security requirement if it I don't know if it answers your question it depends on how things are built by the way I'm about to lock the queue if somebody is sort of just sort of sitting at the edge of their seat about to get up now is the time to do that foreign [Music] so I just heard that the relay server may be operated by the the credential Authority which of course is fine but it raises a uh I'm not sure if I understand right um so my understanding was that when I want to share a credential the credential is already there and then I decided to share it so at that point when I somehow upload the share to the relay server the credential Authority is not involved I thought I thought it just uploaded anywhere like one one server that supports this relay protocol so that made me wonder why that would have to do with the relay sorry with the credential Authority operating that relay server and so that made me wonder one more thing so um how is it supposed to work um in practice like on my device and on the recipient's device am I supposed to have an app for example so I receive a credential from somewhere then I hit share this credential then an app pops up and it will will upload it to some relay server that perhaps I can select or perhaps it is specific to the app I don't know that then I will get a link then I will share this through some other Channel with the recipient and then what happens the person clicks on"
  },
  {
    "startTime": "01:34:00",
    "text": "the link and then how does the retrieval of the content work it's a post request so I can imagine two ways either the recipient also has the app in which case that may also be tied to this relay server and only work with certain ones or it may just fire up the browser in which case for decryption it would be necessary to fetch some some JavaScript which is actually from the relay server so there is a like circular thing going on regarding trust so um the two questions I have um in this regard are is this open to me operating my own relay server for example and if so how would that fit in with this app would the app be specific to one operator and how's the retrieval working with this JavaScript thing so that's the first set of questions I have after that I have a different comment um awesome question we definitely uh tried to solve that problem and number one in order to be able to manage credentials on the device you need some software you definitely need either application like a like wallet or third-party application that recognizes this is credential this is our credential provider and it is aware of the process like how do we generate that provisional information how do we like which relay server to call in order to store that info how do we pass the share URL as a link at the same time on the receiving device what you're receiving is basically just a URL you make a get call right you get HTTP page with open graph in the header and if your messaging app understands open graph it will generate you preview the next thing when user clicks on that like in the message and app Messaging App should be aware this belongs to the credential manager on the device with it wallet third party"
  },
  {
    "startTime": "01:36:00",
    "text": "application it needs to offload it we have a simple mechanism doing that if you can implement the same mechanism and integrate with the messaging app if you want to write your own application that's doable okay so if I understand correctly both the sender and the receiver have an app and the app would support that the sender configures any relay server is that correct um we support let's let's put it this way like if we are talking about the precise solution that we want to implement or the general potentially there is no limitation your application can use all the trusted relay servers if you want to enforce the requirement that there is a certain level of trust between your application and a giveaway server as we mentioned the attestation you need to be able to share some uh some trust right a number of certificates um to be able to realize this is valid this is trusted so there might be some limitations if you want to establish that level of trust if it makes sense um just to answer your your question about like if you were to create your own app and like wanted to run your own relay server so I think what would probably happen is that you as the sender are effectively choosing the relay server you want so if you're running your own app that would probably give you one option which is that apps like you know that the apps really server so then you send that link over to your recipient device and say that recipient doesn't have your new app like ITF for fun um then when you when you click on the link you'd be doing a get and you'd probably just be showing a like it'd pop into whatever web browser you have on that device and you'd probably have to have information about how to actually gather that you know credential information off that relay server so you probably have to download that app and then that app"
  },
  {
    "startTime": "01:38:00",
    "text": "would know what to do with that link um so it's handled very similarly for us uh between wallets and Etc but if you had two separate apps I had two like a credential Authority they could potentially through this entire process the same way that we're doing it okay if you um had some other pattern in the URL that would allow this kind of URL to be recognized as a share link independently of the relay server that's used independently of the hostname for example by introducing a scheme the schema prefix for that then you could have a recipient app that works for all relay servers and um I think that would make things easier for example also address the concern that was there earlier when somebody mentioned resources from from people you know uploading CAD pictures whatever so like those people could run their own relay servers and upload they can pictures and then that could be retrieved with any app so that's the first sort of thing that I want to say and the second is just a comment I think the term mailbox is a contradiction of terms um because it's not for arbitrary mail and it's just for credentials in this proposal um and also um in the mailbox I would expect that I can have several messages which I can delete independently but the delete semantics here delete the whole mailbox so um it doesn't seem like a mailbox to me um and so it's more like a single exchange Point somehow and I would recommend renaming this term um we can definitely bring that into the email thread and make one about what to update instead of mailbox um and to your previous point I think that as we gather more interest and participation through this working group we can definitely figure out hey maybe there is just a prefix or some format that all sharing links for any relay server should follow at the moment we don't have as much of that participation we're looking for that so if you guys want to implement this let us know we can figure that one out too that's a good idea Chris lemon's Comcast so"
  },
  {
    "startTime": "01:40:02",
    "text": "um you said at one point and and we just we just touched on a number of these but you said at one point that the expectation is that for a given type of credential from a given credential Authority that uh the most the expected um uh relay server would be operated by the same sort of entity that operates that Authority and that certainly a conceivable scheme is there anything that you see that would that could possibly prevent a credential from being transferred using a relay server that was not authorized by the credential Authority or is the choice of relay server 100 within the uh within the grasp of the sender so the choice of relay server is really up to the credential Authority making the share um not up to the sender how do you enforce that um I think what Alex manned um there should be level of trust between credential Authority and ascendant application so that's obvious right because no that's not obvious okay that's out of scope let's put it this way out of scope for this um working group now the level of trust between sender and degree server is up to the implementer if let's say I want to be able to trust based on the um hardware-based certificates or on uh like some sort on pki level uh we need to establish that and we need to implement mechanism covering the content which is uploaded let's say I'm a sender device right and I'm selecting"
  },
  {
    "startTime": "01:42:00",
    "text": "not abc.com but C CDA dot com and there is no established trust between the second choice and the sender device uh it very much depends on the implementation on the security policy on of the second Glacier work waiter to trust that sender and the same holds true to the sender application someone May Crack the Code of that credential Manager application and redirect them to a different relay server so that combination might not necessarily work both depends on the implementation that's why uh we mentioned that such scenes as device attestations they are optional based on the security level selected by each implementation right so so I understand how the relay server can ask for attestations credentials some sort of authorization from the sender and so relay servers could reject senders that they don't approve of for whatever reason sure but what I don't see is how um uh how uh uh Cas can influence and I realized that the definition of CAS outside of the scope here but but I think it's important because I think we might be relying on it for something here because the uh I don't understand how the ca influences what relay server the sender can choose if the sender chooses a different relay server that is willing to accept it but that second relay server is not approved of by the issuer of whatever credential they want to send uh who stops that how does that happen and why does it matter hi this is Nick again I just want to it"
  },
  {
    "startTime": "01:44:01",
    "text": "doesn't matter I think you're right it doesn't matter so CA does not enforce uh what really server gets used um so you know you have the you know credential provisioning information that just gets sent between two devices and and it doesn't care how that was done uh the only time I make here is at the very you know end when the the receiver maybe tries to provision a a credential with the provision Authority that the right information is present there so that Communication channel that occurs to deliver that you know provisioning information does not matter and is not opinionated by uh the uh the the ca um I believe that's how it is in terms of the open you know the the proposal where we're putting forth now I think a lot of the confusion is like you know we're not trying to be opinionated about the implementation of it you know if you you as like a pub you know private entity wants to to have some form of you know security around like which which really serve a consent then sure surely you could try to have like enhancement that you could put around it to ensure that um but that's not uh what we're baking into like the proposal in terms of like um which uh release server gets used uh and it's controlled by and it's not controlled by the the ca okay so so there's no technical or even policy reason why I couldn't run my own relay server configure my devices to use my relay server um other than the people receiving the links might be confused when they receive a you know uh lemons.example.com address instead of a uh uh carkey.com example.com yeah I think that's exactly right yeah you have many different choices of which really server to use but you know what what is expected really server maybe from the recipient side and that might be the the factor that's involved here um so there needs to be at least some kind of agreement at least only the"
  },
  {
    "startTime": "01:46:00",
    "text": "receiver and like from the software side right and so and so that brings me to the the last question I had I hope which is that um when you receive one of these things how do you know that it is a credential because I just got a link how does how does my device know that that's a credential and why does it not involve the content type right so you know that that is yeah so in the URL itself we do have a you know we call a vertical uh it's a very it's a it's a query parameter that tells you the type of vertical it is like if you're using a car key for transferring car keys Hotel keys there may be something to denote that this is a credential transfer for like a car key and furthermore sorry uh you you could reach out to that relay server um there are information that you couldn't look at after you've decrypted the message to see the type of credential that you're trying to transfer here so there are there are more information in the encrypted portion after you decrypted absolutely once I got it decrypted I have an object I could probably figure out what to do with it um are you suggesting that I'm going to read the URI and there's going to be special format for the URI and if the URI is in a particular format um and has magic query parameters that are registered somewhere that that's going to do a different thing so I think I know sorry we have credential type metadata along with the encrypted information and I mentioned it in the very beginning of presentation so yeah I haven't read that information but you know this belongs to such and such format I I think I'm good thank you I think the missing piece is that the URL could be registered by an app as a universal link that then knows how to handle it a little bit enough all right Paul huff and this may actually be a lead"
  },
  {
    "startTime": "01:48:01",
    "text": "into the what happens next but I heard and by the way I have not read the draft I was interested in the topic but I'm like way out of my depth here but I heard a lot of people asking questions with you guys saying yes we should add that to requirements we should add that to the requirements but then I heard Romans say there isn't going to be a requirements document so are we talking about putting the requirements in the solution document say here were the requirements here are the assumptions and this is the solution or doing something different I I am confused and again I know this is probably what's happening next but I heard this over and over it wasn't just we need to do one requirement all right I'm going to unlock the queue for the sort of what happens next discussion so you know there are many ways to do this right as Roman points out this actually has is in the charter but you know there if I'm correct there's nothing stopping us from for instance from having a separate uh working on use um requirements and problem statements in a separate draft and I'm folding it into the finished product as we yeah that's exactly right I would urge us strongly not to over index on where we put the requirements we heard a long discussion that we want requirements let's write some text and you know those of us kind of concerned on the process kind of side we'll figure out what the right way is to make sure that it appears and manifests in the right way that's right um yeah so that would be very helpful to me I mean I think we're hopeful to me would be like here's the requirements and then here are some of the obvious things you might try to do and this is why they don't work because I'm like requirement 19. um because I think what you're hearing a lot of is like people sort of looking at this and maybe not seeing the complete picture that you seem to see and saying like well why don't you do this and so like I think we're helpful if you could like I don't think I mean I don't think it has to be like R1 or 2r3 R4 but I think it's describe enough for problem space that'd be fine but I think there's no problem space so then people can look at it and be like now I understand why the thing that like seems obvious is not obvious to you"
  },
  {
    "startTime": "01:50:00",
    "text": "um [Music] yeah that's a I think that's an excellent point challenges I think also like these are great slides and presentations helped a lot like this has been really good today um I think it also would help some people certainly myself you could just show um the stuff that's uh like here's how we Imagine One Way like this is a small piece of a solution right this is a much broader thing so take one instance of it like the car unlock case or the hotel room case and say like look here's sort of what one possible deployment of the full solution might look like with all the pieces and here's where the pieces with that the itfs defining fit in like right here in this little bit but I mean people are getting lost on like what the OS does what which is it the Hilton app is it the wallet you know there's a lot of different things floating around here and different apps and different relay servers and not to say that we're trying to Define that's the only way to deploy it or every way to deploy or anything but just give people a flavor of here's a possible implementation and deployment that uses this for the whole system and here's all the pieces and what they look like I think that would help people understand I I think that's a really good feedback I think you know we kind of index a little bit on on the other side where we we want to make it so agnostic that we didn't want to bring in specific use cases to explore but I think that's a really great point in in trying to like have like a projection of how this works right given like an actual use case or I would have been here like yeah you should have brought in the specific generalized thing that we could use and I would have asked for exactly that because that's ietf and I apologize but you know like we'll get there yeah thanks for that uh just one comment on uh anti-replay uh my impression is so far that it's implemented by the relays uh rather than by the final credential issuer that completes the credential provisioning if that's the case then I can create a downstream relay that memorizes messages"
  },
  {
    "startTime": "01:52:00",
    "text": "and makes it possible to duplicate the conversation to as many parties as I want uh so uh that's something worth thinking about if it's important somehow to avoid replay is that the system can be extended in such a way that replay becomes something yeah so it's kind of uh built in in two different ways so one the relay server because the mailbox is actually deleted um but also if you remember in the first graph we get that provisioning information from the credential Authority so you can think of it as a token that the credential Authority is storing so when that credential Authority then sees that token it'll say like okay that's the person and then say that you got the provisioning information put it somewhere else for a little while and then tried again that credential Authority should also like decline it so they kind of have like two parties um but my recipient can be an actual Downstream relay that facilitates replayability so I can deliver the credential to my own relay which unbeknownst to the real relay is actually a relay that memorizes messages and then that thing can uh not delete messages and allow them to be replayed and all kinds of fun stuff yeah I think I think there's different layers of security that we have to be aware of right I think you know the relay uh replay attack here for the Relay server is something that we'll try to sufficiently address on that relay server part but ultimately I think there's there needs to be an additional uh security when it comes to the actual credential and how that is uh uh uh specked out like for one example I'll give is that for CCC there's also an addition of something called an immobilizer token so you know this is some a unique token that you need to be presented with the car for for um to accept the key and to operate the vehicle so you can't just use the same you know immobilizer token twice so I think this is a combination of um not"
  },
  {
    "startTime": "01:54:00",
    "text": "just relying on the release server itself um being like the end all for for all replay attack I think we'll do what we can on the uh the messaging side of it um but you know I think there's there needs to be additional uh security that we need to kind of look at in the actual credential protocols the themselves all right Nick thank you um I think um we have with the last five minutes I want to get to a couple of administrative stuffer including possibly get if if we can adopt the the draft as a working group document so that's um [Music] uh no I'm gonna ask for adoption of the working group document as a draft as a working group document completely seriously and if you want to be against that you can do that right but I'm not joking no okay yes you can you can have opinions I'm not joking I mean given to tell me this discussion I can't imagine how you possibly think it's ready well you thank you well you can have again right it's perfectly reasonable type of opinions right but oh thank you um so again um if um I will still ask the working group whether you are uh whether it on your for or against adopting the current draft which is linked on the data tracker page as a working group document again this means that the document is a starting point for work and that it is transferred the Change Control is transferred to the working group if people want me to use the hand waving tool for this I can do that all right let's set that up give me a give me a second so it's called The Raft Secret then Charles"
  },
  {
    "startTime": "01:56:00",
    "text": "transfer as all right so thank you all right we'll give it a few more minutes they're about um let's hear the number of people in the room kind of seem to match the the people who have raised their hands at this point we're still getting one or two people chiming in but it's I mean it's about 50 50 at this point which is I guess a little bit too rough consensus to to to go ahead and adopt the work the current draft so what we'll do here is that we'll ask the working groups the the also I'm appealing right now how you just called that like it is below 50 50. and you you know said hey that's not quite rough consensus like no seriously no but the the rest of the state members that we're not going to adopt it right okay all right I don't think that was a good way of characterizing it all right it's fine that's fine yeah exactly that's not consensus at all"
  },
  {
    "startTime": "01:58:01",
    "text": "right exactly it's not consensus total all right which means that we'll and ask the waters to re-spin the document and keep working on it then we'll come back to it to a later version I think what we've heard here is a clear consensus for some sort of requirements document them I think it's a good idea to put that in a separate document for now and then we'll we'll see if that gets merged into whatever whatever this turns out it turns into all right and that's it we're gonna try we'll certainly reschedule a meeting for London and uh we'll see what happens then thank you very much for turning up and thanks for a lot of energetic discussion and that's whether this is a viable solution to the problem you've proposed obviously it is again are there other solutions to this problem yes of course right will this solution work people mostly employable will work you know"
  }
]
