[
  {
    "startTime": "00:00:05",
    "text": "is uh somebody wanting to make a come in at the queue or leave q alright i think we're pretty good i think we're about ready to get started here at uh ietf 114 in uh philadelphia thank you all for uh coming should we just we're we're missing one chair i think all right well we'll get started with some of the formalities here thank you uh for coming uh once again please check in with the on-site tool and wear a mask unless you're presenting at the front of the room and uh you are all probably familiar with the notewell that governs the various policies here at the ietf um and uh here's uh some code of conduct guidelines we'd like to uh remember remind you of to treat each other respect um and speak so you can be understood um these are generally good things"
  },
  {
    "startTime": "00:02:03",
    "text": "we have a minute taker and hopefully there are some folks on uh jabber who can help us if there are things that need to be brought to the mic always remember to state your name all right do we have any agenda bashes i know we do have a request to move flags extension to the end to accommodate a presenter who could not make it here at the beginning of the meeting any other requests to uh for the agenda all right you want to go do talk about document status yeah so hey we got some stuff done since last time believe it or not um we got dtls 1.3 out the door so thanks to everybody for that um ticket requests and exported authenticators [Applause] somebody jim reed asked me about when dtls was going to be done about two and a half years ago my crystal ball was really wrong by the way um we have two other drafts the remaining psk psk related drafts they're an off 48 done which basically means they should be published at any time now um we've got delegated credentials aka subsearch which i believe is in paul's on paul's plate so we need to make sure that he gets through and where he's at we don't have anything in itf last call right now um we have two drafts that we paused the cross and i resumption and tls flags extension waiting on implementations we can i think we're going to go ahead and revisit that um and right now we have um the rc for tls 1.2 and 1.3 that is out for work group last call right now that actually ends august 5th um and then everything else that we have in progress which we'll talk about today and i think that's it i think we're going to go to the the presentations and then we have a slide at the end so these are some scaled or expired working group drafts that kind of were adopted and then kind of got put by the wayside so we're going"
  },
  {
    "startTime": "00:04:02",
    "text": "about whether we're going to try to bring those back or just let them gracefully die sure do i have a clicker or uh i think i do next slide all right i'll just okay uh hi i'm ben schwartz uh wow this sounds loud i uh recently joined as another editor or author on this draft and i'll present some updates on the changes to this draft in version six next slide so there are a bunch of major changes draft six is very different from draft five uh okay one big difference is with profile ids previously it was not uh these were just kind of free form now there's a reserved subset of these there's an iana registry another really important change is that ctls is no longer specified as a compression layer instead this draft specifies ctls as a protocol generator so you define a profile and each profile defines a unique tls like protocol but it is not a compression system it is a new compact tls protocol related to that there are now binary objects describing the templates and finally there's a new system of handshake framing i'll have i have slides to go through each of those points next so the profile ids as byte strings"
  },
  {
    "startTime": "00:06:03",
    "text": "profile ids are now defined as sequences of bytes 1 to 255. if there isn't one specified that means you're using default ctls in other words you're using the ctls syntax but you haven't subsetted the tls standard in any other way if you use a short id an id whose length is four bytes or less that is subject to ayanna registration and in that case your template only includes the profile id the recipient has to understand it has to recognize it as being something it already knows from the iana registry so that means these can only be used in cases where the server knows that the client is going to be sufficiently up to date that it's gotten this entry from the iana registry longer profile ids longer than four bytes are essentially uh pri well they're they're not registered they're free for anybody to use there's they only have significance within a specific deployment and the profile then after the profile id proceeds to lay out all the information that's required to understand what that profile id means next slide okay ctls is no longer a compression layer specifically the previous drafts of ctls structured ctls as a layer that sat basically between tls and its transport so in principle you could take a totally standard tls 1.3 stream and then like maybe even literally in a middle box or in some sort of middleware you could take that encrypted stream and and convert it into a ctls stream and you could convert it back on the other side uh it was a transformation that didn't require access to any of the secrets associated with the connection"
  },
  {
    "startTime": "00:08:01",
    "text": "that has positives and negatives we can talk about it but it seems like the the net consensus after the last discussion was that we would rather have ctos authenticate its own transcript instead of reconstructing a tls transcript and authenticating that so the new draft does this it authenticates its own transcript reconstruction is therefore no longer an implementation requirement you can implement ctls without having to reconstruct the the corresponding standard tls handshake but this has its own problem ctls transcripts are very condensed because they omit a bunch of information that's very important on the assumption that both sides already know it and so now at least in some use cases we want to make sure that both sides actually agree on that information that wasn't exchanged because it they somehow was was already configured ahead of time and to make sure that it matches we've adopted this solution in this draft where we take the shared information the pre-shared information which we call the template and we prepend it to the transcript so it's present in the transcript on both sides and so if there's any disagreement about that the handshake will fail next slide of course putting the template in the transcript and then hashing it into the finished message means that both sides have to agree on it exactly and in draft five and prior the template was described as a json object i can imagine that nobody here would be very excited about trying to figure out how to get byte exact hashes of json objects that are being passed around so in this draft there's still a json format defined but there is also a consistent reproducible binary format defined for the templates that allows us to consistently hash it into the template and finally there's a new system for framing the handshake previous drafts"
  },
  {
    "startTime": "00:10:01",
    "text": "were a little bit ambiguous i think about how the handshake was framed we've decided to cover all our bases basically by supporting both a full-size handshake option which allows you to send giant handshake messages and fragment them in dtls reorder them have them be reassembled in the right order all of that good stuff but in in the case where you don't need gigantic handshake messages you can disable all of that and save a few bytes and just have each of your handshake messages in a single record so this draft is definitely still a work in progress there are a lot of open interesting questions that i've i've attempted to highlight some of them here but there's there's a lot more details open in the draft a lot of uh highlighted open issue or open question tags in the draft so i would encourage anybody who's interested in this to read the draft and and think for yourself and maybe help the editors think through some of these questions uh i wanted to specifically thank ilari leo savara who uh who made a bunch of very very detailed and helpful suggestions on the mailing list uh i think i'm up yeah um first ben thanks i want to thank you for picking this up um uh we've been i mean i've been a little swamped and i really appreciated you like picking the ball up sorry um so i think this first point yeah i think that the answer is almost certainly what you have listed here which is that if we want a compressed electric curves which just define new code points um after all we already have compressed electric curves for x25519 and x448 they just come that way so i think with your p26c if anyone still cares use discourage watching the press is the right answer um and of course you know tails 1.3 doesn't"
  },
  {
    "startTime": "00:12:01",
    "text": "um i'm not sure how i feel about the rest of these um uh i'm a little scared about the admitting of the messages to be honest um uh but i think i'll i'll take that offline uh so i think a mid-empty messages point i'll just point out that that is text that is in the draft right now the draft currently says that empty messages can be omitted but it also has a question in the draft about whether this is going to work right so that was probably something i wrote you know as half asleep i forgot to check in oops um one of one of the things that hillary also raised was the relationship to ddls 1.3 and initially we wanted to have it defined in a way that um it works the compression works for both ddls and dls because for apparent reasons because the protocols at the hancheck layer very very similar but we i think that's also an open issue that we hadn't really gotten to yet we had at one point in time we had worked on the on the framing format from the underlying record layer framing uh and changed that in numerous times but uh i think that's should be added to that list so i'm not sure i understand uh i'll note this is a conversation between the editors so maybe it can happen offline but uh i do think that the current draft uh essentially the current draft is no longer compression layer it's its own protocol but it is essentially a a system for generating both streaming protocols streaming security protocols like tls and datagram oriented security protocols like dtls i do believe they're both fully covered now right uh and that that was an intention and then uh ilari raised that question because he was in his email he was saying that this is he doesn't see the the need for this um where i"
  },
  {
    "startTime": "00:14:00",
    "text": "actually see the need i'm not entirely sure whether we are fully there and specifying sort of the functionality for both dds and uh tls but um yeah i think that's something prototyping will help whether we whether we're really there yet thanks i i interpreted that message as actually supporting the the the work to to to make sure that it was clear that this could be used uh in both okay martin thompson uh so the empty messages one bothers me a little bit um we have i think it's end of early data is probably the one that bothers me the most here we we need that one and we need to know that it's there because that's a signal that we use to to determine the transition point it's not necessary in the datagram versions but it is necessary in the stream versions otherwise we wouldn't have added it so um i think we can't omit them and it's probably better not to worry about that sort of thing okay optimization uh i i think that that sounds like a strong argument uh and the other one that i got up to speak about was the versioning uh as long as you have some sort of context string that goes into the transcript you can change it later you don't have to worry about putting a version number in anywhere or anything like that one just change the context string and i think that'll be fine yeah we we did put a version number in uh at your at your request more or less um yeah i i think it's i like having a version number yeah i mean whichever way you do it um the the problem that you need to solve and i'm not sure if you've worked through all of that is that if you have a version number you have to have expectations about how people handle a version number they don't understand which i imagine at this point is don't use the thing at all yeah yeah"
  },
  {
    "startTime": "00:16:02",
    "text": "hey steven farrell oh sorry i'm like that am i actually yes i am so now you mentioned that instead of any compression there it's now generating different protocols will the security properties of all of those be the same or subtly different or could you make one horribly broken uh i think ecker is going to answer your question um the compression doesn't affect that one way or the other all the analyses that these that i know of were done on a symbolic level assuming that ignoring how things were worked and right in the wire so um so it is plot so like let me need to be clear as far as i know it is it might be possible to produce a profile that was horribly broken where you say like all the max for zero or something but um i do not believe there's compression not affects that sure okay but maybe our last question different the goal is still that all of the same options here will have roughly the same security properties as tls one three i think that's that is right um we we do expect to to have some formal analysis although it's it's very tricky i think to figure out what exactly the question is so let me just like try to narrow that very slightly um there were a number of proposals to make um uh so i think roughly he's doing some work here so it's a concrete example um supposing that you make the transformation that some people try to make which is you remove the finish max and you replace them and you rely entirely on the aed then you don't have um they don't have um you see between the uh the key key exchange and the and the hint and the encryption layer that we ordered nearly what right and so under those circumstances for instance it would not be safe to replace um the cypher suite with one that had a very short map as well whereas it would be it would be quasi-safe with those 1.3 as long as you know what you're doing quasi by which i mean like of course you have a short mac so you get what you get i think jonathan should be nice yeah jonathan's next thank you"
  },
  {
    "startTime": "00:18:03",
    "text": "can you hear me yes yes so two two things one um i actually spoke with punch out i don't really care if we emit empty messages per se just so long as there's only one valid way of doing it like either everyone must omit or no one may ever admit omit is fine um but just like even if you say both must be accepted people won't implement that um and with respect to formal analysis i think the only version that uh the the only analysis that i'm aware of that actually models the wire format is the one we did with tls one three i think all of the others already emitted the wire format um so given that this is mostly a wire format change i think that's where you'd have to start performing analysis um there were two other things we enabled abstinent performance analysis and maybe we should just do it the other way around we describe it and then um have the community like kartik and uh jonathan to to do a formal analysis analysis is the use of the randomness of random numbers initially in client hello and cervelo uh that was we debated whether we can get rid of those um and the other one was to omit the finished message um and that may be another sort of exploration because those would be actually some optimizations in terms of messages being transmitted as well i don't know if that is captured in in one of the lists because we had those discussions earlier in previous presentations but i didn't come to a conclusion on those yeah i think that some of those points are covered in the sort of open"
  },
  {
    "startTime": "00:20:00",
    "text": "questions embedded in the draft text but i i don't have them covered on this slide okay all set perfect thank you ben next up we have stephen for a well-known ech great thank you what's the next slide uh so this was presented back at dispatch in itf 113. there was some discussion on that list and it was eventually ended up under the tls list and was discussed there but it was presented previously just roughly are do people want me to kind of go through that presentation content again or will i skip through it quickly how many people would like me to skip through it quickly good that's a plan okay next one so here's a summary basically you know we have a ech test servers at that url ech keys are updated regularly and need to end up in the dns and they're generated by the web server and so that creates a problem for our setup and this proposes a way to kind of deal with that problem the you know it's not the case that this is intended to be the one true way of publishing ech keys um there's probably much more simple ways that will work for lots of people um and next slide so there's an example basically we're using a well-known url to get the content to put in the https resource record and next slide there's a resource record next slide one of the things about this is i don't know anything about cdns but uh some people do so uh i had a meeting at lunch with rich and ben schwartz uh who have raised comments on this and they've agreed to kind of help with the draft and be co-authors that should help that there's the next slide there's a picture"
  },
  {
    "startTime": "00:22:00",
    "text": "next slide stop me if you want me to just go faster or slower it kind of works it's a work in progress it'll probably change a little bit next slide there is a description of what's in the response uh which is relatively obvious i think um it has the ech config list a ttl you'd like and which ports on the web server are using that next slide okay so these are the questions these are the issues that were raised on the list mostly from ben and thanks again ben next so um one an alternative you could think of for how to get the ech information out of a web server is to use the retry configs um and that could work i think um the idea is you just make a kind of a greased connection or something to the the web server and it would give you the retry configs and then you could go and publish that in the dns if you like it and so on uh that would require changes to ech to the draft because uh for a few reasons to add the extra info if you need it like ttls or ports whatever and also it's not clear that the set of keys loaded in a server at a given moment is exactly what you want published in the dns at that moment so you'd have to say something about what to put in something more about what to put in retry configs which we don't currently so you could change the ec h draft and do it but i don't think that's really satisfactory so i think that doesn't particularly work well we might change our minds but that's what i think next one unless somebody if you have any comments or want to disagree just jump to the mic please another comment was you could create another resource record somewhere that basically says here's what i'd like into an scvp svcb or https rr again that could work the difference is you'd lose the server authentication that you get with the well-known url exactly the properties of having that server authentication is something to think about but uh you'd lose it and again you know for at least for my setup uh it wouldn't really solve the problem because i still need some way to get the public key for ech out of the web"
  },
  {
    "startTime": "00:24:02",
    "text": "server and into dns infrastructure so i think the same about that but again i might be wrong next one the question is uh so it looks like this you know in theory you could be much more generic about this and say we'd like to provide a mechanism for a tls server or a web server to publish everything it wants in a svcb or https uri and that could get very complicated and so you could aim for more generic uh it seems to me at least for now that it's the ech keys that seem to be changing regularly um and that's kind of motivating this and seems to be maybe a better approach is to try to do something easy specific okay okay next uh a point that then raised which i think is is fair enough is that the air you may need a lpn information in this to publish in the resource record and i think that's correct so that should be added uh i'm not i don't know what to do about the no default api really um so [Music] yeah you can ignore the side now for now unless we get into a discussion about it next uh there could be other content that that you'd like to see in https that end up essentially reflected in the inner client hello in ech and if there is i had a look through i didn't see anything obvious but if there is we should think about that and then probably add it to this mechanism if we go ahead with it and next uh svcb is a kind of a bit of a mystery to me to be honest it's it's it allows some complicated options it seems um so i've kind of had a look through it and we need to kind of think through some of the other use cases that exist and make sure that we're not doing something stupid um yep other points that were raised in the discussion um rob made a point about not not mentioning that the sheridan split mode"
  },
  {
    "startTime": "00:26:00",
    "text": "topologies mnot said it might need a well-known url that's fair enough um ben said the path was wrong i didn't understand why but nevermind and lastly i think looking through it recently there's um either you have a prefix poor prefix queue name in your https or or you can have a port in the https or or which i didn't understand what the right approach to that would be um and we have address hints that can go in these rr's and i don't know if they should be reflected in this or not and i think that's the last slide other than process slides and one more that's my cue actually okay so when we first designed ech one of the problems we were concerned with was desynchronization between the ecs configuration and the ip address and so this is addressed in um so the concern here right is you have two two cdn's right and so you have to get that axis in front of them and you get the ech from one and ip from the other right and so this is addressed in standard ech by having the whole thing blocked up in the https rr and then the one sort of lacuna is the um uh is the you know retry mode with the public name but that happens like seconds afterwards it's like if you cheat if you change your spology that in that case like sorry bad day but because you have a long tt for you a lot of ttl here that's much longer than that that is not seconds but it's like you know hundreds of seconds that easily can produce the situation we're talking about here and so i and so i'm on so i'm trying to figure out how you think that yeah it's fixed so i didn't quite get the questions either sorry yeah so if you will because because this structure allows the client to cache the ecs configure for very long period of time right the http client yes yeah um then you can easily run a situation we have a topology shift underneath and now you're talking to a cdn which doesn't in fact handle this user at all or or does handle that has a different ec i think ben behind you looks like he wants to answer the question hi uh so i i think the the distinction here"
  },
  {
    "startTime": "00:28:01",
    "text": "is that this draft claims that the only http client for this is running inside the authoritative dns server this is only for communication between a an http server and a dns server or yeah some dns infrastructure yeah okay so it's not this is not for use like by any by clients are unaffiliated uh that's not the use case i have we should think through what might happen if somebody else starts to use it yes okay let that i mean that i mean so i'm provisionally prepared to believe that like it's fine under the situation the case you just laid out then um but then i think it is a very clear warning that this is not this is not this is not a replacement for http https um rr for generic clients because we don't want people getting in that box mode sure that's definitely not the intent for this yeah i agree um okay just before you go back i don't know so the next steps basically we're i had a meeting with ben and uh rich they're gonna join his co-authors they said unless they hate me after this um and we'll probably we'll ask the chairs whether we should create a gif uh repo for this immediately or whatever uh and i think ultimately the aim would be to whenever you hit publication request for ech maybe to look for a working class called roundabout then but not before okay i think we have a ted online uh thanks so one of my points was actually i think covered to some extent by by eckerd i am i'm a bit concerned here that the hashing infrastructure that's there for http uh is not really being considered by this draft i think your answer that uh this is intended for a very limited use case of the http server talking to a specific um dns infrastructure"
  },
  {
    "startTime": "00:30:00",
    "text": "um somewhat removes the possibility that there's a random set of uh transparent caches in the middle but especially if you think there might be a different use case in the future you really do need to think through what the caching architecture looks like here and the interaction between the the time to live that might be present in the in the http caches which is not always obedient to things uh in in the instructions and how you would deal with that like whether you'd use e-tags or something like that but the other bit of this is really this doesn't sound real baked yet but the well-known uri registry does allow you to register provisionals and i i would suggest that if you go through 8615 process the one thing you might actually do here is register a provisional and run some experiments and write the write this as an experimental document to see whether this turned out to be worth doing because it looks to me from the description like a lot of what you're trying to tackle here is the case where the people who run the http infrastructure don't in fact also control the dns infrastructure and therefore can't use one of the other dns related mechanisms for this and a little bit of experimentation to find out what uptake you get on a provisional version of this might actually be useful for figuring out whether this ought to be permanent or generalized or something else thanks okay two good points thank you who's next and ben schwartz uh i'll just say i do prefer the the more general approach here as stephen well knows i think it would be better to not just convey ech but but treat this as a general way for http or engines to describe themselves to their dns infrastructure but uh steven and i are going to spend a lot of time talking about that and we'll see where it goes yeah the authors will agree at the end"
  },
  {
    "startTime": "00:32:04",
    "text": "uh so i guess i'm up next ben k duck uh so on this question of like is this mechanism just used for the dns server to talk to the http server and get its config versus being used by our http clients um i think if we do want to limit it to just the dns server being the thing using this that's actually a reason to specifically not have a well-known url because then it's explicitly something you have to configure and that gives us more confidence that random clients are not going to try to use it and we don't have to try to think through all of the behavior and consequences for them because if we do define a well-known i think we really need to consider those cases and see if there's any gotchas that we need to work around sure yeah okay that's a reasonable argument i i don't know yet if i agree entirely but i think it's a reasonable argument for sure yeah alessandro gadini um i just have a quick comment about the json description um the ports fields descriptions talks about specifically tcp ports is there any reason why those need to be tcp ports and not say quick ports uh no it's uh it just talks about ports because that's what i've implemented and that's what i used and that's that's as far as we've got so so yeah it might be a bit more generic i guess sure like the language yeah okay so i i guess that's the plan and uh we'll work on it that's good we'll get there get repository set up for you great thanks all right next we have shawn to give the 847 all right exciting times registries um yeah i know exactly next slide please just a quick refresher we had an"
  },
  {
    "startTime": "00:34:01",
    "text": "individual draft that we took to sag to try to figure out what we wanted to do to change the recommended column because that's really all this update is really about and the consensus was to add a d which basically is discouraged or weak and so this 01 version of the working group draft is an attempt to trying to do that so there might be some controversial uh selections here joe and i basically just threw them down to see what was going to happen um also note there are some other changes in this version which are trying to make it a little bit easier on iana to be like we changed these ones we didn't change these other ones to kind of make it a little a little clearer um it's this change has been of a bit of a pain ass because uh there was new registrations obviously since 847 bits was written so now i have to explain all those ones that are already covered so it's kind of painful but whatever all right next so we did some minor updates to the references too the first extension types value we went through each registry of the tls registry and said what are we going to change so the two that we came up with were truncated hmac and connection id so we we marked those as d um i'm just going to roll through these and people can jump up and scream and yell um the cipher suit registries i'm hoping that all of the most of these will be done by this obsolete kex like i can put myself in the cube but why is caching deprecated we just registered like 30 minutes so there's two there's two right there was one that was duplicated and then one that wasn't so this is the one that's like don't use this one it's already been deprecated oh okay isn't that reserved uh it was marked as i don't i think it was marked as no before so okay yeah but reserved essentially i think this is distinguished between let's distinguish the things which are valid code points but we think we're bad ideas and things which are like not really valid code points anymore and that seems like that seems like it's in the in the second category yes so but so again so you think we should just make that in because there's a there's a couple of those actually i think we should i think we should rename it to underscore capital reserved and then make it n or d"
  },
  {
    "startTime": "00:36:00",
    "text": "i don't care okay i think all i guess all the my position is all the reserved ones like maybe we may need like another like i mean like we like it's like in a different there's a different category it's like it's like this is like not even a valid codeplay anymore well because okay market reserve would call it date that'd be fine okay sean my name is not tron but uh the connection id because you write deprecated uh does that refer to uh one of the connection id values which we allocated before that and it's used in deployments and that's the one you want to refer to d or you want to deprecate the whole connection id fingerprint connection and the registry one is connection id deprecated i mean that's actually the string that's the one that i want to get rid of the one that that's the right one that you guys actually deployed is the other value that's good to hear because i almost fell off yeah okay no no definitely not trying to pull the rug out from you um the cypher suit registry i'm hoping that we're going to review that after we get through the deprecated obsolete kecks draft because hopefully it's going to take them all out for us now there's some new ones which was probably as a result of last time we did this draft that there were some orphaned registries that were tls 1.2 specific and we were lazy and didn't address them but tls 1.2 is going to be around for a while and now we've added this d we figured we had to go through these so here's another list of things um registries that are that are orphaned that we need to address so next so the first one hash algorithms i highlighted the ones in d um just to show that they were different i basically picked anything that was quote unquote weak so md5 shot one shot 224 and then for signature algorithms you know made them n went for anonymous dsa and the ghost algorithms again i'm just kind of waiting to see if anybody's going to jump up and throw something at me but we thought these seem pretty reasonable"
  },
  {
    "startTime": "00:38:00",
    "text": "all right next and then we have these uh certificate types um we we basically just went through and said um obviously the fortesa one we put d um and the ephemeral the rsa ephemeral diffie-hellman reserve who made those d and then for the fixed um well you can see him on the thing so all right i'm glad to see no one is running up and trying to throw anything at me but you get the mic uh what is the impact of removing the anonymous signature from the registry does it break the existing anon ciphers in tls12 in some sense uh that's the one that's back right yes that one the anonymous what what are we doing there so i think that that was that was from a long time ago i don't remember but we're it's just being marked and so it's still out there if people are actually using it then they can keep on using it um i'm using it on cyphers it's the default in postfix it's preferring on when when neither side cares to authenticate anybody right okay okay check into that one sean in the chat uh martin suggested both anonymous and rsa should both be marked as d is d i mean so this has no this doesn't like break anything but like the position the ietf these are bad and therefore it should say n d right yes so you think everything that's in the signature algorithm that's that's an n should be a d sorry i didn't know i think that the things the things in the century algorithm that are that are not that are bad should be a d and things that are like meh should be an n and so maybe rsa should and so it's like i can see rsa being an n but anonymous should be a d i should dsa"
  },
  {
    "startTime": "00:40:00",
    "text": "i'm not gonna fight you on the rsa ben schwartz uh shot 224 uh nobody is it is it broken is it just like weird maybe it should be n yeah i did that once and then i made it d so it's kind of martin thompson i think i think the standard that we need to be applying here is that if there isn't an rfc that we can all get behind that says this is bad then it shouldn't say d either i think that's really the standard that i would prefer us to be applying here so when it says d it means the itf think this is all think this is bad now i think that some of these are bad and we should probably publish an rfc that says that but um i i'd prefer that we at least make our position very very clear in terms of what the the rules are for for when these get labeled this way no i agree with you and i approach it should be this rfc i i posed this rsc on a paragraph saying anonymous is bad and dsa is bad and then we'll mark them d all right um we can do that that's what this is and i think that we should say one is bad know d5 is bad and chao 24 is we think it's fine but we don't like not recommended this was an n okay like i guess like my gloss of d is we think this is bad and like quite likely it's not like gonna like damage you if you use it and you should not use it okay as opposed to it's just like some vanity thing that we don't care about right all right so let's go past this one and then we have some open issues where we have elliptic curve related uh registries and so one of the things was that we thought hey maybe we could put this in the deputy uh obsolete keck straps but you know these are the these are the six registered values maybe we just stick it in our draft and figure out what we want to do with it i didn't really know what to do with these so"
  },
  {
    "startTime": "00:42:08",
    "text": "need the first one right d d d d okay yeah i mean the only ones anybody uses are like anybody should use and do that you guys use are uncompressed and named curve great and then all the other ones are just like i'm like we know the other ones like bad news all right that that's useful too i figure we'll just put him in our draft unless the authors of the other draft want to argue arm us a little not make sure the compressor is really bad news but like no one uses it so like might as well so um the reason that you don't want the other ones and you want them to be d is if you put them on the wire things will explode right it's not that they're broken it's not that they're fundamentally insecure it's just that if you put them on the wire things will break and so we can actively discourage people from doing that so let's do that all right and i think that's it i'll revise and move on and i'll relinquish the rest of the time oh all right well i didn't notice yes ben are you still in the queue yeah [Music] so about the explicit curve things i believe they are broken to some extent uh there's an attack uh by nicosia and it showed how to exploit them to do some damage um just pointing that out yeah yeah i agree explicit curves are like bad news it was it was the compress that i wasn't saying where they were just the the supplies occurs definitely we should forbid and the compressed are kind of like like just nobody uses them and martin says it's gonna make things blow up so i think we're i think we're in agreement all right okay great"
  },
  {
    "startTime": "00:44:00",
    "text": "there we go all right thanks sean yeah hey rod you're next yeah let me show the slice okay all right yeah thanks uh so my name is nimrod of iran my co-author carrick bottle is also here and we would like to continue deprecating obsolete exchange methods in tls uh this document which is now a working group item deprecates our sake exchange and static finance fair development and limits uh finite field development in its ephemeral form only to reasonable groups with sufficient security and it also discourages uh static elliptical based different during the last working group meeting at itf 113 uh we were asked to verify that this document should fall under this walking group the tls working group and the chairs kindly checked with the security area area director paul wooters and he confirmed that the document indeed belongs to this group so uh thanks for writing raising this issue uh our aim with this uh presentation is to advance this document towards our working group last call so the only open issue or issues we are aware of uh is regarding uh groups in ffdig currently the document safe lists several standardized and widely used groups and are also not standardized but widely used groups such as the one that ships with postfix"
  },
  {
    "startTime": "00:46:02",
    "text": "and there's the question of whether the document should safe list them as well and we are leaning towards uh yes that it should save list any widely used group that is that provides sufficient security uh the other part of this issue is uh what happens when the client encounters a so-called bad group so uh if the group is uh of an appropriate size it is safe uh security-wise for the client to verify the group structure and proceed with the connection uh if the group is safe we could add language to the document allowing that however performing this verification is computationally expensive so if the client is unwilling to invest in performing this verification or if we choose to disallow non-safe listed groups altogether uh does the question of what behavior what behavior the document should specify uh whether the client must abort the connection in such circumstances or that it merely should abort the connection and that's it for us from us uh let me say again that we hope to get this to working group last call so if anyone [Music] has questions or comments please join me thanks i say that oe is uh in the in the queue yeah please go ahead yeah there you go please go ahead i think the list is uh overly strict the the list of the algorithms to abolish especially considering"
  },
  {
    "startTime": "00:48:01",
    "text": "what implication move to or adding post quantum stuff will have i'm sorry you're bringing it to the beginning could you repeat that my apologies uh that's okay i said that in my opinion the set of algorithms to proscribe is unnecessarily strict especially in view of the protocol logic that post-quantum algorithms will impose i think i should stop here at least for now all right uh i'm i'm not sure uh i i got your intent but uh we can take it to the list or maybe if we have time during this session we can you can continue all right all right thanks okay uh scott floor cisco systems uh about uh mike okay uh scott flora cisco systems uh as for checking for the group structure unless it's a safe crime we do not pass enough informa uh information to to to check the group structure and even a safe prime it's it's it's it's not cheap i would recommend just a abolish just uh just forbidding all uh uh any anything other than a name uh name group thank you yeah all right thanks mike ellsworth this is not really a comment on your draft but more of a rant um i'm a pen tester professionally and in the last like six months i've seen automated scanning tools are starting to freak out about um"
  },
  {
    "startTime": "00:50:01",
    "text": "like group dh groups that are not random or the dh groups that the tool knows about and i've had banks ask me like how do i generate my own dh params and put them in tomcat and i don't know where the tools got this idea or how we can like but it's super frustrating coming up like almost weekly at this point all right thanks uh hi victor uh google uh uh thanks for singling out postfix i think it's far from the only one that has you know built-in default groups uh and even in postfix that depending on the version you might see more than one it changed in 3.7 release so i don't know whether it's possible to whack them all all the safe but not a priori known built-in groups and various products that seems like a difficult challenge to keep track of them all i see thanks i think ben keduck wanted to speak he's online yeah hi yeah ben katek back and a nice segue from victor's comment which uh is just me sort of spitballing brainstorming on the fly here but what would would we get enough if we went and made it easy to register new named groups for these things that are already wide it might be deployed such as what postx has or anything else like would that get us enough enough properties that we would be able to leverage that for the purposes of this document i'm not sure why i got the question well so like we have some widely deployed groups that are not like the specific well-known named groups that are currently in our infrastructure and so we could say okay well we know what these are they're safe let's name them and now we have named groups that we could treat on a more even footing to the other things that we have"
  },
  {
    "startTime": "00:52:01",
    "text": "but i don't remember the details of whether that's actually quite enough for this purpose um so it's not necessarily a question for you as much as to the room yeah um all right thanks i'm not sure how that would work to be honest i'm not familiar enough with the details thanks all right this is daniel kahn gilmore from the aclu sorry i failed to get in the queue electronically um uh i wanted to reflect on the uh the pen testing comment um and where that uh where that idea comes from right so uh the concern is if you have a known group then some adversary can do a precomputation based attack against the known groups therefore it feels safer to do an arbitrary group in practice in the whole ecosystem given that you can't as a client tell whether that's a known group or not um that's not safe right because we you could be attacked by the server that you're talking to who's just giving you bad groups or somebody could have misgenerated a group so there's a lot to be said for us as a standards organization to say that we think that approach of choosing random groups is is a bad idea but that's not going to stop people who are afraid of precomputation attacks by a powerful adversary against name groups from raising the same kinds of concerns that you talked about so uh maybe what the specification needs to do is say unless there was a known pre-agreement with the third with with the peer that you're talking with right we don't i don't believe anybody here actually thinks that it's wrong for a private organization to use their own groups that they've done their own verification on that they could that they could list right i'm not recommending people do that but the the pushback that you're going to get from these pen testing tools needs to we need to be able to say this pushback is wrong and here's why and here's a statement that understands why"
  },
  {
    "startTime": "00:54:01",
    "text": "the pen testing tools thought they had the right idea we need to acknowledge that concern so that we can actually get them to stop making these requests right and so i don't know i'm not sure exactly the right way to do that in this in this wording i like ben's suggestion of like let's have a a registry that people can put you know widely distributed groups in that actually have been checked um but i but i'm very reluctant to like i don't think just the fact that we say hey don't use anything like this will fix this um pen testing tool complaint problem i think we need to we need to address it head on yeah let me add that i think all of these groups are kind of on their way out so this is finite field dpm and uh people are like in the process of switching to ecdh i would hope uh thanks um yeah please go ahead martin yeah martin thompson the um discussion in in chat here is kind of interesting i think that there's several of us who sort of realized that in tls12 and earlier using the ffdhe groups which only specify the um the one value essentially which doesn't let you do the validation of scot point points out the only way that you can do that safely is to have a list of values that you you would accept and i've implemented that with the 79 19 groups and we just can't turn that on because in practice people use other ones um and ultimately we concluded that the only safe way to do this was to turn off ffdhe in tls12 and you can do it in one three because you have the named groups but um we couldn't we couldn't turn it um 79 19 on to tls 1.2 because it's just impractical and then with people going off and generating their own groups you've got no way of knowing that they're okay a priori so this is exactly the point"
  },
  {
    "startTime": "00:56:00",
    "text": "that dkg made if you've got your own private agreement that's great but you can also have your own private protocol at that point so um we're not adding a lot of value here i tend to agree with david benjamin which is just a flat prohibition on the use of ffdhe in tls 1.2 would be the the most sensible thing to do here that would be a major revision to the document but we can enjoy that as well thanks uh yeah um [Music] uh i hope i'm pronouncing your name right uh you're in the cube let's go ahead yes you are and i wanted to agree with the previous speaker and say that in my opinion we should neither recommend nor prescribe use of those how do i call it special groups if user organization believes that it knows enough about them it is not our job to tell them otherwise besides in the likelihood they do know enough thank you so could you repeat that last part of the sentence i said in all likelihood if they turn to that solution they probably do know enough to use it it's not out of ignorance that they made that choice all right thanks uh any other questions or comments all right so i guess i will try to summarize the points that everyone brought up and take it to the list thanks all right thanks nimrod"
  },
  {
    "startTime": "00:58:02",
    "text": "now we'll move into the individual draft presentation starting with the uh yes uh sbcb validation requests for details from 0.3 hi my name is rob siegers i'm with the faa next slide please so in global aviation we are defining a trust framework uh to be able to use pki and to harmonize and map commercial aviation identities and access requirements to a common set of operating rules something that may seem very common within the internet and within even some examples of u.s federal bridge but it's have never been done so far in aviation and we have been using something that has not been used very much which is the server based certificate certificate validation protocol and to validate trust and identity because one of the challenges in aviation is that you have a lot of different organizations that are not centralized uh you have iko that operate on a principle of state sovereignty and the software is quite often custom and developed owned and operated and managed independently so there's not no easy way to say i can um you know send out trust lists with my software updates to the different entities and then like with ssl on the web you you can trust who connect who i am when you connect to me so the interoperability is key and we have to use standardized protocols next"
  },
  {
    "startTime": "01:00:00",
    "text": "slide please so aviation traditionally has been using a lot of custom protocols and we're moving away from that and i have an agreement with iko communication panel airing 858 for avionics and also with rtca subcommittee 223 for air-to-ground communication that if we can get this to an ietf standard that they are adopting this as part of their implementation of the ip services for aviation and we are moving from real old a cars via europe having used osi to now ip services which is a really big step for aviation and using trustless and crls for this purpose is very difficult because you have a lot of entities uh flying entities aircraft with different commercial airlines that all have to communicate via data communications with the with different air navigation service providers in 193 countries and the airlines so you can see it becomes a big maintenance problem for the aircraft itself in that case even if you use short-lived certificates and so grant certification validation on the aircraft using suv validation basically would only require a very small one or a few trust anchors that don't change and we are proposing a new svp validation extension to remove the burden of the sevp request from the aircraft client and having the ground server making the scpp request provide the result to the client and therefore also reducing the"
  },
  {
    "startTime": "01:02:00",
    "text": "complexity and the cost of avionics software to have to calculate uh the trust path and i'm handing it over to ashley xlite hi i'm ashley kaufman is this too tall sorry is that better okay um i'm ashley cottman uh so this shows a diagram of how i'm still not close enough okay is that better all right is that better all right sorry i don't speak loudly to start with um okay so this shows a diagram of how it could be used in aviation um so in our case the aircraft is the dtls client um when it sends down the hello message to the ground system it would include with it this new dtls extension of scvp validation request um and a structure which optionally includes a list of the scvp responders that it trusts if it does not include any then it insinuates it's explicitly known by the ground system which scvp responders the aircraft trusts it also can optionally send down a list of trustless trust anchors if it includes the trust anchors and the certificate path has to terminate at one of those trust anchors if not it is because the scvp server has been pre-configured with the trust anchor with which to terminate the path and finally it optionally can include scbp request settings um so we've defined a few of these and i'll show those later but the idea is to keep those request settings small to keep the request size down and only to include a minimum of what you need to optimize the request for the aircraft"
  },
  {
    "startTime": "01:04:03",
    "text": "when the ground system receives that validation request it optionally can have a cash it's suggested to have a cash and if there is a matching value in the cash to return that up if not to translate that validation request into an seb cbp cv request object and send it to the sevp server and receive back the response from that server the response is signed by the trusted suvp server so it can be trusted by the aircraft and it is sent back up to the aircraft with the certificate of the server next slide please all right so this shows it in a simplified handshake diagram so you can see there's very little changes um to the actual handshakes it's a extension on the client hello message a validation request for this message we have defined it for type scvp but have allowed it to be expanded to other validation protocols as well for future use and um then the sevp cv request and cv response is um existing that's that's not new um it's new to incorporated into the tls server um and then there's a new extension to the um certificate message um of validation request with the path validation information again it's defined for type scpp and would include that cv response back to the aircraft or in this case back to the tls client so for the scvp validation request type there is a mapping of those extensions that i mentioned earlier between the path validation request"
  },
  {
    "startTime": "01:06:00",
    "text": "message and the cv request message that's defined in the rfc as well or in the proposal as well and um yeah i think that pretty much covers feel like i talked really fast there's got to be some questions oh okay all right yeah any questions uh we'll do the question yeah ben go ahead hi ben kaydock so i guess the the tls part of this seems to make a lot of sense is pretty straightforward uh and it seems completely reasonable i'm not sure if we are proposing or saying that we need to additionally specify the sort of right hand column on this exchange on the current slide where the tls server goes to the scpp responder does that exist already so not from the tls server so the the protocol the scbp protocol exists um today it would be adding that functionality to the tls server to make the call and receive the response uh but like the but that's more a matter of coding in the server than it is like defining the protocol i guess that's my question um so there is a a mapping from the request message coming from the client to the request going to the scbp server that's defined uh in the proposal um and then there are um there are certain um values that are only known to the server that need to be checked in the response coming back to verify that the the response is valid before passing it up to the aircraft"
  },
  {
    "startTime": "01:08:00",
    "text": "um so there's a bit there's a bit more work to do okay thanks yuri uh do you have any concern that using a full-blown dtls could introduce an unnecessary expense on uh on a cypher suite negotiation and such you want to take that rob in in the in my experience in my experience using or being in constrained environment we decided not to use dtls because we did not need that much of flexibility and negotiation but we cared very much about bits that have to cross the air do you have similar concerns yes yuri um this is rob siegel's responding so sc223 the airground subcommittee from rtca has profiled the dtls protocol down to what they exactly need and to ensure that that doesn't become an issue and i was actually very interested to hear about the compressed tls because that may be actually an option to further encode that so thank you uh hi this is hannes uh this is sort of more in response to uri because uh this topic comes up regularly um we've gone through this numerous times in the meanwhile on the question of like is ddls something that you can use on iot"
  },
  {
    "startTime": "01:10:02",
    "text": "devices and the answer is look at the papers look at the documents we've done the profile it's deployed in millions of devices even dls is deployed in millions of iot devices so like this topic has been answered uh so there's as you said like if you don't send everything you have over the over the air for no good reason then you are completely fine hi eric um i just i just want to uh quickly add here that iot can have different constraints there is a computational constraint and there is bandwidth constraint right i was talking about the second i believe honestly talking about all these he does work on iot devices um so uh erica scroll um so just i just want to see if i can sharpen ben's point a little bit to make sure i understand as i understand it this is an entirely stock scvp server on the right correct good okay um so this does this seems this is quite reasonable um we talked on email i think a little bit um i guess my question is what do you want um do you want this adopted by the working group do you want us to give you a code point what are you hoping for here um we would like the help from the working group to get this to a standards and um we invite everyone to um review and comment and to make sure it's uh a good approach okay so it sounds like you're asking for working group adoption yes please um i i guess so i i'm sort of provisionally in favor of that um i guess my one question would be um something we often have situations where an external body wants us to do something and where we have like a very thin kind of like relationship with them with like a couple people are you the people we're talking to are there other people that sort of show up and and help us out because like the the world um the plan was going forward to get uh airbus boeing"
  },
  {
    "startTime": "01:12:01",
    "text": "uh collins uh involved fantastic i just want to make sure we actually capture the entire space thank you that's correct bob squitz um i've uh rob segers has pulled me into this uh fun and games and so i can uh answer that yes the people at the table are the the airframe manufacturers the uh other national caas uh the uh the airline industry a number of the players are there at the table and how they're going to do this because they really have a serious issue they need to address i feel that players are there they are dedicated to get this done they do have a a reasonable time frame because it does take time to make the changes but they do want to get into their proof of concept so they have a commitment going forward yes there are changes on the on the uh the tls server side that it has to now support this particular extension but the number of those servers which are around the world is a manageable number um and again the parties that own these things at the the national airports and so forth there we have enough of them i think committed that the rest will then follow along the big players are committed and the rest will participate so i think you have the community of interest for this and uh it's worth the work group putting their knowledge behind to make sure this is done right because this has international consequences if it's not done right thank you all right thank you um can we get a just a quick show of hands for folks in the room who have read the draft all right not a whole lot but there's probably some more online um we'll uh convene amongst ourselves and take it to the list i think thank you so much"
  },
  {
    "startTime": "01:14:00",
    "text": "all right hannes i think you're next okay um some of you may have been at the hot rc event yesterday and where i talked about this new work now i focus more on the dls related part and go a little bit more into details this is obviously new so nowhere close to anything asking for adoption more figuring out whether any one of you is interested in that type of activity as you know i work for arm was previously mentioned in my side of the industry there's a lot of excitement in defining new hardware extension for coming up with new forms of isolation which then obviously bubble up in operating systems um and also demonstrating that you have these hardware capabilities and this isolation capabilities to other parties and that's happens in form of at the station okay next slide so we have um since there are some couple of or various projects ongoing if you look at the confidential computing consortium you see where some of those or how some of those activities look like that utilize these new forms of software isolation you see that um there are various different ways to communicate app station information from the device out to um whatever type of relying party and so we are trying to make an attempt to generalize channelize the solution a little bit to avoid having everyone come up with their own technique which is doing more or less the same and what many of those mechanisms do is they stuff something into dls for uh fairly obvious reasons because you have to establish a dls connection uh very early in the uh interaction anyway"
  },
  {
    "startTime": "01:16:00",
    "text": "and so what we wanted to do is um we want to do taking the work of rats support their two models um if you don't know what the background check in a passport model is um there's a good architecture document in the rads group explaining it and we also wanted to support different at the station formats or at the station technologies like dbms and um some of the stuff we have come up with in arm with um the entity at the station token and also we wanted to be agnostic to the de technology the underlying technology whether that's our most recent architecture called ambi arm b9 or older things which um you guys are all using in your phones in your tablets and uh big fangs being uh loyal customers um next slide and technically um it sounded like at the beginning very simple we obviously need to add an extension for the negotiation of this new feature straightforward we wanted to use the certificate types because we are conveying the attestation information in the certificate payload but unfortunately we had to stuff in a new field nons which is used for freshness of the produce data station information so that sort of made the reuse a little bit more complicated and um obviously as i said the content in the certificate certificate messages then changed what it actually i'll explain on the next slide what this content of the certificate message is but in in many cases the attestation information that is produced by the hardware or by software hardware combination is um something like i linked an example in case of what we do uh it's called the arm platform security architecture initial attestation token some fancy name that our marketing people came up with and that uh sort of captures what the hardware is and also what the state the"
  },
  {
    "startTime": "01:18:02",
    "text": "initial state at the boot time the software actually uh what it compromises what the different components are quite useful information obviously um but for the dls exchange you need more than just having that token which uh you could describe as a bare token you need um you need a key associated with it which many of those attestation technologies today that are out in the field don't provide and so we had to augment that a little bit and on the next slide you see how we did that nothing super fancy but still worthwhile to talk about also obviously described in a document so here's an instantiation of how this looks like in a in a typical scenario so the device is split into in this case uh into two parts um which is like the part where the linux runs uh one um sort of compartment um and another one uh which is here called the secure world which runs um something like opti as a as an operating system so they have different operating systems running at the same time in different software isolation containers and if the dls stack is in in running in linux as an application and then sort of communicates with this um secure world side with what in where an attestation service is and that talks to a specific um um in this case a security engine like a dpm or something else to get the other station information and then it bubbles up but as i said that token by itself won't do the job so there's another layer needed where the device at some point in time generates a public private keypair and uh produces uh an at the station a key at this high quality key at the station token which is conceptually"
  },
  {
    "startTime": "01:20:02",
    "text": "um you could think of it as a sibo web document with a proof of possession key that is then used in the dls handshake to actually demonstrate the possession of the private key and that happens that is generated inside this um the secure world so it's a little bit um more nuanced but sticking together a couple of idf technologies in the end in the dbm case there's also some w3c attestation format involved as well because they use their own um sort of technique echo you have questions yeah um so you're probably gonna you're probably gonna tell me there's some internal reason why this won't work um which i'm willing to accept but um is this is there one key or two keys like does this look like tls client auth or does it look like with a funny certificate attached to it or like something else so there's there's one key there's one key a separate key to sign the um app station information the initial platform at the station token yeah and then there's another key uh that is used for the dls uh client authentication right and so and so is this just a new certificate type fundamentally fundamentally yes okay um i just couldn't use the same uh payload um or extension because i had to put the nonce in there and it was in the original certificate type extension there was no place to put the nonce because the nonce comes from the comes from the verifier yes in in it comes from the verifier extruder through the so that's why there are these two types of models in in rats um so if in the background check model the nonce comes in all cases it comes from the verifier but in the background check model it then gets channeled over the uh the dls exchange the dls handshake right i'm just i guess i'm just i just i'm trying to figure out is there's some way to sort of like cheat this into the tls a little more closely but i'll i'll read"
  },
  {
    "startTime": "01:22:01",
    "text": "the draft and see if i like i mean if we have to do some other thing i understand but i'm trying to like do a little yeah i'm i'm in fact i'm we're also trying to figure out on how to to best fill this in and and that's why we are sort of solicit soliciting feedback from those who are working in a similar area okay we have uh online from penguin okay uh thank you thank you hi hi uh i have a question uh first of all i think this draft is very useful when we use this in the trusted social environment and to the client but i have a question is that a this protocol only supports the heat and the tpm uh attestation of if there is this protocol support other attestation for example if there is a measurement result or just a hash value that this protocol will support that yeah so we um we wanted to support different attestation formats um to begin with we wanted to focus on the sort of like the dbm and the and um the heat based approach and like i don't see a reason why others couldn't be included in the air so they the the part that goes into the dls exchange doesn't actually care much about what it is but for the for the overall functionality obviously it matters how you stick the different pieces together yeah i think we could clear that this protocol will support the other measurement deformator because i think that it will be moder more wide range of this protocol well we probably should try it out so um we'll uh so our plan is to contribute this or to use contribute the project the software uh to the uh confidential the software to the confidential"
  },
  {
    "startTime": "01:24:00",
    "text": "computing consortium to actually have others to look into that as well um so so maybe we can work together okay okay let's talk in main list yeah good thank you uh daniel kahn gilmore aclu so let me just ask a couple questions here is this just the client authenticating or are you envisioning this being symmetric within tls actually it's it's both um and in in this simplifying example i just focus on the client and the code initially focus on the client but it turns out that um you also want the the server adjusting to the client for example if you have some confidential workloads in some cloud-based service you also want to know um what are you actually uploading your code or whatever to the hardware you're expecting it to be yeah so thank you that's that's useful to understand um my second question is about the um the persistence of the platform state uh and how this can be used like what are the ways that this could be um anonymized so that for example two separate processes that run on the same machine don't end up identifying themselves as being cotenants or if a user say wants to clear their their state and come up with a new identity that doesn't that then the platform state doesn't itself uh leak a linkable identifier to the server uh over time do you do you is this is this question something that this is grappling with i apologize i have not read the draft in detail i don't know i don't know the specifics that's a very good question um and i think this is on the to-do list um obviously like you monty for dpm and and for some of the the at the station technology so there are two pieces to to your answer one is how does the attestation technology avoid um"
  },
  {
    "startTime": "01:26:00",
    "text": "providing identifiable information across different interactions the other one is um um there's some additional information this what i have loosely referred this key at the station token here that could also identify you or provide some linkability and that's obviously also a concern so definitely needs to be answered and written up um serious airdraft lots of things open okay thank you yeah so i think you've a lot of these are a bunch of to-do things which you know i'm going to be involved in obviously monty wiseman by the way beyond a beyond identity um the the other there's two reasons for the attestation key not being the thing to sign one is the nonce but the other isn't is in order to be of any value the attestation key has to have the properties of only signing things that are inside the tpm otherwise you can hand out a blob and say here sign this it'll become a signing fool right so it cannot sign external data it can only sign stuff that's inside the tpm except that's another important reason why you can't use the fstation key the other thing that i think we need to start thinking about is there's lots of aspects of the platform are you do you only care about the bios the firmware do you only care about the os do you care about ima we have to be able to hand it a bunch of stuff this here's the stuff i care about and then get this backside and i think this is going to be a more complicated thing than we i think it's a valuable thing to do don't get me wrong but i think this is going to be a lot of work and i'll be happy to be involved excellent okay i think nick online [Music] hi um nick doty center for democracy and technology um thanks for presenting this work i have some of those same privacy concerns that"
  },
  {
    "startTime": "01:28:03",
    "text": "have already come up and i see yes it's an early draft privacy consideration section is not written i expect it will be a very expensive section and and i certainly would encourage you to uh consider that early on because i think it could have very fundamental implications for um for the design of the architecture altogether um one one question that is coming to mind is i look at this why i think you even note this it could this could happen in lots of different layers why should this happen in in tls like that's i'm still learning about this area but it seems like most of the fraud cases that we're worried about are very application specific if you're doing a different type of thing you're going to need a different type of attestation information it's going to be specific to what action the user has taken or other criteria it seems like setting that up in the in in just securing the communication and end seems like kind of an odd time to do that you don't have any of that application specific information um so so why should this be a tls layer protocol rather than an application layer hey nick uh haven't seen you for a while um that's a good question as well uh i've been also wondering of why the tls working group would be a good place um whether maybe rats would be a better place or maybe some totally different group i don't see a concern with the application specific information because that's not really uh something that's sort of more policy what to include and whatnot but there's obviously an tls extension that needs to be defined here and and described similar to the certificate types extension which um described on what type of certificate to put in there and in some sense from a dls point of view there's um little little to do practically like it's actually a short document the problem is i have to set the context also here in the"
  },
  {
    "startTime": "01:30:00",
    "text": "presentation like otherwise you you don't know what i'm talking about and that's the difficulty and i don't know how to best uh deal with that but it's actually better to put that into two documents or one that is more like the architectural aspect to it um which already rats does in some sense so a lot of it what i'm talking about is in rats so i don't know um i appreciate guidance here uh having been in the idf for a while already i should probably know better but uh yeah but well maybe just to continue that a little bit like why does the user want to do it in the setting up of the connection rather than uh attesting to themselves once they know some more about what they're trying to do with this server okay yeah the the use case so actually um maybe it would be best for me to distribute one of the uh confidential computing consortium uh use case our date their white papers because they describe some of the use cases on why you would want to have at the station and some of those software isolation techniques in general i think there's uh for example um you want to upload a code onto a cloud-based infrastructure and run it there but you only want to disclose the code and the configuration data to certain platforms that meet certain criteria so they can for example to run the code there that even the cloud provider doesn't see what you're running uh that is one of the that's sort of the promise of um of confidential computing and so for example you may have some uh machine learning um data in there that you don't want to spread around that you want to keep yourself that is one of the the use cases in in in confidential computing so in general and like pushing code around and making sure that it's actually you run it in an environment uh"
  },
  {
    "startTime": "01:32:00",
    "text": "that is what you would expect for example pushing moving workloads from the cloud to the edge and running it there including obviously data that this uh code would run on you want to make sure that you actually store it on servers that meet certain criteria so that the data doesn't leak out into into the wild because otherwise anyone could sort of like claim that uh oh i'm running a virtual machine here with some great hardware uh i'm really protecting your data but in fact it's not happening i hope that makes sense yeah i mean the server the those those server cases would also have less of the catastrophic privacy concerns that some of us might have so um yeah maybe that would be a more promising direction rather than uh rather than users having to attest to i'm not even quite sure everything about their device and uh and potentially hard linkable certificates or keys um the the use those other use cases might might make more sense or make that easier to understand i will post the uh the white paper to to the list on what the confidential computing consortium believes that it's uh useful uh areas okay thank you yeah sorry i mean um so i know this is a zero zero draft and i assume you're creating evidence it says there but i don't know what this evidence is about and i i would never understand as a well remote peer client that i want to initiate something i create the evidence what would i put in there so there you say eat or tpm so i have some understanding so that has to be fleshed out but this is zero zero i get this but evidence is never set to a lying party which is literally what you say and then so then there's a verifier in the picture and at the station servers"
  },
  {
    "startTime": "01:34:00",
    "text": "which are also so that i i get the point where you want to want to solve but yeah some so there's this really has to thomas is on this draft so that makes me confident that this is sorted out yeah at the moment it looks a little bit um all over the place and i would never know what is where and never use the term at the station by the way it's bad it's uh yeah the challenge uh is in in rats that the different flows uh on transported that's so i meant to make that clear and also um talking about evidence and attestation results would resolve all the problems i think just label those differentiate them i think that will make everything very clear and then you're basically halfway there i i will give it the um the hank some sort of brush next with zero one all right thank you johannes uh next up we have a update on the post quantum process from sophie and tom um tom are you going to share slides uh we shared the slides with the chairs um but if you don't have them oh there you go oh thank you great okay i can see the slides now so we can get started um so this is a very brief uh very abbreviated uh talk just to get the ball rolling on uh on pqc again because some stuff happened so uh let's go to the next slide"
  },
  {
    "startTime": "01:36:03",
    "text": "um we're presenting somewhat of an overview but it's definitely not complete uh we're going to briefly touch keg's key exchange but that has been talked about a lot already so and we're just trying to present a neutral overview here although we are obviously also office of a draft it's not about that it's just about this is what has come out of this so far and it's probably something that we're gonna have to deal with now so next slide okay um i think i think tom got frozen sorry but i can't take it um so yes here in the right slide um so basically as some already said um we're not going to focus specifically too much about the key exchange part of tls 1.3 because that's indeed um there's a way to actually easily add the per squad the malgody genome since to it that every of the experiments that have been run all of the academic papers related to it seems to show that indeed is easy to just go up the classical algorithm for apos one two one for a while it will be good as it has been recommended by uh the hybrid design um document to actually not only use the pos quantum algorithm in isolation but rather to combine it with a classical algorithm for the timing nexus like this the part that is a little more complicated it seems is the one for authentication in tls 1.3 and the recent win is because at least the algorithms that now have been selected for the standardization but the first milestone of the nice process seems to have sizes or computational times that are bigger when compared with the classical"
  },
  {
    "startTime": "01:38:00",
    "text": "counterparts of course authentication in tls has ensured that everybody on this group knows how could happen in different ways but in this case nexus la please we're talking about certificate-based authentication nexus live please okay and as you know um there's many signatures some verification operations that are actually happening as part of the tls session it's not only about the handshake signature but also all of the related ones internal attempts about the handshake signature it does seem that at least some of the experiments that i have around it seemed that it would be okayish to swap the classical algorithm for a plus quantum one and that should be okay as as we know uh the signature algorithms are not only the handshake signature so all of the other ones that are related to the to the to the tls session itself seem to be more cumbersome to actually migrate with quantum cryptography i'm not sure if tommy are back uh i hope so okay there you are great let's hope the wi-fi holds up uh yeah we can go to the next slide so this is all the new schemes and some of the things that's out there already on one slide um so for comparison we have the pre-quantum stuff if you then look at the lithium 2 so that's the smallest larger right fortunately in terms of computation it's quite a bit faster than say e256 but yeah it's it's not small if you put that everywhere it's probably going to be difficult falcon on the other hand is nice and relatively small but uh it's worth pointing out here that um the if implemented correctly here is"
  },
  {
    "startTime": "01:40:01",
    "text": "a direct quote from nist's selection blurb that is is quite tricky to implement uh correctly we talked about that a bit before in in the cfrg talk earlier today um then we have sphinx plus which is hash based uh slow but conservative and uh it's worth looking out here uh those are staple hash based schemes so that might be useful for maybe it for general purpose and that is also something where it seems like the theme here is we have all sorts of trade-offs certain things are fit for certain purposes uh other things are probably other yeah that is the the name of the game here probably um there is going to be an on-ramp we also talked about this previously in the cfrg uh where nist is calling for new signature schemes but the scheme that i think is most likely to go into that process is uov a cubase scheme but 400k for a public key is really really quite big although then the plus side will be that the signatures are going to be very tiny so maybe space okay so if you're ever interested actually into checking how post quantum"
  },
  {
    "startTime": "01:42:00",
    "text": "cryptography deals into the networks there's different experiments that have been run by google and also by cluffler specifically and most of the times these experiments have been around and have been focused on the key exchange plot as i already said and there has been really few ones uh focusing on the authentication so this is also a call for anybody who is interested to actually run more authentication experiments with this quantum cryptography note also that open ssh in the version 8.0 nine sorry uses entry prime as the default key exchange algorithm nexus live please that's also as i said already some academic studies uh in this case it's more constraints the results because most of the times they are they are running on simulated networks and this is in the only sense it's the only academic papers that exist around password-based authentication only come from the academia so there has been almost no actual working items around that area so if you're interested please check these links mix it live please and uh yeah uh so i just put a bunch of the stuff that i could find if i type pq into the data tracker um so for limited use cases probably uh lance is really working very hard on the whole pq topic right now it seems um and of course we have the hybrid word mentioning is also the pqc mailing list which i think opened recently and uh flow recently sent off a draft around there which aims to resolve the whole what is hybrid versus transitional versus composites and try to resolve that language which i think is very cool and i think that's going to suck this patch so you might want to look out for that thing as well"
  },
  {
    "startTime": "01:44:05",
    "text": "you can talk about questions it's okay questions oh sorry go ahead tom hurry go ahead i just want to express support for this effort and i hope that it will proceed on the standards track any other questions oh uh someone's getting up scott go ahead okay scott flora cisco systems one minor knit uh you you're using the round two uh sphinx plus parameter sets uh round three is slightly smaller i don't know if it's enough to make a difference that i think boss might have corrected us in the wrong direction no i'm not sure actually um but we will check that and if indeed they are wrong uh we will update the slides the ones that we corrected were from cfrg but uh we will check it um scott thank you and you uh this is not very authoritative good go ahead hi uh i was wondering if you've done the arithmetic on how many bytes we're talking about and"
  },
  {
    "startTime": "01:46:01",
    "text": "whether we're likely to run into any length limits in in tls so things like you know there's a there's a limit of 16 megabytes i think for each certificate for each handshake message or maybe more practically there's a limit in how many uh how many packets can be sent in the first flight of a quick connection which limits the size of quick initials i wonder uh if you know how far are we or from from those limits with these algorithms uh if i'll take this one um so for starters there is the boss westerbot wrote a nice article to drag over the internet if you just for example put the lithium somewhere and how much latency that imposes which was a experiments with post-quantum stuff in tls uh and and while implementing that uh for the more ridiculous schemes out there i found that common for implementations to have a comment in their parser uh and one part so that oh yeah uh whatever is going to send that so by and that kind of stuff is implicit uh but definitely present so that might be a challenge going forward um quick has the anti-amplification thing that you can only send back three times the initial message uh and this will likely mean that you need to"
  },
  {
    "startTime": "01:48:00",
    "text": "do padding of the initial message or perhaps even initial messages such that the server can actually send back the certificate chain if it goes to the side uh thought about this a little bit uh i think they also have an issue on their interoperability checker to also actually check if this works but i i i just looked at a few documents one time to see if it was interesting for research but it seems they have thought about it basically yeah the the quick working group does have it i'm not sure if they have updated it but they were planning at some point doing a hackathon to actually check it but lucas padilla might not know more updated versions of that it has not been a formal study of the different sizes i know it has happened for dns sec because they sent very interesting paper by ronan phone heist van dyke um but not specifically to a tls so maybe that's something that can be looked into vietnam thank you erica scroll uh yes it's probably worth distinguishing the network dynamics from implementation issues so i mean i i agree there probably probably are implementations which are sad if you send them one megabyte certs but the implementation would have to advertise that they spoke post quantum anyway and no and you could just not do that if you haven't figured out how to fix the you know the giant message problem on the receiver side um so i don't that's a big deal and the bigger deal is around trip time and like the size of the initial flights and whatever and so once you get outside like iw10 things start to get pretty terrifying um even if you have indie amplification techniques um because you just can't dump like you can't just dump 50 packets on the wire like under basically any conditions um so um and remember the quick any amplification is about is is about on avoiding having established a run trip time um and i think practically like i mean i'm not"
  },
  {
    "startTime": "01:50:01",
    "text": "sure um david ben's not here i don't think but um you know i think the general sense is like once you get about about 10 kilobytes for like the certificate payload like people start to get pretty sad about the whole thing and um illustrate tls and it's not because the implementation is because of tcp dynamics so um you know i was looking at this and being like this is all pretty horrifying um and so um i i think the good news is like you know it's all it's all over in the future but like it's all pretty horrifying mt can speak for the teal work yeah there's something there that maybe there will be hope of something coming that it has some smaller sizes so i mean in the c30 presentation we do talk about that there's going to be a new call for algorithm proposals for signatures so maybe there will be something smallish coming but i don't think there are i don't think elliptic curve cryptography is more yeah so so martin thompson there's a bunch of things that we're going to need to work through with quick because one of the things that concerns me here is that even just trying to put kyber in the first message is going to overflow that one with you know there's not a lot of extra space there when we talk about maybe a 1300 byte packet and then you've got to put a kyber key exchange in there and you basically used it all up at that point at the point that you have to send you have to send two packets that's a major problem for the client uh hello if we can get it into one packet that would be that would be great that means potentially i basically that just means i'm really sad about the the points that nist has managed to to decide are appropriate for the security levels they're targeting i would probably be happy with a slightly less lesser security target in order to fit it in the down packets because the performance is going to tank badly uh as far as anti-amplification goes i think that's much less of a pressing concern because the client can send a few extra packets if it knows that the"
  },
  {
    "startTime": "01:52:01",
    "text": "client needs to send a lot more and and if they're not critical then if they get lost it's not a big deal but if they are critical and you're putting the key exchange in multiple packets then it becomes a problem as i said 10k is probably we we might be able to push it over 10k for something like quick where it's relatively new but i don't imagine that there's going to be very many people are happy if it's many tens of k's or you know the 400k thing is just a non-starter so we'll have to get creative with compression and and things like that when it comes to that i can confirm that all of the stacks are fine if you send a very large client hello but the performance is going to be terrible yeah i completely agree and one of the things is that during the standardization process there were some people academic papers and some experiments about what could fit into the networks or not but not much that many information as compared with all the things that the nissa's focused on um so if you're actually interested in this to hear and this my recommendation will be to actually attending either the nice workshop that is going to be happening on november and actually putting together what will be real considerations from networks and protocols we are also running an event which is called pq net and i will put it later on the sulip chat um in which we talk about pos quantum manners we're protocols and this time is probably going to be local located within this workshop on november so if you're ever interested in actually talking about these consent and main i'm making these reach the nist ears maybe that is also the place can i just one one thing to point out that we missed in that one um and scott's distracted me so i've largely lost the thread i'll carry it on chat that's right okay yes i apologize i just thought of"
  },
  {
    "startTime": "01:54:01",
    "text": "it as i walked away um if you send a message in two packets to a server those servers that are doing stateless processing will likely to likely tell you to go away and come back again later and that's going to add a round trip to everything and i can see yes yes yes she's saying um that's that's a major major problem okay that's fine all right thank you sophie and tom uh we pushed one agenda item to the end uh that is the uh outstanding issue on the tls flags draft job is here having technical difficulties up here so we can't pull up the pr but we can probably just speak to it that's okay so the one question that remained was uh is it possible with the tls flag extension to ha to define a flag that the request uh saying the client hello is just that one flag bit but the response is going to be a real response and a real extension with actual content rather than just yeah i support this so the client says well it could be the other way around with the reverse thing but so say the client says i support this and then the server says okay so here's a whole bunch of information and the question was is this legitimate use and well so i wrote the pr that says no you can't do that and we asked for um comments and we got pretty much nothing until uh today when we got uh something kind of non-committal from uh ecker and martin so either way we can have it with this with this pr or without this pr but uh i think it's time to close out this the text is in the chat thank you sean ecker go ahead"
  },
  {
    "startTime": "01:56:01",
    "text": "so i mean i agree this pr is clear and this pr clearly says you can't do it um my view i think is you should be able to do it because i think of sending it as i think of sending the bit as sending the extension i think martin thinks i'm not thinks of sending the extension of sending the extension um you know i think um you know i'm not gonna like lie down on the floor over this um but i think martin isn't either so um i guess like is there anybody else having to find this topic do they want to weigh in i i don't have a strong opinion about this either and that's the problem here nobody cares enough yeah i mean i mean yes we have i think this is like i mean i guess i would do like a design taste thing which is like martin thinks simple is good and i think i think i think flexible is good and that like i'm just i'm just like sad that we're gonna like someday have an extension that is like you know that is like that is like you know another 200 bytes and the server's going to want to send and the clients have to burn four bytes to say go ahead and send it and i think martin thinks that doesn't make a difference so that's that's the exact that's the sum total disagreement i think the tricky thing here is to find some good uses of the flex extension and then to to actually see whether that's practical because it would be annoying if we if there are a few extensions that can make use of it and then they can't be used because of some other um constraints that put you put in there and that makes it completely useless that's some perfectly happy making another pr that says yes it is okay to do this and then we can pick either one of those pr's and commit them to the text okay or anyone else can do this that other pr okay like basically same things that have already been said uh we should be clear about whether it is or is not allowed i don't have a strong opinion i tend to have my my intuition be the same as martin that you should not allow it but"
  },
  {
    "startTime": "01:58:02",
    "text": "if we can come up with reasons we like that we should allow it i think i i don't know of a reason it's a fatal flaw i don't know of any vulnerabilities with it let's imagine a silly extension we have the terms and condition extension that we get from the server the terms and condition for using it and so we only have to send this one bit from the client and then get the whole terms and conditions as opposed to sending a whole four bytes of uh i want the terms and conditions for getting it but that's just a silly example yeah i mean that's the kind of thing i was thinking of look i mean we rarely hung here because usually we have consensus but like i think every possible argument in favor against this has been already stated so i suggest we just come and live with it good all right let's let's quickly do a home then can you pull up the show a hands tool um don't care oh um the the pr text is in the chat we dropped it in there um you can share a screen not just no we're having technical difficulties so we can't share the screen um dick says for a flag that does not require response the only proper response is the same flag and a flag extension this that extension must not be used to specify extensions where the response is a proper extension with content um okay so the we just put a quick show of hands um uh with the title disallow non-flag responses which is uh basically the pr as written um and if you are supportive of this pr raise your hand i guess do not supportive and you want to go with the"
  },
  {
    "startTime": "02:00:00",
    "text": "officer out uh do not raise your hand if you do not have a strong opinion nothing sorry it's a virtual show of hands there's it's a hybrid meeting i have to do virtually okay um it seems like it's going in towards the current pr so um fifteen to seven so let's see so merged let's merge the pr thank you for all of your opinions and thank you for attending tls um yeah we finished on time oh jesus oh it's an hour and a half when is it"
  }
]
