[
  {
    "startTime": "00:00:04",
    "text": "then can you hear me now because I can hear you okay I'm an audio video technician you think you'd be able to take it okay I think it feels like heat on full black yeah there's a lot yeah are you guys uh or at least down yeah down a little bit it'd be good all right just don't sing it for us I will not really really cool to the front of the room really cool like you couldn't sit at the front table okay well we're at 4 30 so we should probably start I want to go ahead sure um happened to if that's what I needed all right great so welcome to uh the uuid Rev meeting uh I'm Jim Fenton and Michael Richardson the co-chair is also here um and uh he is currently displaying the the note well slide which uh of course is a reminder to everyone that everything that you uh all discussions in the meeting um are are under the terms of the note well which basically has a lot to do with the intellectual property rights that you are seeding to ietf as a result of the"
  },
  {
    "startTime": "00:02:00",
    "text": "discussion uh and so you should read this in detail if you haven't already hopefully you have already isn't there also a companion do you have the other slide okay okay this is fine I I was referring to sort of the uh uh conduct rules and so forth but hopefully with this small group that is not an issue okay great so thank you to uh to everyone who who is here we have uh as a as a very small working group uh we have a uh [Music] you know limited set of slides and so forth uh on on the part of the chairs um uh do we have volunteers uh for uh for a note taker uh anybody in the in the group that is uh that's willing to do that yeah thanks Brendan so Brendan has volunteered to take notes and that will be beginning very soon it looks like he's almost ready and he's powered by cookies there that looks good good plan and I think the main uh the main speaker the main presenter for today will be uh Kaiser Davis and we'll get his slides up here in just a moment stand by those"
  },
  {
    "startTime": "00:04:06",
    "text": "and I'm going to give you a slight control if I can sure control there so you should have the buttons on the bottom yep got it got it thank you for that thanks for sharing all right folks I appreciate everybody having me today Kaiser Davis Cisco Systems um today we're going to talk about uh a couple different items and we're gonna spend the bulk of this since we had an intern meeting pretty late pretty recently we're going to spend the bulk of this talking about what we're going to do next but we'll get through this very quickly in the first set of slides summary today is just discussing why we're here what we're doing we're going to discuss fixing Errata the new table of contents in the document some things we did I did to version three four and five and then other housekeeping and you know what are we going to do for draft one what's slated for release at the end of the month so the story thus far is uh myself and Brad Peabody we're working on draft for New uid formats this added specifically version 678 and uuid Max and some best practices that weren't in 4122. we went to ietf 114 we did a dispatch session and they officially said hey we should create this working group which is where we're at right now so the goal of draft zero was to merge what we had in the new Peabody document with RFC 4122 right in addition to this we're going to go ahead and fix the Errata we're going to squash those as we go right as bugs so the new draft zero zero that's been published in October was effectively the merge of these two documents so if you're not up to speed on 678 um you know take take a little bit of time to look at that if you're not up to speed with some of the Errata take some"
  },
  {
    "startTime": "00:06:00",
    "text": "time to look at that because that's what we're going to be talking about going forward um one thing that we found in creating the Peabody document was that the 4122 layout and table of contents is just tough very tough to work with to get the concepts that we need across so in about draft three of our document we decided to overall the table of contents make it a little bit more readable provide some better groupings for these need to know information things that are related and things that are best practices so you don't have to jump around 15 different places in the document so in the order we got when we came away with was introductions and ietf language you edit uid formats uid layouts the best practices the ietf considerations and things we need like security considerations Ayana considerations the references and then appendixes for things like code and test vectors and all the other stuff we want to shove at the bottom as references feedback from around the internet and on the working group and some unicast chats and stuff seem to be that this was a good table of contents it pro it was very readable it was better than 4122 so I think that we're I think we should be good to keep it um but please let me know what you think of that one thing to note here is if you're looking at 4122 and you're looking at our document you're going to see a distinct missing sections which are those algorithms to create maybe a time-based uuid or a random-based uuid again I removed these around draft 3 of our document because they just didn't work well and it caused all kinds of weird issues extrapolating that so that stuff has been just reworked into these specific layout section right so how to create a uuid version 3 is all contained within uuid version three and then any best practices for maybe three and five are down in a specific name based uuid section so kind of just a slightly"
  },
  {
    "startTime": "00:08:00",
    "text": "different layout but that content still exists uh quite a quick question uh speaking a little bit out of turn is the um uh are those algorithms are they going in as informative appendices or anything like that or are they going to be out entirely we I've reused all of the text from those they're just very dated in the way that they're written um I guess the best way to put it I can easily just copy and put and paste and put them in as appendixes we don't want to lose the text but I don't think anything that was there is gone um and it was it was just very tough writing like version seven to a one of those for version seven and stuff we just had a lot of issues with it it seemed to just take a lot of text it wasn't needed you could be better conveyed in a different format I I wasn't concerned about the the specific text I just wanted to make sure that the uh you know the nature of the algorithms that we weren't losing the algorithms entirely they if we so yeah so the algorithms aren't necessarily an algorithm like you expect like a code algorithm or math or any of those types there are they're just text like here's a set of steps and they're not even steps they're just unnumbered bulleted list of do these things from a very um basic programmatic View kind of just a suit it's pseudocode more than anything we haven't Bill document either okay yeah that's true thank you awesome um next up is the Errata so I actually wasn't planning to get this done in draft zero zero but when I was creating the Errata entries for the GitHub and actually just reading these I started kind of just seeing the big picture that these sort of fell into two categories and that's grammatical Errata which were super easy to fix I mean we just follow what they say to do in in there and I agreed with pretty much all of them as well as lots of Errata just around clarifications around which bit where which you know which level of Indian is"
  },
  {
    "startTime": "00:10:00",
    "text": "should we use they're harder to fix and I have gone through the document and made an attempt to make it conform to each of these uh six Indian sort of bit layout erratas and really to boil it down it comes down to very consistent language I'm using big Indian because that's that's what every one of these uses from what I can see in reviewing the other specs defining where most significant bits are using some helper verbiage like leftmost if we're talking about that defining where our bit and byte order and numbering start so I put some text in um actually borrowed from x667 which is documents kind of mirrored with we'll talk about in a minute it talks about how we start our numbering where our bits and bytes are where things like the variant should be where these bytes exist kind of just being very specific overly specific in these and to hit on these points so people know exactly how and where we're talking about in these in these 128 bits and I think I did a pretty good job I do want to solicit some feedback on these types topics right here since they were such a major deal just look at these keep them in the back your head and then when you look through the document see if something I I wrote is incorrectly referencing or might have some gray area and then we can fix it right because this is out of all the Errata this is the biggest thing that we want to fix but I think at the moment the Iran is good unless somebody tells me otherwise is my final point moving to uh the document so in the document the original document 4122 version one was kind of the starting point for all of the other uuids it used the bit layout and the in sort of the block layout of all the bits it used the names of all the different fields um and everything referenced back to that so if you were doing a version for uuid or you were following the version"
  },
  {
    "startTime": "00:12:00",
    "text": "four algorithm to create a random uuid everything used uh terms like it was a uuid version one because it just that was the starting point point of reference and it can become very confusing especially in version three and version five when you're talking about um you know modifying a field called time in milliseconds or or time high and low and you're changing it to be some other some other meaning so one thing we did with version six seven and eight is we gave them all their own block layouts they got their own field definitions and and just in that section you can go straight to that section and see it without needing to go read and understand uuid version one so I did that with three four and five there's a lot of net new text and a lot of text pulled from those algorithms to create X right so it decouples these provides better clarification and allows me to again group together things that are super important to these as well as provide better text vectors and extra clarification that we didn't have because it was a here's version one and it's the bulk of the document and then here's how you do these other three and they reference version one so you got to kind of you got the chicken for the egg scenario maybe you don't care about version one you just want to do a version three well now the section just has that and it has everything you need to know about that so update here you know I want to just get some reviews on version three four and five text they should mean exactly the same as they mentioned in the previous document if I maybe move something or gloss something slightly incorrectly I apologize I can fix it but this is all net new for three four and five a lot in that new next up is General housekeeping I went through the document um replaced any HTTP link with https links to the relevant site all RFC references have been updated to their latest versions as well as external"
  },
  {
    "startTime": "00:14:01",
    "text": "references if something's been bumped I made sure I checked it and bumped it as well as security considerations I added some info for sha-1 and md5 since we have a couple rfcs discussing those topics specifically I added those to the relevant security consideration links and reference them appropriately go ahead Mark uh there's one um RSC reference you haven't updated which is 4234 5234 is current for ABN f it is current for a b and F okay A B and F did I bump a b and F or did I just not update the reference you're still referring to 4234 and I have some other corrections to make around a b enough but since you listed RFC references I thought I'd mentioned yeah okay understood yeah yeah and that that is one thing I didn't even I didn't think about here the a b and F uh the way the ABN F was maybe I looked at that and it didn't update it but I did touch the ABN F stuff just a slight bit I forgot to put this in the notes um so maybe we can talk about that real fast if you would like since we're on the topic ABN f that's where I go into the draft one um your change log says you went from 2234 to 4234. but the correct current reference is 5234 okay so I just did okay understood yep my mistake that's right what was what was the other thing you wanted to talk about so with a b and F I did shorten the abnf uh uh nomenclature just slightly because there was it just it was it was much larger than it needed to be for the logic of ABN F but it still conveys the same meaning I just made it more concise that's okay um one of the things I was just looking at some of the ABN F and for example you have a token called hex octet I think and I couldn't figure out where that's combined yeah I I believe that was also from theirs but I I'll take a look at it if you will if the thing is if you're"
  },
  {
    "startTime": "00:16:00",
    "text": "obsoleting 4122 you have to carry the definitions forward because that document's dead then yeah I guess my the um the hex the hex octet should be two hex digits put together which should be there and if I if I accidentally cut it off but yeah what you have is what you have is two hex octet like that's the literal string it should be I think it should be two star but also hex octet itself is not defined anywhere I can email you all that stuff as I find it yeah yeah I understand you I understand your point yep the the two hex octet and the four hex octet those are from the original document specifically the reason that I redid the ABN F was because it all referenced back to uuid version one so again decoupling version one from other stuff so ABN F was Rewritten but I may have just missed hexapta thank you for that all right next up is um some action items we're going to talk about things that I plan to do for draft one Cadence for releasing would be monthly so I plan to work on these and push this out by the end of the month we'll iterate on that draft two by the end of December so on and so forth to IET f115 so or 116. so we got some time till March this one is ietf names or namespaces specifically for version three when I did an audit and review of a bunch of these big libraries that Implement version three and five I found that the majority of these libraries only Define the namespaces that we defined in 4122 um furthermore there's no text describing how we got to these values in the first place so I don't know where they came from they're just slapped into an appendix I have some lot I see some logic in them but if anybody has any threads or"
  },
  {
    "startTime": "00:18:01",
    "text": "mailers they can send me something from the old days that'd be awesome but my point here is should we potentially toss in a new name space that follows what I see is the logic for something like iot devices and databases which are nowadays very big use cases so that other libraries will Implement them because it seems to be again that if we don't Define it they won't implement it and there could be others these are just the two off the top of my head working with uuids in this space for the past three years so I can I can work on that I don't know if there's any comments any open items anybody want to discuss we can move to the next slide if so yeah uh Brendan has a has a comment so uh we'll recognize him um I've encountered a number of missing namespaces as I've been working in suit as well and the solution at the time was to put down the uh mechanism to generate the namespaces I used in the suit uh manifest draft I'd be happy to forward that on to you um one of the things that I thought was particularly relevant is that there was no private Enterprise number um prefix there was an oid prefix but there was no definition about how you dealt with oids and what kind of encoding you used for the oid when generating a uuid so I wrote all of that down and how I was going to do it um I thought maybe that would be something to document as well and I'd be happy to send that on to you yes please uh I'll look forward to that um I got a topic on oids that's coming up in another slide thank you we'll touch on that but um yeah I think you're you're right we just need to define a couple more namespaces and then just a better way to how we handle this okay thank you yep and just commenting on Murray out loud I do see the issue with the hex octet I"
  },
  {
    "startTime": "00:20:01",
    "text": "just um I'll I'll put it on the mailer thank you I'm going to move to this one quick slide I don't know if the gentleman who brought this up in the interim meeting is on this this meeting but there was a discussion around uh adding some best practices with running out of random that is do you Generate random for every uuid and you slap it in there or do you generate one set of random and some counters and and is there some security considerations around using certain types of pseudo-random generators versus other types which can cause issues with running out of random exhausting your random entropy source and honestly it's a little bit out of my league on that topic to write about it gentleman said he was going to send me some notes I never saw the notes I checked all the issue trackers I don't know what the context was there so if anybody has that that uh that person or that name I'd love to sync up with them as well so Brendan Warren here again that person was me uh the issue specifically is that on certain Hardware that uses true random number generators you can exhaust the trng that can be used to construct side channels inside your processor this is probably not something you want okay is that is that a in terms of how we change this and modify the text I can propose some some text and have you review it does that seem okay Brendan yeah absolutely I I think fundamentally it's just a question of maybe don't generate a new random number for every single uuid maybe for every single time increment would be enough it yeah or as Brad and I have said we lay out the pros and the cons and make sure we explicitly Define the cons and if somebody wants to go against that and they will willingly know what they're doing"
  },
  {
    "startTime": "00:22:00",
    "text": "so be it but yeah I think we just Define it it's like a security consideration section absolutely yep that's where I have it tagged for right now thank you okay that one's good got that thank you um namespace registration template I need to update the namespace registration template and make sure that it follows our new RFC 8141 that shouldn't take too long um to do it's just do we actually need to put a namespace registration template in since it's already allocated I guess that's a question for the chairs um how to handle this do I just slap the new updated template in do we need to submit anything after updating it uh I think if if it's already been allocated in 4122 then we actually don't there's no Ayana consideration for that we just go ahead we may we may say I am Ayanna allocated this and that's it if you if we need to reference it we can say it was already allocated by this other RFC okay understand if you look at if if you look at what happens the document like 4122's probably said dear Ayanna please allocate please do this registration for us and then as I got processed it said I am it took past tense it says Ayana allocated blah blah blah so the the text in 4122 actually you could just use that text if you wanted if we really we needed to be clear that we had allocated this then you can just use that text Iana allocated blah blah blah as per RFC 4122 and you're done there's no action in the end okay I'll check it and double check I've put it in a appendix because at the original document had it in smack dab is like one of the first things you read which is kind of out of place and broke and really messed with the logical reading of the document so I applied that to an appendix yeah I probably should go be so that would wind up after the author's names and so probably it should go and the and"
  },
  {
    "startTime": "00:24:01",
    "text": "the references it probably should go before those so it should be shouldn't be an appendix should I should I move it to the Ayana consideration section which at the moment says no considerations yes I I would do that okay that works got it uh next up is I've got a couple issue tracker items for version seven and eight um number one is at some point we had version 8 restricted to just new versions of time-based euids and then it was relaxed to any you know vendor specific implementation uuids can't can't do or experimental and I forgot to remove some verbiage so we we caught brewfa caught some some info there and we're going to remove that and then this one is further clarifying field descriptions it doesn't change anything specifically but just adds a little bit further clarification about the usage of milliseconds timestamp and a forward cup a couple forward references so I think they should be good to merge I just wanted to ask the group and make sure if we're okay with that they're they're really just very simple small non-impacting changes have you asked the question on the list that's probably the best way to make sure that it's covered and documented yep I haven't I haven't moved it yet again great thank you okay um this one's a little bit longer and I I will take this to the list this is from Ben Ben put out uh discussing the fact that we have the maxi uid the Maxi uid does encroach upon the reserved variant space which is at the moment a hex value of an e or an f and the variant ID would all have all hex values of f because it's all ones and we"
  },
  {
    "startTime": "00:26:03",
    "text": "need to effectively discuss where that lies and how to effectively put that in there this doesn't affect the nil uuid because that kind of goes into some older terminology called families which is what was used before there were variants and effectively Ben is looking to update the variant table with a section that adds a column for bytes so that within the hex of f for the future variant we can discuss what that byte can or cannot be it's very very clarified like to the to very to a very nitty-gritty kind of level that I'm not sure if we really need to do it makes sense when you when you discuss it there's a lot of discussion here I can take it to the mailer this is one thing that I'm going to look at for draft one um and it's just do we add another column to the table taking this to a bite level for these variants and what is or is not available next up is um this one is something I came across while I was just looking through all the references and updating the references and really just trying to make sure 4122 stood on its own or the new document stood on its own and I noticed that apparently at one point in time RFC 4122 itu x667 and the iso 9838 documents were exactly the same they were all the same document and one was telecommunications standard an international standard and then an RFC proposed standard in 667 they updated it in 2008 and then they updated again in 2012. I assume ISO was in lockstep because they updated their document in 2008 and then again in 2014 but 2014 and"
  },
  {
    "startTime": "00:28:02",
    "text": "2012 documents look to be exactly the same our document was never updated and has no none of these changes specifically one of these things in there is discussing oids and how to use a uuid as an oid so to the other gentleman's comments about oids they have that text in their document which we could take now we've got a different table of contents we've potentially added 678 Max and we've added a significant deviation my concern is first where do we fit into this picture and do we have the authority to add the new uuids and the things that we are doing and if we do how do we get involvement with itu and ISO so that they can be in lockstep with us and final question should I pull in text like the oid information and whatever else I can diff out from their change log into our document and that's the open floor for for questions and chairs microphone yeah I think we have Liaisons to those organizations so um either the chairs or I can help you activate them to ask those questions of those organizations um I'm curious another way to turn that question around is what do these organizations think of 4122 in terms of its Authority exactly and and they were updating without us so maybe they Authority how did they do that without violating your copyright no I'm serious I'm serious I understand I even thought of that because because well no but if you go I went and looked up the documents the iso document the 198 Swiss Francs for was that was gonna be my next question yeah are these behind pay walls so so that's the weird part so the iso IEC document is behind a payroll the itu"
  },
  {
    "startTime": "00:30:00",
    "text": "document is one of the rare ones that's not right but they probably stand but they've converted it to word and stuck their copyright on it they have the authority to update it because they're because they yeah so I mean for that I'm not sure that we can uh copy and paste their text uh but you know we certainly can be make sure we're not incompatible right right right let's let's use let's get the Liaisons involved yeah exactly okay um that was so my next question was going to be our entities behind paywalls because when I come to the isg for review and we can't review your reference documents how are we supposed to say that this is good or not um so that's something to start thinking about earlier right is usually the solution is we go to the organization and say look we need this we need temporary access to this so that reviewers can do their thing you don't have to give us permanent free anything but uh we we the isg have sometimes gotten sticky about that one when those come up absolutely thank you ISO is is behind a paywall yeah that's I'll I'll look for those Liaisons from the chairs and see what we can discuss um the only other the only thing that I would say we would probably have to Define and it's a it's a quick one-liner is the oids and I can easily add that to draft one and it references back to x667 so it's so we can uh you know put our own spin on the language and the verbiage and write it up but they do have a really nice defined way to use oids as an integer or as a hex layout hex and dash yes Brendan go ahead so the oid consideration that I was mentioning earlier was the reverse it was how do you convert an oid into a uuid and there are there is a namespace"
  },
  {
    "startTime": "00:32:03",
    "text": "defined for that in 4122 but it does not explain which encoding of oid you should use and I have seen people using texting Coatings of you of oids I have seen people using binary encodings of oids and I guarantee you because I did it you're going to find someone using a c-bore encoding of an oid yep understood understood yeah I see what you mean with the namespace though ID name space and and vice versa okay I got it on my notes Here um last one was just thinking about long term with this let's say we have all this we're ready to go we got all of our drafts finished this sat for as a proposed standard for a pretty long time itu has theirs of telecommunity to standard got the iso International standard should this be potentially something that is is an internet standard so it has the same Authority as the rest and in that respect how do you propose once we get to that point how does it get elevated because it sets in 2005 as a post standard and I see this everywhere it's ubiquitous across anything you look at in Tech go ahead Murray um on first glance and there may be some subtleties here that I haven't grasp yet uh you're adding three new UI uuid types that have never been standardized before so you can't go to internet standard right now you could on everything up to six but not not six seven and eight themselves because they're new or they appear to be new from our perspective so the process then would be you re you rev this like you're doing at proposed standard um and then for whatever period of time we're supposed to wait you wait let it deploy and be out in the world and then you come back around and say all right we need to elevate this the internet standard without changing or like with whatever changes are allowed for that piece of the process but I think you"
  },
  {
    "startTime": "00:34:01",
    "text": "could get resistance right now to be wait a minute you can't introduce three types and say it's a standard yep that completely makes it completely makes sense I was going to say exactly the same thing and I think that number is two years and I think it can be done as a we don't have to revenue document necessarily um if there's a rata then we would but otherwise it's a isg magic wand yep uh and it becomes a I think it's up a step I think it's Errata or anything like if you have one through eight and like you discovered nobody uses two so let's just take two out or Mark two as deprecated one through one through eight except for two I'm making this up as I go but yeah then we can say this is all standard except two is deprecated and then that would work too and I think we are removing some in this document right uh there's nothing nothing removed to two is just not owned by us it's it's got its own specification uh through a whole completely different um organizational body and I just added a second reference to that so that people can go do that if they want that's it's almost never implemented anywhere and on the comments of who has Authority every library that I've looked at in source code reviews has used 4122 in Snippets in in references to 4122 is there for their implementation uh that's that's because one of them costs money and the other one probably cost money until recently and why would you bother right right it completely understand yep just one of the comments on that that was all I had and I guess I'll turn it back over to you folks thank you uh so one more there's you don't have an issue about this yet and I haven't raised it before so surprise um I looked at 4122 and it has no use of BCP 14 or like must should none of that stuff is there you've added it in this"
  },
  {
    "startTime": "00:36:00",
    "text": "document but generally yeah the the the uh template that gets created by uh one of the other folks on on here Michael or so that adds that and yes our draft originally had that as well so yes we had BCP 14 in there okay so there's 44 shoulds in this document and every time I see one of those I think all right so you're giving an implementer a choice to do one or the other like do the thing or not do the thing but there's no particular guidance about why you might not do the thing that it says you should do and we generally like these days like to see some sort of hint about why might I decide not to do what this is why am I what am I might I legitimately to do not sorry let me start again why might I legitimately decide not to do what the should says and if you can't come up with an answer to that then maybe it's either a May or a must yes and I I think that comes from just reluctance on the part of polite people to tell people must yes right and and and so you exactly so and I think they're almost all musts but we'll have to we have to go through and see if there's exceptions that's what I was going to suggest to just go through and make like how do you really feel comfortable giving someone apps if they're giving them Absolute breadth to decide then it's a May if you're giving them no way out then it's a must otherwise you should have a clear idea in your head why I might decide not to do whatever the thing says yeah in my my comment on that specifically is the entire best practices section does detail the yeses and the no's the why would you do this and why wouldn't you do this and then provides the should guidance we had a fair amount of musts in like draft zero three I think and every issue tracker it seemed like everybody was opening was this must should be assured because they have some situation where they want to do something slightly different so we documented that in the best practice and"
  },
  {
    "startTime": "00:38:00",
    "text": "took it from a must down to a should so we actually did have way more musts back in the day that got moved down to shoulds because people wanted us to document one-offs and caveats and things that we put in best practices so that's that's my comment on the musk for should so we need to we need to just someone else needs to do a a walk through yeah you Kaiser because you're probably too close to the text I'm too close yes yes just to figure out whether whether whether there's an exception listed clearly absolutely yeah and I I completely understand and I do want that so if there isn't I all for it they're not all in best practices for example for version eight UI deviates uniqueness will be implemented station specific and should not be assumed when when am I okay to assume it yeah if you're gonna say should not you know okay thank you yep that's an easy must not yep got it so that was your last flight was it yes yes sir um so I have uh um one item to bring up his future virtual interims and I want to leave that too late to watch the end um but first I think we should just open the mic line to any other issues or agenda bashes at this point anybody else so I'm going to kick you off the slides here let me do that revoke slides share that screen so so uh we had put up uh on the mailing lists"
  },
  {
    "startTime": "00:40:01",
    "text": "back and in October um a second not a doodle poll because they really annoyed me as a paying customer um I paid for like eight years and anyway um so try this thing rally uh this was the link here I just posted that link into the chat as well a couple minutes ago um and we have uh basically five of us having answered this so it would be great if if you care about when we schedule things if you want to put your name there um and so you know like I can see that uh November 23rd which maybe a bit soon would be a really good time but um there's other days that that would work or not work and so we're just going to pick some of those days as uh I think we wanted to have a virtual interim in early December and middle January and middle February with the idea that we counseled them if we didn't if we're all done and that we would probably ideally not have a have an in-person meeting in March because we'd be in working group last call or past that point does anyone anyone have a problem with that schedule um so please get your name in there if you want to attend um based on I think most of us being mostly in North America Brendan's exception that would probably wind up you know uh with late morning kind of times uh for that traditional 10 o'clock uh Eastern you know or something like that in Austin yeah exactly so I expect it to be in your time zone but I won't be um so uh put your name there uh and uh um that's about it for me"
  },
  {
    "startTime": "00:42:01",
    "text": "um we got to cover the other question I had which was the standards internet uh draft and how internet standard and how we're going to get there so we covered that already I was going to talk a little bit about um uh working group adoption and and that sort of thing so I from a from a process standpoint I think we we kind of jumped to step on the on the process uh in um in moving it from from the uh initial author drafts to a working group graph because uh you know there that's normally accompanied by kind of a a working group consensus and that sort of thing so in any case that has happened and and you know we don't need to revisit that I don't think but uh one thing I I'd like you to like like to have everybody keep in mind is that I mean to the extent that everybody's kind of agreed on everything then sure just edit it into the document no problem but as a working group draft um uh the the original authors are now editors and so really it it the the idea is that if there's something that's controversial that that we need to come to agreement on then that needs to be a consensus call from the from the uh working group and you know what goes in is the working group consensus so uh you know as long as things are moving slowly uh let's uh as long as things are moving smoothly let's keep going on this but if we get to a point where there's something that there's some disagreement on let's not jump to to doing it let's let's take the time to uh to get a to get a working group decision on those things okay the good technical ways of doing that is to make it a pull request that you can then share on the list and then people can see exactly what the text is that you're proposing or arguing about and we can actually even walk through those in fact that's what I would propose we do in our next virtual"
  },
  {
    "startTime": "00:44:00",
    "text": "interim is that we literally just share the GitHub page that's on the screen now um and you know if there's wordsmithing or arguments about that then we just will do that right we don't need uh we don't need slideware is what I'm saying yeah yeah yeah I think the amount of changes that are left are easy enough to do in in small pull requests like that so completely understand the amount of text that we were doing for draft zero was very hard to summarize and pull request but yes I can do that and yeah that that's fine so we're we're beyond that now and and let's let's just kind of try and uh just kind of try and use that philosophy going forward should we done I think we're done is there any other business for the working group everyone is going twice thank you all we're done did you um I don't know yeah for the for the document that was always listed as being oh uh I think you get too many l are there Three L's in rally yeah no that's correct oh okay yeah that's correct yeah sorry what was the someone said the last line did I get that right they're not all in best practices foreign"
  },
  {
    "startTime": "00:46:05",
    "text": "it's actually at our whim we're we're entrusted to to be the uh to act by Fiat when it comes to what we're working on thanks guys they're nice work yeah thanks Kaiser as well anytime group was pleasure yeah yeah totally yeah and there's a button there's a button actually I just close by there oh yeah it's not that one yeah uh you can go ahead if you still have your laptop open I just close mind before I actually thought about it oh so you're going back to North America I'm going back to North America yeah I was supposed to go back to Berlin on Saturday but uh my place to stay disappeared huh um because my Visa to remain couldn't remain as long as I thought it could that's all I'll say on the cycles and Mike are here foreign"
  }
]
