[
  {
    "startTime": "00:01:15",
    "text": "hi everyone we are one minute passed let's give people one or two more minutes to join and then we can start"
  },
  {
    "startTime": "00:02:24",
    "text": "in the meantime if there's anybody on the call who's not an editor and would like to take notes it would be extremely useful so please speak up or else and just say something on chat all right let's uh let's get rolling then hi mike are you saying you can take notes today the agenda for today is um an update from the co protocol editors for the next 40 minutes uh followed by a session by dmitry"
  },
  {
    "startTime": "00:04:03",
    "text": "who's on w3c we see verifiable credentials unless i got it wrong and he'll be talking about a specific use case that came up in w3cvc and applies to nap and how how it can be implemented or what changes are needed in up to to address it just one more heads up and we have a small dependency in the protocol on a draft from the sec event working group which has been effectively abandoned by the editors by that drafts editors we are working to get them back on track and actually push it across the finish line if we are unsuccessful with that we will want someone to volunteer uh to join that draft as a course so please take a look and your if you're interested please let me leave no um again before we start we absolutely absolutely need a note sticker that's one thing without which the meeting is not worth a lot so please pick up if you can take notes"
  },
  {
    "startTime": "00:06:00",
    "text": "on whatever media yes justin so i just wanted to note that uh i had a meeting with annabelle last friday and i did mention to her the um the second event subjects draft so i i'm also trying to poke her to get that over the uh over the finish line i know she's been uh very busy with real day job stuff um but yeah so hopefully that doesn't take too much to get it over the line i've been uh keeping an eye on that as well all right all right let's see um well any of the editors could take notes i'm going to be presenting for the first part so i can't uh i can during dimitri's presentation though uh so if if fabian or aaron can take the uh the first section i can jump on afterwards to help yes no thank you iron and thank you justin and let's get going all right oh nope that opens it up i'm not sure how to share"
  },
  {
    "startTime": "00:08:00",
    "text": "let me try no slides available disappointing it says the new deck is being shared oh no it stopped we might have tried at the same time can i try again maybe all right let me see i'm asking to share the slides yeah i got no slides available hmm okay let me try then okay [Music] if not i'll just i'll try to share from my uh from my desktop not ideal but it'll work hmm yeah all right i've sent in a screen request did i think you need to approve that or something good thing identity and security is easy yes i really want to share a screen oh man which screen is which this is always nope not that one you guys don't need to see my spotify playlists so here we are okay all right good excellent"
  },
  {
    "startTime": "00:10:00",
    "text": "um okay i think we're good um and sorry just let me get this set up there we go um all right uh so hi everybody welcome to the nap interim meeting of um 2022-01 i forgot to change the title slide i got the date on the bottom right at least though so this is the right presentation i'm just lazy with my slide deck um so today we've got four main topics that we're going to be going through uh updates to the drafts um talk about sort of what our current process is what the editors have been doing um over uh over the last few weeks since the last ietf and what we're uh what we're working on from there um the big topic today to talk about is going to be the ietf 113 hackathon which is going to be coming up uh at the end of the end of march um so just ahead of ietf 113 we'll have a lot to talk about that and then talking about kind of next steps and topics in the group again largely in prep for ietf 113 uh in the core draft um we've made a lot of uh a lot of document changes um that haven't actually resulted in any protocol changes um we have not published a new draft since the last ietf the editors were looking at a couple weeks ago we were looking at what was in there and decided that it it wasn't worth publishing a new draft trying to get a new draft uh crammed through in time for people to be able to read it for uh"
  },
  {
    "startTime": "00:12:01",
    "text": "ahead of this interim but you can see the editor's copy up on uh github so if you go to the github repository for the core draft and also for the rs draft um you can click through to have a live rendered version of whatever is on the current main branch in the repository so yeah um what's changed here we've got a bunch of new security considerations uh these are things that we had talked about uh during the last meeting so we've got stuff like the um the cuckoo token attack uh which is a really interesting sort of multi-layered attack where you can uh convince a client to replay a token under some really replay a keybound token at that under some really sort of uh specific circumstances um also some stuff about redirects and um some some bits about server side request forgery and a few other things like that um all of those security considerations have gone in with no real changes to the actual protocol uh so these aren't uh necessarily things that are attacks against the protocol itself but attacks against deployment choices that the protocol does allow um and a lot of these are just because it's going on the web and so people are going to deploy it in a lot of different ways so it's our responsibility and our job to tell people like hey if you're using this this is something that you need to look out for the editors do plan on having uh at least one new draft in time for ietf 113 um uh we think that there there should be plenty of stuff uh in there by then and more on that when i talk about sort of what we've been up to"
  },
  {
    "startTime": "00:14:01",
    "text": "um but in the meantime please go check out the editor's copy in github and also uh please continue to follow the pull requests uh whenever we have a new pull request that's not just a simple like typo fix um kind of thing uh we do try to let the list know and let people go poke at it and read it ahead of time before we merge it uh all right yeah so these were the two security considerations that uh that i had just mentioned those are in there uh there's some new ones that are uh pending merge right now they'll probably be merged uh i think they're actually due to be merged today uh also um there was one uh one discussion um that actually clarified the intent of two different parts of the protocol that we realized developers were looking at kind of similarly um because they they do look kind of similar uh on the uh on the surface um i should ask actually are the slides coming through because in my preview they're they're not they're really kind of chopped up can can people see what i'm presenting or no no yeah i mean this is the only thing on this screen let me i wonder if i can just if i just get out of um slideshow mode if that's better that looks better nope no look it looks like you have requesters that are are are going over it and uh therefore the application is blocking them but anyway we could always this is this is the only app on this screen so i have no idea"
  },
  {
    "startTime": "00:16:02",
    "text": "why that's breaking so fantastically um so we will we'll try our best i might just need to jump in and out of full screen for each slide uh or or just you guys can go look at the uh um look at the pdf and follow along um all right so anyway we had two parts of the protocol that looked really similar and they looked like there were two ways to do the same thing uh namely the token rotation function which is part of the token management api and then the grant update function which is part of the grant management api in both of these it looked like you could send a message and sign it and basically rotate the access token uh and in a lot of ways that's that's kind of right because they were both similar to different parts of how oauth2 refresh tokens get used in the real world um but what the editors realized um when we were when we were looking at this and looking at the feedback um the uh what's really what's really going on in the protocol what the protocol is actually allowing is that um you're talking about two very different kinds of things with slightly different results so the first of that is token rotation so if you're going to the token management api specifically for a single access token the whole idea of this is to say i want a brand new access token with all of the same rights give me something that is an exact copy of this and throw away the old one if you can uh the caveat here is that of course if you're using a structured stateless access token then you're probably going to have um [Music] some other considerations for trying to"
  },
  {
    "startTime": "00:18:01",
    "text": "while it's in flight um there are methods to do that all of that is outside the scope of ganap core uh possibly a topic for knapp rs but that's a separate discussion later on uh the main point here though is that when the client is saying rotate a token it's saying i want to replace this token that i am sending to you with something that does the same things just as well a grant update however is saying that i want to get a brand new access token possibly with new characteristics i might be requesting something that's downscoped i might be something uh requesting something with more access rights uh i might be trying to bind it to a different key uh which is a whole branch we haven't quite figured out what that looks like yet uh but the point is that i'm asking for something new it doesn't necessarily affect the old tokens in the system now an as is uh free to get rid of all related access tokens when a grant is updated and it may want to do that and so that's some new text that um we'll likely want to expand in the security considerations about grant updates and how they um and how they affect the system uh as a whole but ultimately what you're doing here is saying that in the context of this existing grant that you're allowing me to continually update i want a brand new access token that does the kinds of things that i'm asking for for this grant so um this is the main difference between these two functionalities there is still a lot of overlap because a a client that's dealing with an expired access token could choose to either rotate the existing expired one or go talk to the grant and get a brand new one instead"
  },
  {
    "startTime": "00:20:01",
    "text": "we right now we allow both of those we might want to lock that behavior down more to simplify this choice um but functionally from the as an implementation perspective it's now it's a more clear at least hopefully more clear what's being intended by these two things and again this is this is not this didn't end up having any real protocol changes just our description of what the intent is for different parts of the protocol that were already there and hopefully as we continue to fry refine this kind of text we can start to um really lock this down and make it a very deterministic decision of i'm here in the system this is a thing that i need to do or somebody made this specific request what am i supposed to be able to do with that all right okay so the current process uh the editors have started working through the issue backlog there are still a lot of issues open and um oh sorry is there a can i bulge in with a question i'll do it at the end yes uh yeah go ahead so on token rotation uh making sure that the semantics is actual revocation and the old token cannot be used is difficult in a cluster we all know that it's it's a typical problem um now the the normal use case is i'm five minutes before the expiration of my token i know that i will go and and get a new one um we call it rotation but i really don't nobody cares if the old token is still useful for the next five minutes that's fine and then there are very special cases"
  },
  {
    "startTime": "00:22:01",
    "text": "where i may have logged out changed my password whatever it's policy dependent and i really really want to revoke my token so should we actually have two separate solutions or make it optional or actually think about this explicitly so uh token revocation is already a separate function of the token management api uh for that type of thing and revocation uh is a signal to the as to to throw out the token because the client is done with it um so the the question then becomes um do we want to have a special functionality that says no really you must throw out this token and give me a new one in the same at the same time like make that uh make that statement stronger is that am am i hearing that that's that's what the uh the question is uh so you sort of indicate that this is the intent to to actually say that we have this semantics of the old uh the old token yes that's that's the intent of token rotation it's saying get rid of this old one because i'm done with it and give me a new one to replace it so what i'm saying is for the normal use case this is overshooting it okay and yeah because of because of the revocation requirement because if i want to revocation i have revocation yeah because because it's difficult to implement this"
  },
  {
    "startTime": "00:24:01",
    "text": "uh semantics of the old token cannot be used so uh the editors talked about that um fabian specifically has um some strong opinions on on token rotation and reuse and stuff like that i'll let him chime in if he wants but uh what we had kind of discussed here though was that to make it a uh a shell if possible and we have a new paragraph in security considerations that talks about why that might be difficult to do in a uh inapprovable and why revocation as a whole might be difficult to do in a provable way uh in either a distributed system or in a system with uh structured tokens so the i think what's important is that the uh is that the it sets the expectation for what this action means and the as is going to try and um you know try and do the best that it can with that uh so if the as is not able to um to actually revoke the token itself for you know whatever deployment reason necessary then the uh then the client the client kind of doesn't care because it's done it's its job it's not expecting to be able to use that access token again once it's been rotated well the expectation is not only the clients the expectation is of the you know the person running the system and they want to know whether revocation actually happens or not whether it's guaranteed by the system or not and i think by by"
  },
  {
    "startTime": "00:26:01",
    "text": "making the normal the normal rotation into this very strong revocation we're making everybody's lives harder okay yes i believe that revocation should be separated from token rotation because in some cases it will be supported in some cases it won't be supported and if you do that separation then token rotation is a creation of a new access token and grant update is a creational new access token so the two functions are similar so if you have just let us say grant update and token revocation then that's that you are solved thank you danny okay um i am going to see if this trick works to force the slide to update yes awesome cool oh no it broke again oh it's because i accidentally changed slides okay i think we're good sorry about this um all right so right now the editors are working through the existing issue backlog um we've got a lot of stuff that um uh kind of got sifted away right now uh for a while uh because of some you know other larger discussions um but we've actually gone through um [Music] all of the issues and have uh started talking about kind of what exactly we want to do about each of"
  },
  {
    "startTime": "00:28:01",
    "text": "it's uh it's slow tedious progress because we want to make sure that when we come to the working group uh with a way to address these issues we have something that is at least a plausible solution even if that solution is the editors think that this idea you know shouldn't be implemented or you know uh and so we're proposing this just get closed we want to be able to bring that back to the working group with our justification or rationale for uh for doing that um in order to make sure that it's it's clear kind of uh where we're coming from and so that the group can weigh in uh with consensus on that we also uh as always welcome people to jump into the issue tracker if there is uh something that uh is being discussed that you think needs to be addressed then do so i will caveat say please uh if if a decision has been made please do not open duplicate issues especially just because the group did not decide uh in a way that you agree with this is why we are a working group not everybody's going to get their way um so uh for example the uh just as a concrete example of that the token rotation thing um so i i realized earlier this week when i was working on my code um my my own implementation of canal that uh i had actually implemented a data model that doesn't quite actually fit with uh what the spec is now saying um but um i will as an implementer uh bring that forward uh you know change the code to update that"
  },
  {
    "startTime": "00:30:01",
    "text": "uh regardless uh you will see a um a series of uh pull requests and issue actions and stuff as the editors are still meeting regularly uh and still making progress on the core draft and we are in fact focusing on the core draft right now more about the rs draft in a few minutes because first i want to point out that we are preparing for ietf 3113 and specifically we are preparing for the ietf 113 hackathon um we believe uh the editors and uh i believe that and the chairs believe that the core protocol of ganap is stable enough and has been stable enough recently for us to actually try and plug this whole thing together with multiple implementations talking to each other so we have signed up and proposed a project for the ietf 113 hackathon um which means that our plan is to be able to get together and plug stuff in so you see what breaks i've been working on um making my uh java implementation available so that it is um deployable so that people can go poke against an installation of that or set up their own installation if they want um i know aaron's been working on some php stuff there's a python client and laths group has a python authorization server floating around i don't know if that code's available yet um but the whole idea with this hackathon with knapp's take on this hackathon is that you know this is a multi-party network protocol uh we've got multiple different roles to play here"
  },
  {
    "startTime": "00:32:00",
    "text": "let's try to bring them all together and we want to try and go into this hackathon with enough implementations of different pieces of that as we can so we've got a bunch of stuff and hopefully we'll be able to collect more and bring that information to the list as as we approach ietf 113. so really looking forward to that it should be really good um in order for the hackathon to work we have uh what we're calling the interoperability parameters can happen as you guys all know is a very wide-reaching protocol it's got a lot of different ways that it can run so what we're saying is that we are limiting the uh the hackathon parameters to using a redirect start and finish mode for interaction uh hpv signatures uh specifically with the rsa pss sha 512 algorithm and associated keys and a content digest with sha 512 as the proofing mechanism um and we are working on making available libraries and reference implementations in java rust go and python um for at least bits and pieces of the protocol for people to be able to build their own stuff on top of that um and if people have other stuff to bring in that's great um single keybound access tokens so we're not dealing with bearer tokens we're not because that part's easy uh we're also not dealing with multiple access tokens right now because that part's a little bit harder um arbitrary access rights we're not looking to actually go into and filter all of the different uh resource access stuff that you'd be doing in a real system and we're targeting dynamic clients and keys so you just show up with a key and just start using it"
  },
  {
    "startTime": "00:34:00",
    "text": "without having to pre-register things with all of this in mind we want to encourage people to use other parameters other signature methods other token methods because we will have an incomplete matrix of a feature of the other features covered so if you bring your code that does other stuff in addition to these interoperability sort of baseline parameters uh that's great um and the other reason for doing this is that this is uh hopefully going the the hackathon will hopefully help us with our um mandatory to implement discussion which has been something that has long been simmering in the background um of this working group that we do need to uh to get to eventually um let's see here not much else um going forward uh sorry go ahead if people have implementations that want to raise awareness want perhaps to get people to contribute and join them for the hackathon what's the right venue to talk about all of this um the mailing list uh so i can start a thread um i'm just leaving myself a note to do that um sorry i have too many notes here i've gotta make sure i know what i'm talking about um uh i'll start a thread um and we can collect that there and we can make that since it's a publicly available mailing list we can make that available to the hackathon community as well there is a hackathon mailing list and there will be announcements that go out to the to the general ietf about the projects in the hackathon as well"
  },
  {
    "startTime": "00:36:02",
    "text": "um email thread and uh people can chime in on that thread or just write to the list on your own uh another another side effect of this uh hackathon is that we will have a um a listing of implementations in the uh in the spec the draft spec itself uh that's a section that we have yet to add um during development and the editors are hoping that we will actually be able to have both the mti and implementation status sections as a fallout from these activities at ietf113 right cool so just resetting the screen here close enough so going forward these are not things that we're targeting right now but these are something that uh we think will really really help the community here is development of a conformance test suite um there's the open foundation conformance suite which is a an open source java based uh conforming suite that's designed to test protocols like gnat it was originally designed for uh oauth 2 profiles and uh is currently being used for a lot of open id connect related stuff there's a lot of really good features in there um so it's there's a lot of engineering work to make uh to make the to make an app modules for that but uh i personally think that's going to be a really useful thing uh when we can get there um we also would love to see support and extensions for open api and async api and these other api dis formal api description language systems that are out there so that people that are developing an api can just say oh it's gnapp here are the parameters for how to get an app with this um and uh and have that actually get"
  },
  {
    "startTime": "00:38:02",
    "text": "published and work so almost done um next steps uh within the group um you know i'm just gonna leave this here um there there is a formal security analysis uh in progress um which has already brought to light a few um security considerations and um some really really interesting attacks that uh that the group didn't see on its own so uh we definitely want to see that continue and the goal is to actually automate that analysis and testing um as as is my understanding uh we need to continue to outreach other communities we have dmitry uh presenting today on some work that's being done in w3c that may or may not have uh overlap with with this uh but uh you know it'll be really interesting to have that conversation um and of course you know in addition to continued work on the core draft um we do need to get back to the resource service draft uh it in fact did just expire that doesn't mean that we forgot about it it just means that we've been um we've been focused on uh the core draft uh for a bit now um there are a lot of good discussions that need to happen there are things like a token model things like introduction of the rs to the as in a dynamic way things like uh if you have an rs that speaks to multiple as's one of the ramifications for that for trusting tokens and for dispatching requests um things like if an rs wants to introduce new resource access sets what does that look like which again plays into the token model um this is all stuff that isn't necessarily exposed to the client um at least as its role in the system"
  },
  {
    "startTime": "00:40:00",
    "text": "um but it's stuff that's still important for uh for deployments to be able to answer and do so in an interoperable way and there will of course be a lot of unique security and privacy considerations in the rs draft as well uh that'll that'll be a lot of the the text of that document we believe um and that's all i have for the editors update uh so there are any questions or comments i don't see anyone in the queue all right i will stop sharing thank you justin reid here we go all right thank you you made three you're next i'm uh dimitri zagdulin a big fan of knapp work and uh so i wanted to come and talk with you all about some of the work that's being done in the w3c credentials community group specifically the vc api task force and specifically the interactive workflow which was partly gnap inspired and i want to i want to present the use case which i think could be useful to nap and i want to see if there's any alignment there if we can meet that use case with gnapp uh if we can start talking about inner interoperability uh between app and vc api so how let's see um here's here's my link to the slides externally and let's see how do i ask how do i present the slides like"
  },
  {
    "startTime": "00:42:01",
    "text": "okay one sec so no slides available all right uh i i think dimitri i think you're going to have to just share your screen something something wrong with the slide important not not a problem not a problem i'll do that right now so give me a second okay so asking to share screen here we go okay fabulous can everybody see uh slides actually oh okay right right right one moment yep okay here we go uh one second permission denied by system just just a second let me let me re-request real quick or sorry not not slides but screen sorry sorry folks uh it's giving giving me an error uh could i uh justin could i trouble you to uh share the slides or um can i can i invite everybody to click on the slides link that that i just posted in chat yeah so i posted the link to the slides and i'll try to share my own screen thank you so much uh there's not not too many slides um available yeah uh rather yeah let's get going right so all right so let's let's pull up slide number two use cases so here's here's how uh this use case came up in the verifiable credentials world specifically in the uh education corner of our fiber"
  },
  {
    "startTime": "00:44:00",
    "text": "credentials so i'm one of the project leads for an open source digital credential wallets for universities uh that's edgy wallet uh by dcc so one thing that came up is we had expiring credentials and we needed to refresh them this this is gonna sound familiar to you with nap because there's the refreshing tokens part of the spec and we'll talk about that in a second so that was that was issue number one uh we needed to send an existing token plus some prerequisites plus some additional credentials and get back a new version of the credential for expiration so those those first use case second one was we needed uh to issue a credential and the issuer the as needed several several prerequisites including an open id connect access token in order to issue that credential so we we did some research into the prior art we looked at oidc for uh verifiable presentations we looked at psyop we looked at gnapp as well as diff's wacky presentation exchange and did come and at the time there was none of the protocols that we looked at had the notion of so obviously most of the protocols including knapp have the notion of requesting access whether it's an access to a resource or requesting the issuing of a credential there's that all the protocols have the notion of a request response what i didn't see was"
  },
  {
    "startTime": "00:46:02",
    "text": "a multi-step uh request and then the issuer or the authorization server says in order for me to fulfill the request i need the following prerequisites but i did i did see in the gnap spec the interact and the continuation properties the notion of all right so i i the authorization server received this request and um here's what you need here's what you need to give me uh in order for for us to proceed here so very much a continue or interact sort of sort of thing so let's move to the next slide [Music] right so this is high high level overview of what we're talking about client i'd like to uh to reissue a token issuer authorization server i need the old one i need an opening connect token and some maybe some other optional uh supporting credentials the client submits those uh the issuer authorization server grants access or issues the credential right so very straightforward uh you can see how this this would be a fairly fairly common workflow so let's move on to the next slide so as you're probably thinking okay so how how can we handle this with nap so we do have the notion of we we do have in gnab spec the refreshing expired access token or rotating the access token and justin uh talked a bit about the difference between issuing a new one or refreshing an old one and so on earlier uh in this call"
  },
  {
    "startTime": "00:48:01",
    "text": "so we have this access token manage endpoint where the client knows how to get a new one especially essentially similarly in the ver in w3c verifiable credentials land we have this notion that a credential has a property called refresh service that has a url of the api endpoint where that token or that credential can be refreshed but again so one thing that i want to talk to you about today and one thing that i think would be useful in nap is the notion of instead of just submitting the old token for refresh allowing for arbitrary other prerequisites so let's um so so let's look at a similar endpoint sorry at a similar use case that works in a very similar way as refreshing tokens but again it introduces this need for for prerequisites so next slide please again a client requests to issue a token or credential server gives the list of requirements and a an endpoint a continue or an interact endpoint of where those prerequisites need to be submitted uh and cycle and so we're essentially looking at an arbitrary amount and an arbitrary number of request response cycles of uh perhaps the client submits the prerequisites and the client says great now that you've given me these i need two more of the following"
  },
  {
    "startTime": "00:50:01",
    "text": "and then the cycle continues uh next slide so so i wanted to to uh take the conversation to the group can we use knapp's interact properties and uh continue properties to [Music] model perhaps the server responds with the inverse of a rich access request uh property right so can we model using uh the napkin interact and continue properties and some other definition of prerequisites to fulfill reissue or issue with prerequisites or any sort of multi-step interactive workflow so let's let's pause here and i would like to hear from the from the group firstly if there's any questions in the framing of the problem and i'd love to hear some thoughts on on how to do this in map yes justin uh so first thanks dimitri this was this was a really great write-up and um this actually aligns really well with the token rotation discussion that uh that i was talking about before because um if you actually go back yarn if you could go back i think it's two slides uh when we start talking about the can we add prerequisites yeah right there um because what i think it actually fits a little bit better to given our sort of clarified"
  },
  {
    "startTime": "00:52:02",
    "text": "um model here the clarified semantics is actually more of a grant update so it's like i want to be granted a new thing but you're going to require a bunch of other stuff from me um because at the grant level that's where that's where the whole interact system is really meant to kind of uh come into play um you know because that's where you send the if you're doing a redirect that's where you send the interact hash uh if you're doing something like in early early early versions we had a stub for uh did com uh encoded did com messages like that's where you would send the encoded didcom message as justin encoded json parameter um so it's it's not exactly the same as rotating an access token it's updating the grant and what you're being issued is not an access token but you're being issued something else you're being issued a verifiable credential using um in this in this mental model using canap is the kind of framing to that um and so uh my my thought here is that um from that stage forward it actually really does make a lot of sense of and it does align with knapp where things diverge and i think that this is an important divergence is how the whole process starts off um because in knapp we have the sort of the simplifying presumption that in order for the client to uh to start the nap protocol it makes an http post to a single url for the purpose of uh getting access tokens and other stuff and you're already like very much in the kidnap world in the vc world you have an existing api"
  },
  {
    "startTime": "00:54:02",
    "text": "that is looking to kind of bootstrap its its trust and its access rights or at least that's that's my understanding of where where the bridge needs to come here because uh in the vc api world if i make that request to the issuer and the issuer issuer's fine with everything it's just going to give me back the um the vc and i'm not going to have to do anything else i'm not going to have to consider anything else right so so the question here and i think that this is a really fascinating one for the group uh for for both working groups is that uh is there a way and does it make sense to allow a an api like the vc api to kind of almost start a gnap flow in the middle for its own purposes and at that point is that is that doing gnap or is it doing vc api security model that looks a lot looks and feels a lot like an app um and i i'm not sure what exactly the answer is for that but that's that that potential connection that's why i wanted to meet you to present to the group today and to uh to hopefully um start a larger conversation about um how these things might stick together uh dimitri i'm i'd love to hear your thoughts on this too it also looks like there's other people in the queue so i'm gonna i'm gonna shut up now yeah but thank you so much appreciate it thank you uh thanks justin yeah great questions i do really think that uh gnapp and vc api can be very complimentary uh so for"
  },
  {
    "startTime": "00:56:00",
    "text": "one vc api requires access tokens it requires authorization for their issue and verified calls and getting that authorization getting those access tokens is out of band and gnap is one of the mechanisms that we look to for for setting up that initial bootstrapping but more importantly i would love to hear from the group and from you justin whether there's intention uh from the gnap community to also use it as a vc issue or verify unless so verify but let's say uh to issue credentials uh in the verifiable credential sense not in the of two sense that's it yeah jim hear me um i i would train i would try to frame this question in terms of delegation uh if at all possible because that is the intent and it is also uh the issue from a human rights perspective that i've tried to raise in some of the w3c context particularly the vc api and i don't know if that's a clarifying thing or if it's a confusing thing but if um we introduced because you have an authentication component you call it the right you have an authentication component to the flow you described uh the question becomes uh sort of by intent uh are we gonna allow delegation uh as part of this process thank you justin i just wanted to respond really quick to dimitri's question about whether gnap could be used for issuing vcs um one of the things that"
  },
  {
    "startTime": "00:58:01",
    "text": "has been talked about from the very beginning is that open id connect taught us that delegation protocols like oauth can be used to issue things in addition to or beside access tokens i see absolutely no reason why you wouldn't potentially in cases want to also issue vcs i also see a lot of use for potentially the as accepting vcs as as part of this negotiation so it's telling the client i need a vc that proves the following 12 things you know send it to me however you want like that that type of flexibility was intentionally built into uh knapp's interact model like there's a re there's the very very good reason why uh the start method is is a list and those and that list of items can be potentially parameterized like uh we want people to be able to say like you know you could go to a web page or you could send me this message or you can just prove this crypto problem or whatever other types of things people want to come up with uh that is a really important extension point um so to me it makes a lot of sense for that to be able to go back and forth uh i don't speak for the group but i would not expect this group to do the definitions of how vcs fit to ganap that seems a better fit for the vc community um because the heavier lift is going to be on that side to make sure that the vcs all of the normative language around processing and issuing the vcs is is followed appropriately um but that's not to say that you know as dimitri and i both know there are and adrian as well there aren't a lot of people that are in both of these communities that would be interested in in seeing how those fit together"
  },
  {
    "startTime": "01:00:01",
    "text": "um but can app as it stands right now uh has uh already has mechanisms for direct issuance of what we call subject information uh which per our charter we're limiting to identifiers and assertions um you could tilt your head and call a vc an assertion um or you could define some another thing that could come back its own data category and handle that in its own way either way gnab could uh handle it being extended in that way in my view so so unfortunately i have to cut this discussion dimitri i hope you got at least the start of what you were looking for and let's say continue this discussion on the mailing list very much so thank you so much thank you everyone and thank you editors for the great work you're doing everybody have a good day bye-bye bye everyone you"
  }
]
