[
  {
    "startTime": "00:00:10",
    "text": "Okay. Folks were at time. Good morning. If you're local. Good afternoon. Good evening. Good night, if you're not this is the open PGP session. If you should be in some other room, I actually don't leave because we'd like to have we don't have too many too few people in the room. My name is Steven Farrell. I'm one of your co chairs. DKG is the other one who's remote this time and DKG, I think, is gonna talk through the dress lights Excuse me. Thanks. So glad that everyone's here. We have a pretty straightforward agenda today. But let's start with the note well and the usual pieces here. So, you probably already know the note well. If you haven't, please go back and read it. The slides are linked, from the data tracker. And you can get more details there. It's basically just as you need to know about the intellectual property. Requirements, and you need to babe yourself. If you are in person, we ask to make sure that you're signed in to Mead echo probably the Meetecho light client is the easiest one. It's also linked to from the data tracker agenda. Please join the queue if you plan to speak in the room. Just as good for people who are remote to know who's speaking. And if you're, and you please don't use audio and video if you're in the room. You've had some strange feedback earlier this earlier this IETF from people who are listening in the room to the room. And if you're remote, keep audio and video off unless you're presenting and if you got a headset, that would be great. Rich and Carmen are both note takers. Thank you both of you. Much appreciated. So one more reminder about how to how we hope to behave as a community"
  },
  {
    "startTime": "00:02:01",
    "text": "We, want everyone to be pleasant to each other. Use argument about the topics, not about the people, and look for best solutions to the ecosystem as a whole. And Yeah. I think we're actually doing a pretty good job with that, and I appreciate the working group holding to that. So the agenda we have for today I'm gonna give a brief overview of where the crypto refresh and the working group status is. I'll also mention this funny little widget that you see at the bottom left corner of the slides. Gonna have a discussion about the post quantum cryptography, draft, which will be Aaron Whistler, there's several sub parts to that. And then we wanna discuss some potential, drafts for other, adoption. If you look at our milestones, you'll see that this month we're expected to consider adopting 2 other drafts, and there's a handful of them that are up for discussion. Does anybody want to bash this agenda So not passionate agenda, Dikishi, but I think, the the transition part is justice was gonna present that. Is that correct? Yes. So Aaron will present the the questions around the post quantum draft and Justece has some slides he wants to present about about what we think about transitioning to the post quantum future. There's also, there are some slides for the second half of the agenda from Andrew Gallagher, who is unfortunately sick, and can't present them, but, I don't know. We can maybe do some PowerPoint karaoke with that if anybody wants to try to present them, or we can just take a quick spin through them about the replacement key work. But Andrew sends his regard his, regrets for not being here. Not hearing any agenda bashing. I'm not seeing anything in the notes. I think we will start with the working group status and crypto refresh So"
  },
  {
    "startTime": "00:04:02",
    "text": "Since I TF1 18, there was a draft 13, which just had minor cleanups being done. To references and spelling and typos and IANA registrations and things like that. There's nothing substantive there. The draft is the RFC editor's queue. I don't think we have anything else that we need to do on this right now. So please keep your eyes out for when this ends up in off 48. Those of you who are the authors of the draft, It's pretty exciting. We should be getting this, It's publication. That's hope. I wanna also mention go back to the beginning here. This We got a badge for open PGP. So this is a badge that the IETF occasionally will produce badges for protocols. And the IETF, asked to design group to come up with a badge for open PGP, and this is what we came up with. The nice thing about this badge hot, hot, the, the green thing you can see there on the, on the left of the slide, is that folks who are interested in you know, identifying themselves and supporting the open PGP ecosystem can go ahead and include this in projects that you're working on. The badge, if you when I squint at this badge, what I see that is a fountain pen, which is sort of signature reminder, There's also sort of a view of a padlock. For those of you who are at the padlocks, then there's also an identity, which covers, I think, sort of the main three parts of what OpenBGP offers. And so it's, sort of a pleasing and visually distinct thing that, we haven't seen before. So, This is now available for your use. I haven't published the pieces that we have in a particular repository that makes invisible yet, but I will do that shortly. And we hope to be making, I don't know, at least some stickers that we can hand out in person at the next.etf. That we didn't manage to get the stickers made in time for this one. This all came together at the last minute."
  },
  {
    "startTime": "00:06:02",
    "text": "But yeah, if folks have ideas about where the badge might be useful, we'd be happy to some of those suggestions, on the list the other big piece of working group status is that we are successfully rechartered, as you all probably know, the key point here is that we are working on specifications that provide guidance to open BGP implementations and applications. Our milestones are the PQC draft that we're working on. And then we have our milestones, we are expected to try to adopt that's related to symmetric persistent symmetric keys, and superseded keys, sometime this month. That's the theory as we all know milestones are aspirational. Let's let's let's try to do them if we can, but if we decide as a working group is not what we want. That's also okay. We can adjust our milestones. I see in the in the notes Aaron is asking whether we can pick our RFC number. I know no I know of no way pick the RFC number. I'm not sure exactly why folks exist 9760 is, special. Maybe it's 404880 times 2. We we can come up with some numerology that would make things happy. Erin, Erin, Erin, because it was 2440, then 4880 and now we're trying to, again, I see. So that means that we're not allowed to revise it again until we get to RSC Alright. Sorry. I can't do the was gonna make a joke, but I can't do the math fast enough. Yeah. I mean, I mean, we come advise the whole standard. We can add some bits and bits and pieces, but we can't do a version 6 a version 7 with everything new again. Sorry. So I have noticed that the RC editor does like funny numerology in their choice of RFC numbers. But I am more interested in getting the draft out. So whatever whatever our number. They give us"
  },
  {
    "startTime": "00:08:00",
    "text": "I personally am not gonna complain about it, but I'm pretty sure that they're aware of this, of this desire. So so we remember, we can ask. Yep. Yeah, So, that's the slide for the very end here. So I'm gonna go ahead and switch slide deck, I believe, if I could figure out how to do that, but I think it's time. Unless people have any questions, I think we should switch over to talk to, to air in stock. So I think there is also an IETF web page that has these protocol budgets as well. So I'm not sure if it's there or not. Not there yet. Okay. So we'll we'll make sure it gets there. The Yep. But many thanks to Occupop and to Greg Wood for helping us get the badges ready. It's it's much appreciated. So I'm gonna turn it over to Aaron now. No. I do you have control with that there, or or do you wanna Next, next slide, next slide. gonna I'm try, and I can't control anything, but maybe if they Ken. Request to Hello? I see. I the request. see I don't know how to grant it. Aaron was here asked to share the slides. Maybe I ungrant maybe I unpresent, and now you present and How do I present? You clicked the little slide icon in the bottom? That Yeah. But I can only ask for slides. I can't really Okay. Where else? If we can't figure it out, I will present them again. Uh-huh. I found it. Yeah. Yeah. I I hit a Thank you, Susan. I don't know. I didn't have the buttons somehow. Or I couldn't find it. Go ahead. Thanks. So, I'm here to talk about 3 things. Let me see if I can actually slide through them. Yeah. Amazing. So we're gonna start from key encapsulation then"
  },
  {
    "startTime": "00:10:00",
    "text": "gonna move on onto key derivation and then fun topic, the signatures. It's gonna be the most of the presentation. We're gonna start first each of these topics with the original proposal we had we're gonna consider the feedback. We gather through the list. And then propose, revised proposal that still has to like, go through consensus, but it is it tries to reflect what we gather from the list. So, Just a Can you pause at various points and ask for people to go to the mic it's probably about two or three places that would make sense, I guess. Yes. Yeah. Absolutely. So this was the original proposal that most of you might have already seen in some other ATF, we had compatibly with, crypto refresh, we put all the possible various curves pretty much. And we, added the requirement level as as the as the crypto refresh. Well, the feedback was mostly positive for X 25019 and X448. Most people wanted both of them, and, one of them must we had some voices for having audio a single elliptic family and moving the needs of brain pulled a separate document or to remove them at all. We had like bit of support for, nest or breakable curves, one even proposing them as should for compliance reasons. And finally, we have one voice for Andrew McElese. As hybrids. So, we're gonna get very quickly to the author proposal, and here I'm also gonna stop if anyone wants to make any comment about this. We will reduce the algorithms into the draft to"
  },
  {
    "startTime": "00:12:02",
    "text": "5519 and export freight, extra learner as must, and export freighters should The purple curves are gonna be separated onto another draft, that is gonna go for adoption on its own. And then we have a question for everyone is basically ease their interest. Does anyone want to do or contribute with, a missed Curved Traft. Yes. Don't rush the mic. Yes. So we don't have to be strict about people joining but it's a nice thing to do if you can. If you have the buttons, Oh, Like Alsworth. Yes. And I don't I mean, me and my company don't don't don't, but PGP, but, in the sense that this is gonna be probably shared with laps, yes. The the NIST and FIP stuff is of interest. So so just to clarify, is that a yes, you would like to see somebody do it? Yes, I would love to do it myself. The former. Okay. I think. Yeah. That's fine. I think it's I think it's a happy to review I'm happy to I'm happy to review, and happy to coordinate I'm with parallel lamp straps. Yep. But that's just fine. Thank you. John? Yeah. So John Gray from Entrust as well. I was gonna say, basically, the same thing yeah, in our lab's draft. We have the nest p curve. So I think for alignment there, that would make sense. And I'm happy to help as well. Okay. I'm I'm queen Dang. And this, I would be happy to cooperate with, somebody or some other people on that draft. If that is what the group wants to do. Sure. Thank you. Okay. So we'll"
  },
  {
    "startTime": "00:14:04",
    "text": "It sounds like people are generally happy with the altered proposal. We'll basically wait and see, you know, try and find people to write those draft And when they pop out, they'll bring them to the list. And proceed as normal from there. Guess the only thing that leaves is the suggestions for What what was it? What were the other algorithms people suggested? If you can go back to slide we had Mac Elise, and we had what's this? Oh, too much too far. And and true. I mean, it's I would say this is a little bit over here. So anyone wants to propose a draft with this, Right. I mean, I think that, yeah, again, yeah, if somebody wants to write a draft then they can write a draft for that and propose it to the group, and we'll see if there's sufficient interest in those. Like, It was like we had Daniel first, Mike. Yes. Sorry. Thanks. At at the risk of, being a bit contrarian, I I would like to kind of question the need for having multiple different you know, non PQ, algorithms because In my mind, these are purely a fallback, right, in case the the post quantum algorithm turns out to be insecure, then at least we haven't the graded security. Right? But I I don't particularly see, a large need for having so many of them, especially if we say that the first one is a must implement then people will have to implement X25519 anyway. Right? And I mean, x25519 is pretty fast. It's I I don't see sort of"
  },
  {
    "startTime": "00:16:02",
    "text": "huge downsides to to using that one. So I again, I I sort of question in need of having having all of those options, if that makes sense. Mike Alsworth. I did not get in queue to answer Daniel's question, but I can. The the argument that I've been making for why alternate classicals, I think I think I see your point. May I agree with your point where you're considering software implementations that are easy to patch. I think if you consider, for example, decryption in a smart card, you may be hard pressed to find widely supported smart card vendors that do for 519 So I I think it it's supporting the, you know, the current generation of technology at was better bridging. So smart cards on PGP is a area where I have vast ignorance I understand it's, it's a differently tricky area compared to smart cards and SMART, for example. So, I mean, I I guess these these are these issues can be will be raised on the as people, you know, write a draft that proposes P256 plus ML camera or something. And I guess we'll we'll have to see what the working group consensus is when we have those drafts available. I mean, they're not it's not like it's gonna take a long time for somebody to write a draft so we can basically discussed That issue on the list then probably. And and Steven, to make your point that you've made on me a bunch of times, I'm not a vendor of this technology. So I'm advocating for a thing that I don't sell. I'm sure So it'd be nice if someone who actually made these technologies was here. The thing I actually got in q 4 is at the risk of stepping into the flame war and is meaning that I have not followed the mailing list discussion on this. No pure. PQs is a firm decision here."
  },
  {
    "startTime": "00:18:01",
    "text": "Nothing is a firm position, but I don't think that was proposed, I to at least for encryption, I think there's a general consensus for staying, hybrid. There's also matches to the, the recommendation of the of the of the authors of of Kybird as they also made as much as they're lithium. And the price to pay in space and time is like, in computation and especially in in extra bandwidth is so tiny. That I think it justifies the the the the expense, at least my point of view. Thanks, Daryl. Daryl came in. Because we are adding new stuff here. I would actually think that this is something that actually is not very easy to, you know, if somebody encrypts uses one of those case and other one doesn't, it they can decrypt and that kind of thing. So I think it actually would be very useful to have a really big wide, you know, everybody implementing everything once because, I mean, most of those know, if you are using crane pull curve or if you are using this curve, it's actually usually very easy to add in software. So, I mean, it's just adding new crew by saying, okay. Do the about the same oppressors. So that, I think, actually, it would be thing to have a you know, multiple groups that people would have. I really think that it's very important have a one must, and should you be algorithms that people should be using but having extra ones there doesn't really make the implementation that much harder now. But if we added them later, if you actually add them in multiple drafts or multiple RFC, actually makes out that, oh, somebody actually picks this and some to that. That's why I was thinking about it. Might be actually better to have than 1 RFC. Because, I mean, if somebody is implementing that RFC, they probably just put all the group numbers in because I mean, it's just a couple of numbers in the in the implementation."
  },
  {
    "startTime": "00:20:00",
    "text": "So that's essentially the original proposal. better to, I mean, Yeah. I I I I think I think it would be I didn't I I think I mean, most of the implementers take it on ROC and implement that. And if they get 1 RFC here, they get the first one, And they actually never ever know that the other ones, because the management didn't give them as a requirement. If all of them are in 1 RFC, a little bit all of them because, I mean, just adding that the group numbers is not that hard. Tania, So, personally, as an implementer, I don't think there's particularly big their friends in you know, how likely we are to implement it if it's in one draft, or a multiple. If it's if it's both a May Either way, then I think I mean, all of these curves are already in the crypto refresh. As Erin said. So I I think the The implementation cost is in need. Not that big. So So I won't sort of say that I'm extremely strongly opposed, but I just question the need. That's all. Sure. Check. Scott? Scott Flores is a a system. Sorry. My, data tracker is is is not working. I like to make a small correction Tewtero, differences between X25519 and P226 is more than just quick in a few, constant somewhere. They they actually use different algorithms. The yes. As long as, in this accrual are the same unless you're using a the miss curve is actually using a specialized, reduction, mad modulator, which is more efficient than a generalized one. Okay. So, we've had I think every possible suggestion so far? Yes. I mean, when we can"
  },
  {
    "startTime": "00:22:03",
    "text": "ceded, another alternative to this proposal was actually the same with regards to 5019x for for 8 and that one brain pool and one miscurve. That would be most likely 20.24 bits, fight, matching because the idea would be you, have also 2 curves for compliance without exploding the number but if you need to go Mister Bray Paul compliance, you could just use that. Okay. If people prefer that, That's also an option about beginning the day. Okay. John? Yeah. I would just I wanted to say, so I've been working more on the group. So we have similar proposals, right, for Kevin's signatures. And that we have all the combinations together in one draft, and you've obviously you're having an alter proposal now that you're breaking them up into different drafts. So I guess I missed a bit of the context behind that. Is that just because you want it easier to digest like, smaller bits are more by people, or is it just just proposing this now. I guess I'm just because we could do that in lamps too. If people like it more, if they like the smaller digest bits, and that's better. And it helps Sure. So so there is a better Yeah. So there was one topic on the list that is probably different here than in Lamb's is that the, I think we're dealing with an 8 bit, code points rare size. So we don't necessarily wanna burn a whole bunch of code points, if, it turns out that's one of these combinations turns out not to be attractive or is implemented wrong or whatever. So I think we'd that's a slight difference here. And might be a reason to proceed with the, Yeah. The most first get some interoperability experience with that. And then allocate code points for the ones later."
  },
  {
    "startTime": "00:24:00",
    "text": "Okay. That makes sense. Thanks for that context. There's also, I mean, this was this is more than the cam is also for the signatures. If you think about, ECDSA versus EDDSA, if you keep just the first to you save on a whole algorithm. That is issued. Yes. So you have a draft that focuses on ETTSA plus. But this, I don't want to speculate about signatures that are gonna come later. Yeah. And and, I mean, I guess, to to Tara's point, Even if we start with multiple drafts, if if we have a clear working consensus on the, you know, the menu of things we want, we can merge drafts later. Just just because we start with the nest curves or something, our brown pool in separate draft, it mean that that text couldn't be all merged into one at the end. Whereas, I think, you know, it might it might I I suspect it might help us to have a draft which maybe just has the most cold point get some implementation experience with that and proceed with dealers as we go and then we don't burn burn so many call points. DKG? I just wanted to flag, one additional piece of context that I think John might also not be aware of for open pcp, which is that given that we have this narrow registry Most of the Cove Point allocation needs to be done delicately, And there is a range that are private and experimental. Which we are starting with. And when we had everything piled into one draft, we ran into a situation where -private and experimental range was actually smaller than the number of algorithms listed here. And so if you even if you wanted to try to do them all and demonstrate them. You couldn't do it in the experimental range. So you sort of put peace blocked waiting on some sort sort of I am a pre application. So that's another little little wrinkle that is open PGP specific that would not have played into affecting laps."
  },
  {
    "startTime": "00:26:04",
    "text": "Okay. Of John. Yeah. Great. Thanks. I was just gonna say thanks for that background history. Thanks. So to summarize. Yeah. I guess there's, you know, every algorithm combination has its fans. I think the altered proposal here is to You know, I get some implementation experience with the the top 2, the most insured, have hopefully, people will propose drafts or rainfall nest And even and true if they want. We'll Discuss those drafts on the lists. And maybe at some point in the future, the ones that kinda survive, the lev or have a an ongoing level of interest might also might all be merged into 1 RFC at the end. That sounds like what people are Does that sound like or does that sound wrong if somebody to correct me and say I'm getting it wrong, Stavris, Yes. Hi. Good morning. So, Steven, please keep in mind that, you know, now we have, a draft that is, reflecting all those choices and somehow addresses different needs and clients requirements, maybe. Like the CFIG curse, the brand pull curse, the nest curse, if you go to splits, this takes time. And know, we split the a working draft, I think, Aaron Johannes Focal and me, we worked quite a little to to get this draft, in in and in a into a good fashion, you know, and being readable, being concise, being correct, If we split this takes time and effort, to split basically ECDH, from the X curse and"
  },
  {
    "startTime": "00:28:03",
    "text": "at the at the at what stuff from the ECDA stuff, if you merge it again at the end, you know, again, will take time to get it into a concise, readable fashion, not just I don't know. Concatenating stuff. So I would rather wish for some kind of a decision to say that let's keep it to get together as it is right now or split it and just just just just do it that way. Yeah? In, as John said, digested in in in smaller bits That was just my my concern at that point. But Sure. Understood. And, mean, yeah, I I mean, I guess if if we if we If in a near ish future, we have multiple drafts, it's up to the working group to figure out if we want those marriage or not. So, yeah, I think that's something we can discuss as well. I wouldn't worry too much about the idea of editorial overhead because there's I think the text in these things is pretty much similar So hopefully that's one of my my thoughts Thanks. Understood. Like, My account's worth. I Think I vote split? I think I vote split on the argument that the x curves is the one thing we all agree on. And, therefore, we can move fast with it and get real data in the wild protected on the Sort of common case quickly and not have it slow down with all the debate over the other stuff. Thanks. Can, can, can, can, can, can, Quindang again, Edness. Potentially, if we decided to to split And, we are going to work on draft for the missed curve, And, if I will want to be, co authors"
  },
  {
    "startTime": "00:30:00",
    "text": "I probably would suggest to add, ammo cam 5Telff as well. And then we would talk about it at at that point. Okay. So that, that sounds to me like a, a, another justification for splitting this. Yes. Yep. Okay. Alright. That's all I with with Stavros is, you know, let's keep in mind we don't we don't make the editors do make work, It sounds like this is a way forward. For the next while anyway. Cool. And then we, we come to the next wrinkle which is, I guess, back to you, Aaron. K. So this is just what I just said. Keydervation and combination. And basically same game. We started with the original proposal where we only the algorithm ideas, fixed information because everything else was coded into the K MAC customers, like, in the domain separation and the customization we use a shaft 3 to 156 and a crime issue, construction to derive, a and like, a key from, a key share from ACC. And then we use, like, we just take this key share com concatenate with ciphertext and same for ML cam. And at this at the end, we just run everything through Kmac. The feedback we got from the list, was not too much on a few people reply to these trials. And basically that you said, don't specify another custom can combine it, try to use something that also other protocols might want to, include the public keys into the combiner, even though, the paper that we're based on does not require for the security proof the, the public keys"
  },
  {
    "startTime": "00:32:02",
    "text": "and reuse an existing function for ECC, so then also they're don't invent your own. And K Max seems to be fine. Here, I'll say a name just as open an issue and he was like, he also found a way. Like, he originally had found trouble to implement it. Now he seems to have solved it. But there's still the question of what are the advantages compared to Chaffray. Quinn, if you want to I think we can also You're in the queue? Okay. Yeah. So, yeah, Aron, you could, I guess, get to slide or someone No. I mean, let to that. me get This one Okay. So this is the alter proposal. As before, this needs to be still needs to go through the the working group, but this is basically based what was the feedback we got, and we the same ECC key share, the revision system, because this is exactly the same that is used for X2 5519 or X4 48 in the current crypto refresh just with Chaffray instead of using, HKDF. And the reason is that we already use Chafferty elsewhere in in in the post quarantine draft, and we thought that was consistent. Then we move the domain separation to the fixed info. And, Yes. Is this the key to KCT is there twice, Mike. And the reason is that the fact first time is it into the key share when we derive, when we do the step of deriving the ICC key share. And once we concatenate it in order to retained in the ENDCCA to security into our account combiner, we put it a second time. And basically, the idea is the fact that ML cam day data also adds the public key."
  },
  {
    "startTime": "00:34:03",
    "text": "And then we just use sharply to 156 instead of using, K MAC. Reason is we always have an a fixed length output at least with the current draft of 256 bits. And we originally excluded this sharply because you might have a collision if you squint hard enough, with the, ECDH key combiner, key deviation function, but it is so unlikely that I think it is just easier and simpler to use sharply here. The security proof is not altered. Quinn, next slide. During the queue, Okay. I think the next line is just what what I just said. Yeah. And, Okay. So case you've if you want to speak, it's now your time to to scream at us for this proposal. Yes. Like, in this again, So I just saw a question I I just Well, responded. It's not nothing squamous here. So you asked whether or not the, the K MAC and it's shot 3. For for Kmart, likely, if you care about 5th validation, Then Probably, the way we use Kmart here would would would would be compliance with with our standards right now. But if you shot 3, Then, It's not a sure thing for now. Because Shopree has had function, we only allowed that to be in 506 C where you can drive the secret directly from from your we we can see the the case change and the KDF is one box. And the sharply only have function that's inside that box."
  },
  {
    "startTime": "00:36:02",
    "text": "And right now here, we're using sour cream outside, not the box. And we don't have that currently approved. But we have received some comments about this. People want it to allow this way. And I don't know whether or not we want to do it. For sure, I don't really know. But for right now, If we use Kmart to do this, then it's it's is complying with our 5th validation requirements. If somebody cares. K. I mean, as far as understood, fit speed 856 c. Is what we would use for key derivation. And, this counter is also initiated with 1 as the specification requires. And then we would basically have ECC data and NLCAM data being the shared secret. And followed by the fixed info. So from my ignorant interpretation, this would be compliant with this standard. I do not know about any upcoming how do you say G combination standard or or anything like that? We we don't have any official key combiner or anything like that right now, so I can command on that. Mhmm. Yeah. So it just Yep. That was it. So if Kmart then likely we'd be compliant with a FIPs. But which shall breed and not sure. Okay. But internal security, they they both equivalents, yep. Yeah. I shouldn't be taking this. I think this has already not taken yeah. If anyone, like, has any more comments, please you know, come to the queue. Yep. Because we still have many slices to go. This is like 10 out of 30."
  },
  {
    "startTime": "00:38:01",
    "text": "So on the on the combiners though, mean, I guess the altered proposal here is still an open PGP specific way of doing this. And I guess I mean, a lamp is doing the same in the traps that are out there right now? So and the c f oh, yeah. I forgot to mention the c f. There is a huge discussion going on in the CFRA g in case you haven't seen it. And we're gonna keep on like following that So it's not that we're gonna ignore what's, coming out If we're g the only thing is the fact that it should try to come out briefly, and I don't think we should wait forever until the CFOG comes up with with, a media. Justice, justice, So I posted that to the I want to reiterate my point from an implementer's perspective It would be nice to get one key combiner and not one you combine a specific for the post quantum I agree with them. And I feel like if we split the the the draft into 3 it likely could of one of the drafts going off with the custom combiner will increase Okay. So so you're saying that's for for all the came combinations for open PGP We would desire a single way of doing the combination single combiner for all of the various options that we have for Combining cams in PGP. Yeah. that make That that that that that still leaves the question is Does sense? No. Is it desirable or to have that combiner be the same as something used in for, TMS or Jose. Etcetera. So, so,"
  },
  {
    "startTime": "00:40:01",
    "text": "so that's I I think that's that's still a question. I think I think it what just to said is probably quite I imagine we have consensus on We don't want different combiners for the different menu options in PGP. I'm guessing that the that that would get consensus Then the they are the next question then is Should the PGP combiner be the same as as used for other protocols? And and to what extent do we wanna wait for that to happen or try and move ahead and so on. So, Mike? Mike Einsworth. So Steven just said what I was gonna say. I, I, table emotion here that we put a footnote on this whole thing saying don't look too closely. This will get aligned when the CFRG thing is done. And then we move on. So that's an that's an optimistic view of CFRG's progress. Which is fine. But nonetheless, I mean, it, you know, it creates the possibility that, people end up getting some interoperability experience something that turns out to change. When CFRG eventually produces a result. Perhaps there's other possible futures, but I don't know how happy or unhappy people are with that. John, Yeah. So I was just gonna say as someone that implements this stuff as well, and you see what people are doing in the hold. Right? Like, I could easily see someone using, you know, open PGP, and then they I don't know. Take the structures, and then they're using it with CMS. They're using it with other stuff. And then if you're using different combiners underneath, things are gonna break, and then people are gonna be confused. And if if if it's possible to have a single combiner that could be used. I mean, if it's possible, if there could be security proof or whatever to verify that. Okay. This is good. Mean, even if it has extra overhead involved with it, I know So there's some groups that, you know, that talk about. They want things to be super efficient. Even if there's a little less efficiency and it can make everyone work together, I still think that"
  },
  {
    "startTime": "00:42:01",
    "text": "a better in the end. Otherwise, it's just gonna be a free for talk to everyone. So Good Quinta, and this again, I just look at the construction and It meets our requirement for Current the, for for for the drive keys from, 2 cams. One came in 1 ECC or or 2 key changes. So that that show 3 functions in there. Currently meets our requirements. Yep. Because we right now, we only one of them to be misapproved Okay. So in this case, you know, you can pick either one. Okay. 6 this is currently missing, 5060 as well. And the K MAC is meeting, 108. Okay. Mhmm. Just to clarify. Yeah. Because I need to look at it and then it's it's fine because we use a counter there. It's it's okay. Counter is right now optional. You don't have to use counter if you don't need to. Oh, good to know. I didn't notice that. Thank you. Yep. Yep. No problem. Okay. So Nobody seems terribly unhappy with the altered proposal. Yep. We You know, again, we've that this will have to be confirmed on the list and all sorts but it looks like I way ahead for at least for interoperability testing, in the near term. With the you know, doing that in the knowledge that if CFRG produces a result or If for other reasons, we want to do the same as other working groups, some change might happen in future. Good. So between kmax and and star 3 to 56,"
  },
  {
    "startTime": "00:44:01",
    "text": "Well, So the the the, K MAC it requires At a minimum, 2 permutations. They execute them between 2 times because you take the key first one permutation, then you do additional at least one limitation to really produce any output but South 3, you do only 11 if it's the input is short enough fit into 11 input depomitation. Then it's just one execution of the permutation. However, Fashire 3256. The, capacity is 5 12. Yeah. But if you use, K MAC 128, Then the capacity only 256. So It's not sure which one is better in performance. So it's it's it's It's might be equivalent, but More likely, most of the time, the the char tree here would would, If everything fits into one limitation, then the shower is is better in performance. We were considering came back to 156. But the the the problem is the the ciphertext or ML cam is big. Exactly. That's that's the other thing. We have a huge ciphertext here. And also, like, the public key here is not tiny. The so So, but that means if we do with, K MAC 128, It's limited to only 120 bits of security. So that that's not a matter. So if we want higher security, then we have to go with the but the same thing, we shall 3 to 50 only limited to only 128 bit of security. But if if you want, hopefully you want a little bit Better. Let me be, Yeah. No. Cell 5 cell cell 35, 5 tablets a little too much, Yeah."
  },
  {
    "startTime": "00:46:04",
    "text": "Okay. So are we yeah. Go ahead, Aaron. So so so it looks like it looked like Kmart 128 is better in performance. Yeah. I mean, as Daniel is pointing out on the list. It's it's it's is the fact on the on the list on the on the chat is defected. The the expensive part here is definitely not the KDF is everything. I have to I Yeah. Again, I'm I'm not too sure because have to, Okay. Yeah. The 768 is how large they decide for tax. I don't remember is Yeah. Okay. Okay. Should should I go on with the signatures. And and almost almost. Okay. So sector different Okay. Just to just to summarize then for the for the note takers, including yourself, but, The, this altered proposal, people seem happy with us at least as a basis for interoperability testing, with the knowledge that we might want to decide to change this again if if there's a combiner that's used across more than just up in PGP. I think that's the summary. Yep. Great. Okay. bit. Onto the phone These are signatures. So This was the original proposal, and we're also SLHDSA was, split into 6 different parameters, from a 128f to 256s. That it has an internal parameterization. No. We have, something like a 100 plus mass is thread on the mailing list. I tried to summarize it in an 14 ish slides. And the and I try to make sure that we, Basically,"
  },
  {
    "startTime": "00:48:03",
    "text": "layout 3 different solutions of for which each one we're gonna have to look at what changes that they imply in the protocol level. So to from TGP, how can we achieve backwards compatibility with before or with non PQ. And which security guarantees do they provide? And for each solution, we're gonna go to that solution that was expressed on the list. Finally, we're gonna have some generic feedback about signatures and false crimes and signatures. So if I misinterpret anyone's opinion on the list Please say it. Stop me, bash me, scream at me. And, I tried to summarize this solutions as well as as as the best I could. I also asked for some help to our chairs. That hap and that happily provided us with a review of these solutions. Let's say it, like, is Just to add, Aaron, I I I think on this topic, Yeah. I'd I'd be surprised if we immediately reached consensus, today. So I think teasing out these arguments it may end up being followed up by some interim meetings where we actually try and reach consensus on some decisions. So I think today, I think we're more into teasing out of the arguments place of the discussion not necessarily on the fighting for the actual answer. Parts, So so I think, you know, as we're discussing this, I, I think Aaron is kind of presenting pros and cons. Works gathering input. We're listening to arguments and It may take some more interim meetings before we start to reach decisions. So, So with that, thanks, go ahead. So basically, this is the solution option 1 is also called Migration like ECC, and it's very much the"
  },
  {
    "startTime": "00:50:01",
    "text": "most straightforward solution, you can imagine. We add 2 different code points, one from MldSA, 666514mlDSa87. And as much as it happened with ECC, people over time will generate new keys, fabricate the old keys, and just like if you want to transition period, you just seen, sign a message twice. Once with SSC, once with PQ. There is no, no supremacy guarantee all the signatures where they can be doubled up. They will be doubled up and it's up to the verifier to choose whether to accept a PQ signature, whether to access accepted the send a loan or whether to require any kind of any set of, of, like, any set of requirements, lies on the very fine end. So this is the feedback we've got in favor of option 1, and Well, 1st of all, it is the most straightforward approach. So it is the one that introduced list complexity. At least on the sinus side. Or on the protocol level. The ECC migration, was done this way. Basically, if we survived through the ACC migration, why shouldn't we survive? This other PQ migration. Furthermore, signatures are to be considered valid at the time they were created clearly the signature creation time is into the signature itself. So it's a bit self referential. But you might want to notarize a signature so that you can prove it was emitted at a certain time before quantum computer existed? Or So or before an algorithm was declared broken. And Another solution we got on the list was to define this post quantum signature cut points now, but not actually recommend using them So, wait till we are more confident about them. And this solution can also be used with nested signatures. So in OpenpGP, you can"
  },
  {
    "startTime": "00:52:01",
    "text": "put a message, sign it, and then signed a message with the signature itself. We have seen yesterday, evening, I think, in your time zone, we have seen at, PQIP that this is not guaranteed on Superability, but only somehow in one direction. And This shifts the responsibility into application layers. This gives greater flexibility to the protocol, makes it more agile so that tomorrow, we can also remove the SCC concern without breaking anything. There is also some feedback on the list against this option and mostly the fact that, some application layer. Do not handle multiple signatures properly. Some BGP mine application leader will show on them, Sam will just consider the first signature some other type of signatures will not work when doubled up. So, this is basically all the binding signatures into a key, for instance, or this, you know, the direct key signature. The overview, the lithium recommend using this algorithm in a hybrid and this scheme at least in my opinion, that's not, provide a framework for always having a hybrid fashion. So Sure. You can admit a hybrid signature but you're also very much free to just submit pure dilutive signature without any other without any, ECC signature attached to it. And signatures may convey different information. This means that the metadata of the signature creation time or expiration or all the stuff that is into the into the sub packets of a signature might just be slightly different and it might make different to match the signatures together. So, like, one might be expired while the other might not."
  },
  {
    "startTime": "00:54:02",
    "text": "And then, clearly, separability might or might make look like someone is not able to produce a PQ signature or like, the stripping attack is undetectable from someone not wanting to ensure As a little bit more of feedback, we got the fact that shifting the responsibility onto applications for instance, made user agents, it will cause you probability issues and confusion, basically, I send an email to a product user and a Thunderbird user, and they 2 different verification statuses. 1 verifies that it doesn't because one accepts, post quantum signatures and requires them to be with Yeah, Daniel says that's the layer, both application layer, but, but, I mean, a manager agent might just interpret this things differently. When we have 2 signatures, we As of now, assume that it's anore. But we don't really know because there's not really a lot of literature whether this should be an or behavior. And some the the fact that systems might take some time to update might make us want to design an end mechanism The thing is that this air mechanism might not be, consistent cross applications as also a previous point. And then it will require 2 certificates for security purposes. So even in an environment where I know that everyone speaks PQC. So I sent an email to my friends that I all know that they had PQC keys. I will still need to sign my message with a class, it will key. In case I want to protect it, against, to say, thank you."
  },
  {
    "startTime": "00:56:01",
    "text": "Compromise, a PQ algorithm compromise. And I cannot, like, even even within homogeneous environments, this is there's no one option to just sign the queue. And then next to signature are, at least in my opinion, Very, very difficult to get running. So, I mean, there are places where they don't simply work. The types self signatures in global PGP, they we simply refused it. Type, we just choke on them. So I do not know exactly what's support. I haven't found a test in Sequoia for this. And the fact that there is not even a test makes me think that probably is not a really requested feature as of now. I went too far. That was it. Should I stop now? Or should I present all three options? I guess keep going. I would think. Okay. My Yeah. Okay. preferred option is to keep it going. Yeah. So we have the second option that is the composable hybrid that is option 1. So We standardize 2 new code points. But we also additionally have a mechanism to bind 2 signatures together. If a slight CMS, like, If you, if you say it in sequential 1, Luke also at signature 2. If you don't find signature 2, you will clear this as an invalid signature. This makes non separability optional because this means that a signer may choose whether the signatures are to be look at that together or separate. But it provides a way to do not supportability. Now, We got only negative feedback on the list, so I will skip the slide about positive feedback about this option and mostly the fact that Wilkes Read,"
  },
  {
    "startTime": "00:58:03",
    "text": "cross layer dependencies and more complexity, especially from the point of view where you have where you start putting them into key binding or self signatures into certificate. And then you need to read 2 certificates at the same time in order to make sure that they are, they're valid, independently. And there's also a little bit of a chicken and egg problem because which one you start looking at first when you have 2 of them referencing each other. And then there's the point of like One signature should be enough to validate. Second string, no signature. I do not know whether I interpreted this completely correct. Please stop me if I have it. Option 3. Composite hybrid. This means we standardize 2 to 6 code points with MLDSA. And ECDSA or EDDSA in a PQT so of hybrid fashion work both signatures are, like, we signed a material with both algorithms and the signature contains the key material for everything. Looking at the migration strategy, this means that we still have to do the V 4b6 Migration or the D6 to PQ migration. This means that a user still needs to have Probably for the upcoming future, 2 certificates, most likely one we 4 and 1 V6. And most likely, they will still need to sign twice their emails or, the software that they're signing or whatever they want to do. So we will need to find solutions to at two signatures in most places. But this solution clearly includes, No separability,"
  },
  {
    "startTime": "01:00:02",
    "text": "and also probability also on the key level. So a PQT key will contain both, NCC and post grant and signature. At the same time. The loss of probability is guaranteed by the fact that if you take in within the post quantum signature, you cannot separate the components. They sign also the algorithm ID. So you can't just take the ECC out and and say, this is the CCC Signature. On their hand If you already have 2 signatures, 1v4andonev6postcranton then you can strip the V Six post quantum and that there's no superability there is not guaranteed. So back to the feedback, we have multiple voices that press, the light idea of having Key binding or self signatures that are hybrid because these makes the key parsing, let's say, treats, a binding within the key within the key policing. And some opinions about the fact that, hyper signature reduced operational complexity because the operational security is harder than the protocol security. This means the fact that making sure that all your software is completely up to date and Like, it's harder than then then defining this at the protocol level. Or other people stated the fact that in shouldn't in that case introduce additional complexity because all of this is handled at the library level and not at the And and the application is agnostic to the fact that there's, Mississippi's trainer, someone pointed out that tobacco's compatibility transition and trust transition are too different. And while it is attractive to put them together it"
  },
  {
    "startTime": "01:02:03",
    "text": "You're overloading the 2 concepts. Basically, you're making one transition and this one transition and did you use it might not be aware that This is a security requirement rather than just the backwards compatibility requirement. Also, the crypto refresh does not address the transition. The authentication protocols. So I know that no one is actually using SSH over strategically, I tried to set it up. I gave up halfway through So probably this is a sign that no one should be doing it. And but they take only one signature, so there's no way to flip. 2 seconds, Sister, The people who implement libraries, such as Justice Daniel, I, or Falco, no one has expressed, issues with the complexity that is hidden into the library level. Or it's baked in. And then we have the fact that, we can still in the future standardized stand alone algorithms as we gained confidence into them, we tried, to make a compromise where we do them both now. I think was ill faith that even from my side, because I think it's not a good idea to to standardize everything right now that that but I think that there's still an option tomorrow to do so. And then, aligning mixing stand alone algorithms with an end policy. So basically option 1 with an end policy will just lead to application layers inventing some combination scheme and everyone doing something different. Not having a coherent way. To determine whether the sign that the verifier will actually verify an and I will have to keep on signing with ECC forever because there might be some old clients out there that still requires CC some feedback against option 3 as well."
  },
  {
    "startTime": "01:04:01",
    "text": "So, it is more complex to implement because we need to bake in the ACC complex it twice. One for for each migration, 1 for the trust migration, 1 for the backwards compatibility migration. And point 2, if we supported on composite pulse condom 6ensure, and the classic signature. We already have to understand how to put 2 signatures, how to tackle them, which one to accept, which one to verify, what's the policy. And so once we have figured all of these out, why not just use a single signature, like, Hybrid offers value only at the end of this transition period where we, the backwards compatibility period. Because, if we don't, like, if but when we're still signing with both keys, in what they would have referred to before as non Magenius environment where we don't know what the verifier will use to verify We still need to sign with both. So the hybrid the the hybrid algorithms only start offering real advantages then, according to some people in the mailing list. And then once we have a a CRQC, like a classic relevant quantum computer we had just unnecessary overhead. So we have the ECC stuff that is there for nothing effectively. And Then the signature validation policy someone stated that it should be up to the consumer. This means the fact that it's not the signer who chooses how the consumer should consume or validate, but the other way around. We have a one contradictory opinion that the hybrid signatures increase the operational complexity because if you get a single key compromise, this is paid"
  },
  {
    "startTime": "01:06:03",
    "text": "is that the other one, you need to have 2 keys compromised in order to to and they might be stored into different hardware tokens, for instance. And then there's the risk of also talking about hardware tokens that they might reuse same privacy material for the ECC part of it because they already have a HSM with the C stuff in it, and they just make a signature with DCC legacy with the same key as the, as the as the post quantum PQT algorithm. Here, it's not a problem because, anyway, in the signature, there is an algorithm ID. So it's not a security problem, but the key gets compromised, then you gotta remember to revoke all the keys, not just but matching key if you reuse the key material. And then there is the risk of algorithm code point explosion because if you need to have one key point, per each combination. If you start making 6 of them, well, then you got 6 already. We got some other feedback that I couldn't classify whether it was positive or negative. But it was feedback. So, we have the fact that hybrid signature be named differently from the stand alone ones in case we do them. Because, then if tomorrow we need to standardize the stand alone, it should be different. There's was one voice for limiting. It only's for to one algorithm for, peramental purposes, see where does it go, and how does it work? There was someone else who, tried to offer a drink and had two algorithms instead. This is a new, negotiation technique. I might offer 2 drinks instead if it's really good points. And then instead we have one voice for having having the algorithm parameterized, this means the fact that we have. 1 single code point,"
  },
  {
    "startTime": "01:08:02",
    "text": "but then we parametrized it into This is the idea of the curve, and this is instead, the NL cam, The the ML cam I'm sorry. Demo DSA specification. And then we have, is there multiple voices for the burial position that is don't use parameterization. In fact, given the strength of the non parametrization, we decided to completely remove it. MLDSA specific feedback. Most people support both NL65 and 87. As some say either or, but with 87 preferred, And going to the slightly forgotten SLH SLH DSA that instead was proposed a radius stand alone. We have one voice to keep it most with one of the variants. So either chapter or sharply, and with 1 or 2 parameters at most. We have one voice onto must that it should be also must. One voice to have it hybrid with curse because, the the same arguments that apply to a LTSA also should apply to HTSGSA. Some more contradictory or mixed feedback from the lists we have that signature generation and verification, maybe at this point in time, so consider this when designing the algorithm? We have that at least 2 different security assumption should be at most levels. So one SLHTSA and 1 ML DSA, for instance. Then also don't create a combinatorial pseudo algorithm, but at the same time, make it easy to use new algorithms, and I don't know how to"
  },
  {
    "startTime": "01:10:00",
    "text": "tackle this, but, probably the first one means don't make 15 code points right now, but make sure that they can be expanded later. Don't secure or reduce security along the way. It's been get higher security levels. And someone said it is too early to start issuing signature. Someone else said, we need them now for the CNSA 2.0 requirements, but this also mean that different environments might have different transition speeds or periods, like code signing might be the from email signing. In this very case. And then the, generally speaking, there seems be a consensus that practical tax against postcardic computer may arise earlier than CRQC. So PQC might be broken In the next years, a CFTC might come up in 10, 15 years. So This seems to be, the the the window So We get to the auto proposal. We included only 2. Hybrid algorithms with 65 and 87 with ed2511 and for for it. This mirrors exactly the cam side. Okay. We discussed very long, a little bit between the authors, which of the 2 SLH could be great to have to And We got to 3. The reason is the 108f is the only one that can be used as a backup In In case MLDSA is broken, So the only one that has similar signature times or like similar properties that allows us to basically use it as much as it was MLVSA ish Well, all the errors are way too slow to do so. What is that code signing my desired 125 DSO to 100 it's a Speedous Day just have enough time to sign,"
  },
  {
    "startTime": "01:12:03",
    "text": "even if it takes 2, 3 seconds, that's fine. At the same time, they prefer compactness. So we provide 1 low and 1 high security for those for that use. Did you see Brentpool? He's also gonna be moved to a separate draft as much as, at the can side. And we have the same question as does anyone want to do the nest cups and k. The queue is open. Please. I stole his purchase job. Yep. So I would, I would be willing to co author with, someone or other people on the on the last item question there. Thank you. Hi, Councilsworth. I made the mistake of sitting in the corner. For those not on the Jabber, there's a pretty healthy robust discussion going there that's worth reading. And I do wanna point out that I asked this SLH DSA question on the lamps list in March of 2023. And I try I tried to base on the argument. There could be implementation bugs. There could be CVEs you know, protection against new code. And that got, like, thoroughly rejected. It would be I've I put the link in chat to the the mail list archive. So it'd be weird for PGP to make a different decision I think. Cyprus. Yes. So this is not a reply to Mike's question. With respect, I was I was just"
  },
  {
    "startTime": "01:14:00",
    "text": "I just wanted to ask the group what they prefer. So, Here's, again, the question of splitting from the base ice point of view because we are, using the brain blue, curves as interoperability parameters in the German public administration. We are, obviously in favor of this to push forward the Brainpool stuff. But, of course, from an algorithmic perspective, it would make sense to, not just define the brain pull curse, but also the Nisk curse in the in the split in the split, Yeah. Because it's, again, using ECDSA. And for us, it's just another quote quote point and and the test vectors, of course, for the missed curse. So what would you prefer from my, as a question from my side, to have, 3 drafts or, one that focuses on the advert stuff and SLH DSA and one that defines ECDSA with some for the curves. Let's say, brain pool and then nest Yeah. the same for for the camps, right, And So that may it would make the ecosystem maybe a little bit easier. It's just a question from my side. Sure. And, I mean, I guess if a if a bunch of document authors together and do this then, but that would seem fine. Then. So, yeah, so if if if the people interested in writing Brainpool drives, and this draft get together and write a green pool plus this draft for either cams or signatures or combining all those, the that seems reasonable. So Aaron, You in the queue to talk to yourself or I have a question for, everyone who brought into the into the z loop. I have Like, if anything is still open because I see many questions and also many replies, please"
  },
  {
    "startTime": "01:16:00",
    "text": "bring them up now. I can't really follow the discussion while presenting. Sorry. Sure. John? Yeah. So I was just going to say in in our lamps draft, we have 3rd team combinations. So, basically, we've done the kind of monolithic route. So we have the brain pools, the nest, and we also have the MLDSA 40 fours. And I mean, that came about because we had so many people wanting that. Right? So we've had I don't know how many conversations over the past, I think, close to 5 years. And and we settled like, we tried to make the list as small as possible, but I mean, it's it's you know, different jurisdictions like different things and so it's hard to, I guess, get people around the world to agree on small set. So I guess I'm just trying to say that, I mean, you could do it that way too. I know you mentioned you have limited code points So, so, perhaps that's a consideration here and why you need to do it differently, but I guess, we should probably I know we have we've talked to you. I mean, Aaron and PGP people in the past. That we want to make sure that our stuff kind of aligned as much as possible. And I think I mean, it's showing that one thing on this chart here you have with the SLA HDSA's, we we had removed that about a year ago. Based on, you know, Mike had mentioned that the mic just a few minutes ago within we did originally have it, but then it seems like people think or trust those ones enough to be on their own. So We've removed those. Perhaps those won't aren't needed. Here as well. I mean, if they're needed here, I would say they probably need it elsewhere. So if it's decided in one area, it's not needed. It's probably similar to another. So guess, just trying to stay aligned on that. And, again, all of us use crypto libraries, write that"
  },
  {
    "startTime": "01:18:01",
    "text": "you know, I wanna have a cryptor library that I write, but maybe I'm using it for PGP, but I might also use it for CMS. And the more we're aligned, the easier it will be for the clip crypto Implementners. Thanks. If I may ask quickly to you, John, is the fact that SLHGSA is not composites. Is stand alone. As much as I think also the labs, there's this draft for stand alone. Oh, sorry. Is it? Sorry. I'm I'm it's late here. Idea, I think. I don't I don't want it. It's so fine. Or I I just thought there was a plus in there. It's where I see that now. Sorry about that. Just strike that last comment then. Sorry about that. Okay. If I'm if I may, Scott Lewer Sysco Systems, I have a separate quest if we're actually using 2 different say signature algorithms what did they both actually sign? Do they sign the the, the same value independently, or do we or do you prehash that as a hash, whatever you're siding and then both algorithms actually sign the hash. So if a little bit up to the signer. So generally speaking, if you build 2 signatures that are identical. They won't have the same hash because they will have 2 different algorithm IDs anyway. So this the crypto part does not sign the same hash. BGP has an hashed and signed paradigm. So we basically put in some we put in the data, we put in then some how to say some packets, some sub packets, hashed as well. Saying, well, this is a signature version. 15, and it has been done with a 128."
  },
  {
    "startTime": "01:20:02",
    "text": "And this has been created. At this time, it will spire, etcetera, etcetera, etcetera. And then we all of this gets hushed and then this gets cryptographically signed. Okay. Thank you. I may have understood misunderstood, but thought that maybe the question was about the the 2 algorithms in the composites. Afternoon. Because Hey. It's Scott. Yep. Yeah. I I assume the question was like, if we if we sign a message using a composite algorithm, like what do we sign Yeah. Like, with both of those algorithms, right? My assistant answer is Scott, can you come to the mic and clarify? Okay. I would I would remind, I would remind you that I am basically ignorant of how PG works internally. I was more on a general question. That, if you take a look at, say, how MLDSA works, it actually internally, prepen logically prepends a value a fixed value to the messages brings being signed, hashes that, and then does this computation. If you do that along with ed, 25519, that does not do that. And so if you're sending along messages, precashing, as having both sign a common hash makes a lot of sense. Now, if doesn't doesn't apply to to open, to PGP, That's not that queries are relevant. So,"
  },
  {
    "startTime": "01:22:03",
    "text": "think that in this case, the option 1 would sign a different hash what is that option 3? Would sign the same hash. Okay. So and, also, this is as as of now as we were speaking, The signatures are for now bound to version 6 the PQ algorithm are bound to version 6 signatures that also prepare the random sorted at the beginning in our already at the open BGP level. So, Mhmm. That security advantage that, for instance, SLHTSA has is not, it's extended to all the all the algorithms, even RSA. Thank you for Thank you. Good. Entirely unrelated to that, but, at the risk of, yeah, re questioning, whether we really need 3 variants of SLHDSA I understood one being a potential res replacement for MLDSA. But then Is there any chance that for code signing, for example, we could manage to agree on on one of the other two Or is there anybody in the room who wants to do code signing and wants to speak to the need for having both, or have you heard from, from them? Or, yeah, I can briefly recap discussion we had on internal inputting the authors, and Andreas at least seem to be quite, keen on to having both of them And the reason is the fact that there is a significant size difference between the two. And so, The, like,"
  },
  {
    "startTime": "01:24:03",
    "text": "forcing everyone to have the high security 1 because if we force we should force the high security 1, probably. Might require them every signature to be something like 50 k and every to be somewhere, 250 to 100 k. So that's quite large Yeah. I I guess my only point would be since we already have 2 security levels of MldSA. I'm I'm not sure if we then also need to security levels of SLH DSA since in my mind, it's kind of already a full bank, in case MLDSA turns out to be insecure, or unless you need something with very high confidence that can know, stay secure for a very long time frame. But it's It's kind of a full back of a fallback. Right? So it's mean, to me, it seems Seems strange to to have 3 variance of it, But again, I I don't think it matters that much I'm not that concerned about you know, call points or anything like that. So but yeah. That's all. Minor correction. I believe 2 256s is it's something like 25 k or so, not 50 k. You're right. Yes. This is the 50 k's the f version. Hi. What's wrong? You know, I would just point out too that the SLDHE, even though the smallest one there. Still is about 8 k, which is still smaller than the MLDSA. Plused25519. So I think having a"
  },
  {
    "startTime": "01:26:02",
    "text": "you know, a small a smallish one for people that are they want that security, but, you know, don't want mass of huge is good. Then like you said, you already have the 256, which isn't the the largest one. So that's probably a good compromise. Maybe. Maybe the middle one is if you wanted to reduce it, Like, I I agree pro probably someone wants the higher security 1, right, if you're paranoid and you want that security and you don't care about size. And then if you want something, maybe that's you know, at least comparable 2, like the MLDSA 87, size, with 84. Actually, actually, that's still quite a bit smaller. So So I I'm just saying you probably could reduce one of them if you if you wanted to make it smaller, but when you have their if it gives I think this is gonna be a night like the 1725 or something like that. So it's probably it gives people choice. Right? So I I guess if you're concerned about conserving code points, then maybe you wanna remove one. That's all. So, very briefly, the reason why we're trying go with all 3 of them is because we couldn't pick, pick, 2 of the frame. We weren't just simply agreeing on which to to get And I think at least for an experimental we're rolled out of trade now. This is this is not crazy amount, and we should be able to say, to to to to if we then want to weed something out, we can also do it later. Mike? My account's worth. So thinking out loud here, I know it's clear to Andreas. When you would use each of those 3 Do you think you could write that clearly enough in a draft. That it becomes clear to implementers or end users"
  },
  {
    "startTime": "01:28:01",
    "text": "When each of those is appropriate, it will reply yes to Clementus. To end users, I don't know, if I looked at how it used to pick I greet them when I was fifteen, I was like, oh, look. Brandful. It looks like a nice name. So it's like, No. Yeah. So I I guess I submit that as a potential way to choose here. If we think if, yeah, If we think we can describe clearly enough the differences, then makes sense to have 3 if we can't, then maybe it doesn't. Okay. So I guess we you saw the the the the bulk of the presentation was about 3 options, Option 2 doesn't seem to have any fans. I guess That's fair to say. Nobody seems to be standing up and saying they'd like that option too. The authors clearly prefer essentially option 3. And that clearly has a bunch of support there's probably a bunch of transition issues, which we'll have the next presentation on as well. That would affect how that would play out. So it kinda looks even though I I prefer option 1 just to, you know, my personal opinion, pretty clear, I think. But it looks like the working group is turning towards getting an implementation experience with option 3 modular figuring out the transitions. That does that sound about right to people? I don't see anybody disagreeing. So that I so I think that's kind of where we're going forward with for now, at least. Is is essentially with what's, I guess, with the,"
  },
  {
    "startTime": "01:30:01",
    "text": "The 2 the hybrids, 2 code points and then some some SLA DSA code points, to try and get some implementation experience with those. We've got 2, we have 2 more slides left in the slide deck. Should we run through that and then maybe run a a poll to ask if people are okay with the alt as a next step, Sure. So, this line is what I just said. Is just adding the cute name of suspenders, belt. We're in both instances is for now that you came up with the KG for option 3. At least with MLCSA because this solution is still option 1 for SLH DSA and option 3 for MLDSA. So it's It's we we've done also the hybrid between the options. Brought it to the metal hybrid. And then we'll this quote also from Nikh G. Thanks everyone for the vigorous discussion that he sent the last or, well, among the last signals, that were in the mailing list. Well, it was It has been, tough to review this. I hope I didn't miss anyone I didn't. I hope it isn't misinterpret anyone's opinion. And, yeah, let's probably hold a poll if this can be a provisional solution forward. Towards looking for consensus so if you wanna go back a couple of slides to the altered thing, and I can ask a poll saying, are people okay with proceeding on this basis for now. So let's just clarify. Are yeah. Are we asking about the proposal for signatures or all of the alter proposals that have come previously in the slide deck as we're Good question. Let's how about we go for go for the bigger scope and, one pole. If you get Yes. Let's do that."
  },
  {
    "startTime": "01:32:04",
    "text": "Okay. So I'm gonna ask a I'm gonna start a poll that says, people okay with proceeding on this basis for now, which means what we discussed about KMs and combiners and signatures with the knowledge that's you know, we may things may change as we get implementation experience or as CFRG produces serve massively great combiner or as transition schemes indicate that you know, some ideas about hybrids or non hybrids are right around So, There's poll. If you think, if you're okay with the Plan forward as discussed today, then please click yes. If you think there's something wrong with that, then please click no. And if you have no opinion, then Either click that or don't click that. So and we have forty five people in the room So there's about a dozen or so have clicked something so far. So Could we give it a minute? It seems to have stopped at 10 and pin ten people okay and 5 with no opinion. So let's Yeah. not overwhelming in terms of the number of people in the room, but then It's the time zone issues are, again, some people participating and so on. So We got a few more. To if you want to see it again, here's the Ultra proposal for camps, And freaking This is for all. Yeah. Yeah. He's just he's just he's just You know, Yeah. Exactly. And the author proposal for the keeps going by. Okay. So so I think it stopped at 16. Yes. 9, no opinion. 0 knows. I really appreciate all the no opinion showing up here for the, for the ports. Good to know that you're awake."
  },
  {
    "startTime": "01:34:00",
    "text": "Yes. Okay. And then, so, yeah, again, as always, that'll be confirmed on the list. And, but I think there's a path forward for the you know, for the To get some more implementation and, interoperability experience. That's good. Okay. So we terminate that poll. Thanks, Aaron. Especially for trying to summarize all of that discussion from the list. I think you did a good job with it. Thank you. And Thank you. Thank you. Thanks, everyone, for participating into this discussion. Okay. And I think next up is just as to So just as I can start sharing the slides, I'm giving to you I think, Kirkland. No. I I'm happy to have you draft the slides, I only have 3 Sure. I'll do that so. So I'm I'm bringing two questions that came up during the interim meeting that we had. Next slide, please. My first question is, The current draft binds signature to V6 keys, meaning that only version 6 certificates may have pq Signing sub keys, you can't have a before, certificate or before PQ signing sub key. But it does not do the same for encryption sub keys. The question is simply be Should it? And The argument that has been brought forward for not doing the binding is that we don't want to impede the adoption of post quantum encryption because we need to get that out. Ali. And next slide, please."
  },
  {
    "startTime": "01:36:02",
    "text": "I think we should Do bind. Post quantum encryption to version 6. I think this will make messaging a lot easier, you know, if you If you are supporting V Six, or if you're supporting quantum, we know exactly what that means. And I don't get the argument that version 6 support will impede the switch to post quantum algorithms because This this This will be mandated by by the PCI by nest. So people have an incentive to do that anyway. And we may Want to make that an incentive to switch to V Six. And The last point that I have is that, according to my tasks, Adding, post quantum encryption sub key to a p 4 certificate will bring a lot of problems in the current ecosystem. I don't think that's a viable thing to do. Currently. Alright, I want to give it back to the room or sir. Can you just before the before the queue starts, can you explain what this test is showing? Specifically? Alright. So The test shows version 4 certificate. And I have added, you know, in the in the top row, you see that That's the base case it works every everywhere. And then I'm adding What what what what works is this? What is the What is the test? Alright. So I'm I'm trying to encrypt a message to this certificate. With every implementation that I test."
  },
  {
    "startTime": "01:38:00",
    "text": "And then in in the subsequent rows, I add An unknown encryption sub key, And there are various ways in which they they can be unknown. Can simply use it. So the certificate retains its classical encryption capable sub key. Oh, yeah. You're just adding a new sub key. Indeed. So just to clarify what the transition Vision is here. Yeah. Thank you. So I I'm trying to model a way to to upgrade to post quantum. And encryption. And, in an opportunistic way by adding an quantum encryption sub key. There are various ways in which The the algorithm is unknown or there is an non MPI encoding as a non traditional encoding, and the the key can be small or big. Or, It may simply use an an unknown curve with ECTSA. You can see that A lot of implementations that are widely used don't work well or don't react well to to unknown Irhythms, So I believe this will improve greatly with version 6. Because in in the crypto refresh document, we have wording saying, you know, If you do encounter unknown artifacts that you don't understand, but you can still proceed Do proceed. Okay. And and so, Justice, you had another side. I don't know if you wanna Talk to that before we Chadlyn, train the queue or Well, Okay? That's like a a different I think this is orthogonal. Okay. So let's take let's take the questions on this one then. And Falco? so Yeah. Hi."
  },
  {
    "startTime": "01:40:00",
    "text": "Fakos Transkayer, MTG. Yeah, so this, I can say something to to RMP I mean, it doesn't look good here, but RMP actually, implements a flag. That you can use to enable the the testing of unknown, algorithms And, so this might be repairable in application. Without, RMP without changes to RMP. So for instance, Thunderbird is, of course, one main application 1 main, email client that uses RMP and Thunderbird can fix this without r and p changing by just making different API calls. Just just one detail to point out, Yeah. Thank you. Rich? Rick Swelzakamay. Point out that the TLS group adopted a draft that found it useful to state that post quantum will not happen in TLS 12. And It's kinda like the re the second bullet there. So, yeah, I would suggest making it at least 6 only thing. Alright. Yeah. So, I mean, brief response to reach is the fact that, we don't have the lack sure you're having real time. Kinda negotiation. We use Cremo to key to the web uploaded to some case server and then hope that data people will understand it and we'll use it. And so I I don't think we have the same constraints to But what I think that of this line is very important is actually the 3rd line. So the 3rd certificate"
  },
  {
    "startTime": "01:42:01",
    "text": "They are known algo opaque and coding smoke. That's probably the class 6, the the scenario where you take, key an existing key for key and attached to it. A sub key that is, it is 2:5 hour 9 plus NLCAM what is it? 768 Satkee. And that brands I mean, I know that at least the protein we're rate in open PGP, or applications to use only open PGP 3.0. We're working on that. RNP has the flag, PGP, y has also, the correct field from I just hope that some implementers that some people that had expressed like, uncertainty about moving to V Six or, or are not like, or some, or some users like me that just like to add this and make sure that there, there's there's also the also the VForce certificate on top of their V Six is speaks you capable. I think it's, it's a reasonable option to just add it and hope that it doesn't break too much. If it breaks too much, I would be happy to have these other people breaking and being like, oh, maybe I update. Ritz Salskin. The the decision in the TLS group wasn't about online real time version negotiate it was about encouraging people to upgrade their software stacks So that was Yeah. And I think applies here too. that Which is what I think you were you were suggesting each justice, I'm staying in like dude because I would also like her"
  },
  {
    "startTime": "01:44:01",
    "text": "this. And I think that's also the point of these 6 signatures. With the receive signatures If you want to have a full EPG key, you need to have a 6. And you need to upgrade and it makes no sense to make a bid for signature mapping because, anyway, if you want picture, you'll understand basics. And if you're not you can't even parse the certificate at all. So, that's my point of view. But for for at least for encryption, hoping that Someone will understand PQ and before by the So I think there there there were voices on the list trying to argue to to include binding post quantum encryption or into before. I I guess those people are not at the session today remotely or or physically. But it seems like people are generally agreeing with Justice proposal here today. I'm not sure. Daniel So I just wanted to clarify that, there's a question about the be for certificates. And then there's a question about what kind of encryption is actually being made. And certificates sort of sit on the road. And I think this is about useless' last slide is about actually maybe we should move to that I don't know how orthogonal it actually is. But there is this issue that we are expected to send encrypted messages to multiple recipients. And not every recipient will have the same characteristics. May so maybe you wanna talk on the slide? Alright. So We we talked about how to transition to V Six, and we agreed that it's important to to be able to encrypt a single message to v4andv6 recipient. And this"
  },
  {
    "startTime": "01:46:02",
    "text": "question comes up again in in the context of PQ. Imagine you are encrypting a message to a classical SCC recipient encryption sub key and a PQ. Encryption's up key. Should that work? Should that not work? I think this is the the more important question. And then there's the related question of what kind of encryption container should be use. So the classical before version is The site t version 1. Which is That's weird. Authenticated encryption mode. Specific to 2 open PGP. Or site d version 2, which does proper authenticated encryption. Well, I I think we should first, think about the more general question. I'm gonna do this from the queue. Not from my capacity as chair. If we say that it can fail to encrypt message If you can encrypt a message to recipient a who has only classical, and you can encrypt a message to recipient B who has only post quantum. And we say, that you cannot encrypt the same message to both a and b That is a novel failure mode for OpenPGP. We we currently say if I can encrypt to x and I can encrypt to y, there is a way, like, I can encrypt both x and y. And, If we say suddenly that there's some way for there to be an a and a b that you simply cannot encrypt to, that's a novel failure Do we wanna introduce a novel failure mode? Maybe it's appropriate."
  },
  {
    "startTime": "01:48:02",
    "text": "But it does seem Like, for example, I would be interested in Thinking through what that failure mode looks like in terms of stop, should we have a different error message? In top, if there's an attempt to encrypt a 2 incompatible keys, Or or how how should that be handled? So I I just wanna observe that that's a That's a there's a wrinkle there. Adam, putting my user hat on, I think for bidding is extremely user style. So, like, to the point of then we need to send 2 different emails, and I can't put people in carpet copy or whatever. And Anyway, I'm gonna send that email, no postcard, encrypted because I don't have a post quantum key. For a death recipient. And I want to communicate to that person. So as much as I also think that the SIPD V 1 with the Silisha 1 system. Maybe it's not the bestest practice. But I still consider it safe. So it's not the the, like, tag 9 kind of encryption. So I would personally think that Right. As much as there might be a discussion whether to allow encrypt and whether to allow the 4 PQ certificates that that's a fair point to say, okay, we want to push people towards B6. We cannot say, okay. Now you have a V Six certificate. Well, you can't communicate V 6, but you you can't communicate anymore with the 4 people. Like, you you can't be put in the same group as the before ECC people. So I think that this question for me is a hard we should not fail. That should work. And we should use SIP DB 1."
  },
  {
    "startTime": "01:50:02",
    "text": "I I think I agree. We should we should allow that. And not fail. So Should we vote? What's what's the Well, I mean, we can we can run a poll if that would be useful. Point, So if If everyone has agreed crumbs, so far, there's only been a few voices, but if people are willing to agree that it is okay to do IPD V1. To a post quantum key, Then you know, the way that the protocol artifacts are You could generate a certificate that has a V Six that has a a V Six Sub key. Right. But you could put a v 6 sub key in a v attach it to the 4 primary key. That's doable. I don't think it is. You don't think it's it's possible to put a v a v 6 sub key on a v 4 primary key. But I can place the packets in order. Oh, you can, but I I think we restricted v six keys, V 6 sub keys to V 6 certificates. In the Okay. Thank you. I I I didn't remember that. So sorry about that. So so the argument then is Okay. So so then the question is, if I make a V Four sub key, and I choose 1 of these post quantum algorithms. What? What should the recipients do? If they see a V Four sub key, has a post quantum algorithm Sorry. Because you I didn't get can you repeat what you said there? 7 something wrong to me. So it sounded to me like what Justice is saying is that the post quantum algorithms,"
  },
  {
    "startTime": "01:52:02",
    "text": "should be marked as only acceptable in a V Six encryption algorithms. So the close quantum Signature algorithms are already marked, and the draft is only being acceptable in v 6 keys. Mhmm. And there's a question of, should the post quantum encryption algorithms also be marked as only acceptable in V Six keys. Sure. And so my question is, if someone produces a Public Key. Packet that has one of these algorithms in it. What do we expect implementations to do? With that. Just reject it. What we do with this 6 signature. At least it's v V4 signature keys. We throw an error when trying to generate, and we just reject the consider key embedded when parsing it. And would you be willing to do if the the consensus of the working group was, if the same is true for encryption keys. Would you be willing to reject it on input, if it's if you make it a mask like a 6 keys and not a shoot, I've been to say Copenhagen does this? Or Yep. I mean, if it's just an invalid key, it's it's much as I write as versions 15. It's a key that I don't understand. Mhmm. Okay. So to I To try and summarize, I think on on slide 4 here, the If I'm correct, I think people in asking the first question is, recipient and a post quantum recipient. Think people were saying that, yes, you should go ahead and do that."
  },
  {
    "startTime": "01:54:00",
    "text": "Even though you won't obviously, you're admitting texts that You're submitting ciphertext. That is, you know, vulnerable to a quantum, a cryptographically relevant quantum computer but we want the messaging to work. I think the answer to this, should that work was yes. Is anybody gonna disagree with that, or is that the that's the right summary? And then the, But not quite orthogonal question about the 4 V6, I thought I but I'm not entirely sure, but thought I was hearing that people were, happy with the idea that you must use V Six for post quantum everything. Is that Does anybody wanna disagree with us? Please do. And I would I would prefer the V Four keys. To be able. And I think also, I mean, he's not here Kai. Expressed a strong preference in this direction. Yes. So that's that's that's correct. Okay. Paul, Palavakis speaking just as individual, there's a bit of a subtle difference between saying, not fee for or, like, fees and higher because there's this, like, the five number in between that has effects if we make statements or an or sort of implicitly not support VVive in there. So I'm not sure if that's what what we need to do here, but, like, Sure. There is a difference between saying Not fee for and saying physics only. So I think if you want to avoid that in this question, maybe just say not fee for it. Yeah. Okay."
  },
  {
    "startTime": "01:56:01",
    "text": "Aaron? don't Please put PQC and V5 in the same sentence. They already tried to implement something little different reusing the same algorithm IDs Okay. Yeah. I think either we do v Six We bind it, or we say Like, before Ohio. Then, because V3 had also not would exclude it hard I think that's already crypto refresh. Does that? But Sorry. Sorry, Paul. I'm I'm not saying we should make any statements on V Five. I'm just wanting to make sure that I would like us to not speak about V5 and sort of not interact with it. So say so only saying, like, we don't want to do this for V Four. Like, that's really what I think the the question here, do we want to do this on V4 and V6, or do we only wanna a few 6. And so, like, sort of avoid V Five. It's not our thing. It's a code point we skipped. We don't have to worry about it. Sure. But don't make a statement about it. So fair points. So so I guess then the the What people in the room and online at this session seem to be agreed upon For now, is that The post quantum mechanisms we're defining will be will be defined for V Six And higher, but not for anything, not 56 on her. But we know that there is some, opposition to that position from people who are not present at the session. So, again, I I that sounds like something we should, specifically started thread on the list about I'm sorry to bottom out of that. Is that a fair summary? Because that there's"
  },
  {
    "startTime": "01:58:05",
    "text": "Okay. So That seems to be that that's where the, you know, that's where the meeting is at, and we know that there's a counterargument to come the mailing list, when we raise the thread. Pikari? Yeah. So, I just wanted to observe the time. We are almost out of time for the session. We did not get too the any other business and we did not get to the questions about the other things that we talked about as a working group being milestones. So I'm going to follow-up on the list to try to raise the, potentially next draft adoption things. Daniel, I know that you had slides to present about for assistance symmetric keys. And I hope that folks will look at those slides. I will point to them in the mail that I sent to the list. And Andrew Gallagher also had a pointer to, the replacement key draft that, he and Daphne Shah working on. I will point to those too. So I just wanted to give people a heads up on We do need to be thinking about that because those milestones are ostensibly for this So just a heads up. Yep. And I guess then also, Yeah. We did the usual sending the minutes to the list. So I I suspect it's likely that we'd want to organize an interim meeting we'll, we'll discuss on the list the timing of that, but maybe April ish. It might make sense to have a an interim to see, how we're going forward on the post quantum stuff. Then maybe also have more of a chance to think about adoption of other items. I think, yeah, we're out of time. Thanks, everybody, for playing along. I think we made some progress, and, that's good. And let's keep doing it on the list. Thanks, all. Thank you. Alright. Thank you. Bye bye. Alright. Stealing"
  },
  {
    "startTime": "02:00:02",
    "text": "Still, Yes. I oh, yes. Yeah, I wanna talk whether I should follow-up on the list and with the next thread being, the binding to V4. Sorry. Say again? I if I should follow-up on the list with the next threading binding to before. Oh, Sure. I mean, you, yeah, maybe wait wait till we post the minutes and then, do that. Yeah. Yeah. Yeah. Not tonight. I'll now go to bed. It's 2 AM here. So to be safe. I hope you've been finding Sleep well. Yes, sir. Find the basics. Exactly. By the 36. Exactly. Let's do it. Yeah. Yeah. Sleep well. Thanks for staying up late. Thanks, Jeff. Bye bye. Tell her, but when is this great? Same. Okay. House. That was quite accusations. accept your tentative to What was that? Is that just a data factor Is it easy? Is it easy, confusing? I haven't seen it happen before when I have multiple sets of materially."
  }
]
