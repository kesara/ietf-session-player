[
  {
    "startTime": "00:00:12",
    "text": "thank you foreign okay hello everyone let's get going can you please take your seat gentlemen we're gonna start okay welcome everyone um my name is the new co-chair along with the Kathleen and Richard and that are remote this time and let's get going the note well applies here obviously so if you're not familiar with this make sure um to um familiarize yourself with this because this covers everything that we do at the IDF tips if you're um in person please use the um the on-site tool client um this replaces our blue sheets and allows you to get into the queue um and keep your audio and video off for remote people please make sure audio and video are off and unless you were talking and highly recommend that you use a headset"
  },
  {
    "startTime": "00:02:00",
    "text": "a code of conduct please be nice to each other um just a reminder the sick dispatch um just recommends next steps um it doesn't adopt any draft and there are a number of possible outcomes here they're listed here I'm not going to go through this so our agenda here um we have four presentations and we will allocate 15 minutes for the three the first three of them and the last one will have maybe five minutes if we have time and then um maybe at the end a little bit of summary from the chairs and a few minutes from the ad at the end um any comments questions about this okay we will start with httpa go ahead thank you I would just like to inject one comment to thank refund for stepping up to co-chair here I appreciate uh your willingness sir no worries thanks Richard yeah okay let me know sure okay um and it's sorry I just wanted to mentioned that tarot is taking notes for us and thank you taro um okay who's gonna present is it on sounds fine uh yes laser Heights can you hear me okay uh let me give you control maybe do you wanna drive it from your side uh you you can hear me click on the slides fine yeah started you can drive from there"
  },
  {
    "startTime": "00:04:02",
    "text": "go ahead yeah thank you thank you yeah hello this is Hans for joining from Intel and I'll quickly talk about the future possibility to initiate uh building trust for the modern internet and next slide please okay hold on takes life back okay go ahead yeah so um in the modern Internet it's common to see end user's identity are not well protected and third party can easily access private content under the end identity and sub identities of the user for its purpose lack of trust is a big problem and we hope our work can draw attention initialism discussion and accelerate the transformation towards the perfect vision which is the trustworthy internet I think in the long-term future so following the end-to-end principle here we are proposing an L7 protocol to help achieve trustworthy web services we call that the testable HTTP or httpa httpa is simply an HTTP extension for binding remote adaptation messages to http headers and it establishes secure communication for web services running inside the trusted execution environment or I call that t or tee T is a security area of the main processor to guarantee codes data inside to be protected with confidentiality and integrity T is also considered an emerging Computing resource for web services for commercialization however HEPA protocol is not specific to T endpoint by extending Hep we are proposing a fundamental method called Hep a test and a set of a test"
  },
  {
    "startTime": "00:06:00",
    "text": "dash star head aligned for a standardization DPA workflow includes four major transactions including wide attached handshake a test secure provisioning and most importantly The Trusted transaction from right for more details you're welcome to check the internet draft we submitted agpa can stand alone to build its own secure communication we call that L7 trusted end-to-end communication and L7 secure communication on the attested this can not only be used for unilateral httpa but also Mutual httpa for the mutual Trust next slide please yeah and here is some background information we have a market demand for secure web services however web services are mostly not attested also notice that we're sailing into the new era not just protecting data in transit or storage but also protecting data and use in addition a great example is T which is an emerging technology that we've proposed to protect data and use and is a reasonable endpoint for HTTP message exchanges T is an emerging resource for web applications uh mostly it goes very well with the CPU for application developers to Leverage hence uh we think that there is a strong need for unifying remote adaptation on T for HTTP protocols so that in the future application developers can easily leverage team resources for their purpose next slide please and here's a quick comparison between https and agpi"
  },
  {
    "startTime": "00:08:01",
    "text": "although both of them have provide end-to-end security they have different granularity levels for defining an endpoint each GPS needs certificate Authority or CA to verify the identity of the website and by website it means in practice is most likely the website good way not the web service itself in this scenario if the web service is the endpoint that there is a violation in the num principle that middleman including CSP or someone else can access the communication content or Secrets easily and you will have to access your network you will have to accept in network processing that interposed functions in the traffic if the web service it's not the end point we have a room to advance our technology to reduce the trust boundary further currently in agps the whole website behind the gateway is the endpoint now let's take a look at httpi there are actually two scenarios for HPI unilateral GPI for one-way hdbi between the web service inside the T and the user ID at the end and mutual agpi between two T's in this picture we only show the first case of unilateral hdbi just for a simple explanation hevi works with child State's authority to verify a collection of identities of the web service run inside the T directly including genuine Hardware software software vendors Etc HBA can also provide a simple and unified way for users to authenticate the web services to build trust by remote adaptation remote hesitation is the key method we propose to verify all sorts of identity set"
  },
  {
    "startTime": "00:10:00",
    "text": "for including software hardware for Final Ground Lottery Authentication and that's what I mentioned previously previously the new HTTP method we are proposing HTTP a test so that user can expect the thing what happened as it is in the remaining HTTP transactions anxiety in this scenario of a GPI web service is the endpoint middleman between the web service and users cannot access the encrypted content uh even in the situation without TLS protection and they cannot Forge the identity either because hdpa allows an endpoint to select the part of the message for encryption we call that selected privacy and the whole communication between endpoints will be protected with authentication and integrity guarantee through the T in some strong T users can only rely on the web service itself for their sensitive data with even without the need to worry about the potential interposition fundamental boxes even though middle boxes are most mostly benign and useful um such as an application Gateway yeah sorry there are a number of people in the queue here and do you want to take this comments right now okay uh sure okay Roman yeah hi room engineer Carnegie Mellon University uh no hat just to kind of clarify I'm sorry I came up and down because I was trying to understand that the setup here so it really isn't about how many middle boxes are here whether it's an application Gateway or the fact that the tee is on a box the setup is you want to tunnel from the te irrespective of how many middle boxes are there to the user that's the motivation for the extra headers"
  },
  {
    "startTime": "00:12:00",
    "text": "yes yes okay thanks harness hi honest traffic um in general uh if you put a TLS Gateway somewhere in front of your web services the expectation is that you would offload the TLs service that's why you put that in front of it um so I think from that deployment point of view nothing changes uh if you don't want that offload then let your TLS go all the way to the end having said that you could um probably if you want to truly have it end to end uh you could put something into the application layer which would be simpler and wouldn't require modifications to the HTTP protocol itself which um and uh you could also sort of layer different sort of TLS protocol on top of the application as well if you want so I'm I'm curious on why you don't want to just go the simplest route which is um if an application needs it put that information into the application and by the way certificate Authority should be certification Authority great hands um hold on Jonathan just one second do you have an answer to what do you want to answer honest okay Jonathan uh Jonathan hoyland's crowd player um so your httpa communication is giving you uh confidentiality Integrity all the things you want why have a TLS Channel at all right you you can just do this over like raw internet packets and adding the TLs channel is just sort of adding noise it doesn't really help anything"
  },
  {
    "startTime": "00:14:01",
    "text": "what's the security guarantee you want from the TLs Channel why aren't you just doing this over raw internet yes so for the to as channels it's not necessary for httpi and we don't necessarily need that um so this is the kind of things need more discussion I think that essentially the users the interest that what they are interested into a verifying the identity is that a website or the web service itself that's kind of the question why trying to enter and if it's the web service itself nothing really related to the website then probably httpa is good enough however you know most of most of the scenarios we're still we have a ingrained trust in the hdls and and we need some experiment part you see we only have the pure hdpi and what that's that in that perfect scenario um what the spirit is like so it's just flicking through your draft I didn't read it in detail and I I just noticed that there's there's no attempt to bind the httpa or the the the te to the TLs channel so I really think it isn't doing anything at all I think it's just noise yeah you can put it that way um it doesn't rely on TLS so just a question here we have about five minutes left in the slots we would like to have some discussion and get dispatch outcome here um so I don't know if you want to go over in the feedback now or represent a few more slides but if you could kind of get to it in the presentation has some time for feedback that'd be great yeah I was gonna say that like maybe like we're going to have any discussion we need to like have like no more slides"
  },
  {
    "startTime": "00:16:00",
    "text": "or one more at the most so um I'm happy to have to wait for it but like what would shares like to do sorry what was that yeah I said if we're going to discuss this we have to like have this presentation end very very soon so like what do the chairs want to do yeah slides do you have how many further slides do you have this is the last line it's the last slide there's another last live trying to discuss where do we go but this is probably the last live for the content oh good okay yeah so yeah I think this is the wrong layer um my question is somewhat like Jonathan's but I think perhaps more straightforward the right place is the TLs layer um not at the HTTP layer um like uh I understand you like want to have like a Gateway but like this is going to create all kinds of confusion about the situation um in terms of like what can the Gateway do and what the game we cannot do if you have a lot of selective encryption or selective signature like there's been like all like history of enormous amounts of shenanigans with a slice of signature it's like the right way to solve this problem is to like have this like terminate on the TLs server if like if this problem need to be solved at all um which I am like somewhat skeptical of um um and I think so saying that maybe that so maybe I'll even back up and ask the question how do you envision this being deployed so do this is this for the web for instance uh we're envisioning this for the web instance yes so how would it how would a browser consume this information presented to the user but let us stipulate this all worked was that let us stipulate this was perfect how would the browser consume this information and present it to the user yeah so this requires um like we need to build some share library and then have some browser plugin that will have some browser plugin to pass it to pass that information for this complication no no I I'm not asking how the how the protocol works I'm asking what the browser shows the user but actually but"
  },
  {
    "startTime": "00:18:00",
    "text": "that's that even brings me another question is any browser interested in this uh so far I'm not quite sure yet um this is still kind of a concept so far okay so I think that I think that's the for me that we the predicate question for taking this up for ITF um so I think um the answer from my perspective and perhaps other browser vendors have similar ways is come back when someone's some browser is interested okay Mark see this is the problem when you can sit down and be in the queue um so I I have significant concerns about how this uses HTTP I think it's maybe an extension of ecker's comments that about the layering um I'm not at all sure that this is an appropriate candidate for a new HTTP method and I encourage you to read both the HTTP semantics uh document on HTTP methods and what the requirements for them are as well as BCP 56. um I also I think I've communicated this poor it this is not a good name https was probably a mistake I think this is an extension if it's how did that happen exactly uh uh if this is going to come in at the HBO later which I think is a big if it's an extension to http it is not a new named HTTP um but I think what really needs to happen is the community needs to have discussion about use cases requirements what is the right layer to have this come in at rather than just having a solution saying look here's a new HTTP method so let's have that discussion if there's interest in that discussion okay we have one minute here so Ben please go ahead quickly hi uh I just wanted to encourage you to look at the existing multi-layer work in HTTP particularly HTTP connect UDP or math and web transport um that seem like they can probably"
  },
  {
    "startTime": "00:20:00",
    "text": "Express this in a more natural way where there's a a TLS session to the Gateway if there's Gateway level logic and then an end-to-end TLS session into the trusted environment inside that thanks Ted uh dispatch outcome I recommend no action at this time I strongly agree with all of what Mark Nottingham said about its use of HTTP I think the method is completely um in in need of a rethink and I think some discussion as well about how it's using the headers if it stays at the HTTP layer it needs to start over and I think Mark is correct that it doesn't belong there and so I think no action thanks Ted Danielle um I agree with the no action from other people I also think that there are some pretty serious privacy concerns if this would actually apply uh if the server could request attention from the client I heard bi-directional early on and this strikes me as uh some kind of Mega cookie of like having been approved that I am this particular device um so I I think no action there's a lot of unanswered questions here and I don't think it's fully big enough freedom to start all right so just to wrap up the dispatch outcome here sounds like there's pretty good consensus there's no action for now and there's some good feedback that there's needs to be a little bit more thought of how this fits in with the TLs the web transport uh sort of architecture so thanks for the presentation Hans um and next up is thank you security yep and Milling okay is me kneeling around either remote over here"
  },
  {
    "startTime": "00:22:02",
    "text": "doesn't look like it no one oh no I don't see her on the in Meet Echo okay let's move on next one is sign public key let's see okay gram yummy to hand you control yeah okay so let me hi my name is Graham leggetts I'm brand new so please be nice to me and don't jump on me um yeah I can as long as as long as no one bites me that's fine um I wear a number of hats I come from Apache software Foundation did a number of a lot of work on httpd way back when um further to the present there's a project called a red wax project which is aiming to put a whole lot of web-based Technologies um anything anything that crosses Security in the web like Skip and this sign public key and challenge um we're trying to find things that are broken and fix them and one thing that's broken is this so if you can jump to the next slide quickly it's not working for you um no am I okay let me dig back I'll I'll drive this yeah okay go ahead it's reading from my notes sorry about that so what is it um it's an asn1 structure it contains a public key and a challenge as you would imagine from the title and they're signed and that's basically it um if you jump to the next slide what I'll do is go into some history"
  },
  {
    "startTime": "00:24:00",
    "text": "um some people might be old enough to remember the 1990s there was a company called Netscape and they invented a thing called a web browser some people might be familiar with that and in inside that web browser was a thing called the Keygen tag what the Keygen tag did is if you embedded that on a web page what the web page would do is generate a key pair for you and then submit proof of possession of that key that private key would send it over to the server and if you were a certificate Authority you could then use that mechanism to hand out certificates and that worked for about 20-ish years um the key gen mechanism eventually became part of the HTML5 specification you can jump to the next slide quickly so at the same time also in the 1990s there's another company called Microsoft that people might have heard of they invented a different mechanism there was a big fight between the Netscape people and the Internet Explorer people uh same problem being solved problem being that the private key was generated in the browser and never left the user's possession their decision on how to solve it was to use a certificate signed request and that was the thing that went over the Internet this still exists you can have it it's called it's it's exists inside Internet Explorer compatibility mode if you use Microsoft Edge um anyway we jumped forward if we jump forward one slide and about 15 years Firefox and Google in the mid 2010s said yeah now we're going to take this out and specifically they took out key gen from the browsers and they took Keygen out of the HTML5 specification uh justification quite valid really first one the message format that I described a very short"
  },
  {
    "startTime": "00:26:00",
    "text": "while ago was never written down it existed it was widely deployed but no one ever standardized it and it's now code that is lying around openssl it lies around inside NSS that lies around all sorts of places um it is not a standard and for that reason I'm standing here now I hope to make it a standard just so that at the very least we can we can put a bit of History under this piece of the internet um the Sophie jump to the next next slide we get to the point of why bother doing this work in the first place um the first reason is that code exists it exists in openssl exists in NSS it exists various places on the internet and this code allows you to create a message and that message allows you to prove that you possess a private key we don't like throwing away good code it's been there for 20 to 30 years it's widely deployed in all sorts of operating systems all sorts of libraries throwing it away is a waste in addition we still want to prove that we possess private keys and we don't necessarily want certificates to be involved because things like Dane and dkim and so on exist and they don't necessarily cover certificates um so there is a there is still a need for this problem to be solved so if we jump to the next slide the goals of this if I zoom in on my phone because I can't see properly the goals of this is to formally Define the spkoc format properly to the standards of the ITF and then go to each of the implementations out there openssl is one that's already been done but there are others and update those implementations to make sure that they are clearly indicated as following a standard and fix any shortcomings in them the big shortcoming that did exist in openssl"
  },
  {
    "startTime": "00:28:00",
    "text": "was that despite signed public key and challenge not depending on any particular kind of hash uh the guys who came up with key gen said md5 is good enough for everybody and they hard-coded that into keychain obviously that is evil um and in this particular spec we've we've updated it to indicate um 2020's practice and don't hard code your um your hashes and the end goal ultimately is we want people to be able to use this message to prove they're in possession of a private key if we jump to the next slide we get our non-goals so one of the things in the specification is that yes there was a lot of history um Netscape Microsoft Etc at the end of the day this particular speaker specification only focuses on proving you have a private key it doesn't go into Keygen it doesn't go into a search enroll which was the name of the Microsoft implementation that is a little history of where it came from and how we got here um however that ultimately isn't important in the spec we do not want to change the format it works entirely fine as it is so if you jump to the next slide where next is the question that we're asking at this point okay Michael St John's um one of the things we encountered fairly recently was the issue about dealing with proving possession of non-signing keys is that something you just don't want to do here it's the that is another problem so we would like to solve other problems but our primary thing is to make what exists today a"
  },
  {
    "startTime": "00:30:02",
    "text": "standard because it's I'm quite sure that whoever invented it in 1990 whenever intended it to be a standard and they didn't get that far so we're sort of coming decades later and sort of finishing the job there are certain things that we're probably not going to solve or maybe we can solve in a further iteration of this but certainly the first goal out of the door is to standardize what's there so that people can then use the code confidently knowing that it's not going to get ripped out of openssl so on okay Eric so as I understand it you don't want to change the format at all right that is correct so the correct venue for that is an informational RSC published for 80 sponsorship um uh so um I will say I have some doubts about the merits of this idea but like fortunately we don't debate those um I agree documenting is some value and the correct menu for that is the v80 sponsorship if you want to start if you want to screw with it then we can talk about standardizing it but but um if we're just gonna like rubber stamp it write it down somewhere that's already okay Jonathan uh I I agree with Eric obviously the uh connect correct thing is just informational RFC um but if you are changing something I.E changing the use of md5 then you are not documenting current practice so md5 has historical practice and its practice of someone who made an implementation where this was part of an implementation is there an implementation that exists today that is not using md5 yes so openssl is fixed it cannot use md5 um anybody who implements Keygen today would need to have a field that says what kind of hash would you like to give me this in as opposed to just because previously it was an oversight whoever did this 20 years ago they just"
  },
  {
    "startTime": "00:32:01",
    "text": "hard-coded mt5 because it's good enough for everybody so all it needed was a hash equals name of hash so this isn't a huge um it isn't a huge blocker because there's nothing in spkc that says you have to use a particular hash there's a field that just says what hash did you use um so from that perspective I think it is quite we have to be quite I mean we as the Royal we of writing the spec have to be quite careful about not conflating misuse in the past where someone uh hard-coded a hash to what this spec um tries to achieve and that's just here is a message format the message format doesn't yeah so a hash to you you can you can write an informational RFC document it um if if you want to change it there are about a billion and one different options that already exist today that do basically this yeah so we don't want to change it okay Robert in the point of not wanting to change it there are a couple things probably which make an awful lot of sense that should be there which are not for instance a time stamp so I would recommend that your document say not just we're following the format not changing it but also how you deal with or or or accept that you don't have those other fields that you're accepting that this format doesn't have them and why it is an acceptable practice not to have them yes I think that this sort of so we have code that exists today we've specified the specification of how the code works today this is a very compelling reason to change it what would be great is to change it in such a way that it is backwards compatible um but certainly yes and I what I would like to do is get your guidance as to where we go next in the long term yeah"
  },
  {
    "startTime": "00:34:02",
    "text": "yeah it's like uh your doc I would really would like if you if you take a couple of these key points and say yes it would be nice if we had them we're not having and here's why it's it's reasonably okay to move forward without them yes okay because essentially The Challenge part I think the idea behind the challenge was that that was your your um we're not going to we're not going to replay this somebody else may replay it yeah so I think a potential possible challenge could be a combination of something and a timestamp but it's a potential challenge so whether we add an explicit timestamp or whether we just say if you would like a timestamp put it in the challenge because the challenge is just a straight so this I get as an example there's probably more that I don't know about and would be good if you had text discussing that yes I definitely feedback is something we'd like at this point yeah so I just want to ask a couple questions this Inc this thing I don't know no it does not include not include Keygen okay so then I'm not interested Daniel I I am interested in kitchen but in terms of this specification it's it's separate um I just wanted to I know I'm not getting Keygen back I that's that's the thing that right but Keygen is the thing I need but I know I'm not getting it so it's okay so Daniel go ahead sorry um so uh this is for dispatch questions this is clearly uh informational because No One's Gonna Get actual Change Control if the goal is just to write it down and I really think I mean I'm going to agree with Bob that the lack of context for this uh challenge protocol is pretty problematic from what we currently know about how to design protocols but I'm going to disagree with Bob that the thing to do is to write down here's how to do it right within this I think the thing to write down is security considerations that say here it's"
  },
  {
    "startTime": "00:36:02",
    "text": "missing all this context we know better than how to do this today you shouldn't use this you should use some other protocol uh if it's going to be written down I really think the security consideration need to call out the fact that this is is missing stuff we've learned the hard way over the last 15 years okay Stephen all right so Stephen Farrell I'm still confused so you say this kijan is not part of this is it for something else or is it only for I just I'm confused so key gen key gen is a superset of spkc so spk C Keygen is the I understand that over overarching overarching process of browsers and and requests sure the keys we generated Etc spkc is purely the message that gets sent from the browser to the same thing I possess the private but if you don't want to use it for a key gen what do you wanted to use it for I I'm just confused and I the dispatch answer is different depending on the answer so it depends that there's certain things like if you have an app of some kind probably not a browser because generally the browsers don't let you do this but if you had an app of some kind that told that said to your your DNS provider your Dane provider I would like to roll over my key and I would like to prove that I possess the old key I'm going to tell you a new key here's proof of possession of my old key please update my new key this could potentially be used in a in a in a system like that without inventing from scratch a mechanism to prove that you possess a key so this this code this ability is built into libraries all of the rest of it if you wanted if you had that use case and I certainly will do in the future is is the ability to go I have this key and I can prove it and I don't need to write that from scratch I need I can just use this Library function which depends upon this I get it now so I think on that basis I would say no action because we have lots of"
  },
  {
    "startTime": "00:38:00",
    "text": "choices to do this whether you have just as many implementations as far as I know or even more so that I would think no action on that basis okay thank you good Richard do you have a comment no I was just gonna summarize the discussion so far and then hand it off to Roman um yeah Stephen Stephen's closing comment and understanding it seems like there's general you know the general direction of the room is toward um you know open estate his sponsorship at the informational level but I'll let Roman uh comment on his uh willingness to sponsor it hi Roman Julio one of the Securities yeah in the spirit of making sure open source implementations of crypto stuff are well documented in interop and this is a small document and as we talked on the list that we are documenting an ASM one format and providing good advice on top of that and nothing more I'll be sponsored as information thank you one thing I'll also capture in the summary for the minutes though is that it's going to be important to get the security considerations right here I think there's a bunch of notes in the chat and it was um raised by by Bob and um I forget who else have been like um that yeah this is clearly something that has sharp edges and then you know if you're going to integrated a new app that you should be very careful with it so I think that's I hope the the authors can take that feedback and adjust accordingly okay good thank you thank you very much Tom hello everyone my name is Tom Franco I'm affiliated with arpa2.net um I'm also new here so thanks for the opportunity to uh have some time here to pitch our draft um we have been working uh next slide please uh on a draft about a TLS extension called TLS kbh"
  },
  {
    "startTime": "00:40:00",
    "text": "um I don't have the time to go into all the technical details but I really would like to have some feedback on the idea in general Is it feasible or not and where it should land either in a work group or in an independent stream or not at all so feel free to roast me if it's bogus so I'm going to give you a short introduction into TLS kdh what it is um describe some abstract use cases and then have a short discussion next slide please so we've been drafting a specification on a TLS extension that enables kerberos-based authentication for TLS we call it kerberized diffie-hellman and we basically combine the worlds of Kerberos and TLS without going into all the details the idea is that you get your ticket from the KDC and use that in a TLS handshake to get a nice Channel binding and and use the ticket to mutually authenticate both parties next slide please thank you so we've defined two modes of operation um kdh only that means that you use only the the client ticket to a mutually authenticate the server and the the client um and KDA enhanced that means that you have a regular server to client authentication based on a certificate for example x509 and you enhance that with a client ticket to have Cobra's authentication as well next slide base please so what could be potential use cases without going into much of the concrete cases kdh so Kerber space authentication could be an alternative to a pki as well as pre-shaped keys"
  },
  {
    "startTime": "00:42:01",
    "text": "so it depends what what you need what your security requirements are but there are certain use cases where you want the centrally managed system where you have a KDC to to manage your users um a nice side effect of of kerberos-based authentication and the channel binding that we have achieved is that you also Harden your TLS channel for for Quantum Computing attacks because you can see that with a symmetric entropy so that could also be an interesting use case um the other way around we can protect the Kerberos sessions with TLS and then achieve perfect forward secrecy which was also not possible currently and we could use TLS kvh as a spinago alternative or replacement whatever you want um because we we achieved basically um this this authentication on the transport level instead of on the application Level next slide please so there was it in a nutshell um the question is is this a viable idea is it is it feasible is applicable we have our own ideas about this but your experienced um input is very welcome um and if we should proceed where should we go and if we should not proceed then too bad hey Eric um I I don't know yet if it's viable um it should go to TLS um so I mean I I skim this draft and like I was sufficiently like unsure about some of the details that like that that may become an illusion they should go to TLS if you go anywhere just like you know like so the the bit where you're like we're like doing your own signature with like the with like the Mac on the keys and stuff it's like maybe it's right maybe it's wrong but like it's got to be like we have to look at it more carefully so um I I guess you know uh my question would be like I I I think I think now when this comes"
  },
  {
    "startTime": "00:44:01",
    "text": "to say you lost my particular question will be he was interested um so I think like you know when you completely lost you should be prepared to say like these are the following implementers and they want to use it but um I mean conceptually there's no problem with the Kerberos CLS binding and as you know we've done them before um the details obviously matter and so the question of whether ITF should bother to like invest in it it kind of comes down to like um uh you know because it has done interest um I will say that it's possible you can get it down I mean I mean I think of the problem a little bit um and it's possible you can get it down to be a very small extension in which case maybe you could do it just on your own without a Taos review um but if it's as complicated as this document is ends up having to be then it will have to be in TLS all right Alex hi Alex shanahovsky I was curious if you were using this for authentication or authorization or both because I think that somewhat changes what I think about this well primarily authentication but of course you can also do authorization with with uh uh Kerberos um but that's up to the the end applications so basically you can use the authenticated channel to to do Kerberos things um right I I don't think you should try to use this for authorization because that works very poorly with the web like the whole browser model which is why client search are disfavored is because you end up with really bad user experience so like I'm kind of curious if you want this for machine to machine communication or if you're looking at this for like end user to server communication because I think that if you're looking at it for like end user to machine communication you're basically going to run into the same problems that we had with just happy and espnego and I would say that this is not worthwhile but if you're looking at it from machine to machine my immediate question is why aren't you using the existing just happy Channel binding mechanisms with TLS and like let TLS do TLS stuff that's a good question I I don't have a direct answer to that we can have a discussion about about that offline thank you yes so uh lots of years ago ipsec had a"
  },
  {
    "startTime": "00:46:03",
    "text": "similar proposal and uh you have the Kink RFC 4430 uh kerberized initiation of keys is kind of an alternative to the internet's key exchange and this saw really close to zero implementation and close to zero uh use because nobody really wanted it so um for this proposal is there any uh real I don't know customers people who really want to use TLS with the Kerber squeeze yeah that's of course a very valid question um we within our own project we have some some use cases for this um we also heard some some interest from the the radius group um they're also looking for Alternatives um and Kerberos was was a was an interesting idea they said and we also reached out to Microsoft because they're doing a lot with active directory Kerberos single sign-on applications so we're still discussing that but we do think there there is a group of users that might be interested thank you okay Jonathan so the the obvious dispatch method would be sent to uh TLS um but having just looked at the spec this this does changes to the TLs key schedule and um changes it breaks some of the assumptions used in order of the security proofs so if you do do want to do this um can you come with like a formal analysis and a proof that you haven't broken everything because I don't want to have to redo that to ages yeah that's also a very valid point um and it was one of the details I didn't want to go into right now because indeed we have an alternative for TLS one too and for TLS one three because it's the key schedule is completely different um um we don't think we break the break uh"
  },
  {
    "startTime": "00:48:03",
    "text": "any any security but of course a formal verification would be nice um you you break the security proof right so there's a proof that TLS is one secure is secure you definitely break the proof um so you'd be using something you don't know is secure which is not the same as is not secure yeah no that's true and that that should be checked of course and for TLS one three uh we we generalize the mechanism that we used uh such that it can also be used for other mechanisms than than tlskdh to to provide entropy um so that would require proof for every every new mechanism um but that's definitely something we will look into and uh uh we also have capacity within our project to do so yeah yeah so um the other thing I would say is I have a now expired draft on uh TLS uh extended key schedule which lets you inject stuff into the key schedule with a proof that you're not breaking anything so maybe like consider using that yeah thank you okay Richard do you want to summarize this yeah so that brings us to the end of the queue thanks to everyone for your comments um sounds like our outcome here is is no immediate action um this um if if there is some work to do here it'll be in TLS um and questions are heard that we would we need to address in the TLs working group or you know is there an audience for this what's what's the market for it as it were and you know how do we verify that it's secure so it sounds like some good feedback I think that kind of indicates the next steps is to um start some discussion on the TLs list so thanks for the presentation thanks Tom and any other comments from you Tom you're good no thank you very much for all the feedback and we will follow up yeah thank you"
  },
  {
    "startTime": "00:50:00",
    "text": "uh Richard do you know provide a summary and and then I'll let Roman kind of wrap it up here for us sounds good so by my notes uh our outcomes today on httpa um there is no action for now you need some some more thinking about how to integrate with the the stack and on you know who needs to be engaged on that so no action for now on httpa secure routingly skips because uh we didn't have a presenter um s p k c a i think there is an a at the s p k a c there we go that's proof of possession thing um we agreed to send that to over to the ads for 80 sponsorship as informational um with a bunch of notes about security considerations and use of this and new stuff um and on tlskdh the feedback was that this is uh work should happen in TLS if anywhere so uh discussion should happen on the TLs list so that over room okay thank you Richard and Ron hi everyone Roman genillio uh and so I'm kind of speaking on behalf of kind of polymy uh probably uh I think two weeks ago you saw an announcement on the SEC dispatch list about how we are rethinking the approach to leadership sect dispatch is one of those standing working groups it will endure hopefully forever it's been quite a bit of a success in helping us manage the portfolio of things coming in to the to the SEC area we hope it's been made it a little bit easier to bring new ideas kind of for those proponents that may not know what the entry point is what we didn't want of course is for those in the leadership team to have to be there kind of permanently uh and so what we've defined is a rotation kind of schedule that that we published and so notionally going forward the thinking was that we would be looking at terms pushing around kind of four four years time and those"
  },
  {
    "startTime": "00:52:02",
    "text": "chairs would rotate as as that occurred of course if something changed they could step out earlier so we made some kind of announcements kind of relative to that so welcome to rifat uh kind of thank you so much for your willingness uh willingness to serve I wanted to again thank publicly Mohit Who had who had stepped out a little bit earlier due to his uh really great new job opportunities uh and with the rotation that we've set up uh exiting out of this working group will be Richard please flip your uh your video on and the long-term plan uh starting kind of this time sorry mid-summer next year at ITF 117. uh Kathleen will be approaching your foreign so whoever the ads at the time will make the next selection and we hope that this really creates that pipeline of rotation into the organization what I want to say here kind of enclose is Richard please get on the video uh I wanted to say thank you to Richard uh I think the SEC dispatch process has been really an amazing addition to to this to SEC process I know as an idea it's been invaluable to get your community kind of feedback and I think from what I've heard from folks trying to bring new work here this is very much to help them that does not happen in a vacuum that really starts with kind of strong facilitation by the chairs and Richard you've been here since the beginning and helping us first launch that process and really show us how it's done in the since we since we started almost four and a half years ago so as you step down I wanted to kind of say thank you for your leadership and helping us manage the area so you're not in the room but we're gonna clap for you anyway I I appreciate it Roman back when I was uh art ad I was a beneficiary of the dispatch process in the art uh our art area so I definitely was supportive of having a similar thing in the security area and was definitely to help set that up so happy to help and happy to have uh new leadership here so thanks again to your thought for stocking up and to those of you in the crowd um you know I think we're going to have another role here in a year or so start"
  },
  {
    "startTime": "00:54:02",
    "text": "thinking about uh whether this might be of interest to you awesome thanks Richard any other business okay and I also want to thank Richard as a as a co-chair for the last few years so thank you very much awesome okay thank you everyone you're done all right so yes yeah you didn't respond yet"
  },
  {
    "startTime": "00:57:02",
    "text": "foreign"
  }
]
