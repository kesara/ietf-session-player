[
  {
    "startTime": "00:00:08",
    "text": "good morning good morning okay um hello everyone welcome back to the interim meetings after in the new year um this is an inter meeting of the SEO working group we have a short agenda of items um that's a regular ITF it's a regular ITF thing so the not well applies um I think you're all familiar with that I'd like to go through the agenda first and then we can um um start with the with the actual items uh so the um Caston has a few updates on what has been submitted to the isg um we'll talk brief briefly about um the next steps towards more control and modules um and then uh the next and then about how we will progress with theistic encoding and with the uh with uh DC War um as is used by gordian there is one more block at the end um that will um cover the topic of how we can use a cabore in the context of of Yang where all the values are um young typically string valued and how we can do better there anything you'd like to add um resequence or otherwise note here hearing nothing either my audio is broken um or there are no changes um but I notice if it's the first right away so Caston please start with your updates on what has been mitted in the"
  },
  {
    "startTime": "00:02:02",
    "text": "document okay thank you so your audio is not bro not broken is mine broken uh no your audio is fine and uh thanks uh thanks Christopher for pointing out that uh the uh this um the gordian topic is not only about the use of DCB but also about the envelope um as a larger thing um it's in the list now so um we won't miss this good good okay so um I made some some slides these are not slides in the sense that you can look at them and uh find out what what I have been saying but I am going to say something to these slides um so uh right now we have quite a few documents at the the trailing end of their uh processing one is in the RFC editor queue and uh actually has been in the RFC editor Q for quite a while it seems to me we have a little bit of of constipation there at the uh moment um so um let's see how that goes but this is an approved document the the tags are allocated and so on so uh that that is the absence of an RFC number is not really something that that should uh stop us from from using those tags so these are takes 1,1 1,2 13 for daytime for extended day daytime so um there is nothing stuck in isg at the moment um which I hope we will change in the next few days um we um have working group last last call passed uh for uh two of the documents that that we generally put into the cddl"
  },
  {
    "startTime": "00:04:01",
    "text": "2.0 uh slot so one one is the the fixes and updates to the cddl grammar and uh the other one really isn't about cddl at all but it it's um uh update and refresh of the extended diagnostic notation which is just very useful uh to to use tools uh with so people who are using cdda usually are also using CBO diagnos notation so these are essentially done and now I'm confused because these have oh the those are the numbers that that actually passed the working BL call I'm going to talk about what happen since and finally with sear packed uh we are continuing validation uh process so for instance I must admit I haven't updated my implementation to the most recent version and uh I think other people should have a chance to do that as well and in a previous inro meeting we said that uh we want to do this until about end of February so we can uh then put a LD on on this and and uh maybe do a second work last call but ship it to the isg then so we should see the the three documents on the lower half of the slid going to the is uh before uh Brisbane um so um yeah the the the grammar and literates documents actually have had updates because uh Christian did a pretty thorough Shepherds review and um there there were quite a few things that that could be clarified even more um so these are I think now now ready to ship them"
  },
  {
    "startTime": "00:06:00",
    "text": "and um the CDD more control uh document has gained a print F in the last round in in December and the the print F probably needs a little more specification takes just pointing to to posix uh here or to to um ISO I 9899 is not sufficient um so that that is the to-do item um I don't know if we want to add anything else in this round uh if we miss it we can open the next document and we kind of do this every three years or so so um yeah we can register the the uh uh operator names right away if if we find that we want to use them but it's nice to have draft specification and RFC that can be referenced um so to to get a little bit more feedback uh at the previous interim we said we we plan an interim specifically focusing on um cdda 2.0 uh use uh this interim is not the the one we plan to do and uh we still have to do the planning but uh since this uh uh probably should best be done before Brisbane we probably have to start uh planning that interim soon so that's the cdda control uh operators and finally the cdda modules uh concept um is already used under cover in in some places uh but I think people will be reluctant to actually put it into their specifications uh before the the document uh is uh has advanced a little bit more so we have a little bit of a uh Catch 22 problem here we we don't get"
  },
  {
    "startTime": "00:08:02",
    "text": "feedback before people use it people don't use it before we have finished it um so again this is probably something we can address with an interim on on um CD 2.0 uh use which we need to plan soon okay then packed um I just submitted d10 this uh morning um actually uh we have hadn't submitted an update of the document for quite quite a while uh so um that was simply necessary by by the automatic exploration uh time but it it now includes various editorial and and knit uh fixes um that there is no content um change no change to the technical content and again uh we want to continue the validation and uh time box this uh at again at the end to the end of uh February um and um I think we have a somewhat separate discussion about implicit and incremental table setup uh mechanisms including an interesting interaction with deterministic encoding where we I think need to understand whether this is a good thing or a bad thing um so th this should go on but may not actually influence this document except that we will learn something from this this discussion that may be useful um there there are also some some comments that still need to be processed like Christian's email referenced here um we we uh probably want to take one more look at benchmarks like uh DNS and sio we want to get more implemented feedback and we want to finish this uh by the end of"
  },
  {
    "startTime": "00:10:01",
    "text": "February okay so this is uh pretty much the the um document status part now to the the main content of this uh meeting um so I submitted an an update to the CDE document recently a couple of days ago uh we uh had some some general agreement that this should be Advanced soon because people out there are wondering what the status of deterministic encoding in general is and what we now have to do is uh get some details fixed and one was the security considerations that1 has some security considerations but please that's one paragraph It's probably worth thinking about this uh some more um and uh the other one um has already happened on the mailing list quite a bit uh the the need to cover all of SEO kind of puts it into a bind with Nan payloads which are this this forgotten stepchild um not only of of Z but one would say of all of I e754 it it's um feature that that the floting point standard 754 has uh but it's also one where 754 has been very reluctant uh to actually make decisions that would make this more useful um so most implementations also do not Implement all of it or even even small parts of it um and that has certainly to do with many implementations that that are a few years old already at a time when we didn't really care about complete coverage of all of"
  },
  {
    "startTime": "00:12:00",
    "text": "uh that much but with CDE we we have to do that and uh the current draft adds some guidance in particular Das one adds some guidance how to handle uh n with uh P payloads um on the other hand we know that this will not be a part of the SEO standard uh that will have a lot of complete implementation people will probably implement only basic support or not not even that um and the the the question that that really was on on the mailing list in in the last couple of days is is that actually a problem uh what do we want to say about this um so do do we want to to um have a a dark corner an official dark corner of uh seore that that is identified by by the N payloads um it 754 has had some few additions few more normative paragraphs added in the 2019 version so they seem to be aware that they have this big hole in in their standard as well um but um yeah we we kind of have to position our elves uh to that and I think the current text in-1 is what we need here uh but of course uh we should actually Implement that and given that my implementations are mostly from 2013 I haven't addressed that and um I think quite a few other people haven't done that either um so what this does not mean is uh that uh the the better specification"
  },
  {
    "startTime": "00:14:00",
    "text": "of deterministic encoding suddenly creates a need to implement this for for every implementation uh but those of us those of us who want to understand what we write in the CDE document maybe want to look at their implementations and maybe add the two or three lines that will be necessary to um support that if if they already have basic support um for for some form of uh n transform and I think most most uh people have an implicit application profile that simply reduces all nans to uh acquired Nan with zero payload um I think that that's a quite appropriate for for a large part of the specifications uh uh of the implementations of the applications we have out there um but uh yeah if people want to do more floating point and and I have been surprised by by the number of people who are thinking about floating Point much more seriously now than two or three years ago uh then we need to to cover this so this would be my summary of where we are with CDE and I think this would be a good time to take questions contributions statements on this document lawence all right can you hear me okay somewhat broken up but um I think it works okay yeah um so uh I'm kind of the uh I mean I I think I'd like to see Nan payloads not supported just to use the the you know the the half Precision One um for a couple reasons here um one is that that programming environments uh generally do not support n payloads i"
  },
  {
    "startTime": "00:16:01",
    "text": "mean if you you can do it in C and C++ but I think could be hard to do it anywhere else um and when you do it in CN C++ you're really you have to read you know 754 figure out how to do you know casts and bit shifts and stuff like that um it's not terribly difficult once you see it but um it's not something that it's easy to figure out how to do um like there's no you know see see there's an is Nan method but there's no you know way to get the Nan payload out with a with a library so just programming environments don't support this also you have to go through and support it as as literals and there's no literal in in in C um there's no definition in cddl I mean there's there's just a lot there where this is this really is a Dusty corner of of of programming environments in general um so so that's one reason um uh as far as use cases um you know I think I mean I'd actually like to see like more of an end to- end use case um uh rather than just we need to do this because 754 supports this uh even um it should be like a real end to end use case I know um I think it was Joel or Joseph hillbrand um suggested one so maybe there's one there but I'd like to see a little bit more on use case um uh another um is to to me this is we're trying to do determinism here um and to to have a part of and to me um serialization seabo serialization is one of these things that confuses people it's hard to get your head around um you know I think we mostly get by uh pretty well with just um preferred calization"
  },
  {
    "startTime": "00:18:00",
    "text": "but it seems like it's a reasonable step at this point to uh really try to lock this down and have a really tight specification here so um for our new brand new deterministic specification um to have kind of a still have a Dusty corner where you have to like say well we really uh um uh you know we said this but we mean that and it's okay to to shortcut this that seems kind of not so good in a in a in a situation like this um when we're trying to really tighten down what's going on with the encoding calization um uh let's see what was that a couple more things um uh I'm not remembering now uh um oh I don't think you know just be because uh uh I don't think we're obligated to support all of seore um it doesn't I mean I I kind of understand the sentiment but I don't know that you know it's it's kind of a this is a place where C War allows for something but General the the general programming environments in the world doesn't doesn't really support it very well so um and we're not closing this off for forever this is just CDE which is not necessarily the vast majority of use cases we still have the option to do um anybody has the option to do it they don't do CDE CDE is not necessary for most use cases so I'm just like um uh indefinite length um if you don't if you if you need Nan payloads just don't do CDE it's not it's not ending it forever so okay that's it that's my summary"
  },
  {
    "startTime": "00:20:00",
    "text": "yeah my response to this would be that that might have been a very good discussion in 2013 um when we nailed down what what C actually is um but using the the the occasion of of defining CDE uh to to suddenly deprecate n payloads in in one form or the other uh doesn't strike me as the right thing to do and um as you said it's not that hard to do it right and um um maybe adding some some more pseudo code I think one of the very valid criticisms of of 7049 and Letter 89 for9 is that the pseudo code doesn't address uh n payloads and we probably should add uh this sudo code and as I said it's probably around three lines or so of of code so it's it's not not that complicated uh but of course the Translating it into different programming environments is difficult but I'm I'm I'm not so so surprised by that so when I did the the earling uh support uh for for SEO the the initial one that we did in 2013 um erling doesn't have n at all and it also doesn't have infinity and a negative Infinity so SEO implementation for earling actually has to invent their own uh runtime representation of of this information and okay llang is is maybe a very friendly programming language in in this respect it's easy to put in support like this in in earling uh but it strikes me as something that that can be done if if people really want to have this in their application protocols um so I wouldn't say that U it's the the the fact that it's not defined how to get at n payload say in"
  },
  {
    "startTime": "00:22:01",
    "text": "in JavaScript or so um is is a uh something that uh needs to stop you from implementing sio support yeah um I mean I understand if it was two 2013 we might have made a different decision but I don't really think that you know it's been it's been this Dusty Corner ever since and and it's still going to be a Dusty messy Corner messy Corner we're not going to it's not it's never going to become a really Mainline thing that people are going to use it's just always going to be this Dusty corner and and I because it's the use cases are not that important and programming environments they're not supporting it that much and um probably never will um and uh um I I I really kind of I mean I'd like to see CDE not have any Dusty corners yeah I'm I'm very optimistic that we can Define CDE um in such a way that it's all very clear and and well defined um I cannot do anything against uh implementations having Dusty Corners uh but I think we can Define CD in such a way that that people if people want to support this they can do this in an interoperable way yeah so I think the main thing I'd like to add to the conversation is that uh our reason for um closing off this uh kind of debate within the DC board proposal was not that it's a Dusty Corner per se but that it uh is um it's semantically IL defined it you know there's no standard way of using n payloads uh my understanding is they're mostly used often internally in floating Point"
  },
  {
    "startTime": "00:24:03",
    "text": "package implementations they're not generally an interchange format of any kind um and so if we're specifically talking about determinism and of course dcore takes you know much more opinionated view on certain things than CDE has to so I'm not necessarily saying that CD has to take the same approach that DC War has taken but if we're talking about determinism um you know the I think uh one of our guiding principles in uh Bo is that things that have um the same semantics should have the same representation and because this has no semantics there's no way to represent it in uh in a unique way um and therefore you know we chose to close that off and um you know we certainly would have no objection if CDE decided to close it off um in a similar way or compatible way um we wouldn't mind pushing that down to the CTE level um on the other hand you know we're also fine with um keep keeping our pin St at the DC War level and uh letting uh letting CDE kind of leave that open if they wish um but again it's not about being a Dusty corner it's about it being a semantically um you know non-defined corner carsten if you're speaking we're not hearing you I'm I'm not speaking I think proof's point was was good but it doesn't take away from from the point I was making"
  },
  {
    "startTime": "00:26:00",
    "text": "about CD so what one thing we could do just just for for the fun of it would be to to Define an application profile in CDE that says uh hey here's an application profile that relieves you of of all those n payload headach and of course dcbs DC is the subset of that application profile so that the two are compatible uh with each other and the content of the application profile would be that uh only the one uh n uh for form of n that we all like is supported the the non- negative quiet zero uh n l yeah I I wouldn't be in favor of that um it just uh you know us folks here in in uh this the working group uh you know we're familiar with uh a lot of this stuff but the majority of the world is not and and I just think that already having preferred serialization and CDE and dcore uh and that serialization is confusing to people um uh it's just a lot more I think I mean I'm not that familiar with ad Jason world but it seems a lot more complicated than the Json world and it just so if you have to pick I me to get interoperability that's really solid if you have to pick a CDE and then pick a profile of CDE that sounds really uh contortionist and and not very friendly not very user friendly so I was not talking about profiling CDE I was talking about an application profile okay just the fact that you got to"
  },
  {
    "startTime": "00:28:00",
    "text": "distinguish between an application Prof profile and a CD profile it's I mean I'm not I'm not really even a fan of of profiles in um seore um I mean some places we need profiles but seems like you know having serialization things and profiles that's already seems too much to me too um so yeah I was not talking about about Profiles In general but about the specific meaning of application profile in in this context yeah but we we don't have to do that uh in the end of course every single application will have its own definition of what is valid data for interchange and uh we could call this application profile or we could not uh and the the generic encoder decoder will always have to have some platform considerations uh which might make it uh support certain parts of of CA and not support certain other parts of sio so this this is not not a totally surprising uh situation um Chris host yeah I guess I'm what I'm running up against is I don't know who the customer is so one of the criticisms that we had early on with you know when we presented to dispatch uh uh DC and um uh gordian envelope was oh well you know you really have to have a customer within ITF you know somebody who actually wants to do that function and uh we had ended up having a customer for DC boore which was this community um and"
  },
  {
    "startTime": "00:30:03",
    "text": "uh you know we're still you know we still don't for sure have a customer for um you know alision um uh structures so you know when I'm listening to this I'm going if I I don't hear anybody saying oh I need to exchange um uh the you know dat the floating Point down to the Nan level um if you know there was some weird AI uh thing out there that you know you you know was desperate for that level of of uh transfer detail than I would say we you know there was a customer but you know who's the customer here that is certainly one valid perspective um of course I'm more arguing from the perspective of the ecosystem so I'm not addressing specific customers I just know that that uh um people will want to use what they have in their their uh programs and in their data sources uh so uh taking out n payloads and say as soon as you have n payloads you can no longer can exchange them deterministically sounds much worse to me than simply defining how to do that I mean maybe maybe you can just read the text that is now in in city-1 one whether that's sufficient um for for that purpose but I think we have to make some some ecosystem uh decisions here and and since n payloads are for better worth uh part of SE uh I I think we should put in that that uh specification support in the knowledge that that uh not everybody will implement this um to to to shape this a bit up"
  },
  {
    "startTime": "00:32:03",
    "text": "with the points that have been made um how is this um distinct from say um indefinite indefinite length encoding that is also not part of CDE because it kind of it's just too it would be too many choices well the the applications are not supposed to make a difference on whether something is sent indefinite or indefinite length encoding there isn't supposed to be a bit of application data in in that uh decision so the the uh two choices are symetrically equivalent and and CDE takes the position that we should do all deterministic encoding with definite length as you know from asn1 that's not a forgun conclusion but uh in the end asn1 also a arrived there through the The Detour of first inventing canonical encoding rules which was the other way around they they finally decided they wanted to have the second former the distinguished encoding wordss and that that is essentially the definite length version of asn1 so I think it's it's a very different um issue nor I mean I think the for me the difference is that there's clear use cases for indefinite length and coding and very obvious what those are and and where there's not clear use cases for for n payloads and another thing is indefinite LinkedIn coding can be uh easily implemented on you know any in any program envir programming environment and and payloads can't so so if you're trying to pick the weird the weirder thing to eliminate Nan p is definitely the weirder thing yeah but again this is an argument"
  },
  {
    "startTime": "00:34:02",
    "text": "for 2013 and I'm currently trying to discuss CDE yeah me too I think this um I don't think we'll make much progress on this here today my suggestion is that um Casten if you um some someone mentioned earlier I'd have to look it up in the minutes was that there are use cases around already um uh castom could you try to find them so that we we have the points around because if um if those turn out to be substantial enough um then we might um get around get around some of this discussion Al together if if if we have any that's not to say that we necessarily need any but that is to say that the discussion is probably easier if we have them at hand so what one recommendation from me would be to read section 9.7 of I 75429 um the that's the the API they now have put into 754 to to access um then information now of course that that is an API that hasn't been picked up uh by by C or C C++ yet um I would expect that they have made this recommendation in the uh uh with the assumption that um it will be um but this this uh the examples there actually hint at a use case which are essentially"
  },
  {
    "startTime": "00:36:01",
    "text": "um decorating a nan with information of what exactly went wrong here so what was that uh um division by zero or what was this uh some some other domain error in in a function and so on um this is really what what uh n payloads um seem to be in intended to be used by the people who wrote that section 9.7 of I 754 but I I can extract that and and write a message I think that will be helpful thank you shall we move on to dcore uh wolf is that you're raising the hand for the queue for this toping or already getting started with dcore uh actually I'd like to let Carston introduce the the dcore section uh as we're working on it together quite closely now okay okay um yeah so uh we have had two new revisions of the the uh dcore uh draft um and uh this is now based on CDE so it's a now really a quite simple uh document and I think that that was really an important objective uh to achieve here to to expose the the Simplicity of of what is now uh there so that that will really Aid implementations who who do not want to cope with the the more General uh issues and I have marked uh the the current draft as replacing the the draft I wrote in an attempt to to get this uh uh"
  },
  {
    "startTime": "00:38:03",
    "text": "separation between CDE and and um DC B so that's no longer needed so I think the the most important thing apart from maybe further improving the editorial Clarity of the document um will be to decide what do we actually want to do where we is both the the authors and the working group and on this slide I I set up uh six uh boxes we could check off um I wouldn't be happy with uh uh the choice to just give up on this and and stop work on it because it it does provide something that that may be useful to an application protocol uh developer so there there are five boxes that I think are in the domain of what uh um uh we could choose as a working group so we could uh try to complete this as a working group document and we have the three choices standards track experimental and informational or uh we could we being the working group uh could uh say okay uh we are not get going to get consensus on this but we don't mind uh with the the document going to the in independent submissions Editor to become an independent streame RFC and in that case uh we still have the choice between experimental and and uh informational um the the CH third choice of course being standard trke doesn't work that way so there are different levels of of sending away this document to the isse uh could be one of uh mostly disapproval uh no we don't want to"
  },
  {
    "startTime": "00:40:01",
    "text": "pollute the the CBO ecosystem with this or it could be uh one of of mostly approval and and uh even active support people doing reviews of of the document of course the the independent stream editor Elliot leer uh will solicit people to provide reviews so those could come from the working group members as well um so I'm I'm not trying to to modulate this this uh uh these two checkboxes here down there uh with respect to the amount of support from the working group but it would be less support than than saying okay this is actually something we we want to do as a working group consensus U uh document and if we want to do it as a work group consensus document then we have the full choice of Standards track experimental and informational so standard stke would mean this is the way to do this um experimental means um we have a solid complete specification uh but we want to conduct an experiment based on on this it's not something that um is a forgot conclusion and at the end of the experiment we will decide what what the next steps for this uh will be and we have informational uh in the sense of uh folks we have written up a way how to do this um and we think it is good information to have written up this uh but it's not necessarily A normative uh specification even if the document in itself can use normative language um this doesn't this wouldn't imply that we have uh found the one way to do this that we would like to to"
  },
  {
    "startTime": "00:42:01",
    "text": "standardize and of course the same thing happens for for an independent submission so experimental would mean uh we we have to try this out and and see how well it works and and based on that we will make future discussions and informational means uh we have written this up um because it's a useful specification and and typically vendor specifications that become rfcs take the isse informational uh road because there is not nothing experimental about the vendor specification but um it's also not something that that is under change control of of the iatf so this is the choice we have to make we don't have to make this today uh but I think we have to to keep this in mind and uh make up our minds of what we collectively as a working group uh want want to get out of this document um wolf yeah um you'll have to forgive my ignorance about how exactly things are done in the ietf uh so if I say anything that you know isn't according to procedure please um educate me um but it seems to me that the one of the things that hasn't been discussed is the uh so far is that seore thecore is now based on CDE and it seems to me that the same decisions about the track that CDE itself is on have not been um discussed or decided and uh because DC Bo is now based on CDE um it seems to me that's a prior uh decision that needs to be made um if CDE is going to be on the standards track to being an RFC um then I'd say you know uh we would definitely prefer that dcore be on the same track behind CDE uh as CDE is now dependency um but if CDE takes a"
  },
  {
    "startTime": "00:44:01",
    "text": "different course then dcore I would say would also likely take a different course so um I would like to understand better what the intention for CDE is uh and I think that would probably help me at least if not the rest of the group decide the track that DC Bo should be on um I'd I'd have to look it up but I think that CDE is in the is on the standards track because it is more or less replacing the deterministic encoding considerations that are in the original C RFC um as for for what the interdependencies are um the thing that we can that we can have but we are trying to avoid is a down reference that means that something is a standard Strat document but referencing an informative document normatively uh so if um if the if if CDE were an informative document then the then having DC on the standards track would raise questions not in mountable questions but questions that need discussing and are best avoided um in the other direction um things are um things are more open so um giving given that DC is building on on CDE it just can't have a say higher um normative status than DC um right that's that's definitely understood yeah so my my take was that uh we already discussed this and said we for CDE and we said we we want to uh take this forward as a standard strike specification as you say um because it clarifies something that that is uh uh defined in in uh RFC 8949 and also to uh make some additional decisions that that"
  },
  {
    "startTime": "00:46:04",
    "text": "to be useful as a uh normative reference in in other documents so I would be very surprised if we decided it it's it doesn't have all the necessary qualities for for going uh standard stck um and the the one of the reasons why this is true is it's supposed to be a common profile it's not not um one out of many ways of doing things of course you can still decide to deviate from it that's not uh disallowed but uh if you're writing a generic uh encoder decoder that supposed to support uh determinism then then CDE is is the way to to make your decisions in this uh process now DC is definitely different in that it uh does restrict the the set of uh data items that that are supported and other uh applications are more likely to have different requirements here than than uh DC B so it's not um by itself the way to do things but it it's uh a well thought out way and one that we do uh recommend to people for people to consider if they uh want to further simplify the the data model that uh C and dce CDE um offer to an an application so that that's why I'm I'm not particularly sure which of these five cases we should take but I think it it's really useful input inut put to know that that uh at least some people want to go standard strike with it that"
  },
  {
    "startTime": "00:48:01",
    "text": "that's useful information um and uh I would be interested to to hear from from people who maybe don't want to do that ARA thank you um I just wanted to point out that both the November and the January drafts of CDE do not say proposed standard intented status they say best current practice true that is not standards track it is related but it is different and so and actually best current practice rather makes sense to me for CD um but um I just wanted to point out that's not on the not on it hasn't been discussed here and I and I think that um either CDE should change the proposed standard which actually I think would be less appropriate than best current practice or we should um expand this discussion a little yeah good point I missed that um with Chad off there is one point uh one question that I wanted to raise in this disc in this topic of where do we go um Christopher I think you mentioned that there is a consumer or use case for um for DC war and Gordan or for at least DC within the ITF um their path um would might narrow what we have to do here so if it's if if they need a normative reference that would for example make informative and op Choice here or or or wall forast maybe you know that"
  },
  {
    "startTime": "00:50:02",
    "text": "who that is precisely to I don't want to jump the queue um but to directly answer your question um you know there has been expressed interest in a structured data format that supports elision um there are some existing uh privacy and human rights requirements rfc's that suggest that this is good idea but so far nobody has done it um so we are proposing you know uh not necessarily uh gordian envelope although it is an example but we're basically saying hey we need some allision friendly uh formats uh because that is the you know a requirement of the future for privacy and uh and human rights um you know again as per to uh established rfc's that say you know these are things we ought to be doing on our standards but apparent we are not so that's kind of the the the challenge we have is that nobody so far has said oh we're going to put allision capable um uh in our ITF standards um but we think they should so so that means there is no current document yet that has con your CL well careful um there is some specific work over in the the KUSI uh working group that that also will apply to to KI uh that is addressing some of the use cases that a more General illusion friendly uh format uh could do uh so I think we we would have to examine uh that work which by the way also can make use of additional cryptography to to facilitate um this so that that's really"
  },
  {
    "startTime": "00:52:01",
    "text": "one interesting question that that this whole field of of fion friendly of privacy friendly um statements science statements uh needs to to make uh do we want to get by with existing crypto Primitives or and and somehow limit what what we can do or do we want to fully explore uh this set of Primitives possibly getting additional cryptographic issues that that we currently don't have have so that's that's all not not an easy area of work and I'm really looking forward uh to to having this discussion because right now we have some some very focused very targeted things over in Jose that may not necessarily fill the the entire set of use cases we may be interested in but apart from that yeah it um if if something go standard strike in in this area and wants to make use of deterministic uh encoding then having uh a standard strike document would be useful I should probably also add that the the whole uh crypto support in the iatf is based on irf uh informational docum so we we are contradicting our own principles here a little bit but but that's maybe a discussion on its own wolf yeah I mean uh my understanding that uh uh that CDE was not on the standards track at this point seems to be correct um uh but uh obviously it sounds like Carston feels like maybe it ought to be there and again I'm not sure what the pre procedures are but um you know given you know we do depend on CDE"
  },
  {
    "startTime": "00:54:00",
    "text": "and we do think that DC Bo has an audience and a future I'd say you know uh in my less informed opinion um that if CDE is to be on the standards track that we at blockchain comment would prefer that DC also be on the standards track um and uh um I'm off top of my head I don't know what the exact next step of that would be but adoption by the WG as you know uh as a work group document um would be one step um at this point we have um you know three co-authors on the DC board paper all of which are present and uh you know we have both rough consensus and running code so um you know so I'd like that to be considered uh in Du course yeah maybe it's worth clarifying that uh uh we do allow normative references to beps and Senate strike documents Christopher yeah I have two points also trying to respect time um the the first point is that I feel like uh CDE um you know directly implies profiles and having an example of a profile uh is a good one um uh you know they um uh you know I but I don't quite understand the difference between experimental and informative uh you know uh TLS was informative first um when I was a chair um and then went to standard it was never experimental um so experimental always says to me oh well this is you know good for a year two years but you know don't it's going to you know expect that it's going to change where is you know in informational is uh you know it's it's"
  },
  {
    "startTime": "00:56:00",
    "text": "um instructive to the community um but you know will it be 20 years or two years is indefinite um so I didn't know you know uh if you know if that has changed in recent years that experimental has some higher level you know right now it's you've got it on this list between standard and informative um so that was my uh first question the second thing was just more clarity so the other thing that that envelope which is built on top of SE DC board does is support uh graph structures and other structures and that's you know one of my hopes is that the the you know the seore community basically says yeah it is time for us to be able to support some of these more um uh sophisticated structures in a standard interoperable way such as structured data uh and graph data um uh because that is one of the things that's limiting we when we talk to other developers about uh cabore they're going oh well but it doesn't work with my you know uh um you know rdf or it doesn't work with my graph database or it doesn't work with you know my structure data um you know it's just this you know it's just this list um so uh um there is sort of an intersection with the future of of seore is is cabore is the cabore group going to uh begin to allow for some standard structures um uh you know for you know these important data formats that's it sorry Lawrence yeah I just want to speak in favor of standard stack for both C DDE and DC boore uh DC boore seems well enough Define reasonable use"
  },
  {
    "startTime": "00:58:00",
    "text": "cases not too difficult and I just think it would be nice to have that in the in the you know on the standards track for all of the the use cases in seore and um the extra review and backing that it'll get as a standard I think is good um me again with uh without my Chad um to points on on the standards track um a um something that I've seen with um in in core as well putting something in the standards track will mean also mean that um if people have concerns about the applicabilities of this um those might be you might need to put those out more prominently in the document because um if if this is standards track them and people have concerns these need to be addressed um the other is on the topic of um C want to have more sophisticated data structures uh especially graphs um yes I want those but if that means that I'll have to buy into the numeric reduction of DC of D eore I'll likely not use them so um let's let's look at that's I would hope that those topics can be a bit independent yeah that's my two comment here and C you have something else and um we approaching the top of the hour let's stretch it a bit um but I see that people are already let me just quickly point out that I have experimental on this slide only for the single reason that the DC board draft currently says it's experimental uh which is not not the decision I I have made so I I think we can strike this from the list because it's not really what we think this is and U I think we we can um generally think about the BCPS but I think BCP doesn't make uh sense for for DC B either because it's not the best current practice it's one current practice for a"
  },
  {
    "startTime": "01:00:02",
    "text": "certain subset of applications so BCP would be confusing so this reduces the number of choices from five to three um any more comments before I I'll conclude here so my summary from this is that that there is kind of good support here for doing this in the working group I haven't heard anyone speak out against doing it in the working group um and the line of discussion is more between BCP or STD um but not putting this into experimental and informative so um I think those are kind of BCP and and standards are the the ones that it will be and we'll have to figure out the details there um yeah um we we'll see that when we when we're progressing in the working group but I think work it sounds like something that we could have a working group adoption called it some point um with the intention of going in somewhere somewhere SD BCB is okay we are one minute over just a quick uh comment there are two more slides on a completely different subject so if people want to look at those slides uh I plan to have a draft available uh by the the next uh interim uh so we can talk about this Yang sio thing and I think we have to have the discussion about Guardian envelope and I I like the the statement you made Christian that this maybe needs to be modularized uh a little bit so so you don't have to buy into the whole thing in order to to use certain parts like like the graph um support um but I think that that that is a really big uh subject that that"
  },
  {
    "startTime": "01:02:01",
    "text": "needs its own uh considerations uh Christopher sorry that we running out of time for gordian is there some some short point that you would like to make before we are getting kicked out of the room we don't hear you sorry um yes if we do this separately from this working group then we have to go through the whole um uh you know process of problem statements and areas of work and all that kind of stuff so uh uh you know we I'm quite open to you know some subset of what gordian envelope does uh you know uh and you know see if if that fits within this working group um so but if there is interest if there are other people that are going yes uh you know structure data and hatched uh data allision and things of that nature is important enough to be a separate working group then you know I'll be glad to participate in it but it like I said part of it just feels like it belongs here so that's it okay thank you I can definitely um share the I do definitely share this kind might fit fit here um but I think we'll see that when when we continue this discussion over the next interims okay thanks everyone um that was a good 63 minutes um see you around in two weeks and please enter any materials that you have for discussion then um in the next uh in the next meetings notepad thanks and have a nice evening or rest of the morning to you over in America bye thank you everyone thanks"
  },
  {
    "startTime": "01:04:03",
    "text": "byebye thanks everybody"
  }
]
