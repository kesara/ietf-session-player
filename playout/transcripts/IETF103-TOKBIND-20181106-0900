[
  {
    "startTime": "00:00:05",
    "text": "for today do we have a bowline might help out by taking notes Robin thank you very much spared me the trouble of asking you all right yeah you get brownie points for that that\u0027s very good all right welcome to toe combining it\u0027s 9 a.m. in the morning here in Bangkok at least that\u0027s what my my coke says so it must be true um so let\u0027s hear you alright since it\u0027s the first session of the morning let\u0027s just take another take an extra couple of seconds to look at the note well and remember what it says your cap your subject I see are the ITF IB origin while you\u0027re participating in this working group alright this our agenda and thank you unless anybody has something to add or remove from the agenda so yes we get started so we do have one person who is actually needs to be in two places at once here so do so I was gonna actually offer NIC to go first if you want to do that or do you want to I mean it sort of even do that alright and if the working group is okay with letting Nick talk about zero RTT and say that\u0027s one point three I guess before Brian and other items because he actually has to be an HTTP as well or sorry in and in them also patreon yeah alright do you want to start there at with zero TT oh let\u0027s do that then sure we got them all queued up here slide four and around so for the tls 1.3 draft I\u0027ve updated it to reference the final RFC\u0027s or I can adjust it yeah so I\u0027ve updated this draft to reference the final RFC\u0027s otherwise there\u0027s basically no text changes to it I think it\u0027s ready for a working group last call unless anybody has something to add we\u0027re just gonna start - working group house call that two-week process well later today I guess not hearing anybody object to that "
  },
  {
    "startTime": "00:03:05",
    "text": "so whoa drop a note to the list all right [Music] so for 0tt with token binding as you may know there was previously a working group draft on this that has since expired the chairs have asked me to just go over the issues with doing token bindings area RTT together and some of the options for how that might be done so next slide I\u0027m going to talk about why we might care about this combination what are some of the things that makes it interesting I\u0027ll talk about some of the ways that some of the assumptions that we might make of an attacker trying to attack this combination versus just plain token binding also I\u0027ll talk about the options for what to allow with combinations of zrt and token binding and this also has a lot to do of which TLS exporter to use when and then I\u0027ll talk about the difference in the security properties between those two exporters and finally cover some implementation considerations to consider when choosing one of these pads so next slide so basically the problem with doing as your tea and token mining is there might be some clients that want to do both of these on the same connection and doing token binding in early data require is using the early exporter master secret instead of the exporter master secret for deriving the sine value and that gets into some interesting issues so next slide when evaluating this the making some assumptions about how this is set up I\u0027m assuming that token binding keys are in hardware that they\u0027re not extractable I\u0027m assuming that when I say that an attacker has access to the key this is they have access to an Oracle to sign an arbitrary operations they don\u0027t actually have the bytes for the private key I\u0027m assuming that an attacker is not going to substitute a hardware backed key store with a software back to key store that the attacker controls there are some interesting attacks in this space by forcing the client to reallocate and rebind to a new key but that is orthogonal to the discussion around zero RTT those attacks could still be done with abnormal token binding so I\u0027m going to sort of exclude those for this talk and I\u0027m also going to assume that if an attacker has access to the clients s and session cache they also have access to the token binding Oracle so this is basically sort of all this is assuming that our attacker is sort of a client malware type attacker the reason for sort of focusing on such a powerful attacker here is that if the attacker doesn\u0027t have access to the clients s session cash they don\u0027t have access to "
  },
  {
    "startTime": "00:06:07",
    "text": "any sort of keys related to the early exporter secret and that basically becomes looking to add zero RTT in TLS 1.3 without them running yes Ben yeah Ben key you need the session cache to do RTT to do zero RTT at all oh yeah yep that\u0027s just saying that the the attacker in this case has access to that so next slide so the first thing to consider for as you are exit iam token binding options is do we even allow it at all right now after HF took by until s1 3 says that they are not allowed together which is heading to work in the classic all the way that the expired 0rt draft gets around this is it adds a new TLS extension that that sort of overrides that and allows that but one possible option that I think is reasonable is just decide you don\u0027t do 0tt and tow combining together if we decide we do allow zero our GT and token binding on the same connection the next question to ask is can a token binding message be sent in early data so you could say no you don\u0027t allow it to open minded message in early data you do allow some application data to be sent zero RTT but you can only send a token binding message once the handshake has complete now that this whether this is useful depends on the application since we\u0027ve only been looking at an HTTP mapping in this working group so far this probably isn\u0027t that useful but other applications say where the server is speaking first this might be useful I don\u0027t know if we do allow the token binding message in early data then we start looking at exporters because this is when the early exporter master secret needs to be used at least for the token binding and early data so next slide I think there are three options for which exporter to use when assuming that we are allowing the use of the early exporter master secret the first option is to always use the early exporter if zero RTT and token binding have been negotiated this is what I described in the previous draft another option is to have the client switch to using exporter master secret as soon as possible this is sort of very vague if there isn\u0027t some sort of application level signal or other signal for the server to say to the client you must use the exporter master secret then this is just the same case as above because an attacker can just send the keep sending early exporter master secret and use that for the lifetime of the connection and then another option is you use early "
  },
  {
    "startTime": "00:09:09",
    "text": "exporter master secret when you\u0027re in early data use exporter master secret for everything post handshake this is unknowable because there\u0027s no way to guarantee that the early data as the client is writing it ends up in early data and send them ends up post and shake so it\u0027s not really an option on the table but there for completeness so next slide so the when looking at sort of the security differences between these two exporters what it basically comes down to is what point in time was the token binding key used to sign with when the expert or master secret is used this is what is done in token binding as specified in RFC 84 seventy one two three the the token by new key is used right when the TLS handshake is finished once the finished messages are sent on the other hand when using when signing over the early expert or master secret this is just proving that the whoever sent the Ito combining message had access to the token binding key at some point after the new session ticket for establishing that connection was used so you send the in the first flight like one hour TJ handshake server sends the new session ticket then at some future time the client does the resumption you only know that that signature was valid over or you only know the signature was signed at some point after that new session ticket was received but you don\u0027t know anything about sort of the point in time of that connection and there when the 0tt case if this signature is sent in early data there\u0027s also the chance that the attacker didn\u0027t have access to the key at all but it just took the client hello and the early data and replayed it verbatim so I\u0027ll talk about that a little bit later but sort of considering the client malware attacker for these two scenarios for the first scenario an attacker can get access to the key at the beginning of the handshake and then even if it loses access to the key as long as that connection is still alive it can continue to use token mining messages on it and this connection doesn\u0027t need to be from the machine where the keys are because the attacker can proxy the Oracle to wherever the attacker is controlling it in the second case basically what is happening is again the attacker can be proxying the key Oracle to an attacker controlled machine but in this case the attacker can continue to use this signature it can make a bunch of connections to the server get a bunch of new session tickets precompute the early exporter master secret do all the signings and then at future time when it "
  },
  {
    "startTime": "00:12:10",
    "text": "doesn\u0027t have access to the token binding key it is creating those connections and sending a token binding messages with that signature so this basically means limits the attack window to the lifetime of the new session ticket which RFC 84 46 says it must not be greater than 7 days unless this ends up being like RFC 69 19 which is a must but we know you won\u0027t so getting to the topic of replay I\u0027m sort of glossing over this here in that if if you were to do the same setup but without token binding and some some data and zero RTT you still have the same replay concerns that you have in TLS 1.3 toh combining isn\u0027t really adding any extra protection to prevent that replay so it\u0027s a it is an issue it token binding doesn\u0027t really make it any better or worse and there there\u0027s also an edge case where an attacker has access to client secrets for assumption and can replay the client hello and token binding message with new application data but if the client is able to do that it or if the attacker is able to do that then it can basically just perform the attack where it pre computes signature values so that\u0027s sort of about it for the security differences and the last slide is talking about some limitation considerations if if you take an approach where you switch exporters partway through there needs to be some sort of signal in the token binding struck which exporter was used so that you know which to use for doing the verification also it might be possible to define something where you don\u0027t need a new a TLS extension but for simplicity it\u0027s just easiest to define a new TLS implementation all right TLS extension sorry so those are all of the slides that I have covering this like yes feel free to line up is to get some context I think what we should be trying to do is to figure out what what the working group wants to do here you know do we want to take on solving specking some of this stuff do we want to drop it on the floor what can you go back to the previous slide Benkei doc yeah so like I mean you have the these two cases about the your access to the token binding key afternoon session ticket or two full replay and the second case the full replay is sort of uninteresting in some sense because you know the protections against that are sort of the same sort of protections you would need in general "
  },
  {
    "startTime": "00:15:11",
    "text": "for zero ITT yes but the first case is more worrisome because it\u0027s sort of turning a single compromised access to these terminal binding keys into a reusable for you know air quotes indefinitely you know up to the seven days of the session ticket validity and that sort of seems antithetical to the entire goal of Tobin binding so sir yeah and the TLS I mean it\u0027s sort of philosophically her to get excited about wanting to do that yes so the way I sort of think about this is we\u0027re already looking at an attacker that is client malware resident on the machine so we don\u0027t know what sort of bad things it\u0027s doing in the first case though once that malware has been identified and removed then basically the threat is over in the second case it\u0027s once it\u0027s been removed then seven days later the threat is over so part of the consideration if someone wanted to do this might be well how long has this starting going on and how long can we live with how long can we take to mitigate it do we want it basically immediate once the malware is removed or can you live with this longer duration like Joan\u0027s Microsoft trying to wrap my head around the situation for zero RTT with token binding I\u0027m going to ask a question about zero RTT without token value given you can capture and replay an early data packet and have it succeed what are the mitigations that use of zero RT t have to take in the first place I\u0027ve heard told that for instance you must make sure that the data in the initial packet resents represents an idempotent operation such that if it\u0027s replayed it has no effect which is an interesting layering violation to implement it may be possible in some application contexts your thoughts yeah so I I don\u0027t remember all of the text in the tailless 1.3 RFC about it but but having an idempotent or that similar requests is one of the things there are I think some other potential mitigations that servers could use but they\u0027re not like completely foolproof so one example is the server could make tickets be single-use and keep track this ticket has already been used for as your assumption and won\u0027t let another one happen in practice for something with a large server fleet that\u0027s "
  },
  {
    "startTime": "00:18:11",
    "text": "basically going to be impossible to coordinate looks like Ben has some more to say on that you know Ben Caidic so I mean I did pull up the text from varsity ad 40:46 about Zarate tu replay attacks and yes we say the applications have to be specifically engineered to be safe on the replay which minimally means idempotent but in many cases it may require stronger conditions even finish the constant time responses for some sorts of things and so Mike I guess there is at least one application that has been specified after zero after Tillis 1/3 is out that does make use of zero TT data and allows all of their protocol messages to go into our takea which is Acme and the way they do that is by having every acne requests accompanied by a single-use nonce and the server has to keep staying on that and so it really is idempotent in the sense of it\u0027s only gonna be applied once because this nonce and so that is safe against replay in this regard at the cost of the normal TLS guarantee where your data is delivered exactly once in order in a stream is violated all right so I guess my question is what should we do do you have an opinion here as preview as a previous Walter so my opinion right now is to do nothing which means that we don\u0027t allow token binding again 0rg on the same connection I think that if there is working group interest in this at a later point in time that the previous draft might be a good starting place and then can work from there yeah that\u0027s my suggestion anybody have a other opinion anybody who wants to stand up another draft right now yeah I see shaking up heads and dick you\u0027re sitting on a draft right now all right I I think that\u0027s I think it\u0027s a good suggestion obviously this sort of the it\u0027s a suggestion that the working you would do if sort of provide if we\u0027re not presented with any other option right or any other alternative somebody wants to present a draft that does zero RTT it so "
  },
  {
    "startTime": "00:21:12",
    "text": "that\u0027s always a possibility at least for as long as the working group exists so I think at this point we\u0027ll have to leave it there at at this point we don\u0027t from like a procedural standpoint we don\u0027t I we never had zero RTG specifically on our mention in our charter as far as I as far as I can remember so we\u0027re not sort of not failing to - Dalton ATI\u0027s and crossing any arse from sort of not specifically not covering this so yes we can certainly just do nothing all right so I guess we\u0027ll leave it there do you want to say anything about this no I guess I guess the other question is does anybody actually have currently have a use case for token binding with zero RTT or planning on turning zero RTT on for everything which would then stop them from doing token binding was that a question directed to the groomer to me it was well you\u0027re in the room of an answer feel free I think Google is going to be turning on 0tt on many properties I but I not turning on token bindings so I don\u0027t see it as a I don\u0027t see the lack of this as a blocker for that I think those are separate decisions okay [Music] maybe that oh go ahead make chance um I assume you\u0027ll take this tentative decision to the list well yes but you know note the fact that it\u0027s not actually a decision right no so much as a sort of failure to have any other options on the table right because we have a we have an expired draft that that you know we can\u0027t like force people to have an interest in right I understand I think for but clarity clarity and the potential ecosystem right it would be good if the chairs would make all right an affirmative statement saying we will no longer working group showed no interest in pursuing this at work all right I think that\u0027s a that\u0027s a fair point it helps as you say with a little bit of clarity all right and that gets us to Brian for maybe the final installment of of CT backgrounds "
  },
  {
    "startTime": "00:24:13",
    "text": "[Music] yeah so this should be pretty short HTTP took combining with TLS reverse proxies maybe the final installment welcome to Bangkok don\u0027t already been here so a little bit of quick context I like to I can use it inappropriately do I might on my head it\u0027s a little bit of quick context I try to just give some background on Josh so we don\u0027t jump right into things people in America maybe aren\u0027t familiar with it can can follow along at home this draft is designed to support cases of token binding where there\u0027s some kind of TLS terminating reverse proxy system in place in front of the actual application and this is really common deployment architecture you see it with you know I\u0027m premise systems where you have an Apache and nginx terminating or an f5 you see it in cloud deployments where you have Amazon\u0027s application layer load balancer cloud player those sorts of things CDN type front ends where the application is sitting behind in some some respect the actual system that\u0027s terminating TLS and doing the TLS and I wanted to provide a mechanism standardized mechanism which via passing the token binding message in or the parsed validated token binding message from that TLS termination layer back to the h2 the application layer via some specially designed headers and what this ultimately does is allow from the clients perspective that those two components to function as a single logical unit performing HTTP to combining in a way that the client doesn\u0027t know the difference and they can do together sort of work together to perform the operation of binding tokens and verify verifying bound tokens in a way that\u0027s consistent with what push HTS token binding provides and do so in a way that the header names are standardized and the value of such headers are standardized so hopefully you could have turnkey kind of integrations between disparate systems any front-end TLS terminating reverse proxy that implements this could be turned on to do that past the same headers back in a known name format and back in applications would then you could turn it on and they would know without any additional configuration or anything what\u0027s headers to look for and how to parse them and what the semantic meaning of it is and again the whole idea here is to facilitate this reverse proxy and the backend server eeen server functioning together as though they are single logical server-side deployment of HTS token binding that\u0027s the idea basically it really comes down to a few headers and and how you encode the token binding message in them and what what the rules are about validating that and stripping headers and sanitizing and passing on information to the backend I was gonna ask you to advance the slide but I can do it myself so some notable happening since the last time we were all together in Montreal I "
  },
  {
    "startTime": "00:27:15",
    "text": "published draft six of this and really just switched around some sections having based on some feedback from Martin he wanted to find some and I couldn\u0027t find it because it was buried so I brought a throughout this particular section up to its own top level section in the internet meaning time we had a major browser decide to drop support for tow combining which isn\u0027t directly relevant to all this but it\u0027s kind of a bummer in terms of at least to me pushing this work and hoping to see it widely adopted that certainly undermines I think some of the incentives of getting this stuff out there and working and deployed but press on so shortly after that we had a belated working group last call thanks for owning up to that way it being belated thank you for doing it and only one comment was received during the the last call period and basically that was a from a gentleman that we heard from a few times before and it\u0027s always the same issue regarding that there\u0027s not enough text in the draft describing how this doesn\u0027t prevent against client collusion attacks as a result there is some text in one of the core token mining documents and the reaction from the working group was basically pushing back and saying there\u0027s already enough coverage of it it\u0027s not it\u0027s not really something we\u0027re trying to address or talk about here you\u0027ve gotten more or less more airtime on it than didn\u0027t probably need to and nothing is needs to be done in this draft so basically the the consensus from the working group was that the one comment received there was there was no action to be taken on it the only action then that was taken similar to what Nick said as I published a draft 7 and just updated the references to the the now RFC versions of the three quarto combining specs as well as a reference to TLS 1 3 the RFC version of that and so that\u0027s all there really is on it so it\u0027s supposed to be a joke but trying to find a document Shepard now I think we\u0027re at the point where we\u0027re it\u0027s ready to move up I don\u0027t want to do it but I don\u0027t see any reason not to proceed at this point and move into the SG and with that looking ahead to one a forum Prague hopefully this will be submitted to the iesg for publication I\u0027m not going to be in Prague anyway that\u0027s worth and hopefully there\u0027s nothing to discuss at that yeah that should have been easy I think it was right I think that\u0027s it we\u0027re gonna do we\u0027re gonna share this document and I heard John volunteer so and yeah so I think we\u0027ll definitely be done by Prague all right and you know getting into thank you like that\u0027s it if there are no questions I think that\u0027s sort of it for more or less for wood woods we\u0027re finishing up TLS 1.3 and deciding not to "
  },
  {
    "startTime": "00:30:17",
    "text": "take on zero RTT I think that\u0027s sort of it as well well yes so I I think this is sort of heads up that unless something dramatic happened I don\u0027t think we need to meet in Prague and our dick is feeling lonely question for Brian dick heart speaking are there any implementations of the reverse proxy there\u0027s there\u0027s one fully compliant implementation for Apache that I\u0027m aware of I\u0027ve heard rumors that maybe there\u0027s an engine X bug and that kind of sorta does it I\u0027m not sure how much has been updated to reflect this and at previous meetings there\u0027s been statements to the effect of well like Facebook is doing this internally and some things like that but I don\u0027t it I don\u0027t have any verification of that so right now the the implementations are open-source modules are plugins for for popular web server type type things all right that puts us at open mic and while you think about open issues and other other things to talk about let\u0027s just repeat this that I I think probably we won\u0027t need to meet in Prague and I think at that point we should be considering closing down the working group does our ad have any anything you wanna or just I I don\u0027t I don\u0027t see anything coming down the pipeline we you know there might be related work in the future but that doesn\u0027t necessarily mean that the working group needs to be kept around so I think with that and you know if there\u0027s no other issues I think they\u0027re working group for your hard work we actually finished alright yeah alright thank you and you get most of the meeting time back are you [Music] [Music] I brought it you can\u0027t have everything "
  },
  {
    "startTime": "00:33:31",
    "text": "it\u0027s a sad world we become your fashion [Music] thank you thank you there there should be at least a blue sheet thank you so should we Tony yes Tony says yes is he\u0027s making nodding motions did sneak out already and he spoke out I guess [Music] [Music] you "
  }
]