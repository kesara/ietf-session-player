[
  {
    "startTime": "00:00:06",
    "text": "hi John hey everyone okay hello does your presence mean you've actually made it or might you uh might you fall off at some point no no I'm good uh I can take notes that'd be great you'll see I've opened the Hedge dock already and just put a quick um quick header up with the agenda excellent I guess we'll need to wait a few minutes for folks to join yeah I hope that uh I don't think there's anything special today but um I'm not entirely sure everyone has seen the update to the meeting invite I think it seemed about the same as the last what was change because it seemed about the same I said it again okay all right there we go um did what changed because it seemed about the same to me um what the time um the start time that changed like okay maybe it's because we're on daylight savings time here or something"
  },
  {
    "startTime": "00:02:01",
    "text": "um eight o'clock was when it normally I don't maybe I can't remember but no you're right Ray so what happened was um it was always eight o'clock and then after 116 we took a vote and the initial vote won and took it back to six A.M and after that and it was all set up people suddenly realized hell that's kind of early we'd rather put it back to 8AM and so we put it back so the the net change is that it's the same as it always was in the middle Okay so all right that helps me because I studied that and said okay well it's changed but I don't see where I'm glad that we changed uh we changed from the 6 pm thank you so much I think this is more effective for sure thank you so I was rather hoping um although if we can get started anyway it's three pass now I was kind of hoping that we'd have Roy and Cedric um because they are the most vocal and and the most Keen to discuss registration policies this week and they're currently not here but we can um we can make other progress um um so the agenda for today the very quick recap and close out of last week um we discussed and I think kind of agreed the hackathon topic for 117 but I see there's been some discussion on the mailing list so it'd be good to have a quick chat about that and then the plan was to move on to registration policies um which I'm so happy to do uh even with or without those other folks does anyone"
  },
  {
    "startTime": "00:04:01",
    "text": "else have any aob or emerging issues that we'd like to do some agenda hacking on or are we good to go yeah um one note on the on the hackathon yeah I have um so last time I asked who is interested to participate at the hackathon and do some preparation work and I sent out an email to those who expressed interest so if you like Eduardo um and Dick and Ray but if there are others uh uh yeah happy to include them in in the email but I just don't want to spam everyone who is not interested in each other this is uh dick Brooks so John and I met last Thursday and yeah he he did a demo of what they've done on the hackathon the previous hackathon uh and he has some really good materials in there uh I'm convinced that Rea can easily Implement what what John showed uh from a consumer standpoint where we would query a transparency service so I think we're in a pretty good shape for actually contributing to that thanks yeah yeah I I re-watched the the chance presentation because uh the last IDF meeting it was terribly early for me but um yeah I think we are we have a very good foundation but uh there's still a chance to do a little bit more interrupt testing this kid received stuff has evolved uh if we'll now look at the sort of a full event scenario I think that um also requires a little bit of work so I think there's uh room for everyone to contribute yeah one one potential use case is actually in line with something that's actually happening and for real"
  },
  {
    "startTime": "00:06:00",
    "text": "um Ian newberger from United States uh white house uh cyber security office uh has suggested uh that in using an analogy a restaurant cleanliness score analogy as a means to communicate trustworthiness for software and so that was this that that's a use case that we could easily demonstrate where a consumer could query for a score and receive the results back and John basically showed that that's something that could happen today using a shot 256 hash value as a query so I I think we're in really good position to make something real but to show something real so this is a good opportunity yeah thanks dick so um I really ought to record that and put it on YouTube uh make it easier for people to see um as well as just having the code hidden away on GitHub but um yeah thanks I I agree I think this suggests potentially two strands in the or three strands of the hackathon and I hope we're not too thin for that but it seems like there's a hack spec hacking obviously some some folks just working on the architecture um and there was also some discussion on the uh the mailing list about use case expansion which probably counts into there um there's the topic we discussed last week I think it is still the most pressing topic for the spec which is registration policies and really seeing if we can get interoperable registration policies which is more of a kind of Technology layer use case and then as you say um it will be very compelling I think it will help us a lot if we can also have one of these user level uh application Level use cases like the trust scores built on top to show that it actually kind of works in the real world towards those three"
  },
  {
    "startTime": "00:08:00",
    "text": "I would be I think um that was missing last time at least I started here um I would like to add some of that uh did discussion or did any specific aspects the whole setup um we talked about it at the call but um I don't think you guys touched on that didn't you not for the hackathon topic no okay cool no there's a big um so interestingly so there was a discussion on the mailing list about did and did references being persistent or not and or public Keys being persistent or not which is all very um all very important stuff and I think something that we haven't covered very well yet is and and will absolutely come out with the registration policies topic is the difference between evaluating identity right now for the purposes of authorizing the creation of a claim versus the evaluation of our identity at some unknown point in the future to work out who made that claim and what Authority upon which they did so um and these are very different questions in some cases and and speak to why intermediate CA type things and and and hosting questions are all very asymmetrical um so yeah I would hope that all of those topics will come out and be covered um but you never you never know so it's good to mark them explicitly yeah and thank you again response or clarification regarding the question about the public keys in the receipts um"
  },
  {
    "startTime": "00:10:01",
    "text": "that was very helpful and let everyone know I did drop a link in the chat to the presentation it's not it's an article with a link to in newburger's presentation which talked about this report the video you mentioned in the YouTube is it part of the ITF um um presentations or is this some link which you would like to share on the chat so that we can also so there's if you look at last week's meeting uh the Hedge DOC for last week's meeting has a link to a YouTube time stamp which is the start so that's the entire iot um skit meeting the entire two hours of it but the timestamp starts you at the hackathon readout which is about 10 minutes okay um so there's that in addition a thing that I show dick and the thing that I presented at the um the the hackathon has a I don't know if you've seen them before but they had a sort of meet and greet evening with wine and demonstrations so what I showed Dick and what I showed at the demonstration evening was it actually working in real commercial product with other you know open source ITF code at both ends and a commercial service in the middle um that isn't in the YouTube on the meeting because I don't think it's appropriate for me to be showing off my products in in the ITF meeting uh but I could I could also um I think it would be useful to show that especially as I'm not the only one anymore it would be useful to also post that somewhere so I might get on to that this week okay yeah that's outside the context of IDF maybe if it is worth making public then that would also help the community"
  },
  {
    "startTime": "00:12:00",
    "text": "in some way I really yeah yeah and the client API just to be clear for anyone who's not clear the the client API um is all derived from the skit architecture so there's nothing specific there's no like using my proprietary apis or anything like that um it just happens to be you need to have a service and a database in the cloud somewhere to make it work and that's mine oh okay okay but and it has a very simple registration policy or that has yet to be in it well that has yet to be done so we actually have in my product we have extremely complex registration policies um but they're not standardized yet so standardizing those and getting an idea of how those work is what we agreed last week should be the the next sort of big topic to get our teeth into thank you I just posted the link to the meeting minutes from last week um so just in case you guys you want to to look at that video just a video from the idea still still very useful we will have a look uh well uh it looks like I can answer my own hand uh the I I think we can make good progress on um on the public key question like we're going on now on the list so we can continue that there um I just had a question about did um and does any to me it seemed like it was um a cheeseless rat hole in other words I don't think that that standard will become followed but that's my initial very cursory review um it does anyone have more information in"
  },
  {
    "startTime": "00:14:01",
    "text": "terms of is it being embraced at all um and it because it seems like it it sort of attacks the problem the wrong way and and I thought that the the package URL the Pearl things were much more along the lines of what we would need for identifying uh uh things that along those lines versus versus the did which seems to lump way too much into into the ID that's my question so I have one answer but if anybody is in the queue then pardon me I can wait no I think you were next in the queue so go for it so yes to answer this question I think didweb is a evolving uh specification but it is being adopted by w3c I suppose for verified credentials working group in w3c and I think few more standard bodies do used it so I think Ori is not here but he is the best person because he's actually very active in w3c working group on this subject so he would shed more light but I can certainly tell that it has been adopted in other standard bodies yeah that's all I wanted to say thank you it's always been it's been adopted is that what you said yes yes ideally you want to have adoption in terms of deployments not by there's this development you you create all these adoptions circles among standards groups to sort of like to raise the importance of something right but but sometimes and sometimes it is"
  },
  {
    "startTime": "00:16:00",
    "text": "okay well I'll tell you what um I will we can put that question aside since there's no quick answer um and and then um you know attack it later but sometimes I see this you know where where there'll be some really good work done a whole lot of infrastructure planned around it and so forth and then um it doesn't get adopted because it doesn't quite fit what the needs are and um whereas I see yeah so like anyway that's that's what I thought about it I mean go ahead okay so that's that's the end of my comment thank you yeah I I think it's a very important Point um I believe it would be it would be good to identify like what are some of the most important uh sort of information elements we need to have in in our systems and then finding out um what technology sort of fits the the needs best would be appropriate I guess I don't have a strong opinion about this this and so on but that's why I was interested in breaking through it and understanding and how some of the Dead methods um sort of fit into this larger skit picture yeah well well the reason I say what I said is because I thought that um that in my scanning of it the the dead thing goes much further than what we would need because it it lumps in a whole lot of uh things such as signatures and so forth and also I had some problem with how they had arranged it with their thinking that everything was going to be"
  },
  {
    "startTime": "00:18:00",
    "text": "available on the internet um to anyone at all times um maybe not but I mean so so I I um I'm still sort of cautiously making these statements I could be wrong and I may reverse myself but uh that I just wanted to tell you that that was my um and a lot of times I'm very right about these things but sometimes very wrong um so I I I thought that the the P URL stuff was was going to be very handy and easy to use and deploy um and looks like it already has traction whereas the did stuff I just don't think it's going to have that same level of deployment and traction because it doesn't leverage stuff that's already there the P URLs the Pearl stuff is is leveraging the package name spaces that already exist and so nothing has to be you know all they have to do is just use those namespaces done um and it can also be maybe maybe uh turn toward some proprietary name spaces I don't know if they have that in there but a manufacturer has their own name spaces that they want to Define and um that whole thing can work fine it doesn't have to because we don't need them to be as secured because that's what skid is providing so we don't need that level of of mechanisms of the dead but okay um thank you for the answer and I'll continue to research it myself thanks John you and the queue is that intentional well yes it may be a question also to well anybody actually on the call but particularly Bob Martin as well who will have seen"
  },
  {
    "startTime": "00:20:01",
    "text": "this um a couple of questions so P URL for software packages and identifying you know who if we're just doing s-bombs and vexes and things um I see that um but we're also trying to identify people and organizations and potentially machine actors as well because this all ties into who is making these claims not just what the claims are about um so question question the first is have I missed some development in Purl that makes it suitable for identifying arbitrary actors uh and a second and possibly related question is I used to spend quite a lot of time hanging out in the s-bomb meetings um particularly the Cesar working groups but in also the pre-cisa working groups when 14028 was new um and also some of the various Community groups around that and the topic of naming and identifying software and using Purl was very quickly seized upon but then seemed to go round in Long circles about whether it was actually useful and how to use it um because you know semantics and syntax are different and globally versus locally uniqueness are different um so I don't know Ray or anybody else if you've observed those conversations and they actually made some breakthroughs um that we can rely on or whether my my concerns are founded or not no I think your observations are correct in that that uh I didn't notice them extending the the PRL uh Paradigm to to allow for proprietary name you know namespaces but it would be easy to do so and then then we would have something that would work for everything um so that's what I had in my mind"
  },
  {
    "startTime": "00:22:01",
    "text": "whereas whereas when I looked at did I just didn't see how yeah how it would be as quick um to do that I would like to interject here but I I was like talking to William Bartholomew over the last three months or four months over this he did indicate there was progress made on Pearl to allow us to address some of these issues and I just need to move further ahead with that and maybe Loop everybody else in in those regards so I don't think All Is Lost here pick your next thank you thank you harness so um I'm going to go in the same direction that John went um I know when I worked on the ntia s-bomb work uh you know there's a lot of discussion about naming and so forth and it basically it came down to it really takes three data elements to identify unique uh pieces of software software product and it's a supplier name they are signed a product named by that supplier and the version and those three components represent sort of a primary key Pearl it was not really it was discussed but uh you know it didn't really as far as I recall it wasn't really established as one of the minimum elements the ntia chose one other area to look for maybe some guidance on this sisa has announced their self attestation form this is what software suppliers will need to communicate to the federal government to indicate that they are following this guidance standards and there is no requirement for pearl uh in that document but information"
  },
  {
    "startTime": "00:24:00",
    "text": "about identifying the supplier and products and versions uh are indeed the elements that are expected to be present thanks uh Charlie uh can you hear me looks like again um so uh I feel like I'm up to my neck in this and current on all the issues so I can probably provide a quick summary if that's useful um so first one is that ntia provided for this uh sort of uh loose uh agglomeration of fields as dick described they also provided for a field called software identifier which was one of three things a uh guid or uuid a pearl or uh I can't remember the the third thing but uh so those there are some uh possible unique values however uh there is no guidance on which to use and there is no guidance on the uh source of Authority for any of those Etc now other groups have basically declared Pearl to be the winner in that and I believe they've done that prematurely and without considering some of the implications of it uh Pearl in particular will really not work for proprietary software so uh I don't think that problem is solved at all and I think that uh solving it is a big deal so we can attempt to move further down the road on that or we can uh just say okay we'll take whatever identifier is uh you know is provided by the supplier and call it a day which is what I would advise over"
  },
  {
    "startTime": "00:26:04",
    "text": "thanks thanks Charlie um Roy yeah the the follow-up to that Charlie is the same thing which is you can rebuild the product in times um the s-bomb will probably be the same the Pearl will potentially be the same point of the source code but the evidence that we do for monitoring how to build is happening and file that would be a per instance that you spin the build and the machines it runs on and everything else which is why the greater uuid approach for a unique identifier kind of resonated with with me yeah because I can rebuild windows and team even today it doesn't mean it's the same thing as we shipped exactly and so the actually I thought of the third which is CPE which has many of the same issues so the uh uh uh yeah the build so I mean you know spawn is going to change every time you have a timestamp uh added to it but uh there could be no content change whatsoever including the identifier just as Roy points right and in our case we've seen variations depending on architecture and and we call it Windows 11 but there's in versions of the damn thing right um yep absolutely yep so the only thing will capture only some of that yeah build number yeah exactly which is why when all these discussions of unique identifiers we've got a it's going to be a while to to land on it there's still value for Pearls at certain points and I'm not discounting those and I think we'll end up having cases where we say this is the way we're going to solve this problem but for evidence for specific product and everything else struggle for pearls yeah pearls Pearl's only good if you can get at the build kit on the net somewhere so good stuff in open source"
  },
  {
    "startTime": "00:28:03",
    "text": "hey Charlie you still have your hand up she's trying to figure out how to put it down now there we go take your next uh thank you harness uh yeah my findings uh I find I find that Charlie's uh findings are match what I found as well uh that Pearl has some issues with regard to proprietary software uh he also brought up the CPE is another one of course CPE is ambiguous you can use multiple CPE identifiers to refer to the same piece of software so um as far as the ntia minimum elements go the software ID is not one of the required minimum elements but the supplier name the product name and the version are indeed required if you if you want to be in line with the S1 minimum elements thank you the question there is that just because of the way they think they're tracking software or they just haven't got to the trying to get them into information I can understand a grid doesn't get you anywhere where the other three get you at least to a a producer and a a set of responsible parties but it's not unique enough when you start looking at evidence and CVS and so forth yeah they they basically decided to punt threw up their hands and uh made it optional yeah and and just to your point Roy I think uh what you'll find is that um you know vendors want to be in charge of the wrong name space when it comes to naming products and versions uh some like the use semantic versioning some don't some use hash values so you know there's no guarantee it was the name will be unique or an identifier will be unique without having a central authority to ensure uniqueness so by by"
  },
  {
    "startTime": "00:30:00",
    "text": "using the three elements and letting the supplier be the authority and naming what they want up signing words it makes it it makes them the owners of the unique namespace that they are responsible for thanks software supplier tickets uh I'm sorry I've got some background noise but you know normally that's the way it's done I wouldn't expect any you know the the vendors to change their names or something or go through an authority but the only thing you'd have to do and it's typically done is you have to have the vendor name be the thing that is the only thing that is you know past that has to be unique um and then after that you can do anything you want almost anything you want Plus the the you know we're not really constrained to use uh a single line of a single string you know we can we can use uh a Json block and and have whatever we want in there similar to what you would have in a a descriptor of a container so so uh anyway I I my question though is is there anything written up about or is there what is the status of of considering these things is there something written up about the concerns for proprietary software and products with regard to Pearl or the other options foreign anybody else who wants to jump in uh yeah they're the Pearl uh folks uh uh"
  },
  {
    "startTime": "00:32:00",
    "text": "are a large contingent of OSS suppliers and uh and related uh folks like the Linux foundation and they have sort of declared victory that that Pearl is the unique identifier uh it really isn't and there's no they're stating so hasn't made it so and hasn't increased adoption as far as I can tell so uh it is not written up it's all optional and uh ciso is aware of this nist is aware of this and everybody's trying to uh scratch their heads and figure out how to get out of it I do believe at some point there will be uh USG sponsored project to better identify software and it may very well proceed with the attestation stuff that dick was talking about because uh right now it's a mess and uh that's not a good way for uh regulations to be promulgated um thanks Charlie but I'm wondering and specifically circling back to where we came from or at least were where race question came from was initially about um sort of the Dead uh topic and whether that's and then we jumped over to the bird topic but I believe um they are too uh orthogonal things um yes but also and so I think it at right now I I would find it important to just um like we have the discussion on the mailing list to find out like what are some of the informational elements we need in all the different requests and responses um and then to find out like what would be the best tool um to do to stick in there and and at least so far we have uh sort of been working with the dits and they're highly customizable um like like just some some structures"
  },
  {
    "startTime": "00:34:01",
    "text": "and so uh I think particularly given the hackathon I think we can prepare something and then gain some experience and see how it's going but Ori also said last time that the whole process in the w3c is a little bit convoluted and and long and so on and so it's not entirely clear on when they will be able to finish and the work on on some of the deep methods which which is a chat which is a challenge for us I think okay enough rambling Charlie you're immediately uh I think there is no real solution that we can get to realistically and we just have to work with the imperfect uh possibilities we have and I think the fully qualified vendor uh uh software name software version build version Etc is probably the best information we could use right now so there's a slightly different thought here right so for the did we have to potentially think of which method we want to to focus on is a did web is it DNA d-i and is it did some other new new protocol and even producing limiting and reducing that section is highly valuable and we can make progress with did web it's it's much separate starting point I wouldn't pick ion or or some of the other ones like DN did set I don't think works in the in our scenario um but that said the the cases for pearl I think are disconnected from the did discussion um if I have an s-bomb forget a what's in it and I have evidence the fact that I don't want to put the evidence in the public domain means I may need something like a pearl to say"
  },
  {
    "startTime": "00:36:01",
    "text": "hey if you ask for this at a uh fiduciary level you can now retrieve it because some of the information that they're asking to retrieve is potentially a map to how to compromise a product right if you do static analysis and and see where that sees problems it it basically is giving the bad guys a head start and maybe what we'll end up doing is say allowing for a redirection in that type of evidence to additional stores that require different permissions and that's where I see Pearl being an interesting conversation thanks for uh Ori thanks for joining away yeah so I mean in the context of identifiers for things um I was implementing RFC 9162 over the weekend and and they have a urine registry for transparent parameters and I wondered whether there had been any discussion about building on that registry and skit yet like have we talked about you know because ietf has urns for all kinds of things um you know some of my favorites are identifiers for Keys like the um jwk thumbprint urine RFC so it's possible that we could use these year-ends to identify uh artifacts that buy content right so you can say here's the sha-256 of this particular content and here's the ietf you're in for Content that matches that hash so I just wanted to ask like has anyone been thinking about extending the transparency uh urine registry because right now it has like basically just error codes for"
  },
  {
    "startTime": "00:38:00",
    "text": "certificate transparency in it as far as I can tell that's it um already have you you said RSC 9162 which is the um the certificate transparency is that correct yep I put a link in the chat too directly to the thing I'm talking about okay could I add that to the meeting minutes yeah well I can say I haven't uh but maybe maybe someone else did uh John did you um yeah I'll put in a small vote for looking at ways of incorporating 9162 uh if for no better reason than that it is also based on Merkle tree inclusion proofs and just gives us a bigger community of people using that proof method um beyond that what I was wanting to say and thanks um Ari for for the joining and and everyone else who came later on um I think what we're trying to get to uh in terms of work item progress here is I'm picking all of the issues that are in the way of defining our registration policies work and all of these various different ways of identifying things is just one of those core items um and I wonder actually if we take from that point of view that we're looking at registration policies I'm not sure that skit itself needs to be very prescriptive because I think you can have a registration policy in some services that say we don't care just give us an email address and we're done all the way through to we've done a full proof of possession out of Ben key exchange and sent lawyers around to look at your company registration documents um and there'll be different types of identity I think it's very important that we have hard rules on the fact that things are identified but it may well turn out that the technology used is more a side effect of what um"
  },
  {
    "startTime": "00:40:00",
    "text": "forgive me I forget I think it was Ray forgive me if I'm wrong was was mentioning last week but actually the important thing for us to specify is that Audits and checks and identity verification have been done to some level as opposed to exactly how they were done and we might be able to just avoid some of these really hard technical questions that way um since we have uh already on the call um I was wondering whether we could um talk a little bit about how the registration policy is at least um so whether there's some commonality between what you John have been doing in implementing and what already has been working on to find out whether there's a sort of like an intersection that we could potentially um document somewhere in the whatever document architecture document or another document John do you want to go first or you're still not necessarily no sorry you uh can't hear you already yeah sorry finishing typing and and uh yeah um so I my primary interest in in skit is to understand the envelope format and how you verify an envelope has been signed by a particular entity and so for the systems that I've been working on in relationship to skit I've been using the ISS field and the kid field and I've been using dids for the ISS field um and that causes you to need to resolve key material as part of the registration policy because you have a"
  },
  {
    "startTime": "00:42:01",
    "text": "signed statement coming in it's signed by something how do you know that you trust the signature from that something so you need a policy file that looks at the issuer and kid gets to key material and can make a decision on whether the signature is originating from that issuer or not um and so I've been implementing that with with Rego and and sort of looking at how might we ship a sort of standard registration policy for ecosystem components that build on top of did um and I think I think it's it's not that hard to do it with Rego today as long as you use Json web keys and use Json and you use Jose um but there are also there's also support in Rego for certificates and so it's it's not totally unreasonable that you might have regular policies for registration and one transparency service that rely on certificates and policies in another transparency service that rely on did but only support you know some dids and then a different one that maybe supports a different set of dids um and so I I think the relationship between the registration policy policy engine languages and the envelope formats like for the most part it's not really our business to say what policy language you use but every policy language will look at the envelope formats to make decisions and so we we do have a responsibility to document you know the most popular ways of identifying you know issuers for sign statements and then I think on the outbound side as well when you have a transparency service and it's making you know assigned statements transparent it has it would be really smart for us to make that identity system kind of compatible"
  },
  {
    "startTime": "00:44:01",
    "text": "with the same inbound identity system so if you were in the did web ecosystem transparency service would sign with did web and issuers would submit with did web like that's that's one sort of simple case you could mix you could have the transparency service sign with certificates and the issuers all kind of come in with vids I think you know that's fine to support but it would be nice to have some parity um and a single sort of recommended way of doing things for skit um you know the RFC 9162 covers a massive amount of space and it also covers signing and rest apis and Merkle tree proofs um and so I think there is a sort of minimum set of things you need to bundle together to get to the point where you you've made the experience easy for developers that's it so Ari I have a question there so is the stuff that Entre Microsoft Entre has done for wrapping x59 into did a way to kind of normalize and move forward or you think it's still a wrong approach um so I think it's it can be a way to move forward I I'm not from I'm not sure how mature that particular did method is I think you know if you're if you're using x509 today and you don't want to upgrade to dids you should not have to to use skit like things should work but then someone needs to sit down and explain how does that work and make it really easy um I'm not volunteering to do that for x509 but I'm totally volunteering to do that for dids so that's sort of"
  },
  {
    "startTime": "00:46:00",
    "text": "have you talked to Christina yet yeah I mean I have a meeting with her later today possibly in a few minutes can you ask her to do that uh to ask Curtin to normalize their didx 509 method into a generic DED structure or just document how XY if you want to do the the ID and she can do the x509 I think that gives us in a good position oh I will ask her I'm fairly con sure that every time you ask anyone to do anything with x509 they unvolunteer themselves it's sort of the whole point isn't it yeah well Christina has to help us with skit so yeah can you can you beat them how What specifically you want sort of find out in that relationship in that context I think when we're documenting how we expect x509 whether you have to have the intermediate certificate chains in the signature um in how that's represented in why going to did would be a strategic thing going forward I think somebody has already says has to document how we expect to be used right but does does anyone in cozy actually use x5c and x5u like are those header parameters used ever I have to go look at what we did for notary but um I can't answer that until I mean if they are then the process of sort of verifying the x509 path is sort of the same as it is for dids it's just with a different set of header parameters you use to make the evaluation instead of looking at ISS and kid you look at the certificate chain and you have some way of trusting that this particular you know roots are is is worthy and therefore all of the intermediates and the signature on the final object are"
  },
  {
    "startTime": "00:48:01",
    "text": "yeah I think that verification process is usually like it's not supported in off-the-shelf libraries for Hosey and I would be surprised if it supported an off-the-shelf I think those are two separate questions one is the question about like is it difficult to do like technically and the other one is who has implemented it or deployed it uh very different things um I think it's easy to do technically but I haven't seen it being implemented in at least not in the libraries I have been using I'm pretty sure we did document this how we were going to do this for the container registries so let me let's see if I can find that documentation now technically I think it's easy to do but practically it's not so easy to do that's true that's why it's not but I think every guys put it into practice right so yeah we have something we can lean on I think you and the queue for quite a while now I'm sorry about that because thank you harness no problem oh it's good good conversation I I think one of the things what I heard already saying I agree with is you want to verify the Integrity of the party that you know that is shining but but the other Factor too in the cab forum is actually coming around to this and voting on this recently is the notion that even a valid party uh can end up becoming uh an invalid signature so it's it's not enough to just validate that the party is legitimate we also have to validate that the key uh and the certificate that was used to sign is still valid and the scenario they give is that you know someone has signed some software turns out that there's some malware in the software AKA solo wins uh and it"
  },
  {
    "startTime": "00:50:02",
    "text": "turns out that you really shouldn't be trusting the certificate that was used to sign that piece of software so that that's the other factor that needs to be considered here is is the party legitimate and is the key still valid uh in a certificate still valid that signed it and we tried to address this with the first use case when we said is still valid and that's really going back to the need to to look up on a revocation list of some of the means like oscp or something to look for invalidated certificates so dick the solar winds attack wasn't that the key was compromised the they just injected into the build Pipeline and the whole premise of what they're trying to do with secure supply chain moves it away from the certificate needs to be revoked versus you can now make a negative endorsement or a claim against an existing product to Target one or end products revoke can have a key means that every product that was ever signed with it is now suspect and that's not necessarily the granularity we want going forward yeah I agree with you Roy I think right now it's a hammer and you need something that's much more much closer to you know a sewing needle to get this right right because you need to be more granular but unfortunately right now what we have in the public key infrastructure space is what we have and that's you know it's a hammer it's unfortunately but I know the dick isn't that exactly what they're trying to do with removing endorsement they basically want third-party endorsements as a way to solve that problem and that's where they're moving with supply chain I I'm not arguing that there has to be the hammer capabilities somewhere right you still need to be able to revoke these things but the 90 99 case should be a negative endorsement not a revocation of"
  },
  {
    "startTime": "00:52:00",
    "text": "a certificate yeah I think we're in agreement uh Roy because you know these things they can be ephemeral right I mean you can one day it's good the next day it's bad so recognizing that that that reality is what we deal with however you don't want to implement the methods that say today it's good tomorrow it's bad uh however we want to do that is okay I just making you aware that you know the guys over on the cab Forum started using a hammer to do this and so just be aware that that's that's coming and I think we'll have to deal with it at some level I have no problem with the scenario yesterday it was good today it was bad the one I don't like is yesterday it was good today we have no clue because the certificate expired and we can't tell you whether it was ever revoked that's the one that that's really a fly in the ointment here right the the fact that something got in and we didn't detect it means that allowing it to be bad later on is perfectly viable way to move forward um yeah I think we're in agreement again I think what you're saying is that you know if a certificate is allowed to expire uh that you should really shouldn't be trusting it if it's used to sign material after the expiration date I agree but while it was valid it's still valid so all right that's the whole point of why skit counter signs is to say hey we checked it at the time it was submitted to give it life going forward and and that's why you just can't rely on on the duration you know the start and end date of the certificate you really have to see has this thing been revoked because someone has discovered something that shouldn't be that has challenged its trustworthiness uh so that both are very important as you know thanks"
  },
  {
    "startTime": "00:54:00",
    "text": "a quick question about you guys conversation the hammer is the uh is the revocation uh and that that is too big of a hammer uh I assume that that's what you're saying then and you know what this is very much like the voter database situation and and and most people think the voters are deleted from them but they're not allowed to be they're they're forced to be maintained and you can mark them as as not active but you don't get to delete it so same thing with these certificates there should be like there should not just be a revoke and and no Trail um there should be a if there is a some sort of a hammer that's applied it should be documented along with that their certificate and if right button if that mechanism doesn't exist then then that's a big problem there is a mechanism as Oreos pointed out that we can leverage in a did document to say something was revoked and it has longer life than a CA curls or ocsp problem so the did document gives us a little bit of a breathing room to to support the scenario I think in the night there's two extremes here array there's the very short-lived one-use signing certificates and then you end up with whole Haystack of signatures that you're trying to assume that are the same or slightly different and spotting an outlier can be really problematic versus the other one is we use the same same key for the next 50 years there's got to be somewhere in the middle of that and there's certain scenarios where hey we want to be able to Target an existing product and say Hey There is OSS code or something else that got in here there's nothing wrong with the signature of the"
  },
  {
    "startTime": "00:56:01",
    "text": "product it as an issue and that's where the the normal endorsement style or claim Style on a specific Target is a needs a finer a tool than a hammer of replication there's still the classical you know the keys from Intel or or or Western Digital were stolen blah blah blah how do you now since you don't know maybe you're just going to revoke the whole damn thing and that's the the hammer approach there's still a very various scenarios with it okay thanks a lot that helped me a lot and especially that comment about how the did um uh document um is helpful thanks before we run completely out of time already you posted a link to a tutorial you gave or you it's some some write-up um in what context or which context is this fit in terms of the meeting minutes discussion so the the question was sort of like how do you verify certificates um if you have did web and you also want to check certificate chains how do you do that and so we put together this tutorial using openssl that showed one way to do it but you know again like it's like how to use dids with certificates is not super well defined and if you just most of what's in that tutorial is just like using libraries that exist around you know various places to to check signatures in and to check the chain of signatures on a particular uh token so it shows like how you could use did web with certificates together if you if you wanted to but you know most of the time any entity processing a did web signed statement would ignore the certificate certificate chain because they have no reason to understand it"
  },
  {
    "startTime": "00:58:01",
    "text": "because that's not a thing that anyone's really doing and similarly on the certificate side how you check that chain tends to be very application specific and so you're unlikely to kind of get General off-the-shelf certificate chain verification and and you know Common you know audited well used libraries so it's a tutorial it was a demo it was exploration it's filled with security holes don't take it to production but if you're interested in certificate chain verification and did web resolution sort of together it's you know a thing to look at foreign okay and we're actually running to the end um Charlie are you still in the queue or is that the leftover Charlie keep I forget very quickly uh identity is different from the certificate or the key or the representation of it right there's a verifiable identity at the root of all these things and we have to be able to figure out a way to reflect that uh certificates are inadequate right now the way they're you know revoked and uh and managed and expired and so forth but uh the bottom line is that we need a way to establish the identity of that underlying uh entity and there are ways that individuals like fingerprints and retina scans and face scans and so forth uh for companies there are probably similar methods you know that involve going to the registrars in various countries whatever so we should be thinking about in my view how to uh kind of get back to that verifiable identity and uh making sure that the certificate reflects the owner of that identity"
  },
  {
    "startTime": "01:00:00",
    "text": "I I um months ago I distributed a link to in this document that was written or co-authored by some um IDF people and and of course folk and I think that provided a lot of good uh terminology and background and architecture and I think that's something we should um probably reread again because it will help us to see that regardless of what what name of technology and encoding of the formats we use there are some underlying challenges uh don't go away and I think that's just uh we have to live with them they are sort of like you can the trade-offs you can make it easy on one hand but then it will get more complicated on the other side and I think that's recognizing that I think would be very important I will try to dig out that link again um and put it into post it to the middle list yeah I'll take a look too uh Ray's uh voter analogy I think is excellent you know the voter didn't go away voter's still there or the identity of the voter at least is uh they just you know their certificate's not valid anymore so they have to re-up it but they still exist so that's uh that's going to be important especially if you look at software that is long-lived and successor companies and all that crap so uh just uh one thing I wanted to answer Charlie is I truly believe products have their own signature it isn't a human basically the maintainers control the repo and hit the button but the the product actually has a dad document and signs there therefore there is no biometric if we want to say hey there's a an audit Trail back to who the maintainers at the time of hitting the button that's an interesting discussion forum yeah well software's got a you know a genealogy and a set of DNA as well so I think that's uh yeah I think it's useful to think of a piece of software as an entity that cannot be"
  },
  {
    "startTime": "01:02:00",
    "text": "corrupted uh if we give it verifiable credentials so anyway that's it I apologize thanks I put in the chat the uh what I thought might be the link that you're referring to uh honest um which is the nist SP 800-63-3 document is that the one you're thinking of yes so uh yeah it's an interesting document okay yeah yeah just just extending that conversation about the voter yeah the the thing there is that you can never delete a record in the voter database it can be canceled it can be uh um amended and so forth but you no one gets to delete those and so when they say you know um you have sometimes too many records or too many voters and and so forth It's usually I misunderstanding of what what happens with that thank you I just wanted to mention one thing before we go is that with K leaving Microsoft um I've asked Christina you shoulda to step in as program manager Microsoft's efforts in skit and help me and Cedric and Antoine I do believe her expertise in identity and what's happening on the ietf in those areas is worthwhile having her in these discussions which is why I've asked already to reach out to her [Music] that's awesome thank you Roy that'll be very helpful yeah thanks a lot right um I have to bail out so uh and we actually already running overtime so I suggest you stop here and I will send down the meeting"
  },
  {
    "startTime": "01:04:02",
    "text": "minutes to the mailing list and we see each other we'll hear each other next week on Monday [Music] thank you bye thank you everybody"
  }
]
