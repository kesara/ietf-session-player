[
  {
    "startTime": "00:00:22",
    "text": "That is so bad. Well. Mobile dialogues. Walk. It's time. Well, what crowd? So it looks like we've got most of our attendees remote for this one? That's good."
  },
  {
    "startTime": "00:02:00",
    "text": "We can still make some progress. Just brief couple of slides here to get things going. Not well. You've all seen it? At least once I. We have a very Well, structured agenda this time. Take me a minute to get a the screen sharing set up for this one, essentially, this is what I'm I've discussed with the editors that this is the I think the best way to approach the the current set of work that we have on on hand and we will simply just go through the open issues. And for that, I I will leave Most of the work in the hands of Richard drew has hopefully volunteered to sort of walk us through some of these things. And do that. Does anyone wanna add or amend the agenda in any way. I do need a note take it, but I think I might be able to do that. Let me say. Is anyone remotely willing to take some notes for us to lighten the load? How many people in here. That's not Mario. Let's not ask Murray. I think he's got enough work on his plate already. Alright. I'll take a few notes. I think we'll we'll make notes in in the Github issues when we when we work things out. As we go anyway. So I will just bring up that actually one more hot top of them Martin. Do you wanna see say anything about kind of objectives here? Yeah. That's a good point. So"
  },
  {
    "startTime": "00:04:01",
    "text": "we have not made a lot of progress on the draft in No, Sorry. We did not make progress on the draft for a very long time but in the past, I see probably three or four weeks. There's been quite a bit of activity on Github. And it looks like the the current vision of the draft is pretty close, but there are a number of issues that we need to to sort of resolve. I understanding is most of these issues are relatively trivial. And they just require either a little bit of confirmation from the folks here. So or a short amount of discussion. And hope that we can discharge quite a number of these in this session. And then we can talk about working good last call for the draft or if the discussions drag on a little bit, we might need to have another sequence of meetings, maybe some if if that makes sense to people. And then It seems like based on the on the the state of the document and the discussion we've had that is pretty close to done. We just need to give a little bit of a push out of over the edge to get something that's ready to publish. So the idea is If we can, we'll finish what finished... Working through this. Issues there's quite a few of them here. But if we can't we'll try to get to working group last call as quickly as we possibly can. Now how do I get this into a new window? There we go. Let me like this. Screen. Alright. So I have to stop this now. Yeah. This one. Wow. There we are. Okay. I will in that a little. And"
  },
  {
    "startTime": "00:06:08",
    "text": "Alright. So I looked through these a bit enhanced the meeting. I think martin away to go about this maybe to go from most recent to least because there's a lot of older things at the bottom I think we can go obsolete. So should fire up the number one hundred there, please. Right. Right. So this is one of the series of issues that you had files business and email feedback on the list. There's... The words stream appeared several points in documents question is whether we to have a definition for that. In this document. I as I commented in my my prep just after the morning session. I think my opinion here is that we probably don't need an notion stream in this document. If you look at how his stream works, you know, it's pretty much a per payload process you identify the Key and secret encounter you're gonna use. You encrypt using that or decrypt, you know, if you go. The one exception is replay, which there's there's another issue on There, you need some some description of what what what scope you're doing replay protection within Right consumed you some thing with which you're looking for for replay. But I think that's mainly... Know, the the the right aggregation point there is you know, a key or key So we can just talk about that. The collection packets encrypted of pressing look or Key and don't need any other notion stream. So basically the proposal proposed resolution here would be to"
  },
  {
    "startTime": "00:08:01",
    "text": "Go through the document. You know we can obviously all to things you know, external editions of streams like whatever Rt defines. But otherwise, have stream offer on. Single single packets module that whatever we do for replay. Any any feedback on that proposal? Jonathan. Does that comply requirements on... What think defining how to s frame into some container provides Desk. And with that nor described document it. I I think the answer to the first question is es. And the answer the second question is probably no. Well then there's So so, yeah then it's a good point. I I think that the Right. So let me try to read that back to you. So... Yeah. Yeah. I think there's a requirement here that application specify, which know, in which context they expect which key ids to be used Right. So Key, cypress suites, things okay. I guess can. Got screwed together. Right So there's be nothing like that somewhere. Mainly and I'm in direction. But... Yeah, Yeah. I mean, the receiver has to know I guess which keys to expect where and I mean, not like just explicit it's okay. But then you know, also oh especially if there's, like requirements, like, whose should or shouldn't the same keys and things like? That might need to be specified. You know, know fine. And then particular, obviously, I'm thinking about this in of"
  },
  {
    "startTime": "00:10:00",
    "text": "you know, if there's a rt pillar with recurring s frame What does that need to specify? Much of this split be between what's in york to be payload what's in escrow document proper. Mh. Where's the best place for all that stuff to live. Right. Yeah I expect the You know, there may be yet a third document here. Involves and works but somehow it should be some sort of signaling for how the Rt payload let set up. But, yeah, I think Yeah. That... That's need to capture. I think that we we've got the right requirements know the the the indeed structure. I think the the editors can off and take a stab with finding out. Thanks. Yeah. We we need that, but I don't I don't think we need... I don't think that I'm as we need a new definition of some sort of stream construct. Within... Yeah. Yeah. That's true. Yeah. But... Yeah, But everything I sort of got got more generally, like, where you know, what is the What does that for me from Rt or you know, you know, Right and they streams or whatever. And where, you know, where is that specified? And should there be a generic thing that says if you're defining a container for two the thing you need to make sure gets specify. I feel like, the that last point should probably be in in this document or at least document from this working group. Mh. Yeah. I just wanted to mention that the Av court working has completed a work on end to end security. In Skip and the architecture bears some similarities frame, but there are some key elements that are missing in. That is in skip skip not only provides an antenna encrypted payload."
  },
  {
    "startTime": "00:12:02",
    "text": "But it also provides transport for the key management protocol. So that there's one essentially one stream that that does both the negotiation It back skipped also those codec negotiation. It it looks a lot like the architecture of, but it also transports key management. And that has some... There are a few different differences, but I just wanted to point out that there's also this key management transport aspect that skip has that is not described in the document. And It it also skip describes how the S is done. Which essentially is is handled as a codec. So that the S doesn't tell you what's inside that's done entirely within the end management framework. Anyway, just wanted to just wanted to point that out. And and bruno, just so I understand what you're saying here. You're you're providing this as an example prior art we could draw analog from not something that we never use here. Correct. Okay. Thanks. Right. Right. But it it deals with a lot of the questions that you had like, you know, the Is had a lot of questions and we had to go through the packet appetizer goes and all all the stuff that you can talk that. It's already been work through in another document but Yeah. It So you have an example of how all this gets work through and what the S looks like and and essentially could be reused. And D Martin's notes have the acronym right there I Right. Okay. Thanks. Yeah. It's the Nato end to end security framework. John's in your back queue? Yeah. No. I'm I'm back into sort of the follow about bernardo, I think. Architectural, I don't think skip is the"
  },
  {
    "startTime": "00:14:00",
    "text": "you know, has has made a lot of our decisions because it is a something that was, you know, originally know, you know, point the point thing and no over you know, tel lines and was the as then been modified Rt p So you know, a lot of those questions all lot of the right after this this contact probably involved over word Ml. You know, for the keying and whatnot, but we do have to specify... That does to be specified somewhere. And, you know, which group that is it specifies it I'm not sure, but to probably be hit to somewhere. Okay. Great. So just a long way off the sexual issue so evaluation open new issues. I was gonna say well, I think we probably started to drift off into into other issues. How how about we we sort of record the issue. Richard, do you think you have enough information here to to proceed. I also see Sergio, I think is on on in the room as well. Editors on the draft are you're happy? Yeah. I I think we've got a clear direction on this issue, whether you we're required to file another issue to track the what does the application need to do? Issue the the Jonathan can put up. Which will just be... Do the action there I should check in the document currently? And expect you'll probably need to add a section to it's a condensed what's there? Make it real clear. That work for you? Yep. Yeah. So issue ninety nine?"
  },
  {
    "startTime": "00:16:04",
    "text": "This shows here that so section five point one is the or okay surgery might have more intuition here than I do. But the idea is that you have you assign Key to participants Right now, there's mention I'm an ability to hash a key forward. Is of an security after issuing there. And there's a mention of sending a new key out when participant list trying the changes when this joining. I think this the this issue is corrected in ambiguity right now. I sketched out a way that you could have a less ambiguous Key if you scroll down a little bit. I think in my opinion that's probably the right answer. It's just a in concrete like that like, you know, how many times you send fresh keys and how many times you graduated it? And the surgery do you have to have thoughts on on kinda approach construction. Other Speak feel free to chime in as well. It's it's the high level of context as well that we have these sections five dot one and five times to, which describe how you do king with manual assignment of key sender or know, out of banning things with the assignment cases centers lettuce. Pretty much maps to what folks to for group messaging and signal. Today. So this signal like key management protocol and Fact out two is an based key managing protocol. So this is sort of this this issue sir create on the more signal. Not back. I I think we can sort this out."
  },
  {
    "startTime": "00:18:01",
    "text": "Money this is there's not only any substantive issue here or your fill philosophical to here is just kinda how you clear up the ambiguity? K? Sounds right? Issue number ninety seven, out of Scope key management, this is interesting. Is this does this relate to the the the discussion we're having About wanna what it an application needs to do? And avoiding norma language, but sort of setting out the bounds of the I it's strikes me, this is a placement two one one nine language may not be appropriate and it's small more guidance. Well, I I appreciate that instinct, but I I think some... You know, I think we'll have hard requirements for what an application needs to do and recommendations for the the integrated application should do. Right? So if you don't do the key rotation as the must specifies here, then you don't get certain security properties which our good security properties. So if you want the security property, you have to do this. I we we I think we could say that we as the scripting those are good security properties to have. So I I expect we'll follow as as it should here. That's me my how as well. I But yeah. Mean certainly it doesn't make sense to be must. Yeah. I mean, I think there are arguments about whether you know, specifications that know, put requirements on on what other specifications have to do should do twenty one nineteen language or not. I'm sort of agnostic on that, but you can decide that, I think that's the editor. It should be clear that these are requirements on another specification, not on implementations."
  },
  {
    "startTime": "00:20:01",
    "text": "Harold? How I love this from? It's clear to me that this is place where. Want to document the security property of that using this thing can have. That is... If you want to secure the of for up for forward secrecy? Then you need to do this. So it's advised to someone's using it. It's not twenty one nineteen type requirement. Yep. We can address that way. Okay. That sounds pretty straightforward to me. Actually I upper un's coming above with lowercase must does even anyone happen to know what the current, like, g info guidance is on lowercase. You know, twenty one nineteen words, but not all uppercase I thought the guidance was not to do. Not to do that. If you're gonna use something Yeah. Eighty one seventy four says that if it's in lower case, it it has no special meaning. So if you would just use lower lowercase masks. Although some people still subscribe to the school that says that if you put lower case must and people get confused about whether not you intended to capitalize or not. I think it would be very clear in this context that that's not what's happening. So I I think it's just a matter of you choosing appropriate language. Yeah. I'm gonna find follow into to R two sixty nine nineteen with alternative ways around or twenty one nineteen. Make sure you use the eighty one nineteen boiler other plate if you're doing. Probably shouldn't down. Mean eighty one seventy four. Whatever it is. Yeah. What I I forget."
  },
  {
    "startTime": "00:22:01",
    "text": "I thought they had... I thought this is what I wonder they were clever about the number, but I guess that was Bc fourteen. Alright. Issue number ninety six. So there's mention of or Rt things throughout the document. For context this document started out as being fairly Rt specific but it it became clear as as we discussed the both know, there was some disagreement about how to integrate this with our As well as some desire reply to non Rt use cases. So impression is there's pretty good agreement on across we're here this is a general format specification notes specific to Rt at this point. And so we just need to do an audit of the document and make sure that know, any mentions of Rt are are in examples, they're not whether they're not. So would think that that's the wrong approach and really need to make this Rt specific I agree with that but I feel like I would like... I would I we're confident about this document before it actually goes to publication if we had at least reasonably well mature thing using it for both Rt, and probably also big transport streams so that we can be sure it works. And, you know, ideally, you keep it even, like, you know, pressing between the two and years way without knowing the entities. About glass probably but certainly at least have meaningful embedding and more than one thing so that we know we got, you know, this says everything it needs to. Aggregate agree it's noble aspiration. Bernard? Yeah. One way to test that is that know, you you can"
  },
  {
    "startTime": "00:24:01",
    "text": "implement s at least in theory over the webrtc data channel. I didn't just send it to another another data channel and decrypt it and you shouldn't need to know anything about Rt to do that So that's test test it out that it's Rt p independent as you just take it shove it in a data channel send it and decrypt display it even. Right? Yeah. I mean, I think the state of the art implementation of demonstrates that. And then I think we've got sort two flavors of implementation today. One is with Chrome and surgical streams. Which you know, just kind of shove arbitrary data into Payloads loads. And the other implementation is the in Webex where we don't do any signaling. We just transformed the the Rt field before and after Sr protection protect. And both those cases we sort of treat the Rt channel as as a generic packet transport and don't really interact with the rt semantics. I guess, it's not totally true because the insert streams approach has its generic decision there's a little bit more interaction with Rt. But whatever there's a per packet approach that that Was done in for presenting Webex. Doesn't type crt t semantics at all. So maybe that's a good example of having one that it has an interaction with Rt and when does Yeah. Okay. So I think this resolution seems seems about right. I'm not hearing any discussion about the resolution just"
  },
  {
    "startTime": "00:26:03",
    "text": "just some more advice for editors. So that's good. You happy to richard Next one? Yep. That's that's. Making good progress. Ninety nine. Oh I just got track that P r This does... If you can pull up the Pure line, it should be interesting for photos. Think for folks to discuss. So this p r redo does the overhead analysis that's in the document. Looking at Yeah. Sorry. It's kind of replacing one scenario by the other. But you, the other overview here is probably a better way to look at this. I apologize in a little off the cuff here because in I haven't looked at the this p in a minute, but Basically, I the idea here is to compare a few scenarios for how you can deploy us frame, you know, on in units of single bytes or or something bites single Rt media payloads or on the unit of whole frames and compare the overhead this process in various scenarios. The current document had some assumptions about, you know, data rates and things like that. This... This new approach tries to capture some kind of scenarios that map a little bit more obviously to scenario agency in the wild terms of media streams are capture what the basically end up with like the kind of kilobits per second overhead is of a strain in the various cases. So I you go through this here. I just wanted to kind of flag that for folks looking for to do in the back of other meetings the To speak, I would love to work commentary on this pure."
  },
  {
    "startTime": "00:28:02",
    "text": "I I don't think it ton discussion, but it would be good yeah. No. This is this frames things in in a useful way. Or for him kind of hitting their rights kind of scenarios here. So there's a bit of a preview of the sort of numbers that come out of that depending on different different sets of assumptions. Anywhere from point one percent to... What's that twenty seven percent wow. It's twenty percent percent on an audio stream with with tiny packets. Yeah. Lots lots of little audio packets. But a very well compressed. And Yeah. Yeah. It's not a lot of in absolute numbers it's probably very small, but it's still Okay. Thanks, Richard. I think that one's Therefore for someone to look at, I know you've asked Justin to have a look at it. Maybe you need to park him again. This one again looks like something that is something that you need to get around to doing rather than anything that we can talk about here. It just means that the test vectors is are that much more useful. If we do that. That's good. That's just tracking issue. And eighty five easy. Obviously, yeah even seventy six will be the next interesting one. Yeah. So replay the most complicated thing of it search Gp. And probably even the most of complicated thing here. So S sr And it several room here it dealt was a bit Yeah. It... Azure sr t has a pretty clear it's out to void avoid replay"
  },
  {
    "startTime": "00:30:03",
    "text": "which is, you know, in in a scenario, like, like a string where we're trying to use Ae ea and they're bad consequences to to queue... The keynote. Replay is pretty bad. And so since it's a good test and protections against. Of course. You know, having code to detect replay and even defining what replay protections you want. Involve some complexity. And as we discussed a couple of years ago, you have to define within what scope you're doing replay protection. So I think if you scroll down to the bottom of this discussion, like forwarded the bits from the Rt with the idea of saying that's about the approach we should take here. So there's not a ton of complexity here. It just says that's implementations need to maintain a a replay window in which they track use packet numbers of some sort Of think in the Rt case they use the extended sequence because I'm sequence number plus it the rollover over retainer. Here, we probably use the the counter which remains semantics is sergio point seven many to tell down a little bit more but, yeah. I think the overall idea here would be basically attached to each key Id a replay window that would be key of the counter goes with it. For calling me. We I have those two fields in the letter of the Key id in the indicator? So here's the key idea to identify the replay context on the counter item what we're checking for nuggets. Yes. I think this interesting question about how much rep protection need is for how well the underlying application is capable dealing or suppressing duplicates. So if you want"
  },
  {
    "startTime": "00:32:01",
    "text": "it's one thing say. Okay. If you have a window base, this outside the window, or do you actually need to press all duplicates. So that comes down to. Will the application I mean, we'll start p application media if you have a timestamp sequence number for stream. You put them in the buffer, etcetera, and you compare consume them and then inside passed or I know just trying to replace the same data set those the deal with but if the application doesn't have any fields inside the frame, for that information then it would be vulnerable for this type of replay. So it's... I think that's why where some of the difficulty in in this question And saying, how much do you need? So Yeah. It's a good point. And I suppose as you say in interesting, like, we could decide not to address this issue. Like, if we focus purely on crypto photographic requirements, know, where avoiding... Where the only real consideration is avoiding use of the key pair then like, you can't prevent that with replay protection, you can only prevent key management. And so we may decided that leads us to not caring about replay detection on the receiver side in in in in which case as minus points out we could flag this as a potential issue to the application. Yeah. Revisiting that issue we just opened. Just have to it. Martin that looks like you're in the queue. Yeah. I just wanted to say that when When you think about these things, you can potentially build in anti replay at multiple layers of the stack. At which point you you would end up producing some interesting sort of timing articles when one is a rate when something is a replay because you get halfway through the stack"
  },
  {
    "startTime": "00:34:00",
    "text": "and you've engaged half of the replay protections, but not the other half. And you can sort of tell how far you've gotten through the process. So is potentially even advantage advantageous to do nothing about replay at this liar at all, simply because you wanna avoid providing that that oracle. I... It's probably not as much sure a problem here because the ob of the processing of these packets is not right. But it it may be something that you wanna consider. If you can rely on the application itself providing robust protections against replay say the s rt life. Yeah. That's it's a great point and Yeah. So... Yeah, just to to be clear, like, if you expect this to be used in end contact which I think we've all sort of do. If you're using Sr on the bottom you already have down there if you're saying over Tls or D us there's some replay protections there. So... Yeah, The it's not a totally imp assumption that we could just express that is a requirement that and we have some protection elsewhere, either better blah that's. Jonathan see you. Yep. But as you say, you want the replay... If you want end to end reboot direction, to be gonna provide that. Because is not that. So you know, if you're worried about the there's a few and you know, but I you know, most just ask if few doing the replay then then you need to provide, you know, some protection against that. Right. And I think I feel like that is where it might need to be in the australian proper because you know, you might not even have the same application and know, if you are talking about like, you have a I don't know Rt the mock gateway where you've got s frames going in to end. Which is not an entirely unreasonable scenario, I think."
  },
  {
    "startTime": "00:36:00",
    "text": "And then know, we, maybe then, you know, obviously, you've got two different applications sending against friends. The application... You can't say the application will provide it because there is not the application. I love I'll this trump. Remember that they're living in world where packets get duplicated. In particular packets get. So in my experience, gateway protection is a matter of updating statistics. It's completely useless anything secure us. K. Sergio? Yep. I was going to say mostly it the same that the It the thing that we have to that the reply Should be worried about an And that the or recording the media of some participant? Then it back in in again later running the in the conference. So the a was not trigger because the will take care of what it's been being properly packet. But the the will be so I think that and the interpretation needs to be inside stream. And I think that what I meant to say the issues that maybe we don't need to put that, like, window that it is in in the number of packets. But. Yes. Make sure that and but a time base reply window saying that if you receive something that"
  },
  {
    "startTime": "00:38:00",
    "text": "in the last say from another Crt with in the last one second or something like that. That we can it. So but we have to put something of about the paper inside this screen. So sergio you are you saying you would prefer that sort of time based provision to one based on the the encounter. Maybe it's easier to implement. So I'm I'm okay about both but maybe when sixty to the. I know necessarily recall why you thought that implementing like windows bit more complex But yes, I will find with Player will with know with packets. Yeah. And and maybe we I think guess another question I could ask is whether this these is if you don't need a single mandatory approach, we could document both the time based calendar based approaches and what information stations choose which is easier. Okay. So I think any of the The kinds of replay that could happen you know, malicious versus accidentally or gonna be different for reliable versus unreliable transports. And so trying to do something generic, I think it's is gonna in this document is gonna be complicated, whereas saying, you know, We've got most of the use cases for this one envisioned are sr using sr. Providing some general guidance and then also saying, like, these other categories of things, you know, could be could be an issue with a malicious s a they were if you happen to be using some other reliable transport, like like what transport. What web"
  },
  {
    "startTime": "00:40:00",
    "text": "transport or something, You know. So But I think the solution, like, if you want like a a harder solution then you should do it on a per transport basis and not in this document. Surgery you have some more on it? Okay. I think lot of good points here. I'm just trying to sum up So I I think it's it's a good point to know, transport will not provide and to end replace to the protection against replay by the s few. But as Wrong points out there I Guess that that is not even transport a transport issue. So I think where I... I might kind of husband land here is noting that the security trade off that that, yeah, briefly protection gets network accuracy is provided by something else we have seen this is in end in context. But applications that know, receivers that have concerns about were replay by by intermediaries. May apply a replay window either based on timer based on on the counter So fairly loose that that proposal be fairly loose in terms of not it would not specify a single mandatory mechanism for indeed not require any replay mechanism. Do fuck how do folks feel comfortable with that level of loosen?"
  },
  {
    "startTime": "00:42:13",
    "text": "I think focus because there's sort of... I think There's kind of a hang on Right. There's kind of a general question of what you actually trust you know, what is that your trust relationship with In? You something going on. Sorry. What is your current relationship with the as of you... What do you trust to or not do? I mean, I think if you mentioned someone douglas in the media but you trusted to behave. Properly in other respects, and you can just sort of not... Like you said not do anything. Whereas, you know, if you're less trusting of it. And I think there's certain things like that would be very hard to not trust it do like, you know, why about who's speaking and things like that depending on you know, one So Jonathan are you suggesting that maybe this Richard suggestion is exactly what you want here? Yeah. I think so. Though. Possibly we wanna be more explicit about, you know, what exactly is the relationship with these intermediaries. I I think I think this is And that fits firmly into the necessary text you put around the thing that Richard is talking about so. It's good Thanks. Alright. I think that's That's really good feedback on. I think probably one of the bigger issues that we had on list here. Are there any others that you would like to to sort of jump on out of order, or we just continue through the process. Sorry I'm just scanning through here."
  },
  {
    "startTime": "00:44:04",
    "text": "Why we click on the near number seventy there. Yeah sorry. I looked at this one recently. Let's just load them up. Yeah. I think these are know feedback on the adoption call. Bernard you're on the line, you can feel this speak after, but I think these are largely fairly specific things. Yeah. We need to we can break these on its individual Okay. Individual issues worker. I sort of in editor studio. Yep. And there's a a whole bunch here as well. Yep. Okay. Who do I think I who should I assign this one too? This one looks like if we're going to be meeting again, this one needs to be done before then. Yeah. Why we say to in because he file it you can call himself to. He's not on the call, so the fundamental rule of meetings. You don't, show up for the meeting get the actual items. Right. Alright. That's good. Robbie. Yeah. So we have this metadata field as way to show anything into the authenticated data. Obviously, what you shut in there"
  },
  {
    "startTime": "00:46:00",
    "text": "is gonna depend on you know, what makes sense in the application context. Yeah. So they this... Again, we got... We're we're back to assumptions about application. Right. So there's no specification in the packet as to what has gone into that add so you could end up with some opaque and hard to diagnose failures as if the sender in the receiver disagree what got for any the metadata of data. This may also be one where some cleanup is necessary because there is some more concrete suggestions about what you would put in the better day in earlier address. My read here I again note having looked this in great detail. Is that mechanically we're probably okay, with the mechanism that exists. For shutting metadata in. But we probably need to be clear the application is to specify and ensure them send receiver and agree goes in that metadata. Field Sergio, did you have any other thoughts on this? Suppose And also mentions that I think you end was pushing on question of whether we need the the metadata mechanism at all It's fair question. My impression pretty cheap. You just tag stuff on the end of the field. But yeah. Another option here would be to just to not do anything. Sergio sorry. Jonathan you. Sure Watch go first go ahead sorry."
  },
  {
    "startTime": "00:48:00",
    "text": "It seems we are to talk a about authentication metadata when we are not seeing how it's going to be sent how to receive. So mean, I know seriously, what is the use case of of the of the compared to the normal normally. So And I I know seriously what use case do we have for sending? So it has to be authenticated, And they need to input it inside the the string payload load at all So it seems me that we should proceed we should try to send everything and to end it, and I don't see a reason why route could be any metadata that should be sent here. Jonathan. Yeah. The since I think an example of where I'd like to see the application using this, be at least sketched out. If we write application or two, and not none of them have to used for it. It we get rid of this? Especially what I worried is, I think there are use cases for gateway applications that of applications my different metadata that'll be extremely annoying. So I'd like to you know, I think This is a feature which we should figure out whether we really need it. And if not, maybe take it out just for the sake of simplifying. Yes. Yeah. Use. Yeah. I I think just to to clarify, I think the the kind of use cases folks had in mind for this where cases where you might be able to enter in new encrypt pretty much everything, but maybe there was some framework or something. That's you want to be visible to the s for the short purpose of making good"
  },
  {
    "startTime": "00:50:00",
    "text": "choices I'm moving forward. But you wanna make sure that yes if you can't that forge without causing a decryption to fail on an time basis. So that that's the sort of application which, you know, it gets you some better security properties than just sending me an encrypted metadata. But I I I it's not not impossible to me. Johnson and says it's see what what more precisely applications needs are. Run? Yeah. So then I mean, for me the classic use case where this would be that that you you send in my that somebody that you think that somebody started speaking and somebody stopped speaking and an audio stream, And if somebody proposes that we don't protect that with and end integrity, then I be really curious what they think that we should do instead. Because that seems like a pretty classic example. Carl? So mike canonical example of economical example metadata is the frame description. Which is this depends the that describes the layering in in an Encode video. Expect the read the metadata you expect this a few based on that to throw away some frames. It's not actually choose to discard or modify the depends on the sc so that it fits in with next hope. But"
  },
  {
    "startTime": "00:52:04",
    "text": "This value putting a copy of whatever you want to sign inside the frame, before we encrypted it. But that's part of the encryption process not part of the transmission process. Metadata in this sense you put on the outside of the packet is really instructions to the transmission system. And those need to be protected by all means stand by inside packet and what arise at the endpoints. May not be what's being sent. So put the damn thing inside the and and call it data. So I didn't follow that Harold. You said several things there. Yes. What of like, what it was that you saying on? So if you put stuff on the outside of the packets. Yes. It's called to be modified and transit legitimately. If you put stuff on the inside of the packet, and encrypted. It's going to a arrive at the destination. Unchanged. These two of things don't have to match up. So to simplify and model. Just say that if you want stuff, inside the back... Inside the frame, Okay. That arise of this destination and is very verifiable. Just say it's deeper. The concept of metadata just confuses this particular specification. If I could try to read that back. I think in order for metadata to be useful in the way we have it here, it would need to be visible to the the transmission system, but not modify Guaranteed not to be modified by the transmission system."
  },
  {
    "startTime": "00:54:03",
    "text": "And I think getting your howard company saying is not really anything fits both of those criteria. Either it is information it doesn't need to be visible the transmission system or if it is visible, then it will be modified and see if this protections and integrity protection is applicable. Growing? So... Yeah. So again, that's why I asked about voice activity detection. Or, you know, speech energy levels that speech energy levels used for detecting when someone is win a participant is likely speaking. Like, that is information that needs to be viewed and should not be modified, and it should be... If it is modified, you should be able to detect it was modified. So I'm not arguing that the other things that Harold said are wrong. I'm just saying that for the case of voice activity detection, I... I'm asking how would you do that instead? So just just to confuse your mind. The Rt has a extension for for client to ask a few. Carrying of their information is different from the extensions carry from it from the therapeutic the plant. So it's modified. Sorry about that. Entrepreneur. I think the term metadata is a little bit confusing. Because it it covers a lot of things which need to be handled differently. So the point of things like the dependency des the stuff that's in the dependency script is inside the codec payload. Right? The reason it's put in the dependency descriptors is to make it visible to the s. So you don't really also need to put it in the payload because it's already in there. You have the info on the layering and all of that junk. It's already inside payload so you don't need to duplicate it there."
  },
  {
    "startTime": "00:56:03",
    "text": "It's it's not used. Typically, these things are not used maybe a few exceptions. They're not used by the by the decoder. Let me put it that way. They're not relevant to the decoder it may be irrelevant to the And maybe in some circumstances to the Rt receiver, but that's about it. I'm not really detecting an outcome here. I think as anyone I don't answer for rowan. So I I just unmute. I just The the resolution I was gonna propose here is that we keep the authenticated metadata feature we have for the moments. K. Point number one. Kids feature their and explain your add to the description of what the application has to do. The application needs to make sure that's coherent between center and receiver. But at the end of the know, after all that mark says it as a feature risk, which needs more your confirmation. This to something that applications actually need. And then we can kind of resolve this working group last call time. Whether we wanna keep it. So it's it's it's it's kind of a cheap feature. It's no. One line of... Do we have the metadata there or not? Any authenticated data. That's? Sure. I that the content of is just to confirm"
  },
  {
    "startTime": "00:58:01",
    "text": "would be specified by the application and very much application specific. Yep. So what what it says is, like, the the authenticated data in your Ae adhd computation is frames specified richard you're And whatever gets the application wants to add after that. And so for you review the feature we just say it's just a bit straight first place. Yeah. At this time I agree with you, I just know, on the the case of it's cheap. It's cheap for s frame. I'm not sure it's cheaper applications because applications have to describe how to re a but, you know, bid exact which is often you know, surprisingly hard. So I can understand. I could understand my I side. This is too hard. I want it with which point you know, that would go towards your after risk. Absolutely. Yeah. No. I I think that is cheap units of the Spec text. Is the dimension I meant which it is cheap. So it's it's easy to add a remove. Okay. So it's it's cheap But if no one ends up using it, there's not a lot of point in having it. Okay. Here we go. I think most of this. Yeah. I mean. See if Harold has anything to say about this from the w three end of things whether that suitable strange or transform document has been progressing with there's anything special needed here. I honestly, I haven't looked at that much lately. How thoughts here. Frankly, I've been living this one to You. Okay. So I I don't have anything to say about that. Okay. Alright. So who's is for you and to follow"
  },
  {
    "startTime": "01:00:00",
    "text": "Let's if we need anything on here. K. Yeah. This is a pretty old three year old almost three year old issue. Three year old... Three years old is my seventeen. You no here is simply that yeah, we have ad hoc var structure in the document right now. Quick as of our structured. That is in quick stacks, it could be burned. I don't know if folks are quick enthusiasts. And perhaps, so you could pull this in. If not, We can probably close issue. Yeah. It's it seems to me like the number is always bigger on the right. Apart from like, here, where it should be eight point five. And here, And... Okay. So there's a couple places that's a little bit bigger, but Right. Opinions? Okay. Think did as the the conclusion of the description there says one nice feature is that you you don't have to deal with the four bit segments you always sell whole bytes, but Right. It's not that much code. Just close this. Alright. Yeah. This when anyone has quick envy. Think Okay. We're we're reusing the quick bar ins and ml."
  },
  {
    "startTime": "01:02:02",
    "text": "Which was handy there because we needed of our instruction didn't have one. Right. Okay. Oh boy. Obsolete. Now are these ones that are marked obsolete truly obsolete? Should we just be closing them or should we review them? I marked this as obsolete in hopes of getting through one of the other vendors, but I think we can have the obsolete ones reviewed by by you handled by the editors to confirm that. Okay. I think that's these are... The document has involved up from under not really anymore. Yeah Let's see. Things Right. Let let me just Me just like to see if this text is still in document. So is this the case where you have potentially a keying operation that that is currently active. And some something indicates that you're using the next keys and you're you're waiting for the next keys, do you buffer the packets in anticipation of the of the he's arriving because you you're ready to go, but not the keys haven't arrived yet. Is that Yeah. Correct. Yeah. The what the document says at the moment is if the Cipher fails to decrypt because there's no key available the client may buffer the cipher text and retry the and once the key shows up. Sounds odd to me. Well, I I wonder if this is you yet another one that makes sense to client to the application."
  },
  {
    "startTime": "01:04:00",
    "text": "So she imagine you had an extreme library it reported like, hey, I don't have a key for this. And applications managing the keys and so it probably has the context as to whether a key is likely to drop for that. And so the application could manage that or retry which you we wouldn't specify here. This this application requirement section is really flushing out here as you discussed. It's like a big thing that we forgot or something. Rates itself. Yep. Did anyone resolution? Yeah. K. Alright. Moving on. I think there's one more left you. Harold. Alright. Just if you have a requirement that the application should needs to have let retry. And that terms into requirement on there be a mechanism for doing retry. Well, it it it's a simpler part with there, because you just needs to re... Need to have clear signal for the thing we're gonna retry. Need a return a... And I don't have this key error as opposed to just generic decryption failed. And then the application would respond... Be responsible holding that packet and putting it back in again when... Yes. Yeah. And that must not be the take by as as a replay. Of course. Correct. Oh, yes. The point? It's a good that's very good for the last. Not. Be treated as a replay That might have. Yeah. Alright. Alright. We have one more issue, I think. Made very good progress."
  },
  {
    "startTime": "01:06:11",
    "text": "So I think this is I think this goes to the other issue we discussed earlier about ratchet keys in the structure of the key. Yeah. You think you wanna do that one together? Yeah. I think this goes together the points raised there is I think valid the the resolution proposed in the other issue would leak some metadata to the s a few. So solution an additional consideration one could Yeah It did an additional kind of constraint on solutions to the other issue. In terms of trying to hide the metadata of. While at the same time making it clear to receivers when a new key has been selected. Or or else we accept it that there is that metadata data leak. Charge freezing metadata again. You link the information about... Yep. How many times you fraction of the queue? Actually, let me just throw that question the room like, anyone care about that metadata leakage? Yeah. So doesn't seem especially sensitive to me. So in in ninety nine, you your your structure was essentially bit packed different components. And if someone follows that construction, or although it would be a suggestion"
  },
  {
    "startTime": "01:08:00",
    "text": "my if someone follows the construction which probably quite reasonable. You would learn when each one of those components changes. Well as the overall thing. Is does... Is anyone concerned? Like, let me bring up ninety nine. Is anyone concerned? About leaking When the sender Id changes, when the key generation changes or when the ratchet step. Changes. Think the last one is kinda whenever. And these are all internals of the process more or less. So not probably not Because this is a separate section from the integration. Similar construction. The Section as we have now has a similar know, information leakage and then it reveals explicitly what that thought was used to encrypt. What and which sender within the bug sent? So there is that linkage leakage there as well. Great Obviously, you could have stuff in use hash as the Key. Assuming that everyone can build the hash hash tables and you know what hash values to expect and how to we reverse the hash. You random perm implementations. Yeah. Isn't it really worthwhile? K. I probably don't like anyone cares. About the comm communication crickets on Harold and It's the like. Harold. Yeah. I care about the if information leakage And we could just say"
  },
  {
    "startTime": "01:10:04",
    "text": "If it if the only thing that needs to be in the spec, is how many bits you allocate for identifying the key. Rest this up to the application. So I I think what I might do here propose we do here is document the leakage in sections where we define these Key trucks, say whatever things you been back into the Key, will be visible and basis or visible to Sop. As transit. And applications if they're concerned about that linkage leakage might adopt structures for the Q that So reveal that information. Basically the default the default approach we we have provided in this document would make some information, but applications would of course be clear to choose other ways to pack stuff in the Key and uniquely identify their keys. Okay. I don't how to build that. That's great. So we have call on calling you for inspect tax Martin. Thank you for volunteering. We'll just give you packet number encryption from quick. See. Okay. So that that I think aside from the issues that you has been tasked to look at, which were these very early pieces of feedback during adoption. Concludes the substantive issues that we've identified. I think based on the discussion here, Why don't I suggested the"
  },
  {
    "startTime": "01:12:02",
    "text": "the editors get together, work through these we have pretty clear direction on most of them. I think the replay one may made it a little bit of discussion on the list. In the process of working out exactly what you're write in the document. Most of they seem like a pretty clear directions. So somebody it is a task of walking through these one by one. Coming up with proposals consulting with the list if you think that needs to happen. Pulling out the information from these reviews from Bernard and Echo And then Hopefully, and your revision? If nothing comes up during this process. Requires extensive discussion. I think we'll probably go straight to one group last call. For the document that comes out as a resolution to this one. Assuming, of course. Everything goes smoothly as smoothly as it did today. We which things likely. Just to put a deadline out there, I my So... Yeah. because that we put something on the calendar for about a month out. In case there's any issues that come out We can always cancel if we don't need it. But that will give us at least the target drive some action for Yeah. So I might... I'm... What I might do is I'll organize an hour virtual interim we could have put out a poll for for times and and whatnot not in about a month's time. When I know I'm back when I come back from my vacation, but we will then have that discussion ready to go, but we'll probably just plan to cancel it. In anticipation of the editor giving us a draft that's good. Before that time. Any thoughts on that plan. Jonathan. I just... You mentioned you're working with last call and like I think as I said I'd be somewhat more comfortable if we had you know, at least know, reasonably progressed the application"
  },
  {
    "startTime": "01:14:00",
    "text": "definitions before I mean, I guess before Pa, which I guess, you know, we do working in last call and then we didn't really mean it because we actually run to do another review, but I feel like I'd like to see, you know, the least reasonable maturity of the of applications And I don't know if that's this working group or somewhere else, which is another question interesting your question. But you know, it's basically you know, no whether we got all the the application requirements right. Actually, you know, using them. Okay? Thank you. Bernard. Yeah. I I think there's something that has to be said because there's an elephant in the room. Which is that the Rt document we've been... It's been promised to Ab core that there'd be a documented... We've been waiting two years. And there were major objections to the document two years ago. So it's a very good possibility. This whole thing could be dead on a arrival unless there's some movement on that. So you really can't... You you gotta have something. It looks... It it it'll it there's a very good case to be made that even then new shopping here. Basically, something was brought to Av car that was rejected and you're trying to get it to do a working group last call on if that's just not gonna fly. Let let me present us a slightly sunny year view on that you know, I think we do have applications shipping using basically this, yeah, the draft version the has frame like, so there is some degree maturity applications what has... What those applications haven't bro are the kind of more systemic implications If you tried to do this kind"
  },
  {
    "startTime": "01:16:00",
    "text": "properly integrated into the the Rt and S framework. Yeah. So I I agree more motivation on risk. It's the thing that you're that the the basic problem is what you're putting into is that s frame is about encrypting frames and it Right? And as packet really isn't is about something quite different. It about encrypting Rt payloads. And those are two different things. So, you know, you have to be clear about which one of those two you're doing. And and that's what the Rt draft is, basically, as I understand that it would not be talking about encrypting frames but encrypting Rt payloads. Whereas encrypting frames is fine for other stuff like web transport or marker. Whatever. So anyway, that's that's kind of... That's the thing that's still up in the air and it really needs to be tied down. Yeah. I I I agree that the needs to tied down at some point. I I think I'm less worried about this. Did in the sense that the kind of procedural consensus finding maneuver that was done here was to say, you know, yes, streaming as packet different things, but the encryption framing they do can be the same. Yeah. I don't a few operations here. And this is... So the document we're trying to tackle here is just as And, you know, yes, probably a little in apps to call it frame. In fact, I think they're may have been arena any issue somewhere that didn't. Same is fine. It's just that's where the... Putting the Rt stuff actually hold you back. If you take that out, everything is pretty clean. But but somewhere you have to find what goes into it. And and that's the part that you really need to need really needs to be worked on. Yep. Now there there will be more work to do. Once we get this format defined. Maybe probably or an Abc t than in this working time."
  },
  {
    "startTime": "01:18:02",
    "text": "So I I wanna understand this a little better from perspective. So I'm hearing From Richard that You sign it this is an encryption form, encryption format and we can we can get that laid down and then build the rt on top of it with some reasonable expectation that's going be successful. So I'm hearing the bernard a little concerned that there be something that happens in that process of defining the Rt pieces that will invalidate some of the assumptions we made. Yeah. Is that... No is No. I I think I think what Richard says is perfectly fine, but the problem is mixed in all sr stuff which doesn't which kind of mud is the water. And some of the diagrams make it seem like the difference between us back and s frame is just not. It's more it's what actually gets encrypted. So anyway, so just to know your argument for for cleaning up that issue about the Rt stuff. I think that most of it just isn't needed. It you don't Right? If for what you're trying to do, if it's just about the encryption from, you don't care. Yep. I agree probably streamline line out some of stuff. Okay. Well, I I think what we'll do in particular is is ensure that bernard you have a look at those pieces of the document that cleaned up. And we we make sure that we don't confuse things too much. And if you have objections then we wanna hear about them. So Yeah. I I I just think the one thing you should think about is is there anything that changes in the format depending on what and being encrypted inside of it. Right? Do you need to know whether it's frame or an Rt payload that's being encrypted. Yeah. And and here's a weird... Here's just a weird thing to throw you for a about. Right? In rt over quick, the the frame and the payload of this halo has infinite empty."
  },
  {
    "startTime": "01:20:02",
    "text": "Right. So so what exactly is in that payload? Is it you know, it it in the case that it's inside of quick. Is it a large Rt payload, like the whole frame and an Rt payload format. Or is it the frame in the raw frame format? I think you need to know you encrypt it and use it which one it is. Yeah. I think my decision with the sender and there were we need to agree but I don't think the encryption are needs to know. Right. It it doesn't need to know. But the thing that gets it needs to help Right. And and it's not clear to me how that's indicated. Like, is there anything on the s that tells you I don't think so. We can potentially do key diversity or something like that if if it matters. And this instant question it is an instant question whether yes A few needs to know. Or whether this could be agreed between this sender and receiver without yes if you know or caring. But that's... I don't know if that would work or not. But it's an. I don't think the s needs to care. Probably. But other subtle. Their. I mean, like you know, it might depend on I don't know. In particular whether but they... I think well, things like whether the thing over which your tag computer is want pack multiple packets? The as a needs to know don't you know, partially drop things that are have a single authentication tag of things like that. I mean, you could, but it would be not use. Excellent topics for the Av t cordless session, I think."
  },
  {
    "startTime": "01:22:04",
    "text": "Alright. I think we're getting close. Is that any other business I guess my question would be anybody does wanted to define this for something other than Rt. What would be the venue for that? Mean maybe nobody wants to do that work and until a question. But I think you know, if I think there is probably at least abstract interested in using this for Mock for instance, And maybe that would be mean to it mark. But Yeah. That. That may be maybe something that becomes moot if we manage to correctly write down what the application needs to do. And so mock can look after that. We're not chartered to do that work. And so leading it in in the domain of those people that more familiar with the needs of the application as long as we're very about the requirements of the application, it's probably the right way to do that. Okay. And I guess, you know, I think you know, wanna use for H or something, but Yeah. No. That all. I don't know who owns H, but again, it would be more appropriate someone who owns at H to to do that work. Okay. Probably agree. Hey I think Apple owns H. Right. So it's on to you and what you're said? But, yeah. An m pay mp might do it for dash. Right? Yeah. Yeah. I I think the... Yeah. As Martin says the task for the script is to nail that that punch list that the application needs to fill out. And then you know, application of the risk can do the rest."
  },
  {
    "startTime": "01:24:01",
    "text": "The the way with the caveat that Hopefully at least some of the draft authors realized that for Rt they might not do in this working group but they're still on the hub to do it. Reaching as an Court. Okay. So lots of work for variety core apparently. If that document ever gets there. Again. Yes. Well, lots of work for graft authors. Not sure. Indeed. And certainly not the chance. Then would encourage the draft of this to be the graph of that which But, you know, My likewise. And that's unless you can find another. Probably the people with this same amount knowledge is a good idea. That's good. Alright. Unless there's any other business, I think we might conclude give people back five minutes of their horrible hours of the evening. Thanks Richard for for going through all those issues and walking through them with us. Okay. Thanks all concluded. Let's just see How do I end this meeting. I think medical just that for you. I'm not sure."
  },
  {
    "startTime": "01:26:00",
    "text": "But we're john? Well. Too bad. That's good to everyone. Yeah. Thank you. I would like this one. Take a look at these wonderful graphs. That doesn't matter what it is. Take look at the like they're none of them are the same thickness, but the So Don't so got the conclusion that this working group was probably in the mistake. Yeah. Think as we went through which one of those individually quite recently. It's a list."
  }
]
