[
  {
    "startTime": "00:00:07",
    "text": "As ascribed. Anybody, anybody, anybody, Hey, good. It's really funny where very variable. The number of people that show up here based on what else is against Please make sure to scan the QR code. That's how we're gonna make sure that we manage the and get people in and out to talk that are here on remote. It also helps us for, getting the right size room. So like, 10 more people show up. This place is gonna be full. So please make sure to scan it so that we get the right size for next time because that's how we do meeting attendance as well. It's not showing up. Alright. I got plan b for your tickets. Alright. Cool. You don't know. Give me, like, 2 more minutes. We, we have 2 hours allocated and we'll probably be done a little early. Not gonna burning rush to get going. So couple more minutes. It just doesn't like that. Ruitt. Right. I have enough coffee. I think I'm awake now."
  },
  {
    "startTime": "00:02:06",
    "text": "Alright. Let's do it. Hey. Welcome to, Tiff 118. If you're here just for this, Welcome to the messaging layer security meeting. It's a Wednesday. I'm Sean? I'm Nick. So this is the note well. If it's Wednesday and you've been around, you probably seen it. If not, here's the some high level summary. This is kind of a process and procedure stuff for how we run working groups. What what what especially with respect to IPR. If you know something, you gotta say something. It's how it works. There's also like any harassment policies, code of conduct, etcetera. You have questions about anything, pass the chairs. We have other friends that can as well. And there's some note really well that these are virtual meetings. And, basically, doing professional collaboration, so try to treat everybody with respect. Here's some meeting tips. Again, like I said, please make sure to log in to the tool. That we can manage virtually remotely. Clearly, we're gonna need a bigger room for next time. We're getting standing room only. In remote land. So this is great. Some more resources, the general agenda, medeco information, other stuff. And here's our agenda. We're gonna do some re chartering discussions first, after we do the administrivia, They wanna talk about the working group IDs. And then we have some individual IDs and, for others that are on the that see their topics up there like Brita. Probably staring at the, like, what the heck are you doing, Sean? Or if we have some time at the end and you have anything you wanna say about something that we talked about last time, you can feel free to get up or not. So it's just kind of a placeholder for things we talked about last summer that was interest Is there anybody that wants to, bash on this agenda? Going what? Going twice. Sold. Alright. So this is where we're gonna have some fun."
  },
  {
    "startTime": "00:04:00",
    "text": "I'm gonna share my screen because one of the things that we've been pinned on is actually doing, Charter revision because we passed our area director what they thought about us just stopping a bunch of extensions now that we're done with version 1.0 of the protocol. And he said, you don't have to do a heavy lift lift of the the, shorter, but you do need to update it to, like, accurately reflect the fact that you've actually published a a version 1 of the protocol and you wanna work So I took a stab at this. And we are gonna try to do this in real time. And see what people think about these words. I know that this is probably gonna be overly painful, but one of the reasons why I wanna cause then I can send it immediately when we're done that we've got, like, some general feeling for this. So basically, what I tried to do was just change the Hold on. You're not seeing it because I'm not sharing it yet. Share screen. Except Yes. I would like to do this. This one, allow Great. And now you're seeing it. So before, it was just kind of like hey, you know, we're gonna do this. Well, we did it. So my theory was that we'd essentially start change the intro to say, like, know, we we published a protocol, and here's the RFC number. Here's what it actually specifies. So to make it kind of more of affirmative of what we actually did, And so I kinda blew away some of the background, like, like, the motivations for doing it because we already didn't. We don't really need to do all that. And then I kind of change the the text a little bit where I I, summarized Let me give you a second to read this before I just blow through. Can you can people see that? Take a second to read it to see if there's any, like, glaring objections"
  },
  {
    "startTime": "00:06:01",
    "text": "Alright. Going. Going twice. Alright. And then I had some more stuff down here. About, you know, why we developed it. We did this. You could argue we could get more of the background, but I thought, you know, whatever. We'll just leave Right. And then this is the tense change where while we did this, we specified these things. City, And instead of it being aspirational, we kind of actually did it is nice. Going once. I'm not seeing any, like, what do you do in Sean? Alright. And then at the end, this is kinda where I punted and just said, we're gonna do some extension Now I don't know what the ISG is gonna say, but but I I have this fear that we have a lot of extensions. Right? And I don't know how it's all gonna go. So I wanna, like, maybe not give a list. Because I think that that's better, but I don't know whether the ISG is gonna be a stickler about Hey, you need to give us some kind of sense of is this 2 or 30? Right now, we're kind of in the middle. So, we'll we'll see how this goes. And, I guess the only other question I might have for know, people that are doing the development is when do you think might be a good time to give a date for when we will be done with our 1st set of extension Does anybody have any feeling for when that might be? Like, In 6 months, in a year, aspirational, Ecker. Oh, sorry. Yeah. How was it? Yeah. Go ahead. Yeah. I was gonna say, like, this seems like TLS and other pro other working groups have been doing this for forever. So, like, really there's just some charter text, you can just copy and paste from there. Yeah. I mean, that was kind of the the the the"
  },
  {
    "startTime": "00:08:04",
    "text": "the check the text that I changed was the way I did it, but they basically just said maintenance of extensions. My concern, obviously, is the ISG finds new windmills, Delta, when there are new new members, and they have apparently have some new things that they'd like the tilt at. And so I'm just not sure what that is, and it it might be that we have to give them a list. So Well, I'm not in the ISG, but I'm gonna tilt this window. Okay. This has been an anti pattern in TLS and in SIP and, like, basically everywhere we do this, where there's, like, get the main thing that's important. And then, like, there's a rush of, like, frankly kind of irrelevant stuff that, like, nobody knows how to object to. So like, actually, we shouldn't do this. You should actually name the extensions, and you should be charter for new ones. Not just be like, We're gonna take everything. And, like, as soon as the queue empty the queue drains, we're gonna take more stuff. So, no. Like, you know, the ISG is a bad plan. Okay. And and and Yeah. Well, is that, I guess, I'll try it again. Because, like, what happens is that, like, their highest priority stuff gets done first. Then, like, is it attractive nuisance and more more, like, dumb stuff? It gets into the game. Actually, you're just like, I mean, I'm sorry, but just true. And so, like, yeah, sure, like, all these sessions before I finish up right now are awesome. In 6 months, they may not finish Fair enough. That's a good point. Daniel Clark Gilmore. I got to say a similar thing to Ecker, but maybe not exactly the same. I don't think you should list specifically the extensions, that you plan on working on, but I do think you should try to list some criteria about what you think makes a good extension And maybe that means it's an example list. Yeah. You know, including, like, these things, but you should say, like, What what kinds of things are you looking for? Are they authentication things? Are they usability concerns? Are you gonna say we're only looking at things that have deployment story, are you looking at ways to upgrade things? You know, the only thing you have here is cipher suites. Yeah. So only concrete Right. So so give give a rubric for what makes an extension that's worthwhile. Okay. That is great input."
  },
  {
    "startTime": "00:10:02",
    "text": "And as usual PRs are accepted on this particular, full request. Jonathan. So maybe an overly literal reading of what's written here would say that the extensions do not need a thorough security analysis says we did authority analysis. Now we're gonna do extensions. So maybe just say, and and we're still gonna do security analysis. Yep. Okay. Good point. Mister Barnes, Classic commune deco mute delay. Yeah, I agree with, Edgar and DKG here. I think the good thing here is we already have a bunch of stuff queued up So that, gives us we can kinda look at that and figure out how to draw the lines around it. I'll try and send some up here on this Awesome. And, again, there's a github repo or I dumped the this, I dumped the charter tech and a revision. So feel free to get in there and add your favorite extension and have debates about it. Frankly, we always knew this was gonna happen because we had an extension me in. That's the that the discussion has been like, well, what goes in this one and what goes elsewhere? Now we're just kind of, like, having that decision a discussion about that decision. So that's good. But I would like to try to figure out if we can time down this. So I would like to try to get this kind of settled by, like, December because there are extensions that we have a lot of support for that are kind of waiting in the wings. And so I would like to get a move on and get that done so we can try to try to actually get the extension framework document out the door. So text. Anybody else in the queue? Alright. And again, it's GitHub dotcom/mlsworkinggroup. To find it. And then you can find the working group materials page and then the working group chart. Alright. Stop with that. Now we're gonna give,"
  },
  {
    "startTime": "00:12:02",
    "text": "quick update, I think, Benjamin on the architecture Drafted, draft, And we don't have any slides prepared. Unless you wanna look at the GitHub repo. Okay. Actually, there is not much to say on the electronic events. It's mostly done right now. The echo opened a few PRs, recently that they need to review, but mostly editorial stuff. I would see anything controversial in in the things that I give you. So basically it's a less less less call on if you want something in, if you're seeing there is something that should be in the architecture document, should raise your hands and and tell us now. Otherwise, it's mostly gonna be an editorial paths and, and we'll be done. Yep. Awesome. I think we're almost there. Boy. So, I largely agree with Benjamin just said, and by the way, thanks for bearing with me as I sort of went through I did find a number of recommendations, which I thought were perhaps a little more optimistic about, like, the reality than reality. Know, to give an example, like, know, you should start to keep your security. You're you're signing keys like an HSM. I mean, people do that sometimes, but, like, most institutions don't. So, like, I think I filed a bunch of issues for these. I'll let the shares manage it anyway. Please we should probably, go through these and make sure that, like, you know, there's nothing where, like, like, we should, like, just close close them one way other. Isn't there one? I think there's one thing we should discuss here which is, this issue 210 which is about, the recommendation that the group operation should be encrypted And Mhmm. On, so like, I don't feel fine with the fantastical perspective, but, like, Mimi is, like, definitely not encrypted them. And so the IT actually have a consistent position on this topic. Mimi is not encrypting group operations as I understand it. Misunderstand that? Maybe is gonna group operations. Won't discuss this. Okay. So or you mean later in this day? Okay. Both"
  },
  {
    "startTime": "00:14:00",
    "text": "tomorrow in in that's okay. So my point is merely we should harmonize Mimi and NLS one way or the other. So, if if we're gonna resolve it, me, me and I'm fine. So I kind of have an opinion on the general remarks that you made on on the recommendations. I think most of them should just be attenuated into notes of something like this instead of just recommendation. Sort of makes it clear. Like, what I wanted is to have the information that you know, you should if you can, if you have the ability, you should put those keys into SQL or whatever mechanism that you think is, is safe is more secure than just, like, put it in since as well. But maybe you're real right to should attenuate some of the recommendation as notes or something. So so maybe sorry. But No. This is what the time is for it. Alright. Sorry. No. I just time to get the kind of that sounds fine. I guess what I would suggest is like, which would have been your lack of workstation PRs, but anybody who I wish anybody who, like, felt strong with recommendations should go look through that list of issues. There's one that you think we should not attenuate? Like, does that just know as we're gonna attenuate it? Because, like, get it otherwise, we'll just go ahead. Just to confirm, Sean, there is no more that the know, this, like, there is no NFC language for in the architecture doc, like these this there is no mess. There is no shoot. So, I mean, you can do should with lowercase, and they're supposed figure it out. And then as we go through the process, people will will ask you, should it be should it be capitalized? And we'll just say no. So recommendations are really Ken And in the Yes. And then whatever the joke RC that we're doing. And occur, I guess, too. So, yeah. Yeah. Steve Austin. That's right. I remember Steve was on there. So, basically, there's these 22 open issues that you're talking about, Ecker? Well, the half of those are discussed issues that we could actually Yeah. Actually, the the area directors reviews are mostly done. Yeah. They should be done. It's just like, before closing them, I want to have the full pass on the the full editorial pass on the document. It's 2 20 sure nars"
  },
  {
    "startTime": "00:16:00",
    "text": "basic basic don't lose some weight at somewhere for the a couple of them are just, like, ideas or something to try to say. So I'm trying Okay. Okay. Awesome. That's what I'm hoping for. As my heavy reveal. Sure. Great. You can see, get in there. Mix it up. If you're trying to figure out how to contribute in the IETF, this is one way to do it. Get to the repo and read stuff and comments on it. So I think we are trying to push it by the end, beef before the end of the year, right, So, like, if you want something that just because if you want something, it's best to provide text. So let's just say that. Yeah. Cool. Cool. Alright. Great. Yeah. That's cool. And I'll stop sharing. Now we're gonna try to go and switch to extensions, and it's still not there. What a pain in but but but but Alright. I have a backup plan. Go back here. Alright, Rafael? I'm gonna be running the slides. So let me know when you wanna go to the next slide. Okay? Yes. Alright. So, this is actually just a continuation. From the MLS extensions document that we talked about in San Francisco. So I'm Rafael. And so in the past months, we've been working, on what called safe extensions. It's a concept along with Konrad, Joelle, and, Martha? Next slide, please. Just a little recap what happened in the documents. In San Francisco, we proposed the last resort key package extension then, Rowan proposed the Served Remove proposal, as a separate draft initially, and that made it into the document now."
  },
  {
    "startTime": "00:18:02",
    "text": "The safe extensions API, which we're gonna talk about in a minute, And then also new AINA registry entries for the use by extensions. Next slide, please. So to recap for those who weren't there, what the last resort keypad should key package extension does it's literally just a marker for key packages. So it became common practice with, messengers that use the signal protocol or similar protocols, to have last resort, pre keys, that case, and the equivalent of pre keys in MLS are key packages. And so the idea of a last resort key package is that it is a key package where the the the private key that corresponds to that is not deleted immediately and can be reused multiple times simply because clients don't always have the capacity to generate so many key packages ahead of time. Will never be depleted. So when it comes down to the last one or a small set of last ones. You can call those last resort key packages and and use them multiple times. And the idea here is simply to mark these key packages, with that extension that doesn't have any further payload and the benefit of that is that everybody knows that it is a last resort package. Meaning, the server is not going to deleted, zip might be doing, otherwise. As soon as a client has fetched it, side. Planned. And, on the other hand, It's also signed. So we get authentication in that. And it's also transparent to other members of the group that that is allows or key package and potentially if there's some policy around that, that could then be enforced. Here. Sorry. Trying to do too many things uploading slides."
  },
  {
    "startTime": "00:20:00",
    "text": "Trying to remember what's on the next slide, but I don't. Sure. This one. Apologies. Failing miserably. This one. Right. Yeah. So, yeah, that was it for, the last resort key packet extension. So if removed proposal, Ron already presented that last time in detail, this is just a little recap. What it does, the fundamentally, it addresses a problem that when you allow external commits, it can be a conflict when members try to leave the group. Because They cannot commit to, their own, leaving the group essentially, that can only do a proposal. That proposal cannot really be honored in an external commit. So this extension essentially remediates that problem. Next slide, please. Right? So I will briefly talk about the threat model or the problem statement of the safe extensions, and then Conrad is gonna present the details. So this is not the usual threat model in the sense that it's not the usual attacker. But I thought the name was still fitting here. So what what problem are you trying to solve? We have different actors. So we have the MLS protocol spec authors. And typically, they would also do the MLS implementations. Then we have authors of MLS extensions as we see now. Those are not necessarily the same ones as the protocol spec authors, And then we also have application developers who want to use MLS in an application. And so They might be interested in more than one extension. And these extensions might come from different extension authors."
  },
  {
    "startTime": "00:22:02",
    "text": "Another quest the first question is, of course, will these extensions themselves going to Are they going to weaken the security guarantees we get from them or less? It might be the case that the extension authors are not you know, knowledgeable about every aspect of the MNS protocol and, you know, Might might have done something that's that we can security guarantees. So that that's one one of the issues. And the other thing is that's, the extension authors might not know each other, and they might have designed the extensions at very different times. And then these 2 extensions Let's call them nd here. Fundamentally not really compatible with each other because they invalidate something. From the other extension. And so The the problem is really, for the MLS implementer for the application developer understand, what can I use, actually? What's compatible? And and what do I need to be wary of in terms of security? So, yeah, that's the threat model here is actually what the attacker is MLS extension authors more or less. Not necessarily malicious ones, obviously. So, yeah, I think on red, then you can talk about the details. Alright? Right. So the safe extensions API is essentially just an interface for an extension that's developer and extension developer to interface with, the main MLS protocol and, we just, for convenience, we call an extension that's only x interacts with MLS through this API a safe extension. And as Rafael alluded to. So the the goal of of the API is that safe extensions don't break the security guarantees that the application otherwise gets from MLS."
  },
  {
    "startTime": "00:24:01",
    "text": "And, also that's multiple safe extensions interact with M and S in such a way that don't break the security guarantees of other safe extents. Right. And so if if you want to take a look at an example, I'm not gonna go through it here, target messages extension we've changed in the extension documents use the safe API. A few. Yeah. I want to let take a look at an example. Could you go to the next slide, please? Right. So concretely, the safe API is is relatively simple, it allows, extensions to use any public key material, from from the, from the MLS group space, so in particular, you can do HPHPPE operations. You can do the extensions. You can do signatures. They can export secrets and they can inject PSKs. And it's, kind of made safe by the are kind of the main separate by the extension ID. And that's really all those, to it in this context. What we haven't done yet and what we want to do next. Is also include interactions with, actual kind of extension data. So if you think of contact extension, so kind of an extension that has data in the main kind of group state. Then right now, there is only one proposal called the group context extension proposal that can just since you're right, to the whole, to the whole state. Like, writes the whole the the state of all group context extensions. So if one extension wants to change its state, going to have 1, group context extension proposal and then could also change the state of another extension in this context and our goal is to kind of allow more fine grade control through proposals that"
  },
  {
    "startTime": "00:26:01",
    "text": "each extension can then, define. And then each proposal can only change the theta of the specific extension that it defines kind of get some sort of accents control on the state in the group context extension. Of and then thinking a bit further, this might actually remove the need for a group context essential proposal entirely because extension can manage its own states kind of kind of in a more fine grained way rather than you know, just writing to the whole state of the group con extensions. And I think that was it. Okay. So I have a naive question just to jump the gun here. I'm a spec writer. I'm not writing any code. How do I first thing that I'm gonna ask is how do I get my extension to get past this. Are you basically saying that when we assign the identifier for the extension, that's the thing that's used to say whether or not processed or, like, would would be able to flow through this API to work. So the idea is if you have such an extension ID, then you can look at the API and provides a number of functions and every time you have to plug in your ID, long as you do that, You're fine. But you get an ID through writing in our through writing an internet draft and going through the process and going. So we're essentially using an IANA marker right, is the way I put it as a way to get in or out. So it's a little bit like it's more than it's like a recommended flag kind of in the TLS sets. Right? Yeah. I mean, you can also need to apply that. Everything if you don't want to. Yeah. If you don't care. I just I just wanted to make sure I understood that there wasn't some, like, you know, my extension is being thrown into some formal proof and then out comes pops magic. No. No. Alright. Well, I just wanted to make sure there wasn't something I completely understand. I wish. I wish. Yeah. Okay. Fair enough. I should be thinking of this as sort of like TLS Explorer Labels. Where there's key separation based on the label. Yeah. Pretty much. And this is just key separation or you know, domain separation or generally by the ID of your extension. Thanks."
  },
  {
    "startTime": "00:28:08",
    "text": "I'm I'm just a little bit con this is Daniel. I kinda go more. I'm a little bit confused. At the first bullet point on this slide here, Brett says public key material from the end protocol, HPKE and signatures. Are you saying that it can encrypt invalidate, but it cannot decrypt or sign? What I'm just trying to align because I thought you said that it could make which would not become good good point. So the the the the bullet is is incomplete. They can also sign and Okay. And decrypt. Yeah. Okay. So see what key material as well as public key. Yes. Okay. Stacker. The secret commissory, presumably, is domain separated, so it doesn't really matter. So they don't get direct access to the key material, but they have an API through which they can do signatures and decryption and stuff. Yeah. Is there something special when you think about because this is a group agreement that the extension is in use, or is that just sort of given to us by MLS. So, I mean, the safe extensions that work like any other extension, it needs to be advertised in package that is supported by our clients. So in that sense, it's not different. So two questions. Yeah. So so you have a agreement from MLS that it exists. And that everyone agrees on what it is. Yeah. Absolutely. I mean, to to to go back to Sean's question, the the process is the same as with any other extension. The only difference is that if that particular extension claims be a safe extension, then it needs more scrutiny. Essentially to make sure that it does use the API as intended. So not remembering all the text when we set up the range of extension points, there's gonna be some part that is, like,"
  },
  {
    "startTime": "00:30:00",
    "text": "first come first serve, and there's gonna be some part that's gonna be designated expert, and there's gonna be some part that's gonna be come back the working group. Right? So that's where you'll you'll get the review. So you'll force people to come back. Yeah. I mean, this should go back to the the working group and or designated experts. A what's not like Yeah. Okay. Well, we'll we'll find a better way, but I guess the the point is if you're gonna get this marker, you're coming back working. You have to go through the working process to get through the through the door. Okay. Is that something that should be in the draft, actually? Yeah. There's there's the dynamic consideration where we'll eventually get to that point where we put the text in, and it says how you how you get a co point in Slack. We don't have to do it. Red here in the self extension. Not today, but, no, we'll we'll have to do it at some point in the internet draft. Defined safe extensions. Yeah. Thanks. Hi. Rowan Mae, I just wanted to add, that that that in the in the draft, but not mentioned on the slides is that there are 3 different kind of variations of sort of styles of proposals, and there's also credential types. A a a available as extensions. I think that's on the next slide. Could you go to the slide. I think that's somewhere in the slides. Find a rate guess. Oh, yeah. So Thanks, Rohan. That that's the kind of the next thing. It's it's a good segue. Thank you. It's not exactly the safe API, but, what we also added to the extension document essentially So right now, if if if you extension developer, you want to use your own credential, going to use your own proposal or, you know, another wire format. You have to not only register your extension, but you also have to register and Anna entry 4 whatever proposal you want to define, etcetera. And the idea here is that there is a thing called an extension proposal extension credential, extension buyer format, that has a a field called extension ID and then just the contents or pay content data fields, And so if you have an extension, you want to use a proposal. You can just use the extension proposal. And then slot in your extension ID"
  },
  {
    "startTime": "00:32:02",
    "text": "and whatever data you want on the proposal, course, you have to define semantics for the proposal, but you don't have to register the proposal as part of the IANA. don't have to go through this in a process. You And, yeah, just to make it a bit is is it's nothing to do with safety or anything just making a bit easier on extension developers to use proposals, use credentials, etcetera. Okay. Stephane? Hi. Yeah. This is Stefan Fries. I've got a question to slide number 7. Was one question to that that one already So you mentioned public keys and access to public keys via the API. So you said that the access to those keys be done via the the API And you also mentioned, secrets, but the second point reads export secrets. So that means that, the corresponding private key would be able to could be exported or or Which which type of secrets are you referring to here? I think this refers to the exporter functionality of MLS. So that you can export secrets, through the exporter. Not not the secret key material used for HBK. Okay. Okay. Okay. Thanks. That makes a queue. Yes. So I wanted to quickly mention something that that I think might be important in the future about the safe extensions API. Especially in the context of platforms that are gonna possibly implement this across, you know, all the way to the web platform. And I know there's those to be very careful about, like, we won't have the ability to extend the APIs for arbitrary extensions. Right? Our set of extensions that we'd be able to handle team APIs and there are a bunch of extensions that that would require our new functions that some platform would would be able to implement and some platforms won't be able to implement."
  },
  {
    "startTime": "00:34:03",
    "text": "Especially, I think, like, OS is of more flexibility than the web platform for this. But I wanted to mention that, and we should be very careful about that. Up, I I think, it works in the sense or it it's conducive to what you're trying to achieve in the sense that as Connor just explained, rather than registering individually extensions for credentials and proposals, etcetera. At the IANA level, The only thing you register here is the idea of the safe extension, and then you reuse what's already there. So, To me, that sounds like it would be a lot simpler to support that, in browsers specifically. Thanks. Alright. So we did that one. Slide. So, yeah, I'll talk about the the next steps, but maybe also to answer a question that Ron just, brought up in the chat earlier. So This is not, you know, get out of jail free card for security analysis. It's it's like it's very well determined what you get from it, but it's can still come up with a safe extension that does something completely stupid. I'm not secured at all. And so, yeah, you still you still need a security analysis. So, yeah, what are the next steps? Can I already said what's gonna happen for safe extensions, like better suppression and address feedback? As well. So as we were designing them, there was some initial feedback where we saw that it didn't work. The way it was supposed to. And so we expect maybe to get some more feedback or run into more problems. As folks start to look at safe extensions and, or actually author some of them,"
  },
  {
    "startTime": "00:36:04",
    "text": "And more generally regarding extensions, In San Francisco, we had a a long list, so I wanna go back to that. Again, so this is also now interesting in the context of What exactly are we gonna do? Yeah. There are 2 of them or 3 of them that are essentially in the works, and Ron, I think he's gonna talk about the Mimi related extensions in a bit. Anyway. So the obvious dependency here is Mimi. There's not so much that can be done in the MNS working group about that. The other two, I want to go over really quickly use the trees. You probably never heard that particular term, but it is something that we had in the protocols back at a very early stage and that was the concept. I think it even came from the the art proposal before we had 3 chem. Where you could, in a multi device scenario where users have than one device. You could actually sort of hide that from the rest of the group. And the leaves that are typically clients in MLS would essentially the, represent a user and then users had a little subtree with all of their devices in it. That subtree is not really visible. To the rest of the larger group. And the, like, conceptually the root of that subtree then becomes the leaf of the supergroup. And so didn't keep that in the protocol spec because, Not all aspects were entirely clear. It was slightly more complicated than what we have now. So I think we got rid of it simply to simplify stuff, and it wasn't clear whether people actually wanted to implement that, etcetera. However, we took a look at it again. And it does solve a number of problems in some, deployment scenarios."
  },
  {
    "startTime": "00:38:04",
    "text": "One huge advantage is that it's most likely going to be much more efficient than what we have now. For two reasons, a, the groups are smaller. Simply because you don't have the devices at the leaf level anymore. You only have users. And secondly, there will be fewer blanks because on average, there will be more updates per leaf in a supergroup. Simply because it's not just one client, per leaf, doing an update, can be multiple clients that can do an update for the same leaf. So if updates happen more frequently, you have less blank symmetry. So, obviously, the gain here is less payload and less compute. And now, Richard, is your question regarding that particular bit? And we can take it now. I was gonna make another point as we are working on, updating the charter to have some of what's in and what's out. We should maybe be a little bit careful, but not write everything in the universe into this document. Okay. So I'm so short. This is being worked on. And the other thing that has been around for a while really is deniability. And so We had 2 sort of competing concepts there, one that was rather minimal that would only give you the liability for application messages more or less. The other one being more comprehensive, however, being not very efficient. Now if we had this user tree extension, then those efficiency concerns would be a lot smaller. So, yeah, this sort of motivated us to work on that again Then, yeah, hopefully in the next months, we can present something on that."
  },
  {
    "startTime": "00:40:02",
    "text": "The other extensions, encrypted group context extension were things that were ideas that were floated at some point. So post quantum optimized mode, application messages from external centers, etcetera. To my knowledge that's not being worked on actively, And, yeah, but I included them on the list because we had them previously. Yeah. So, I mean, to Richard's point a little bit, you know, the the list, we're probably gonna if they're not actively being used and we're updating the charter. We'll probably not include them. And so that would mean we'd have to re charter. Maybe that will be the impetus to get people to write something really quick. But since it's about the same six people that are doing most of this stuff, I don't know what their workload is So I think we should just be realistic and to know that the, you know, the world's not ending if it's not in the base in the in the base document, we can always update it. But I guess one of the bigger questions we have is there's some mini related extensions. Are those extensions coming here, or let Mimi do their own the extension definition. I'm looking at the chair of Mimi. One of them is shaking her head like hell no. We're not doing it or So, right. Was gonna address that in my Okay. Alright. Cool. Got it. Good. So, yeah. Alright. We're thinking along the same lines. Alright. So thank you. Cute. That's it. Right. Great. Go to the next set of slides. I have uploaded these. They were sent mid. That was why I had one of the problems, are up now. Hi. I'm Rowan. Okay. So there is one there was one issue that I created on the self remove proposals in the MLS extensions document, which is that As written, self remove still doesn't allow a user to do an comic remove of all of the user's clients. So what can the user do right now? So"
  },
  {
    "startTime": "00:42:02",
    "text": "option 1, a user's client that wants to leave a group it could send, a single commit with removed proposals for all of its other clients, so that it can it can definitely commit that and ensure that they're gone. And then it can send a self remove proposal and Well, it should be gone. The next time some anyone does a commit. But that leaves this awkward period of time where the user has one client, but not all of its clients in in the group. The second option is a user could go ahead and send a stack of removed proposals for all of its other clients and a self removed. Proposal for itself, and just kinda cross its fingers And, hope that an external com commit doesn't arrive because of an external arrives, then the self removed proposal will be incorporated, but the removed proposals cannot be incorporated the way the spec is written right now. Bomb. So what's what what are what could we do if we wanna solve this problem? So option is we could We could Add to the self removed proposal. So we have a list of leaf indexes, for example, that you that you can remove if they correspond to other clients of the same user. They would have to have You would have to have some way of verifying that their credential corresponds to the same user and option b is we could change the behavior of of an external commit in the presence of self remove to violate the, you know, 2 contradict what it says in the spec. Were allowed to do in extensions. It's just that then this is no longer a safe extension. So"
  },
  {
    "startTime": "00:44:03",
    "text": "if anyone has any immediate feelings about this, feel free to speak up but, also feel free to just comment on the GitHub issue. On the extensions draft. Yeah, I I think you're absolutely right. This is the problem that we should we should address. I'm not sure about option a, adding new indices, then kind of we introduce this kind of notion of a user or associated clients to MLS. I'm sure if we want that maybe as part of Mimi where not from user exists. I do like option option b. So, yeah, I think ideally with an extension, we should probably soften this kind of restriction on the external commits, I think the only thing with the external commit, the remote strip fine, but we just have to be careful that the external committer is still able to somewhat, you know, verify their proposals, and in this case, it should be fine because know, modifying the group setting can see the group set, but Yeah. Yeah. Shouldn't be we shouldn't be too liberal with the the external commits. Yeah. Yeah. Just for a sec of completeness. So It's not like I'm strictly against that, but it does open up more problems potentially. So what you can still do today is that I think in your example, Alice removes all of her devices first in a commit immediately sends the self remove proposal you know, bundled without commit to the DS. That is not going to separate them. And other, like, reject both or accept both. So in that sense, from Alice's perspective, it's still a one shot operation. In that sense. And you could do that as it stands today. So Okay. Yeah. I could I can write some additional comments about this stapling option in the, in the issue let's just see what everybody says"
  },
  {
    "startTime": "00:46:00",
    "text": "Alright. Discussion broke out. Alright, Jonathan. Sorry. Gotta scrum at the money. I know. It's great. Yeah. This is a I haven't read you a draft. I'm sorry. Is this muted by user trees? Like, does user trees just solve this by the fact that Everyone's just hidden behind one identity. Yeah. But we're a little far away from that that practically, I mean, maybe in a year, we'll have user trees NOK. So I'm just trying to think about the application contest in which this led as opposed to the cryptographic context which is to say The benefit of removing yourself from the group is other people, not you. Is I don't particularly get any particular benefit from moving stuff from the group. But, you know, if I don't wanna get the messages, I just tell the application to start sending it to I And so, and like, This all seems fine, but I guess in an application, it seems like when you want is other people to throw you out rather than rather than, rather you to remove yourself because you can't become No. It's that you want when when someone else looks at the roster, if they see that you're still in the group, that, that. That when that they have the expectation that they're gonna send message it's gonna arrive at all your devices. And if you're not and if that you don't appear in the list that it's not going to arrive at any of your uses. Well, I think this but I think this goes back to the conversation where we haven't had a Mimi about the the application of the browser, the MLL structure. Like, like, I mean, I I guess, again, like, it just seems like that that you know, like, the the 2 generalist problem here. Which is, like, I'm gonna send this and I gotta sure it gets processed. And etcetera. But from the perspective of everybody else, like, the thing I want is, like, I'm out of the group and then and now that's seeing me, like, another little thing. Right? Does not depend on this stuff. That depends on anything else. I am"
  },
  {
    "startTime": "00:48:00",
    "text": "It's correct that I can go and ignore the messages on my side. So for when my client, I can make my client ignore messages that I receive I've decided to leave. No. No. I mean, I tell the application told the I told the DS not to send them. Sorry. I'm gonna tell the DS not. I'm gonna tell the DS not to forward them. I mean, like, for like, like, like, think about, like, what happens in non in cryptosystem, Right? Sure. Sure. Sure. And that also and that also know, But you asked the question, and I said, it's for everybody else. And so for everybody else, the idea is that if they you know, that the intention is in whatever kind of system this is, that that All of these clients are disappear from the list that everybody else sees atomically. So when when somebody else looks at their at their notion of the ratchet tree, they see all of the all of these clients disappear together. Or not at all. But I I this is like what I'm pushing on is, like, that is that, like, the notion that, like, they look at the ratchet tree, I think, is incoherent. Well, the yeah. I mean, the way that it's presented to the to the user in most of the systems is you see, roster. No. I I, but my my my point is that what causes I understand what you're saying. And what I'm saying is is that when I send the message to the on the application level to evicting from the root for the victory from the group, That should try that should cause their roster to empty me out regardless of what happens trade, and they're actually just using it backward, backward. And the idea that I've, like, said, the idea that, like, what I've said at Vicky for the group and, like, I'd get elected to send this as a date mister that I shall start with the roster's walk. Okay. So I guess I'm charging the use case now. Like, the Right. Okay. So that is, I think that's more appropriate for discussion in Mimi. But, you know, definitely like you should put a link to that discussion in this issue. And maybe that issue will resolve in a way that requires us to do do no work here. Okay. This is Dan McCon Gilmore. So, I feel like I continue to beat the drum that"
  },
  {
    "startTime": "00:50:01",
    "text": "individual users separate clients, showing up as separate clients, but being tied to the same user has problems. Has metadata leakage problems. This is yet another problem with it. Or what you're describing in terms of what the user experience is is that Oh, well, the person is just not shown in the roster if you know, if they've removed one of their clients, is Well, but but the point here is that that this removal will not be atomic. So maybe one of the clients won't be removed as long as the other folks are still encrypting to that key, That's a ghost user. Which, we do not want to create So, you know, These are more problems that are chasing down this issue of exposing the fact that there's an you know, that there's multiple clients per user to the other clients in the group. So, you know, that that we we continue to pay the cost for having made that decision. Of of exposing it. And I I What, what do you propose that we what, what do you think is a long term solution? Like, Just print it. Sounds like user trees. You just Sounds like user trees might be the long term solution. Mean, yeah. Yeah. Okay. Of I mean, I think we agree that user trees is an excellent solution to this, abstraction problem. We wanna do something else in the meantime? Maybe maybe not. Okay. Okay. Okay. Next slide, please. Okay. Okay. Okay. I I wrote a short draft and this was this occurred, you know, just kind of as extensions was being updated with the software move API and basically, this is proposed extension, that would restrict the use of a key package to a specific context. So what do mean? I mean that The issuer of the key package wants to be able to communicate I issued this key package."
  },
  {
    "startTime": "00:52:01",
    "text": "And I only want Joel to use it. Or I only want it to be used for this specific MLS group that somebody invited me to. And I think that that's gonna be kind of broadly interesting and useful. And I just kind of threw a couple of ideas as, you know, Here are some of the things that you could do with this. You could use it only to join a specific stimulus group, you could assess say that it's only meant to be used by a specific Ader. That has a following user identity or something like that credential that you could only use it if the adder is in the specific domain, or if it's they only have a specific public key. Right. So think this is useful kinda like to add this into the extensions document Is there any strong feeling on this one way or the other? Can you maybe give an example where you would use this and what the benefit would be. Yeah. So I wanna issue a key package that allow that allows the, that it's associated only with a specific analyst group. So if I hand this know, if you if, I Conrad, if you asked me for a key package, I can say, here's a key package, and I'm only going to I'm only going to respond. If I get a welcome that's for this particular room, I'm going to process it. And, otherwise, if you send it to to your spammy Bitcoin group, I'm going to, I'm going to, you know, immediately leave the group and throw it away and ignore all of the message. I suggest. Go ahead."
  },
  {
    "startTime": "00:54:04",
    "text": "Real customer. I from my understanding, this is, this proposal is supposed to be, access control mechanism. Is that correct? It's a way for so that the access control mechanism exists with the client who issued the key packages. It's a way of communicating their the intention of the of the client that generated the key package. Okay. So, if if, like, the this is an extension. So if like, the a certain, like, MLS implementation does not support this extension, like, Is it, like, is it, is that implementation, like, able to, like, ignore what it will ignore the specific context and, like, context and, like, use it in a use the key packaging of wrong way. It's up to the client who generates the key package, Whether they list this extension as a required capability, I believe. So if I could, I could issue the key package extension out the require without it listed as a required capability. And then If you didn't understand it, you could ignore it, or I could list it as required capability. In which case, you would see the required capability and then following the base spec, you would say, I don't know how to process this key package. So oh, yeah. I'll I'll just I'll, like, continue to, like, read the document and like, if there's any, any anything like I can't, like, also right now, like, or, like, ask right now, I'll I'll I'll ask him the mailing list. Thank you. Thanks. Richard? Thanks. Yeah. So I I actually skinned this just this document just now as I was trying to figure out what Charter detect what scope to put in a new But, one thing that was unclear to me looking at the document was what your enforcement model is supposed to be. Seems like if you want, a key package to be only usable with"
  },
  {
    "startTime": "00:56:03",
    "text": "group, you, you would want the, the members of the group to enforce in an add with a non matching key package is invalid. Is that what you had in mind? And and so I think we probably need some text and documents to operate Yeah. I was thinking that the that the generator of the key package, the client, which generates the key package would be you know, basically primarily responsible for enforce for enforcing this. But, what you're what you're describing is that a commit arrives which doesn't which which conflicts with the, the desired usage, and everybody else would see that as valid unless we wrote some language that said everybody else has to has to say, no, that the this ad is invalid. Is that what you're saying that if I publish a key package, that says please add me to this nice polite group, and instead you get that gets used to add me to a spammy Bitcoin group. That'll all work but, it's this is a flag to my client to, to recognize that I have been not And I I wasn't supposed to be added to this group, and so that I can then like, automatically leave or something. Yeah. I I I think in this case, I don't think it's really necessary to do this for everybody else because if I do get the if I do get a welcome with this key package, private key, then I'm just going to go and remove myself, and so it doesn't it doesn't really affect the other the other the other clients really need to take no action. My opinion, That that seems like a lot slower and more complicated and more error prone. At least for the cases like, you know, where you know the group ID and you do, just do an exact match. You go ahead and enforce, and the enforcement is simple. It seems like you're reading a lot simpler and more effective, so just be proactive like that. Again, for for those cases where the terrier or clear. Yeah. Okay. Rafael?"
  },
  {
    "startTime": "00:58:08",
    "text": "Yep. I just want to state that this is generally useful mechanism in my mind, and to offer a more concrete example in addition to yours. We also discussed that in Mimi So MLS allows you to add someone to a group long as you can get your hands on a key package. That's what the protocol does. That's not how most messengers work. So in order to address spam, for example, It might be really useful to you know, have a mechanism where Other even other clients can see that that person should not have been added to the group. And one way of doing that is to mark key packages, create 1 to 1 connections. Between two users, And the other kind is for actual groups, actual group chats, And so you know, a commit that covers an ad with the wrong type of key package would be rejected not only by the DS, but also by all of the client So that would make that mechanism a lot more robust. Okay. Correct. K. I just wanted to get go kind of back to the think the first comment with regard to access control So the the required extensions, extension. It capabilities? Thank you. required capabilities required A group level thing. So you cannot put, something in a key package that says I require the group to support these extensions. So just kind of to highlight as a as a limitation of this thing. It won't work in groups that actually have this extension in them because I read the spec correctly, you can have a key package in a group that has extensions in them"
  },
  {
    "startTime": "01:00:00",
    "text": "and it that that are not known to the group that are not, you know, supported by the clients in the Right. It won't work for other clients to do something in the group I can still act on that on my own client when I receive a welcome If you support the extension, yeah, I mean, I generate the key package. So, obviously, it's not But, I mean, if if someone would would the the scenario that Rafael just sketch where someone would take that key package and put it into another group but that group doesn't have, like, doesn't support this extension, it won't do anything. Just for the other users in that group. Yeah. Yeah. Britta Hill. So first of all, I can see a lot of value in the sort of access control features of this. I'll add a caveat though that this does mean leakage of a lot of metadata. So, basically, anyone who can see my key packages can get information about my intended use of them less and where I want to be added or not added and so on. So Although they're certainly be use cases for this extension. I would say it should be done with a So warning label that's that needs to begin into account. Okay. I can I can add that? Alright. We drained Next slide, please. Near Okay. So this one is about extensions for me. So this is sort of a heads up. Mimi is planning to have some is planning some stuff that would that is likely to require some extensions. And I'm gonna sort of sketch the current thought about that. And So my understanding of the charter is that Mimi is not allowed to to create MLS extensions. Can reference them. Did I get that right, listen? K. So, how did you guys manage to get that to happen so we have to do your work?"
  },
  {
    "startTime": "01:02:02",
    "text": "We have enough work to do. So, currently the the, the proposal that's that was that came out of the design team is that There's this notion of of, room state. Which consists of both room poll room policy which changes relatively infrequently. Like, that may never change for the lifetime of the room. Like, this is a member's only room, and you need to be an admin to admin room of users. That's an example of a room policy. And then you have a participation list which lists the users who are actually participants in the room and what their roles are. And So the the sort of straw person plan we have is that if you wanna make a change to the room policy document, that that is sufficiently a big deal that using a group context extensions proposal which requires an update path, is that's a perfectly fine, you know, infrequent enough action that causing an update path is not, is not a problem and life is good. But if you're just making changes to the participation list, particularly if you're adding users to the participation list, we don't want to require an update path every time that that occurs. And so having a, And also we this, This is information that the intermediaries want to be able to act on because they may have control to allow messages to flow or not flow based on this information. And so sending this as a new proposal type which does not require an update path. That says this is a modification of the participation list. In this case,"
  },
  {
    "startTime": "01:04:00",
    "text": "add you know, at Bob as a participant to this room. So this is kind of what we're what the current thinking is, please go and look at this the specific idea in Mimi, please comment on an in Mimi, but the idea will be that kinda once we come up with this is what what we would like to do, then these proposals are gonna have gonna have to be incorporated here in MLS. And I'm just gonna point out that the way that we've kind of formulated this now, the participation lists proposal that this it looks like it would be a reasonable, safe extension. The one caveat there is that we have both we're sort of treating both the room policy and the participation list as part of the same room state, and the same group context extension that is only being somewhat modify. So the, basically, the way that group context extensions works right now, the, of the group context extension proposal, only modifying a single you know, sort of a doing a bulk modify of all of the group context extensions. That's not really what we want. In Mimi nor really anywhere else anomalous. So kind of a you know, I another reason why we need to fix this problem in MLS. So Now that Ecker's left the room, I can ask this question. So just totally kidding. His proposal for the charter changes was to be very puts it in recharter every time you need an extension. This looks like a get at a jail card for you guys for every every month to come up with a new extension and come to us. Are we gonna be forced to re charter every time?"
  },
  {
    "startTime": "01:06:01",
    "text": "Like, is there is there some point in which we know that these things are gonna be He's like, I'm I'm okay, Richard. So Yeah. No. I know. I think that the sensible bounding box we can draw is whatever Mimi needs. And then we can trust the sensible Mimi chairs to keep that, within reasonable bounds. And so not let everything in They caught me buying my bid. Or you buy me beer and it works out. So, you know. That's a lot of trust. Alright. Thank you, dude. Okay. Note that I said Vimi chair is not ruined. Next slide, please. Okay. This is more update than two more slides, and then I'm done. So last time I post this new cipher suites based on the existing hybrid Tim, that has already got is already in the HP PKchechem Registry. In registry. And So Niss announced recently the they they announced that there is now the mlchem fips 3 fits something standard. That, is this post quantum belief to be post quantum safe, cipher suite based on, based on the hyper algorithm. And it has some minor changes from Kyber. Now, I have not had a chance to go and review these. I understand that some of these were already anticipated in the in the implementation because the authors already had the heads up from this the changes were going to be and already incorporated them in some stuff. So, we need to ref make the appropriate references to the appropriate other documents that define the HPK the HPK CHEM,"
  },
  {
    "startTime": "01:08:02",
    "text": "and we wanna reference it with the correct name. But at that point, I would be very interested in calling for adoption and asking the working group to accept this as a recoup item. Yeah. So just to recap, right, we already did talk about this draft last time, and there was definitely broad support for it. And so when we actually get to the part where we've we're we're allowed to accept extensions. This will be part of the the onslaught of messages to the mailing list about this, and then you can change all the you can feel free to change the name the actual text of the document, but you can, like, actually, you can get rid of Kyber in the actual draft name that you submit and called animal camera or whatever you wanna do with kind of the plan. So, yeah, it. But, that's And and to be clear, this is just this is only that This is not like the solution to post quantum. This is a solution to the harvest now decryptedator or a solution to harvest now decip later, there are others solutions, which are much more efficient that are more complicated that are have already been discussed various members of the working group and, you know, stay tuned. Yes. Yes. Benjamin? Quickly, this is a cipher suit, not an extension Correct. Essentially, yes. Yeah. Yeah. So so that seems fully in control. The question I I should ask right now is, like, mean, we don't the current assumption is that signatures are with an algorithm that was safe. More or less. But that sort of works. Right? Like, obviously, we should But do you think we should start looking at signatures in general? Because the intuition is that signatures would require much more changes to the protocol then. I feel like that's a CFRG question. Yeah. But that's all over it. Well, I don't get you sick. It's a I get you assume you have a signature, mechanism that speaks Like, oh, does it affect the protocol?"
  },
  {
    "startTime": "01:10:01",
    "text": "It does affect the protocol quite a lot. Right? I think before it affects the protocol, it will affect the credentials. Because the credentials can be longer lift and, I mean, in any case, the the credentials will certainly be affected, But so the question is more like one is a good idea to stop looking at it. Yeah. No? Yes. Fair enough. Yeah. Okay. We can we can stop looking at it then. Alright. Joel? I was so this is Joelle Owen. So, I think the CFRG might be working on their own version standard of Kyber. And I think there might be end up with some deltas to the missed one. Maybe maybe not, but either way, it seems like maybe that is a blocker for a final adoption for that. You have you thought about that? Or Yeah. So, I mean, this is based on the Westrobon HPQ reg, registered Kim and So I will I will continue to, you know, I I reached out to him at last IETF and had a long discussion about this. And, So I'm gonna follow whatever whatever they're doing. But in think that that draft is also still in progress. And I think Yeah. Alright. So that's So I I I I believe the I believe the CFRG 1 is intended an interim step while the NIST-one is being finalized and published. So they should in the long run end up at the same point. Okay. Great. But I know that the implementation already incorporates the changes that are on our account. Okay. Cool. The other thing about the signatures, I just wanted to say this, the state of standardizing pq signatures, I think, is lags quite a bit behind where we are with Kims. So that's just inherently gonna take a bit more time. Britta Hale. So"
  },
  {
    "startTime": "01:12:04",
    "text": "first of all, naturally, there's gonna be a multi phase approach with TQtransit as everyone here. Nicely giggles. I don't think that needs to hold up this draft. So there's going to likely be several extensions that do different things with First Quantum. Some is just a Kim. Some might be other chem combinations. Some might start including the signatures. We can have those extensions and with the probably will need guidance document also at some point that tells us how to piece all these together for different applications or what your tradeoffs are. But that doesn't need to hold this up. Because we do have applications that probably should start using it. John. Yeah. John Gray from Entrust. So This is a hybrid construction. Right? So it's Kyber and X25. Yeah. 519. It's a concaten. So Yeah. It's a concatenation. So in the lab's working group, we have a composite chem, which is very similar, but it used as a There's a combiner. We also have a composite signature. So if you come to labs today, you can hear about those things. So that is work that's being done in that group as well. So I guess, you know, there's all these kind of overlapping things being worked on in different working groups. So I I guess we don't want people how many flavors of of hybrids do we need? Like, So in eventually decide on 1. There's a presentation in Peacrip I've the slides are already up. Yeah. That that that that that it describes all of this work that's being done on hybrid, hems being done in different working groups. Including the including the chem that this one is based on. Yes. And it shows all of the constructions and what they and how they work and what their their equivalence is. I'm happy to send you a a link, put a link in the chat, but if you can go to Pequip. Yes. I will. My This I think this is the appropriate place to have access to on those slides with my colleague who's presenting that. Kidding. Thanks. To your jeff."
  },
  {
    "startTime": "01:14:01",
    "text": "Hi, Ginger Connelly. The updated mlchem draft. Differs from the original for all the three drafts Khybrid that was submitted, and it's no longer committing to the key. The public key, and I think it's no longer committing to the ciphertext. This may be okay for MLS as it uses HPKE. I don't know. But I want to flag that because it's already biting other areas where things were drafted against Kyber, which did commit to the key and the new thing, which doesn't, but everything is based around the indistinguishableity chosen ciphertext attack security of the camp because that's the only thing anyone's been proving or caring about But then they stop committing to the key, and then you realize that you have, like, can decapsulation attacks, blah blah blah. So I want to flag that to make sure that everyone who knows about these kind of security properties of these protocols, are where? That the thing they're about to switch to is different and has slightly different properties even though no one is actually proving those things in a security game because That's not what people have been caring about for these cams. Okay. See you in Pikmin. Well, First intuition on that is that, I think what could happen here is that we might be able to dose the group if we don't key commits. DHP casing, So, like, basically, you you get the content of the cam that you sent to the is different. So, basically, you make a fragmentation of the group. So you you would, I think, would be able did to like, fragment the group, So it's a task, not not more than that, I think, from a first approach. Set"
  },
  {
    "startTime": "01:16:00",
    "text": "which is a problem that we already have in in in the ministry. Just No. Well, I mean, I like, the good properties is that like, you know everyone with the group. So at least you know we are sending to an but I think, yeah, at all times, you know, with you, with yours on the 2. Okay. So Jonathan Nope. That's it. Benjamin. If you guys maybe wanna have a short discussion, send a message on the on the Zulip or come to the mic a little bit later with your sum with your conclusion. Place. I don't but that's a good point, Jatre. Okay. Because it Joel? I just want to add a I think the way we're gonna end up using this cyber suite is in, HBKE and HBKE then ends up hashing in public key and ciphertext via the context. So actually for HPKE, I'm not sure it is as much of a concern, but definitely, I'd I'd wanna look at it. Yes. Okay. Last slide, please. Alright. Sure. I'm in the right window. There we go. Alright. Okay. So I had done a draft on grip trust anchors, I am planning to abandon this there's anyone who who was really looking forward to this draft please come talk to me later. But, basically found another way to do this with stuff that already exists. So so And so since it's a draft, it will just time out in 6 months, and it'll be in the data tracker ever wanna find it in the in the future, but it's just gonna go thanks for the heads up. So I know not to push on you That's it for me. Thank you. Okay. So now we're in collection time here. Sure. Let's try this slide. Again, it's still with me. Just wanted to quickly say if you found a different solution for whatever you probably were trying to solve, maybe add a note there so that other people won't know that they don't need this draft anymore. They could do x for whatever your problem is."
  },
  {
    "startTime": "01:18:04",
    "text": "So we're we're kind of down into the end ending times here. I already talked to Richard. He said he didn't have anything to talk about last night Richard, is that still true? Yeah. So I I have not touched the additional credentials draft. Because it's already perfect as it stands. And because, we didn't tire update done since it's, what didn't make sense to call production? This is this is where Richard nicely doesn't kick me, and Nick about getting the charter done. So again, if people really care about, extensions work, please focus on the charter. You can get that done. I don't know if you wanna say anything about guardianship what we talked about last time, like, 2 seconds of, like, hey. The paper's gonna be done in 3 months or, totally putting you on the spot. So Apologies. Yes, Adraf will be out in few months. Oh, awesome. Cool. Alright. Great. Good stuff. If you're curious about what that's about, you can go back and look at the slides from last time, the meeting that we had in wherever we were. San Francisco. Right. Benjamin. Before concluding, I wanted to, tell everyone that like, platforms are looking at MSAPIs for the web platform and different devices. So if you have use cases for it, shoot me an email. So that we make sure that at least, you know, that a large function of the of the users, we will get their use cases covered by the by the APIs that we are looking at It's Benjamin Burdoush, and he's on the MLS Architecture Draft and others. I I believe you're on all of them at this point or may many of them. So if you need his email address, if you either grab him now or find it on the draft. And unless anybody wants to add anything else, We are concluding the session little early, but, you know, a lot of times we're rushed"
  },
  {
    "startTime": "01:20:00",
    "text": "This time, it'll be, relaxed morning. You can go have second breakfasts you know, feel free to hit the coffee line early. Thank you very much. Thanks to Nick for, typing Madley away there. Next time, we're gonna force somebody else Yeah. Might have missed 1 or 2 days. Yeah. That's You don't like reviewing it does. Yeah. I really am. But I mean, like, so best part you're in the I'm not trying to repeat them. Alright. Next time I will not forget my, you know, I'll have something like out of the capers. Alright. So it looks like Yep. I'm gonna Yep. Yeah."
  }
]
