[
  {
    "startTime": "",
    "text": ""
  },
  {
    "startTime": "00:02:07",
    "text": "and good afternoon good evening people that have welcomed to show up at the wish working group um i'm one of your uh working group chairs sean niels is here as well um evening i'll come to wish little early for niels um but let's get it started so uh some little little notes for your virtual uh interim uh working virtual meeting uh host um please make sure your mic video is off unless you're speaking unless you wanna you know have people know and it's great um please meet your microphone unless you're speaking here's the links to the the medico and audio stuff um here's the note well which is a you know kind of a wall of text about you know hey if you're participating in the ietf you need to adhere to a bunch of policies um related to ipr and a bunch of other things uh it gives you links to working group process and how things go um and then any harassment and code of conduct and things in copyright et cetera um for the code of conduct um we're gonna get to that a second for the ipr it's pretty straightforward if you know anything you speak up or if you contribute you need to disclose um straightforward we've got a slide on the itf code of conduct since it's friday hopefully you've all seen this multiple times this work group has not suffered from this problem but i guess we want to show everybody the same so kind of give everybody the guidelines like basically treat everybody with respect um try to speak slowly which i often have a problem with so i will try to do it slowly as well um please just dispute ideas by using recent arguments um use your best but judgment engineering judgment um please try to find the best solution for the whole of the internet um it contributes to the ongoing work by you know the group of the itf"
  },
  {
    "startTime": "00:04:01",
    "text": "um remember that we um the code of conduct guidelines uh are applicable to both the meet echo stream as well as the jabber and email list and we appreciate you for doing the right thing heretofore again wish at ietf112 here's our quick uh agenda we'll do some mistrivia um luckily the blue sheets are now automatically generated we did not coordinate this beforehand but is there anyone that's willing to take notes for us and all we need is high um the high points we don't need blow by blow just any decisions we make adam was that you saying yes yes that's adam awesome um great so we got that we have a jabber scribe luckily this is all kind of integrated so i'm hoping that there's anybody that's in the jabra stream that that pops in um we'll be able to figure that out so if anybody feels that they they have any kind of audio problems feel free to put like mic um mic colon in front of their uh you know points in the java room and or in the chat and we can make sure it gets discussed on uh get some live time uh update that we're not just chartered so basically our quick agenda is we're going to talk about the draft um the wish whip draft then we're going to have some hackathon discussions um and then some information implementation experience from two implementers which i think is great because it makes our job a whole lot easier as chairs when there's multiple sets of implementers would anyone like to bash the agenda tim go ahead just say i can add a kind of two seconds of uh implementation experience as a third implementation of"
  },
  {
    "startTime": "00:06:02",
    "text": "in the run-up to the hackathon absolutely very exciting the more the merrier is how i look at it oftentimes we progress protocols in the ietf and there's no one implementing them so it's good that this is uh happening here i guess my only note of caution is that um we are supposed to uh liaison slash discuss with other working groups so one of the things that i guess i want to talk about at the end if we have time is at what point do we need to uh let other people know that we're having this implementation experience going on and what do we need to do to make sure that we get reviewed from other working groups before we proceed too far so with that though we're gonna jump right in the draft so sergio feel free to take the floor sir yeah so first slide please so uh basically the first drop was the and based on the version 2 of the murillo whip personal draft so this is the one that we adopted in the last minute and since that i we have incorporated several changes into the the into the this zero one version of the sweep and mainly there was a from feedback received by the my in the mailing list about the produce draft for example it do not require the web server to be public accessible but just request that they either the server retrieves no candidates so all the candidates in the sap answer that are returned from the in the in the sdp answer also some clarifications regarding the responses of the of the tricky license restart patch request to the endpoint resource it may need to differ to differentiate that if it is the server can return to different the response codes with container with or without content regarding if it is a"
  },
  {
    "startTime": "00:08:00",
    "text": "nice trickle because if the the server does not require a to send back any new information or if it is a nice restart it has to return a 200 ok with a with an sdp with the new a ice username and fragment username fragment and password so they also the client can do the ice restart properly also remove the 405 response from the we serve it if it does not understand the the the trigger lies request now we have we are mandating that all the service has to answer properly and the servers are free any way to ignore the the candidates anymore for example if you are doing nice light you have just returned 204 and but we are not adding any complexity about uh adding and having the client to check if they're the response curves and do one thing or another depending on on it so just say if you don't if the server does not need to to do anything with the with the you know ice candidates just ignore it and it will be fine and we have added a and some handling of the out of the order request because yes colleen just getting permission just getting my permissions here so i i just want to make sure i i understood that correctly so it when we get this patch with the new sdp on the server you can basically ignore all the stuff that's in it like that doesn't that doesn't sound really very right to me it sounds like that will create lots of problems if some clients are processing the stp and some are not processing the stp it's not the is the servers i mean if you are doing nice light i mean you can you don't need the the ice candy there's returns from there i'm not even talking about the but like like if you get a patch with a new piece of stp do you have to yeah and they have misunderstood what you said actually i guess was just my question i mean yeah okay when you get a pass with"
  },
  {
    "startTime": "00:10:00",
    "text": "sdp do you have to process it like like you would in json yeah well the the the patch information is the only contains the the ice candidate so we can only contact the the a new ice candidate or the information up for doing a nice restart so so it's not changing any any kind of other parameters that are not ice related so it can only be triggered for an uh trigger lice for for providing new candidates or for a new username and friend men for doing a nice restart so okay so okay so again so this is deeply limited what can be in that patch to just what just the only thing that's allowed to change is tricklized candidates basically yeah yeah okay okay so i misunderstood what you said in that he's like that makes more sense now thank you yeah number one and also the last point was a uh attempted team about how to handle auto for the request i think it is further displaying in sslide also clarification on on on authentication and what is the and the token generation usage because it was misunderstood by some people that we needed to use allows to talk as in in the video header and it is just explaining that the the token generation is just up to the to the server to decide what is the their meaning and usage and the only thing that the client has to do is just to populate the the authentication header with the video extension also we have added a new and a new option to provide the tour server configuration via the link headers both in or in the opt-in requests on the 200 response there is more on this later and also just one one restriction to just do not allow redirection on the resource url so the location header the that it's returning in the"
  },
  {
    "startTime": "00:12:01",
    "text": "200 okay must be a final response a final url so just to prevent any kind of a issues in the in the implementations so next slide please this is the first thing that i have a question that last point so that is basically saying we can't have any 300 class responses when posting to this is the the resource url or like the initial url or the one that you get back from it the the one you get back from it i okay the first one is still redirect right yeah i i still wanted to or i'm open to discuss the the first one because the problem is that typically the the libraries when you are doing http does not automatically perform redirections on posts with bodies so it will be up to the the client has to retrieve the to the 307 request and do another request so and i think for example that none of the clients that we are we have tested in the hackathons are actually doing that so maybe it's a question something that we have to to to think about because it will probably be not very widely implemented so better just remove the the the requirement for the draft but i'm open to discuss on this okay thank you yeah i'll think about that a bit more yeah so a one thing that has been come up from the from the from both the implementation of the of the draft is that the sdp fragment that we are using the and we are reaching i think this is the fragment for project lights it's a bit awkward to be used because if especially because we are doing bundle so"
  },
  {
    "startTime": "00:14:00",
    "text": "you have to and then the the the abn f of the of the of the zp of the sdp fragment does not allow the candidates to be at session level and it also force you to to put rtp abp so it is kind of very very awkward because we are in webrtc we are not us doing rtp abp so the question is if we continue using this then the sat format that it is a in the in the sdp fragment rcc or we just extend the abn f that it is something that it is allowed by the by the rcc and just allow the candidates and ice stuff to be also present at session level so we don't have to include the the m the fake m and line with the mid that it is has no meaning for us so that's the first question i'm not sure if i would personally prefer it but as a we have to stand on different rpc i don't know how it is if it is visible or not i'm not sure if anyone has a view on this or if we can just discuss it later on on the mailing list okay yeah i'm not sure people fully understand what you're proposing here i know i i don't understand why this is or what you're proposing changing i just don't think i followed it i don't know i didn't understand okay so yeah let me explain the the first part of the the the first part in is what we are sending now that it is according to the to the sdp fragment i think it was i don't know regardless only the direct number"
  },
  {
    "startTime": "00:16:00",
    "text": "it does not allow the sap fragment allows you to send any valid sdp so any a bnf that's in right so no the the one we're using is the um it requires let me find it because i don't know salid from memory if anyone can find anything faster than that i don't know i could remember very wrong too i mean adam was involved with this i think he probably remembers too yeah so rfc88 840 the ibnf in the session level does not allow the ice candidates it must be in the media in the media level so you want to drive c840 i'm going to 9.2 grammar we are restricted on one we are allowed to send in a in the session level in the session level so for example we cannot send the ice candidates and these candidates can only be sent in the in the in the media level okay so in this so the idea would be to extend this abn f and to allow the electricalized attribute fields to be also be using in session level so we can avoid i think it's a little bit more complicated now i think you need to go change a version of patch that allows that right i mean it's not just like changing the a b and f will magically make this go away i mean whatever reasons that's like that in the original giraffe needs like we need a different it's no longer patched once we do this right that's what you're doing it is but the only thing is that as we are doing bundle we don't need the the candidates in each"
  },
  {
    "startTime": "00:18:01",
    "text": "candidates for a at session level meaning that it will apply to all media levels in fact we are just asking to to only send the the candidates for the first the first media level so both it is just a matter of syntax is the the meaning necessarily the same and so because we're bundled and we would not have to like we'd have to send the same candidates multiple times that's what you're trying to avoid yeah and also trying to to clean up a bit of the syntax like bundle is required by the spec right now and so he's saying basically like you're that that results in the different media sections not being able to go to different servers so why do we need to repeat all the ice candidates in all the different media sections why not put them in the session level make it clear like rebundling there's only one ice session it cannot go to different servers but it requires spec changes i think that's what sergio is trying to ask you yeah just to clarify i mean we are requiring bundle to be always being used so just to simplify the implementation and i mean the first one the the the first dp fragment is working right now the only thing is that it is a bit that one can cause problems in in the implementations because it is a bit awkward what we are sending if you are coming from webrtc and probably the second one is more straightforward but it is just a matter of day of the syntax of the of of uh how the candidates are encoded and not what is the information is there or how it is handled okay look i i i guess i you know i i uh certainly i i'm understanding better now what you're talking about makes sense thank you i just i think like as you start changing how existing libraries process this stuff and things i mean every one of these things my question is going to be like why like why why why"
  },
  {
    "startTime": "00:20:00",
    "text": "would i mean it can't be bandwidth saving that's not a good answer in this case that could not possibly be the answer um so i i just would ask what's the you know minimal set of changes of what people have already implemented that that need to be done for this um and i think really i would i mean i think when i read the draft i i i really wonder why we're doing it in the general direction of the client generates the offer why doesn't the server generate the offer and the other way the answer all of these patching problems that trickle ice problems a ton of these problems go away if you reverse the direction of that right uh yeah but as we are yeah but as we are doing india's is typically the the idea is the the that the client is the one that indicates the communication so would initiate the client would initiate an http post or something to create a new resource but the resource would come back along with the offer and then you'd send back up the answer right um so of course it's still the client that initiates the transaction but it it puts right now the hard part in dealing all of this is matching up offers and answers and you wouldn't have to do all that because the browser would be implementing it that side and that end of it would make it much easier so i mean and it would make these problems all go away too right um no because you you just need to send the candidates the ice candidates so you need to this is not uh we could just chosen basically be no trickle eyes at that point right because you the the offer would contain the one ice light global ip or you know static ip yeah and the browser doesn't actually need that's done you're done no but you need to see now using that you need to signal back the ice candidates from the client to the browser so this batch request is the what it is the the candidates from the client that it is received that are gathered from uh let me let me put it this way why are you doing trickle you just collect them up in the browser and send them like not"
  },
  {
    "startTime": "00:22:01",
    "text": "trickle just send them all send send send a fully formed stp answer just to be able to do it faster because for example in my machine it takes more than 30 seconds of the ice candidates to get there this is ridiculous just time whatever you get in the first whatever like the first candidate you get is going to work so time out after like 150 milliseconds you know after 200 milliseconds and send it i mean like that's people don't wait 50 seconds for ice that's not how implementations work i i i agree but i mean then it was this was discussed a while ago and also we we also need to to support aerostars so this way allows to both ice restart and ice candidates and trickle the candidates to be to be implemented so i'm not sure i mean an implementation well an implementation can really do what you are proposing i mean just wait for all the candidates and they can do this in the initial sdp without having to wait for the for the new historical candidates and do not set the patch request so but this is i think that this is a different different discussion this discussion that i wanted to to trigger right now just about the format about the the candidates okay you want to have a detailed conversation about changing an abn f but we don't understand why you need that and we don't understand why the architecture causes the need for that so it's it's back to that usual conversation where you have an implementation want to talk to a man neat detail of the existing implementation without really hitting the requirements or why why we need this or what we need to change i mean that's and that's why it's sort of hard to follow exactly what's being posted is we don't understand the meta issue okay the the the only the the the change is because we are using bundles so it does not make sense and to have to signal the candidates"
  },
  {
    "startTime": "00:24:00",
    "text": "okay you are saying it does not make sense to send them an email yeah why does that not make sense like what's what's the requirements of driving and look i'm not arguing against that i'm perfectly fine i don't understand like why we'd go and change things we don't need to change right for example in the current implementations uh you don't have the mit in the in the in the api the wcc api you don't have the mid so you have to get the to get the mid you have to get the you have to get the transceiver and get the mid also get the the audio type so it's not much so yeah you just was asking if it makes sense i mean i it current implementation not working fine with the first with the first system i don't i again i don't under i'm asking a question like why why do you want to move the secession level from the media level i'm not arguing for against it in any way whatsoever but i don't understand the connection of a w3c api to to what you just said yeah i mean the idea is that we are doing banding so it's uh so we can just send the candidates at the session level sdp supports sending candidates in the session level but this a zip fragment don't so the idea is if we shoot the assistant then the fragment will also support the candidates in the session level or not okay because the zp already supported so it is just and it is uh so it is just an association in how the the trickle the the sdp fragment works and know how a sdp with a with session level candidates works what's the advantages of doing that i probably will just prevent some interoperability issues ah it sounds more like it's going to cause them to prevent them i mean i'm all for preventing reducing interoperability issues but i'm not it seems the opposite i mean i mean i find with by using it i"
  },
  {
    "startTime": "00:26:00",
    "text": "mean just was raising the question the current implementation already working fine with the first one so if no one sees a reason to move to the second one i find to leave it as it is so just say i don't expect i didn't expect it to be so controversial but i mean i'm fine to keep it as it did right now i apologize i don't i i'm not sure it is it might be it might be better that way or not better that way it's just like this it doesn't i don't i mean i would be all for something that reduced interoperability problems made things simpler and easier right um but which way this is on that is not clear to me i'm not arguing it one way or the other i'm just sort of saying it's like this is not this is not going as a as an explanation i understand and understand what like how to you know how to make this decision or or even really what the impact of this changes are fair enough calling can we um can we try to take the list of the repo all right thanks uh martin you're next keep that um so um let's let's try to separate these things out first thing is you don't get to change the definition of what's in 8840 here it looks like you're you're asking for something that's fundamentally different than what's different so define something fundamentally different and describe how it works and move on i don't think there's anything particularly complicated um with what you're asking for but it's not what's in rfc 8840 so from that perspective it's if if you want to move things to if you want to move candidates to the session session level then to find something that has candidates at the session level i think that's the the sensible approach for that the other thing was um with with ice restart the way that webrtc generally works is you have a complete offer answer exchange uh and it seems to me like you could do the same here"
  },
  {
    "startTime": "00:28:00",
    "text": "quite reasonably if you've got the ability to to run another offer answer in the same session and if you don't then again define a new format but yeah yeah again uh foreign you don't really need a new zp answer offer you just need to generate a new username fragment and username password so that is the only thing that it is required uh obviously you in in sdp in webrtc we are generating a full offer answer but it is not because we and it is mandated to do an http offer answer again you just need to date the username and password that's a also this is something that it is already available in svc 8840 so it is saying this the mechanism is playing in there and you just need to patch the both the offer and the answer with this with this new information and just to a new sdp of transfer answer locally but you don't really need to to do any change to the to the all the or or media layer so why do you want that that's understood uh i'm just i'm just talking about ensuring that things are consistent with with other systems and just and having you justify those things i think you have justified them but um don't use 8840 uh point at 88.40 for all of the behavior but you can't use the format and updating it is just not no i mean i mean if if we use the same format on an 88 for a40 why we can use it it's not the same format well if we use the same format yeah i mean if we use the same format because what i'm proposing is to change it but what is in the graph is exactly the same format"
  },
  {
    "startTime": "00:30:02",
    "text": "okay i'm i'm i'm not understanding you at all sorry coming clearer is it the same format or is it not currently it is the same format what i was proposing is if we should change it but currently what it is in the draft it's using the exact rpc 8840 format right i understood that but what are you proposing to change what do you use or 8840 and that i know i'm not sorry i i'm not answering getting the questions here so you you could change what you're using to define a new format or you could change the definition of stp frag in 8840 i'm saying that you should not do you should not attempt attempt to update 8840 you should define a new format because otherwise well it's not going to be 88 40. okay so that's but anyway that's clear and i think that we just and what if we don't do nothing then this is it i mean because what we did already in the the current draft is using rpc 8040 as it is without any changes at all so the question is is if we should change it and but it seems that there is that the answer is no so we just can stick to what it is in there and and we will be fine just a second i'm gonna just jump in ahead of tim here okay i just really apologize but i think martin are sort of saying the same thing which is there's two paths and we're not arguing which one you should take um you could use 8840 exactly like it is or you could have a different session level syntax which may be the right thing to do but if you do that you need to define something that's not advanced you can specify neither of us is arguing which one of"
  },
  {
    "startTime": "00:32:00",
    "text": "those paths is best we're just saying you need those are the two paths in front of you yeah sure i mean and i understand and i think that it is easier to just ask for us to keep to 88 40 and not do any change and just say and well it does have been overhead but it is understood and everyone will implement it i mean that's not such a big issue hmm you can hear like every other word very low so am i in the care still yes i am oh i can hear you go ahead okay cool uh i just wanted to say i think the stp fragment's the wrong answer to this we've got a bit of experience of um of doing this kind of thing and actually it turns out to be much easier to send something that looks quite like a diff and and then synthesize the offer answer out of that um i i just don't i mean sdp fragments the wrong answer and and the reason we're struggling with it is because it's the wrong answer uh we should be we should be cooking up our own format and whether it maybe it should look a bit like it but actually i think it should be quite different it should look more like what everybody else does with patch so i just wanted to respond to some of the things that cullen was saying he was raising some uh sort of fundamental architectural issues and the key point that i want to make is that the presence of trickle ice in in"
  },
  {
    "startTime": "00:34:01",
    "text": "wish isn't some like accidental relic that arises from the way that we're like deciding to send the offer from one direction or the other it's a requirement of the system in order to get broadcasts up and running as quickly as possible so making changes that obviate this question by removing trickle from the solution makes it unsuitable for at least our purposes so i don't know if i'm in the if i'm in the queue it wasn't clear to me you are in the kitchen so the first point is that i entirely agree with that so if you live in the luxury of a network in which there is no turn servers trickle ice seems like a useless complication if like me you have to suffer through networks that do require turn then if you're trying to probe all turns all turn servers before you even attempt to send an offer it's going to give a bad user experience um the second point i want to make is a little bit orthogonal i think that the distinction between an ice candidate and an i3 start should happen 120 layers above parsing of sdp i want to know i'm the server and i want to know whether the client is doing a nice restart or sending me a nice candidate straight away i want it at the http the http layer i don't see why we are refusing to put either a url parameter or an http header that tells the server explicitly whether we're doing a nice restart or sending a nice candidate that is a simple solution the client already knows whether what it's doing so it might as well signal it explicitly at the frame and layer and it will make debugging easier it"
  },
  {
    "startTime": "00:36:01",
    "text": "will make implementation easier i just don't understand why people are opposed to that thank you i mean currently we are using the same request for both theatrical the triglyceride start because the the the db fragmenting c840 allows to do that in the same in the same in the same request so this the the first question is if we should do something different they has to signal that the the client is just sending an uh attribute lice or a restart but i think that it is also has to be with a how do we handle a out of order a pass request because obviously we don't want to the client to do kind of any kind of blocking for any http request hey has been a response has been receiving before issuing a new one because for example if you are doing a a nice restart because you have a network change probably then you have some previous http http post that will never be uh best be the answer or will be you will have to wait for the timeout for it to be received so then the question is how to deal with this out of a of the folder uh requests on the server side and we have two different cases one if we receive first a nice candidate we send a nice candidate and then a nice restart but we receive it in the in the other way in the other order so we received first the restart and then the ice candidate"
  },
  {
    "startTime": "00:38:01",
    "text": "these new candidates should these all candidates must be must be discarded but how do we know that it is a an old candidate and not a a new i say i restart and then the other one is that if it is an address or natural stand and then as a nice candidate and with and you receive the the ice candidate for that it is still valid but you have not yet yet done the ice restart uh should the ice will start we cannot discard the as the ice kind yet because it may prevent the connectivity to be completed and if this ice candidate will also trigger a nice restart anyway um so yes it doesn't solve all issues the fact of having this one bit of information so martin is suggesting using different content types that's fine with me but having very early in your server the information whether this is the ice restart or whether it is a nice candidate doesn't cost anything to the client makes the life of the server much simpler and especially makes debugging of issues much simpler and so i think that's something very cheap that make things better and i think we should add that and i agree with you it does not solve all possible problems the the now how to differentiate an a normal say ice candidate or the or or electrical password for a trickle lice candidate or a nice restart can be done if a by checking the the the if we are doing it on the server checking that the client effect and if it is not um and then it is a nice restart so it is something that can be done easily the"
  },
  {
    "startTime": "00:40:00",
    "text": "only thing is what happened if with this uh out of order request because we either have to mandate the the server to keep a small list of the previous username of fredward to detect a previous previously used username fragments to discard to to detect this of order request or if we should have just put a patch or a timestamp on the request to to make sure that when they it to to so they take the the server can know if the if the if the client either request has been out of order or not adam um i know it's sort of orthogonal to the issue that the julius is raising but in terms of ensuring ordering uh martin has pointed something out in the chat that i'm a little embarrassed and occurred to me earlier we have a mechanism in hdp to ensure this kind of ordering already we have conditional operations using e-tags and i think that would be a much cleaner way to handle ensuring that you're not putting state on top of stale state we're not putting stale state on top of existing state for these sorts of cases instead of doing something like a sequence number yeah i assume that that http has some kind of way to prevent it but i didn't want it to put it in the drop because it may be wrong so if martin if you could send me the information about where to look at sally i could try to to propose something to the list yeah i can send that to you okay so and the last the last bit change in the in the in the draft was to provide the"
  },
  {
    "startTime": "00:42:00",
    "text": "the turn server the tool server configuration back to the to the client from the from the from the server what we have proposed is to just to map the information for example that it is currently in the in the wc apis to a link here that just as the in the url the the username the the credential and the credential type that is this is exactly the same definition that we are doing in the in the daily then the wc w3c apis to for for this options and then yeah i put the uh rel type of i server so we can check in the client which say which that this link is for the iserver configuration there is a typo here because the first one is two one should also have the the rel attribute and [Music] marking why is not a valid avalanche format this is just me quibbling uh you've got colons instead of equal signs and you forgot your ankle brackets uh but i was going to say this is this is a reasonable thing to do okay i will double check the format i mean it was just an example but okay so sorry for getting it wrong and a one thing that we have currently is that a um the both the webrtc and the rtc web offices and apis allows to update the the configuration and the ice the the tool server and understood server configuration before the the the gathering phase has has been started that will be before putting the or setting the remote description"
  },
  {
    "startTime": "00:44:02",
    "text": "so and but we thought that the implementation will not allow to do that so we have and said that either this information can be sent in an options way on an option request today resource or your to the endpoint url or in the both in the http post response but we have seen that both the majors one that the implementation then the elimination all and the process supports it correctly so maybe we can just remove the the this retrieval of information in the options request just because for example if you are using an external provider and you are for example i am using twilio i will have to make two requests for each when only one is needed so maybe it's a if it is not really needed i i would prefer to remove the this and the configuration to be returning the options in the devtools request and only have the options for four cores yeah i don't know if i can chime in already that was in cuba sorry yeah just to just to mention that's uh i mean yeah you say that just remember as apache in the works but actually the issue there is that for instance my my web client is currently based on g streamer and g streamer doesn't allow you to do that update which is why in my current implementation i only have to rely i have to rely on options to to get that working actually and so the problem is that even if you get a patching g streamer today just rumor has its own development cycle and that can take a long time before it actually lands in all the major distributions that are"
  },
  {
    "startTime": "00:46:00",
    "text": "available out of notes to everybody which means that even if it's ready today it may only be available to most people that are interested in this in one year or two years or something like this so this is just really from a practical perspective it may make sense to at least for the people that are interested in using g stream or it may be other implementations i mean i don't know to keep options at least as as an available option and i don't know whether it should be a master shoot that may or whatever it's just to basically allow this option to to be available i mean i find also with that because anyway what we are restricting is that the the options must be authenticated so to be able to to do the to to retrieve the the tool server configuration so if you are not doing the if you don't really need it uh then you will not provide it what we can do is just that the options do the doing the options and returning the configuration not the option is like kind of optional and but in the post it is mandatory meaning that you cannot descend certainly in the option so probably so if you support conf doing the configuration in the when you receive the post request you avoid doing the the first software request to to prevent the server to have to to fetch the credential twice check we've got about 15 minutes left i just want to make sure that people are keeping it concise so we can try to get us as much the right presentations as possible thanks so i'm in favor of keeping this in options because i think otherwise you aren't you effectively mandating tricholites as well"
  },
  {
    "startTime": "00:48:00",
    "text": "because you wouldn't get a stun result because you didn't have a stun service set so your initial offer wouldn't have any candidates other than the uh locally discovered addresses in them and so you're kind of you know if you take it take this out of options then you're forcing triple ice on everybody and so you're radically complicating some of the stupider clients like mine um yeah i'm sorry uh it was unmuting um so i wanted to give a plus one lorenzo said and add on that the bigger problem is probably not the g streamer release schedule as much as browser release schedules right now you need to have this information before you start your initial peer connection to get the candidates that you're going to put into the offer in the first place so i think while i proposed options as being something transitional i think it's going to be a very long transitional phase that we can't like allied at this point um it's and for that reason i don't think you can make it optional in options i think this needs to be there at least for a fairly long time i mean maybe we can come back and revisit this for five years in the future and like deprecate that um the it's the final point on that that i want to make is um whenever you see an options like this you're pretty much guaranteed that there's a post coming along and it seems to me that the the server should just be able to cast the credentials for what is a very short period of time and avoid having this this double access to try to get the the credentials a second time i think this is something that can be fairly easily optimized in the server itself well i'm well anyway we can keep it and yeah i'm fine to keep it"
  },
  {
    "startTime": "00:50:01",
    "text": "can we move to the next light so so the method you can present faster the results from the hackathon because we have only half 10 minutes left and not sure if we will have time for the for the rest yeah sure i don't know if teachers wanted to to shift the agenda a bit because there's limited time otherwise i can definitely present the diactor results quickly to show the hackathon results we did have two other presentations about implementation experience so i'm hoping you can modulate as much as you can to go quick so that we can try to at least touch on both sets of presentations yeah i'll try to do it as quickly as possible so i pre-loaded these slides by the way so if you want i can just grab these slides and control them myself but i think you need to release the the current slide deck first thanks yeah just so just to be quick this is a very brief overview of what we ended up doing in the hackathon week before the itf started and basically the main objective was not really just testing with by itself but it also was a very good opportunity for us to to test different webrtc stacks with each other because most of the times we use libwebrtc one way or the other and instead in this case we had several clients and servers talking using very different stacks instead and so this was a unique opportunity to have a heated debt as well and we actually did a few a first interrupt round a few weeks ago that involved me sergio julius and gustavo garcia as well and that was quite successful and ended up providing a lot of feedback for zero"
  },
  {
    "startTime": "00:52:00",
    "text": "one and in this case we ended up having some more implementations to test so there was mine that is based on janus this was julius based on galen sergio integrated this in millicast and then there was a new sfu based on pion that's that supported this and multiple clients that could actually be taken advantage for the purpose again using different stocks like iu rtc pi on the the stock that team implemented for raspberry pi's and so on and so forth and let's say the end result was pretty much successful mostly successful more successful than this slide might suggest basically the grain means everything worked out of the box yellow means uh some things needed to be changed in the implementation on either side to get something working and orange and red instead meant different issues that happened that basically prevented a successful setup at the time being which may or may not be related to whip itself though in some cases it was related to uh for instance the different stock implementations or different stock implementations unable to work with each other or even just different codecs because for instance some endpoints are not coded to send vp8 and that is a fuel for instance only supports h.264 for ingestion which means that in that case that's the reason why the uh the the interrupt test didn't work which isn't really a fault in in whip but just basically the negotiation ended up closing there were a few issues uh as i mentioned related to the to the webrtc stacks that needed to be fixed in some cases it was just basically some basic firewall problems and so on and so on and so forth so i wouldn't really bother you with the details about all these you can just have a look at these lights for that what i really want to stress out was that this first interrupt test was mostly focused on the basics so we really just wanted to make sure that a web client could basically do a handshake with a web server and get something working so a webrtc stream that could be consumed somehow and basically ensuring that audio and video would work across these different implementations and that does sound"
  },
  {
    "startTime": "00:54:02",
    "text": "that did basically uh sound like a good starting point for us and what we really want to do next though is basically start looking a bit more in-depth at other functionality for instance we've spent a lot of time now talking about ice restarts and how to actually trickle candidates and so on and so forth that's not something that we have tackled tackled so far some more issues related to possibly or front sessions if you don't do an http delete for instance whether or not the server is able to detect stuff automatically we've mentioned the uh the link support for stun internal auto configuration so whether or not post versus options can cause issues anything related to bearer tokens and and stuff like this so and this was the interrupt testing team so it was basically six of us working working together uh during past week and i don't know if you have any quick question for us at this specific point or if you're satisfied with this very quick overview i have to leave it as as we're good and they should take questions to the list or to get up either way um and i'd like to um kind of arbitrarily pick julius to go next um i know it's another problem we've got minutes but uh we can jump hopefully we can do it kind of quickly uh or at least get we got because we have at least two there was going to be a third s um uh you know a couple seconds about um implementation experience but people should feel free to uh comment on the mailing list i did post the slide so that's good julie is very good i can present your slides for you thank you so i've got three minutes right hi i'm julius crobach next slide you have about five okay next slide please okay so galen is a webrtc sfu which i implemented during the first french"
  },
  {
    "startTime": "00:56:00",
    "text": "lockdown it has some properties that are that are cool and the development was partially supported by mexi next please and uh at some point dave told me about which i implemented weapon galen and the main and unlike the other unlike some of the other implementations the first class implementation it's actually part of the server i'm not attempting to translate into galen's native signaling protocol next please and so the good news is that whip works and it's easy to implement i did it in one night there's 427 lines of code that are specific to whip there's 50 lines of patches to galen's core but that's galen's fault because i'm not exporting enough of the english the internal data structures and i had help i had a client and that was laurenta mignero's simple web client next please so it's five shell commands if you need a server to test your web client against it's literally five commands to get it running next please okay and uh so that was the good news i had some minor difficulties and the main reason for that is that i'm not competent and that means that i'm a precious resource because i'm currently the only incompetent whip implementer but if whip becomes successful then i will no longer be the only incompetent web implementer hopefully and so we must aim the draft its incompetence and i had mainly four difficulties this were course url multiplexing authentication and distributions what i mentioned already candidates from restarts next please lorenzo explained course to me i knew nothing about cars i had vaguely heard about it"
  },
  {
    "startTime": "00:58:02",
    "text": "that doesn't scale so i think that the draft should explain course or at least do the link next please um so the other difficulty is that in galen we want to have a very simple user interface we have just one url both for the native javascript client and the with request and so i would really like if wood could mandate that there is a url parameter that mentions that this is a whip request so that we don't have to give multiple urls to clients next please okay authorization we've been through that already i won't bore you with it anymore but i would like to see http basic nice restarts we've mentioned it already next please okay so in conclusion it's one night and 500 lines of code and thanks a lot to everyone who i'm helped pretty impressive thank you for condensing that into four minutes um i i guess my point about uh the implementation experience is it really does help us as chairs move things forward so if we really only have a few things less that we need to uh kind of agree upon that really makes uh makes me feel really great because i did i did think that this wasn't going to take forever um but again i'm hoping that we can take everything else the list and i do want to apologize for the others who made uh um please uh check them out in the github repo and the data tracker um the one final thing i think i want to check on the list is at what point do we need to go to other working groups that we said with liaise with to you know make sure we get an early review that we're not on the wrong path because i would hate for the implementations to get out in the wild and get corrected later nationally i think that is it and we'll"
  },
  {
    "startTime": "01:00:00",
    "text": "have to thank you for your time and let's take everything off the list you"
  }
]
