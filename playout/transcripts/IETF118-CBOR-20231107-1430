[
  {
    "startTime": "00:00:00",
    "text": "Hello. Good to hear you. Thank you. We hear you well. Thank you. You you're you're probably aware of there's plenty of room at the front. Yeah. Back, K. We're at the top of the hour or the bottom of the hour. Yep. So, hello, and welcome to the, to the meeting of the civil working group at IETF 118. My name is Kristen Umsters. This is Berry labor. We will guide you through this, this evening as this is an IETF meeting, the note well applies. So please be aware of any PR and general politeness concerns. You've seen this probably few times already. But if there are any questions, come to us, we'll you know, most team or whoever would be responsible that as we have both local participants, place. Let's use the me take a cube. But we are a sufficiently small group that if there is some direct responses, free to jump the queue if there's, like, situation where a direct response makes more sense than than giving a full round trip. Also please be reminded to sign in via medical if you're if you're local because this is replacing the blue sheets. We have a rather short agenda for today. First is me and us talking, then we go through the list of documents that are, like, not fully for discussion today, but more, we we want have everyone on board with the status they're in. We'll have 2 presentations on Aktibo and on, one of its one possible application of it being, the DNS format for CBAR."
  },
  {
    "startTime": "00:02:00",
    "text": "And then I've prepared a short summary of the discussions that are going and the developments, on a deterministic profiles for which we should have enough time to, continue a little bit discussion starting from that. And dates for interim calls are throughout the ITFR. More for for the AV section. So first question, is there anything that we should add or remove or alter on this agenda. Here again, there's one thing that I would like to point out briefly. That is that, Jason NTV, has been discussed in dispatch. And while it has not been dispatched in our direction, this is some there is a thread on the mailing list. On this. And please have a look at this and see whether there's, like, any input that this working group can give because I think There are there is good expertise in the in the general topic here. Donald? Highest penalties. Like, from future, I just wanted to mention that RFC 7042 BIS has actually gone to the RFC editor. And it defines, Seaborg tags for MAC addresses and, UIs. Okay. Thanks. That was I didn't have that on my screen, so Good reminder. Thank you. Okay. That being said, on the documents, time tag, use to have a discuss until today. Thanks to the dash 12 that not loaded, that is now saying that RFC required an expert review interact the way that Both need to be present. This discuss has been cleared now. So the data like tracker is looking green, and I think this is on the on a good track for for progressing through the through the course of that."
  },
  {
    "startTime": "00:04:06",
    "text": "Francesco. Yes. Murray has cleared his last or the last blocking comment. So I just need to take a quick look, and then I can Press the button and it's done. Awesome. We have a working group last call that was supposed to ask it. Sorry. That that was supposed to to end, like, yesterday or today. EDN Litrals, the update to the CPT programmer. I've have I've not heard anything on the mailing list, on either of those. And given that the last thing I've heard on Update 8610 Grammar, on the lists or basically anything that I've heard other than Mhmm. During interims I'd like to extend an I'd like oh, sorry. The last I've heard was the adoption call. I'd like to extend this working group last call for 1 more week. And Perhaps the working group to send feedback there and this doesn't need to be a full, like, several components review going through all this and this and that. If if you've looked at it and you think that it is important and it's done 2 or 3 line mail will be all that we need from a few people. And then we can be more confident in making sure that this is the consensus of the group Yes. If, somebody needs help with that, I have some slides on that that Okay. I would like to show in a minute or 2. Much appreciated. Yeah, I'm speaking of individual slides. Let's do a really change here."
  },
  {
    "startTime": "00:06:06",
    "text": "Change back to Cheers. Thanks. Shall I, We yeah. Yeah. Just, like, just just like it did in here, and we'll chances are it was. Wrong deck. Sorry. Okay. So for those who forgot the reading glasses, this is the Sevo meeting. And, I have, free items I have prepared slides for, so I think the sequence and the agenda is slightly different, but we can go back to these slides, but we need to so, let's do the Indian Literature city, Grammarching, first. So I'm repeating this slide each time I'm standing here, seabor is a representation format. It's not a language. It's a phoneword. And, we have 2 associated languages to make our life easier. One is the diagnostic notation, which is just a human readable form of talking about Sibo. And that happens to have the property that every Jason text also is a valid piece of single diagnostic notation. Which gives you some reasonable approximation of what is in the general text, but all the other things that see what I can do. Also can be done in that. And, also, we try to make see what diagnostic notation more useful for human work of them, Jason, is So that's one thing This thing is derived from Jason, obviously, because every JSON instance is adjacent. It's a super diagnostic notation instance as well. Other one is a language for specification, validation,"
  },
  {
    "startTime": "00:08:03",
    "text": "of CEVA instances. So some people call these schema languages. My preferred term would be data definition language, but that's essentially the same thing. And the point is that this does not describe a single instance. But you can write it here. It describes a single instance, but That's not the intended usage, but the intended usage is to define a set of instances, a data model, with that. And, essentially, it's a grammar language. So, we needed something to to steal the overall syntax from and we went with ABNF. So CDL is based on ABNF. And it actually can describe, Jason and Seebo in the version that's standardized and actually have a document that shows you how to describe CSV. Fights with that as well. That's not standardized. That's just an individual draft, at the moment. So that's the background. And, the working with last calls had 2 drafts one was the EDM Litruals draft that started out as a small draft, just be finding literals, application specific literals, for diagnostic notation. I'm using the term EDN because shorter than diagnostic notation. And, it turned out people wanted some things in there, and it grew, and it grew. And, it is now a full specification of EDN. Which we avoided when we defined Cboe because we wanted to make clear This is not the interchange. Forward. The, essentially, forward is this binary thing. And, use this this diagnostic notation if you're doing diagnostics. If you're debugging things, if you're putting up stuff on whiteboards and slides, and and and on. That's what ADN is far, but it turns out we do use use whiteboards. It's like a lot it makes sense to"
  },
  {
    "startTime": "00:10:03",
    "text": "actually make this fit for interoperation between tools many many of us have, EDN in our CI pipelines when generating documents and then generating implementations of them. So it really makes sense to work a little bit on the interoperability of that format as well. So this is what this document does. And it provides an ABNF grammar And, I actually have an implementation that directly uses that MUNF framework. So the the grammar is actually to a certain extent, verified. I don't have all the EDN incense is out there in the wire, but, if if you want me to check once a new one, I do that. So that's this document. And that has been recently completed. I got a lot of feedback before the working group last call, so I'm not surprised that there's not a lot coming and during working with us, god, but, please do have a look at it. There's always things that that can be done better. The other one is the update 8610 Gremlin, probably should have used CDL in the title and not 8610. So CddL was defined with an ABNF in the original document, in in age six ten. But we made some mistakes. And, this document in particular addresses 3 in Russia, reports. And has some some minor other fixes. Some of which are quite useful in conjunction with the CDL scenario 2. Work. So this would be a good time to close the thing and be done with it. So the the explicit job of the update in the 16th 10 document is to update OC8610 and make it fit for the next ride round and get rid of the arata. So that that's mainly what I wanted"
  },
  {
    "startTime": "00:12:00",
    "text": "to say just as a Sorry. Yeah. Sorry. Wrong focus. Perfect. So oops. Skip one. Yeah. So, I think that's what I just said without the slide. Sorry about that. So, Update 86 10 grammar is is kind of it would be nice to finish this out so we can put city at 12 o'clock of that. EDN literates is not Durgent. But the problem with things that are not urgent in the IETF that is is that they never get done. And let's try to finish up this so just as a random idea for the next round, Ian Richard Litteritz comes with a registry for application types. And I just want to initiate a process in your mind. We just were in a cozy. Working group meeting. People, of course, had lots of Indian lit, Indian examples on their slides. And, typically, these examples used text rings where they really meant numeration values that stand for these texts. So one application specific literal that we could define if we want to. Is something called e or enem, if you're, you know, you know, that you can write to express I'm using the text form here, but we think the inbound value that we have assigned to that. So this is not useful for for actually processing this piece of, diagnostic notation unless you have a little cheats table at the side."
  },
  {
    "startTime": "00:14:02",
    "text": "But it's still useful as a slight notation. So if you want to make a slide and just don't know what number is going to be there. Put it with with the e education specific extension at Now the nice thing is this is a registry I can just write up a short document But first, I have to find a designated export for that, but once that is done, I can write up a short document and, this becomes part of of so, yeah, just just as an example of what we can do is, again, if you want I think that's about so that would mean that we would ask the next like, ask for questions here, and then go for the next speaker, So place don't walk away. Questions, comments, Not everyone at once. Okay. Yep. So thanks for the update there. Then I'd say let's move to the next block. Which is activeo. Okay. So you don't have to have to give me you do have slots. Okay. Good. Okay. Seabor package. We have been working on this for a couple of years. And, we haven't had a lot of discussion in the working group around this, but we have had a lot of discussion In various for our in in the cut up repositories, and so on. This is not quite ready for working does call about getting their trucks. Let me quickly explain what Xevo Pack is."
  },
  {
    "startTime": "00:16:00",
    "text": "When we started out the Seaboard work, everybody told us, why don't you use Compressed Jason? And, well, the answer was it doesn't have the data types in it. But the other answer is that doing something inefficiently, and then it playing compressions with to to getting it smaller, that that's not necessarily something that your temperature sensor wants to do. So that's why 0 is created. But we still have some redundancy in Cboe data items. And making use of this redundancy is is a very good thing. So we looked at packing people, which is not the standard text based compression. But it really is meant to allow in place use of a packed cbo data item, from an application, So all this structure really stays directly usable. It just has a few point us that no longer make it an extra few trees. More like a direct, direct It's like a, graph. So to do this, we have 2 relatively well separated elements One is building reference tables so that that those pointers actually point into a table. And, these tables need to be built. And the second one is referencing things. From the table, in, packed on rump, document. As we call it, that we send together, with information about the tables. Now the Picked referencing That is pretty much ready. We haven't had a lot of changed there recently. And it seems this works. It does have a few innovations. These function tags are something that"
  },
  {
    "startTime": "00:18:01",
    "text": "nobody has done before in in this way. And it's actually an extension point like we can, an extension to EDN later, we won't be able to put things into the reference. Set later. And what the the reference set assumes to find in the tables is share shared items. These are complete data items that are shared there that are used at multiple places. In, the CFO data item, and argument items usually for concatenation, but there are other operations you may want to do with an argument And what the the, draft mostly does is it reserves it makes AENA registrations, for reserved. Values of for assigned values, that can be used to do these references. So the symbol value 0 to 15 essentially point us into the the shared item set. Take 6 is a pointer into a shared item if it's used with an integer, It's an argument item when it's used with something else. Then you can you'll see the numbers, on the site. So there there is a limited set of tags that that has been, allocated, but they said, because the the tag Name space is, 64bits Of course, we can provide a lot of them. It's very unlikely that somebody will actually use tag 28704 but, it's they are to avoid artificial limitations. And finally, we have the function tags, which do something interesting that that you can look up. And the other part is this number 1 in the list I just had. The table boosting. And that table building is likely to be rather application specific So, about 20 years ago, I worked on,"
  },
  {
    "startTime": "00:20:01",
    "text": "table for a constant table that was written up in the RFC for SIP So the the the SIP protocol, the chatty text protocol, and if you want to run this over tight interfaces. So you want to compress it, And, we had a, static a CD find table for that. So building cables is is an interesting process that can be and ahead of time, then you would just have a reference to such a table in your document, for instance, by using a tag, the definition of which says use this table. Or you can, put the table into the data item together with to rump with a pop that does the the table references. And to to make silver pack useful right away, the batteries included concept we just put in two tags here that to to a simple basic here we set up and just split basic table. Set up. You can look up the details in the document. So this is not meant to be the the end or b hour of of cable set up mechanisms. And, what what we are discussing in in the DNS ebook discussion right now, what is the best way to actually do the table, building in that environment. So I don't even expect that the majority of this Euro pack use it, use this the future where he was a simple basic, setup, but, maybe something application specific. And we can do innovations. There is, but I think there's more potential for innovations in the table building than in the table reference. So 2 innovations that that we'll discuss later, we'll talk about Genesebo."
  },
  {
    "startTime": "00:22:00",
    "text": "One is that we can do implicit table building, which means we actually examined the RAM for information that leads to building, the table. Instead of explicitly say here is the thing that goes into the table. And the other innovation is incremental cable building. Which is not really an innovation at all because tags 2625 did this right in 2014. But they they have this little problem so the idea about incremental table building is that you have a process that actually goes through the content of the they tied to him once, one single pass. And why you are running through this in in this past, you build your table. So you saw whatever you put in your table when you find useful stuff. Can be used after that, but not before that. Which when you share data items is an obvious thing because first time you you mentioned the shared data item. Goes into the chamber. So tax 2525 already did this specific for screens, takes strings. But there is a problem here. In that CBOM apps don't have a defined document on So this would after then I I put in there in the side. Actually has a pretty complicated semantics. So someone who's after something is, if all potential map orderings that you you're seaboard parser might be looking at this with with generate the same result. And that that sometimes hurts. So we we have to look at this one. Solution is to not use maps. Then this works perfectly. But maybe we have to say something about what happens when you do choose. Maps. So my Plan,"
  },
  {
    "startTime": "00:24:01",
    "text": "is oh, I forgot to send you the new slides. There's a 4th item in the plan. The false item is there are still 3 outstanding merits in in the working with me a repository that have some detailed comments that we have to process. 1 from Bert Harris one from Mapia She is check last name that I can't remember. And one from Christian Andrews. And, yeah, these need to be looked at. We we need to look at benchmarks like this DNS in Zebra, but maybe we have some other applications, which we can throw in Jocseba pack and see how how where that works of course, it would be nice to get some more implement a feedback But I think in the end, we should decide on the time box with this, we we essentially have been doing this for a year, already, we probably should decide to, to end this at some point, and, maybe have, what you plus call capable version at some time before next IETF. So we will have finished the work on this by by that IHF. So that would be my proposal to do a times Good. Yeah. Thank you. I do have a comment from a from a participant point of view. So you mentioned the trouble with maps if the if the application prescribed that some deterministic encoding is used, then would it suffice if the if the process will just check that it's in the deterministic and can then use this use it as the in the in serialization sequence Sounds good to me."
  },
  {
    "startTime": "00:26:01",
    "text": "Questions, comments, suggestions on the time frame? Hearing men, That's sorry? Okay. That's good. That's good input. Thank you. That wasn't all good. Okay. So then let's switch over to the next item. Purchase. Which is a Martinez, presentation on DN on, this DNS format foreseeable. Of things right away. Do you want Right. Great. No. It's great because this frees up my mouse pointer, and have a better look into the into the minutes. Which are my quiz. Writing. Thanks for that. Anyway, yeah, I Martin Landers, thank you for the introduction. And I talk about DNS seabor or as we call it the driver, concise binary representation of DNS messages. First, I want to go into my motivation. Basically, when we sent, DNS packages specifically in this example, over coop, we quickly run into the problem that messages gets larger than the actual link layer PDU So we want to get, somehow little bit smaller. And so concise DNS messages the format is needed. And is what I'm talking about the objectives of our format are that we provide a concise packet format and compress names and addresses in the DNS queries. And replaced. And, for that, we want to, of course, use an existing implementation, which Cboe and encode these DNS messages in Cboe."
  },
  {
    "startTime": "00:28:01",
    "text": "Then we want to also emit DNS fields and in the DNS queries and responses. To achieve more concise, even more conciseness and, dress the name compression using Cboe pack, which was presented in this method before. A customer So what do I mean with omitting in S fields? If we look at your typical query, we have a lot of feels in there, which for some, if we use something like DNS overcore or DNS over HTTPS, we don't need, or if we encode something in Cboe, we don't need specifically because the encoding allows for them. Already, and this is, the transaction IDs and the account fields. The conflict specifically because we only have always one question in the typical DNS message. We don't need at all most other cases in the question a query, at least, And then we also have the flags, which are oftentimes null or 0 or something that is not needed for the DNS over the co ops. So we can also omit them. And then we also can because most queries are for the internet class, and with that, and also the query type, which is, in this case, an address record query and this is most of the traffic. So we basically just have the name and we put this to maybe add later more metadata into, nested gray. And, what do I mean by that? For example, if, we still want to, for example, query an a record. We Just append this to the list. Or if we want to ask for a different class, we just, append this to the list again. And for the outer list, we can, for example, use if the still going to use flags, or we want to end additional resource records, for example, for options. Where we can use that. And for the response, we basically also can,"
  },
  {
    "startTime": "00:30:04",
    "text": "ignore all the stuff that we use for the, already ignored for the query query format. Sorry. And, we also, can omit this in the responses as well, of course. And we also can omit the names because, because we have used DNS over corp and the HDNO over HTTPS. We can map the queries to the responses And so we don't, need the name, actually, because we have this information somewhere in our transfer what we call already. The lengths again because of the co encoding of Cboe, we don't need. And this leaves a chest with the TTL and the R data. And if we need, for example, the question section still, we just can prepend it or append the other sections. If needed. So, what changed 17 and version 3 of the draft. We added a note on the representation of more structured art data. So if we don't use binary, representations or stuff like that, we provided a former descriptor for a DNS option records, student records, added an implementation section, simplify the CTTL, to a more idiomatic fail and did other cleanups and housekeeping. And remove the DNS transaction ID because it's a said previously, we don't actually need it. And was also in a previous version, the representation of our data in a as an end, but that basically just led to more problems than was really necessary. So, I decided to remove that yeah, I also talked about options to the record. Something that was added This basically allows us to put a tag around a list, and this is then an with with 1441. And this is in an option record, and we gain a lot of, bytes out compared to the wire format, out of that."
  },
  {
    "startTime": "00:32:05",
    "text": "We then did some aviation on our, stuff already. On on the definitions I've until now. And, yeah, these we use some datasets for that, which were collected throughout 2019 and consumed the number of IP devices, you can, see all the numbers up there. And, through our implementation on that, which we did last Hagathon at the ATF117. And put it unpacked and packed into that. And then looked at a relative measure with a compression ratio and an measure with the bite savings, And there we can see these, committed to distributed functions, so on the X axis, you see both measures and then the, cumulative, distributed distribution on the y axis. And, you see that for the relative measures, we have this long tail in the in in the positive direction and this long tail in the absolute measure for the bike savings. So what is this the the thing there? For the compression ratio, actually, this is, just an empty response. So we basically through everything already except, in this case, as a flex, and then added some empty lists, for, and this is also why the, untact format is larger a smaller here than the pack format because we add this extra list for the packing table in front. And for the, height savings on the other hand for where we have this huge loss shows compared to the classic DNS format. Is because, it contains a lots of name, lots of names, and we only decided to produce name compression was packed So, yeah, we lose a lot of bytes. So"
  },
  {
    "startTime": "00:34:00",
    "text": "we came to the conclusion, we need some name compression for the base format. So what our choices there, we can keep the names uncompressed as we decided before. We can use a bespoke DNS solution, or we can use existing solution with Cbopex and just say, okay, we make Cbo pack optional or use a some, special solution for DNS base format, from the off pack. And that is basically the the ideas we discussed. That's the last interim. First, the classic DNS format style, basically, where we reference the name compute components within the CBOR object. And disable pack light where we reference just the name prefixes in a predefined and just to give you an example, what I mean by that, I took a point of record, request, for example, dot org, which you all find as an example in our draft, where we base we have a question for the pointer record, which is type 12. And get, the point back in the intersection, then some name servers in, the, authority section. And the, able, what area codes in the additional section, And if you look at this, at at the first idea, which was mostly based on a idea by Christian to split up the domain name into components instead of the text string, like it is done in the CI format in, core. We can, then use these compoundified names to add a tag in in the name which we then use as a reference. What is still to be cited? To be decided what type of tag we would not use if we use a one one of the rare, 1+1, 0 bytes, we get a 2 byte reference similar to DNS or use a larger tech. But then basically, the semantics of this tech is that we start at a name component from the e string."
  },
  {
    "startTime": "00:36:02",
    "text": "And then, stop if the object is neither a string in more or nor the tech. And if we have attack, we just follow it until if there's nothing else to consume. And, basically from the example I give before, we this would look something like this. And you always have to somewhat keep this implicit table in mind then. Where basically now NSONE is, in this one echo, the exact dot example dotorg is now encoded as n is 1. Tag 0. So it references the 0s entry into implicit table. And so it and it's one example.org. Just to give you an example. And as Carsten already pointed out, this could be somewhat seen as a variant of pack sebow was impressive table building, and an alternative reference syntax. And semantics. And then the other idea was basically use what we already have with Seabor Pack just in a light version. Where, we basically just use the strings for single pack and not the bytes and not the values. Other values. And, There, the object would look something like this So, we base have our argument table in front or that value table, which, then is referenced, but but with a simple value within the object. Yeah. Yeah. So, we then through again our implementation and data set on that for us, we need to useful implementation. And use, some the improvement or It's, again, the old slides that I just noticed. Just think of the line, of the x axis as for percentages, just take it by 100 and then a newer version of this course percentage."
  },
  {
    "startTime": "00:38:01",
    "text": "Yeah. Anyway, yeah, we we use this improvement factor then as to compare it. And for that, we saw that over 70% of responses without the questions, gained an improvement of over 0%. So it was better then the, component referencing And, for the improvement that was smaller than 0%, which it was mostly overhead due to the extra list. So this is just an implementation issue and not the problem also format. Yeah. But in general, of course, you should note this is just for the dataset we used. So more researchers needed there. So in conclusion, with the name compression I presented here in both cases, we can, lead to an oppression ratio of over 100% for nearly, responses and for the ones that is not, that that they are not, It is negligible. It's or, solve time implementation fix. Both formats have their benefits, the component referencing is more concise because we don't meet an extra, I I wasn't aware that this was acting immediately as I refreshed your slides Okay. Sorry. Do I know can control them again? Yep. I doesn't seem like it. Yeah. And I can't not sure I can. Okay then. Okay. I'll can can you request again? Yeah. And I'll jump you to the end. Okay. I can I can do that? Sorry. K. I know it. Need to progress. To the very end again."
  },
  {
    "startTime": "00:40:00",
    "text": "Okay. Okay. Yeah. So the benefit of, component referencing is that it is more concise because it doesn't add any byte overhead to the to the extra list. Is simpler to implement because we don't have to count the occurrences. We just built basically the implicit table where we are scanning. It is more familiar to DNS implementers because it is more similar to the classic DNS, name compression, And the benefits of pack light is that it's, on the other hand, more familiar to Cboe implementers. And, it doesn't need any new definitions of a reference syntax or new table buildings, mechanism and just uses what is defined in the Cboe pack draft. And it is more efficient when it comes to the bytes we sent over the wire because more of the responses we saw were made smaller compared to component references. So the question I have to the working group is basically which way should we go or do you maybe also have any other ideas And as casting proposed, maybe we should also think about having the implicit table building for CyboTech in general. Thank you. Thank you. So What is the way? Awesome. Yeah. 1st of all, thank you. That that is exactly the kind of work we we need in this working you to make good decisions. Christian, if you can go back to slide 42 42, which has the number 14 on it, Yes."
  },
  {
    "startTime": "00:42:04",
    "text": "Let me take a look. Yeah. That was it. Exactly. So I think that this this is, really good way to think about that. So the implementation has this implicit table in mind and that actually looks a lot like the the normal seaborne package tables. And the only thing we would really need to add to see what are packed is a slicing Reference. So you you may not be aware of what what what slicing means here, but there are various programming languages, closure, for instance, or scheme that that have a way where you can insert a variable that is an array into a literal that is becoming an array and essentially splice the things. So you are not putting an array into the array, but you are unpacking the array into the newly created. Alright. And that that's pretty much what's happening. Here. So maybe we should just think about adding, slicing reference to to Seabor. And, also about, having some text about the implicit, and this actually is incremental as well, incremental table table building processes. So so you can just use these words instead of defining, them, For this specific application, But apart from that, this is really great. Of course, I'm I'm petting myself here a little bit. But, of course, the the the work always is done by the bright young graduate and not by, the the people supervising that work. So thank you."
  },
  {
    "startTime": "00:44:01",
    "text": "So what did I want to say? Brief quest brief questing from for clarification. Are you saying that, with subtle extensions to pack basically what is shown on the screen could just be packed Yes. Okay. Thank you. Okay. So I I the one thing I want to say is that these these, beautiful CDF related distribution function, graphs, of course, are based on the corpus of DNS messages. And as always, in these papers, the what we have can be debated. And, a typical issue, in, in the, ones we have is that they are taken from some form of implementation, usually some some lab implementation and, yes, it's it's a 1,000,000 DNS packets. But it's a million DNS packets that, essentially all are coming from the same application, the same software running everywhere and so on. So, these numbers are not perfect, perfectly, valid. They they have a limited quality of expression. So getting more data like this would be really useful. So if anybody here is in the room and has some captured, DNS data we really would like to talk to you. Thanks. K. Any questions, Donald? This is Donald East Lake from Future Way. I be a problem, but I just wanted to be sure you're aware that DNS names or binary clean and DNS labels can contain"
  },
  {
    "startTime": "00:46:00",
    "text": "a literal period that doesn't separate labels and contain 0 bytes and bites that are all ones and stuff like that and that your user interface may die and fall over, but the DNS protocol's perfectly happy with that. And that's actually the reason why Christians proposed to, quantify the name in a placebo format. Okay. Yeah. So maybe this idea is a better idea than the idea to I don't see a button here on my interface to put myself in a queue. So Just the, you know, place in the in the So I may ask. Whenever I'm just thinking about the request, for examples, I actually can, get some examples where the query count is greater than 1, Those are interesting because I don't think they fit in this format and It's also going, kind of out of specification because there has have been recent debates about that well, we don't we're not going to support we're kind of creating a one So but there are actually implementation set of work with that do use it, and they have a fallback to to query counts. 1, if they noticed that Queuecans greater than 1 is not supported. So that's a bit hacky. All of that it exists. I just want Yeah. It followed this work very roughly. Also, the I think DNS op list there was a lot larger discussion about this topic. Yep. Yeah. This is probably something we need to think about. I'm not sure about the use case you're using at the moment. So If there is a valid use case for the domain with plan to use this format, and we, of course, need to adapt for this Yeah. Actually, the, the use case, it was already, kind of pre decided in in the site meeting, yesterday that there was actually a better way of doing it. So I think the use case was to request an additional, record"
  },
  {
    "startTime": "00:48:00",
    "text": "like, surf records. And the text record for the same name. And we agreed that that's maybe better done with, using an EDNS option that you have, like, say, flagging. Okay. I want these additional types for the same name. And that has some better properties, especially the handling by by Legacy receivers that don't know the initial questions. I'd like to suggest that we take that offline because we are running into the into the last 4 into into the last 12 minutes. And Okay. I'd like to make some progress I'm a packed format as well. Agreed. But I hope that was the last time I'm from the room. So and and any any more place to send them to the list. Okay. And thanks for thanks for sharing this. I'll go back to the chair slides briefly because this is a this has been a topic that has seen, seen, quite a few mailing lists threads, and I'd like to summarize a bit here. Before we get into, before I give the floor to customers prepared slides here. So the, this this all started from the requirements of of the the accordion project. It is now well understood that the problem space. We had deeming with here is can be split into 2, which has been reflected in the latest uploads from castle's documents, that one we need to do deterministic seaborne coating in a way that it is not just guidance with a few suggestions of what the application should do, but, like, had has at least one profile. And the other is addressing the remaining requirements of Guardian about numeric reduction and removing a few other items does turn you around. The controversial topic there is around it, which it's sentences are like Is the integer 2 the same as the floats 2? But that is, question probably better left"
  },
  {
    "startTime": "00:50:02",
    "text": "to to philosophical discussion because the there's the underlying question of what does the serialize and deserialize and need to know about this? Yeah. Andres is an as I understand, giving giving there's a some, some practical experimentation there's one more controversial topic that is, like, what precisely, what precisely is supposed be in the DC war in terms of, like, how strict should this be, how panticle should this be, though, Carty, there is there are 2 documents from Karsten on CDE and and DC horses sitting on top of it. And there's a document from Wolf that is the original the original description of the seaborne including both my hope is that those two offers will collaborate into one document. I think that is work in progress. So, Kyle can get a slide from that. I'll just switch over to those and what I hope to hear from you as well. Okay? Sorry. So is is 2 the same thing as 2.0? That depends. And, it depends on the application, and that's why it's, it has been such a move forward to find out that this DC board really is an application profile. Because it's it's exactly the right thing for for this kind of obligation. But there are other applications where floating point numbers in exact numbers that that which may not be category that that has known to a lot of people, but, it it's very valid way to actually operate with numbers, and then they are not the same. So I think it's good that we say it's an application profile that each way it's 2 is 2.0. And the the basic model is not trying to do that. And and we tried to do this in 2013, and got got a lot of slack for doing that. So I'm not going I'm not proposing to repeat that experience."
  },
  {
    "startTime": "00:52:10",
    "text": "And and why we're waiting for the slides will come up. The the part about extensibility in in my DC world, drafted. We, food experiments. So they don't have to be part of the final specification. Because the specification is not making those extensions but I think it was good, to to look at those thought experience and see that they don't cause some some any unwarranted confusion, not complex it. Okay. Just to to, say what There is a Yeah. Yep. Well, just Wolf Wolf Place. Hi. Wolfcamp County, buck Jane Commons. And, I just wanted to say that the the, you know, the philosophical question of is 2 equal to floating point 2, you know, isn't relevant to most people and shouldn't be. And, seaborne is, you know, fine as it is when it comes to the way it represents things. And, the goal of DCBore is a bit different in that it's trying to address a specific kind of problem space. And, the numeric reduction of DCBore is, one of our you know, initiatives to do that in that problem space, which is to take things that are symmetrical equivalent and give them equivalent encodings, or or identical encoding. And, you know, that it's not one size fits all it's never been a proposal that it kind of become the standard in the seabor community. But, has proven its utility in our own work. And I think that the community could benefit from it as well. So And I agree with Carsten that the the DCBore"
  },
  {
    "startTime": "00:54:01",
    "text": "is a profile of Now CDE, which is a which is on top of and, and that we should merge our documents. And, you know, in general, I, I like the direction that, that we're taking this and I would like to also see, DC board at some point, beyond the standard's track So that's all I have to say at the moment. K. Thank you. So just to to remind you of what the underlying problem is deterministic encoding is a way to make sure that the same data, encoded the same way, but everybody liked the, for ASR 1, if you remember that one, And, there is spectrum between things that the generic encoder can do with the application. Actually needs to do. So the application has to make up the mind of how they do their floating point communications and how they represent Chimes and all this stuff. So this this cannot be done by the deterministic encoding. Mechanism in the generic encoder, So 8949 left a number of details to the application. And didn't quite get the cut right there between the things that were left to the application. And that that really should be part of the the fundamental of of the functionality So the the problem is that people who write generic encoders these days don't have quite the guidance they need to put a deterministic encoding function. Into this. And this, again, leads users of those libraries to think that the the deterministic encoding mechanism of Cboe. It's not which it is, but it leaves some things to the application, and, we we need to fix So the, yeah, idea is to, write a common deterministic encoding profile, on CDE in short, that needs this down. In a way that is compatible with"
  },
  {
    "startTime": "00:56:04",
    "text": "most reasonable application profile. Mean, sure. Yes. Maybe accept exceptions. But, we believe this this covers not 80%, but more like 99%. Of all applications. And, this document, we we I draft which I submitted during this meeting, This also defines the charm application profile, and and DC war would actually be one of these application move outs. I don't expect there to be 10, 100 application profiles because the the number of various ways of looking at data is somewhat limited but I I mentioned the this thing with exact and in exact numbers that it really is very ingrained in in some area. So maybe there will be 2 very busy. Those people that don't need 1 right now, so we will not. Gitraet. So, my plan would be to be really fast in adopting the common, profile. I submitted that as a BCP just to to get the discussion going whether it should be the PCP or the standards. Track. I think the the the implement is in the 8 world here. But still we should solve this correctly. And, then, I think, with it. I had a little bit of, exchange already, on to merge the 2 DCB documents that that we then have so I split off the the DC ball stuff into a hemorrhage document And of course, Wurf has one with the whole motivation and, and so on. So I'm I think, these two documents can be merged very profitably. And we also can get rid of the extensibility aspect because that's not intended"
  },
  {
    "startTime": "00:58:04",
    "text": "for a DC board. So we should be able to do this in I know, maybe the next month or so. Shouldn't be, too hard. And, then we can look at document and find out whether we want to adopt it and, whether we want to put it on the standard structure. But the city document is there. It's out here. Please have a look at it. It's a very long because there there isn't that much to be fixed to be made down from 89 for 49. 89 49 is pretty good already. So please look at that, and then we need to decide whether that's a VCP or a standard spec for life. K. Thank you. There's one question that I want to and forward, like, to the gen to the general room already. Especially especially for those who have read the document, but also for those who have followed discussion, will your support adopt adopting this even without the, kind of in considering that BCP or status track is like to be deciliter. I'm starting a brief utilization here. And while I'm waiting for people to final buttons. So, custom and and Wolf. I hope to see, documents soon by which I can find out whether I can later in the data tracker, make one document, replace 2 others. And I'll be happy to do that. Awesome. Yes. Okay. I'm I'm getting I'm getting 10 yeses here and and I'm not sure. I think the 30, the 28 no opinion are people in the room who haven't the button. So that's not explicit. No opinion. So there were some five people who didn't find the button. Yeah. But I like the number of yeses is still increasing that well. So I think we can reach him we can start a call for adoption on the list and kind of kind of kind of kind of kind of Go with this. Okay."
  },
  {
    "startTime": "01:00:01",
    "text": "Still still rising. Yep. Alright. Thank you. I think. Well, let's just put the dates up for the yeah. There is. Good point. We still have one chair slide. For the last, Yes. For the last seconds. So, Yeah. We've had interims. I think they were successful. They've also been alternating with with a call working group, let's keep it that way If anyone has opinions of anything, we should change their us know. Let us know. But that's the plan. K. Any other business? 20 seconds? So just in case country member, which week has the Cboe ones and core ones. Seabor is odd. It's the same as everywhere. Yeah. But the the change the the the change that changes every year. I said the wrong thing. Cars on cars on cbos if Yeah. Which week numbers are you using? Okay. Thanks, everyone. See you on interim. So number's fine. I think that would matter. Okay. And, yeah, this is why this was, yeah, Oh,"
  }
]
