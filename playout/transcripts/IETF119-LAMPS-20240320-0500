[
  {
    "startTime": "00:00:24",
    "text": "Okay. It's time. Let's begin. Okay. We've reached the, top of the hour. So let's begin. Welcome to part 2 of the lamps working group. Next slide. As a reminder, we're working under the note well. Please make sure you understand your responsibilities before you contribute There's a lot RFCs listed there for you to look at. of Please treat each other with respect All the time. Next, I We went we went through most of the agenda to migrate surprise. Last, session. We are on this group 5. F is the next presentation. Which is the last of the adopted documents we'll be talking about. And then we have these Documents. That The authors are seeking adoption. So perhaps we will be going a little slower as we go through these, There might be more discussion. And we and we have one additional We have one additional document, under consideration that we added during agenda bash. So we'll be doing honest this document at the end about the non So there'll be a 6e on CMP Nonsense."
  },
  {
    "startTime": "00:02:01",
    "text": "Okay. Gonna move to the presenter by So you may recall that in Prague. We had a cryptographic researcher, Falco, present a, interesting attack that he found against, CMS, and The next slide. Summarizes it, basically, the a tab or intercepts a CMS authenticated envelope data that uses either CCM or GCM and they manipulate, the message. Considerably eliminating all of the authentication making it look like it was encrypted with a, CBC. And turns each block in the message into a guest. And that sends that garbage on to the victim And if there is a way that he can tell What the plain text is that that victim sees then he knows He can find one of his guest blocks that works that's enough for him to figure out the key. I'm sorry, to learn the bla the plain text of that block, not the whole key. And so he this is important and highly structured messages like password change messages or something where you say on your new password he is. Something like that. Next slide. So the mitigation is to, in some way, bind"
  },
  {
    "startTime": "00:04:03",
    "text": "the encryption algorithm identifier into the key derivation function. That's involves 3 parts, assigning annoyed for that, for this new, technique. And then advertising it in a SMIME capability so people learn who supports it and who doesn't, and then doing the encryption with, HKDF of the key that, all of the recipients have plus the algorithm identifier that is actually being used for the encryption Thus, where the binding occurs is in that, that KDF. Next slide. So here's an example of the CEK that is produced by whichever, recipient info technique is being used. It's got an AES GCM algorithm identifier including a nots, So there's the The 2 inputs are the algorithm identifier and the CEK itself. And the bottom line shows which AES key comes out. For the CEK Prime. Next example shows how, it works with CBC. And, So if you Are using CBC? The technique works the same. Next slide. So the, Using envelope data as an example, envelope data has this structure with the content, encrypted content info with the bottom of the slide. The new OID goes into the content encryption algorithm identifier"
  },
  {
    "startTime": "00:06:00",
    "text": "and the parameters for that actual algorithm that is being used. So if the actual algorithm was cipher block chaining. AES was cipher block chaining. The new OID goes at the top level and the parameters are the cipher block chaining. OID and the IV. Next slide. The, Content is then encrypted with the CEK prime. And that's how the actual binding occurs. Next slide. This technique works, for, encrypted data and off envelope data as well because they use the same structure. Encrypted content info, So you put the same way it in the same place in both of these other structures. And then do the encryption or authenticated encryption with the new CEK. Next slide. Works out with all of the flavors recipient info as well. Because there was each produce the CEK that goes into the KDF. Next slide. So the design rationale is pretty simple. That, avoid negotiation because in CMS, you don't have a round trip. You can't you're not both online at the same time. So picked ones. Picked HKDF was shot to 56. If the attacker removes this OID, then He will, then the recipient will not be able to do the decryption because the, Key is different. Altogether, but at the same time, the recipient doesn't won't have the same garbage message that the attacker intended, So even if a block matches in any way. It won't be the correct garbage, I guess, is the answer"
  },
  {
    "startTime": "00:08:00",
    "text": "card, which being the word Falco used to describe likewise, if the tacker changes, the algorithm identifier in the parameter section, Then the KDF will produce a different result. And again, the attack fails. Next slide. So and, prague. We talked about a way forward that involved publishing in internet. Draft with this mitigation, assigning an early OID then gain some implementation experience, make sure this actually works. And everyone, is getting interoperability once for sure of that, publish a, standards track RFC with this. And then Update S MIME to use this technique. Next slide. Have the draft. Next slide. Yesterday, got the void. Literally yesterday. this morning, I posted So new Internet draft with the way it did it. Next slide. The next step is gain Hi, Gelsworth. Does your draft can hintest factors? Does the new oil change test vectors. The Boy does not change the test vectors. Because only the parameters go into the KDS. So the test vectors are correct. The only thing assignment of the oil changed was the value that goes into S. Mom capabilities, And that I updated. K. Thanks a lot. Daniel. That's the last slide, but we do have Dan in the queue. Anchai. Sorry. This is the lost line?"
  },
  {
    "startTime": "00:10:00",
    "text": "Yep. Okay. I can't argue with the choices. I wonder if that affects what we're doing in CMS guide. We're now HBF is required Should we just change See if the sky were to always use HKDF if if it's gonna be needed rest of CMS. for the It'll be available, and I think that that that that that you need to think about what environment I can't think of a reason not to use it in every case. However, I there might be environments where it's not where this attack is not possible So Okay. I mean, the problem with with such a low level building block, right, is is that, there might be environments where where it's not all that important, but at the same time, 1 HKDF Invocation is not a huge overhead either. Not not concerned about the overheads is that the fact that it has to be implemented now means that for some of the logic for, from why we must use came back at the CMS level kind of goes away. Is all all think about. Thank you for we so are you suggesting that would update CMS itself to all to only support this technique. I don't know if I'm suggesting that I'm suggesting. That's usually a heavier lift. Because CMS is currently a full standard. Yeah. Yeah. No. I'm just wondering if COVID or should remove the game back then if this is going to be essentially required. But, yeah, I guess we have to"
  },
  {
    "startTime": "00:12:00",
    "text": "if there's cases where this draft would not be required. Yeah. So, I mean, it'll take a couple of years if we wanna update CMS and get standard. it back to full Okay. Thank you. Yep. Hey, Sean Turner. On the last bullet point, Sean? I've been in contact with Blake Ramsdale, who is the, one of the other 2 co authors, the the third one's room shot as deceased about doing the RCA 51 biz draft, and we've already got that kind of in play the biggest stumbling block actually was getting it from XML to markdown. I'm I'm hoping to have something reasonable in a GitHub repo. That'll be what was in 8551and8050 And then everyone can see what we changed on the way forward. So there's full transparency. And I hope they help that done soon ish. A call. Who's next in the queue? Chandra. Hello. So I guess, like, existing CMS implementations should update, with this mitigation, And if we hadn't previously supported HKDF, I guess now we need to add that as well. Is that I guess that's what I would need to do to make my Yeah. Okay. The the And, that's pretty straightforward, I think. Some some Yeah. Okay. And I guess in terms of, like, interoperability in that, So I guess if someone has a medication and someone doesn't then they're not gonna be able to interop Yeah. I guess I guess I guess said it'll probably take a few years for this to probably filter through all the implementations and Is that kind of what your best guess is or I don't know how long we we need to wait. Terms of gaining the experience before we publish the StandardsTrack RC. That's question Okay."
  },
  {
    "startTime": "00:14:01",
    "text": "Okay. Well, I'll have to put it on my list of 2 do's then. Thanks. Hi, Mike St. John's. Is pragmatic it work it'll work But is it in the right place? Is the thing that I looked at because I keep looking at this and thinking this is A good place to the context field of the Katie of later on, would it be a better place for a more general man manner across the board for a lot of things. So the reason I don't think that's the case is This, to me, looks like the sweet spot. Because it works across all of the content types and all of the recipient infos. If we move it somewhere else, we lose that. Like I said, pragmatic. I'm not sure. It's right. Bye too. Yes, pragmatic. point, I think that's where we are. At this We have a very old spec. Okay. Thank you. Alright. I think we have Sean Turner next with the CMC dress. Joe. Sorry about that. You could a hint put that would be difficult. You you have to grow a graveyard really fast. Shut my hair off. I mean, that's okay. But one's easy. The others are Next slide. So this is the slide we presented and like, that better. This is the slide we presented in Prague. That was the work we did beforehand. I guess the one thing I'd point out is the motivation for the doing this work in the first place. Was to remove Shaw 1 and, process a lot of that we're open. Next slide."
  },
  {
    "startTime": "00:16:06",
    "text": "Here are some of the changes we just implemented. We added a new module, It's a low module to support HSMAC, shot 2. We removed TLS 1 point 1.0. And replaced it with TLS 1.2. And then we noticed some inconsistencies in the introduction paragraph. Between the, the agent types. So we went back, through the body of the draft and aligned it with the intro. Which involve renumbering some of the the suction headers as well. Are to do to dos. We're looking to add support for chem certificates. We've mentioned that the other day. We would like to add off envelope data, data as well. And we would like to, update the cryptographic algorithm requirements section as well, which is The was part of the primary motivation of, starting this work in the first place. So an open question to the group would be, so if we make shot 2 56 the must, and we remove Shawan completely. Should we have a Should we have, well, a shut. In there as as a bat as a option of optional. You have a queue? Mike?"
  },
  {
    "startTime": "00:18:02",
    "text": "Scott, quick question. You wanted your changes as to replace CLS 1.2 was, 1.0 was 1.2. There a specific reason you didn't go all the way to TLS 1.3 No. Sean, Sean do you have a do you have Oh, better better response. Say yeah. So if you look at the Utah, says you you're okay to keep doing 1.2. And if you're in a in in an environment that we it, 1.3, you per should prefer to do 1.3. So we're just doing what the BCP is saying I'm not trying to get in that fight. It's 1.2 or later. So not yourself out. Says the TLOS work Yeah. I was gonna ask the same question. Then I have another question. So, anyway, the first question is answered. Second one for Kim, So you mentioned you're adding auth envelope data and then Would you consider, I guess, the the the camera sipping info. I guess it's It's too new. It's not published yet, but if it gets published soon, you would potentially add that as well. I guess. That, if you'll read the draft, that's how they're doing. Oh, okay. Well, I haven't made it. That was just it's okay. Thank you. Yeah. Need a phone number. Rich Salzakamat. Yet keep it to just"
  },
  {
    "startTime": "00:20:03",
    "text": "reinforce what Sean said, what we see a lot of traffic. I mean, 13 is winning. But there's still an awful lot of 1.2. And in fact, all of the payment industry and so on says 1 or later. You know, all the barriers of the stand should say 1 or 2 or later. On the bottom line, do you Since shot 256 is a must, do we need a should No. Okay. That's it. Yep. Awesome. John Gray Composite Signatures. Okay. Thank you. Yeah. So I to talk to you about the version 13 updates today, and missus work. We've been working on for, I think it's almost 5 years now. I was looking at our first version. So Anyway, if you can go to the next slide, I'll just describe what has changed. So the first thing Last time when we talked about the updates, we had added this, you know, this ASCII, Duran coated string, which gives us which is concatenated with the message. So that's been updated now to a Dur encoded OID. It just makes it simpler. And there's a nice table in the draft. Which basically shows what those encodings are. So no one has to guess, and we don't expect people actually do the encoding because they can just use what's written in the draft. The second thing is we simplified, the number prehashing algorithms. So if you remember, we do a prehash now since version 10. We were doing a bunch of different ones like, shake and, shot 384. We just thought"
  },
  {
    "startTime": "00:22:01",
    "text": "instead of just remove those, just use Shaw 512 And then so we only have 2 now shot 256 and shot 512. So I guess lowers the the number of algorithms needed. The other smaller changes, obviously, because these are backwards compatibility breaking changes. We update the prototype Oids that are listed in the document. Because they're not compatible. And then the last thing is we removed, falcon, f n d s a. So the reason we did that is Well, Falcon, the initial public draft has not been released yet, and we didn't wanna delay the release of this document. I mean, assuming it gets adopted and all that, but, we just thought who are focused on the MLDSA. So, Those are the changes affecting interoperability. If you can go to the next slide. So this this just I've showed you this slide last time. This just goes over at the message generation process. So we hash prehash the message. And then in step 2 is kind of where the the meat of it is. So we take the Darren coated OA. So the reason I I highlighted that because that's basically the change. So now we have a diarron coated oil that candated with with the cached message. The precast message. And you do that for both algorithms. And then you get your signature. So that's essentially what I wanted to highlight, Mike, did you wanna say something now? Hi, John. My account's worth. So I just wanna highlight this has come up in other working groups since we wrote these slides. If we want this mechanism to be common across multiple protocols, Jose, Jose, blah blah blah. Then a Darren coding of an OID as the domain separator is pretty CMS specific. So right now, this is CMS specific. Unless we wanna sort of abstract if the context string can be passed in but, but, the the you know, the"
  },
  {
    "startTime": "00:24:02",
    "text": "So this is Russ. I'd like to push back on that comment. If you look at the internals of a PKCS1 version 15 RSA signature. Inside, there's annoyed. And, basically, all the people who use it in context other than CMS just encoded as a, octet string goes here. Yeah. And in fact, the table we put here, that's where I got the motivation putting that in there because of pkcsone.5 does that exact same thing. Okay. Thanks. So you could go to the next slide. Yeah. So this is just the verification process. Again, just showing again the it's the Durham coding of the OID that's concatenated with the precast message. So that's essentially the same just the the point at the bottom that was there last time as well. We're we're we're making it very in this document that the applications must output valid signature if and only if all component signatures were success successfully validated, and invalid otherwise. So it's an end mode, and it's always an end mode. You can't do anything to communicate with that. So we can go to the next slide. So this, I just wanted to show this is the complete list of all combinations. There's 13 of them. Some point, I'm not sure if it was between this and the last IITF. We did end up adding NLDS 44 because we have people asking for that. So that's why there's 5 of those. But as you can see, they're all MLDSA based. The first algorithm is for either 4465 or 87, and then we have the, the combinations. So we have the brain cool curves, the nest curves, the the 25519 and the AD 4 for 8. Then of course, RSA. So Mike"
  },
  {
    "startTime": "00:26:03",
    "text": "To the people in the room's stickering how long this list Cool. Tell us which ones we can take out. We'll gladly take them out. Yeah. And I mean, we did wanna I think when we initially started with this, we had 5 and, then, you know, people would come to us and say, well, we need to add this one. And we need we need Brain poker because people in Europe wanna use that in Germany, you know, so That's how it ended up the way it is, but it doesn't have Falcon anymore. So it is smaller than it was. So so I have I have question which is kind of half a joke a half not, Do you preclude using null So I'm and just use m LDSA. Is that the same thing then? So so you may have the second like, a null algorithm? No. No. There's no code point for it. And, you know, we're not advocating another one. I mean, if you really want it, We could say don't allow that to ever be and provide instructions to the designated experts do not allow such thing. a That's all I'm saying. So you don't I mean, yeah, I mean, we can add that. We don't have a co nation that would include that. And but but but but Yeah. Yeah. But but, yes, I see here you're saying we could say we never allow this for these. Yes. Okay. Thank you. Good. Go ahead, Quinn. I'm Kunang Atnes. I I'm not recommending remove any of them. But if the group want to remove some things or to make a less shorter Then I would recommend to, Taking out the, MAODSA. 65. Keep only 2 options, the 44 and the, the 87. Because February 44 is Really good. It's secure. It's good to use."
  },
  {
    "startTime": "00:28:00",
    "text": "And if somebody wants to be, comply with with some other, You know, like, NSA requirement or something, something like that, then you need the, the 87. That's how I would want my list to be shorter. If I need it to be shorter, Okay. Yeah. I I I would have thought you would have said take out the 44, actually. But, Yeah. I don't I don't think we're trying to be a good one. Yeah. 44 is good. I Yeah. Well, it's like Yeah. 44 is good. Oh, I would go with, like, for a yes. A yes would go for 128 and 256. And in this case, 44 is way more secured NAS 128. And so I have no reason to go for 65 The only reason they go for the 80 87 is at 1 level 5. For some of the, requirements, you know, somewhere else, And then I I got to go with 80, 87, then I got to go with that. But for for security reason alone, I would load 44. I don't have to you know, to go anything to waste my performance on. Okay. Yeah. We'll we'll take that comment into consideration. Of course, Yeah. I mean, let's get this document adopted first, and then we'll get to that. Okay. Yeah. So you can go to the next slide unless there's more comments on Just a second, John. This is Russ. I don't know that it affects anything, but what you're trying to do with the places that you're using RSA. Is to Pick a bit length. That is the same as the, choice"
  },
  {
    "startTime": "00:30:01",
    "text": "for MLDSA. Right? And Yeah. doesn't, But it's actually But there's nothing in the algorithm description it and that forces that. So you could combine the RSA 1. To just say use RSA. Right? So what which which RSA one are you talking about? First one, for instance, Oh, I see what what you've done. No, I don't think get it. Shorter. Oh, okay. Quinn, are you still in the queue? No. You're electronically, you're still in the queue. Yeah. And I can't because my online tool down, down. Okay. I just wanted a a quick note Quinn. to If you look, if you need, see, CNSA 2.0 patibility, you don't use composite. You use trade dot. Mld, DSA 87. That's correct. Jonathan. Oh, yeah. Hi, Jonathan Hammel, Canadian Center for Cybersecurity. So in the interest of shortening the shortening the list. Do we need the RSA PSS? Versions because think the argument for including RSA was for old existing code. And how much of that was migrated to PSS. It's just a question. Mean, I think that's a good comment. I mean, I know a lot of people don't like pkcsone.5 and know, let's say it's even broken and stuff like that. So that's why we added PSS, but I mean, Well, so one comment on that. The the inclusion of RSA is not compatibility with the existing code. It's providing the floor. So it's more of an argument of"
  },
  {
    "startTime": "00:32:02",
    "text": "what do you want for your floor? And I don't know what the answer to that is, but it does necessarily have a lot to do with what's implemented out there today. I I I mean, I know you know, people that we've talked to that are like RSA shops when they see this, they're like, oh, yeah. We wanna use the RSA 1 because that's what we have, and we know it, and we trust it. And you know, know we're gonna have to news add new stuff, but not sure we trust new stuff, so we wanna keep using our RSA. So that's That's one of the reasons. Welcome. Yeah. Go ahead, Jen. Sorry. Okay. Thank you. So here is Guehring from Oahu International, Singapore. Now can you please go back your, proposal? About the construction of the of the signatures. Compensate the signatures. Are slightly? you asking me to go back up Yeah. Yeah. Here. Here is the quiz. Yeah. Okay. Yeah. So my question is this one, is it possible you can save, to save the time? So harsh is used Actually, here is for this one, if we have to component the signatures games, Basically, he will still have to do three types of hash, right? First look at the enterprise. They, actually, for s 1, s 2, you still need to do another two times hash. Because, like, the algorithm ID, combined with the M5, it will be tricky to, like, a new message. So still needed to do a hash. Right? Yeah. Depending on Yeah. Depending on the algorithm. Yes. Yeah. Knowing whether it's possible we just had one time. For example, like, to generate the amp line, We just combine 2 algorithm identified together. We the message they get an implant. Than just a site, I'm fine. No more, Yeah. So I I Someone's talking in the room."
  },
  {
    "startTime": "00:34:00",
    "text": "Can you go to the mic? Yeah. I'm not sure. Yeah. I'm not sure. Not Justin Campbell yet. Sorry. M l d, m l d. Account of ML, what, ESA, duct for requires a hash with a specific brief exsided and that's fixing the algorithm. My account's with yeah. There's only 2 hashes involved here. There's the m prime hash, and then there's the RSA with Shaw 2 or the EC should be Shaw 2. The NLVSA does not have its own hash. There's only 2, not 3. And if you do what you're proposing, I think, where you pull the dare dare of the OID up to the first a And and we had considered what, Elon is asking, we had we had considered that. Right? We had our office group. Had numerous discussions about, well, do we have we want to have one pasture at the whole thing, and then if you're using RSA or EC, then you could do this kind of thing while you've already prehashed it and do but then I mean, it's a hash. Right? Hashes are cheap. So why not just Do it again. You keep it simple. Ryan. Okay. We're we're going to, close the queue at this point. So that we make sure we have time for other presentations. Rowan May. On the table of the table of composites, It occurred to me that in many, Anna Industries example, we have a field Could you go to the table slide? It's alright. I I don't much care, but it may help comprehension. Yep. In many registries, there is a recommended. Column, And so It might be this might be a good time to introduce something like that and stay for all of RSA and bring cool things to say not recommended"
  },
  {
    "startTime": "00:36:05",
    "text": "because we're kind of, like, doing these because we think some people might do them, but we actually want them to do to do that. And please go ahead. We had a recommendation column in here 4 drafts ago. We took it out at popular demand. Because CMS doesn't really work that way. That's right. Kind k. I guess it's I guess it's me. I'm responding to Tim's comment about PSS. It would be really stupid if you support PSF and then have to go down to PKCS 1 to do the migration. That's true. Okay. Yes. John Perez. For the last row, which uses MLDSA and ed 44 a. Both of these, use shade, wouldn't it makes sense to use shake as the prehash So we did have that, the previous version before this one. We actually did have that. Again, we're doing the pre hash before. So you I mean, yeah, and you come back. You'd only have one hash algorithm. So we did have that. We thought reducing the prehash what what potentially simplify that. And also depending on what level your your, grip the library. Like, if you have an implementation of ed, and say you're getting in a separate library, but the code where your composite is doesn't have that then it's something else that you have to implement panel Mike, you had a comment on that too? Can you go back to the table? Port Chair. John, shot all the prehashes are 2. These are all shot 2 prehashes. Right, John? Well, you know, what's shot to Yeah. Shaw 2 or yeah. Yeah. The pre hass are all shot too. We don't want shot 3 this level."
  },
  {
    "startTime": "00:38:04",
    "text": "Right. That's all I'll echo John's comment into the mic. So we're, yeah, the the the the debate here what do you have access to at the crypto layer or what do you have is what do with the CMS layer. The the composite is happening at the layer of the CMS library. So are we introducing a shot 3 dependency at the CMS library and is that different than choosing at the crypto library? This is the debate we've been having back and forth with back and forth and forth. But I mean, if the group decided, no. We want this. I mean, we could we could add it back in. Like, we did have it before. We're gonna if we go down that route, we end up doubling the number of OID's because we have the shot 2 and shot 3 rehash versions of everyone. can do that. We We can do it. Chris Kiatkowski. The step back, I think, a little I I'm still it's still unclear for me why why composites are Like, what's the use case really? Well, is it alternative to to Springs Plus or like, Is is the illustcase care, if I can't a very long signature, then I will go for that. Very or just is there any other some other use case. Yeah. I mean, so you're asking what the use case for it is. So, like, a long lived signature, I mean, that's one case. If you don't fully trust, like, the MLDSA, or the implementations. That's another reason. But, yeah, okay. But if I don't trust them, I'll decide Should I go for just I mean, I I heard in the open PGP group today, even the authors of MLDSA I've said to use it in hybrid. So this is one way of doing that. Right? Even the biggest one on this list is still smaller and faster than specs. So so that's that's the use case. Right? The the small, small signature."
  },
  {
    "startTime": "00:40:03",
    "text": "Well, that I mean, that's one. Yeah. There's a number of them. Okay, John. I've closed the queue. We've now exhausted the queue. Please move on with your presentation. Yes. Thank you Yeah. It's not active. There's only 12 slides. You can go to the next one. Please. So the next, I just have a couple of slides and numbers. So say in version 10 or previous to version 10, for you to remember we had changed the it was a sequence of subject public keys now it's sequence of bit strings for the public key. And this slide is just showing. I just took a couple of It just shows that there was a savings. Right? So the public key size you say 41 bytes or 42. Depends on which algorithm and in a certificate. The other thing we removed, right, with the 10 and later, we removed the parameters, right, all the parameters are specified in the OID. So you actually save that. So this is just showing that I basically ran some numbers. I've generated these things. Yes, you do. There was some real savings. I just wanted to show that you include the next slide. This slide is interesting because I wanted to compare Okay. If you have know, appear, MLDSA, subject public key, now you have, you know, your MODSA composite key, depending on the algorithm, what is actually the difference in the size, right, because mean, for the assurance that you get by adding the 2 together. Right? So It's not actually a lot of overhead. If it's easy, you get, like, you know, 5.8% or whatever. 77 bytes RSA, there's a little bit more. This is just showing that you know, with actually generating these things, it's not It's not a huge overhead actually to do that. So, I mean, if you get that extra assurance, then why wouldn't you do that? To go to the next slide I did the same thing for a certificate just for comparison and size."
  },
  {
    "startTime": "00:42:01",
    "text": "And the certificate used was just know, like, the the the template of the certificate was the same for all of them. So the overhead isn't that much either. So a pure MLDSA certificate and then, you know, you add the most MLDSA with you know, one of the composites. Right? So the overhead isn't that much. And the one point was mentioned earlier already, but even the largest of them is still smaller than SLHDSA. Right? So So, yeah, that's what the that's just some numbers I ran just to show people the overhead is actually not a long go to the next slide, please. Yeah, so this is going over the editorial changes So we did change the name. It was machained it to comps at MLDSA for use in internet PKI. Because we removed Falcon and, yeah, is more specific to NLDSA. We removed ambiguity. I made it clear. All components seem that yours must be verified. So that was some comments from the last IETF. We added language to ensure that all component keys must not be used any other context. So you generate these things, they should be freshly generated just like you would generate any other key so the components key should first generated. You shouldn't have, you know, another shirt that has one of these by itself, and then have these, like, you must not do that. We fixed the ASM 1 module. Ross, I think you're the one that found this. Our PK composite signature didn't compile. So anyway, we fixed that. It compiles was shortened the abstract we had a justification text to where and why this mechanism would be used So you can read that and, we resolved comments from Chris who was actually just asking questions. Tim Hollambique and Falco. We added a security consideration second section about trust anchors, and we actually updated the samples to conform to this draft. And and fix nets. So go to the next slide."
  },
  {
    "startTime": "00:44:05",
    "text": "Yeah, and there was a couple. Chris did actually. Thank you, Chris, for I'm already commenting on version 13. So He had some questions regarding the FIPs section in appendix B. Which our authors group will address in the next update. And Chris had also noticed that my I I had a typo on s in one module for Falcon, and spelled it foul. And so when I was trying when I was ripping it out, I didn't notice and that that in the little piece remains, so I will definitely fix update. So thank you, Chris, for those comments. And, yeah, so if we go to the next slide, which I is getting close to the end. Yes. So like, the elephant in the room, call for adoption. So We have gone through the comments from pre 17 I have 117 and also address the comments 118 We believe we addressed all objections. So we clarify the scope and add a justify vacation texts for jurisdictions which are intending to use composites we also collected additional use cases and support testimonials, and that's in the draft where our P Quip use cases draft. Actually, I think it might be at version 1 now. I guess I didn't should have updated that. Sorry about that. But that's in the P Quip working group. I re we removed the Falcon to focus on NLDSA. So that once the MSMLDSA is standardized later this year. So we don't wanna pulled up the draft. Yeah. And we make use of the non separability property, which is discussed in the the hybrid scenes for spectrums draft, this other one is we have a lot of people implementing this and wanting to use this. So in our in in our hackathon, for instance, we have people from Open Ethosetwauwona a person for open to sell, bouncy castle is an interesting story because"
  },
  {
    "startTime": "00:46:01",
    "text": "in our github repository. We had an issue up here that, you know, the the samples in the draft. We're not functioning properly. And that's because Jan picky. Sorry if I if you're on. I'm sorry if I'm mispronounced your name, but from the University of Luxembourg was was implementing this. Right? So, anyway, we did interrupt testing with him and I'll text to him for for pointing that out and, getting those samples up to date, but just shows that, I mean, people wanna use this they're implementing this without us even knowing about it and know, David Hook, who's actually, I think, in the room there, was got a pull request from John and, is is probably gonna implement, integrate that into Bounds of Castle. Have crypto next provider, digiserts, Botan, Entrust, and others. And this past hackathon over this last weekend, a lot of us are updating that to version 13 as well because it's been kind of a bit we've done it like 2 years ago, but, everyone's kinda consolidating on version 13. And then the last item is, I was just in the open PGP working group before this and they had a bunch of proposals, and they did have 2 composite combinations in there. And they're moving ahead with that. So I don't So, anyway, this is the reason by wanna do the call for adoption. Okay. So I'm gonna do a raise of hands. Whether we, whether you agree that this is ready for a call for adoption."
  },
  {
    "startTime": "00:48:15",
    "text": "Okay. The numbers seem to have settled. So, Here they are. 24 think it's ready. One's thinks it's not. 12 don't, don't, don't, don't, don't, don't, care. So Does the one who does not want to come to the queue and say why? No pressure. Just if you want to share, go ahead. Okay. So based on this, after this meeting, we will do a call for adoption. Great. Thank you. Next slide. Next slide. Issues hashtags. K. Now we're gonna talk about hash based signatures. Hi. me? Can you hear Yes. K. So next slide, please. To quickly recap, this is about hash based signatures for X Five Four Nine, mostly because we know several agencies, trust centers, and also industry want to use it, So mostly as kind of a that's a key format for code signing, but there's also some who want to have, like, a root CA based on hash based signature. And next slide, please. So you can not only find, our draft on the data tracker, but we also have a GitHub repository They can also have, like, poor requests and also comment."
  },
  {
    "startTime": "00:50:01",
    "text": "But, of course, feel free to comment also on the list. Next slide, please. So the major change that was to split the document into 2. So basically, there's now one document for stateful hash based signatures. Which is stricter, and where, of course, we talk about all those, key management issues that you have to take into Yeah. That you have to take care of And then there's basically one document only talking about SINX Plus or SLA. Slhdsa And this is where we don't have to be in that strict And, yeah, so this is what we are discuss at the last lamb's meeting Next slide, please. Before I was done, minor changes as well. So there was a bug fix Thanks for to us for spotting that. We've also done some proofreading sanity tracking with try to track the alignment to other documents who do similar things And, again, we think there's only minor issues left so far. Next slide, please. And a few days ago, the call for adoption was started on the list. The words has some positive, comments so far. And we kindly ask for your support. So thank you. Of course, again, if you have anything to tell us Please let us know. So, please state your opinion on that mailed us threat that's going on about adoption. To be clear, If we adopt both of the documents, the first one is ready to go because the object that their fires are already available for HSS LMS."
  },
  {
    "startTime": "00:52:00",
    "text": "But we would need to see OID assignments for XMSS, which we can do. And, But we will wait on the Sphinx document for NIS to publish their document and give us the OID that we'll go in Makes sense? I see you No one in the queue? Oh, there's somebody. That doesn't include the Chris Kotowski. Does it in does this include the smaller parameters for spinings? Yeah. Nope. Okay. Next presentation then. Thank you. I mean, Those slides. Right? Yeah. k. That's what I thought. We get it. This this one hi. I'm Rowan May. This one is pretty simple. When do put you wanna a instant instant messaging URI of some kind in a certificate Some people wanna do that and don't want to use 1 of the existing default key usages and then also accidentally start issuing certs for, DNS names for TLS. So Hence, I am extended key usage, the draft is about as short as it could possibly be. Since, since one was submitted, there were 2, There was a 2 character typo discovered and a 1 character typo discovered, which had already and the editor's copy. Of the of the document So, what do y'all think?"
  },
  {
    "startTime": "00:54:04",
    "text": "Does anyone think it's a bad idea to sign an extended key usage for instant messaging. Okay. Then we'll do a call for adoption of the stock. I Oh, stop. Thank you I'm a Sierra. Uh-uh many minutes do you have? Speed up. Okay. Okay. 2 minutes Either a few minutes or a lot of minutes. Okay. Okay. Okay. We don't know how how long I have. So, Mike We have 30 minutes. 30 minutes. System. So stuff. we really have to go back in time to understand this Yep. I sounds like John Clenson, Some may understand what I'm talking about, but, use them. Yeah. So Mike spoke about the, remote attestation for the CSR in, various presentations already so I assume some familiarity with the subject And next slide, And The CSI itself, as you know, is a kind of a one shot message. In in the to provide this evidence in a container There's softness is Saia, to provide some form of free reproduction. You want to ensure that the evidence, the attestation evidence that is provided by the lower layers of the device is fresh. In some cases, not you don't need to"
  },
  {
    "startTime": "00:56:00",
    "text": "you don't require this in all cases, but in some, you may need that. Like, maybe there's time for it to do something. And the rats architecture outlines three ways to provide that freshness, first one is having a timestamp. The second one is having an epoch value, and the third one is to use a non a brand new value is provided by the party that verifies the at the station evidence. And that's a sort of copy and paste, from the CSR document, which Obviously, discusses this issue, came up in an assigned team meeting, but it's outside the scope of, Of that, the CSR, the station document, right, fully so? So it says, it's up to the developer, protocol designer and implement, to pick the right mechanism if you need so, if you need this, feature. Okay. Next slide. And The What we did here, if this document is, it's it's it's it's the obvious, mechanism is to if you want to use a nonspaced, freshness mechanism is to use a certificate management protocol in bitch the CSR is may be included, 2. Provide such a this non swell you first to the device it then passes that non swelling when it asked for attestation evidence into the API call, and this lower layer, returns than this the attestation evidence in the format that is, defined so that their different, technologies available at the Hackathon. We looked at the way how TPMs, use attestation evidence. The there's another example in the in the CSR at the station draft that uses the ARM PSA at the station token,"
  },
  {
    "startTime": "00:58:01",
    "text": "And so those mechanisms define on how the take, a nonsense input and then produce, sort of attestation evidence that includes that nonce and thereby provide freshness. So That's what the the document does. It it basically defines messages to carry request anons, And then get the nuns And then subsequently, pastors, the CSRs around includes this evidence And we've in this version of the document, we focused on 2 Protocols, namely CMP, the certificate management protocol, and ESD. We have to start somewhere. Right? So next slide. End. If you care about a little bit more details, Unsurprisingly, EST and CMP are different. So to convey those messages. You need to have different ways. You see for ESD on the right hand side, be created a new, sort of API, sort of the the interfacing the eye is using a a restful API whereas the API, I should say, And so that's a nonce request and a, request and a nonce response The payload sign quoted in JSON. Application dash, Chase on. And for CMP, it Looks different. But, you see the details here, the semantic is the same. Just a different encoding in in essence. So the request contains information about the lens of the non status requested because it depends on the, at the station technology, Different at its station Technologies have different sort of have constraints on how long that nonce is, Yes, sir. That's just the way how they were designed. And then,"
  },
  {
    "startTime": "01:00:00",
    "text": "response back on how that long that nonsense valid, including the nonce, of course, Okay, next slide. Cannot have Mike Mike Jones to ask a question. I think that's actually in my last slide. Anyway, like guitar. So, This is a missing component in work we're doing with the CSI, the station, if someone wants to or doesn't have the possibility to use, For example, a time stamp, And but still wants to have freshness with, at the station evidence in the CSR. Mike. Go ahead. Mike St. Johns. Go back a slide if you would, please. Okay. I would add to this and think about you're gonna carry it in the CSR, a non SID. One of the problem the problems that sometime one of is that you know, it may not it may not be something they keep around. They may just generate it or trying to pair them all up some of the pain in the ass. So just a thought. Okay. Yeah. That's true. One thing from the not this hackathon, but the Prague hackathon was, a point we were wondering, and that's maybe a detail Laton, is the question about denial of service resistance Specifically, if you're not, Using Or if you don't want to allocate state at the for example, Raca at the time when you request a nonce from the verifier, and you basically have a large number people asking, you need to keep exactly that state around. You need to op my connection to a verifier presumably, you have a number of connections already, but you need to at least create, store mapping between a session between the session to the verify and and the interaction with a specific device. So you need to There's some state in essence. And, luckily, we have"
  },
  {
    "startTime": "01:02:02",
    "text": "designed, task mitigation techniques to deal with this, but, So, like, tickets in or not a typical Yeah. In in in the TLS are this the Yeah. Some ROC. I forgot the number. Where we had this sort of construction so that you're not a service that you don't keep state, you basically outsource it to the to the device, but it also requires some form of storing some identifier to So good good point. So not, ready for a working group last call yet. But But, yeah, with the second version, we changed the design totally from compared to the first version, based on the hack last hackathon experience, So here we are. Hi, Sean Turner. So the flaw in your slides is you don't have the one which one way your adoption call. So I had great idea. Sounds like a great plan. Is there any reason why you didn't do the other enrollment protocol. It was it was purely I so would you be willing to accept text that, adopted such Totally. Totally. Yeah. So in you'll carry my water for me I I so I thank you. Yeah, it was really so it was I don't have So this is probably a no go in this group. Anyway, if you say, oh, you have a preference for AOP. But, Henrick is obviously deeply familiar with CMP. I I, I know ESE, reasonably well. So that seemed like a fair enough reasonable things to start with. Yeah. And I think then maybe the nice thing about this draft is you don't have to pick a mandatory to implement. It's, like, if you do one of the enrollment protocols, you pick which one. You don't have to specify specify 1. So if you were to add a third, whatever the one we come up with, it still fits. So great. Our help you for some text. K? Thanks."
  },
  {
    "startTime": "01:04:02",
    "text": "I support adoption, and I don't know what he's asked for yet. So, Sean, you're doing tax for EST. I'm doing what? Text for EST? Yeah. Yeah. Sure. If we need it, I thought you were doing CMC. Yep. Blame with satellite. Tough Thanks, Dan Hawkins. So In s, the challenge password is the TLS unique value from the TLS establishment. So why is that not fresh enough? What do you need to pass this I'd need an additional non Sit of the wrong party. It's right. That's true. It's to the wrong party. Yeah. This is the the nonce comes from the verifier, and not from the Not from The RACA So server. ESD So this this also requires the attester to to to to, to, to, to, to, initiate this. Right? What if the protester doesn't Dude Noss request, but the their the the relying party and the the verifier require a non That's a thing. Refuse it. I mean, you you could put the nonsense like the the CSR attributes Terr. Yes. Good. Yeah. And just he he doesn't ask for it, but just say, I I want you to put this nonsense in the in your in your in your CSR. We we use previously where where we overloaded, an existing message. This was the 0, 0 draft and then we did the hackathon, sort of work in deer. It didn't it didn't play nicely to overload the the existing messages we picked one implementation. It was an, a little bit of nightmare. So we switched that together to was switched approach to an independent message because it allowed us to have basically, it is two way communication."
  },
  {
    "startTime": "01:06:00",
    "text": "To pass information there on, like, what, size of the nonce do we need because of the attestation technology. And also, we added the hint for example, if if, the device nose what type of EBITDA, at the station verifier, it has a relationship with, because it then because there's You need did you read the, Rat's architecture document? No. No. Okay. That explains a few things. There is So it's actually I think that would be, a good document to read because it explains on the party that in track actions between the different parties. It explains the passport mode versus the background check model and also the different freshness mechanisms But in general, like, it would be possible to tough the exchange into different payload into different existing messages And that's the version we have for right now. If there's a better message we should stick it into, I'm I'm fine. I don't I don't care. message for me is as good as any other. One Yep. Maybe, Janice, to add on that, we started Can you hear me? can hear We you. Oh, thanks. We started with this overloading the CSR, attributes request or in the CMP version of this CMP, this request template CSR template message, but, we found, like, it is interesting for the RA to know which verifier to request nonces from and there may be cases where you wanna have a key attestation as well as platform attestation, and therefore, it it may course, be an RA policy to decide which evidence to request in a CSR but maybe it is also some input from the"
  },
  {
    "startTime": "01:08:02",
    "text": "and entity needed to know which kind of non to provide. And, therefore, we we changed this architecture to a specific request response message. Thanks, Henry. Usama? Yeah. Summer from. So I was wondering if that, that draft is going to be limited only to TPM and on PSA. The reason I'm asking is that for in execution environments, this is going to be very useful for it. We do not have interested time, and I can I can see that valuable contribution in that context? So two questions. Whether it is out of scope, or is it just that you want to use this as a starting point and then it might be extended over to these where I see more value for this graft. Yeah. Yeah. The the the two examples provided with the TPM and the the on PSA, really just examples, illustrations, So that's not limited to those technologies. So it would be would work perfectly fine also on a on any at the attestation technology. Cool. Thanks a lot. That's Smith. I have a, I guess, as a scoping question, So, I believe you showed a slide where where you're using the background check model. With a verifier through the CA And And the expectation is the non originates from the verifier. Flows through the CA. Are you Does this draft intend to define how that not flows from the verifier to the CA? I So far, I didn't But it's saying the word on on aspect into the document, haven't even fought on,"
  },
  {
    "startTime": "01:10:00",
    "text": "who would be defining this other interface. I naively, a was assuming that this would be done already in rats somewhere. A document that hadn't, read yet, maybe I'm just accused him. The red charter says that they have They they make deference to existing protocols. Okay. So I maybe something to think about. Yes. It's implementable if there is no definition for how the Nance gets from the verifier. Yes. Yes. And whether it's in scope for this group to define it. Good Good question. Indi, in the Hackathon work, we just used the API that was available, from Verizon because BU status verifier. But you're right. It's there's a question about the standardized protocol to have a completely interoperable solution. Could be done. K. Anyone else? Alright. Then we've exhausted our agenda. I know. No. It's just or Do we, will you ask about the call for adoption at some point. Last slide. That was the last slide. Oh, he asked actually. Yeah. Okay. Okay. Yes. Would the minute taker, please? Remind the chairs to do a call for adoption of this document. You can do that. Let's say sit down in a moment. Take care again. There's a comment in chat that I wanna echo from Dan Harkins, Harnes. Does this presume that the attester knows which verifier he's asking for a non from, and does it need some signaling mechanism You know, I can choose that for a good verifier. Say say that again, that's the very final, which a tester? No. The if the attester is initiating this, request for a nots. Mhmm."
  },
  {
    "startTime": "01:12:00",
    "text": "And the RA then has to figure out which verifier, if it has multiple configured, which verifier it's gonna for a knot from that does that need a signaling mechanism? Okay. But that actually requires a naming convention for all of the attest was Yeah. In in verifying. That's he was saying that there was possibly multiple verifiers that could be issuing these nonsense. Yep. Right. That means that it seems the assessor knows who he wants to ask a nonstop for. Yeah. And he's and he's gotta say I want it from Yeah. So so here's so that's a question I asked on the RATS mailing list, which the architecture was supposed, in my opinion, the architecture document was supposed to answer and I I don't think I got a satisfactory answer to my, to my question in the CSR attestation document We Address is by including a hint that indicates which verify to talk to Which I Basically, use the same approach. But that's after the in use. So the the Adesta, it has some API to talk to the underlying hardware to the at the station service And so it gets it gets some of that information, so it needs to get information about, like, who should I actually talk to? It it's sort of like, maybe I need to state those assumptions, more clearly, another update to be done But that's sort of the model. That's why I had this hint in there, which maybe hint is also not the the right term, but to indicate, like, a preference from the"
  },
  {
    "startTime": "01:14:00",
    "text": "A test, on which verify to talk to. Not a Yeah. So you have already a hint. included Yes. If go you Well, that's the answer for the question. It's the signaling mechanism Dan's asking for is already in then, well, then It's this one. So you see hint over there? Hint indicates which verified to request a nouns from. That's what you're asking for, Dan. Right? Yes. The answer answer is is. The already there. I shamelessly copied from the CSI at the it's Mike St. John's again. You don't actually have to have the verifier request announced Sorry. The, relying party requesting us from the verifier. In many cases, for attestation, it just generated externally. The question is, who's re who cares about it? In this particular case, the relying party could generate the nonce, based on This is for a TPM. I know I need an odds of this length. Or this is for x I need it for this length. And then just provide it as part of the additional data for the verifier. So uses a protocol It's it's I see between the relying party and The re the attester you probably don't wanna actually go deeper than that if you can avoid it. Yeah. That that would be more convenient for me to sort of cite sidestep that discussion out together. There's you're right. There's a possibility to say, like, I chunk out the block and the the RACA or the ESD survey. For example, has a certain range of nonsense it could use or whatever. And so to, it wouldn't verify the most like, oh, in this, the rats architecture, d, relying party, which is, for example, the ESD, so it wouldn't By itself, verify the"
  },
  {
    "startTime": "01:16:00",
    "text": "attestation evidence and he said it would it would delegate that task to the verifier. But, how close the relationship between a verifier and the relying party is is is, of course, up to a deployment maybe just a separate, library on the same machine or microservice or it may be a completely separate server that is operated by a third party and then it may get, more tricky. So you need to request the the nuns from there to indicate, like, the verify needs to somehow figure out is this actually current? Is this recent, information I got. No. The verifier only Their ver verifier is only answering the question I'm handing you a blob of data Does this result what's the key that it's applying to or what's the thing that being a test that it applies to and is it valid? So the The chain of certificates is external. The external the external data for the TPM, which is the nonstop we're talking about, is external. So just providing that across that link The relying party should be doing the management for that, and the and the verifier should just pay say, here's what you need as input data. Go to go to your next life for a second. The hint there should not be about the verifier, but about the type of attestation that you're asking for a non score. So it is is it's a class, not a not an end not an end thing. And then that way you can manage the the nonces at the relying party. Without having to worry about Oh, I've got 5 different TPM verifiers, except you don't really get find different TBM verifiers. Some It's it's I think, I like your questions, but I think the right group to answer those is really the right group, to be honest. I don't there, there may be some changes in the, in the"
  },
  {
    "startTime": "01:18:00",
    "text": "in the fields here following the discussions with the with the branch group. So there's definitely this is this type of work similar to the CSI station where There's some collaboration between the two groups needed to answer some of those questions because they are more generic in nature and involves some of the way how ways how companies have implemented the the verifiers and how they want to deploy that technology I've only worked with the with the Verizon verifier, but, Ned, you have you have your own verifier for Intel. And so think we need to exchange, information on how each of those parties, each of those companies actually planning to deploy this whole system. Yeah. It it would be interesting to find out that the verifier is generating the knots, it would be it would make your mechanism, you would actually now have to define a special protocol across that link you haven't had to you're basically just asking a question and getting an answer. Right. So so in this case, like, the I we in the hackathon stuff, we used to the reason verified, it actually has a restful API you re open up a session, you get a non and then it waits did you get the evidence and then you basically passing that information. But it Okay. More homework to be done. Okay. But now I'm really done. I should have told him he only had 10 minutes. Mike Elsworth on behalf of Carl Wallace. Okay. So the hint you've got the hint in the request. And then the hint is in the evidence. Does need to be in the response so it can echo it from the response into the evidence."
  },
  {
    "startTime": "01:20:01",
    "text": "Good question. Isn't that the point? In the response, in the in in in which response in the, in the non response. Are you talking about the non response? You want to have to hint in a non response or in the response in the evidence? It it goes in the app. It is in the evidence. In the CSR, It's in in the it's in the evidence and in in in our CSR document. Right. I mean, yeah, I'd I'd I'm I'm Carl So which Carl wants to come online to make his own point. But, yeah, and you're you're you're not response object there that the hint is not there. Should it be in cards. As we have a sequence of, non requests and non responses would be good to to have also either the hint in the response or, Mike proposed to have an an ID of the the nonsense So to to match properly, varied up, that's a good point. Yeah. Yeah. Yeah. That's a good point. Just my might make it easier if the attests are gonna just just echo the value into the doesn't have to keep stage or whatever. That's true. Depending on the type of evidence the format that's in use, the the, evidence format might include a non so Consider the e token. For example? Yep. 2nd. Now you meant TNT talked about nuns. Yep. Rollette. Okay. Okay. So I have one wrap up item. We're finally done with announcing. Have a, working group last call going on for Draft, IETF Lamp's OCSP nons update. That was,"
  },
  {
    "startTime": "01:22:05",
    "text": "We it created a whole bunch of comments. Gift, There's been a document posted before the cutoff. That address those just had to speak now. If, Your comments on the previous version were not resolved. I'm asking if Anyone has any last comments. If not, I'm gonna push publication request. When this meeting closes. Not seeing any. Nobody's jumping in chat. Right? You know, Okay? And then that's the last thing. So thank you so much. Enjoy the rest of the meeting Another fishing eating. Yes."
  }
]
