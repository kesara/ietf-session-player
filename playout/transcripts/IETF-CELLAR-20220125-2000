[
  {
    "startTime": "00:00:38",
    "text": "foreign um hello so i'm going to show you how to unmute just a moment if you don't know how so um there we go oh there it is so um you'll welcome to uh everybody um as you're joining in i'm just going to put up some info here um so i'm not sure if you can see my cursor yes you can so this is the mute button this turns on your video you can do that anytime you like if you want to interrupt or interject and since we're quite a small group that should be not a problem this is the request to present"
  },
  {
    "startTime": "00:02:01",
    "text": "that i have to approve this is used to present slides that are already uploading we don't use that much and this is to put your hand up or join the queue if we have a list of uh people that are waiting to go um and we're not such a small group we probably won't do that so i'm just going to also point at the mute button there it is try unmuting and in some browsers you have to give mic permission each time which is dumb and others you don't so uh anyone else want to unmute and say something hello awesome thank you hello jerome and martin thank you for joining us today and steve martin we didn't hear you steve i heard a blip from you then i that was all i just said hello hello was it a good hello or a bad one i i thought it was a good hello one problem i have with me deco is that mute on a mute is actually has like a fair bit of latency in the sense that you click on mute you say hello and then you and you mute again and usually it didn't actually happen so you actually have to wait for it to finish this little animation when it unmutes you martin we're still not hearing you you could you have another microphone mute on one in your desktop or on your microphone cord i have a solution i i have solved the problem of the microphone mute because you see what i've done is i've"
  },
  {
    "startTime": "00:04:00",
    "text": "put a piece of scotch tape on a mine so that i can never mess with it again and that solves my problem so we're going to give it like another minute and a half and see who else shows up surprised we don't have dave there were some issues and a car so i will image rain but a bit later okay spencer has a spencer's boss uh enforced a a forced a meeting on him that ends in about 15 minutes so he'll be joining us then [Music] so while you're sitting here waiting for another minute um you could uh go to the the um uh draft agenda and scroll to the bottom or i could do that and we could look at the minutes from the previous meeting if you were there you have any comments about that and in the chat i will paste the url as well hello hello martin welcome you found the mute button"
  },
  {
    "startTime": "00:06:01",
    "text": "reason it seems my device was simplex instead of duplex i don't know oh i've had that problem before yep as soon as i started talking i couldn't hear you anymore i usually use this one online mic test to find out whether or not it works and um uh apparently it all lives in your browser it doesn't actually announce anything so um that's uh i like that one anyway to know for sure if it's uh it's really getting all the way through all right so i guess we should start here so i'm going to got some names in here wonderful uh martin steve michael meter here and that's it there's four of us we have christian who's just a uh lurker by jabber and uh jerome there any comments on the minutes from the previous uh meeting i also posted them by email shouldn't write this in for yeah leave some comments no it's okay anybody else any objections okay uh so uh we've all seen the note well many times there it is um and uh the major one is if you're aware of any patent or patent applications it's controlled by you or your sponsor you must disclose it um and you agree that"
  },
  {
    "startTime": "00:08:00",
    "text": "um this session may be recorded um and if you don't want your face shown then don't turn on your video and uh we also have this code of conduct that we're trying to make sure that everyone is aware of it's been around for quite some time but uh um people want to make sure that people really seen it it's contained in bcp 25 and 54 so you all can know that uh so this is the status of our drafts today um the only real update is ffv1 was reposted a couple days after the last meeting thank you very much um and uh the rest of them probably we could uh be you know posting progress more particularly matraska as we go along uh so previous status was talked about jerome and there's this action here that i've kept for old business so we're going to come back to that when spencer's around um we had the question before which we did not answer uh whether we're going to do an update for ebml um and whether we're ready to actually submit a working group draft yet uh to include whatever errata that has uh arrived and um uh you know just because we post it doesn't mean it's done it's just there uh but we did agree before that it was after matraska is out um and uh we're not going to proceed until matraska is out so we know that if there's any errata that we can include it yeah and when microscope that's the main document the main document right yes"
  },
  {
    "startTime": "00:10:02",
    "text": "and because i i think that we found bits and pieces of ebml that were wrong when we were doing matraska right yeah and also i think since the rfc has been published for ibm or people got interested and looked and tried to implement it as well and we got some reports here and there so yeah it's a process yeah um also one of the things that uh we can do um if we have some imp uh two implementations uh so when was this came out this came out in 2020 uh in in in july so um and its status is that it is a uh proposed standard and so the the ietf has now two levels of standards we have proposed standard and we have internet standard we used to have three levels proposed draft and full and we collapsed the draft and the full into one one thing um and so after document has had has been out there for two years and has at least two interoperable implementations then we can ask the document to be revised to be internet standard and one way is that it just it's just uh if there's no text changes required then it's just an administrative bit that's twit tweaked uh since we are changing the document um and proving it um then uh we could we could if we thought it was ready um to uh make that uh propose that as a as a to be an internet standard um and it's just uh it's like getting an extra medal at the end of the race really does it matter if we need to do errata after that or it's"
  },
  {
    "startTime": "00:12:01",
    "text": "no if we had further rada that may argue for uh it could argue that we weren't really ready or it could argue that we just have to we need to accept it um so i think that that uh i think that that decision i think we should leave to the very end we should simply say okay we're going to respin it and we'll decide whether we're going to iterate at proposed standard or whether we want to ask for the next level or not and i think we can just leave that for the next for later and by uh different implementations do they have to all uh do all the what's in the document for example there's the you know the unknown size that's not well supported in many players are they considered valid implementations anyway i mean well so there's there's there's two things one is that if it turns out there's bits and pieces that are not completely uh well implemented then we may actually note that in the document and say these are not have not yet occurred a second possibility is that we would say they are not implemented and no one cares about them and we should remove them um and a third possibility is that we should wait and not declare it as an internet standard until we have seen uh a more significant amount of interoperability that basically depends upon what are the impacts of not having the feature so you know if we were building a vpn product and um it turned out that no one had actually tried doing encryption um then you might say that well it's not really it's not really a standard yet because no one's actually completed the"
  },
  {
    "startTime": "00:14:01",
    "text": "private part just the virtual network part so that that might argue for okay we're not ready um but if someone said oh well we never actually tried encrypting uh with 256-bit keys well we might say well that's just a detail and uh we know it works with 128-bit keys so um um that's good enough right um later later people when they feel the need for stronger encryption will do that and that's okay and uh i think we're in a different position from all of that is that it's quite an old format now actually and there's lots of implementations it's just that a lot has been left on the side and like for hardware like tvs or streamers things like that no one is going to update the code ever just because we released an rfc but they play the files just fine not just all the features i agree with you i mean exactly so i don't think that's a that's a that's an issue that in fact may argue for that the subset that that those old implementations implement should be noted that if you want to be fully interoperable with everything then don't use this feature this feature or this feature right and that's okay they can still exist in the document it's just they are not fully uh you know uh standardized yet or there's some caveats if you use them or you know something like that um to that so now and the other question about this is to what extent is this about ebml"
  },
  {
    "startTime": "00:16:01",
    "text": "versus is it about matraska and it might be that we actually can't advance until matraska advances because you actually have to and you actually have to have something to play right so i suspect uh i suspect that may be the case um yeah i think so okay so um with that let's go on to uh matraska on the whatever issues that we think we need to discuss as a group uh there are and um that kind of stuff let me see you found the mute buttons i'll close that is there something you'd like me to bring up at this point um i i merged a few ones uh recently uh because i think there was consensus also updated uh part of rewrite of the time definitions because there are two or three different time bases in matroska and before it was all scattered in the document now i just define different ticks for each clock or in each time base i think it's clearer and you may remember i was trying to do a sample precise timestamps and it seems that although it could work it's never going to be backward compatible so there's no real need to go in that direction so basically"
  },
  {
    "startTime": "00:18:00",
    "text": "i just removed that part and simplified the thing i got some comments but more or less it's ready actually comments of bugs that i already fixed before so i think it's clean [Music] i also found if you look at the where are you in the tab i just too marked as bugs i think these we can merge let me check [Music] i know this one is [Music] something that martin bellow was talking about a lot in the past but chapter time end being mandatory or not and i found that they it was needed to be mandatory for other chapters but then uh in the example i made i realized that if you go one level up it just doesn't work anymore uh so now only the lower level of nested chapters in men is mandatory the others are not and actually should be discarded so i changed that text again and uh i think we need some more review on that uh there's also 578 that's we discussed to help the jana registry generation [Music] for when we're published so they don't have to go through the"
  },
  {
    "startTime": "00:20:02",
    "text": "don't know if they have tools to generate it from the spec or something no they they would like the summary in the ayana considerations uh area yeah okay so i made the tool to generate it from the xml source it looks a bit like the ebml1 so i think it's at least usable you can always do some search and replace for whatever format they use the only main difference i have with what i generate is that i don't feel the gaps you know between the ids i saw on ebml that for every value whenever there's a gap they add an entry and say well this is unused for now unassigned because in xslt i don't know how to do that i didn't do it so they would still need to generate that part but at least the actual values they are all there sorted the way they do it maybe we could say any values not indicated are reserved in some text yes but not reserved i think reserved is a special word like if we don't want people to use it like we already have two values that are reserved because we know we're going to use them for chapter codex but they're not really defined properly but yeah i think that the language is unassigned i mean we can say that in the actual text but in the end i think it's almost obvious that the values that are not defined are assigned unless it says the result"
  },
  {
    "startTime": "00:22:01",
    "text": "i think that's fine um uh i uh so the rfc editor might reformat that in the final document or uh oh yeah [Music] i think that what you've done is probably fine and i think you can actually get the if you want to see the result xml file in the so if you go in 578 when it checks that the generation works where is it normally yeah if there's a tab where you on the top if you go on top [Music] here checks and the checks yes and then on one of the if you go on whatever somewhere i am at the bottom i know [Music] before or down i don't know in summary go back in summary top left and at the bottom you have artifacts oh there we go and so there's a zip with all the files we generate and that's the xml that would be the yana file [Music] that is generated uh"
  },
  {
    "startTime": "00:24:00",
    "text": "you know ietf xml at the bottom so there's the output yeah so i use the format that looks like the ebml document which is actually an xml file with an xsl style sheet so it's pretty much straightforward that's great but why yeah one other thing compared to what they have is that [Music] in their case the each element is linked to the section where it's defined with the number of the section but okay we don't know that number until the fire is generated and then it's separated generally and separately and we have no idea actually to know which of the anchors we have in the source goes to what value in the output so i didn't put the actual numbers i put the anchors that we use maybe they can have a tool to generate that i don't know i i think we could fix that up afterwards um i don't i think that it's unusual for people to generate this mechanically like this um but we could generate it mechanically once and when we're done and then we could fix it if we need to yeah i don't expect to update it"
  },
  {
    "startTime": "00:26:00",
    "text": "back and forth it's just to give them something they can start from yeah that sounds great to me so uh are you ready to post a new version of the document um i would like 5 21 to be merged i hope this week it can be done it's the microscopics so basically the two or three time bases i think it's okay [Music] the fonts i i don't remember what this it says there's a change requested uh from moritz but i think it's actually okay we i did what everything he asked i think he's just [Music] not well or not available so i don't know if we'll hear from him [Music] so we could actually merge that one i think that's the two ones we need so let me let me ask this question so uh we have things marked bug in the issues and in the pull requests and so i guess those are ones we need to fix um and then the peaks yeah so but but in the issues here we have things that are marked bugs and they presumably have a fix right like this one fix the iana right i think that that's actually fixed i don't know if this is fixed by no it's for the tags so we don't work on tags right now okay so what i'm trying to get at is that is there a is there a uh how are things that issues or pull requests that uh you feel need to be"
  },
  {
    "startTime": "00:28:00",
    "text": "um completed for the document to be complete how is that being marked right now um so i can let me send you the link that i use it's easier where is it chat two bubbles i don't know if it puts it doesn't go through oh yes i got it yeah so i use that link which is basically filtering only the matroska specifications so leaving out the codec things the tags and also some label control track which is some other document as well also mature scav5 which is basically everything we'll add in the future even though it could be done now so basically that just gives you exactly the list of what's left in my opinion for the document and so if you look on the right almost all of them has a linked full request [Music] so that's basically the only pull request we need to fix after that will be good um [Music] the ones that don't have a pull request i don't remember three of them here yeah don't remember like the color space [Music]"
  },
  {
    "startTime": "00:30:02",
    "text": "oh yeah so yeah i made 548 which more or less fixes that except they need some better text but it's a codex thing it's not maybe i'll just change the the project to codec now okay and then it will not appear in the list because the part that's in the spec is done okay so that one is done menus that's old okay i'll have to look at that one because i don't remember and that's from ashley from a long time ago [Music] and the last one oh yes i don't think it's a priority or even something that will end up in the specs it was just a way to describe the metro scale but in text right yeah it doesn't fall in the actual spec so yeah they all have a linked um request that needs to be merged and so basically the other link i use which went through is the same filter but for pull requests and in that list you have nine uh pull requests open which more or less correspond to the issues on the other tab okay cool so once we have closed these nine"
  },
  {
    "startTime": "00:32:00",
    "text": "for me the document is ready to be published i mean for review cool all right um that's wonderful um do you want to publish is there a point in the next two months that you think you want to publish um you want to publish an inter on a new version or do we need to wait for all nine to be done not all nine but i think uh [Music] the timestamp so 521 the fonts 115 at least these two [Music] the other ones what the jana we can even merge now i mean it's not really a part of the document uh please do let's do that okay um i don't want to push the button i want you to do it um okay that's wonderful any other comments from anyone else so that leaves a pull request there's two i'm pretty sure okay the alpha mode i don't remember so jerome uh i would love to have the same conversation about flack oh no sorry martin is working on flak um do you want me to pull that up where is it maybe aren't don't have as many issues"
  },
  {
    "startTime": "00:34:01",
    "text": "or as many pull requests but let's just talk about where we're at two days ago woohoo there he is martin any comments is there something you think that would benefit from the group looking at together or is it just a yeah well the the thing i mentioned in the email i'm not really sure whether uh some of the pull requests add something to the document that is um what's the word um appropriate for uh for internet standards uh okay because i i added two appendices um one with numerical considerations and one with well really for both examples that's the 120. because in the past i've seen that quite a lot of people are attracted to trying to implement a flag decoder that don't have any experience in the field or anything similar so i had the idea well the examples mostly they help with that when you when for people well uh the the document is quite how do you say it uh it's sometimes handy to have an example yeah no i agree i i actually this is very good kind of appendix kind of content um it actually if it's helpful to an implementer then i think that that concluded um uh we we do we don't always do this in itf documents it's probably a bug that we don't do it more often"
  },
  {
    "startTime": "00:36:01",
    "text": "um but implementation advice particularly in a non-normatively in an appendix makes sense to me in appendix or an introduction actually because we used to define everything at the beginning of the document sure that makes sense but in this case what he's giving is he's telling people here's some advice when you're coding right well that's the numerical consideration section this and this in well this section this section uh with the examples are three example example files with an uh well files files you can there's a hexadecimal interpretation you can really convert into a flag file um which works with coder that's older that's compliant to the format and then in this section it really says at this point at this byte you see so many bits that code for this so it's really a step-by-step decoding by hand no yeah this part uh i was thinking to the other pier appendix numeric numerical considerations this form it took like more some definitions and some vocabulary about the audio and it may be good to put it in introduction maybe yeah no i agree with you if if if it turns out that the appendix would like to use some terminology which has not yet been defined but would be good to define in the document well by all means do that that that even if even if you introduce those terms in the introduction only so you can use them in the appendix i don't have a problem with that um i think that's okay because it also means that when you know two people are having a conversation in email right about what they're doing here with this then they'll have some terminology"
  },
  {
    "startTime": "00:38:00",
    "text": "already uh already done right okay okay i i don't know which terminology is introduced in the course of consideration now this is the numerical considerations but uh um it looks like that some uh part of that is used uh is useful for understanding the specification itself after uh am i wrong or yeah well well i don't feel that because because uh well um when you choose a 64-bit sign data type for every all arithmetic in any flock decoder encoder you're safe and that it works the thing with the convertible consideration is that usually using a 60 44 bit signed data type isn't really the fastest way to implement a decoder but if you want to make just a good developer that goes that doesn't have to be fast you can skip this whole section okay okay when you want a stop faster you you have to or when you have to implement it in um a dsp dsp or something a portable device you cannot always use 60 for 64-bit design data you can you can use decision to see when can i use 32 bits or 16 bit even with the decoder decoder and uh do when you have to create multiple data paths one for a wide and one for a small small dip well there are considerations when to use one how to do how to do the runtime selection okay that's the idea of the miracle considerations uh i'm okay i'm i'm all for including this"
  },
  {
    "startTime": "00:40:01",
    "text": "stuff i i'm i think that jerome i think you should read it again and if there are some words that you think belong in the introduction then let's flag them okay okay and uh for the example um yeah it is relatively big and i am wondering if it is useful to be in the afc or in a document in the flac repository so i don't know um perhaps perhaps also has elsewhere but yeah but sure but sure what kind of torii story is uh mikkel uh michael do you think it is exactly extremely valuable in the document these are worked out examples so that's really kind of really good because it means that someone can come back and feed that through their implementation and see that they get the values here this is like awesome that you know that it says each one there's four bits and what the value is and what does it mean okay so we but we we need to specify that it is for information only so if there is a mismatch between the example and the specification the specification is the more important yes obviously oh how how how i can make that or something that it is marked informational or that it just has to be in text so basically what you say you say this informational in for emotional appendix that's basically it the other thing i recommend is that you start all of your sentences on a new line but i'm not"
  },
  {
    "startTime": "00:42:00",
    "text": "going to change that for that i'm not there that just it just makes it easier to edit later on okay okay um but it's best to do that as a single commit that changes the white space essentially [Music] so i prefer the issue i see with that kind of a little example is that it has to be full proof if there's an error in it an issue if you lead people in the wrong direction yes it obviously has to project very well um that's why i do a tenth of each end of each example i uh well i did everything obviously obviously so i did check with the md signature juror and that and that that failure correct correct but there can can be a mistake in there sorry i was uh being interrupted um so i heard i heard um steve say that the example has to be good and can't lead people into the wrong direction and i agree with that um so that just really means that someone else has to walk through um who understands uh who probably he's implemented as well that's really i think the needed part um and as long as we can do that then i think we're good"
  },
  {
    "startTime": "00:44:01",
    "text": "one of the um when i was writing the examples i actually found a few bits in the specification that well needed a little more clarification yes just before this meeting i actually i found some that that i well example example and i found so i add to another pr you can specify specified how uh escape particles are that they were assigned to and but i think these examples can also help for people proofreading rfc c which don't know anything about flock about well cross raft thing and claire in the classic specification this should be more more verbose or worded otherwise okay cool so i um i think you're making great progress uh i think you should merge your things and post a new version as soon as you're comfortable with that um and then you know we can come back and figure out what issues are are in this list that we need to address uh or which ones are you know maybe irrelevant in the end some of them may be quite old yeah you know 2017 maybe we can close yeah i could text check a few absolutely obsolete or yeah no longer relevant all right uh in the name of time let's go on to uh talk about ffv1 if there's something to talk about uh not really i didn't touch it"
  },
  {
    "startTime": "00:46:03",
    "text": "okay that's cool i know we're very busy on this just to do this [Music] that's great um well i really i don't have right access to the repository so i can't merge oh you don't know i can't do that i can merge when it is okay collaborators well so your your what was it st f oh what was your identity ktm f01 that's not right kt yes all right i think that's the right permission if you need more then let me know okay okay anything else to talk about today our next meeting is not that day because that's today was it uh our list is here"
  },
  {
    "startTime": "00:48:01",
    "text": "uh so our next meeting is the 22nd any other business today um you said uh for a proposition you need needs to independent instrumentations but but when does that mean two matroska implementation should be fine or should it be two implementations of ebml one of matraska and some of uh someone else using for something for something different than matroska uh it actually i think is better if it's to matraska because if it was something who implemented bob with ebml and someone that implemented frank with ebml we wouldn't expect them to interoperate at all would we right because they don't do the same thing yeah so so they actually need to interoperate which means that the rest needs to be the same which actually tells me that actually we can't advance the ebml document until the matraska document is uh well well specified and that's okay yeah makes sense all right so i'll talk to you guys on the 22nd um stay warm if it's cold there because it is here holy it's cold here um and um that's about it have a good day okay bye-bye right hey thanks"
  }
]
