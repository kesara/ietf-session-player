[
  {
    "startTime": "00:00:00",
    "text": "Yeah. Of course. But, no, you're on time. Alright. It's 15:30 or 330 for the those are just a view from, the US. This is IETF 118's EMU working group session. Please note, this session is being recorded. I assume I don't have slide controls. Alright. This is the note well, which covers all of our policies or a large number of them, anyhow that would reply to our meetings, so if you're participating in this meeting, you agree to follow those policies and procedures. And in particular, we have things like patents, In fact, we do have patents filed against or patent disclosures filed against some of our documents. It's kind of important that you do pay attention to those and let us know if you have patents. Anyhow, all of that information is encoded in the BCPs that are linked on this slide. You're welcome to look them up and read them. I'm sure you've seen them many times. Next, please. And the note really well. I will read this to you. IETF meetings, virtual meetings, and mailing lists are intended for professional collaboration networking. So it'd be really nice. We have a code of conduct RFC 7154. We have an anti harassment policy. And procedures, RFC77 please talk to the Ombudsman's team. If you feel like you are concerned about how these things are going. But basically, this slide says, be nice to one another and let's be professional. Next, please. Alright. As, Joe has mentioned repeatedly, please sign in to meet echo. We have the on-site tool, the the lite client,"
  },
  {
    "startTime": "00:02:01",
    "text": "keep your audio and video off, if you're here. And for the remote participants, make sure you don't turn on your audio or video unless you are actually recognized or sharing. Which, obviously, you're not. Okay. Agenda, we have a notetaker. 2 of them, actually. Thank you. I won't go over the chat. That's part of built in. The video comes through me deco. Use the on-site tool. Okay. So very briefly, we have a couple of working group documents. They are both, they've both been submitted to the ISG. I don't think Paul walked in No. No. Okay. So Paul hasn't walked in. So, keep version 1, is in the, AD evaluation phase, I actually checked with Paul several weeks ago, and he was about to do the write up but I have not seen anything. So I've dropped him a note, asking to see where that is. EAP AKA, forward secrecy is apparently in the hands of the authors. Yari, you or someone else wanna speak to that. Yeah. Exactly. Yes. For a better war, it's in the hands of the authors. So we have, by my count and isn't here, so I can't confirm. But I I think there's 2 things. Just one knit from the, Ayanna reviewers that had to be folded in, which has been done, but not submitted. Something that we discussed in the previous meeting, which we haven't done. My fault, but we will get to this. Okay. Alright. So we don't have slides for Yeah. No slides for that. Okay. So Ebed Hawk was, discussed at IETF116 in Yokohama,"
  },
  {
    "startTime": "00:04:00",
    "text": "At that time, we asked if there was, any apparent support for the document in terms of maybe the working group adopting it. There hadn't been a lot of, show of support at that point. Was supposed to be taken to the mailing list. And I guess between the authors and the, chairs, probably thought the other was going to, take it to the Manning list. And, so it's, it hasn't gone anywhere. Gora, and do you wanna say a few words about it. That's done here. Okay. You're on another. I I didn't prepare any, any slides here because this there this has been discussed in the working group for some time. And, and there are no major changes to to the document. So Just a reminder for those of you who don't know who this is. This is an API method for ad hoc, which is the lightweight authenticated key exchange produced by the Lake Working Group and approved in August. So it's now in RC editor's queue, which makes it a good time to start building, other applications of it And, so what Eddock is doing is basically making use of seaborne and cozy an adult message is a seabor sequence, and that using seaborne and other, optimizations, we make these very compact So under various advantages of that, if you're happy, interested come and talk to me So but you could think of EAP ad hoc basically as a a mimicking of EPTLS. RFC-nineteen one 90 with some minor adaptations for the use with that hook We, we think the draft, we are not really done with the draft. It's I mean, still work in progress, but it should be straightforward to see that it's it's possible to complete the exercise by mapping from from So, yeah, what else did I write here? Yeah. So"
  },
  {
    "startTime": "00:06:02",
    "text": "we have asked around for support, and, unfortunately, some of the supporters are in the, in the seaborne working group at the moment, but I'm have some proxy, which I can do. If we get to that, And there are also people who are not participating in IETF 118 who are interested in this work. In particular, one company working with OEMs in the car industry who wants to use AP ad hoc Some people wants to use it to key Maksek there's interest in 3gpp. So there is a new work item on, the entire OT which is targeting constrained devices. And as you know, EAP is one of the modes of authentication in 5 g. I think I stopped there. Any any any questions, comments, Okay. So we're looking to hear, statements you know, either to the mailing list or briefly here that people are interested in adopting this or think that this is something worthwhile doing as I said in Yokohama, I think we had 4 out of all of the participants and, nothing, obviously happened on the mailing list, so it's not clear at this point that other than, the authors, statements of of interest that we have, backing for this I'm not sure if you were gonna okay. Thanks. Does anything anybody wanna offer, any statements at this point or you know, show of support. Otherwise, we can, of course, ticket to the mailing list as well. And, you know, through the formal process, but The queue might give us some working. I can't see. Let's see. Renzo 80. Okay. Yes."
  },
  {
    "startTime": "00:08:01",
    "text": "I'm a new face on, for this working group, but I've been involved in in Lake in and, cause your score, IIT related And at the time, I'm I'm from academia. We were we were using for many things and I I I support the doc for, yappy. Yeah. Because we for IoT, it's, yappy. It's a lot of Viti, and we're missing a a lightweight approach, and I ed edoc fits nicely. But I speak on behalf of academia. That's fine. Margaret. So, I would wonder, especially now that people can do it remotely, if we could get the people who want this to talk to us and tell us why it's better for them than all the other standard heat methods, which I don't understand. So If it is, I think we should do it. And if they we ought to really be referring them to one of the other methods. I think we should do that. Don't think we should just kinda say, you want meat method, but we're not gonna talk to you. No. And we're not making a decision right here. This was mostly to drum up support or to If it if it went the same way as when in Yokohama, then we would be it would be pretty clear that There is really no reason to to continue this So I'm sorry. I'm trying to log in. But, anyway, Alexander Palf. So I've worked in the past a lot on on on EAP over, for example, over LoRa 1, when it was reading the beginning and things were, like, the lower alliance were in its in its infancy. And I really, regret that in the end, it was not the the EAP standard based solution that was chosen, but something, you know, other different. So I think that here we have for real, uh-uh, important job to make that to have this EAP lightweight"
  },
  {
    "startTime": "00:10:03",
    "text": "uh-uh mechanism for IoT. Because, I mean, Laurel 1 is one case, but there are, like, a bunch of other IoT Technologies, slow power technologies that are going like popping up every day. And every time they reinvent the whole thing, and just like EAP is is something that is, I mean, it it's, ubiquitous around the I think that's, important work and I would support and I would work on that as Okay. Thank you. Alright. So I think Yeah. It obviously feels like Well, go ahead. Please Goran. go ahead, Okay. Thanks. We're looking for for the button. So just to address, why don't we use another profile, for priority. And and, I mean, at we're doing with that, Hock, what what the Lake Working Group has been working on for, and number of years is to minimize the message overhead. So we're looking at messages are less than 45 bytes. And that has a big impact on performance of of IoT devices because this power consumption associated to transmission. So so longer lifetimes for the bat for the devices. That's why you want to very narrow, oh, very slim profile of the of the Okay. Alright. So I think we can take this to the, to the mailing list as a formal working group call for adoption. And we'll get that taken care of shortly after after the meeting. So next up is something that, It says on the agenda it's termed as, see mobile IP. Yeah. But well. Alright. So the slides say MKA over IP, and I'm sure, Hooman is going to tell us on about it"
  },
  {
    "startTime": "00:12:03",
    "text": "Yes. Thank you. So my name is Hooman Midgolia. I'm from Nokia. Basically what the next slide actually is Thank you. So as you guys might know, there's this new thing is a quantum computer. And apparently, it's gonna break a bunch of, PKI algorithms. So anything using ipsec, SSH, TLS right now when it is using PKI. Defy Hellman, etcetera, etcetera. Is gonna be broken. Now there is an extra slide, please. Now there is a by chance a standard, you know, triple a, we call it max. Like, you guys all know about it. That is quantum safe. Again, by chance, you know, 10 years ago, 15 years ago, whenever they just started, they use AES 128, 256 to wrap the SAC, the data package, and they distribute it. So as in Nokia, we start thinking that, you know, with this quantum computer, coming online. And the fact that some of these algorithms from PKI point of view are broken, how we can start introducing a quantum safe network. That is really, line rate encryption, with very low latency. And since we already knew that, you know, when it comes to max it is quantum safe. We kind of thought that why not use that technology not to, reinvent the bill. Very simply try to kind of modify the technology as it has been done and try to, bring this quantum safe type of encryption into the market. And, what I'm gonna explain is one part of this technology, which, we are trying to put MK over IP. The next couple of slides, you will see why we are trying to do So here are the different type of packets that there is the first two, rows It was our, already existing Maxic packets in the world. The first one is actually in the IEEE"
  },
  {
    "startTime": "00:14:02",
    "text": "that Ryan runs authentication over the entire packet. And then encrypts the payload, including the VLANs. The second one, I guess, 10 years ago, somebody wanted to do freelance switch. Wanted to encrypt the packets over a freelance to each network. And then they say, well, why not put the VLANs into clear? So you can manipulate the VLAN you know, pop the freelance, swap the freelance, whatever you need to do. And that has been in the world for the past 10, 15 years. And As long as I know, it's not in the it should be a sander. So we introduced Maxic engine in our NP. Call it the bug, call it feature, whatever you wanna call it, what we did is that we start making the authentication and encryption offset to be programmable by our software. So, basically, we can go into our NPE encryption engine, and we can say the authentication or encryption and offset the starts and doing so, we can start putting MPLS labels into clear. Using the same Maxic engine as it was previously. Can put ipv4. Headers in the clear. Can put ipv6 headers in clear. It comes to SRV 6, we can put SRH into clear. So when we shoot these packets through a network, MPLS Network, IP Net Fark, ipv6 network. Anybody can manipulate the header When it comes to the labels, who off the label, pop the label when it comes to the ipv6, or ipv4s track the TTL. Manipulate the SRH, etcetera, etcetera. And all this works with the Maxic engine, which has the 80 802.1aeheader on it. Line rate, lower latency, And, what we see is that that, lot of federal customers that love this because, It's quantum safe. First of all, as we said, max quantum safe. And then next is it provides encryption end to end between 2 routers in a IP network or MPLS network."
  },
  {
    "startTime": "00:16:02",
    "text": "So when we started Here's the data path, then the next slide, please. So again, this I already explained, basically, when you start using, we call it any zeck, because it can encrypt any layer of OSI. But basically what it comes down is that when you have 2 is that does this type of encryption. You can have any, transit routers into the network, LSR SR V6 routers into the network. And they manipulate the header and you have an end to end encryption. As I said, most customers they love is because it provides them a little bit extra with Maxech on Maksek as you folks know when it comes to the router. You need to decrypt on the ingress. Make a routing decision and encrypt on the egress and shoot the packet out. So there is a very small moment in there that, packet is actually clear. And when it comes to federal government, they don't like that. They, you know, they they they are thinking that if their router is not physically secured. You can put a probe on it and then start looking at all these packets. You can mirror the packet out or etcetera, etcetera. So that's why they they really love it. But there, Next slide, please. So here's, again, another example of the packet at an example, we have 3 routers here. It's using MPLS segment routing. We can actually identify LSP. So there is like a cam. In the in the MP. We can actually say that here's the NTLS header or here's the IP header. We identify that IP and we have the entire key rupture behind the key management behind it, that we can actually assign the right pre share key to this, to this stream of the IP or MPLS and encrypted with each own sack and with its own pre shared key. But, like, as you can see, again, labor is all in clear and actually manipulate it. So all this stuff, again, using Macsec, The only thing that we changed here is the fact that authentication and encryption. Is now programmable, and we actually have a way"
  },
  {
    "startTime": "00:18:03",
    "text": "to log into a MPLS header, to log into a IP header, SRS header, in addition to the, you know, layer 2 header or the VLAN header, we can lock into all these other different OSILERS. And encrypt a specific flow end to end throughout the network. The problem becomes We are using maxech engine, We are trying to, communicate that sec tag from one router to the other router. As you folks know better than I do. Mka uses EAP. It is layer 2. It is actually, ether type that kind of presented. So in our head is not trying to invent the wheel. Can be make Mka to be communicating these stacks between 2 router over a IP and PLS network. Next slide, please. So, basically, all we did is that we presented the NKA as is. And we added a UDP header. The reason that we added UDP header and not TCPs because we did not want the retransmission. And KAA, again, as you folks know, already has a heartbeat you know, 2 second, 3 packets. You miss that MK goes down, brings down the the encryption, we start black holding. So we can program a UDP throughout the entire network that actually identifies the M Ka. And then we put the IP header on top of it. You might ask, you know, what is the IP hitter? It's very simple. When it comes to the MPLS segment routing, you create a ton between to loop back IP addresses. That's how we identify the LSP, or the SRV 6 tunnel that we want to encrypt And we use those 2 IP addresses between the loopbacks as a source and destination Pierras. And the UDP identifies the M KA itself. So shoot the packet from the encrypting router. To the decrypting router, Nka,"
  },
  {
    "startTime": "00:20:02",
    "text": "the decrypting router looks at the UDP header. Extracts it sends it to the same code that, Maxac has it, and everything just comes up And now you have, IPMPLS encryption throughout your network. Using max like a standard and using, dot 1x standard without changing any code whatsoever. This is implemented in our routers and, it's working. We have customers on it. To encrypt, like, management traffic, to encrypt, the other parts traffic, quantum safe, type of a stuff. And basically, The reason I'm here is I kind of we've been getting asked that, Hey, can you make this MK over IP UDP? To be a standard that, you know, we can take it to the next step, and that's the reason I'm here. Trying to get inputs from you folks whether this is a home for it or you don't think that's a home for it, you know, what we can do. As you can see, it is a useful technology and really, it takes couple of days of coding to make this whole thing work. Yeah. So, Well well, this working group has steepened in the name and you have and you're using epoll packets. So E poll is something that's developed in the IEEE. And it carries Eep. It also carries other things. Right? So it was designed to carry, but then put in MKA and all these other various things. So this working group probably wouldn't deal with Mka. Because we're dealing with the EP authentication. But I don't know what other working group would in in the I ETF right now. So it may be half maybe this is something that should go to set dispatcher."
  },
  {
    "startTime": "00:22:00",
    "text": "Well, potentially this working group could be recharted to do something like that. But, I don't know that that's what we would want That's a question Yeah. Sure. So probably August 80. So my initial thought is that indeed this this might not be the best fit for this working group and where to send it and how to send it we have to see, like, sectors which could be an option, but maybe the routing area dispatch could also be an option because this seems a little bit routing like as well. And since I'm on a microphone. Anyway, I'll take off my hat, and I'm speaking as an individual You you keep saying it's quantum safe, but, of course, that that all depends on how you distribute that key that you use with MacSAC. And I'm not sure if you have a QuantumSafe key distribution mechanism because, you know, we are working on that in the IETF, like, using, like, whatever I critique, a lot of So I'm not sure if this is actually quantum safe, but I'm not a and and I don't know MPA, so I don't really know the the details of those of how you distribute those keys. Yeah, man. That's a good comment. With regard to the quantum slave, mean, I think every single I don't have the PhD hat on. So, I mean, I'm I'm not gonna say what is quantum say for what it's not. I'm not gonna prove one way or the other. What I know is what I read from this and, you know, from the other standards. And anybody's as a yes, 256 is going safe. Now if it's not, by all means, I'm I'm gonna step back and I'm gonna say it's not quantum safe. Right? No. Let me clarify. Using preshared keys is quantum safe. It is how you get those preshared keys to both endpoints so that they both have the key to use qqqkd is on top of this. Let let me be straight. Okay. So this whole thing and I didn't touch that part of it. This whole thing is gonna be get hooked into the QKD. Right? So I'm not gonna have the quantum"
  },
  {
    "startTime": "00:24:02",
    "text": "the, sorry, the pre shared keys downloaded via SSH or anything like that. QKD going to be the top layer of this that is going to download the quantum safes. We are, you know, AES to 56 today. And I think that's a conversation that I actually wanted to have on the side for Yes. Yeah. Thanks, Dan Harkins. So why isn't Pana suitable for you to solve this problem or see 5191. It does EAP over UDP. I I don't know that. I haven't seen that RFC. So I know that there was a draft in there. Previously a long time ago that was trying to put it over UDP as so, it's an ROC. I think it's 5191 Okay. So it It it may It's exactly the same thing that if it is problem for you. Yeah. Okay. Alright. Thank you. And please try to keep your comments brief as we're running over time. Michael Richardson. I think I'm next now. Right? Yeah. You're next. So if I understand your explanation, is that you felt that you have M Ka as quantum safety. You wanna use it in other places. As Paul says, It's just PSK. And so we already have TLS with PSK. For e. And I think we even have IKE too over eat, don't we? It's Yeah. I think we do. Yeah. And we could do PSK with that. Yeah. We think we do. So there's already several protocols that are doing it plus We're figuring out how to do the certificate based stuff in a quantum safe way. So this seems superfluous except that you were talking about how your hardware can encrypt and decrypt things. It almost I'm sorry. It just sounds like you're you're saying I have hardware that does this. I should apply to all three to places. I don't really understand what the use case is whether this was for keying Maxech No. It's for it's a general method. As I understood it. So I I think we have kind of stuck on the quantum safe. That's not the way I'm here. Okay. Yeah. Okay. So all I, all we are trying to do is"
  },
  {
    "startTime": "00:26:00",
    "text": "take Macsec Technology, which is line rate lowlatency, into MPLS LAN and into ipv6 LAN. Let let's leave it at that. So you wanna keep key, key, MPLS and other type things using Mka, and you need to run it over UDP because the two endpoints are there. Nina. Yes. That sounds totally a reasonable thing to me. Yes. That's exactly like a totally reasonable thing for for that. Whether it fits into this working group or not, I really don't know what this point. I think that that you should just go ask an INA for a port number. And and and That's it. You don't even need a draft. Okay. Thank you and Hannah has important to yourself. I think my my weight, my my reason to be up here just went away. Although you he is exactly correct. Right? So just because you're using a PSKID does not make you. Squeaky clean, and QKD may not help you. It just depends on how you're what you think of QKD. I don't it looks it looks squirrelly to me. I mean, you've got you're now exposing headers that weren't exposed before. Yeah. Protect headers and might not be protected, like, It's like if slicing and dosing things that I I think may maybe funny looking, right? That's just my opinion. I'm sorry. I'm just It it is funny looking. It it puts MPLS levels. That's where, you know, And the technology is going underneath in in normal MPL and normal max they would have been inside the envelope, right, and you're now exposing them outside. The question is, are you still protecting them as well as you would have done if you didn't max up? Well, again, I I think we are trying to dig into the technology. Let's leave the technology on the side my my question was how, I mean, if you wanna argue with that, we can argue with the fact that the VLAN is clear too. Is that safe? I don't know. That's already in the world. Right? I mean, that's not my implementation. That's I mean, more you It's more the more exposed ahead or the less safe you are. Right? Sure. And I think that's great. So so today with the VLAN and clear, we are saying that's not safe."
  },
  {
    "startTime": "00:28:04",
    "text": "Okay, folks. I'm, I'm gonna have to cut this short because we're reading into Alan's time. And, Alan is here to present EAP. Arbor. Thank you, Holman. Okay. This is Alan. Next slide. I guess. There we are. This came out of a discussion and, San Francisco on Friday when almost nobody was in the room. There's a couple of proposals for doing provisioning over EAP. You wanna get either some kind of network access or actually do the provisioning over Eep itself. And people were proposing multiple different things And one of the outputs was let's just pick a domain that is non routable that we can then define as this is for provisioning. So the issues we have with things like ETS, it allows for server unauthenticated provisioning mode. For for anonymous network access, and the documents are completely silent on how this happens. The WBA has defined their own eat method, which is eat TLS. Effectively, but under their own method ID to do exactly this. Rather than coming to the IETF and going we need some some way of doing this. So let's use a common domain. Go to the next slide. We need a domain that's under IETF Changecontrol. That doesn't stomp on anyone else's domain. That's not routable via radius proxying, that if you send it to a server, which doesn't support this specification. Won't do anything exciting, and we'll reject it rather than routing it. So this domain is fail safe. In that we can use it and it won't affect anything so we can define new behaviors for it. Next slide."
  },
  {
    "startTime": "00:30:04",
    "text": "So the proposal is to add Eep.arpa to the our registry, the IAB needs to agree. We hope this should be okay. Then we define a new a new EEP ARPA identifier registry, which is name@eep.arfa. Then as technical details, if, say, a vendor wants to do something in that space or 3gpp They can do 3gppdash something. Atap.arpaanddefinedtheir own provisioning method. So there's other specifications, which definedpp@e.rpower portal at eat that ARPA. And this document just concentrates on eat that ARPA defining the registries and saying, this is generally how you use it And then for anyone who wants to define a provisioning method, they can just define an identifier ateep.arpa. Don't have to go back to the IAB, and everyone knows what this means. Next slide. It's a proposal There's very little feedback on the list. Any comp. Try to keep it short. Paul? Yes. No. Pallets, again, speaking as individual. So Yes. You can get a special domain and people at the IST kind of dislike special use domains because There's a whole lot of history and problematic things with it. Recently, we got the dot alt domain, which is guaranteed not routable in a DNS forever. And it's no registration. No nothing. You can just use E.alt, and it's guarantee to just forever work. Yes and no. I don't mean to resolve it. No. You don't need it to resolve, but you needed to not conflict with anyone else. And if I can use it for my thing and you can use it for your thing,"
  },
  {
    "startTime": "00:32:00",
    "text": "then neither was gonna agree on what to do. Hi. So, Elliot here. There are a couple of differences between this and alt. Alan mentioned one. The other difference is that this is relating to not so much, alternate name resolution or, approaches. But rather It's a signal. It's a signal to a mechanism. That is for IETF purposes. So if it's it's not something that just anybody should be able to access but there should be a policy to it. It should point to a specification specification should be, you know, say, when you see this, here's what you do. And so if you're using, you know, that the yep, specification or or something else. It says, okay. Point here's RFC such and such, go and use it. So I actually think this is a good idea the in I think it's a good idea in general. The the In fact, I'm not gonna comment much further other than to say work the details of the IV. Yeah. That's that's exact. That's exactly it. So if we have a standard way to do standardized provisioning, we need some kind of name under IEGF change control. And Very specifically, right? This is for the NAI. Right? Yes. It's not for it's not just for any use. It's specifically for an NII. It's, you know, to identify that that sort of processing next step. Yeah. So this document defines eep.arpaas special, for eat provisioning. And then the identifier within username@eep.arfa. Is whatever that specification does. And so now the server knows when DPP ateep.rr. It's going to do this exact thing."
  },
  {
    "startTime": "00:34:00",
    "text": "Or if it gets something else at 8.rr, but it's going to do something else. Then you can interoperate, you know, what's going on. There's a specification behind it. So would would there be a a draft for this and, a registration Yes. 44 for this. Okay. So this document defines the Eats at ARPA domain. And it defines the eep identifier registry. Okay. So it would you would have a registry for DPP, would have a registry for, say, captive portal where you get, some kind of captive portal access. And the idea would be every vacation would say, Here's the identifier. Ate.arpa. That identifier goes into the registry. And the specification describes what you do when you see that identifier. We already have 8 noob that arguably should have been noob@eep.arpa but there's water under the bridge at this point. So there is precedent people seem to like it. There's lots of uses for it. I have nothing else there. K. Next, for Alright. Michael, you're on for a note taking because Jian Fred is going to discuss Eep Fido. Yes. That's So good afternoon, Stephanita here. Together with the unfair 2, we're talking today about a neat method, which leverages fido security keys, which you sometimes also find called Pascis because that's much more fashionable today. And, the fact that we are talking here is actually a surprise. If you remember IETF 115, next slide,"
  },
  {
    "startTime": "00:36:02",
    "text": "because in the last Immune session at 115, Joe asked me about in the Pinash draft. Paskies and Eeps, I'm a work together, and, I was gonna say, oh, this will never work. So still we are here. I made one mistake back in the day, and what's a very interesting one. Because I thought it's not practical, and you always have to authorize a video transaction with a fingerprint or pin or whatever. And that's not good if you use econ wifi and your device. In your pocket, it should be authenticating our 2 touchings, I made that mistake for a simple reason. When you use pass keys or field of keys on the web. There's 2 standards working together. There's a stack the top stack is work off, and That one requires user presence to be checked. But the underlying setup version 2, which is the hardware and off things has these things as options, and you can turn off the option. Then you get a silent authentication. Next slide, please. So, this is really very explicitly in the standard. You can turn off presence and, user identity verification. And then you're authenticating it silently, So the idea for us was if that works, we can have a method then. That can authenticate this user silently when you've logged something to the network, at our option, we can also say for this particular transaction, maybe once a week, or maybe if you use it, different e context, like for for VPN access, you can still require user interactive transaction. Next slide, please. So what you're seeing here today is, basically that we will be using the entire CTAP version 2, backing for feeder keys. It was designed, to the standard. Instead of the web auth, and we have this, home special of Eepfido, which puts the pass keys and fighter piece into an eP context. And let's see off indicate there. Just to"
  },
  {
    "startTime": "00:38:02",
    "text": "be clear from the beginning, we are not talking about key registration. The registration process is whole different beast than just authenticating with an existing key, which you already have. So that's what we're concentrating on, just authentication. And, the goal of all this is to have authentication of the client with a public private key pair, just like with client certificates, but without all the hassle that certificates bring, like, that they expire and that you have to use an obscure client server protocol to rubber stem them from CA and all that that we call it stuff. So with that, I'm done, and all the details were worked out by. So this is fine. Okay. Thank you. Okay. I I wrote background background problems with eat, but I mean eat TLS based methods. So, I think for everyone in this room, it shouldn't be a surprise that, secure TLS configuration in EAP TLS based eat methods is really not trivial. Looking at you do not validate If you select it, it just works. That's bad. Passwords are bad. We want to move away from passwords. TLS clients, as Stephan just said, you need to bootstrap them running a a client certificate infrastructure is not really that easy. Next slide. So, what we want to do with Ephado is have a TLS based, ETLS based protocol, but, yeah, that is broken. No. We we try to to avoid that. To by by having, one configuration item. The one string to rule them all, that we can expect the user to actually know If the user knows I'm a member of DFN, then maybe I need to put dfn.de into my configuration. And then Starting from that, everything works."
  },
  {
    "startTime": "00:40:01",
    "text": "Next slide. So the basic protocol, is we we have the fido token, whether it's, an external USB token or built into the device. We have the device and the server, device and server, a TLS handshake, the server, requests of vital authentication, if we want to use pass keys or discoverable credentials, then we can skip the middle part and immediately return a signature and authenticate the user. If we want to have, authentication with usernames, then the client needs to send the the username to the server and the server needs to respond with a list of the user users public key identifiers for the Fido token. And then in the end, we can have a protected success or failure indication immediately backed in. Next slide. Yeah, so the the features we tried to to have for for, if title is the possibility to have a username less authentication, better privacy with, this discoverable credentials. It works very good. We have dynamic authentication requirements as Stephan briefly, said we can have, Yeah. Policy attached to For example, each individual fido key if we want to have silent authentication or not, by just restarting the Fido authentication flow again if the requirements were not met the first time. And minimal configuration. We have 1 thing that the user enters into their device. And Hopefully, they can't get that wrong, or if they get it wrong, then it won't work."
  },
  {
    "startTime": "00:42:00",
    "text": "Because, the relying party ID for the final authenticator then is just a mismatch. Next slide. Yeah. We assume that the each server has access to a database with all the public key identifiers and the respective public keys for the Fido Authenticator So we don't do provisioning in band. We do it out of band. If there is actually a need to do that inbound, then we can see if we can push it in, but for now, we want to, leave it out of scope, the primary use case is environments like edirome where you have a lot of bring your own device. And you can of my opinion is you can expect the user to go onto web portal do a registration via web auth and and then have the each server access that database. We have not yet specified, deep provisioning of the credentials that requirement comes from the I think it was also in London about died. Yes. I know you have credentials no, you don't have access anymore. Just go away. Don't try again. Or Yeah. Well, we have a server problem. Please try again in 30 minutes. And not in 5 seconds. Because we have really a non negligible amount of load on especially at your own federation proxies, just to send rejects for people that don't study at the university anymore. And left the at your own configuration on their devices. And, with that, we also want to have a bit more verbose error handling. If we define a new 8 method, then we can do it right from the first second. Okay. Next slide. We had a site meeting yesterday, in the evening,"
  },
  {
    "startTime": "00:44:00",
    "text": "where we went over, some of the, open questions for the specification. One big question is which one string to rule them all do we? Once we can have either the the network access identifiers. So the the routing realm, we could configure the expected server name or the Fido reliant party ID. All three somehow valid options. We had a very weird idea where I don't know if the DNS people will buy their hats off if we just define a static prefix that all Fido, ePido servers need to have a certificate for arbitrary prefix string dots your realm, Maybe we can have, a surf label in the DNS that the client needs to look up at the moment, it gets provisioned. Would require network access at that time. Is it reasonable to assume that devices have to Internet connections, Well, That's open questions that we open for for feedback some of them were discussed on the lists. Some of them were discussed in the site meeting where I will put the protocol somewhere and send it over the email list, after IETF. Okay. So I think Next slide. And that's the Last somehow content slide is What do you think about that? We think it's cool. We want to here if you think this is rubbish or if it's cool. Oh, it looks pretty cool. Did you sell it? Yes. The only thing is that Fido is a large organization."
  },
  {
    "startTime": "00:46:01",
    "text": "Please be more specific in the in in the eat method name. As I already mentioned on this, like, I tripped over the fact, you know, I'm working day to day with people who are doing FDO. Just just pick a name that and and and in your documentation make clear, which Fido mechanism you're you're talking about. Obviously, It's the the authentication that the the the personal authentication stream, Right? You guys have names for those standards. Just Be clear. That's all. Yeah. Thank you. Yeah. I mean, I'm I'm not that familiar with the Fido environment yet, so And any suggestions on that name, appreciated? I'll be Yeah. Thank you. This is Alan. I think this is a good idea when historical issue that people have had with E. Is, how to configure it because it's too complicated. You use various TLS based Eat methods, which CA do you use? It's hard. How do you configure it? It's hard. Which ID do you use? Do you use an NAI or not? All that's historical. We can't change the existing eight methods We don't want a password based eat method. Paskey looks like pretty much what would like to do. At that point, you start narrowing down the other bits of the protocol. And just go. Just do this and it will be easier for everyone. I think a key thing here is this is something that the end user should be able to configure without really being able to get it wrong. Use it Fido for example, dotcom. That's it. Because everything else is too complicated. I'm, generally in support and think it looks good. One thing I noticed, only today because of the presentations. That one of the previous presentations talked about wanting"
  },
  {
    "startTime": "00:48:00",
    "text": "to to makes modifications to, ETS to do the authentication and And I'm wondering if which whether we should think about whether that's a useful thing to do for more than one thing other than Fido. And if so, perhaps to define How we do that and then use it for Fido might makes sense. I don't know. Could be one of the reasons why we we chose to to define a completely new method with EPLS baked in is that we, feared that if we define that as an inner eep method, that people would reuse the crappy user interfaces that don't have the write, options to secure the, the con connection. That's if we can kill two birds with one stone, please. Okay. Hi, Guang. Yes. Management, Hi, Kuo. I'm a Hawaii international. I I have, 2 simple questions. Firstly is, you use a file, what kind of the credential you use fingerprint or you'll use face or something. Right? That's completely dependent on which final, what the final authenticator wants to do. So it if if the firewall authenticator, the the the one that I used for my proof of concepts, implementation, for example, doesn't have anything just a button that I need to press and for silent authentication, I don't even need to do that. Okay. You need, to save any data on the server side? Use it, yeah, your file. On the server side, we need the registration for the for the Fido key. So we need the the public key identifier and the corresponding public key"
  },
  {
    "startTime": "00:50:03",
    "text": "So we need to have access to the registration database for, like webauth and we can actually use the same database, because the if a final key was registered via web authN, We can use it for authentication, in, each file. Okay. Thank you very much. Michael? Michael. So, Elliot, I'm just a question about what you suggested. I think that what you said is please don't call it EAP Fido call it EAP something else banana, banana, And it would then say in the document that you're using the Fido blah blah blah. That was I heard you say. Yes. So that's why I I understood you didn't want it to just say Fido because that would just be using for everybody, but I wasn't sure if you just wanted them to be more specific in the document, or if you actually wanted them to say as I say, EAP Banana or something else Well, e EAP, final minus something. Yeah. Okay. So it's it's clear that it's not like Fido, like EAP minus internet, but it's Okay. You know, EAP Fido Other after that letters was would make you happy, but it could still say Fido. We might be able to I did Not your help. Yeah. So I I don't know too much about Fido, but would the intent here be that somebody uses the same can use the same vital hardware to authenticate their website as well as to the wireless network, or would they have to do have 2 credentials? Like, are they"
  },
  {
    "startTime": "00:52:01",
    "text": "profiles you're using? Is that something you can do on the same device and have that be a multiuse. Yep. You you can have that multi used. Which if we don't, take, take that to account may open up some things to cross protocol issues, but we are working on that to to avoid that. But basically, the idea is if you have a fido credential registered for your institution. So If I have a discoverable credential fordfn.de then I can use that to log in to shovels, single sign on on the web and also for network access via Cool. So, basically, one one key to rule them all. Yeah. So maybe the the the last question is Is this something that, emu should work on wants to work on Can work on Yeah. So I guess the question is, you know, of the minor changes to the document, choosing a proper name. Was there additional work you wanted to do before I'm I mean, I'm I'm happy to push that thing forward as fast as possible because I I want to write my master's thesis about this. And if if I I don't think that it will be ready At the end of my master's pieces, I only have 6 months to write it, but, I expect that there will be a lot of velocity on the development on that. How about you? Okay. So when we do these sorts of cross organizational things. What's really important? What's most important Is that the experts who work on Fido Authenticators"
  },
  {
    "startTime": "00:54:04",
    "text": "are actually involved in the development and testing. So you're obviously running on on a master's thesis you know, timeline, this, as you just said, it's gonna run further. So before we adopt this work, We should probably at least let Fido know that you know, you know, Hey, we're working on it. You know, are you are there people over there who wanna just join in? It's free. You can join the party without, you know, any costs. Except for to your time. And just to make sure that the work will be completed, not only completed, but and used. Okay. Is there somebody specific at the Fido Organization that we should be reaching out to. I'm not familiar with the again, it's gone either. Yeah. So so you, you, you might have a brief conversation will be the liaison side of IAB, but my suggestion is that you can shortcut that through Jan Fred and, who probably does work in Fido a little bit Or Not yet. But Okay. So the Right. But it's important to find those people. I don't know who they are, but otherwise, what ends up happening is that organization gets surprised that we did an implementation maybe they don't agree with in some way. And that would be very, very, very bad. We actually received some feedback at least from the people that are in the w three c, web auth and working group. And they had already some comments that wasn't on the email list. It was sent to to the us office directly, but we definitely intend to to establish a there. But but they should be in on the email mailing communication base. Should there be the ones who are saying who are standing up and saying, yeah, we want this. Because it otherwise, yeah, we want this, yeah, and yes, we will review it. Right? Those are one of the that when we do adoption calls, and I don't need to speak chairs here, but this is common."
  },
  {
    "startTime": "00:56:03",
    "text": "We expect the the key experts to review it, the the document. They're gonna be the some of the key experts in the space. Okay. Thanks, Elliot. Just just a quick question. Do you care about revocation? Because classically, it's difficult with photo. EEP died I mean, long as you handle it, Well, the, No. I mean, or if you don't care, then it's fine. Well, I think the the idea is that the revocation here is the same as revocation with passwords. You just delete the account. Right. So everywhere you have it, you have to go do that. Of in. Right. So if you're gonna use the key in more than one place, you've gotta do that work in more than one place. That's the advantage of certificates. Right? You revoke them. 10. Somebody checks, you're good. Right? That's it's just a question. Yes. Yes. I'm not sure about whether you care or not. I know I I don't care what the answer is. I just think you should think about We will definitely think about it. Yeah. I gotta just quickly say that these feeder keys are always scoped to a specific domain. So you don't delete the entirety of the signature the deletion is always on this one, the main one had a key. So if in Rafiki, he has this account addsdfn.de you would only delete it on the DFN.te service. And then this relation with this key to this domain, is gone. All the rest he only works in that one Yeah. Well on the key but this I I I can use I I can use the same hardware token for different purposes, and Now there's the the difference between discoverable credentials and, and non discoverable credentials for discoverable credentials. If I So on my key, then it can't be used anywhere."
  },
  {
    "startTime": "00:58:01",
    "text": "But if I use non discoverable credentials, then I use the server as temporary external storage to store something and encrypted, and the server sends it to me And if it matches, then So there, we have a problem of of revocation, but it's definitely something that we need to put in security considerations. We will think about that. Alright. Anyone else? Yeah. Just if you have one more question, I'm sorry. Yeah. Go ahead, Elliot. We we we should have batches with can just with with NFC, and then you can So, I think that the the other question is I think there are different authentication standards. Even so this goes it goes back to the naming, but also more deeply. Right? I think there are our our suite of standards that, can be used for authentication. Some of them are for, like, the tokens. Some of them might be for the tokens that we use, like, to log in to GitHub and and stuff like that. I don't know if these are the same standards for that. And and do you know? Because I I it it may be that There's there might be a suite of things that that the Fido people might need to get to. We might wanna go to to the, I think, the the second for the the 4th slide So the, Do you wanna answer that. Yeah. That's actually quite good. Yeah. So there is the C tap client to authenticate our protocol specification. Okay. And that single cache. Does the past keys you're using GitHub and the hardware security keys you use via USB? This is all wrapped up in 1. It's currently version 2.1. There's your banana. There's the name. That is the exactly seek Katharine to Yep."
  },
  {
    "startTime": "01:00:02",
    "text": "Yep. Okay. Alright. Thank you. And so, I'll take the action to figure out, who at Fido to talk to and to let them know that we're looking at this and, try to get them on board as well. Okay. So we are at time. I wanna thank everybody and, obviously, probably we'll have to get a 90 minute slot next time, so we don't have to rush through any of these presentations. But, you, everyone. Fries Do you need to cancel the, the room, or is it just shut off automatically? Okay. I keep closing my laptop without signing out on the come back in and said, oh, it's gone. Okay. Yeah. Woman. I don't necessarily see"
  }
]
