[
  {
    "startTime": "00:00:35",
    "text": "Are you okay? You"
  },
  {
    "startTime": "00:02:11",
    "text": "You can't check? About I did it this morning. Okay. So you'll come in Let me o. Oh. Sorry to be uhism Okay. Try it again. Yeah. Should I get started? Wanna do Oh, good, everybody. Just quick logistics. The mic is up front, so I encourage people to come up front And for those who wanna speak up at that microphone, during the chair's lunch, we found that it was It wasn't projecting as well. So as you come up to the mic, just make sure You speak up well. For those remote, can you hear us"
  },
  {
    "startTime": "00:04:06",
    "text": "Yes. Okay. Yes. We can. Thanks. Okay. So with that, let's go ahead and get started. Welcome to the Wednesday, IETF 118. This is the trusted execution environment provisioning. Working group session. If you're not expecting to hear about teeth. You are likely in the wrong session. So next slide. Okay. So By now, hopefully, you all are very well aware of the note well for the IETF policies for how we run sessions, conduct the sessions, and and contact, conduct, as well as, participation in here. So I'm just gonna go through this quickly. For those who are in person, I think I just mentioned try and be, I mean, this is a a huge room. There's only a few of us, so come up use the meat echo We no longer do Blue sheets, but I don't see the Okay. So before we get started, you might wanna use your phone to get on to get the attendance also to get on the queue, please use the meet echo. For the remote participants, make sure your audio and video are turned off unless you are Alright. Sorry. Just a clarification. It's not my Presenting. Go ahead, Paul. wanna use the QR code, but, like, please do it. It is the blue sheet. You must do this. I I try to be passive, but yes, Please make sure you use the QR code. To log your attendance. Okay. I think I've already covered this Well, I have never had people come up to the life during the"
  },
  {
    "startTime": "00:06:04",
    "text": "Go ahead, Tom. Is the on-site, button the same as the QR code? So if I is it, is it, is it, is it, is it, is it, is it, is it, is it, is it, is it, is it, is it, is it, is it, Okay. It it should be. Yes. Yeah. We're all friendly here, so I don't have to do the code of conduct reminders, Move to the next month. So the noncomm still is requesting feedback. So please provide your feedback. They've actually extended the deadline and till noon, our time. For those who are remote, tomorrow, I encourage you to provide feedback on any we have lots of potential candidates for all of the different area directorate as well as the IETF chair. And so, you can they do it directly through, email, or you can go to the website. Alright? So with that, I am still looking for volunteers to help with taking notes, and the jabber is now Zulip, and so if I can't get anybody on Zulive, I'll monitor it But if I can get somebody to please, at least one person, if not two, Thank you, Hannes. And Okay. And Steve. Yes. Alright. So with that, we have Sort of a full agenda, but our 2 main, Getting close to the the home stretch here. We've got the hackathon report to help us as we've been progressing and maturing the per call draft. So, Akita and Akuta will provide the report. Not yet, Akita, we're still bashing. And then, Dave will give us the latest updates. Hopefully, final updates so that We could move this forward to"
  },
  {
    "startTime": "00:08:01",
    "text": "ISG request, since we we Dave has been responding to working group last call. So unless there's any changes to the agenda, going months. Going twice, we can start. Okay. So, Akita, I have Yes. I will start from Deep Sood hackathon. We did the joint hackathon on Saturday, Sunday, Next page, please. Yes. Participant. Dave go, Isobe sound or good as sound remotely. He And, Mohammed osama in Johannes Hank and me, and I think there was a few more other people we talked to, but Yes. Thank you. Next page, please. Yes. The protocol draft is close to the closing and we wanted to to finish details as much as possible. So, the action item was time to support more, courses sign I'm going to talk later in the next slide and also the matching the, cipher suit the profile between the tip and cert MTI and Ocoda found me his, former version certification code in the 7, and he came up with the implementation and So we we we went through it. So next page, please. Yes. Oh, okay. Okay. Thank you."
  },
  {
    "startTime": "00:10:01",
    "text": "Yes. So in the specification, cam server is not only going to use so to have the capability I mean, good to have a capability to have a different, sign argasin, and cost to sign differences of cost to sign and cost to sign 1 It's very confusing, but cost design will support multiple algorithm and close to sign 1 or supports only one algorithm. So it's not the other way around. And, and the to support it on at the, time server. The he is using Node. Js in the implementation of the course Costa JS he is using is only support and cost assign 1. So, he had he had to fork it and then add the capability to the, courses for the course design. And, and that's working. So I hope is a person's call call today is going to be merge in the mainline calls, JS in the future. And it's going to be good for the T protocol and also for the in the public for who use Node JES. Which way I point. Oh, yeah. Yeah. Okay. This is And next is the cipher suit. So Deep is using suit manifest And, jeez. It's a small font. Yeah. Yeah. Yes. So, and when we when we were, progressing the suit MTI Draft And T Draft initially, it was"
  },
  {
    "startTime": "00:12:01",
    "text": "referring, as a note normal. Normative reference. To the cert MDI, so we don't have to keep agent don't have to enforce supporting different, arguments and reducing the possibility to have a different, have to implement multiple arvism and on for the key protocol. And, the the between the suit MTI chain, changing from 3rd, so that's the world 2002 it's, the the supporting empty, algorithm for the Yes. 128 GSM would change the CTR. I honestly, I don't matter which it's it's going to be preference, but and so that so that and it changes Duster too, it became to AS 128 CTR with it and another one alternative for the a s 128 was chosen to charge a body, which is pretty common for using as a, alternative. And so it we have to match it with the AES 120 GCM. So we put all together. So now we a s 128 CTR and a s 128 is and Chachapodhi. And the reason they only have a Chachapodhi with EDDSR is typically, I see the implementation who are using chatbotics combining with the ed21156. I is that the number I correctly ever. So, And, And then and also another thing I slightly changed in the during the hackathon for the suit MUTI is suit MATI in the draft. They had a normative referencing to suit encryption but,"
  },
  {
    "startTime": "00:14:02",
    "text": "it's it's a suit encryption is using suit MTI and not other way around. So I changed it from normative reference the informative, reference. And that is published as sukmti03. And people with publicis, that's a tip, well, that's 18. And Yes. And this is the not directly related to the peak protocol draft, but was, his interest as a former analysis, former verification, and he used the P protocol parcel portion of the the test his former analysis code and implemented in pro veris and Tara Marin. I hope pronunciation is correct. And Yes. I will this formal verification code is just the beginning of his the evaluation on on his form of verification. So it's not checking all the all the all the seconds of the key protocol. Only from, it's going to be in a third page So in his code is uploaded on the GitHub. So whoever whoever who has, interest It's a good good place to go to see it. And we had a feedback from Mohammed and Hannes and Corey. Doing the hackathon And So it's related work was from already on and public And, yes, Mohammad did you, like, talk right now or this Oh,"
  },
  {
    "startTime": "00:16:02",
    "text": "I someone from. So I'm I'm quite surprised that you didn't mention the issue that we found. So it's not that we had, just looked at the verification. It's that verification itself is incomplete. The 2 properties that were mentioned in the in the code that that said that it's been verified. It's actually not verified. So the way Proveri works is that there are 2 different levels, a light by Curculus and horn clauses. And once you until you reach until you have the reachability of property, you cannot claim that the property itself is verified. So that was a misinterpretation, and it's very clear that the properties are not very 5, I added an issue, and, I just wanted to just bring me to notice that it's it's the formal verification itself is incomplete. It's the properties, which are claimed to be verified. The 2 of them are actually not verified. Neither secrecy nor, integrity Can I can I talk? Yes. Yes. Please. Yeah. Thank you for someone's comments. Yeah, I I really appreciate it. But, in my opinion, The friends can also be pricked means a week check the users, should it check the result or twice? The, the property to get rid of the process, So then, we can find when we can find the account to be approved, we find we find we analyze the Royce, and and we find the results we find the, probability can get rid of the process. So so Yeah. The property is reachable to all of the vets But, as you know, I will sorry. So sorry to uh-uh, I will to interrupt at this point. So so it's it's the reachability as I said, is of 2 different things. 1 is the applied level at which you write your model"
  },
  {
    "startTime": "00:18:01",
    "text": "And there is an internal translation inside proverif I've been using this tool for 4 years. So there is horn clauses level at which you have the reachability. When the tool says it cannot be proved It actually means that it cannot prove it back at the applied by calculus level. the horn closest level is an abstract level intermediate step having it at didn't prove very It doesn't need anything. So that reachability is not the same as the reachability at the applied by calculus level. So that is a misinterpretation that you had I think I tried to clarify it in the meeting that we had with Hanas and Khuri, but, anyway, I just brought to I just wanted to you. You can double check it from, anyone like maybe the developers of program. If I'm pretty much sure about this, This reachability is not the same as the reachability at the applied And unless you have, unless you have the reachability at applied by a calculus level you cannot claim that the property is verified. This is just saying at a maybe those who are not familiar with formal methods is just saying that I have a protocol which never sent anything on the channel. I have 2 parties, let's say, I have Excuse me. Can I, make a very Maybe just one just to conclude the last sentence? So I have 2 parties a and b. I never sent anything on the channel, probably it will say that it's completely secured channels. So so that's but but it's useless. So so we Okay. Yeah, yeah, and and you're right. And there are different test think I think I think I think So, you mean There are differences. So reachability in contact clauses and on a, and we already find the result as uh-uh each of them. So we should check it both of them in terms of both of them. You're right? Yes. You you should actually check them. Otherwise, having it at the Horned level does not mean anything. It should be checked at the applied microcrust level. Can I make a wrap up? Sure."
  },
  {
    "startTime": "00:20:02",
    "text": "So, so the form of verification is the to make a checking the properties. In this case, was only one one, ground treat treat treat message checking secrecy. And what was one more what was the other uh-uh integrity? Integrity. Yes. So there's many things, and the verification code could check. In this time, we only try he also decided to try the only 2 property scarcity and the integrity, and that's all. And we and how to make a a pure, verification for the 2 property is we could go on I'm not just, yes, in the future. Yeah. Yeah. It can go on. I I'm just saying that these are not proved as it is in the Yes. And it's not true. Yes. Okay. Yeah. We we never said we a it's a finished. Okay. Yeah. I suggest keep on the formal analysis, but we'll keep making progress on the draft. Strike, strikes, strikes, strikes, strikes, strikes, strikes, strikes, strikes, Sure. Sure. And honestly, this is not about the draft. It's about how to improve the verification code. Mhmm. So this is the this is the only partially what Pokutasan was working. This one, 2, to random trip, sequence, And, So, Yes. This is the okay. And so the summary is deep protocol draft. 1 1 dash 118 is up. And the SIP MTS dash 3 is up, up, out. And former analysis will continue. The code is we'll be improving. Because we only have 2 properties, trying to, verify. And Yes. And and the came up with the nice"
  },
  {
    "startTime": "00:22:01",
    "text": "mascot or logo. Yeah. So we might use that somewhere in the GitHub or whatever in feature. It's That's all. Thank you. I need to take Okay. Like, like, this one concier that's a it's finished. Thank you. That was that was passed. Hey, Alright. So I'm gonna talk about the, protocol. And at the time that I did slides. It was on draft 17, but as you'll see, we're end. We submitted draft 18 this week after the draft window opened again? Just as a reminder of the timeline that says, already gone through working with BlessCall. We already have the document shepherd right up. We had an interim meeting joint with suit back on, September 11th the main open issue was, about their dependency from the T protocol into the suit MPI document. Was still undergoing some revs, And so, as of that time, it wasn't locked because we needed snap to whatever suit MPI would do. So that's where we were at at the, September intermeeting. As a reminder, here's the set of normative references document has. And so obviously it can't pop out as an RFC until all of these do. The one that says that tail end, the, the, the longest pole, if you will, is the bottom one. Which has not yet gone through working group last call in suit. So that's the one that's trailing everything else. But the expectation is that the, suit chairs of which"
  },
  {
    "startTime": "00:24:01",
    "text": "I am one until the end of this week. We will put it into work in your blast call very shortly, and so it's not trailing by that much. Alright. So changes since September up Russ. We'll recognize you in the queue. Okay. So about 10 minutes ago, Brendan posted something on the last one. Yes. I will talk about that. To confirm that this solves your open history. Yes. I will talk about it on the on the litter slide. I I have a slide on the MPI things. And, yes, I did see the message. It posted about an hour 20 minutes ago, about 5 minutes to noon, and I did read it. Yeah. So thank you, Brendan. If you're if you're on the list of participants. Alright. Alright. So since the September meeting and the last 2 months. Okay. Here are the things that, have been changed since draft 17. So the first one we actually fully discussed and agreed on the resolution of during the interim meeting. And so and this one, I'm not gonna repeat it here because we did in the draft was we put in the text what was on the slides and the interim meeting. Right? So we already had consensus on that. And and The second one, Haunas did a review of a bunch of things. And so we made a number of editorial changes. This is the first one. In all the examples, We had manifests a couple of a couple of, manifests and examples. In the examples, the, suit manifest file names all ended in dot suit. And, Hannah said, well, maybe some people that he could read this as saying dot suit as, like, a registered extension or it's mandatory or something like that. And that's not the case. And so we just deleted that suit out of the end of the file names, the example. The next one was that there is a sentence all the bullets there are quotes in the text"
  },
  {
    "startTime": "00:26:02",
    "text": "and the strikethrough sentence was deleted. It was an informative sentence that we just deleted. And so it used to say if evidence is not encrypted by the Deep Agent, Then it will be all picked to the team agents and to the town. Well, if it is encrypted, it's also a pay to it. So it could be a little bit, you know, confusing. And so rather than trying to clarify it, It seemed to read fine without that sentence. So all we do is we deleted the sentence. This one was I think, brought up before, and we actually have the tech for it now. And so it was pointed out that the way that you do encryption was under specified, but we had interoperable implementations and other RFCs already had documents had the details. We just had to be explicit in here. And so I think Hana's wrote the text here that's copied out of the slide, And so instead of the strike through sentence, we replaced that with all the big block of tech that's that's very explicit. So for example, It says there's multiple variants of the scheme, and it says which variant is out of the ones it is? It's the one out of 9052, which is not previously a reference. Now it is another example in the bottom of the bolded text, it talks about the cozy KDF context, uhubinfo.other. Says the value must be set to suit report encryption when a suit report is encrypted and must be set to eat encryption when an ed is encrypted. Right. So the intent is now it's explicit now that you can implement it. In a way that the implementations do and the interoperable. Right. So we don't know of any errors in here. I think, honest did a good job of writing up exactly what the steps are. At least, I think it was you, Hans. Right? This is your text. So we think that this issue is now closed. The implementers have looked at it and letters, Seems fine with it. K. Just leave it up there for a second in case anybody's still reading it. Okay. Alright. We reference the each spec"
  },
  {
    "startTime": "00:28:02",
    "text": "And we define and each profile. The eats back recently changed. To recommend a new convention for how you name the EAT profiles in a media type. Used to use the tools, and then there's the draft 12 URL. And the east spec now recommends using the URM, you know, RFC convention that's up top. So all we did is we followed that convention. And so now at the bottom, that's replaced with know, RFC exec success with a note to RFC editor, please replace 6 So she's a new label for it. Hey. So now we snap to the latest version of So we're trying to keep up with any normative references. And now that each is Done. We hope that there's no more. Okay. Alright. So in that broadcast to the beginning of the hackathon, and so, the result of the hackathon we worked on 18, like, during the hackathon and submitted it but but but but just yesterday, whatever. So here's the so Akira briefly talked about this one. And so in the suit MTI document, if you go back to draft 1, which was the last version that was referenced in Draft 17, it had, like, 2 algorithms. Which are the ones on the left. ES2 56 needed ESA with a 128 GCR. Sued MTI is now on draft 3, and it has 4 algorithms. 2 for unconstrained where the second a 128 GCM was changed to Chachapali. And in the suit working group yesterday, Brendan took an opportunity to explain why that change was made in suit MPI. And two more were added, which were for constrained nodes, right, which is the, A 128 CTR in the GCL."
  },
  {
    "startTime": "00:30:04",
    "text": "So now suit MPI specifies 4 profiles, and they'd say, what do we do about that? Okay. Well, previously back in 01, I draft 01 on the left. We already had that consensus passed working with last call and so on that says the tam must implement both And a team agent gets to pick either of them, you know, at least one of those. Right? So you get your interoperability. So the natural answer, now that there's 4 is applied the same thing. Right? The TAM must implement all 4 the peep agent gets to pick anyone or more than it wants. Say, And since we had at the hackathon represented, I don't know, 5, 6 different implementations, including both TAM implementations and T patient implementations, and we went around and everybody was okay with this, including the 2 TAM implementation We're okay. Say, yep, we're okay implementing all four things. We just couldn't do that during the hackathon. Because Chachapali is not yet in Lawrence's implementation, but the other ones were, so we could do that part, but, we just didn't finish doing the cha cha poly because that one needs an implementation of the crypto library. We, agreed on this in principle, and so this is what we put into 18. I see Brendan's in queue. So Do you think that we should provide additional guidance that suggests that constrained and unconstrained authors should be treated differently in other words, is it is there a situation where we should change MTI to subclass to either constrained or unconstrained implementations. I'll give my personal opinion. My personal opinion is I I'd like the text that's already in suit MTI. Right? Or or it explains that the, unconstrained ones are better, and you can use those he can, but"
  },
  {
    "startTime": "00:32:00",
    "text": "some reason, if you have to do it all in, you know, flash memory and one pass kinda thing, then you can use constrained ones. And so it doesn't say it's for constrained or unconstrained. It says use the top ones you can, and bottom ones if you're in a special case. And my personal opinion is that sufficient. I wouldn't object if somebody else said you wanna do that, but I don't think you need to make changes. That's my opinion. Okay. Thank you. Just pause in case anybody else is gonna get up under that, but Otherwise, Okay. Alright. So then we get to the one that was actually the big discussion and the hackathon. So this is an issue that Ken ran into and filed, and it generated discussion here, which had to do with how you negotiate, suitcase profiles. And so step back and say, okay, what other negotiation that kind of change do we have? Let's look at all three of them and see if there's any gaps in any of them. So the 2 that were, already well discussed is how you negotiate a freshness mechanism and how you negotiate a TIP cipher suite. So I got these on this slide and then this suit cozy profile negotiations on the next slide. So what we do for freshness mechanisms, right? You have query request message that comes from the town. The TAM gets to list in that career request. Here's all the freshness mechanisms I support. And it's gonna pick one that thinks that the, that the heap agent is gonna use and actually use it. Right? So picks nonce, and it can actually put the nonce in that current request optimistically saying, Let's not introduce an extra round trip, but say I support nods and other ones, and by the way, here's your nods. If it gets it right, and so the team agent, does it, then it'll go on. But gets it wrong. K. The one that it used is not the one that the is not one that the T patient supports, then the T patient sends back an error on supported freshness mechanisms, and it gets to list the 1 or ones that it support Right? So the TAM has a way to learn it, but, optimistically, you can try to guess right and then learn happened to guess guess wrong. If on the other hand a guest right, and then the query response can just use Right? And I have the non so I'll just use the nonce and, like, her response and, the way that the way they choose the"
  },
  {
    "startTime": "00:34:02",
    "text": "So that's how freshness mechanisms, are negotiated. Keep cipher suite negotiation. Alright. You say the first step is very similar. The career response gets say, when the TAM sends it, here's the list of all the, tip cipher suites that I support. And because the Cypress suites are used with, cozy sign and cozy sign can support multiple algorithms, it will actually use all of them, k? And so it sends a cozy sign with a bunch of signatures, you know, say 2 whatever the number of signatures are, and it just signs it it's an orring. Right? So as long as a team agent can verify any one of those signatures because using the algorithm that it has, then it's good. If for some reason it gets it wrong, that it, you know, only signed it with a subset of, say, the 4 added, added and the deep a deep agent is a constrained one, and it send with the 2, say unconstrained ones, something like that, what happens? Okay. So if it gets it wrong, then the error message has suites and it gets to list the ones the agent supports, right, very much like precious mechanisms. If it gets it right, correct response will then just use it and, you know, sign messages with that algorithm. It also was listed in the body. I said, no, by the way, here's the one that I'm using. Well, we looked at it and said, well, that's actually redundant information. Because when you're parsing the the signature stuff, it's actually there in the envelope. Right? So it doesn't provide you anything with something that you wouldn't already get, and it just introduces another error path to say, what if they're not? But if they don't match, the one that you use and the one that you say that you're using are different, because you're saying it twice, right, once the envelope, once the body of heat message, So I said, well, that's extra superfluous information. It's not necessary. It bloats the message, causes error paths and things to test. And so we just removed that saying it actually didn't provide any value k. And so this is relevant because one of the questions was it should be added in the query response for the selected suit cozy profile and negotiate We said, nope. It's better to move remove it from here than add it from So then that brings us to you. Well, these are"
  },
  {
    "startTime": "00:36:03",
    "text": "to precedence, what do we do for for negotiating a selected suit cozy profile? This one is a little bit more complicated. Because we have both manifest and suit reports. So we got like 2 different subcases. So here we go. So, again, first step is very similar. The query request gets to list all the ones that the TAM has. Optionally, the query request can pass the attestation evidence of the TAM itself. And along with that, it can optionally pass the, any suit reports about the, you know, attestation of the TAM. So if TAM itself has some suit reports from it booting. It can't option you include those. Right? And so for some reason, if the agent wants to use the joint reports in addition to the evidence and deciding whether the team is good, it can do that. Kai, Kai, It's just a may. But that introduces a case that says, well, what if it sends a suit report that the Deep agent would would pay attention to you, but it was signed with a cozy profile that the tip agent doesn't k. this is this case that we said, what will you do in this case? And there was no error for that. So Ever. So the part in red is what was added in, draft 18. And this is the first part of what Ken filed. And so we added another error code that says unsupported suit for it for and we had the ability to just list which ones the agent has if you wanna send resend the suit reports, you can find one that the T patient could actually purse. Or, you know, check the signatures and stuff If on the other hand, you got it right with suit report then the query response, there's nothing to do. You just continue on with the regular protocol. And so later on, when you wanna pass a manifest, from the town. Right. So the manifest, that come in an update message So the TAM sends an update message, sends some manifests in there. Okay. The manifest are signed with, you know, or use the suit cozy profiles and again, you have that could be right or it could be wrong. Well, hopefully the TAM was smart enough to only send manifest to the device that actually matter, right, we have to say what happens if it doesn't? So here, we there's already an error, which was"
  },
  {
    "startTime": "00:38:00",
    "text": "a manifest processing field, which is any type of manifest failure, whether it's suit cozy profile or anything else in the commands. There was already the ability to group pass suit reports there. And so he said, well, we don't need to pass, you know, exactly what failed inside there. We just say suit manifest or the manifest processing failed. Why? Because the suit report already contains all the details. Right? Right? Maybe he tells of what failed and so on. And so the suit report had a report result code in the integer that was undefined so we didn't know what to fill it into there. And so that's what generated discussion that we talked and suit working group yesterday, came to a conclusion on. And so, Brandon is gonna update with a couple of, suit specific values in there. And so that will be pending the next version of suit report, but it means that there's nothing in the T protocol document because that will be in the suit report, and we already referenced that. And then there was a question here in parentheses, which is what, Brennan just bought it to an email about an hour a half ago. Which was, before. And we said, if there's a failure, you say I couldn't process that. And then how do you communicate back to the TAM? Which ones you do support. That was the question. So we hit the hackathon, we said, well, we could put that into the heap. But it seems better to put it in a suit report so that it could be used with any transports other than TIP 2. So that's what we talked about in the soup meeting yesterday. And Brendan said there's actually already a way to do that, and that was the message he posted to suit about an hour a half ago, is Here's it's a suit crypt or whatever it was. So that, which is a series of integers, and you clock out on suit list and the the the hints to us as implementers is That's the field in the suit report for us to report this, and it's already there. I don't know if you wanna say anything more about that, but it looked it looked fine to me to answer your question, Go ahead. So in in actual fact, it's not in the suit report and that's the question. There's a suit capability report, which is a separate data structure."
  },
  {
    "startTime": "00:40:01",
    "text": "And that has purposefully not been put in suit report. It's a separate thing. Because we currently haven't defined a manifest that triggers a capability report because that doesn't really make a lot of sense. So Since the suit report is a report of what happened to manifest processing, the capability report, which tells you what the manifest processor can do is not returned. In the suit report. The question to you is does that need to be in the suit report and under what circumstances would it be generated because it doesn't make sense to me to hand a capability report back on every single report. Okay. So the seabor field that you mentioned is not in report? Is that from the suit manifest? Where was the actual production? It's the suit capability report. Which is a separate document also defined in the suit reports draft. Is still in the suit reports internet draft. Yes. But it's a separate data structure that does not get used with the suit report. Gotcha. To answer your question, yes, I think that particular piece, should be capable of being put into the suit report And under what circumstances, I would say when there is a specific value that you're gonna tell me of the suit report result code. That means algorithm failure. So then you would generate port, including all of the different fields and the manifest that are supported. All of the different algorithms that are supported all of the different parameter values that work with it anything that is relevant to the"
  },
  {
    "startTime": "00:42:00",
    "text": "suit cozy profile if it's relevant to say what conditions use support or something like that, I would say No. Because the error is not a condition error. It's a suit cozy profile error. Okay. I understand that, but the situation that we're constructing now is where the report generator z error code, make a guess as to what kind of information the the author means. About the capabilities, and then generate that section of the capability report not the whole capability report. And send that back. I'm not sure I think that makes sense. To me to have the capability report generated on request. Rather than in the response to any error. If for no other reason than what you're talking about would generate an amplification. Amplification attack. Where I could end and a for 4 and and and suit suit manifest with an incorrect cozy object, and instantly get a response that contains a report of everything the device can do. Not sure I buy the amplification attack because it only comes in an authenticated message that would be dropped if it doesn't come from a source. So the only thing that you can attack yourself. No. No. No. No. That's the thing. I can send it a message that's not authenticated Right? I can send it a manifest that's not authenticated the manifest, doesn't contain a valid signature. But contains a at algorithm identifier that the device is known not to support. No. I'm saying it comes in a tape message. The tea message comes from a tam and will be dropped if it doesn't come from the authorized tam. The tam already has control of a rec code you can run-in that, at least within that trust domain. I appreciate that, but that is a team specific issue, and we're talking about modifying super port port port port port port port port port port port port port port Okay. That's a fair discussion for the suit working group. But I, I think"
  },
  {
    "startTime": "00:44:04",
    "text": "you you made a statement or 2. I just wanted to comment on about what Okay. Force is the manifest processor to do. And I was saying, there's, flexibility, if you were to say, if you're arguing if you were to argue, and it sounded like you were first arguing for and then I get it. So I'm I got which wage, but I just come in general. If you say you'd wanna generate the full capability report. And say, that might be overkill in some cases, but it would work. I'm saying the minimum necessary is to generate a specific, piece of it. Right? I'm saying as long as you generate at least a specific piece of it, then it's just an optimization. You can put it as a may or a should or whatever else. I think your separate point is whether it should be triggered by an error or only available unrequest. And I think that's an orthogonal question. Yes. That would say available on a request introduces an extra round trip And I think this is a case that is so that is very unlikely to occur it it meaning a very rare event. To to be able to have a case where you get this, suit cozy profile error. But if it does happen, then it probably doesn't matter as much as to whether it's, you know, one round trip or too because it is rare in the first place. So that's why I guess I don't have a strong opinion either, anyway, I'm not I agree with you on that point. And that sort of goes back to my my gut reaction is to leave it out of the suit report if there's a strong need to put it further conversation around the circumstances under which it's generated. I would guess, I would say from a T protocol perspective, we don't have another way to, like, request it Although if we thought that that was the right thing, there's a data items requested it field, and that's where we can say, hey. Would like to get your suit report, so we'd like to get, you know, whatever else it is. It's not specific to suit. There is a bit we could define if we thought it was important I would like to not have to rev the the T protocol, but if that's the right thing, then we can do"
  },
  {
    "startTime": "00:46:03",
    "text": "But we'd want to know that, like, but we'd want to know that today. Right? Is this something that needs to go back to the the suit list or is this something where you wanna get this nailed down right now? As a tea protocol spec author. I'd rather have it be nailed down right now as far as what the team working group recommends. And then, of course, you can, but So you can make a decision based on that, but I'd like to have Right? Because there's a number of, implementers that are here, right? Either virtual or remote. So, people understand this. This is if it gets it wrong, this is primarily for, team agent implementers, right, says, okay. If you get an error here, do you wanna be able to send this back immediately? Or do you wanna have to deal with it at the courier? Request time. If there's a data item requested then you the career response then has to have a way of having the, suit capability report or whatever it's called. And so we'd introduce a new field for that in the current response and allocate a bit in the data requested. That seems like more complexity in the TPO implementation for a case that will almost never happen. Okay. Yeah. Yeah. That that makes a certain amount of sense to me. Look, we're still revising the suit report as it stands anyway. On I don't have a I don't think I'm against putting a field in and saying that it's optional to include, based on application specific policy. That's what I would prefer. I think that should resolve the issue and should allow you to move forward. Okay. So let me get a sense of the room then because that is actually a proposal. So the proposal is, that we deal with it in the suit report by having an optional"
  },
  {
    "startTime": "00:48:02",
    "text": "Field with the suit report says it's up to the implementation. Do you have a terse articulation of that, Brendan. I mean, I I understand exactly what you mean. I'm trying to down only a couple words. Brendan, since this is the last issue, I think it'd be good to do a show of hands. So I'm trying to figure out how to articulate it. And the poll. Okay. So the proposal is that suit report, will include the suit capability report in its data structure the it will be an optional field and the explanatory text for it will say So you're gonna have to go slower. Superport optionally includes capabilities. Okay. I'm just trying to reduce rewards for it. Do we go? Okay. We'll include an optional. Optionally include or you include optional, both mean the same thing. Capabilities. Okay. Given the I I might have And this means that the TIP protocol does not have any new fields or bits or whatever. That that's what that Okay. So poorly typed, But the intent is I'd like to see a show of hands if you agree with posal of having an optional capability in the suit report. It's a yes for me. So Especially if you are an implementer, please vote. Please don't have no opinion. Okay. I know that there's at least 6 You can have an opinion even if you're I mean because implementing it. I'm saying I want the minimum number including myself to be at least 6 because I know there's 6 implementers including myself. To be honest with you, I suspect that any nose that show up would show up in"
  },
  {
    "startTime": "00:50:00",
    "text": "suit working group, not in the team 1. Right. Right. Yeah. And that's fine because we're this is not a suit consensus. This is a team recommendation. Yeah. Yeah. Yeah. Yeah. In dating. K. Okay. Okay. So That's helpful. So there are actually 0 nos and 8 positive. So I think you have direction there. Okay. Is is I'll make a proposed change for the for the suit report and post it to the suit mailing list for confirmation. Okay. Thank you. Thank you. If the note takers can please annotate that? Great. Okay. Okay. Thank you. There's at least one last slide here. I don't know if there's anything after this This yeah. All the issues are now discussed. Right? I don't remember what was after it says 2 out of 3. So I remember there was something after Is there another slide? There it is. Okay. So just to summarize what we've already talked about, here's what happened in 'eighteen, right, we removed the redundant suit Teek Cipher sweet. Because you get that from the envelope, we added, supported suit cosa profiles with the error message so you can report what you support in the, reports case, I mean, the the malformed reports case, for consistency of other 2 mechanisms we editor for an error code, and then we added a paragraph as to how to use so previously we had added the ability for suit reports of the tam to appear in the query request. But the section that talked about how to process the career requests contain no text saying what to do with them. So this is the text that was added. Which kind of goes along with what it says to do about the temps at a station payload. So it says that may use in any implementation specific way. We're not gonna tell you how well. Just like we don't tell you how to use the evidence or the the attestation payload. The suit reports and determining whether it trusts the TAM. So we tell you the purpose of it and you can implement your own way of whether you use the suit reports for logging or if you use them as part of a verifier or whatever it is. Okay."
  },
  {
    "startTime": "00:52:01",
    "text": "So you use it, decide whether you trust the TAM, And if it doesn't work, then you use the unsupported support and supply the supported suit cozy profiles, This is for the bad suit report case, not the bad manifest case that we're just talking about. And I think draft 18 contains all of that stuff. That's what we submitted yesterday. Branch predicting that everybody would be okay with it. And so we've now presented what we just did across the hackathon time. And so we don't know of anything else to change in the document. K. And so we'd leave it to the chairs to figure out. You've already gone through a working class call, which that was on a previous version, right? Have the document shepher to write up. Okay. And so curious can decide what the next step is for how we progress. So Yeah. I've seen all the issues in the Jit have been resolved, but, there have been significant changes since the last working group last call. So I think we should have at least a 2 week working group. Yeah. That's what I was gonna expecting it to say. Yeah. Yeah. Yeah. I'm hoping that by then, we'll have the confirmation that the changes that we are doing in suite is good enough. So that's presuming the suit working group doesn't have a cow about adding them. Oh, you can do a working group last call now anyway, right, and then you just get results that came in. But if they change, then that means we have React. Right. Right. I'm fine. Branch predicting since Brendan is, the one that made the proposal. So let's Well, I'm just trying to lay out No. That's good. Yeah. Yeah. That sounds good. So when do you want to start the working with last call then? The 2 week one. So the question is we're into Thanksgiving? Correct. So, we wanna do So I we said 2 weeks. Yeah. But do we wanna count for Thanksgiving? So we can start it next week. So it might be swedly because people take Thanksgiving in the US. K. Anybody awake and paying attention here in the room? Does that sound reasonable? Yeah. Yeah. Yeah."
  },
  {
    "startTime": "00:54:01",
    "text": "Okay. Apple title. Okay. 3 weeks might be enough to allow suit to sort gosh, I would hope so. If there was a suit here in the room, then, technically there is, but there won't be on Friday. So Wait. I think, Dave, hold on. Beads on Dave Walter, are you on? I think it was Yeah. Oh, he is. There he is. Okay. I'm just trying to figure out, do I need to do anything? Alright, Dave. Tooth chair. Last year, Are you okay if we because we'd be looking at closing the working loop Last call likely 1st week of December. Yeah. You you can unmute yourself. 8 if you there? Dave, we see you on the queue. But we're not hearing you. Is the good thanks on the chat referring to my question to you on the timeline. We need a three way handshake. What's up? Yeah. But I'm looking Yeah. Yeah. All this week doesn't. Okay. Okay. So he's he's saying good things. Okay. Thanks, Dave. Alright. Alright. I'm done. gonna prematurely say congratulations to the I'm group. I mean, you know, we've got interoperability. We've got some formal verification and We're getting close to the finish line. You want me to I think the team's meeting every hackathon and consistently working on it. I think tremendous progress in the"
  },
  {
    "startTime": "00:56:01",
    "text": "last couple of years and, hoping it will pass work into class 4 and think it will be an RST. It will keep for some time, but Yeah. I think it should cross all the hertz and hertz. So I think with that, we're gonna issue the working group last call I don't, I mean, We still welcome the hackathons and the progression on the fication. But at this point, Again, I'm gonna be optimistically premature and say, I don't know that we'll have a need for any more In person, So let's just continue the communication over the mail list and we can determine whether we need more interims, for further discussion and I'm not pursuing any, but if we need to we can also hold another last session. So and lusters. 1 informational working group adapter document think we can start reviewing that after this is done. Some more reviews of weapons so we can close on that. Reach out Yes. Okay. Unless We have 2 minutes left. Any other business Going once. Oh, Dave's getting up. If this is the last time we're being in person, I just wanna say Nancy and here for cheering the working group on these sessions in person. Unless they're done. If it if it wasn't obvious, we were thinking you all of you, for, job well done and and carrying this through. So Alright. So with that, we are adjourned. Enjoy the rest of the ITS. What's that?"
  },
  {
    "startTime": "00:58:02",
    "text": "Oh,"
  }
]
