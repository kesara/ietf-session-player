[
  {
    "startTime": "00:01:29",
    "text": "We give people a couple a minute or 2 to come and sit down while doing this, you could Scan this QR code. If you haven't done so yet,"
  },
  {
    "startTime": "00:02:07",
    "text": "Technically, yes. practically, No. No. No. but you could walk there. You can scan the sheet Thank you. Thanks. Just done. Hello. Welcome to TCPM. we have 3 co chairs, name is Yossi. Peru. e n, sweat, and microtoxin. This is the note well. You have seen it. several times, I guess. So we won't go into detail. The session is being recorded. We have a note taker Richard Thank you for doing so. still have a jealous flight or That's still true. I copied it. I can I can Okay. You you take care. And we have one hint if you submitted an Internet draft and think that TCPM is the right menu for it, put TCPM in the name of the Internet draft so we can see it easily. That's the probe. That's the proposed agenda."
  },
  {
    "startTime": "00:04:01",
    "text": "the working group status, then we have for presentations regarding working group documents. 2 presentations are remote. 2 presentations are on-site, and then we have one presentation. for often individual document. Any requests So change there is any wishes to adopt things Thank you. These are the documents. on for which we have milestones. The HiStar Plus plus has been published. is RFC 9406. Since the last IETF, we have one document, which is the cubic one in North 48, and we have the young model for TCP in the RFC editor queue still. It's there for a long time because It's depending on another document, which hasn't been sent to the RFC editor yet. We have 3 working group documents, with milestones in the past, which is the PRR 1, the accurate ECR 1, and the generalized ECN for which we have presentations today. and we'll update the milestones shortly after the IETF after talking to the to the authors. We have TCP EDO, where we don't have a presentation for and the TCP the TCP aggregate request graft. which has milestone October next ye/ar where we have a presentation for Any questions regarding The status of the documents"
  },
  {
    "startTime": "00:06:09",
    "text": "Then we can move on to the first presentation, which is PRRs. So you, Chung, you want to share the slides? Sure. it said by how do I share the site? I thought some of you will consent, and I was just a ton. Okay. You too. Sorry. Sorry. I didn't know I'm supposed to forget the slides. It's So you have audio and we should I run the slides for you? Yeah. Could you run the slides for me? Thank you. Wait a minute. Okay. This runs the interface. Alright. Continuing. Your voice is a little muffled By the way, I was Plan to attend physically. but I tested COVID positive yesterday. So Could I really go and meet you guys there? us. such a farmer. So now the slide should be visible. Yep. Available. Yeah. just let me know when you Can you hear me? Do you have a mic you could use? I mean, I Can you hear me now? guess there was some issue which you like. Hello? Yep. We can hear"
  },
  {
    "startTime": "00:08:02",
    "text": "Can you hear me? Yeah. Okay. Go ahead. Okay. Does that work? The audio? Okay. Go ahead. Okay. Sorry. Hi, everyone. today, I'm here to present the the RC nice 6937. This of the proportional rate reduction for TCP Next slide, please. Before we talk about the base, just a quick recap of what that RC is about It was publishing 2013 as an experimental RC, and it's about think of this as a mini congestion control. that is only activated during fast recovery. and they decide what the keyword value is. while we are retransmitting and trying to recover from the packet loss. at the very beginning, you're just trying to follow what the underlying congestion control does to say, oh, how much of the serial reduction you should be doing and then you will paste the packet out at the ratio indicated by the congestion can flow over a round football time. So when it's we know it's like half of the weight. And this idea is not new. It's based on a very, very old proposal called rate having. And instead of having have RTP silence, we will do this in a more sort of a smoother way to send out the packets. Martin, you have a question, feel free. Yes. Martin do Google. Clarifying question. When you say implemented in Linux, you mean, like, Linux main line or just somebody has a patch? Linux main line. This has been in Linux main line."
  },
  {
    "startTime": "00:10:00",
    "text": "for a a very long time. Yeah. So it's used by default. com. And then over time, you might encounter more losses during the fast recovery, And when the fly finally drops below asset threshold, all The proposal has 2 more that you have to configure manually. So you either do a slow start to ramp up to SS threshold. or you do packet conservation. Basically, one packet out and you save another packet improve the network So you have to manually configure that. and an interesting sort of uncommonly known fact is that even though it's mini congesting control during fast recovery. flow that has experience long term loss recovery, like, constantly in fast recovery. This is actually the more dominating congestion control. then the, say, QB congestion control itself. And we have seen this happens quite often, video streaming that's suffering right highly policing kinda like control. that's the flow is constantly losing packets because it's getting police So it's doing fast recovery. and so so Next slide, please. So far forward 10 years later, PR is 34 Linux. Now also in DST Netflix, the WAC stack and, I believe, also, the Windows. PCP stack, And then I think about 2 years ago, the manualist or the working group. decided this, make it as tender and arts So that's why we are doing this revision. 5."
  },
  {
    "startTime": "00:12:02",
    "text": "And over that decade, we have done quite a few refinement with the algorithm. First is we get rid of this ssrvorcrvmodot the implementation has to pay. Instead, we do this automatically based on if the app indicates there is further losses or not. n, The reason we can do that was also facilitated by the fact that the RAC POP is now also standard in in RC. n, that helps us to learn that out. even during the retransmission, that retransmission could get lost and then has to be retransmitted again. Another one is that to improve the ad clocking in the previous algorithm, it's possible that when you enter fast recovery, you may not send a fast retransmit. You might have to wait for another app. but in in the new algorithm, we cannot force that to happen. as soon as possible to make sure we do have ad talking. going. another improvement is that we also add the non Saks support And The fourth one, which is the most recent one, is that with this cover there is small, issue when they say if the connection is suffering some with ordering. before. And in my ways, say, the threshold to enter fast recovery a bit longer, like, waiting for more stats to come in. in those cases, it's possible Yeah. may not have a very smooth kinda, like, ascending as it was intended today. Other than that, there is also all these editorial collocations that what happens on the"
  },
  {
    "startTime": "00:14:01",
    "text": "RC6675 last resort with transmission. And then we said that in this case, we don't do any slow start just to conservative, relationship with the newer ICs and the o one, like, rapiLP, which we really recommend to use in conjunction with this new RC. And, also, how does it work with the pipe algorithm and also removing the experimental section because now it's a standard ID. in also addressed a few mailing list questions. next slide, please. Give me a second. No problem. it hangs up. Safari is not the best browser for doing this. Okay. Great. I want to focus on the very last sort of refinement that we did. This is actually a a spotted by Neil. So Great catch, in the old draft, We have this variable call. We cover FS, and that's used as sort of the denominator. when we continue, like, during proportional way we cover things, how fast we want to send the packets. which will use the fly size, which is essentially the same next minus the same q and a. At the time, when we enter the recovery, Typically, this is not that far away from pipe. because a flight size essentially all the pending packet that hasn't been cumulatively acknowledged. Right? But even if you use that,"
  },
  {
    "startTime": "00:16:00",
    "text": "And if assuming a slow fast ratio is 3, then the difference between recover FS and Python is just retargeting. So it's not a big difference But what do you the for example, the connection has suffered some reordering or detected some reordering, n increase the slow start threshold let's say, instead of waiting for 3 acts, it's waiting for 10 more ads or even even more. So if that happens, then the fly size at that time we could have when we enter recovery, the flight size could have been substantially higher then the i. because, for example, the connection among all the packets are not cumulative acknowledge. maybe 50% of them have been selectively acknowledged. Right. Right. Right. So pipe is little in just half of the fly size. And because of this discrepancy, Not using pipe will cause the proportion rate recovery. to kinda, like, sometimes seems too fast and sometimes seems to slow. And overall, you don't want to do that. You want to spread all these packets indicated by seaweed, that's spread it over across the round trip time. during the recovery. from So I think this refinement will fix this issue. And, in fact, this has been implemented in Linux. We just because part of this difference, and now we corrected that to the implementation better. Okay. That's all I have And I hope that this is the last revision of the IC, and we can pushed to maybe the whatever the last call and then, you know, get this rectified Thank you."
  },
  {
    "startTime": "00:18:01",
    "text": "there any questions? Comments, I got Okay. k. I have one clarification question. So As far as I remember, one remaining outstanding comment was how to set condition window after loss recovery. So I presume that this point has been settled. in this budget. Yes. It actually, I forget to mention about this change. Sorry about that. So the congestion window now in the spec or clearly that it's the in flight class income. and that's included in the official draft. right now. And I still haven't mentioned that. Sorry about that. That means graph hasn't been not be updated on this point. Oh, no. The draft has been updated at this point, I believe. I just didn't mention that in this presentation as one of the major revisions. Yeah. Okay. k. Thank you. Oh. Oh, Corey, please go next. Hi. Thanks for the talk. That was that was actually quite helpful. and and My question is is how long does it been in Linux so so you say it's been implemented, and I know this. But Is that actually in mainstream? Are all these things there? Yeah. So right now, everything mentioned including the religions have been upstream. The very first initial version was upstream in, I think, 2013. I'm not sure exactly. Yeah."
  },
  {
    "startTime": "00:20:01",
    "text": "But but the final version has been upstreamed as well now. Yeah? That's right. As in what's in the draft. Yeah. Yes. That's right. The the draft as is today, completely matches what's implemented in the latest limited softening. Yes. Yeah. That was my question, and that was the answer. Thanks ever so much. Thank you. That was one of my questions. So thank you. The other question was whether there were any other implementation besides the links. Yeah. I think this I believe, free DST Windows and also the Netflix DST rack implementation But I do not know how complete, like, if how recent they follow all the other, bubble this trap because I don't have access to the source code. Yeah. So, Richard Shafenega, talking expected explicitly to this point. So PRR the non business specification has been in previously for I think, 2 years now. approximately. The this specification I have read it, and I think it has some great improvements. that is to be upstream soon. Any other questions? So from the office perspective, this documents ready for working group last call. Right? we are older than working with us. Oh, we are still running working with us. on. Okay. So maybe you restart that. Yeah. So I think, you know, we are it's it's according to the bottom of the draft know, address or remaining comment. So we are presuming. If you have any other concerns, This is a Betty. good chance for you to speak up"
  },
  {
    "startTime": "00:22:00",
    "text": "Otherwise, we will start thinking about concluding a working request call. Okay, then. Thank you. Hey, channel. Mhmm. If you are in this room and you have not scanned this QR code, please do so. and we can switch to pot. Should I run the slides? Alright. This is accurate esign feedback, which went through when group last call. Oh, please now. Done. There's the authors. Please next slide. Actually, can you skip the first two's this one or the next one that So just to record for anyone who doesn't know what accuracy he's in is. That was a fast course. Yep. Yep. So When group last call, officially ended 24th March, but we had some some late comments, particularly from Marco I'm actually from from What is it? You know, I'm not saying late comments aren't good because they they've they found central problems, And, also, As draft added, sir, I found 2 issues with the draft. and channel them into into the list. Then Maku followed up his comments And I posted solutions to all the outstanding issues, on the lists or or the new outstanding issues on the list except with no objections,"
  },
  {
    "startTime": "00:24:02",
    "text": "except then on 10th July just before the dropped that line, Maku, Send a very long email. So Del dealt with that. believe that I'm needing a change in the draft, but posted the drafts this week. for and and when I say drafts, that's because There was quite a lot of changes to wrap up the whole working group last call, so I split it into editorial deltas, and then technical deltas, and so you don't have a lot they've poisoned with all the editorial stuff. just wanna know the technical changes. So 25 is the editorial stuff, and 26 is the technical. and I'm not gonna talk about the editorial stuff here, that's all fairly mundane, I'm gonna talk about in the next slides, all the Alright. So First question, was Mark is ongoing concerns, about x of x. just to give the bit a bit of the background as of draft 24. increment triggeredact rule in Acura ECN says the receiver must act in every NC Marks. in in which in includes On X. in know, that can happen in certain cases, and we were trying to make sure that any cases dealt with inaccurate ECN, So even though ECN capable acts and not standards track. The way Accor ESON is written, is and the whole design principle of it is that it reflects things whether or not they're in the RSCs, just as a sort of mechanistic reflector so that you can use it for things like"
  },
  {
    "startTime": "00:26:03",
    "text": "testing for screw ups and mangling in the network and stuff like that, you know, and you can And so all the intelligence is at the center side. and that it also helps not having 2 intelligent things both trying I can guess what the other intelligent was. One was as long as you have a a sort of mechanistic one of the receiver, and then the sender can know But it can apply intelligence without having to what intelligence the other end might have applied. So In response to that, We shifted the send aside of The Axovax thing which would Make the Axovax happened, out into the experimental draft on making easy in making Pure Act easy and capable. We we left the residual part which is Aking, pure axe, If they have CE Mark's on them, in accurate ECN spec, which is proposed standard And that means that there is no experiment, that's making purex, ECN capable that, that, feature of the proposed standard will never be exercised it's there for anyone who wants to experiment with it. Right. Right. Right. Right. So Marco was concerned that still potentially drags a standard track receiver into experiments. and the response But on the list was It's similar to experimental congestion control using a standard track feedback, feedback, doesn't make the feedback experimental just because The congestion control is experimental. Marcus, sadwords, Just just yesterday, said yes, but it's it's different. because This is new a new feedback mechanism not an established one."
  },
  {
    "startTime": "00:28:00",
    "text": "that's for the working group to decide whether they want to do this or not. Okay. It's not it's not as an objective objection, if you know, and it's a It's a concern. So I think We we can take questions on that. now before we move on to the next slide, if there are any because that seems to be the only real outstanding question. Just moment. with Marco, it seems to be outstanding. I want to really know whether anyone else is concerned about Is he not? Okay. Move on. Okay. Yeah. I I I my intuition matches with yours. I think this deploying we could deploy the if there's no such thing as up for us, we could this universally just to, like, give more feedback and in itself, this This has no potential damage to the Internet. It's what you do with the information. It's scary. Yes. Yes. Yeah. Yeah. Exactly. Yep. Okay. So Michael, Michael, found while he was I'm checking the draft. but we said in the introduction that ACRA ACN is recommended to be implemented alongside SAC and ACN plus plus. Now now now Zach is useful, but not not essential. nissanplusplus. benefits are not specific categories, CN, so we thought, well, isn't we shouldn't really say that in a what's now a standard track document. that it's recommended to use something else because it's useful because all sorts of things that are useful. And it doesn't it doesn't it doesn't it doesn't it doesn't it doesn't it doesn't it doesn't it doesn't doesn't there's nothing specific character ECM. So took that bit out. but we recommended that it's implemented alongside Zach and mention that TiaSoft can be useful as well. And we made the references to Sakh and TSOT."
  },
  {
    "startTime": "00:30:00",
    "text": "normative, And the ECN plus bus support have a section at the end about how Accurate ECM works with various currents, CTB options and experiments and things, and so we put it in there. k. Next. Right. This is a change that I noticed when I did a full read of the document, which I figured would be important before because it's this one's been hanging around. I think six and a half years, service potentially all the craft in it. And One thing just fortunately found We're defined and acceptable packet As as one that's meet all the requirements in the what used to be I see 793 there. It's now 9293. and also 5961. And then I was looking through 9293 about 59619. I noticed 5961 wasn't requirements, It's it's It's optional And I did a bit of digging, and us where is he wrote? 1993, and he said, well, it's because there's IPR on 5961, so I didn't wanna make it mandatory. So I I I the way we dealt with that was we just said, It's An acceptable packet is one that passes of tests in 1993 in 5961 or other tests with equivalent protection. so that, you know, dragging people onto that, Payton. If you know what I mean? by making it mandatory. look some some screwed up looks if that if that if that not understandable what I just said."
  },
  {
    "startTime": "00:32:01",
    "text": "I I don't know if you're reacting to my facial expression. Right. I am not none none of us are lawyers, and, like, anytime You, like, talk about working around IPR? Like, I get scared. I I I I would have to look at this and and 5961 is the What what's, like, who challenge acts? The what challenge acts? protection against blind attacks. This is implemented in previous this is implemented in previous DNA think in Linux too. Yes. Yes. But okay. But it turns out let's just go IPR on it. It's got 1 more year to run. Okay. This is probably fine. But -- Yeah. you know, I'm gonna have to spend my brain about this a little bit. Right? Yeah. Okay? Okay? So another another thing I found was We had in the draft, we had all this about forward compatibilities that is making sure that combinations that we weren't using that the spec said that you do something saying when you get them in something standard, you know, so that when they start being used. It's clear what previous input implementations have done. And we've missed 1, which is that one highlighted in purple there. which would have been the nonce if it had ever been used And and so we what we've said is treat that as if it is an accurate in ECN receiver. So if it's ever used in the future, I'm not receive an accurate ECN server. So if it ever is used in the future, whatever it's used for, nose, that that existing Deployed systems will use it as a accurate ECN. And Also, Because there are 4 possible responses"
  },
  {
    "startTime": "00:34:01",
    "text": "fractory ECN, if you if that is used in the future for something else, you need to know which of those for it implies, So he said, Well, let's make it. but the ECN field hasn't changed. So whatever you send it as, it it came back the same. find And then someone who's dealing with it in future has to deal with how to work around those definitions Right. Right. Right. Right. next. Right. The next one was mainly from Vinnie who found some unclear tech while trying to implement it. which I'll try and explain And that is around the handshake, interactions, in There there was a there's a lot about falling back to different sorts of ECN like the the old 3160 eighties. Not old. It's current 3168 DCN. and But the falling back to No ECN. wasn't well defined, So I found there was a couple of places where the rules for how to do it were in the draft, but they were in rather buried sections. They weren't in a where it was clearly flagged that It was general, so I moved them into the general section. And I'm not gonna list them all there. because this is quite a short talk, but please go and look, there's flags The rules we added in. actually, of of of Got a a document. It's a PDF I can upload to see my my own website. where you went through all the possible cases, And and check that they're all okay, you know, in order to Right. Right. packet draw scripts about them and and stuff like that. So I can upload that as well. anyone wants to check them all, you know, if anyone's got tons of time."
  },
  {
    "startTime": "00:36:01",
    "text": "And need to say I guess, I don't think I need to go through all that. Here, it's a bit you have to get into the into the depths of it to do it. this is really a heads up to say, please go and look at the draft and check that the new stuff that's You'll find in the death Makes sense. particularly if you're implementing this Thanks. Thanks. And finally, Is this finally? No. Maybe finally. There were a couple of sections that conflicted and I discovered had been conflicting since a Oh, Musta Bane. about 5 years ago. when there were some changes made but in one section, another section Wasn't updated for? And one one said you must do something, and the other said you should do something. And the The one one said you must test the act of a c the other said, you should test to the initial cynical snorke packet, which includes that case. we just made clear, but it doesn't include that case. It actually then could make that shooting to a May because The should was sort of like a mix between the must for the one set of cases and the made for the other. So that the should was a a wider scope. that covered things you must do and things you may do, but we we narrowed the scope of each. So it was clear which ones. You should do, which ones you must do, and which one you may do. Okay? And then finally, mice grew up. Maraculpa, Now I'm back to my Cooper when Ayana gave us the TCB option kinds,"
  },
  {
    "startTime": "00:38:05",
    "text": "They gave us 172174, and I wrote 172 and 1 73 into the spec, Fortunately, None of the implementers read the spec. And there was a second era where asked Diana to make sure there was a note by the by the experimental option kinds saying you should be using the real ones now, you know, the the the the early assignment ones, again, repeated that error. So the IONA page was correct until we asked them to change the bottom, which they faithfully did. They faithfully added our error into their own page. Mayera, Mayera, Anyway, fortunately, I wanna notice this because I wanna that sort of thing. It double checks things. and it's now all fixed. And As far as we know, unless anyone is producing secret implementations we know, they know about. none of the implementations noticed any of this anyway. You know? It's all and that's I think the the strength is that The implementation first went into Wireshark, which Michael did, and everyone else was working against that. I guess that's why Everyone got it right. Okay? Next. And everyone's there's been a lot of interrupts as well, which would have picked up any problems. in the intervening time. just a quick one on implementation status. Apple, Actually, you did it. released last October, but done a full release of all their offer stuff in on the 2nd June, including accreties in,"
  },
  {
    "startTime": "00:40:01",
    "text": "into in the TCP receiver? Off by default for developers to be able to There's things against it. And that link there gives you links to the how to turn it on. how to test things in the worst of it. there's there's a a number of links by there. there's Richard's implementation in previous which hasn't changed much. Still know TCB options in it. I haven't changed much in the last cycle. But once 14.0 is released, Richard is planning to put it into the next on so that it's got plenty of time to biking. before the next long term release. And thanks to Ilper for his original implementation in Linux and Neil and Shay Yu for my timing changes to it. It's currently only against the 515 of Linux. and JJU is bringing it up to date with the spec, and then being up to date with the latest Linux before, tried to main line it Also, well, but known as cross compiled into Raspberry OS. So That's an interesting one. for people who are doing things like robot vision, with the processing of the robot and stuff like that. and it's in Wushoutpacketdrill which has just put it into TCP dump. That's work in progress, WIP. Any news on that, Richard? not So latest is that this will become put up in Upstream on Sunday. next Sunday. and thanks to those four names there for the various packet drill scripts typically, typically, And finally,"
  },
  {
    "startTime": "00:42:00",
    "text": "It's alright. So the the latest drafts I hope wrap up everything from working group last call, number 1, I've just sent an email to Markku, saying I don't can't see what we can write into the draft. There is one possible thing we could write, which is that you don't put these of x, because it would be doesn't make any sense. but but but but pretty much clear to me if it doesn't make any sense. I'm not quite sure why you would, but We can do that if you want. and I think you're gonna into working group last call again. soon. Yeah. The plan is to see whether there is feedback based on your presentation here, and if that's not the case. We wanted to run a short working class call on the latest version. after the i I mean, shortly after the i t f. but but Okay? Any questions, comments, So did you read Marcus mail from earlier today, I just replied to it. okay. I briefly. because because I think he was just repeating a lot of the same things again Oh, okay. He was, but I I try to reply to things on the news. Okay. You think you need to do something, or you think -- Well, I just that that's just this question of the DSAC he's saying, well, no one knows what they've got to do about DSEC on these active acts, but It's nothing in the these aspects that say you would do anything, on because you're describing the latest sequence numbers And there aren't any sickness numbers on the lack of a on a Mac. So I don't see why anyone would ever think they would put the exec on those. Okay. the we can write, you don't. necessary. You know?"
  },
  {
    "startTime": "00:44:00",
    "text": "think that would be in the PCN plus plus them anyway. Yep. So that's it. So the the short the short story is that to duplicate accounting without SAC or without any other information is brittle by itself. and pretending that this is otherwise is a fallacy. I've had a conversation with Matt Mathis here. But it's during this during this, I'd have and he agrees. So in the I think the move of the change on the center side into ECN plus plus. requiring to have a SAC negotiated for when you want to actually have ECT market pure control packets. is the way forward? and many of the scenarios are questionable for the real world implications, quite frankly. Gory. You can reorder in the queue. Seriously. I noticed you used the word or just some somewhere in the draft to describe The 2 types. That's cool. No. I was just checking that I had my terminology hats grew to the correct way on when I check this. Is endpoint unhosted intended to describe what everything does and what this connection does. And did you try and use them consistently or Is it used -- I'm not sure if they both used to mean the same thing. but they both mean the same thing. Yes. is that? problematic. Well, I I just had a to do list to go and check that they were used to cry what I thought they meant. So if you think they both mean the same, maybe it's easier if they both say the same. I don't know. I mean, Change host to endpoint? Or -- Okay. So so host is a is a is is a this host. Yeah. And an end point, I think, is the end of a connection. Yeah."
  },
  {
    "startTime": "00:46:03",
    "text": "So okay. I asked a question, and you're gonna think about it. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. This is sort of a new topic but related to this maybe we need to discourage people from doing TCP without Slack. ever. Matt, some people have a very small footprint in which they're trying to put TCP. And I think everybody else does suck. Sure. the transcription is cool. Read the transcript. I I just wanna observe that Michael, the the the the when when you identify yourself as a beginner, meaning the transcript recorded your name as microtoxin. Didn't write that. Thanks. was a transcript about Doriclaire in I think Any other comments? Okay then. Thank you. and We can have an expert. Yeah. it's it's This is about what we call ECN plus plus or the title calls it that as well."
  },
  {
    "startTime": "00:48:01",
    "text": "the file name is generalized ECN, and it essentially puts He's in capability on every packet, not just data. Next, I'll jump the motivation and things because repaids that those who aren't familiar with it can have a look at it in their own time. to next and that sort of that sort of that sort quick recap of how was a table in the in the draft. at how That's it. see 7168 feedback, is is not ECT. on all those things other than data, an accurate ECN feedback uses it on everything But but xnplusplusplus can be used with ROC 3168, not accurate ECN feedback. Great. a couple of things it mustn't do. That's the scene in the BRAC. k? Next. that's just a recap. So changes since the last draft. Essentially, this this one was quote, promised to go into working group last call once accurate ECN has gone through And so I just got the This draft has been sitting around. for quite a while waiting for ACRA ECN. So I read through it all and got it up to date and know, took out some craft and things like that. So now the bits that have changed you know, there's there's a there's a lot of stuff that's been not a lot. I mean, there's there's stuff that's been tidied up. and The only major thing is, technically, that this stuff about distinguishing acts of acts is now in this draft. because this is the sender of those xmx No. Sorry. This is the receiver of the act of the act."
  },
  {
    "startTime": "00:50:01",
    "text": "So it's the one that originally sent the packet, the the Purac with ECN capability that might get a CE mark on it So the 3 mandatory conditions are So for before you can do this before you can make ECN capable acts of acts. You must be negotiating the accurate ECN feedback mode, like I said, in the in the that table just then, and you must have negotiate his sack. which some people rather like. and Then When you test for an incoming whether an incoming PRAC is a due pack, You use the absence of a tank bulk. for that test. Alright. obviously, if you hadn't, negotiative to Zach, you wouldn't be able to do that. the accurate ECN draft Monday, it's for any experiment like this one, that wants to use ECN capable PRX. would have to do the same thing. would have to do this do you back test? But this one, just does it. but And we took out. a test using the time stamp because it wasn't reliable a reliable way of distinguishing these Dupax? was pointed out by Marco Right. So that that's covers that. The next championship. technical change. which is quite. someone. administrative administrative, if you like, is that the Draft says there's no obligation to use ECT on all control packets. You can do experiments with them on just particular ones. and it just made a"
  },
  {
    "startTime": "00:52:00",
    "text": "point the can't say it's ECN plus plus if you're not doing it on any of them. Bye bye. You're welcome. this. it's sort of a bit of obvious, really. Next. Alright. There was some text on caching failed attempts to use ECT, where If you want to avoid the server having to do caching, you can rely on the client cashing the fact that the Synac didn't come back. because back maybe due to Either the outward or the return, either the sin getting lost or the Synac. Sorry. Not lost, getting blocked or the Cenac getting blocked. you could potentially do Client based caching of the either direction I I tightened up that section because there's some limitations on what you can and can't do. So server doesn't have to do caching, but but if it does, it gets extra. benefit, benefit, some other text about some the argument's about reliable delivery of congestion notification, which arguments in the original r s c 3168 about how if you Send a control packet. that is not reliably delivered If you make it easy and capable, But in the eastern capability that the If that is marked with CE, this the congestion experienced signal is not reliably delivered But, of course, the loss signal isn't reliably delivered either if that packet got lost."
  },
  {
    "startTime": "00:54:00",
    "text": "it's not reliably delivered because you can't detect that it's got lost like, like a like a ech or something like that. So that was really a question of, well, it does no more harm than it was previous. previously done. So it's it's that most of this draft is a set of arguments knocking down. or counter arguments against the arguments in 3168 for not. using ECN on control packets, and this this one just tightened that up a bit. this these latest changes just tightened up a bit. and made arguments more concise, more precise. I wouldn't say the arguments are that concise, though. It's quite long. but I'll we we've made it so that the Aspect of what you do is fairly short, and then there's this long section at the end of all the rationale. But And the last one? Oh, yes. There was a an incorrect argument because retransmissions aren't you're not meant to put ECN capability on them according to RSC 3168. and the argument we had in there against that was were three parts to the argument in r c 3168. I noticed that the third part didn't actually describe We didn't didn't match what RS said, but, see, 3168 said. So I correct you back as well. Next, similarly corrected, yeah, line of act accurate act congesting control, which had previously been described as an experiment, but it was informational. and it was a sort of incomplete information I talked about TCP options and things, but it hadn't actually ever assigned them. So it wasn't really and implemented experiment, experiment and numerous other improvements. So"
  },
  {
    "startTime": "00:56:01",
    "text": "As you can see, mostly editorial stuff. from that first slide. So I think now once Accurition is out out the way, if it does get out the way, This will be ready for when group last call as it stands. Thank you. Any comments, questions, Okay. So as you said, the the plan is to finish work on accuracy and first and then focus on this one. Great. Great. It's a good time to review this 1 or put this in your review stack if you want to. Thank you. Thank you. Next presentation is on TCP a great request. and it's charged remotely. I can run these slides. Okay. Thank you. Okay. Hello, everyone. My name is Carlos Gomez. and I'm going to present the last update. of the draft, and they go TCP at great request, our option. Mike Walter is John Croft from the University of Cambridge. Next, please. Give me a second. Sure. Sure."
  },
  {
    "startTime": "00:58:05",
    "text": "Sorry about that. Okay. So Thank you. So first of all, quick And review of the motivation for the draft. The Redux is a widely used mechanism, which is intended to reduce protocol overhead. However, it may also contribute to suboptimal performance in a number of scenarios. such as so called large congested window scenarios. where congestion window size be much greater than the MSS. We're saving more than 1 of every 2 acts may help improve performance and also so called smallcongestion window scenarios, meaning congestion window size up to the order of our own one MSS. with delayed acts, may incur delay, incongestion window growth and so on. Next piece. So and and this document defines TCP option, which allows a sender to request an upgrade from a receiver. on the slide, you can see the main option format. which carries the r field, which corresponds to the requested act rate. which currently has a maximum value of 127 and there's the special case of r equal to 0, which means the request of an immediate act without modifying the steady state act rate. Next, please. So the draft was adopted in February. today, I'm presenting version 2, which mainly aims to address the comments received in Yokohama Next piece. Well, there's that a be a question in the queue. Clarification clarification question. So 0 means to request an immediate act on this particular packet, and one means request an immediate act on this packet and every subsequent packet. Is that correct? That's correct. Okay. Perfect. Thanks. Thank you. So Now let's go through the updates."
  },
  {
    "startTime": "01:00:02",
    "text": "in the draft in this version of the draft. The first two dates are in section 5, which focuses on the topic of straight x, which may happen as a consequence of using data. So section 5.1 focuses on a particular consequence, which is and the personas. So here, in the last meeting, there was a common suggestion by video to use normative language to suggest use of TCP send a pacing to address this problem of sender burstiness. So, basically, the old freezing the one that you can see on the slide where the sentence one technique that can be used to mitigate the problem is this will be send the pacing. Now we are using normative language in the form of one technique that a sender relative May used to mitigate until 1. So perhaps here, one question could be whether may is sufficient. Perhaps, we could increase this to a normative shoot. and well. feedback on this will be very much welcome. Yes. Kristen? Christine, is in the queue? Yes. I'm looking at the graph and comparing to the TCP delayed to the quick delayed act draft. And there there is one part which is in the quick delayed, I draft, which is not in your draft, which is basically autonomous decision by the receiver to send an act despite the the vet telling them not to do so. And the the general idea is that if the receiver sees from the stream of packets that there is probably a packet loss Then"
  },
  {
    "startTime": "01:02:02",
    "text": "for example, in quick, it's easy because you I guess, are individually identified In TCP, it's a bit harder But if you the the idea is that if the receiver sees it all, There is probably a packet loss. There is a hole in the sequence are several holes in the sequence or something like that. then it makes sense to send an act immediately because that will immediately trigger the correction of the packet loss by the by the sender. And you may want to look at add text like that. You don't have to change the format of the option but you probably want to add it text, text, discussing this kind of stuff. Yes. Thank you very much for the suggestion. It is really appears to be interesting, useful functionality. So, yes, as you mentioned, it probably won't change the format. But, yeah, we'll definitely look at this for the next update of the draft. Thank you. Thank you. So next, please. another complete is in section 5.3, which is still one of the consequences of straight x, which is lower frequency of RTT samples. So in the last version of the draft, we had some sentence, which was mostly following similar text, in precisely the quick working group document that was mentioned now, the act frequency draft. so the old text included a normative sheet"
  },
  {
    "startTime": "01:04:02",
    "text": "it was a senders should trigger an act being sent by the recipient once per RTT. Then what we did in 2 is trained and attempt to summarize the discussion that happened. Yugohama in the quick working group. in this regard, So the new text tries to be a summary of that and has no native language. So the new text reads us, sender needs to trigger a sufficient number of acts priority it's not that depends on the specific scenario with the best currently known value being roughly in the range of at least 1 to 4. So, again, this is tentative. and any feedback on how we could best address this topic would be also very welcome. So Next, please. Or yeah. This, Ian, in the queue. It I think what you have there is is quite good and quite close. I I my I'd be happy to kind of wordsmith it instead of using the word best because I think it does. It is so scenario dependent, but I think from an overview perspective, you're doing fine. It's just, like, I I I can Maybe email me, and I'll I'll try to kind of wordsmith it just a little bit of what I might suggest and give you some options of what I would suggest, and you can decide which one you're or if you'd like any of them. But but, otherwise, it looks great. Okay. Thanks a lot. Yeah. Any any idea to improve exactly the the wording will be really great. Thank you. this is your c from 4. Just in DB, individual opinion, but I may pretty far normative rungages here, action. This is because if, you know, AC frequency is bigger than window side than we see bus side effects. No. No. reduce because of delay that"
  },
  {
    "startTime": "01:06:00",
    "text": "performance rate, axacampling rate is, you know, lower, lower, and then So in special case, we can ignore. we know how what will happen. But in most of the case, this has a mini backbiasat side of it. So I might This is my personal opinion. I prefer. using Nometing RAMdates here. So if if I can what kind of normative would you still prefer the use of normative shoots? Sony What was your commission? Sorry. Yeah. Sorry. You you mentioned you would still prefer to use normative language. So that case, in Could you could you tend to prefer maybe the should the normative should. Yes. Should should I I'll revise it. because sometimes he won't recognize. Thank you. Ian Sweat, I think This is a difficult subject because we've gone back and forth quite a bit about this one quick. And ideally, especially with the congestive tool working group now being a thing I think we're trying harder and harder to get, like, reasonable alignment between these drafts. And as a result, I'd prefer not have normative language Internal. but but but I think there's also the question of whether it's nor normative around round trip or normative around congestion window. because those are 2 different things things things But an issue about congestion once per congestion window is that the Obviously, the receiver doesn't know this. Only this under knows what they're what it is. So, basically, a recommendation to say, like, you probably shouldn't set your, like, frequency to a number That's larger than your congestion. We have, it seems mostly reasonable except maybe when it's not like data center networking where don't Things are interesting. So no. It's a lot of thoughts. But I think the key thing is I I think we do"
  },
  {
    "startTime": "01:08:00",
    "text": "And I kind of call it to Martin here, but, like, if we can get reasonable synchronization between what we're doing with this being quick here. would be ideal in my opinion. Thank you. No. No. I I I definitely would like that. It's It's challenging because there's, like, different ADs and all that stuff. like, I don't think there's any substitute for for just, like, you guys talking to each other. And then when like, when Quick has a huge what if you guys, like, reach convergence and if Quick has a huge problem with it, then you communicate to t speed and to t spam, like, objects than Have that. Have a have Ian, and you conduct that back into quick and if if you took an email together, that's really, like, Perfect. Because this is kind of hard to do with the ADISG rep level. good timing and all that. I guess the challenging part is if, like, yeah, maybe we should just done this in CCPG if it existed, but, like, The challenging part is that that you finish first, And it it goes up in the in up the channel and then, like, schem is a bunch of hard ideas. But I guess we'll see where we are on maturity these things. I mean, one thing we could do is we could set up, like, some sort of document dependence thing. reference thing. potentially, which would automate the Process, keep it in sync. but I don't know where we are with the relative status of these two docs. So k? k? Those substitute for just talking to each other. other words, Okay. Thank you. So the last date is in section 6. which is entitled changing their rate during the lifetime of a TCP connection. Here, we have added some text to the existing content. with Ying to somehow answer to a question by Yoshi in the last meeting. So first of all, this section, we talk about the congestion window size, which increases"
  },
  {
    "startTime": "01:10:02",
    "text": "during slow start and then tends to settle. and that value will depend on the underlying BDP. And we explained that the BDP may change, for example, due to some path change. we also have added Here's the the new content is because the question by issue was what happens if maybe r is equal to 6 or 8. And then at some point, the sender retransmission timer expires. The congestion window size goes down to 1. So what happens next? So we've added some text in somehow generic terms that the congestion window size may also change due to red relatively sporadic phenomena, such as retransmission time expiration, and in such cases, accurate the dates may be needed as well. Actually, Richard suggested also the use of some generic text So we we added also in that in that direction that the the sender may opt to request an accurate that it considers appropriate at any moment. So here, the the point was not specifying in detail how to react to each specific possible situation, but rather to keep this general guidance and and remember the reader and the implementer. How about that? So I don't know if there's any comment on that. Otherwise yeah. So other than what we have disgassed today, we are not really aware of other outstanding issues So we would also like to ask if to the working group, if there are areas of improvement, suggestions on that. For example, the draft was reviewed quite a lot. before it became a working group document. So it would be very, very helpful if we could get some review on the more recent form of the draft. so that's everything from my side. Any comments or questions?"
  },
  {
    "startTime": "01:12:03",
    "text": "Thank you. Any comments, questions, Hi. Neil Cardwell, Google. was just curious if you could share the status experience there is. Well, I I'm only aware off some effort, which was led actually by by Michael, Michael Dixon. on a prototype implementation on freebsd, But at the moment, not aware of any other efforts, efforts, in the regard. Newton. I I Can you hear me? So how does this option work in in the place of to y'all because With TRO today, a receiver, kernel may receive a jumbo package of, say, 40 orientUs. 5. And then if the option specify 20, u, send 2 acts. right away, Tong So the the the value, right, these are in the option, Is it specified to write the MTU size data segments like, what if you receive just one jumbo data sequence? that has, like, 40 the key packets. Does that make sense? Yeah. If if I remember right now, the text talks about the art being specify in terms of segments, regardless of the size of the segments, I would need to double check again what's the current wording But then they say that they have segment with"
  },
  {
    "startTime": "01:14:02",
    "text": "the refers to mqsize or MSS 5 segments. Right? But the receiver, actually, we see mean, the colonel, for example Linux. we see the jumbo SKV of worse of 40 MSS packet. So payload Does it send 2 acts? Let's say i is 20. 5. And I I got 40 packets in a row in the row in one shot. Does it say 2 x? immediately back to back, believe there's no a particular text about that at the moment. in the draft? So maybe we need to to consider that case and and see how to add it to the receiver behavior specification. Yeah. because in this case, it seems a bit wasteful to send, say, 2 app. if one act could just add everything, then and both are immediate, anyways. So, yeah, it will be good to clarify that. But the more make up comment is when I'm reading the Travis, Is that a bit of an overkill to have an up soon just to be surprised by how many apps to send like, could there be just receiver heuristic to say, hey. Then we mostly you might be small, so maybe not the lady act. I mean, if we compare with that option, how much more benefit does this apps this draft provides Well, perhaps there are cases where the sender So so here, the assumption is to send the notes what is best, in in different cases. So that's why we have the the option to communicate request attack rate. So this is like, the the sender is kind of in control or trying to control. the receiver can always"
  },
  {
    "startTime": "01:16:00",
    "text": "ignore the request. But, yeah, the the assumption is that the sender has some knowledge of what would be the the right value for the upgrade. I guess that's where it's actually useful to have an option Okay. I'm not sure if that's that useful, but yeah. Thanks. Yeah. I just wanted to offer one potential response to Yuchung's question about you know, how important this would be in practice. think one important really important use case for this is in datacenternetworking So right now, I think we see workloads in data center or Linux DCP. where the the fair share of the BDP is sort of one packet or less. And so the congestion window can be just 1 oror2 or something like that. in those cases, I think, right now, in the next TCP traffic is sort of relying on a heuristic in the Linux TCP code that says if I receive a a packet with the CWR bit indicating that the data center has is doing an ECN based c 1 reduction. then their c one might be really small, like, 1 or 2 packets and I better act right now. And I think our internal performance test have shown that that heuristic is is critical for data center performance. And my if I recall, the this the accuracy c n standard? Did no longer has CWR as a signal from the data center to say it's slowing down. and may have even repurposed the CWR bit. I'm not remembering off the top of my head. I would think with accurate ECN, when you're no longer using RFC 3168 ECN, it would be important for the sender to have this way or it would be very useful for the center to have this way to signal that it's Seawind is super small, and it wants an act right away."
  },
  {
    "startTime": "01:18:02",
    "text": "to push the or assumptions. Or if we receive just one pattern, then it's just active immediately. because that will include when I really heard the PCM workflow. Right? Like, I'm trying to really compare there any local heuristic that we don't have to because because getting an option, implementing an option, you have off road kind of, like, how we're a couple comfortability concern. I mean, it's it's a big chance. for something that may be local heuristic. can still offer, say, 50% of the yeah. This is Stewart Ches from Apple. team. I wanna echo the previous comment, but it totally opposite context. One of the reason is I'm hoping to see this document published, is for very small constrained IoT devices. And a lot of these devices today are using UDP, for reasons we could talk about over beer. one of the arguments they use where they can't use TCP is they're so constrained with memory they only have enough buffering to send one packet they wait for the act before they send the next one. And if the receiver at the other end is some general server on the Internet that doesn't know, Well, then it's waiting for a second packet before it sends the act. and every round trip suffers the delayed act time out So that's the use case that that I would like to put to use is being able to say please act every single packet. because otherwise, I'm just gonna stall waiting for the delayed act time Yeah. I think I'm not the disagreeing, like,"
  },
  {
    "startTime": "01:20:02",
    "text": "no delay act or immediate act is useful. It's useful in so many scenarios. So I think I'm just saying that is using a new option the best way having working on TCP fast open and all that. I know. it's a long transition to actually get a new option really working. like, pass open today's a lot of us still use the experimental o option. So I'm just asking other more convenient unilateral deployment feasible solutions to not delayed the act. So so I I also know about some implementations which use a heuristic with push flag even though it wasn't intended in that way. I'm in every everybody is free to come up with change to say that the push flag should perhaps trigger an immediate act Martin Duke, Google with no hats. This is real crazy talk, but, like, we do have all these actioners in the network and and and DCB land, they can actually read things. So so maybe, you know, obviously, legacy actioners are just stuck with, but, like, maybe future that there's gonna even use an option like this constructively to not not ruin everything. Just the thought. Any more comments? Okay. So then thank you for the presentation. and looking forward to enumeration addressing some of the It's just whichever in product. Thank you."
  },
  {
    "startTime": "01:22:04",
    "text": "Though now Yoshi is. Hello? you hear me? Mhmm. Can a. So, hey. My name is Yossi. Today, I would like to talk about aggregated option pausing options based extension Next slide, please. So let me start from quick recap. What is I really get it option. Aggricated option is a TCP option that can aggregate multiple TCP option into a single option. So as we know, the current TCP option format, it's not optimal for space, So by aggregating maximum into 1, we can save ops on space. And then the goal of this proposal is to provide a solution for limited options facing insegment. which is wrong outstanding issue for TCT. next slide, fees. Okay. So this is aggregated option format. So aggregated option format can have 3batos 6 bytes to ranks. depends on how many aggregated broad contains in this option. and then it can contain aggregated block from 1 to 4 and then each aggregate the block had the 6 bits and each 6 bits. represent 1 options So one group ID accommodate 6 options. So and since we have, you know, 4 group values, at total, we can support 24 options. with this option home mat."
  },
  {
    "startTime": "01:24:00",
    "text": "Okay. There are several updates from the previous version So first update is to add some text for user time up option. So because in the previous meeting, Raz mentioned about user time up options. So this is exceptional TCP option, that's that's not require a seen segment. So I have some text about disruptions, And then next update is predefined aggregated options, in the previous meeting, some people suggest that, you know, we should think about aggregating existing options So I have thought about this for a while, and then in the current draft, it's proposed to use group by the one to aggregate commonly used options such as SEC, MSS Windowscale. And then so since and, also, this does this current version of the draft doesn't have this but I'm going to add some scope of the proposal I mean, whether this proposal is only for limited controlled environment, or for the Internet. or, you know, how to deploy this proposal. I will try to address these comments that I got. in the next version. expect release. Okay. So this is a predefined aggregated option format. So as I mentioned, that's predefined aggregate option use groupbyd1. So it has 6 bit. and out of the 6 bits, the current proposal utilize 4 bit. for store the value to window scale options. So the Windows get option value will be from 0 to 14 So by having 4 beats, 4 beats, we can accommodate all possible value for"
  },
  {
    "startTime": "01:26:00",
    "text": "Windows gear option. And then if this, you know, value is shifting And then it indicate that, you know, window scare is not included in this option. k, Lisa, do you have a question? Yeah. It's again, the the MSS thing, I'm not really happy because it precludes the MSS clamping. in existing equipment. I don't quite know what's we have to have this discussion before what you gain by having a is it a bit for the MSS because just the existence of this aggregate option in in itself could already mean that you're having an MSS of 1416 or 1440. Okay. Okay. Okay. Okay. Yeah. Good Yeah. Yeah. prepare the several slide after this. microturxant from the floor. Yeah. I want to go to in the same direction. So I think the MSS option is from the other ones because middle boxes work of that. So maybe Another possibility would be to just not deal with the MSS within this extension. but just leave the MSS option always. they are explicitly to be processed by the middle boxes. Okay. So you mean you do not aggregate MSS. Exactly. Never aggregate MSS. Okay. Okay. And then the rest of one bit 2 rest of 2 bit, 1 of 1 bit is used Sak farming. And then if this b t set, you know, SAC PAMIT option is not specified because SACPAMIT is just one bit of information. So this is easy. And if this beta is not set, the inhibitor is not set suck family, it's not included in the option. And then so I just no. This is prop, I know this is control vessel, but in the current version, one bit is used for MSS."
  },
  {
    "startTime": "01:28:00",
    "text": "And if this bit is set, it's indicate as if MSS value 1460 is despite in case of idp 6, MSS 1440 is specified. If this bit is not set, MSA is not included in the option. Next slide, please. and then that's all. I know this current format has video control version. And one possibility is, you know, we can aggregate more values. But as far as, you know, checks the traffic samples from wider project and the gator. it's very difficult to find efficient common value. Why misses value in c option? And so but in this traffic samples, you know, by in our aggregating 1460and4040 Actually, in this dataset, I can cover more than 40% of MSS options. MicroTrickson again. Yeah. I still not think it's a good idea to aggregate the MSS option. But if you want to, you might use the values also used by Syn cookies. because this is another mechanism implementation dependent, but there are That's what several implementations consider important values of MSS. Yep. Yep. Yep. Until I unexpectedly retired from Google, My day job was working on a project called MeasurementLab. and and measurement lab runs a 6 measurement infrastructure that you can mostly get to by clicking buttons and browsers. Our our run rate is about 3,000,000 tests a day. MSS is all over the map. I'm actually astonished at how many values there are. that we see And I can probably find you a query that will but you look at our data. The data is public and free. Thanks. Okay."
  },
  {
    "startTime": "01:30:00",
    "text": "will be on to the Linux. Right? Martin? How many slides are there left? Too much. Okay. K. Well, alright. So I'll I'll save my big comment. But for the MSS comment, Like, the current the current, like, the 9293 defaults sock, sock, like, 512. Right? If you don't have the option at all. So what what is attractive to me about this is that, potentially, this actually indicate I don't use the dumb defaults. I use good modern defaults. I am concerned about what middle box yeah. Michael's point like, what a middle box is doing exactly with the MSS option will they add 1 if it's not there, which which I guess would be okay because that would supersede this option. will they do something much worse So I'm concerned about the middle box is not reduced the MSS as they do right now. then you have to do path them to you. optical detection because -- Oh, because the middle box will assume it's 512 whatever the default is. Yeah. No. I mean, my middle box at home, Red Use it. If you're on a DSL line, it reduces the MSF to 1492. And if this is not processed anymore, my peer thinks it 1500, and then we -- Well, no. It's that 1500. So the 1500 is what my my machine thinks, and my my access router, right, uses this to 49 So, like, the imperial question here is, like, what would it do what would your Metabucks do if there's no MSS option in the TC header? it assume it was 5 12 for 9293 or would it Would it just insert an MSS option assuming that needs to do that. And, like, that's empirical question of how how misfit how, like, bad these things are and, you know, usual answer is boundlessly bad. So I be interesting to me to see what it did, and, like, maybe there's not a problem here. Maybe there is. and that's something that we can investigate. I doubt it can find the right value. So it might use a 2 large value of 1500 or it used"
  },
  {
    "startTime": "01:32:00",
    "text": "the default, which is much too much too small. but but but it how should it guess the right value? except it has the code put in this always. and I don't think they do. Yep. Okay? People are rolling out VPNs like crazy. and lots of scales and evidences that a larger and larger fraction of just ordinary traffic is tunneled. and and the MSS is our screwy. Okay. Moving on to the next slide. Okay. So this might be another not so good or great idea. but so as a way to know, aggregate MSS option is to you to use rate negotiation. Rate to negotiation means use are the segments on the first segment. So This is, you know, a simple example. of rating negotiation. and grant send the scene is use send aggregated option with MSSPs. set on, and then send a send vaccine act it's also aggregate option. with MSC speed on, And after this, they start rating which means by using such segment, is send their message. option. And then and Saba also sent back MSS option by using for segment. So this is example, great negotiation, And next slide, please. but this approach has, obviously, the rollback. often, No. cry and try to send data with a SADAQ, then at this point, client doesn't know the proper MCS. then they have to use to deploy MSS to send these data. Of course, then in the next round trip, that client receives a message from the server. So this next round trip time is okay. But only this round trip time,"
  },
  {
    "startTime": "01:34:01",
    "text": "it has to use default analysis. And then also, yeah, as we discussed, there are some middle box issues. So if middle box doesn't understand this rate negotiation, it might be screwed up. that's the drawback of this approach. k return. Yeah. Exactly. But you just pointed out. I I suspect the vast majority of middle boxes that do MSSS clamping will actually only look at the MSS option while the SUNBET is also set if you set the MSS option, when the soon bid is not set, that needs that needs to be investigated. at the very least. Right. k. So, actually, this is rest right of my presentation. I am still, you know, thinking about how to aggregate predefined option. And then today, from my impression most of the people seems to an omit aggregating MSS by Yeah. If they is there any other beta ideas or no? suggestions, please let me know. modern. Alright. Martin Duke again. So I On and off, I've grappled with this, like, option space question again. again again. And I like I I keep coming down to I we have to think really hard about use cases here because since, obviously, some paths will eat the option. and some service will not support the option. there's a trade off here. So, like, there's some obviously, there's some big that you really want, which which is driving this whole thing. And you either have to accept that maybe some of the older options like like know, you know, WScaler, all that. Like, the value of of this big option that you have exceeds performance value potentially losing the performance value of the of the other options that you're compressing here or alternatively,"
  },
  {
    "startTime": "01:36:04",
    "text": "you you will like, the that this new option is so valuable that you're willing to potentially eat an RTT because the thing fails. you have to go back and and discard some of them. Right? But So There's some risk that just doesn't get deployed at all because that killer app doesn't exist. and and I think it would be worth thinking through that a little more. Thanks. Thank Hi. My name is Tim Shepherd. I I'm trying to understand if I'm about to send my first send to open a connection how do I know whether the other end Well, understand this or not. Because if they don't, I need to include the sack in the window scale, and everything anyway. Am I supposed to include those and this? What I don't know. Yeah. That's part of the deployment brand. So probably, you in the first destination, you send the packet to the this this this initial past time, might include the both option, aggregate option, that was not option. But and they, you know, yeah. Then it's guest. rest of the That's one strategy to deploy this option. Thank you. But I I tried to read your draft quickly, and I didn't see anything in there about how to think that that there were that this problem even exists. maybe you should add Alright. Or sorry if I missed it in there, but I didn't don't think it was in there. I'm sorry. I I didn't we can dine it. But I have to I I have to update, etcetera. so pointing up. Lars I got, so 2 observations. 1 for MSS option. Right? I think I mean, this this particular that you're proposing is pretty extensible. And so if you and this is probably the hardest bit if you can just, like, take that out for now, And, you know, we can always when we figured it out,"
  },
  {
    "startTime": "01:38:00",
    "text": "do an extension or then roll it in it. I think it would wouldn't let us go down as rat hole. I mean, we're all in a nice, juicy problem, and we all wanna, like, get get into it and figure it out, but it's sort of distracting from the broader discussion on this option, which I think I had the exact same reaction to Tim. this is stuff like this has been proposed, and it's never been that we couldn't do it is always, like, how do we actually get it rolled out? But then and sort of exactly this sort of you know, if you don't know that the other person speaking it, you gotta basically do the new thing and the old thing, which seems like a step backward to maybe go two steps forward at some point. And and, yeah, you can maybe cash it or something like you would catch an MSS or something, like, it's so I think that that is sort of the the questions that I'm gonna make or break this extension, not like, you know, can we squeeze this or that and other And so I really sort of encourage and focus on on that part. like, how do we actually what would we deploy this? And pretty immediately see a benefit. Thanks. Thank you. You, John. Yeah. As you're presenting your trap. I start looking at all these synapses. wonder, like, how many of them are truly necessary then I have this question that Why do we even use that okay options to begin with? you can put it in the pay the packet and then if if the Recceiver want to use it and use it or the you know, So Maybe it's unrelated to this discussion, but it seems at least that okay actually is kinda useless to be And if I was, like, where opportunity to strip it if he doesn't understand Zach. Okay. But that means I have to update Saks Draft. That's true. Yeah. But I give as so I have 2 more bytes and 4 more bytes. it's really good for the. Yeah. Any more comments, questions?"
  },
  {
    "startTime": "01:40:06",
    "text": "then. Thank you. Thank you. So -- Thanks so much. Yeah. Thank you. Bad news is we ran 10 minutes longer than we had originally planned. Good news is due to rescheduling, we had 30 minutes more, and you get 20 minutes left. c on Prague, Yeah. Okay. Yeah. I I was wondering if they do it automatically and figure out what the time and the amount of times. as a speaker, I really like it."
  }
]
