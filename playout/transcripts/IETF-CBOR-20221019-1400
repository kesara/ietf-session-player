[
  {
    "startTime": "00:00:27",
    "text": "hello everybody Welcome um we'll wait for Karsten to arrive and then we'll start and there's Carson okay so it's the top of the hour and the critical mass is here let's get going you see the first thing on the agenda is uh the time tag so let's go ahead yeah my main point um bringing this on the agenda again is that cd8 is likely to issue a working of last call in the next few days and we said we wanted to synchronize our time Tech document with that and that appears to be in a relatively stable state with a possible exception of one pull request that proposes adding ut1 to the time scales provided so we could want to work group list let's call this approximately at the same time coordinate this with the sedate uh chairs or we might have a reason not to do this at this point and and I would like to find out whether there is uh"
  },
  {
    "startTime": "00:02:01",
    "text": "such a reason anyone just go ahead and speak up sounds like not great so just a quick comment on the ut1 um pull request I think that that's a desirable thing to add at some point since time scales are registered um Editions um it's not necessarily a problem if this is not included at this point in time and we might even edit during working with last call if we find we still want to edit the code definition points into a maze of astronomical documents that that may be difficult for people who just want to implement this to follow so I'm not sure we have done all the work on on that PR uh yet but maybe people want to have their own look and at the pr at some point so I think that that's all I have to say about this okay if there are no other comments here then we go on to Json path earragx I I reg X yes so this is uh just a heads up that uh Jason pause has issued a working plus call on this uh document um they should have done this nine years"
  },
  {
    "startTime": "00:04:02",
    "text": "earlier then we could have had that as the definition of civil take 35 which turned out to be problematic and which is essentially the only part of sibo we removed from underway from proposed standard to internet standard um so the the idea is to actually um have a document that defines what an interoperable regular expression is for matching applications like what we use in uh in the CDL operator.regx for what what the Yang people use in their pattern statement um so um yeah this is uh maybe just a pointer to for people who care about regular Expressions uh to have a look at the work and to think which of the uh sibo working group activities May now be unblocked um assuming that that this irregx work leads to to a conclusion to a standard any comments or questions on that all right hearing none let's move on to DNS and seaboard yeah okay um I prepared some slides for that yep so you are granted okay so um yeah we're talking uh I'm talking about the consist binary object representation of DNS messages my name is Martin uh for those who don't know me um"
  },
  {
    "startTime": "00:06:01",
    "text": "um first I will present our motivation and introductions and the definition of it and then give some examples on analysis and then some to be done so this is the motivation is that in uh core and DNS up and deprive we currently discuss a method to uh transport DNS over Co-op the problem there is that the packet size exceeds 8215 for pdu depending on query names very quickly if as you can see in the graphic below and so we have fragmentation which we of course want to avoid because with high bracket loss we only multiply the packet loss and so we need a compression format for DNS messages um so the objective of our draft is to specify an encoding of the DNS messages in sibo and reduce the data of DNS queries and answers by omitting DNS fields so for DNS queries we basically just Define them as a sibo array which should contain at minimum the as a text string the domain name in itna encoding that is for which the data is requested and optionally there is also a record type specification that can be used uh if it's not present then the record type defaults to the quad a record and if the record class is not present it defaults to the in record oh sorry my drawer is just ringing can I have a very short break just looking with I now feel that I should have music play but I don't"
  },
  {
    "startTime": "00:08:08",
    "text": "maybe that's a suggestion we can make to the uh meet Echo folks a button that the chairs can push to play music yeah it needs to be music that won't get copyright strike in the YouTube rendition video and that's uh uh shot in the dark because you never know what YouTube considers to be copyrighted music at any point in time for that no problem okay um yeah um so yeah well so yeah with the DNS query um basically DNS query is a sibo array which contains the name of it I think they cited already and the response basically is a bunch of resource records so um yeah the resource record is also a sibo array that which at minimum contains a TTL and the resource data either encoded as a byte string or if it's a domain name also as a text string and um it optionally can contain the name and the record type both default to those that are in the question and basically a response then is an array of arrays each array in that array corresponds to a section and yeah and basically uh only at minimum the answer section is required if the question section is not present then basically the question from the query is assumed but that of course assumes that the transpose can map the query to the response which is the case with both Doc and also for example Doh but we can also amend the original"
  },
  {
    "startTime": "00:10:03",
    "text": "so um yeah um it's a simple example I can give you here a query for an IPv6 address for example.org and this results in a sibo object that is certain bytes large compared to the 52 bytes a normal DNS wire format has this allows us for compression of 400 percent and same goes for the corresponding response where we have a compression rate of 283.3 percent but when we look at a little complex example for example if we want to query any record from example.org as we for example do with the service Discovery sometimes um then of course the query is still quite well compressed but for example for the corresponding response even with all the Illusions I uh we provided we only have a compression rate of 97 97.5 percent uh so uh yeah um we have it's larger than the format and the so the question is do we just accept it or you induce a wire format instead yes Carson yeah I didn't want to to interrupt your presentation of this slide um so I think what what we are seeing here is that for more complex uh queries the built-in message compression and in section 4.4 of RFC uh 1035 actually works it doesn't do a lot but it does something so in this example it would actually compress the the three occurrences of example.org uh by using the the built-in"
  },
  {
    "startTime": "00:12:00",
    "text": "suffix compression of RFC 1035. exactly so if we look at this uh some more or actually it's not three times it's five times um if you look more closely you also see in this example I'm not sure this is very realistic um opportunity for prefix compression in in the IP addresses that is something that RFC sorry 1035 cannot use uh but that we could use um I think the interesting question is uh can we Define um application oriented subset of the sibo package specification which essentially will set up actually I actually go into this on the next slide a bit oh okay maybe after I presented this we can talk about that um so um yeah there are still a lot of to be done um first of all feedback is appreciated Carson's already helped a lot with the zero version of this draft um but uh yeah I I think we need a little bit more help because uh I we are not that much of uh Seaborn knowledgeable at the moment um then there's also the question if we if we need special treatment for edns 0 um because they are the resource records of pseudo-resource records as it's called in this case look a little bit different um and I didn't look into that yet and as custom already said should we add name and address compression um for example this could be something in a similar vein to Chic [Music] um and yeah because of the uh of the problem with the compression at high as more complex examples um are there any suggestions how to"
  },
  {
    "startTime": "00:14:01",
    "text": "maybe increase the conciseness or compression rate further yeah so yeah this basically is the end of my little talk and again sorry for the short break there yeah so how do you think that that shake actually might help you well if we have some way to uh to exchange the context that uh for for example a rule set as with as we have with chic and this is already a defined uh way which we already use for other use cases then uh we don't have to add extra compact plexity because we basically have already this way of compressing and decompressing stuff in the firmware yes the the idea behind chicas it's called Static context data conversion the ideas to actually identify something that is um specific to the relationship between the the two parties that uh communicate um using uh shake so you you know that a specific uh form of UDP packet or whatever is going to be used a lot and if if you do that then she gives you a very good compression DNS is usually a little bit more ad hoc I mean you you usually you don't know at the start of the relationship between uh DNS client and a DNS server um what will be the the content of those queries so I'm I'm not sure that that she really"
  },
  {
    "startTime": "00:16:00",
    "text": "does a lot here well if we look for example just in in how it devices sometimes uh as well most of the time communicate just an example they want to uh request the IP address of the Cloud Server then the Cloud Server has some domain where we definitely could already predict that it might be rvs.com or something like that so uh I think at least there is also some predictability where we could leverage Shake but yeah maybe maybe check is the wrong way to go here I didn't think that's that hard through yet to be honest yeah so the the my point is that uh really the the fact that aws.com is a common uh suffix um would need to become part of the relationship between the DNS client and the DNS server now is if the DNS server also is provided by aws.com that might be the case but if you have other ways of of Distributing the work and maybe the DNS server is still local and it's not part of aws.com that doesn't give you that much so I I was thinking more in terms of using the functionality of sibo packed um so the the DNS messages can continue to be self-contained they don't need external context like Shake uh compressed message would be but we can still uh use the redundancy that we see on the previous uh slide and uh in in this case since we have five instances can you go back one slide yeah"
  },
  {
    "startTime": "00:18:02",
    "text": "um since we have five instances of example.org uh we only really need one of them and we would need to to have five places that actually reference that so we would uh change the the 11 characters or so of example.org um into a number of bytes for a reference I don't know two or three bytes four bytes um so that already would be more than the the five bytes that we are seem to be losing here by not using uh 30 10 35 uh compression and we would uh maybe um be able to make use of the fact that we have opportunity for prefix uh compression on on IP addresses which are also relatively large um particular with IPv6 so that that would be an additional um Improvement so I think that might be worth investigating yeah it sounds interesting when we can somehow references within keyboard itself uh yeah could probably uh help with it definitely the the way RC 1035 does this is pretty uh in pretty intelligent so I think it's it's we're not going to be able to to get the efficiency of 1035 message compression uh in in sibo which is kind of counter-intuitive but that's because he was is way more more General than what they provided in 1035 but I think this could be compensated by having both prefix and suffix compression"
  },
  {
    "startTime": "00:20:02",
    "text": "available and so we we might get some reasonable result in in with respect to conciseness uh what without getting complexity through the roof uh I mean we can pack can be used in really complicated ways and we certainly don't want to do that we want to profile it in such a way that it solves exactly the the addresses exactly the opportunities we have in DNS yeah then I will definitely look into using sibo pack then for uh the next version of the draft yeah my recommendation would be to use everything um you you need you want from the reference mechanisms in sibo packed but not necessarily use the same table setup mechanism because the DNS specific table setup mechanism may may be uh more efficient and maybe more appropriate for the restricted profile we are likely to find for sibo packed so a generic uh sibo pack implementation might still work with this but might have to use the the DNS specific table setup mechanism and DNS only implementation what would simply just do the two uh mechanisms for prefix and suffix compression that that uh we Define assuming that's what we come up with at the end okay then I will do that any further uh questions or proposals"
  },
  {
    "startTime": "00:22:04",
    "text": "okay okay then yeah then thank you foreign what is the what is the next step on this um so our plans were to have a another version of the draft until Monday and uh yeah look at definitely look in the Gazebo packed uh thing that Carson has talked about and uh yeah then hopefully uh present a sub an update at the next ITF meeting we need this on the agenda for the 115 session yeah I completely agree yeah yeah good so the the other question was edna0 and I must admit uh I may have known what edns 0 does exactly 10 years ago but I'm not sure I still fully remember um so this is your typical example of bringing two technologies together and you need Experts of both Technologies and and in the Civil working group we can bring the Civil expertise but we don't necessarily have the the other expertise I see that there is a DNS directorate review of this document already being scheduled did you see that as well I wasn't at a dog draft might might very well be yeah I think that was uh yeah that was the top draft uh so yeah but uh we can it can I can advertise it on the DNS list the DNS or blasters yeah you could also just just point the reviewer who I think is known by now uh to the other document uh and and to ask"
  },
  {
    "startTime": "00:24:02",
    "text": "for for input on that one as well I mean this is this document is a very early stage so um getting too much attention for this is probably not not the right thing to do because people remember it in in the early stage that it is um so I think it would be good to to have a DNS directorate uh member look at this but not necessarily the whole DNS Community okay about it at this point yeah then I will rather ping them okay [Music] um any further questions okay then thank you again okay thanks so now we're on to the cddl 2.0 custom yes I I didn't prepare slides for this because most of what what's in their draft already is uh has been on on slides in in previous meetings the main contribution of of this version of this new draft is that I have narrowed this a little bit down and focused on what we actually might want to do in in the specific CDL 2.0 project I mean we can always do a CDA 3.0 so um if if somebody who has a better computer than I have could just um uh present this draft from the link okay I will do that let's see"
  },
  {
    "startTime": "00:26:00",
    "text": "let's come over here and share a screen foreign [Music] draft plan there we go huh error permission denied by System yeah I probably don't have permission for your browser to do screen sharing I thought I did so uh let me see and I don't yeah I don't think I can do that without shutting down yeah something and starting up again and somebody else foreign to share their screen IRA and I will give you oop I did the wrong one I gave you permission to do so much sorry revoke slides yeah request sharing your screen and I'll oh I I get this wrong sorry"
  },
  {
    "startTime": "00:28:03",
    "text": "okay the middle the the icon in the middle that says share screen yes I see Grant screen there we go yes I Really Wanna okay windows well all right um this may or may not work um in a moment um well I see your screen there you go we have exactly what we need thank you you may want to go one font size larger oh right I do thank you sure so um if you skip to section two this morning I actually read this document before this meeting that's one in a row for me that's excellent I don't know that I have intelligent comments but I do now understand the scope great so um this as you can see from the table of contents on the right this has essentially three uh main items one is about syntax issues um some of which uh uh clarifications and I don't know whether we want to do this in the same document and some are extensions and then there is a discussion about the processing model and uh discussion about the module superstructure and I want to quickly"
  },
  {
    "startTime": "00:30:01",
    "text": "um comment on on these so on the syntax deficits um item uh the the biggest requirement that I'm getting again and again is um how do I write CDL that deals with ranges of tag numbers so if you look at the um syntax um the abnif for the syntax that we have in in at the top of the screen um this only allows for an unsigned integer right now for the tag number so it requires you to commit to a specific number you cannot put CDL for a range of tag numbers and I'm proposing to extend this by allowing a tag number to be a CDL type in angle brackets so the the example below that shows how this might be done um so we have a the this probably should reference where it's coming from um so in RFC 9277 we have a number of tags uh allocated for Content types for Content formats excuse me um so it's this 166h something to a 16 it's something else that's the range and by putting this range or the real name for this range uh into angle brackets and into the position where normally the unsigned integer would have been we have a convenience Syntax for um providing ranges for tag numbers so this is something that that's really very very small increment but it's incompatible with the CDJ 1.0 syntax so"
  },
  {
    "startTime": "00:32:00",
    "text": "um if you do this in your specification no CDI 1.0 process I will be able to process it so that that's uh yeah we might might put this into a single uh document on its own so people can maybe put this in as a CDL 1.2 or something but I think that easy way to to solve this particular problem or to address this particular requirement uh 2.2 is about tag oriented literals that we where we have a proposal for doing this in the uh diagnostic notation but it would be useful to be able to do this in cddl as well now we could simply adopt the syntax which would work in the context of cddl um the the problem really is this is again only providing literals and so we are kind of committing the same mistake that we we are repairing for something else in 2.1 where we actually want to be able to write cddl for what goes there uh so I don't have a particular ly bright idea how to um do this at this point in time so for instance maybe one wants to to put in a b and F for the thing that is in the single quotes um so this this will be a little harder to develop and maybe it would be useful uh to develop some some ideas how to do that uh 2.3 is just a number of router reports that that have to be done again"
  },
  {
    "startTime": "00:34:01",
    "text": "this could be a separate document because we want to fix these error Raja for 8610 as well I don't think we want to reissue 86 gen but we might have a small Corrections and clarifications document that has these fixes in an agreed way I'm not going to go through the details here because it's very tedious um but I think it's clear that we want to address all the errata number three really is the the biggest item and and one that maybe goes a little bit beyond what we are defining um in the language the processing model uh people are going to write uh programs that actually make use of CDL in an unexpected ways so we cannot um forecast all kinds of processing that people will do with acidity but on the other hand we probably need to have a whoops we probably that was me sorry no problem thank you um so we probably want to go beyond validation we already have the the feature mechanism in 9165 that that slides slightly goes beyond validation by telling you what features are being used in a data item that is validated against cgdr data model the CDL tool provides a very simple experimental form of annotating a data item so the data item stays the same in the validation process but there is there are comments added to it that"
  },
  {
    "startTime": "00:36:02",
    "text": "allow you to see which rules were used in performing the validation the the feature doesn't work very well at the moment so that that would have to be improved a little bit but basically that's something that we already can do with cdda 1.0 what we might want to add with 2.0 is ways to tell the annotator what information is useful and what information can be left out because if the tool would really tell everything it knows it would be way more comments than um actual meat so the the uh one of the things that that annotations that are put into the model may be useful for is uh adding little pieces of predicates or little pieces of programs that operate on the data item and can be used for doing things like co-occurrence constraints of course at some point we run into this evaluation language problem we don't have a common view of what an evaluation language might be and it probably is necessary to um yeah at least you you have to be able to derive a Boolean result uh from the evaluation language whether the the annotations actually uh work provide the additional validation for the the data item um under test and finally the the one thing we could do with annotations um or based on annotations is to actually do transformation uh so we describe how validated data item could be interpreted in a different way so if you have some some"
  },
  {
    "startTime": "00:38:01",
    "text": "structure that really is is just syntactic uh stuff you might be able to get rid of of the noise in that syntax using a transformation step and this also can be used for doing things like adding and default values or doing some other Transformations that that convert syntactic sugar into a canonical form so my my proposal here is to actually continue writing these implementations uh and and do interesting things with the implementations and maybe uh do an initial Syntax for uh putting annotation information into a CDL spec that these implementations can actually uh uh use and uh maybe that simple syntax could go into CDL 2.0 but the the actual a specific mechanisms and and processes uh might be separate uh documents so we can keep the language simple but can build complicated things on top of that if we want to foreign so finally the the most requested major feature is a module superstructure and we have looked at a way to provide this in such a way that at least for for a limited amount of time 2.0 based specification can still meaningfully be processed by a CDA 1.0 implementation so we would use something that that looks a little bit like like pragmas or preprocessor statements or something in"
  },
  {
    "startTime": "00:40:00",
    "text": "in other languages to to Define these modules and um so this is section 4.1 about compatibility then of course we have to to run name spaces uh we uh the namespaces are the the difficult part to get right but CDL is prepared for this by including characters that we could corrupt for for defining the namespaces like dollar and an ad sign and even the dot is something that that we could corrupt um and then of course if we have modules uh we need to be able to reference one module from another module and we could do this uh more like the the hash include mechanism the C language uses where the using module um actually uh points to the used module or we could do this more like the the way C language modules are linked together where you essentially provide uh names uh in one module that can be picked up in the other module but you don't really tell the system where that that first module uh can be found so both has advantages and disadvantages um directly referencing another module can be very inflexible if you want to start using a new version of that module um somehow using external information uh can be difficult if um yeah you essentially want to to throw things together and uh you now need to"
  },
  {
    "startTime": "00:42:01",
    "text": "add all this external information that that says how things are uh working together you essentially start writing Linker scripts um so I think we need to understand what we want to do here the the explicit reference can be useful for non-cddl information so 431 actually has an example that shows how to import information from INR registries uh this is a little bit difficult because Ayanna does not currently have a well-defined programmatic interface to their registries but we could still Define something that that already can work at this point in time and then discuss with INR how we move forward on this so for instance if we want to uh have a place and a specification where we use a cozy algorithm uh we could uh Define a mechanism that Imports uh values the value column from the Cozy algorithms registry and makes this available as as a choice that that could be used in this place and there are some more text that explains how how this is uh it's a little bit difficult but but can be done yeah so this is Ina references but of course the more likely thing we want to use as references into other cddl modules and one place where we might find um things we want to import might be rfcs and the very simple syntax like RFC 1990.org to reference that we actually mean the the oid rule that is defined in RFC 1990"
  },
  {
    "startTime": "00:44:02",
    "text": "might be an easy way to get cross-references between different documents so it would be possible for an RFC to provide something like a cddl library that other specifications can use to to uh reference this and this we could explicitly support this and this is for for two explicitly interacting with namespaces by providing a way for cd8 specification to say um this document actually exports three names so these are the names you are supposed to use from from this document um and um yeah then of course Define what that is um I I didn't copy of all of RFC 1990 here so that's why this is the looks a bit trivial but uh that that's essentially the idea and uh then there could be an explicit import syntax on the other side uh as well so you don't have to say RFC 1990.0id each time you use an as1 object identifier so I think I presented that before um yeah retroactive exporting um is uh uh something we could do this is useful for CDL this is actually even way more useful once we notice that cddl and ABN F actually are very similar in this respect so retroactive exporting from existing rfcs into a b and F specifications that that reference that existing ABN F that might"
  },
  {
    "startTime": "00:46:00",
    "text": "be very very useful so 445 defines a basic idea what operations could be provided here an export operation an import operation and an include operation which is really about finding the files export and import work with files that we already hold in our hands and include would find that file for instance from a URI um possibly with some some version mechanism okay and then uh there are some some more uh things that can be discussed here uh let me skip that and um finally the observation I already made a b and F is a lot like cddl so whatever we Define here uh may be useful in the ABN F context as well so um I think right given that that cddl Embraces a b and F more than than other data definition languages out there I think it would be a natural thing for us to make sure we can do the same things with a b and f that we can do with CDL itself so that that would always be a consideration uh in this context okay so this was an overview I don't really expect a lot of comments right now because this this is uh very few words on something rather complicated but if you maybe can have a look at this and provide some some comments we might be able to develop this document for a while before the the whole thing becomes transparent enough that we know what"
  },
  {
    "startTime": "00:48:01",
    "text": "document structure is best used to to develop this into an actual specification so that's all I have any comments right now already I heard from I think I'm still on on my mic if I switch all things will go straight on your training um I heard from Amanda uh just last week that they're doing a major overall an upgrade to the storage formats and mechanisms in the Iona Registries um and initially prototyping it I think was service names and Port but into other regular grades and I don't know if you're already up to date on that I figured you probably were Karsten but maybe there's maybe we can insert the The Meta requirement that it be easy to import into cdbl um values from an arbitrary eye honor registry or anyway a lot of the Iona Regis that support yeah so one thing we could do is at 115 um use the the fact that INR people are going to be there and discuss this with them um this has turned out to be very very useful in in previous places where we had needed something more from the INR than they could offer at the time so maybe we even want to schedule a side meeting with them well or do we want to invite them to the seaboor session well this will then not be focused on Ayana but we sure could do that and and always allowing for the fact that there are eight sessions at any instant at a time so collisions are"
  },
  {
    "startTime": "00:50:01",
    "text": "constant well I'll tell you Carson why don't you talk with Amanda and see what they think is best whether a side meeting or dropping into the seaboar session would be better I will do that okay but Kirsten and Barry I would suggest both is best have a side meeting in which there's really time to spread out on you know concept uh whiteboarding and also have them drop in if they can to uh the relevation of the pddl 2.0 during the Secor meeting you know given that we don't meet until Thursday that would be a reasonable thing yeah because that way we could be killing the wider Seaboard community so here's some idea here's the result of some brainstorming this week with I uh I will now stop sharing so my screen stops driving you and me crazy for doing that Ira that was very helpful very welcome I happen to have it open and it happened yeah well I've just given my browser the permissions it needs but uh I need to restart the browser after the meeting is over I will be okay for the future good okay any further discussion on this okay um Barry or Karsten are there joint meetings or joint topics with other iitf work groups that seabor plans to do like with Jose or rats or whomever"
  },
  {
    "startTime": "00:52:03",
    "text": "um in the course of IDF 115 we have no plan for that if there are some we should set up let's talk about that are you are you suggesting something in particular that you want to see us do not that I want to see you do but I would suggest Carson checking in with honest and Brendan in particular and Dave color because um uh one of the three of them may very well have in the rat's teeth suit and other things spectrum and idea of something they desperately wish they could express in um cddl and certainly can't in cddl 1.0 without you know and without informal annotation or whatever without you know just doing it yeah thank you for the notes I was just reading um that sounds I anyway I would suggest talking with if if Barry or or honest or or uh Carson can do so um before the meeting and there are probably others uh you know face many of um always came to the top of my head because I follow them yeah so what one thing I'm repeatedly hearing is that people would like to see something like best practice for using Studio with cozy and it might be worth writing up something there"
  },
  {
    "startTime": "00:54:10",
    "text": "yeah I unfortunately we are this our our meeting is the same time as SEC dispatch yeah which will go away the security people away from uh from the seaboor session yeah the ones that are not already going to Tigress or what was the other one in Marina's yeah the usual ietf meeting mess so no so we may have to do this in the hallway or in a side meeting right yeah I can't see I will be watching sectors batch and see war in two different windows yes um okay so the is does anyone else have anything we need to talk about all right the what I have is I just want to remind everybody to we got two agenda items that came out of this meeting um please reply on the list if there are uh things you would like to see on the agenda at the 115 session so um so that I can put together an agenda I don't know whether this gen will be on 115 he's still on uh family leave so I don't know if he'll be participating in 115 or not I will check in with him on that and if there's nothing else we can wrap this up"
  },
  {
    "startTime": "00:56:04",
    "text": "all right I see nothing else so Carson yeah I just wanted to say thank you and talk to you soon okay see you all at uh ietf 115 online or in person thank you thank you bye-bye"
  }
]
