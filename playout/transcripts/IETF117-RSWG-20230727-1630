[
  {
    "startTime": "00:00:38",
    "text": "Right. Does anybody wish to be the designated notetaker? Should I rephrase the question? there's not that many of you And and three of you I know are doing presentations, so I can't depend on them for being the main people. Okay. I'll do it. Thank you, Phil. But only if I can get to the Wi Fi. Okay. It's That's true. Please, everybody do click on the little link to join fill in the note taking tool Because then if you see something that Phil hasn't caught, you can go ahead and help him out. be much appreciated. It would Alright. It's t+1. t plus one is a good time to start. And I I will give you warning that am trying to keep an eye on Zulip in the chat. But Please wave your hands frantically if I've missed something. that needs my attention. So"
  },
  {
    "startTime": "00:02:04",
    "text": "Welcome to IETF 117 in the RFC series working group. Oh, I am Pete Resnick, and I am only Pete Resnick because And among the other things that your chairs have slipped on. One is we didn't notice that Ecker had a hard conflict for this session. So It it's just little old me today. We're really trying to get better. I swear. Here's the note well, the IETF note well. This is not per se, an IETF session, but we will be following it is part of the IETF meeting, we will be following the note well As far as, please note that there were all sorts of policies and procedures having to do with IPR, having to do with code of conduct, that you can find in these assorted documents that are noted at the bottom. by this time in the week, you should be well aware of them. If for some reason you are not please do check these documents out and take care to Follow the processes appropriately step out of the room if you need to. So, We have a loose agenda even though it looks rather put together, this part is the administrated I've allocated 20 minutes each to the two documents that we've been working on on the list in fits and starts. John Lavigne, I think, is gonna present on the first and Paul Hoffman will present on the second. Then I've left a big chunk of time for Martin's presentation because it does cover all 3, you know or or I should say, it covers the more general question and the bigger policy question that I think this group is trying to address"
  },
  {
    "startTime": "00:04:00",
    "text": "So when we get to each of those documents, my inclination is stick to questions about pure content, you know, what does this mean? Why did you make this change? How does this change? work, but As far as bigger picture questions about, should we be changing XML and these particular ways, let's hold those questions until after Martin's presentation I've left a bunch of time there so that there can be discussion and and it will apply to all three Then I threw 10 minutes toward the end for discussion of how to get the group making a little more progress a little better. I've got some of my own ideas and and then a few minutes at the end for any other business. any bashing of this agenda, any you need anything else? I have a quick question. Carson, I'm sorry. the tip I'll pay attention occasionally. Go ahead. Thank you, Karsten Bormann. So I have a quick question about call. It's 7997bis. drafted? That Yes. And actually, Yeah. And the chairs need to put that out for a call for adoption, and we just again, another ball drop on the part of the shares. But, yes, that is on our list of things to do after the meeting. But we we did agree that the the the actual change that that most people are waiting for simply enabling Unicode code in in the tool. It's not something that this document to be done for I believe that's the case. I don't think we're waiting on The tooling is is what's waiting on this. Is it? It's just policy implementation. Not The the tool Robert Robert Nodds at me. Like, tool currently only supports non ASCII characters for the t element. that that's bad for us who actually sometimes"
  },
  {
    "startTime": "00:06:01",
    "text": "use lists and and other things like that. There there is nodding in the room including by Robert Sparks. 1000 Yeah. Thank you. If there's any further discussion we can do so on the list, but I think we're we're good to go there. into Alright. Any other agenda bashes? Things that we're gonna need to talk about today? Moving along. guess this is John. wanna share the slides from your phone, or Or do you want me to share them in in next slide next slide next slide? shoes. Excellent. I will do that. 40. Stop sharing those. And let me make sure I know which ones are which. this is the as implemented or maybe 3.1 back. Yes? Yeah. k. Okay. Europe? Yeah. Those look that that looks familiar. So so next. Okay. So back when I was post Yeah. Back there. Back when I was sort of the RFC editor, One of the things I did was to attempt to document the the the XML language that we actually use in RFCs. the So RFC 7991 Excuse me. define the version 3 language. And it says right in it, this is, you know basically, so this is our best guess and will probably evolve. And by golly, it did. xmltorfc made some significant changes to it even before we started publishing anything. then once we then once we did start publishing stuff, there was another incremental set of of of changes. Some of the changes were specifically"
  },
  {
    "startTime": "00:08:02",
    "text": "in response to user requests, like, sort of stuff the cars didn't just talked about. Some of it was for reasons that seem more to have to do with implementations or personal preferences. Next, please. So yeah. So there's there was sort of 2 general kinds of changes. 1, our additions. Stuff is backwards compatible. Some are simply changes, stuff that's incompatible with what's in the in the current document. but Sorry. But, anyway, since we started publishing RFCs, all the changes have been backwards compatible. The current the current version of XML to RFC we'll we'll render every published RFC. So for practical purposes, we're talking, you know, the the current 3 the the current whatever the the current 3. x at XML is the RFC. implements, we can consider that to be the language that all policies to date have been published in. in the earlier ones, didn't use some of the features that were added later, but the but those features didn't break anything. Next, next So there were a lot of what I call typesetting changes There is a there's a There's there's an an unfixable alright. There's an unfixable tension between people who want our XML to be purely semantics simply to describe you know, this this this is this is a diagram and this is a section and people who wanna do type settings. Like, I wanna invent stuff by three spaces, and I want and I want this to be bigger and I want this to be in italics. And so The original language tended more towards the semantic side, and there's been a lot of additions to make to to allow more control over over the the specific formatting. You know? An example is the the t element, which is for paragraphs. Now let's you put in a specific indent. you know, whereas before, if you wanted to do specific events, you had to fake it with nested unnumbered lists, which everybody agreed with silly, so we added the"
  },
  {
    "startTime": "00:10:01",
    "text": "So we edit the indent even though it's not entirely clear what it means to indent by 3 somethings when you have multiple output formats. Next, please. There were also some actual semantic changes, which I will discuss it's slightly more detail. There's the always exciting postal element, which was added later. There's the way the links are handled, and there's the way we handle Unicode. Next, please. So one of the We need to say what we're what we're gonna do. We need to mean We need to decide our our How many of these changes are we gonna keep? But I think the answer is gonna be most of them. Other things that were that are clearly mistakes that we should back out are there things that we were that are mistakes that we that we need to do in a different way? And are there things that we should be doing that we aren't doing yet? And I think there might even be a few of those. So if if if you this sounds like I'm I'm proposing changes to the XML, yes, I am. but but but but per the boss here, we'll we'll argue about those a little later. Next, please. So, yeah, the formatting changes are basically harm. You know, I I'd say In some cases, I have I have my doubts whether it's really whether it's it's really useful in our in our environment to try to have such perfect control over one format even though it's not necessarily gonna look as good in other formats, but it's there. I don't think or it's anything. And there's a whole bunch of new elements And as far as I can tell, other than postal, I think they're all actually reasonable. Next, please. here are some things that I think I think are actually done wrong. So And I'm gonna go I'm gonna go through them here starting with postal, and there's some other odds and ends I think people will recognize So next, please. So the I talked to the guy who implemented postal he explained what his what his what his reasoning was, and I didn't understand it."
  },
  {
    "startTime": "00:12:03",
    "text": "So, anyway, we have this very complicated way to put in postal addresses where you can put in and you can put in the city and you can put in the sub region and and all this stuff. And the problem is that to format these, it requires to use it requires a library that somebody at Google wrote several years ago in abandoned. and it's out of date and it's and it's and has it has mistakes in it. and there's endless pull requests that will never be never be updated so that Fortunately, all of the addresses we have so far have haven't run into these implementation bugs. But this is basically a time This is this is basically a time bomb. You know? This is depending on the library that that is already dead and is not gonna get any better. And someday, we're gonna run into an address that uses if an address from somewhere in a in in a place where the library is wrong, and then we'll be stuck. So the way to fix it is actually simple. Next line, please. Which is simply say, you know, Okay. we're not the universal postal union. An an an address is simply a list of lines. So, like, this is and this is actually a real address from an RFC. So in this case, it's got, you know, the first line is the business park. The second one is the city and the postcode because that turns out to how you format stuff in India. And then there's the the state And then we leave country at the end because people have told me that it is useful able to go through and collect statistics on on no. what countries people are from. And I am not proposing that we have a master list of countries. We just do something reasonable. So this would require going through and basically formatting everything running everything through the formatting code one last time and turning them into post line. I know how to do this. It wouldn't be too hard. a question you just know. Okay. You have Alright. Alright. Next, please. Okay. This really, I I think, is just a bug. In the RFC element at the top, there is a doc name field in Internet drafts. It is the name of the draft. RFCs, it is still the name of the draft. in And I think that's just that was just an oversight."
  },
  {
    "startTime": "00:14:03",
    "text": "So several people have suggested to me document name and the RFC should be the RFC. if the and it and in response to the obvious question, we'll how do you know what drafted it used to be? There's a separate link element, which I display down at the bottom. tells you what draft it used to be, and that's not gonna go away. So this I think this is basically just a bug a bug that we should fix, and it makes it would make indexing a little easier. And it would certainly avoid a lot of confusion where, like, the document name actually isn't draft blah blah. The document name actually is RFC 9405. I would like to fix this. So Troy is in the queue does he have Yeah. You wanna if you wanna do questions on this particular slide. Go right ahead. On on the previous slide, a comment -- Oh, okay. -- for the post Okay. If you can go back. Yeah. slow. Would it would it be useful to have in the tech itself you know, one of these I'm not sure what the what they're called. Right? When you say, post line semantic, equal string, and then the old tech name. So that -- It would not. We I I the the semantic nobody has ever been able to explain to me why it is useful. I mean, the only reason to have a postal address is so that Like, if you wanna send somebody, you know, I don't know, a letter, You you you can you can send it to them. like, we're not we're not doing analyses on what post office box people use. -- point is why shouldn't we don't need to do it for any of it. We don't need to use that option there for any of our rendering. But if the author feel strongly that, you know, they come from particular regions. The particular lines are called the following why shouldn't they insert that information? Why -- Because of -- why why forbid metadata? because it's useless complication. But anyway, I think with I think this is getting off over. getting off on a tangent here. I mean, I think I I under I understand you think that would be idea. I think it's a terrible idea. We're not gonna resolve it right now. Okay. Okay. Yeah. Yeah. Yeah. Julian, what Slide, did you wanna talk to? I'm actually"
  },
  {
    "startTime": "00:16:01",
    "text": "actually both. for this one of the -- Okay. So just one comment about the posted line, I agree mostly on what Fronda said, I just wanted to point out that these specific elements on the post that have been there forever. But before the reimplementation of XML to RFC they were ordered as if this was an US address. So the change that actually was made was changing the display of that information based on the country name. that's where that library came in And on the document name slide, I think the obvious fix is not to have a doc name if it's an RFC because duplicates the RFC number, which is already in there. Yeah. That would be reasonable too. Yeah. with respect to the link, I know that it's I think we say this as mandatory, but that doesn't make any sense because you can compute the link from the RFC number, and data tracker will redirect you to the correct page. So it's completely pointless information, It may have been useful 5 years ago, but nowadays data tracker knows about what drafts led to a concrete RFC. So we are just stuck with Yeah. Well, I mean, Yeah. Yeah. You're right. Although that adds a dependency on the data tracker, which may or may not be good. But can certainly keep it in mind. Alexis? Yeah. I just wanted to respond to that. I think it's valuable to keep the link there to data tracker exactly for that reason in case the data tracker dependent he goes away at some point. It gives us a artifact, to see the draft."
  },
  {
    "startTime": "00:18:01",
    "text": "Yeah. Yeah. Yeah. Alright. Yeah. Alright. Okay. We we But -- Martin Martin Thompson who didn't put himself in the queue. But yeah. because it's like, the new the the new thing, and I kinda like sense of it. But if the data traffic goes away, then the target of the link goes away to It's hard to argue with that. Yeah. But way back. Exactly. Rob -- Take us out of the weeds. The important thing with the proposed changes is that somehow the RRC still ends up with the draft name, the string of the draft name that it came from. Thank you. Right now, it's embedded in a link. we could have a different proposal that, you know, it's just a piece of metadata that and Other things can figure out what to do with it. Thank you. Yes. Let's let's Yeah. Yeah. Yeah. get a whoever has a proposal along these lines, let's get them on the list to John and Paul and see if we can sort which is the best way to approach this. Yeah. Yeah. Yeah. Alright. Good. Good. Yeah. But I think one thing this does remind me is that there's a there's a fair number of decisions that are sort of intertwined with our tool and this comes up later in with includes to next The original RFC said you can basically hardly put unicode anywhere because at the time, UniCode support was still pretty iffy in web browsers and and PCs and stuff like that. That was then this is now Now I think it's reasonable to expect any web browser will have fairly complete unicode support at least for sort of sort of widely widely used languages that people actually speak, if not necessarily for things like RMA. was a new element u for displayed unit code."
  },
  {
    "startTime": "00:20:03",
    "text": "which actually it it puts in the unit code and there's some options so you can what you can you know, it puts in the that that the the character names and stuff like that. And that's useful. where where you actually want us where the actual code code points are important. we have Given the RPC discretion, they'll allow Unicode pretty much everywhere, and they get to figure out what makes sense. There's still some open questions like here xsquaredlessthanerequaliv Those are actually all unicode characters. think it's okay to use them, you know, do do we wanna allow in line math maybe. I'm not I'm not I'm not gonna decide it here, but, actually, that is sort of the the definition of what characters are allowed, where is not actually in the In the in the the XML grammar. It's it's more a matter of what the implementation allows. And and finally, there is a con there's a contact field which is intended for people's names. but but but but but people keep attempting to abuse it to sneak in unit code because only it used to be the only way to do unit code without displayed stuff, toilets. Before, Torless, I I do think The RCB, I believe, has given interpretation currently that the RPC should continue to limit unicode in certain ways. And so I think if we want to be explicit about guidance, we probably have to give it. Yeah. -- as the RSWG. Torlas. Would would would there be a way to say here is an ASK 7 Bit Escaped Notation for rendering where you don't, you know, or cannot or do not want to use that, for example, if you go to brain or anything like that where you may have problems. So an escape notation, right, either for a single character or for of -- So an alternative -- Yeah. -- of some sort. we have that in URLs and everything. Right? So in in in terms of is it for accessibility, or is it for for -- I think accessibility might be might be one of the reasons here. Yeah. I think accessibility is an important issue, and it's way more"
  },
  {
    "startTime": "00:22:04",
    "text": "hated in this. So I think we should, you know if we if we wanna do something for with the accessibility, I think we should do visibility and not just and not just try to do it, do it, do it, one tiny hack at a time. I mean, for example, there's a big issue with accessibility of, like, if you have a line You know? You you know, there's no braille version of a line drawing. Right. But just just just just because they're more and more problems, why shouldn't we offer one simple solution for 11 simple option, which is you would like to have things look nice. with, you know, specific things like formulas or other, and you, of course, also know some be asking 7 bit alternative notation and because Yeah. I I think one of the I think the short answer to your question is and this is gonna go a little to the discussion we have at the end where As a group supposed to sort of make broad policy and not just sort of implementation choices for the RPC. So I think if we can come up with something that looks like see that the RCEP can interpret and say, yes, we should have alternatives to tech in this particular way, we don't wanna engineer in here. We want to make a policy statement about what we want you know, RFCs and the XML to look like. But I think this gets into the discussion we're gonna have in little bit, Paul. can we not do the mic line on this. This one in specific is the draft that you mentioned earlier that -- We we are we are down to 2 minutes left for this supposedly. So Yeah. j quickly, Very very quickly. Sorry. I think we're conflating a couple of bits here. So that the change that's come through the RSAB is that If you read 7997, what what it says about unicode, and compare it to the current implementation. The current implementation is overly restrictive. And so it it goes beyond the what 7997 says."
  },
  {
    "startTime": "00:24:02",
    "text": "And so what that's just been confirmed through the asset, that that's the case. And so that over a is being removed. Okay? But when we start talking about things like the the mass and that kind of stuff. that's actually now going beyond 7997. And so that's the sort of hard line there. where, you know, where the RSWG is involved and where it isn't involved, I think. Thanks then. helps. Next. Phil, But Bye. Very quickly, Expanding the unit code is very welcome to me. and specifically because I do a lot of math stuff And when you've got one spec that was published outside the IETF, and you're explaining how to use it in another way and it is written in math. You only introduce confusion by having to introduce a whole set of new numbers and letters of whatever to refer to You had to change in the manclature. Yeah. And that's just a disaster. Yeah. I mean, Yeah. to try to only stick my foot a little bit into the tar pit to mean, by by doing with with with inline unicode, you can do know, you basically, you can do this. You can do superscription list. If you wanna do full math, with, you know, integrals and and stuff. For that for that, you need SPG. You know? And that's that's that's another discussion. Next, please. is another question is what you do about the prep tool? The it was pretty clear when when the prep tool was designed, the idea was that you would run the prep tool once it would then annotate the annotate the XML and then you would then you would render the you would you would render the that added that that prepped x XML several times into multiple formats. In fact, We only do that once when the RFC is actually published. Other than that, the the exit the way XML RHC is written, it it basically does prep and rendering in 1 in in one pass. You know? So"
  },
  {
    "startTime": "00:26:00",
    "text": "you know, Given that, is it useful to still have a a a separate prep tool? I think it is. And it's like Robert's pointed this out. It said it it it sort of nails things down so that rendering will be consistent like the paragraph numbers won't change. from one rendering to another. To make the prep the benefit of the prep tool, there are a couple of new elements like TOC element, which is fine, Here's the table of contents that was created by the prep tool. unfortunately, another change is that this is it's to put the authors at the end, there's a quick hack that basically says, well, I'll I'll put it in a section, which means that, you know, you need to be able to put an author in a section so that although in practice, authors only appear in this in the author section at the end The grammar allows you to put an author in a section anywhere. which is ridiculous because that's not what authors are for. So I'm that's another thing we should fix just by adding, like, an author list element that only goes at the end. And I think there are maybe some other minor oh, and and whether, you know, another Next slide for the rest of the prep tool. we're constantly discovering that users don't don't understand what the prep tool does. Julian suggested that ML has name spaces. It would be a good idea to put the elements that the prep tool creates into a separate tool namespace to make it clear like this is This is this is for These elements are for are for for computers, not for human beings, and it'll also make it easier to uncrap stuff between these strip those out, and then could have removed the removed the remove elements that have defaults where this explicit value is the same as the default, but I think it would simply a lot easier. And there's also a question with our tools. You know, it's like prepping is actually kinda slow. So would it be worth fixing XML RFC so you could say once and then render into 2 formats. I don't know. Might be. So Elliot, and if you could quite quickly, although would have 1 or 2 slides. I Yeah. I think so too. Yeah. I would urge folks, as Julian mentioned in the chat room, You know, the comment was I disagree with most of the slide, but we should probably take"
  },
  {
    "startTime": "00:28:02",
    "text": "to the, you know, issues list. That would be a preferred way to do that, but please do jump in Elliot. Okay. So actually, I'll make it even simpler. Pete, could you put a pin in these two slides for your later discussion and and and so that we bring them up as to an example of know whether this is policy or implementation. But we don't have to discuss it now. I just wanna put a pin in it for later. Okay? Thank you. Okay? Carsten? Yeah. I just someone was wrong on the microphone. we do use author elements in the back meter in the contributor section. You don't know anything about the contributor section, but that is added by gram down r f RFC if you have a contributor. And since all elements don't work there, we use the contact image. which is identical to the author element except that it's called contact. Yeah. It it's a good point, but something okay. but but I think my point here is I I would like to adjust the grammar so that what it allows actually matches better, what people we want to allow people to do is we're gonna put authors in the contributor section. That's fine. We can fix it it to make that work. Alright. 2 more slides. Yeah. 3 more. Is an overall issue that we've been scratching our head heads about the way that There are the rules about what what elements and contains what others what sub elements seems kinda arbitrary, and there are constant places that Karsten keeps reminding us of, where you can allow an element is allowed in one context, but not in another context. It seems like it should be the same. And and Yep. And, yeah, Peter and I were both both tried very hard to find time to see if we could rationalize this, and we and and we haven't done it yet. So, yeah, the concrete proposals have been coming real soon now for a year. I think if we fix this, we'll basically allow more"
  },
  {
    "startTime": "00:30:01",
    "text": "more things in more places so the changes will be upward compatible so they wouldn't be very painful. But it's it's also a place. But, you know, we need to review and make sure we actually understand and why do we allow stuff where And I think I got one more And there's odds and ends. Our rules for SPG don't work There and there's a whole separate discussion about that. The grammar contemplated bitmap artwork, we've never allowed but, actually, I think it might be it might be reasonable to allow it because You know, you can no. Embedded bitmaps and web pages do work. way the the way the the link was implemented is just different from The aspect says. We either need to fix the spec or fix the code. And There's also and this is this is more the tooling, but how to includes work and, like, where where do they where do they find things because there's a lot yeah. That's that's that's a whole can of worms that make making includes work. I don't know to what extent would be in the grammar and to what extent that's nailing down stuff in the tools. And I think this is my last slide. Oh, yeah. So what do we do? I can pop we can publish the draft more more or less as it is now that as a snapshot of what the code does now, we can do can clean stuff up to what we are happy with with the 3.1 and publish that. We publish both or we could decide that this is just the working document and not publish and just leave it as a draft. this really is my last slide. And is okay. which one that one. Click on the right buttons. I think I'm still a QR code. Oh, no. There we go. That's right. Okay. So this is a brief presentation on the draft that that is working group draft,"
  },
  {
    "startTime": "00:32:00",
    "text": "the basic idea is 7 RFC 7990 was the overarching document for all of the changes So it says things like we will do this. We won't do this. So there are gonna be some slides in here that we're not going to have my client on because they're actually very much related to what Martin's gonna be presenting later. But since However, we do the discussion of when do we change? What parts of the format, How does that affect renderings and such like that? we'll have to come into 7990 biz but that doesn't mean we have to have that discussion in this presentation. Next, please. So it just quickly, it was adopted by the working group. We had a 0 a draft, lots of the discussion in June July were about topics that might be in the future of this. we may end up deciding to not do a straight 7990 biz, but something that actually covers more that is now that we have a picture of of the sort of larger things that are going on in the series, we might actually not call it 7990bis, but you know, the new process or something like that. And, again, all the questions about regenerating, When do we do and such like that? will be after next. Next, One of the things in the so now the next couple slides are comments that have happened on the mailing list. started talking about, you know, this is where canonical format is defined. again, we don't need to discuss it right now, but Mark Nottingham started at read about this,"
  },
  {
    "startTime": "00:34:00",
    "text": "that said the definition that we have in the draft doesn't actually specify who's performing the actions and Just the you use of the word canonical for a particular version and such. What does that mean? that'll come up later 7990 originally assumed that there would be some evolution and it said then, you know, like, if there was an error discovered in the format of the XML for an RFC then Mark Nadi may ask, well, what does an error mean? You know, is it an interpretation is what so we need to either nail that down or remove it from 7990 biz but that will have to be discussed. It should actually be discussed after we have the following discussion on regeneration because some people But, look, many people here are engineers. So we see a way to fix a thing, we try to back track that into the definitions we have. But the RFC series is going to last for many, many more decades. 7990 is a way to move forward for those decades. We now have of more refined pictures of how that would work instead of trying to backtrack into we did before, it really should be forward looking. So something like where we say, what is an error instead of just trying to make it look like what we wanted before, it really should be a general long term thing. Next? So next steps is there should be more discussion. I should have said more discussion. on the mailing list, And then as this happens, the chairs have to call for consensus and declare consensus so that both the previous draft and my draft and whether Martin's draft is gonna separately or not. all of those can be moved,"
  },
  {
    "startTime": "00:36:01",
    "text": "people can see where we're going. because one of the things I I spent sometime last night looking at the mailing list discussions. not only do we cycle a lot, but people someone will suggest something that people think that's great. And then we'll assume that it's already a given, and then we'll be doing diffs off of that weeks pass, and nothing is instantiated anywhere. a month passes and people come back looking at the draft and such. we need to actually get consensus put in drafts so that the discussion because remember, many people in this discussion are thinking, I know what they're talking about. because I've written RFCs for the last 30 years. I know what they're talking about is incorrect. Specifically, because you've been re writing RFCs for the last 30 years, we're talking about the new way to do things. that was more Okay. And then good layup for Martin. who against my better judgment is about to wake you up merely by formatting. If you can't do it well, do it really, really badly. how we operate here. Right? Yeah. Let's go. Go on. Alright. So We've had a a lot of debate back and forth about what it is that can change and what can't change. And probably get the terminology wrong here, and I apologize to Martin in advance for that one. Uh-oh. I will eat the mic. Okay. So much better. Yeah. we'll work it out. I I took a look at RFC 7990. And it says this, which I think is"
  },
  {
    "startTime": "00:38:03",
    "text": "kind of interesting. It doesn't say anything about the publication formats in relation to that, I found that a little little distressing because there are no there's no no really clear direction. from that document on this particular question. So I guess that means we get to decide next place. So I just wanna get a Up upfront, the sort of 3 general classes of things that we we're sort of talking about in this context, the the notion of canon. as it relates to the ROC series, the authority that is carried by the publication of an RSC, the the capturing of IETF consensus for an IETF stream document and and someone. And and then there's all all of the archival considerations that relate to all of these things. So I think we can probably have to knock off each one of these things as we go through the the discussion here. Next time. So In discussions about this particular point, I think a number of people have raised the the concern when obviously, to John's point earlier, Let's just start with the XML. We can talk about a publication format as a consequence of of that. It seems like it would be inevitable if we change XML that the publication formats would need to change as well. So let's start with the XML. Next, please. So in in talking to a number of people of this one, I think there's very important distinction to to be had between the way in which the the the intent of the authors is expressed in XML. and the intent itself. And to the to the greatest extent possible, if we are"
  },
  {
    "startTime": "00:40:00",
    "text": "intending to change the way in which documents expressed the the author's intent. We need to make sure that the authority that is captured in the publication of a an RSC. is retained through any changes that occur. So if we go back and we change the address, lines. We need to we need to be confident. that those changes don't undermine the the intent of of the authors and the authority that that document captures as a result of of it being published. So Obviously, the the address line thing is probably easy. It's going to be a little challenging when we talk about TT elements or or other things like that. I I mentioned he had We use XML specifically because it is a very explicit way. to to capture semantics. and if we change it. We may also inadvertently change some of the or thought. authorial intent or at least the intent of the streams as they publish the document. What their land, on syntax changes, are a good thing potentially because it means that we can ensure that the syntax for RSCs is consistent. across the series. one of the one of the things we've found to be quite difficult is already we're seeing some amount of divergence in the way that XML is used across across time because we're learning how to use it better. or we're refining processes. and that's that's good. But it means that anyone consuming the series now has to understand the plethora of different ways in which documents are expressed, and if it would be better, I think, in my opinion, to have a consistent expression so that the the semantics are clear."
  },
  {
    "startTime": "00:42:00",
    "text": "throughout the series without having to to know that this particular document was published with this particular set of some semantic meanings attached to the elements, and this one was published with a different set of semantic meanings attached to the elements. So There is that. next place. As I mentioned, not always clear. So the document that I've published in the last, 2 days, I think it was. I I wrote that during a working group session. I was trying to pay attention to other things, so there may be errors in there. Says, the future future RSWG is is empowered to to change the definition of the format. What? John was talking about and It also says that the RSWG can describe a process for changing existing published XML, Provided that they exercise good judgment. And to the greatest extent possible preserve the semantic that that were captured in that document. Now that's gonna be difficult, but we have some worked examples of things where we think we probably get away with it. That may be expansion. order to make maintain compatibility to the point that John made earlier. So Next, I think, That's good. Yeah. This is really a slide teeing up a question. So I think this is where we're at right now. And It's probably a good time to have a discussion. think I have anything more after this one. Oh, no. No. There's one that yeah. That that is another point that's that's in the draft could just jump forward to that about our cargo slide, the the document also talks about archival."
  },
  {
    "startTime": "00:44:01",
    "text": "establishes requirements for archival of the XML documents. It does not establish any requirements for the archival of publication formats. It specifically points out that if if tooling changes, you can regenerate the publication formats, and that's fine. Whether or not those get archive at that point in time is and implementation decision. I I would kind of expect that they would be archived periodically. maybe they'll they'll not be archived every single time. to allow for the fact that maybe there were mistakes, and we discovered mistakes and Let's let's not archive that version. That sort of thing. And Yeah. Let let's let's there are 2 more slides you wanna go back on. look at the next one I've okay. What are Sorry. forget where It is oh, yes. So the consequence of that is that you can generate them, generate them, whenever 1 of the deemed appropriate. Yep. Mhmm. Robert likes this. Oh, and and this this is my backup slide. Unfortunately, the original this one had animations. but we can we can thank Mideko for saving you from that one. But that that that that that goes through some of the problems that exist in the the publication formats as a result of the the policy never to never to change them. So j. j. take it away, Jake. I might jump in line rather than -- Yeah. Yeah. -- stand up here. That's fine. Thank you, Martin. So the keyword for me in your presentation there was about was preserving. think that what we've always understood or what people understand is that anything that happens to an RFC has to preserve the original intent or the original, yeah, the original intent of when it was first written. And I think if you start from that first principle, that is actually drives a number of things. not just what you're talking about there. It drives the the the the semantic"
  },
  {
    "startTime": "00:46:01",
    "text": "bit that it's possible to enhance the XML, do things to the XML because they will not be changing the original intent. Okay? The other thing that which is my particular bug bear is I is that we published documents that we know are wrong. that we have somebody tell us they're wrong. We have verified it. We've gone through a thorough process. that says we know that's wrong, and we've documented the wrongness, but we still you know, as a writer, but we still publish that document. And to me, that is actually the opposite of preserving of the principle preservation. Okay? And so If we start with that principle preservation, I think it should lead us to the view that we should be adding the Arata as well. and regenerating those documents, including XML, You know? in order to incorporate that of those of Rata and working that way forward. that to me is providing correctness, maintaining the the preservation, It is helping the people who actually implement it I think I think you know, the the the the the immutability that we've got needs to be dissected and a a set of principles put in place to rip to replace it. preservation is the the good one to start off with. And then drive that sort of change down from that point onwards. So Thanks, Martin. So And maybe Martin wants to address this, but my interpretation, and this goes to a comment or 2 that's being made in the chatroom, My interpretation was that the desire for preservation was preservation of the semantics expressed in the XML. Right. So not"
  },
  {
    "startTime": "00:48:03",
    "text": "the intent of the working group on a particular technical topic. picking that word out and expanding it. Absolutely awesome. So there's you know, there's a question of the group intended to label this as source code in a particular language because that's what it was. It was abNF. It was Yang. that's a semantic that is carried in that XML. that we need to preserve going forward. Now errata are different layer of semantic to me, at least different than what I heard Martin talking about. And I I think it's a reasonable point of discussion. I'm suggesting that this is a or Marta -- We could accept -- -- Sunset. note is a subset. Yeah. And while it's useful it's it's a bluntly a trivial subset in comparison to the bigger issue here which is incorrect documents. Do you wanna adjust that, Martin, or it pulls up next? Yeah. just briefly. The intent of this was to just start with that subset. I think that I'd be supportive of someone trying to explore the the the larger question of of Arada, but I I wanted to see if we could get this much. Just this much done. Paul, go ahead. So two things here. I'll do it in in reverse order. I like what Jay is saying, but not when he is saying it. I believe that that I mean, it's gonna be a giant pin, but I think that SHOULD BE DONE LATER FOR EXACTLY WHY Martin SAID THAT. But the reason why I put myself in the queue is I think we end up tripping a lot over something that I had mentioned in my slides, Martin mentioned his is canonical. we are used to having that word around and such like that."
  },
  {
    "startTime": "00:50:00",
    "text": "and I think it is now getting in our way big time. So a possibility is that we simply remove the concept of canonical We go to, as Jay said, 1st principles, which is wire reading them? You know, how do we make them and such like that? That may make this whole set of stuff move forwards faster instead of trying to come up with a more interesting way of defining canonical. Because quite frankly, 99% of the people reading RFC 9123 don't know what canonical mean. So 1% does and maybe cares but The RFC series is for the readers of the RFCs. And if we are getting stock. on a concept that isn't important to them and getting unstuck might make better RFCs, I think we should go that way. Phil. I agree mostly with what Jay was saying. Just throwing out something that makes upset folk. versioning, Yeah. Yeah. I mean, really you've got the 0 the dot 0 version of the thing of the RFC, which is when it was originally print printed. I would very much like to be able to pull pull up RFCs, with the IRata included But I also in my expert witness thing. I need to be able to occasionally go back to what the it originally said. And so I think that you need to capture both pieces of information And the obvious way of doing that would be with aversion number. And If people want to have the purists originally printed, they can always go for the dot 0."
  },
  {
    "startTime": "00:52:04",
    "text": "And it would also allow us to do things like tweak the XML to meet some new criteria, you know, That would be a a sort of a rafter. to reiterate on Paul's PIN and it keeps getting bigger and fatter. there becomes an additional question here about where the line between presentation, and canonical, archival, preserving semantic intent goes. And so I think we can all imagine instances where there are presentation formats of Verada, versus archival formats which preserve the old and versioning formats Some of those might be implementation questions. Some of them might be policy questions. And I think this is sort of the the joint that Martin's trying to carve here. So Anyway, appreciated and the the the PIN keeps getting stronger here. Carsten, Yeah. I want to pick up on the on the from intent once more. I see. the ROC series is a very special series because the point the IOTF, and I think pretty much all the other streams is to run various consensus processes. So we have consensus about content, and or consensus about fitness to publish. and Actually, when you look at the documents, there is no intent there is only consensus. mean, except maybe for the absolutely simplest I humans that were just written and accepted by everyone, and then punch But all technical development results in consensus and not any intention."
  },
  {
    "startTime": "00:54:01",
    "text": "You will never get the band back together that had the consensus. So and any postfactual changes will stay stay something like like scar on on that document. But I think that that's not a big, problem. We just have to understand that this is the case. And the other observation is the consensus. is built around renderings. not around the source. So the the XML source actually doesn't matter. which is when you think about it, it's a pretty surprising revelation, but it it's actually true when you follow this line of reason. Alright, Martin. You were in the queue. Yeah. Martin Thompson, I'm gonna disagree slight with slightly with Carsten. I think in a lot of cases, we're we're building consensus around markdown. rather than the the final out effect. which which is I think a a a very powerful tool So that that's worth worth talking through as well. I I just wanted to sort of get up and highlight that that there are possibilities for things that we could change that I don't think affect authorial intent or even the expression of authority and agreement that's captured in a document. One of the things that I see the RPC routinely do is is pick line wrapping in various ways. and They do that. using a particular set of tools. and we might find, you know, during the discussions here, we find alternative ways of managing that and going back and retroactively fixing those things. would be an an an interesting option that"
  },
  {
    "startTime": "00:56:01",
    "text": "that this change would would would make it make it make it make it make it make it make it available to us. And I think that that's that's the sort of thing that I'm talking about in terms of changing the XML. The other the other sort of thing is taking an existing element that has multiple different semantics as expressed through combinations of attributes and and defining that to use different elements instead. would be another thing that we could do that that I don't think it changes the semantic intent of a document. So just wanna put some some of these examples out there I as as possibilities. I see a lot of people in in the chat. saying, well, you can't change the document. at I don't think in practice, people agreed to the the XML as custom said. And so we we have some flexibility there. Elliott. This is a great conversation. And thank you, Martin, for you know, you're you're never shy about, you know, taking on these 6, 6, 6, 6, questions and hitting the nail head on. It's just really a a pleasure to to participate in this sort of but but discussion. I think though Paul really articulated something that I think is worth exploring quite a bit which is why do we need canonical anything? And thinking and and and he got my head spinning right there. you know, if we think about the purpose of the series, principally, it's around interoperability. Right? We wanna make sure that interoperability is maintained And we talk about canonical, from a readers perspective,"
  },
  {
    "startTime": "00:58:00",
    "text": "the thing you would like to avoid is a situation where you have The HTML version seemingly indicating one thing in an example or something like that, perhaps, it's, you know, a rendering problem. and PDF showing something else. just as a case in point. At the end of the day, the question is, is it, you know, we're not the UN. Right? Do we have to have a canonical performance? Do we have an editorial committee Like, every UN function has that debates between the 6 UN languages to make sure that everything is equivalent. And and if there's a dispute. Right? It's the French version. Right? we don't we may not need that for our purposes And I certainly I do not agree with you, Martin, that most developers and and participants in the IETF really get into the discussion of markdown, I really do think it is the render format. and we could ask people what they think about that. But it also brings perhaps forward another issue, which is what what we as the the people who write they eat these things use versus what people who read them. use. And wanna go any further than that. I think this is a great conversation. And I I think it's a a great a start of a great discussion that I think we'll have for a little while. Thanks. Plexus. I think it would be useful to look at redefining and considering whether we continue to use words like canonical and archival. I really would prefer to do that in the larger context of an archival policy document. rather than trying to make that a gating factor for being able to make forward progress on this, the thing that we have in front of us, changing XML. from my perspective, the only thing we really need to"
  },
  {
    "startTime": "01:00:02",
    "text": "consider before we say yes to this is whether we prefer something like versioning versus dating files something like that, like, the the actual how are we gonna preserve things? I I don't think we should make this a this conversation a gating factor for whether we move forward Good point. Thank you, Robert. Robert Sparks, the queue got so deep that now got many complete things, and we'll try to pull them back apart. Anic notes. republishing the rendered formats. if we discovered that for some reason, we needed you change the fonts that we that we Use in the PDF format, in particular, because the fonts are embedded there. being able to rerender backwards so fonts were consistent across all of the the things would be you know, just consider that as a use case in line with what Martin called out with the underlying libraries change, and we can change the way line breaks behave. Frank, Frank, Frank, Frank, is more fodder for we should just be able to replace the rendered formats. Almost it will, So I will. add a little bit of weight to the big pin on the wall around be a RADA, Sorry. Mhmm. The n line and rata rendering experiment that we ran on the text formats. if you read the code and you read some of the results of what that code produces, you discover that the"
  },
  {
    "startTime": "01:02:00",
    "text": "Arrada's content that we have, is not always in a form that You can even if approved, you can just go make a simple change to the document that retains the intended semantics of it. Right? Particularly when Neurada is something that changes like ADNF or the many of them are not written in it before after. kind of format so that they can be injected So there's going to be a number of those were trying to present the here's what we really meant. will weigh very deeply into the question of whether or not it preserves They, intent of the original publication or not. The the reason there's a big giant pin in Erada for me is I think exactly this issue opening up the question of whether Erada ought be applied in some way in presentation in in the original it opens up the question of the entire RADA system now and how it's used. And I think it's an interesting question. It's one that we would have drag the stream heads into in, you know, and and the big broader audience and it's a big big hairy mess. Jay, go ahead. I'll give you an optimism pill later. So canonical is is a is a difficult word for us, isn't it? because it does imply as someone wrote on the list that if you're not sure that's the one that you go back to to check. And asking someone to go back to check XML is perhaps not that user friendly. What it actually is is the source file. because we know that"
  },
  {
    "startTime": "01:04:03",
    "text": "all of the other representations are generated from that source file. We know that some of the reference representations cannot include everything that is in the source file. And we know that some of those representations sometimes are wrong. because they've unintentionally missed out or somehow messed up. something from the source file. So so That's probably the better way forward for us to think about it is source. Now I don't know what that means for canonical in terms of where people go to understand what is the definitive one that they need to to read, should there be a difference between the 2 of them. but it it does imply that the process if there's a difference is to regenerate from the source as necessary to ensure that there is no difference. know? That the the the second point was about Martin's point about consensus. Wheat actually have 2 formats now. We have an authoring format and we have a publication format. And if you look at Martin's example, we're extending the authoring format to not just be one version of the XML, but also to be marked down as well. And I don't think we are ever going to get past that issue of the boundary of consensus between the authoring format and the publication format. so long as we have 2 separate formats in that way. And I I personally think we should carry on with those 2 separate formats because there are a number of reasons for them. So there are already some established processes for dealing with that boundary, the all 48 process. is one there. There are some things that take place within a last call and ISG work and those sort of things. that and Nate that have mechanisms for addressing that. So we can continue to work with that boundary between those two formats."
  },
  {
    "startTime": "01:06:02",
    "text": "I don't think that we have to you know, I don't think that the worry about consensus should mean that we can't somehow achieve that. Yeah. Yeah. Go ahead, Paul. I'll do the same thing I did the last time since I'm following Jay. I like what Jay just said about if we get rid of canonical you know, and and think of the formats that's good. I put my hand in the queue. about the big thing that I really want us to consider later because we keep saying, oh, it's Theorata. It's not the IRADA. It's the updates. So some people in the room know that last year, ICANN did project where we took all of the RFCs, we we marked them up separately. You know? RFC is here, but you can see annotations on it for the Arada and for updates. what we have heard consistently from the people who are using them is, oh my god, I didn't know this had been updated. Even though it says updated maybe at the top, Putting an updates in line is extremely helpful. very, very few errata actually change the technical content of the document. Almost every updated RFC does. So that's going to for whatever problems you think there are for inlining the IRADA. are much bigger when you start talking about how is this document a dated later. particularly because at least in the DNS world, many of our updates are That old document said should, now it's must. Trying to express that in line is a real pain in the butt. but it's also So that's why I would really like to take that whole thought away for now because I believe that's gonna be a multiyear project."
  },
  {
    "startTime": "01:08:01",
    "text": "that's also going to include lots of mock ups. of how this proposal will look and such like that. And we've got plenty right here to come to consensus on for how are we going to at least let the RFCs change I'm sorry. How to let an RFC change when someone goes to the RC editor's website and such like that. So your suggestion I'm just trying to get my head around clarity here. you would prefer not to go down the path that Jay suggests going down and put aside Errado with updates with everything else. and focus in on the smaller what can be updated in the XML Yes. For now. because the what can be updated in the XML for now leads to the questions that Martin asked that bright, green, or yellow questions here of can you then Can you then Take that change and get it published in a place that people can see. Once we get a feeling for that, and how that happens, Then when we know that that we're going to hit the big peg later with other ones then we will have a better feeling for Did the world melt down? because I believe it won't. But there are people who feel you know, and have said on the list, Everyone expects them to stay the same. I don't think that's true. And if we can start changing them a bit and we don't hear any squawking, then I think we're better off. Alright. Thank you, Martin. So I'm I'm less concerned about the the use of the word canonical than than Others,"
  },
  {
    "startTime": "01:10:01",
    "text": "To me, it it It simply means this is the thing that you get when you type in RRC, ABCD. you know, 9000 or whatever it is. that's the thing that was that was used to to render the thing that you're seeing. ultimately, no one's looking at XML anyway. because, I I think that's still a useful concept to have. Elliott, k. So coming back to This -- And and if you can up your gain a bit if you can You're a little quiet. Okay. Oh, let me see here. I'll take off these guys. That actually helped leaning forward. second. I see what's going on here. you guys hear me? Yeah. That's actually better. Thank you. Okay. Coming back to this slide, actually, I think there should you you might wanna think about some granularity here. Right. is interesting how Phil talked about wanting to put you know, wanting wanting to preserve equations and RFCs And one could envision perhaps a future RSWG or somebody saying, hey. Let's just incorporate mathml into XML to RFC or some such. So it's probably worth scoping a little bit in terms of what changes our allowed in terms of semantics, Right? And and, you know, there's classic, you know, backward compatible versus you know, not and and, you know, what and that sort of thing. I think we find that we can be a little more liberal about what XML changes we would allow end I think that's okay. Right. The other thing I would wanna just separate out maybe also a little bit is the metadata and how how how we view that in terms of what changes can be allowed there,"
  },
  {
    "startTime": "01:12:01",
    "text": "something that I realized is kicking a little bit of a a separate hornet's nest, but it's at least worth having that discussion too. Thank you. Thanks, Elliot. Alexis. consider hornet's nest kicked. Yeah. I'm I really would wanna think long and hard about putting any limit on how we can change metadata. that that can lead to some really sticky pads. So I would not want to try to build that into this particular thing. just say that. Thank you. fill, I have a good chair. I would grab the mic for you and bring it over to where you're taking notes. But Yeah. So We were we were having discussion on formal methods in And, you know, I I I haven't realized that you'd expanded IETF the unicode. So all the RSC all the drafts I wrote. that I'd had to squash out all the math I could now bring it back again don't actually need integrals. I to do formal methods. but It seems to me that if we have an effort like that in the IETF. We should not be in a position where 90% of that group's time is spent working out what they can thread through the RFC format. And, yes, I've had a very long and painful experience with MattiML I tried to put math into HTML in 1990 3 I called up dumb nooth, and the last email he ever sent to somebody was to me explaining how to do Mathamal. And, you know, getting that into the browser was a real"
  },
  {
    "startTime": "01:14:00",
    "text": "you know, it's 20 years late. So If we're going to do it, Yeah. If they go into that form I don't think the RFC format should be a roadblock to that type of work. Although and I'll say for that kind of issue, which seems to me you know, more about adding functionality and a loud functionality I'd like to see those kind of proposals end up on the list either in the form of a document or just initials list proposal. because I think it's independent of sort of the the deeper, broader question that's being asked here, which is where are we going to allow changes to the XML generally -- and if we lay that out. where do we want those changes to appear only a new stuff or are we allowing them to backtrack into older XML versions? So appreciated. But, yeah, I think those can be dealt with as separate line items or or separate issues. Martin. Yeah. Speaking of separate line items and issues. Alexis, I think you were talking about the metadata that sits outside of the the documents. We don't wanna constrain how we we manage that. totally agree. there's some metadata in them as well. and when you when you entertain the this possibility, also entertain the possibility of changing things like updates and whatever. don't wanna go there. Yeah. Right? Yeah. Yeah. This is just, you know, we we found up some of the some of the syntax we found a better way of doing it. We wanna be able to fix it so it's all consistent across the series. that's this."
  },
  {
    "startTime": "01:16:03",
    "text": "Elliot's ideas on exploring those things, I think we we can do in this group. good. Good. Good. we have to get past the first little hump first. So Thank you, Martin. This kinda leads me I'm I'm I'm gonna get rid of this slide because it's gonna kill me. Sorry. And and I and I do apologize that your fonts didn't come through the tool because it would have made it that much worse for my eyes, but, you know, No. Thank you. you know, It's morning. But it does lead me to sort of the making progress question. So let's start with the practical of this. I would like to see this discussion come to a head relatively quickly because I think a lot of other things will fall out rather quickly if we can come to some sort of agreement here Unfortunately, the the discussion here seemed to diverge in converge repeatedly. So, Martin, do you think that your draft could be made into something that was not just prepared during another working group meeting within the next couple of weeks. It's this sort of things I'm hearing people complaining about. and, like, the really fine details of just how close we get to must not -- Right. -- in terms of the semantic thing. that's something that we'll have to have to negotiate, I think. Yeah. I've I've had a conversation with Joel Halpin, who's not here. I don't think And he's noodling on just how can raise this so we can make it very clear exactly what our intent is. in terms of the policy. But"
  },
  {
    "startTime": "01:18:04",
    "text": "Aside from that, I've gotten feedback from a number of people who are quite happy with the way that it looks. right now. So I aside from that those sort of finer points, I I think there's a lot more to do with it. Yep. Robert? So that number of finer points, I think, are probably innumerable. I mean, from the conversation here, you you could, like, maybe knock them up as issues on your Repone. We can just -- If you would turn the mic into you or you into the mic. I was suggesting that finishes draft by issues on His repo and -- Yeah. And and the reason I'd like just you to at least get some of the fine details done and use it as a discussion point in the group. And it is the I didn't even take a look. Is the draft named with RSWG somewhere such that the data tracker picked it up? Okay. Okay. I I I'd kinda like to get immediate discussion in the next few weeks on on Okay. Good. where we think we're going and see if we can come to some consensus around the direction because I do think it changes what will be acceptable changes in XML format. You know, what will what we or maybe we wanna separate it into 2 and say, these are changes for future going stuff. These are changes for backward looking stuff. I I don't know what the results gonna be, but it seems to me that getting consensus on this in the group and getting our heads around it is important. Paul, did you wanna make a comment and then Robert? So I hate to say this, but people always pay more attention once a working group document. So I propose that that Martin's document."
  },
  {
    "startTime": "01:20:01",
    "text": "becomes a working group document in its current form almost immediately. simply so that people don't say later, oh, I didn't know if we were really distracted. Just to make it a targeted not necessarily published. in any finite time. Thanks, Robert. can That's that was the other thing I was gonna we have an interim in early September to finish? to you know, I think by way of making progress, we've gotta converge on issues like this relatively quickly, and that doesn't seem to happen unless we are face to face because some of the things even that you know, John and Paul went over were things that are kind of outstanding and really haven't been just on the list for a long time And getting this nailed down seems really useful. So I would like to entertain the idea of an interim Alexis before I get down too far down that road. Yeah. Like, Missus Roussy. I just wanted to say that my way of thinking about this right now, and I wanted to, I guess, check it with the group. is that we won't move forward with Paul's draft. and we will move forward with Martin's draft. Yeah. That I I mean, that's what I'm hearing. Hector, you were in the queue. Did you mean to be in the queue? Okay, I will unclick you. So instead of clicking back into the queue -- Yeah. -- just as that we would start with Martin's, finish it, and then we would retake up mine, which would with any of the stuff that's about how things change, would point to the eventual RFC because there's still other stuff in 799 biz. 7990 biz. So and by the way, Pete, I don't feel like we need a face to face? No. No. No. No. Okay. Use that. No. That was not my intent. Online interim was"
  },
  {
    "startTime": "01:22:01",
    "text": "what I was thinking. So and I'm just gonna take a quick Yes. Yeah. Yeah. That was my intent. Sorry about that, Carson. Yes. You you got it right. Just online. So So a couple of things on making progress. One thing I've heard from a few folks talking them this week. is that There seems to be except for the RPC folks, nobody's day job You know? and therefore, this kinda gets lost in the list and that the chairs are gonna have to do a little more direct arm twisting and pushing things forward. We we have heard that and I take that on as a responsibility. I I I think it's just gonna be the case that we're gonna have to push and push and push. I I don't like being the the director of these things, but There you go. I think doing online interims is gonna be necessary The other thing that I heard from think it was Adrian Farrell. you know, we are against a bunch of technical groups schedule wise when we do these things in person. I don't know if it's even possible or how people feel about it. I know that, for instance, Was it one of the IAB programs 8:30 in the morning, meaning during IETF week so that it did not conflict with something else. I don't know if we can find nonconflict time during meeting weeks. Robert's giving me a grumpy thumbs down. But, you know, part of it part of the question is, do we have enough of"
  },
  {
    "startTime": "01:24:01",
    "text": "you know, the people we want in the room when we're doing these things in person not clear that we do but maybe that's just we're stuck with that, and we can just hope for the best that we're not gonna be on top of area working groups or something like that. Paul? So we have very few people in the room. we have lots and lots happening on the list. This is one of those working groups where, in fact, the face face meetings don't have to be as important as the list. Fair enough. I I think, you know, my concern is for issues like Eur and Martin's documents that These are tricky, gnarly things to discuss in email. just because it will take a lot of email messages. So I would like to at least get some interims going. Elliott, you had a comment? Yeah. This is Just from from the perspective of having had those interns, we're developing The the -- A little louder Sorry. this is just for the perspective of having shared the group when we were developing the model. If you're planning one interim, my suggestion is that you plan 2 so that you can handle time zone pain and such. Yeah. No. Appreciate it. I I will think in those terms. Phil? contributing to your steps today. Yeah. Just just to squash the idea that you had about meeting off schedule, whatever. It occurs to me that some of the people who are most vocal on the list are people who are not coming to ITFs at all anymore. fail. Yeah. Well, there's that too. Alright. It was a thought. I'm I'm I'm I'm hearing the pushback. So,"
  },
  {
    "startTime": "01:26:00",
    "text": "But by way of saying, I've heard these things that I can do to try and force progress forward, are there other things that people think are necessary to get us moving more quickly you know, I I've got chair tasks to take on for sure Are there other suggestions that people have? Alexis, So there was a convert, Alexis Rossi. was a conversation in RASAD. the other day that I think is useful to report on here as I think it pertains to this conversation. where, essentially, I'm I'm gonna try to paraphrase. Hopefully, I don't get it wrong. Essentially, I think the message was. When coming up with new ideas, bringing things forward. potentially bringing them to RSAB first to see if there is either existing policy or if RSAB would like say we think this is policy or isn't, like, it's an implementation detail or something like that. before bringing it to this group, which I I think has the potential to speed things up. as things would only be brought to this group after that determination was made. But I also don't don't don't feel comfortable that I understand the parameters of RSWG versus RSAB. in that context. And to elaborate on that and then Elliott you can jump in. But I had that piece of the conversation in Arcev, I I started that discussion because I felt like things questions were coming out of the RPC that sort of mix together the implementation questions and the policy questions. And I thought, it seems like a better path for RPC to always go to our sub and say, is this"
  },
  {
    "startTime": "01:28:02",
    "text": "something that's in policy, or is this something that, you know, is just an implementation that you guys decide on and then have RPC sort of be the conduit for most of those questions if they need to be thrown over to the working group with the caveat that if it's policy questions that have broader import, don't wanna discourage the RPC or anyone in in the RPC from coming over to us. directly and saying, hey. This is obviously a policy question. Let's talk about this. but that going to the RSAB first is probably an easy way to clean up any you know, clarifying questions of that sort. So Elliot, you wanted to make a comment on this? I think added about right there, Pete. I mean, at at the end of the day, right, the I think the goal is to facilitate the RPCs work. at least from the my perspective. Right? I'm I'm one person who sits on the RSAAP And those me those of you who've seen me in the RCEV know that actually like when the RCAP does no work. This is actually self interest. But the The the key points I wanna make here, right, is the our when we did 9280, we vested a tremendous amount of authority in the RPC to do its job or so we thought, Great. The RPC may feel differently at times, When they have questions, 9280 tells them to come to the RSAV and ask about the about what authority they have or questions they have, what they can do, what they can't do. and So they they are always free to do that. and they did it with the the it's something called this a simple example, but I really loved it. How we handled Unicode. You know, we we they they hadn't they they asked us to interpret for for for them, the RFCs, the in terms of the rules for including unit code. And we we"
  },
  {
    "startTime": "01:30:02",
    "text": "all sort of delved into the text and trying figure to tried to discern we thought was correct. So in in the the the point of To to to Alex's point, if we if we If if the RPC doesn't have a question, they don't have to come to us. They just do. If they want to go to the RSWG, the RSWG's output as was discussed yesterday earlier in the week, is RFCs. through through the RSAF. Right? You you do a draft, and then it comes back to us. the OSAP has 2 functions. It's to review those review those work. an an an approval or not the art the the documents that graphs. And to occasionally provide opinions to the RPC. So odd That's how I view the role at least. And I guess I'll stop there if there's any concerns. Right? about the RPC going too far, then the RSWG can have that discussion too. They can bring it to the RSAB so that we know if if we know people feel feel like we may have said the wrong thing if if we did. So those are those are some thoughts that I have again, it's just me. I don't see other people from the r set except for Jay. I don't know if Jay has a you on this? And and Jay shakes his head in him. And I I will say that 9280 does have some lines which are the equivalent of Spencer Hawkins do the right thing. that, you know, you know, the RSAB should be talking to the RSWG, the RSWG, should be talking to the rstab and and people should be noting what the other ones are doing and and getting things done that these lines are not walls. So, Robert, I'm gonna return to the getting things done -- Yes. -- topic"
  },
  {
    "startTime": "01:32:04",
    "text": "I think it would be useful since we are actually developing a bit of a tactical plan to keep a road map, somewhere and actually hate these things, but set set set like deadlines, milestones. Yep. So but have it out so that we can argue about whether or not our road map is putting the focus in the right place. Yep. I it you didn't see my heart saying but I think it's the right thing to do. I I hate those things. But, yeah, appreciated. I didn't expect to be ahead of schedule. Yeah. Jake, go or Robert, did you wanna be back in the queue? b. Yeah. Yeah. Yeah. Okay. Sorry. I lost connectivity on all So I haven't I'm the queue. devices. No. No worries. One of the things that was discussed very early on when they are WG was set up was creating a repo for discussing specific language changes. The chairs felt that that wasn't it necessary. And I think we'd probably pass the threshold where it was necessarily, like, you know, some time ago. So if the chairs would agree to do that, it'd be fantastic because I think there are of different language changes that we need to start recording and discussing. Okay. No. I I think that's okay. we can start Yeah. I I I and I I was kind of hoping that the repo would be more organic than it turns sharing of setting up some space to put in specific language changes is issues and things like that. Yeah. Good shape. I I don't mean to be picky, but the chairs did actually stop the members of the world -- Yes. -- group for -- Yeah. Yeah. Yeah. Yeah. -- and all of that. chest could re enable So, yeah, the Yep. Not a problem. I I agree."
  },
  {
    "startTime": "01:34:00",
    "text": "Robert. The existing working group repo is awkwardly named. I would suggest moving it to something that's who's named RSWG. and so it's easier to find. the links from the data tracker help, but people just go type You get that box. Right? searching -- Fair enough. Can I throw in my -- Absolutely. We we are now in the moving things forward and in the other business space. So So at the very beginning of the meeting, there is a question about whether or the tooling allowed Unicode anywhere. Yes. It does not yet. have a PR We that will let it. every time I get to ready to merge that PR and release it, I run up against the slightnet that the rcab instructions included that that focused on the use in I few elements like tea. Right? And it did not give us, you know, the their interpretation wasn't about everywhere. It's pretty clear that this group has everywhere. there gonna be any backlash against the tools team if I just go ahead and merge and release that now, And should this group push something forward, and do we have a tool to do it through anything less weighty than an RFC because this is just a you know, interpretation of, you know, recognition of a misinterpretation of expectation of a of a previous RFC to say that, yeah, it's just fine. Go on to your Oh, okay. So without my chair hat on, I have a follow-up question for you about this. I'm Is there a belief that allowing something in the tool is an implementation of policy"
  },
  {
    "startTime": "01:36:00",
    "text": "as against, for instance, if the RPC gets a document which has unit codes in places where They don't think they belong. They push back, but the tool still allows it. I I I that you you understand my question. Let me restate Yeah. The policy and and you're correct. the policy is what actually gets out into the RSCs, and CRSC editors choice to enforce the policy on, you know, while that piece of unit code is just really not a great thing to do. It's not the tool's job to be restrictive. The tooling should help authors not have late surprises. And we've I think we've got general everything I've heard said that the restriction that the tool currently has is actually hurting more than helping. So -- Right. -- I'd just like to free the tool, let the tool move forward, but I do think that there is still a or I would ask if there is a artifact that needs to be laid down in some way to reinforce that this is a Humans at the RPC's determination to make. Right. And I think this leads to a more general issue that I need to bring to the rstab, which is in general, if we hear if I sense that consensus is going in a particular direction on a policy. it it seems to me that if they haven't heard it yet, I should be talking to the RSAB about what direction that is if it's going to have significant impact on tooling, on implementation, on the way editing is going."
  },
  {
    "startTime": "01:38:01",
    "text": "so that preparations can be appropriately made. And I expect the RCEB to be sitting here and understanding that too, In this particular case, though, my gut would be the right thing is the tool gets more permissive, and any enforcement of the policy happens between the editors and and the authors. That that would be my gut. I'm certainly to hear people here and hear say, woah. Woah. Woah. Not not so fast. Yes. Yeah. So, you know, my intent is then in within a few days, we'll ship a version of XMLRC that will let Unicode happen pretty much anywhere. And and we have atat least to our sub people in the room having heard that. So Karsten, Carsten, First of all, thank you, Robert, for for saying that. you're up to that. Yeah. I just want to remind people that there is currently no policy in place that even allows the tool to do that? On the other hand, it it certainly was useful thing to have during the first, you know, almost 5 years of of using RFC XM every 3. shielding the RPC from interpreting what exactly And the reason is that that we do use RFC XML and rxmirrorc as an authoring tool as well. And if the the authors cannot write things that that are controversial, then they they we have no way to actually invoke these these conflict resolution processes. So, yeah, I'm I'm happy to to for the 2 to no longer summarily block this. But, of course, there there is an understanding here. that people don't"
  },
  {
    "startTime": "01:40:04",
    "text": "right RFCs to try the patients of of the RPC here. And the the the one one biggest problem we technical problem, excuse we have right now is that that the mechanism that selects fonts for the PDF rendering of of weird characters requires human intervention each time a new class of of character is is being started to to you. So then Guillermo had this snowman with snow and snowman without snow. And For some reason -- And Robert Robert is nodding his head at you, understandably. Okay. I'm I'm done. Thank you, Paul. I wanna say 2 things to what Robert said without disagreeing that The tool should be completely permissive. One is there is not agreement in this working group that unit code can be anywhere in the discussions on the mailing list of my which still is not a working group draft. draft, there were people who said, oh, no. You don't want it there. So there still will be consensus, and therefore, the tool might be too permissive at some point. That's just fine. The tool also allows British spelling which might get changed. And that's not, you know, like, the style guide says you shall not use British spelling or whatever, and and it gets through well, similar. I I was just picking one office. Okay. Bad spelling. Like, actually incorrect spelling, whether it's British or English, you know, there is spelled t h e i r or i you know, whatever. The tool allows that. And that's just fine. We know that the RPC will use judgment. on spelling and such like that. That's really important because, quite frankly,"
  },
  {
    "startTime": "01:42:00",
    "text": "I believe from having seen the previous discussion, are not going to allow Unicode to code anywhere even though I personally would like to to see it in. heavy so I don't want anyone making that assumption. But the tool is not there to warn you about certain things. at worst once you take it if it's a working group document, once you take it to your AD, your AD should be looking at that and possibly the stream should be looking at that. And this has come up specifically with mathematical symbols. Yeah. And and as Robert said, the tools are there to be helpful when they can be, and we like that. And as Carsten said, We don't want authors to be Willy Nilly about doing annoying things to the BC. So Jay. Yeah. I'm not sure how this got quite so complicated. So The r sub has decided, that the interpretation of the policy that has been asked by the RPC is correct. Right? So all the the number of people asked. That's fine. the the the tool will allow unicode anywhere. That's fine, but it is. that the style guide and RFC 7997 put limits on how it can be used in RFCs. And so what you know, as Paul said yes. The the the the the the the tool allows bad spelling, but, you know, thankfully, the RPC don't. So that that doesn't that that's the policy. There is no, you know, that term that's why I wasn't sure where Carson was saying that there's no policy that allows this. There is a policy. The policy is our new RFC editor model that says that this is what the RSAB can do, and they are has done it, and it's followed, and it's all Okay. So simple to write. Right. But I I think Robert's question, it was more to does the tool have to invoke have to enforce that policy, and I think the answer he's hearing is no. Yeah. Yeah. Sorry. It was more cost is coming -- Got it. Yes. Yes. Yes. Yes. Thank you, Jay. Phil."
  },
  {
    "startTime": "01:44:04",
    "text": "I'm just gonna say that if people like the form methods group, do come up with peculiar ideas. One of the things that could be an output from that working group would be hey. This is what we need you to do, and this is how we can do it. And Here's a formal specification for Right. You know? And I think Paul's point about this may also be stream by stream. You're gonna have to ask question. what do you need? What what kinds of output is gonna be reasonable. So yeah. Thank you. Carsten. Yeah. I would like to point out that whoever wrote 7987. Didn't think about other streams than the IGF stream. So everything in in 797 that restricts the the use of characters is based on an interoperability. the concept Now in in the IRTF, we don't care about interoperability. We care about getting people to publish things. And I have heard more than once in the IOTF that that people cannot really publish in in the the RFC series, because it's too much pain to get the the documents done with the current situation. And the current situation not only include clinical, there's also an SVG, problem which we will address in time. But I think we we have to go to know that that different screens have different requirements. Appreciate that. Thank you. Elliot, k. Yeah. But just very briefly, Yeah. I'm I'm I'm part of the r 7. I'm here. I I agree with Jay's interpretation of what we said. I don't see any problem with Robert removing or the tooling team removing restrictions in terms of"
  },
  {
    "startTime": "01:46:01",
    "text": "what what XML r XML to RFC generates. It does not remove the strictures in the various RFCs that require that that prohibit a unicode in certain cases, So I'll just leave it at that. We don't have anything else before us, and I don't wanna get ahead of you know, anything else that was said that regard Thanks. Alright. We still have 14 minutes left, and I'm happy to give them to you lunch if you want them. going once. going twice. Hope to see you on an interim online meeting soon. I'll post things to the list. Thank you. Carson, did you wanna jump in? No. I just want to say thank you for running this meeting. That's what's Oh, my pleasure. Cheers. Now let's just add the same thing, Pete. Good job. Good job. It's Thank you so much I think it should all be our sav. I'm guessing. see. Yeah. That's that acronym and -- Yeah. People mess that one with the high bloods. There wasn't ours at end. But I've heard, you know, r s e and r b a s in annual, and people just 5. this work."
  }
]
