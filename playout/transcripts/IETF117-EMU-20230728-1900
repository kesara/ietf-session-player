[
  {
    "startTime": "00:00:22",
    "text": "For a Friday afternoon. Yeah. Yes. Well, so Welcome everybody to a thrilling finish to IETF 170. Thank you for sticking around for this Friday afternoon, emu session. I'm Peter Yee. And sitting next to me is Joe Salloway. So we will get underway Please note, this session is being recorded. That shouldn't come as a surprise. Alright. This is traditional note well, So it's a reminder of many of our policies and code of conduct, things like patents, There are links. If you get the official slides as opposed to the video version, you should be able to click through and read through those. and we have a note really well. So I will read that for you. IETF Meetings, virtual meetings, and mailing lists, are intended for professional collaboration and networking is defined in RFC 7154. and our anti harassment policy and procedures in 77 76. If you have any concerns, please raise them with the Ombudsman's team. I won't read through the rest of it, but Be nice. Alright. So if you are in the room, please either use I think there's a virtual blue sheet front. You can scan over here on the screened to the right, and sign in using the on-site tool."
  },
  {
    "startTime": "00:02:03",
    "text": "that will help us to keep track of everybody who's participating. -- and our agenda. So first things. First, we need someone in to take notes This doesn't need to be extensive. I don't think this is gonna be a long session, but we do need somebody to keep track of what happens. and he volunteers. Thank you, Charles. Alright. And the links here if you're actually looking at the online versions, take you to the the chat, the Meet Echo Video and the on-site tool, you should of course, be already aware of those. So we have about, I'll say, 35 minutes of materials As you can see, will be having 3 presentations, deep version 1, bootstrap TLS, and an update on EAPaka Prime forward secrecy. Are there any changes to the agenda at this time? Alright. Then, Alan, I believe you are up. Alright. 7170 is almost done. Go to the next slide. Minor changes since the last meetings, more diagrams from Elliott now that TLS So now that the TELUS 1, the 3 for t 8, 8, 8, 8, 8, Pete and TTLs are done. We can reference 9427. there's another error added inner method not supported so that You can have some signaling"
  },
  {
    "startTime": "00:04:04",
    "text": "When the server says, please do x. You now have a bit better error message for saying, no. I can't do that. because what Windows does Windows instead sends an empty EAP identity. then the whole eapstat goes, what the hell is this stuff and complains? Based on other discussions The other Eat methods allow selection of Eat types based on the identity, which you get before you select the e type turns out you don't you don't do that with Tete. So we added the identity hint that the Sublicant sends to the server, goes, hey. I think I might be Bob. And at which point, you can go password or eep or whatever. Again, nothing implements that, but it's not that difficult to do. And based on discussions on the list, PKCS is not implemented. I might as well leave it in. I don't think that will cause any issues. the next slide. It is possible to use teeth with inner methods that do not provide the MSK, and the discussion was eventually add at least one inner method, which does provide the MSK. Otherwise, you don't have any crypto binding. Dan, Dan Harkin. So regarding the previous slide, please do keep the PKCS stuff in their as the next presentation will show It is gonna be used. Yeah. The conclusion was we understood what it was all about. It's just no one cared to write the code, and it looked like it should work. So there's there's no benefit to taking it out Yeah. Okay. Okay. So, yes, this this was sort of a late edition of it was possible in TEEP. to do"
  },
  {
    "startTime": "00:06:00",
    "text": "enter passwords, And now you have all of them in the middle attacks, and that's probably bad. And all we can do is really make people aware of this and move on with their lives. Next slide. based on some discussions with Elliot, there was text in there saying, Don't devolve back to eat TLS, if you're just going to use client certificates, use ETLS. And Elliott's point was that well if you're doing provisioning, inside the tunnel with client certificates, you might as well allow as client tificates to be used in TIP. because that doesn't really make any sense. Otherwise, and then looking at that in detail for what that meant. I went and updated a text to say, oh, by the way, yes. if you do a client certificate outside the tunnel, you still have to proceed to phase 2. for the inner cryptobinding result, etcetera, which also serves as the protective Success Indication which we spent a long time arguing about for ETLS. and resumption. Looks I think that's it. implementation issues, I've had some preliminary customers try to do this. It's fun. The biggest thing is if both ends are configured the same everything works, and it's all great. Given that you have no standard way to configure the supplicant you really have no way to know that both ends are configured the same. And when the server wants to do user plus machine, and the machine doesn't have machine credentials you get things like EAP identities with no links and no error message. so you have to sort of squint of the pack And packet and go oh, that's the situation where the applicant doesn't do the right"
  },
  {
    "startTime": "00:08:00",
    "text": "thing, which then means that it doesn't have the machine credentials. but but but but there's no air for that. it would be better to recommend some kind of automated configuration, people have worked on for decades and very, very little progress on for supplements. So I suspect it will have teething problems and deployment. People will try using it if it works, it's great. And if it doesn't, there's endless fights over getting it configured. which one think that's it. Yes. I don't think there's anything else to do. Alex pointed out that some of the diagrams were a little mangled in the latest revision, and that's just fixing the markdown. Any last minute comments, bonds, No bombs. just One thing is that I did go through, and put resolutions for all the IRADA in the in some of the and wanna one issue thread in GitHub. and It'll probably be good if somebody else took a look at them. I mean, it looks pretty good. I my main thing was just to go through the document and make sure that the Orrado was addressed. and kind of take what was in the document. For the most part, you know, sometimes it was closer than others. to to match what was there. And so I think what we'll wanna do is since we have a a you know, I don't know, 10 or so outstanding errata. We should try to resolve those. So if if if get a little bit of con formation on those, then we can ship them off to the ADs. Yeah. I'll take a look at that one when I get back. Other than that, I think it's mostly done. again, I I suspect once people start deploying it, there will be"
  },
  {
    "startTime": "00:10:02",
    "text": "other work to do to put it politely Hi, Keith. Hello? Can you hear me? Yeah. Okay. Good. Just sort of last minute thought, About the default e t lst case. If There is a publication with devolve eptails kind of following the case soon. should until the session results will be allowed, and what does it mean, and does it Call City. kind of problem issue or unknown unspecified behavior. for for what with with session resumption. Yeah. So -- We had Yeah. I'll I'll I'll I'll talk a bit more about that. This is one of the as we had with EPTLS itself for 1.3, which was if you have 4 TLS based EAP types. there's nothing really stopping you from doing TLS and then trying to resume with TTLS. everything will probably work. the same thing for for TEEP. So the devolving to eat TLS was originally based on Bernard comment of if you're just going to use client certificates, don't use tape. use Eat TLS, which makes sense, until you realize that The PCCS. staff is. issuing the client certificate over TEAP probably means you wanna use tape which for authenticating with the client certificate. And then session resumption is just session resumption. And it it it shouldn't matter. And then, yes, the the session resumption for Tete, maybe this is what you're that session resumption for TIP has to use the protected success indicator"
  },
  {
    "startTime": "00:12:01",
    "text": "from 9427 because all the TLS based Eat types are defined to use that now. So does that address your point? or was that something else? Yeah. I was just thinking at if there is star No. in a modification it just asked to what's required they're under slides. cryptopining and -- Yes. If if there's no inner authentic it still has to do phase 2 with cryptobinding, etcetera, etcetera. Yeah. And then it does serve as the protected success indication. Yeah. Until I just local, for example, and then do session resumption. with this kind of previous indication that was based on this developed ETLS case. So, I mean, Can I do that? Should I be allowed to do that? or is this some kind of special case for on the case No. It should be able to do. You should be session and assumptions. So you you authenticate the client certificate. able to do when you do the full authentication, do crypto binding, etcetera, when you do session and resumption. from You don't. and you just send that one byte of 0 as per the 9.20 6. Yeah. Yeah. I can see that the The protocol allows it, but I was just thinking that this some kind of special case that shouldn't be allowed. but I guess not. So this is okay. It's been a while since I looked at that. I believe it does say do what do what 9427 says. But -- Okay. if it doesn't, I can update it and say, when you're doing resumption, you only go to phase 2 -- Mhmm. -- full authentication if And if you're not doing the full authentication, -- and you move on to your life. then you're using 1 bite protected success indication -- Yep. Yep. Okay. Thanks. One more."
  },
  {
    "startTime": "00:14:01",
    "text": "Just me, Alex. Hi, Alex speaking. Checking on to what Nike said, I'm trying to remember, did we deny cross resumption. imagine you're doing TTLS or p and then you suddenly come in saying, tip. but using the same TLS session. I I believe 9427 for bids. Oh, okay. Yeah. That that was a point that was discussed. It was, like, Again, it probably works. don't know what it means. It's better to say don't do that than to allow. Okay. One more. Heck it. this. Yeah. I think that of It's like you said that that was set here at its not allowed to use 1 ETH method and to resumption with another one. because I'd say that there might be some kind of false policies that are that depends on the ETH method. So if you crossover, then you are breaking the policy, for example, depending on the site configuration. Yeah. I mean, on on one hand, on a technical side, the only difference between resumption for TTLS or ETLS or peep is one bite in the epatter, really. And so it shouldn't make any difference. But if we don't know exactly what it means, why people would do it. It's better to forbid it. I believe yeah. I I I think either 9427 or 9190 for bids at k. Done. Ship it. Okay. Yes. So I think there were a couple things maybe to check on. may not require a document update, but let us know and we'll start Yeah. Fine. Last call, will double check. I'll issue a new document next week fixing some of the formatting things. Okay. double checking this. And then Yeah. Yeah. Yeah."
  },
  {
    "startTime": "00:16:04",
    "text": "next week, we should be ready for yet another last call. This time, hopefully, the last last last Yeah. I think I think it's getting pretty stable. So I think should be good. get get Thank you. Okay. Thank you. I'm Dan Hawkins, and This is bootstrap TLS. Also, known as TLS poke, p o k. Next slide, please. So this solves the onboarding catch 22 where you need to credential the network, but you but you need to go on the network to get a credential. that specifically solves this for wired devices that have limited or no user interface. And it does it by leveraging what the what the device provisioning profile developed for bootstrapping public keys. and use these DPP bootstrapping methods and the the elliptic curve public key pair of the the DPP defined. It does mutual authentication between the client and the server who knows the client's bootstrap key. And we do this without post cost. changing TLS or finding any new key exchanges or or funky crypto, we just use for existing RFCs and a new and wonderful way. Next slide, please. a few changes for to make o to o 3. This was basically comments from Hannes of he he noted that we had an unnecessary HKDF derivation to derive the EPSK. So we we got rid of that. We had a bad reference, and we cleaned up some language that Haunas found a little bit confusing. So that's basically That's it. Next slide, please. So the new EPS k derivation is, you know, was noted that"
  },
  {
    "startTime": "00:18:01",
    "text": "9258 already does an KDF with the base key. So we don't need to do that. Again, we can just have the base key be the encoded subject public info of the bootstrap key, and what 9258 produced the EPS k out of that, and then we just create the import that identity struck the way it it defines and week got rid of that. extraneous HKDF calculation. Next slide, please. So this is basically how it looks. using all of these RFCs to plug in this new stuff in the TLOS Exchange. The the bold faced stuff is new for Tealas Polk and the the nonbulk is just the existing TLS exchange So we're basically doing client search with external PSK, and the the client search is a a raw public key and we're we're driving a a PSK with that raw public key as well. to authenticate the the exchange, and then the exchange is also signed by both the client and the server And It all finishes up, and everyone's happy. So next slide, please. And this is how it works with Teams. So the The client is gonna say his identity is TLS poke at deeppp.arpa to indicate that he's wants to do feel his poke authentication. then they will do deals, poke authentication, which we just just just on the previous slide. And then do the PKCS, then this is this is why we need the PKCS stuff to stay in. 7170 Best. because this will allow the client then obtain a certificate and stop doing TLS POCA for subsequent connections. So he does this one time. He gets a certificate and then subsequent connections to the network. use the certificate that he got. PKS exchange. So next slide, please. with the So this is a pretty stable you know, we we did"
  },
  {
    "startTime": "00:20:01",
    "text": "clean up some some language that Haunas had suggested, and we did get rid of extraneous derivation, but the the whole protocol is pretty stable. It's been looked at by the TLS mandarins, and they they didn't have any problem with it. So I'm hoping we can proceed to a working group last call. Alan, I can go back to the previous slide. my one minor knit given that there's a bunch of stuff now starting off with Eat New with Eep.arpa. do we want to say there's an EAP dot ARPA domain? And then various subthings inside of that just to say, hey, This isn't deep. EDPP thing, it's maybe dpp.e.arca. It's a knit, but if we're doing I mean, eat noob does it, I think there were other proposals to do it. It might be good to have an explicit hierarchy rather than a flat glass. I would probably keep Ayanna from bugging everybody like they're bugging us when you you you you put this stuff in the draft to go, oh, you know, Yeah. do you wanna use this? That's actually not a bad idea, but I don't think that that's something not sure who would who would be the the person to create this. You'd still need to register rate. Right? You just define e.arca. Oh, yeah. But I I'm saying I don't think that This draft is the thing that should be defining that defining that registered Why not? Why not? the dot ARPA there. zoned by the IAB You'd have to ask them. Okay. we're just doing the same thing that Eapnoob did. So yeah. So So I I'm I'm I'm hope I'm hoping that there's a there's a trail that we're just gonna we're gonna follow that trail. Just stay blazed. the original suggestion to use dot ARPA"
  },
  {
    "startTime": "00:22:01",
    "text": "for Eat New did come from me because it really was about the only thing that made sense. You couldn't use another domain ARPU was used for other things, and it sort of smelly and stinky, but it okay. My point is if you had just defined 1 e.rpa, then whatever's within the context of eep, perhaps the IED cares. lasts about, Yes. I I will -- I will delegate that to other people. Yeah. -- I will it's just for me -- -- not to me. If we have a for me, if we have a bunch of stuff under eat, it makes a bit more sense to have a hierarchy than polluting dot ARPA with a 1,000,000 different things. Okay. So -- I mean, I think So are you did Did you get pushed back already on this? or for for ETPP? No. Oh, okay. I Anna, just we got a a note from them saying, can you please tell us how you intend on using this and what do you know, they're they're wondering if it's -- Right. Right. Right. -- be in the DNS or something like that. I mean, they haven't really no idea what This this innocuous little uses, But Well, I mean, we could ask the IAB if it would be better to to you since they own that. Is that is that something that the the chairs of the working group could do, The chairs could do that. Yep. Okay. Excellent. Excellent. So we'll we'll do that. Perfect. And then I think we're we we can go last call too. So -- Excellent. Okay. 1 I mean, for Hopper Shrada, get some resolution to that. before her last call. And that'll give us a chance to get tip out the way to to Okay. Yeah. Yeah."
  },
  {
    "startTime": "00:24:03",
    "text": "one more comment from Ellen. So so this is Alan again. I guess the question is, if we don't use on our What do we use? Right? And the answer And and I I don't know that there's any other top level domain that we could use that's defined short. About well known. Example. Yeah. Yeah. That's just no good answer to any of this. Yeah. No. I I I think yeah. So we we we'll work with the working group to come up with what the question should be, but I mean, I guess, for me, using dot arpa is fine. Just do we wanna structure then namespaces, water. I think. But we ought to ask the general question of, like, this is what has been done in the past, and you know, Yeah. Yeah. Okay. Alright. Thank you. Yep. Thanks, Dan. Think you're up, Yari. Alright. So I will take you through the changes in the forward secrecy draft for AP, like, any prime, And sort of the high level statuses that's been revised after many very good comments and discussions from Ontellus IETF Last Call Working Group AD. And we did the revision. The document is now in the second IT of last call, which ends Tuesday next week. believe. I believe. I believe. And the change is if you look at the document as such, you will see fairly last number of changes. Most of that is editorial, however. So 1 of the authors did fairly extensive"
  },
  {
    "startTime": "00:26:03",
    "text": "editorial past, trying to improve the documents, say things only once, in the document for instance. Maybe better, I think. We also updated some of the references. corrected some of the terminology aligned terminals to better across the document and included some additional links on some things. Yeah. And in addition to that, we TeterView Extra Thanks. We explained the difference referring to the aka, and sort of added the explanation for that. We talked about how the ephemeral key exchange provides improvements in terms of Defences against pervasive monitoring. And that's, for instance, the fact that You are forcing some attackers to be active and man in the middle. And that, of course, raises the cost of large scale attacks and risks of detection, so that's that's good from this picture. perspective We talked about the document now about whether the forward secrecy property applies to the exchange itself. So we have some some mechanisms to to to protect or encrypt things while the AKA procedure is going on, and we'll have a slide about that in a second. Let's see. Do we have any other things? Yeah. We also added a section that's not listed here, but but there's a new small section that explains the sort of the implementation and system level implications of forward seek is that you actually have to be able to remove key material that if"
  },
  {
    "startTime": "00:28:00",
    "text": "know, if the particles are fine, but but your system keeps the key material in some some place where attackers can get to it, then that's not gonna be very useful that, of course, applies to them. particular parties that are running this protocol, but it might also apply to parties that the transport key material that might might happen in in EAP. So it's clarification, but what what some of these properties in order to actually get them, what what that implies. Maybe next slide. So the one bigger issue that was raised was about We have this keys key anchor and key authentication and whether they the get the same protection as we're trying to get for the the rest for the traffic protection keys and so forth, very MSK and so on. And for this k oath, that's just used to authenticate to to exchange the keys. So that's that's no issue. but k anchor is a potential issue. So just to explain what that's used for, so that's key that is used internally by EAPak, primarily to transport attributes that are containing encrypted data. So 80 anchor can transport sub attributes that are protected with with this key. and at the point in the protocol where these keys are formed, the the k anchor. We don't yet have the full diffealmannke. So So we're going with something that is not forward secret key. And and then the question is, does this matter? And it might matter in one specific case. So the main case that that the 80 inquiries used for is you can carry sort of fast ream to the case on October domain information. And so you you're carrying basically, like, the next"
  },
  {
    "startTime": "00:30:03",
    "text": "next authentication identity in some sense. in the packet and If you can get to this, then that breaks linkability. It doesn't give you access to any other keys, obviously, but but you would be able to link 2 authentications together. If compromise of the long term keys had occurred, and then there was an attacker and and so on. So we've documented this now. This is the property that this protocol provides. that it it provides this forward secrecy capable keys, as an output But internally, for this one thing that can use encryption, we don't provide that. So that's what the current document does. Dash 11 does this. The authors thought that this is maybe the reasonable path of action but we could be convinced by the working group to do something else as well. So wanted to get your opinion on this. So one option is that we could recommend that you actually care about this thing, then don't do don't use these synonyms. Just beautiful re authentication every time. Or one cute, relatively easily, I think, design And optional exchange where you sort of have some kind of I I owe you a pseudo name type of message goes between the parties. And and then you do another round trip where where you actually have At that point, you have the keys available, and and then then you could encrypt using something that's a forward secret. And so They may there might be some other options as well, but wanted to check what people in the room feel that What what do you think we should do? The cotton thing or something more drastic."
  },
  {
    "startTime": "00:32:06",
    "text": "Yes. Russ Housley. Hi, Ari. I just wanna make sure I understand what you said. and what it sounds like is if you were to use this key it it at that moment, as opposed to do the IOU with pseudonym. that it's kinda like TLS. resumption, that you're just not getting all the protections on those first packets. if you wait, you'll get to protection later. It still might understanding properly? I think the answer is no. That's not not what's happening because if you actually are Like, you're you're early in the exchange. Right? So you don't have the full key yet. Right. have the less capable key. And if you use that to transport some information, and And then, you know, if there was an actual compromise of the long term keys and so on, then then then you would could get to in the situation where the attacker gets this transported information. And that's what I meant with this that can break linkability. So you can't fix it afterwards. that that's what I'm trying to say. You if you want to protect against this, then you have to wait. one round trip, basically. in the same way, what what I'm saying is in TLS when you're doing resumption early data is replayable. But if you sent it after the handshake completed, it would not be replayable. In that sense, it's sim similar. Yes. Is it similar to that? Okay. But the the only sort of question here is that, you know, do we have the mechanics to send either now or a little bit later. So that that's the only only detail. fancy. for us, did you have an opinion or we should do that given even this discussion? So"
  },
  {
    "startTime": "00:34:06",
    "text": "I would do exactly what TLS did and document with the ramifications are if you use it. and leave the protocol alone. So the question was if this was what we did. I think that's what we did with one caveat that If So in TLS and I I'm not the TLS expert. So So the the mechanisms exist. So the ways to send stuff later exist. And I I think for for this case, we would have to describe those mechanisms, which you could do in another document, for instance. But but it might not exist today. That's that's my understanding. It doesn't Yeah. That that was my question was we don't have that mechanism defined in in AKA yet. And so is that okay? Do we need to define it in this document? or as you already said, we can we could defer it and say, well, it it doesn't exist yet. That's future work. and If there's desire to do that from 3gpp or or somewhere, then we could do that. So the solution is it stains has a gap. right, potentially. but The question is, is that a practical problem or not? I don't know that we know yet. It's just to follow-up a little bit on that. So I I It it is my understanding that this could be done as as an extension late there, and it seems feasible. I haven't done the work, but but it seems immediately feasible. that that's clearly an option. The authors did choose to do this this person"
  },
  {
    "startTime": "00:36:01",
    "text": "without building support for that. I'm just documenting the you My gut feeling is that this because this doesn't result in the traffic protection keys or MSK or any any of the other stuff for from leaking that that that's not that's not serious enough for to cause us to have to do an update. But we we could do, like, the authors would be very happy to do that if the working group. reasons. And I wanna remind people also there was another option between these two extremes that do the full thing. Just document, you could also say that if if you care about this, then don't do the pseudonyms. not in the line. I'm sorry. Just introduce yourself. I'm Deb Cooley. So I've not read the draft. I've only listened to the presentation. So you're just losing forward security with for a little bit of time. That sounds like I mean, that's the TLS situation. Right? we're losing forward security for a very specific function in the protocol, which is just passing the pseudonyms. We're not losing it a little bit of time for anything else. Oh, I see. For just us -- -- thing only. and kind of like We lose it for forever, basically, or, I mean, do something else, then we're losing it -- Yeah. -- if we don't When I say you lose it for specifics at a time, whatever is covered by that is lost forever. Right? But the you become perfect forward secure later for everything that's passed after. So whatever's in this space is lost. always. Right? you don't get it back. Right? So that's what that's what he means by. You lose forward security here, but then later it's okay. So you're just you're losing perfect forward security on the student on the covering of the synonyms. Right. Okay. That's interesting. And do and do you care?"
  },
  {
    "startTime": "00:38:04",
    "text": "No. That's what he's asking. I'm I'm -- Do you care? I mean, sorry. I'm sorry. Yeah. We're we're set of Yeah. Do you You know, maybe maybe it would be nice, but you know, what like, may maybe this isn't a huge problem and can be done later. So we're kind of in between. And if the working group has a very strong opinion one way or the other, then do it. We'll do it. We'll do it. Okay. I I now I understand what the problem is. I I don't know how many for you, but I understand the promise. Sorry. Anybody else have an opinion or so we I I guess we're we're not seeing a strong opinion. I mean, I I think it's it To me, the the thing here is if we go back and do this, it's gonna delay And who knows how long mean, probably not that long, but it will cause a delay, and we'll probably to rerun some of the process because it'd be a significant change, change, And And I don't know what the pressure if you guys have any pressure to get this out for 3gpp or anything else or, like, it it So, I guess, one question for you would be how confident are we that we could add this later? And then if we can add this later, what's the trade off between delaying and to do it now? Or Getting it out now. you know, Is is is there a what what sort of time pressure do we have? So there's no sort of SDO level time deadlines, But we we do have some discussions with customers that would like to do this. So and I I mean, it's been going on"
  },
  {
    "startTime": "00:40:01",
    "text": "for some time. So I I I personally would like get this done and work on extensions on maybe this thing or post quantum or, you know, many other things. So have us personally a slight preference for doing what we did in this version and not changing it. That that's why the document is like this. But maybe if nobody is screening for this, then we make it so. I'm relatively confident that we can do this later. I'm I'm not seeing any at at least in the room. that that that their strong desire to do this now. I can post the same question also on the list in case there were I I everybody was in online or or in this room. So -- Yeah. have you great. Thank you. Well, That brings us to the end of our agenda? Was there anything else? Charles? Yeah. Charles at all. Sorry. I just had one question for the the notes on the previous draft. I missed Was that gonna go out to was that ready to go to IES sorry, IETF last call, or is that a working group call? It's already an IETF last call. 2nd -- Not this one, but the second one our you mean dance, Yeah. Dan. Sorry. That would be working group last week. Okay. Then I had that. Okay. Thank Allen? I'm not really any new business, just a a bit of a heads up. Stefan Winter and Fredrik Ryker I've been working on something called Eepfido."
  },
  {
    "startTime": "00:42:00",
    "text": "which apparently works, and they're planning on presenting it in Prague. the idea is that you use pass keys for e, and then you define that the CA's for Eve Fido. are the WebCA's. and issues like Warren brought up on Wednesday at the plenary of I can't connect the stupid network because I can't configure my supplicant that mostly just goes away. That's the theory. So you just say, hey. For this SSID, I want to use Eapfido. What domain? I don't care. It's all web stuff. And if I have an account with that domain, it will work. So it seems interesting. It seems to solve the provisioning problem. using the web, which is what everyone else is doing. and not running provisioning over EAP. It's it's it's good and bad points. but just for people to be aware that this is coming, I guess. Okay? Thank you. Anyone else? Right? Alright. Then we are adjourned and see you in Prague. It's like this one. Well, welcome. Yeah. Yes."
  },
  {
    "startTime": "00:44:01",
    "text": "But Yeah. When do you go back? So I will ping Yongfred. just to CPUs. interested in the 118 presentation. Get out of this radar Yeah. It's also good if you keep"
  }
]
