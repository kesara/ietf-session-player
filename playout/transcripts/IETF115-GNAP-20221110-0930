[
  {
    "startTime": "00:00:05",
    "text": "foreign well it's a background image right it's it's the same kind of the same color as yeah all right it's the time resolved now all right good morning everybody let's get going let's get going um if we have a volunteer for no taker that'll be great otherwise"
  },
  {
    "startTime": "00:02:00",
    "text": "it'll be left all right okay it's Thursday by now you should have seen the note 12 otherwise please take a look it still applies even though it's Thursday we are going to spend most of our time on the uh with the editors going through the latest changes major major changes to the main protocol in preparation for working group last call um we will also during this part of the session we will have 10 or 15 minutes to speak about Adrian's human rights considerations somewhere near 11 o'clock then we will want to discuss a working group next steps specifically do we feel we're we're ready or almost ready for working group last call and what do we do with the main protocol and what do we do with the resource server protocol um anything else for the agenda all right so with that Justin that's it right okay that's it well it says it's loading oh is it the wrong deck again"
  },
  {
    "startTime": "00:04:03",
    "text": "and Fabian should be online I think okay it's kind of amazing when it works there we go um all right yeah I was going to say we should make sure that Fabian is uh online because he can um all right fantastic fantastic great uh he and I are going to be uh trading off for uh for the editors update uh so I need to I need to request it again uh technology it's wonderful thank you good thing authorization is easy right all right all right so hi everybody uh welcome to the gnat meeting on ITF 115. um and I was inspired by some of the uh other presentations this week to include a local picture uh with some very rough Photoshop this morning so thank you to the chairs for helping me uh get that in at the last minute uh so everybody mind the gnat I know it's a little earlier for this pun but I love it just deal with me anyway um today we're going to be going through uh the chord changes the changes to the core document uh which there have been a lot uh Fabiana and I have been really busy over the last couple of months uh we're going to be grouping these into the editorial and the functional changes like we always do um there have been no updates to the RS draft but more discussion about that a little bit later and as the chairs mentioned we'll be talking about sort of the futures of the gnat protocol um and sort of where we go from here so first off uh if you pull down the slides all of these links are live you can go look at the uh RFC diff uh between the two to see the difference in"
  },
  {
    "startTime": "00:06:00",
    "text": "tax changes we have merged 23 pull requests on core and one on the resource server draft over the last few months uh like I said we've been busy been a lot of changes um and we have closed 55 issues 56 if you count the one that Fabian closed this morning um and uh that leaves us with at this point only issues in the core draft that have come up after we publish draft 11. um what was that two weeks ago um so we were able to go through it this is the biggest news we were able to systematically go through every single issue and the tracker decide sort of what needed to be done you know uh and and execute a resolution for all of the outstanding issues including all of the issues that were have been labeled in the draft as like you know editor's note go think about this go take a look at this uh from the very beginning of the protocol um no closed issues on the RS draft we've opened up a couple more because as you'll see some of the uh some stuff has been shifted in that direction okay on the functional side and I'm going to go through each of these in more detail we have finally added key rotation after talking about it and how we might do it for a while we've got text on Cross user authorization um sort of more concrete text on Cross user authorization uh we have made some normative changes to the syntax but it's really ways that makes it more consistent within the protocol so you get the same kinds of structures between uh similar things uh again um we have finally gone in and added an Ianna section including um extensive guidance for how extensions to the core protocol would actually work if you want to go and build something new and build on top of this what is Our intention um as a working group for the extension"
  },
  {
    "startTime": "00:08:00",
    "text": "points and how to exercise those extension points um and some smaller issues including uh noting that all Uris are intended to be absolute we just actually had to spell that out that's pretty much that entire issue um we expanded uh the error messages and the syntax around those that actually also fits into being consistent with the syntax between different uh different types of objects and there's an expanded bit on RS first discovery so the editorial changes uh uh once again we've expanded the security considerations uh this has happened to every single revision uh over the last year or so as you might expect for a security protocol uh We've explained class ID uh updated some definitions and we have uh finally included interoperability profiles which is uh our way of doing mandatory to implement considerations because gnap is such a sort of broadly reaching protocol with lots of different use cases uh the mandatory to implement considerations are if you are doing this kind of application this is what you expect if you're doing this type of application here's what you expect we've added two we could probably use some more uh in the core document by the time this hits uh final but uh you know this is this is the current approach uh We've added a list of implementations and would like more uh and we've done a lot of cleanup on the document itself uh so there were some sections that we thought we were going to add but never actually did and so we've cleaned up a lot of stuff uh in the cortex uh Fabian you want to talk about the Json schema hello everyone um so yes we it was planned for a long time it was an outstanding issue um and what we decided to do is to actually not put that into the core document but on the GitHub Wiki the main reason for that is that it's actually"
  },
  {
    "startTime": "00:10:01",
    "text": "very lengthy um and so it's something that would add a lot of of length to the text which is already quite long and so we wanted to just add some resources for developers and implementers so that they could actually simplify their their developments um so the the nice thing with student schema is it's actually completely integrated uh with uh our way of approaching the nut protocol because everything is based on Json and so you can actually understand the mother it's it's kind of a nice summary of uh the data model for fog nap and then on top of that you can actually Implement verification uh at runtime for your different uh data that's rights changing um if you're interested into more about that you've got the jsonschema.org resource which is quite nice you've got a rich set of tools for well pretty much every language out there um so you can actually generate a code from that you can test with some some data and see whether your schema is fine and you can verify at runtime um we're actually using the latest draft for that we need a bit more test along along the line to actually make sure that the different settings are fine and it's actually implementing the the verification that we need in some cases it's not so easy because we've got some required sections but which depend on some specific conditions on on what you intend to do with a protocol so that's the kind of thing we need to to tune but in general you've got the the request and you've got the the response which are already available here um onto the the wiki on on the GitHub for napco protocol um so overall I think it should help you"
  },
  {
    "startTime": "00:12:01",
    "text": "and and provide some guidance for implementers um and and we expect we'll expand on that uh over time so that's that's this part commenting as an individual and actually putting my now librarian head on the only way the ITF uh knows how to make a material available for the long term is through published rfcs unfortunately there's nothing else we can do for for our archival purposes so um one way to do it is to Simply add this material as an appendix to the document I'm not saying we must do that but please consider the long-term implications of having stuff on the wiki okay well not it will we'll have a look yeah uh yeah that's that's definitely a consideration one of the other things that um we've considered with having it outside the document is that as extensions are defined and stuff like that we would want the schema to be updated based on what's in the registry and you can't do that without doing a whole RFC publication cycle so it's I absolutely understand that um that from an ietf perspective that's the only archive that's available but on the other hand this is not quite the same type of document it's more of an implementation an implementer's resource so I don't know I I think there's good arguments to be made for both parts one option there might be to have a chord Json schema for your"
  },
  {
    "startTime": "00:14:02",
    "text": "for what is in the dock and then use a vocabulary for the uh the registry so that part ends up being external but the core vocabulary is internal with vocabularies and Justice game you can do that that's a quick question for the authors do you guys um should we try to get some expert review from from I don't know that there is a Json director or or you know the ability to do things like um yaml there's a you can request expert reviews on yaml stuff and on on mips and stuff I don't know is there I I can I don't know whether you can do it but I don't know do we just call you with the Jason schema folks well we can ask right yeah we can ask I mean I figure we just call up Timbre and have him say it's fine all right um but yeah no that is uh that is uh another way to approach it as well uh like Fabian mentioned though this is a uh Json schema is very lengthy and very verbose it would add many pages to the document which is a consideration for an already long document uh not necessarily enough to definitely keep it out but it's it's a consideration okay um on to some more of the functional changes so uh previously our key formats um we had text in there that allowed you to publish Keys uh when you were sending Keys you could put them in multiple formats as long as they were the same key but somebody pointed out that the only reason for sending things in multiple formats was that you would expect the receiver to not know all of the formats and if the receiver doesn't know all of the formats and the receiver cannot guarantee that all of the keys are the same key and so this was apparently a very big foot gun that we didn't realize uh was quite in the spec which was very simply solved by saying that you can only use one key format um per request and if it's not the right"
  },
  {
    "startTime": "00:16:02",
    "text": "format or if it's something that the receiver can't understand then you return an error um one of the uh sorry I forget where I was going with that sentence but um but basically uh when you're sending a message you can send it as a jwk you can send it as a certificate that uh key format is still extensible by a registry so if there are other future formats that people want to do you can absolutely uh extend it to do that if somebody wants to do some weird multi-base key string thing you could do that uh if you wanted to do keys by URI reference which we are uh as have we've previously discussed is not in the core document if somebody wants to do that we absolutely have a space where that can go and you're allowed to only have one type of key at a time key rotation is probably the biggest new feature um and this is something that we've been stewing on for a long time now um basically all tokens in gnat by default are bound to Keys you can get Bearer tokens but you have to specifically ask for them and when you have something that's bound to a key we would like to be able to rotate the key in case the artifact that it's bound to outlives the lifetime of the key itself um previously we had been trying to come up with a grand unified way of uh of representing key rotation and stuff like that but as discussed at the last meeting we figured out that you pretty much need to have this tied to the specific proofing mechanism so if you're using HTTP signatures you need a way to prove that you have access to the old key and access to the new key simultaneously in a way that they're layered on top of each other so that an attacker can't just take your existing signed message and sign it with their key and say no this is the new key it's"
  },
  {
    "startTime": "00:18:00",
    "text": "totally fine trust me um and the way you do that layering is uh is a little complex but as long as you're following the same pattern everything works out pretty well um so each proof method defines its own way to do this the token management API so when you call for token rotation this is where key rotation actually shows up inside an app because everything in gnap is um is bound to a bound to an access token of some type so when you're doing grant continuation the grant continuation is bound to the continuation access token so if you want to rotate the key for your Grant request you're actually rotating it for the access token not for the grant um this sort of abstraction and simplification makes it much more consistent how you're managing Hue rotation throughout the protocol so what you do is you show up and say I want to rotate this token and I want to bind it to this new key we currently have a provision that you provide the previous key at the same time we're not sure if that's actually necessary because you should be able to look up the old key so that's that's kind of a maybe uh like I said this is brand new functionality um but but we think it works out pretty well um and anyway what you do is you sign the message with the old key and the new key so for HTTP signatures for example um HTTP Sig allows multiple signatures on a single HTTP message so you include the new key in your rotation message as shown it down at the bottom and then you sign the message with the old key so you're basically putting a signature around the new key using the old key which is basically declaring I the holder of the old key I'm okay with this new key as part of this but then you also have to sign that signature with the new key to prove that you actually have access to the new key"
  },
  {
    "startTime": "00:20:02",
    "text": "you are introducing a new key at runtime during this rotation mechanism now there can of course be out of band rotation mechanisms but you don't need a protocol to handle that that's that's handled out of band this is for the times when uh your client instance is saying I made up a new key and I want it tied to the Token so you prove that you have the uh the old key you prove that you have the new key and all of that wraps together and this is a signal to the as to say I need to swap out the key that's bound to this particular access token a very similar thing with uh with the Jose methods you put the new key in the message you sign the outer message with the old key and then you take that signed object and wrap it in it's another layer of jws because Jose doesn't quite do multiple signatures uh very cleanly um and then you send that as the signed message and there's a new jws object type that's defined in here to uh to signal that this wrapping is taking place um for mtls we quite frankly decided to kind of Punt on this one because there's no really good way to present multiple client certs in TLS uh that I'm aware of I know Acme is working on uh client certificate identity extensions that might be able to fit into this but uh we have not had the TLs expertise to be able to Define this so for now the course says that this is uh doing a dynamic rotation for TLS is out of scope because in a lot of cases you're going to be using some type of certificate management system to do that rotation uh in your infrastructure anyway uh and if you're not you know come make an extension that says how to do that at runtime um any questions on keys or key rotation before we move on"
  },
  {
    "startTime": "00:22:01",
    "text": "in the queue all right all right cool uh so cross user asynchronous authorization is something that gnap has been able has been able to do from the beginning but was never quite fully fleshed out and we didn't actually have full examples um we set out to do that um during this round and we realized that we were actually missing a core bit of signaling in the protocol we had a way for the client to say this is who I think is here right now this is who I think the identity of the end user using the client software is we had a uh and we had a way for the client to ask for specific kinds of information about the resource owner but we did not have a way as it turned out for the client to identify who it thought the resource owner was especially in cases where that person was different from the end user at the client instance the classical case for this uh comes from openid connect siba where you have somebody with an authorized an authorized piece of software as the resource owner so the person in a call center and then you have uh sorry the resource owner is the [Music] um is the person calling into the call center and they have you know an onboarded official piece of software that the that the as can talk to them through and then you have the end user is the person in the call center that's making the request so now we have a way to very simply signal using uh structures that are parallel to the rest of the protocol hi this is who I think is here right now and this is who I want information about so as go find and ask that person if it's okay for this other person to know who they are it allows us to very explicitly separate those two uh those two parts of the protocol"
  },
  {
    "startTime": "00:24:02",
    "text": "bit of syntax an additional bit of semantics to that but again it fits in parallel with everything that was already there dealing with subject information um we also added several examples including the call center example to the core document that talk about sort of how this information flows and what an as would be expected to do in this case um and some of this adds in adds on to the existing discussion we already had about asynchronous authorization many of those use cases come from the uh came from the Uma work in the Uma working group maybe maybe this makes sense in the context of the text but subject and user when you say it just like that seem like very generic words yeah so uh subject is who we're asking about and user is who we think there is right yeah no um yeah I agree the I'm not sure what better terms would be I'd be I'd be open to bike shed some of these terms at uh even at this point um subject was named subject uh because originally that was where you're putting information about what you're requesting the subject information that you're requesting so that's also where you put the subject identifier formats and the assertion formats and things like that in your request I mean that that's a it's a recognized term right data subject is also the legal termite right and again if we're bike shedding then one is data subject the other is Authentication well it's not even the authentication subject because the user is who's present at the client not necessarily who's present at the as so um but yeah all right so we oh sorry no I was just going to say that that I mean it's actually worth"
  },
  {
    "startTime": "00:26:02",
    "text": "noting that that kind of practice is the is the I mean the a lot of like um cross media phishing attacks actually use this particular capability of some authentication systems out there right so it it is this is kind of uh a this is potentially a a gun right aimed at both of your feet um and so I I think it it is like if if this actually goes in there I think it's and this is speaking as a individual I think it has to be accompanied by um some something in the security section um but you know this is extremely dangerous and people actually get this is like a major source of fraud in in many jurisdictions yeah uh I agree we've got some text in there that we did add in um but I could probably stand to be expanded um fundamentally from the protocols perspective uh this capability is indistinguishable from a phishing attack exactly because you're exactly asking for information about somebody else the uh what this allows us to do what this syntax allows us to do is at least detect that this is what's happening that this is intentionally what's happening and you can put up enough barriers to make it less likely for that to uh to actually be propagated as a phishing attack so the as for example can say like you're asking for subject information with no interaction uh and a different user identifier well you better be a pre-registered client with a certificate that I issued otherwise I'm not gonna I'm not going to touch this one right so that that's the call center use case you know that's the we've pre-provisioned all of these client instances in our call center and we know that this software is authenticated to a specific"
  },
  {
    "startTime": "00:28:01",
    "text": "user who's allowed to ask for this kind of thing so it's not perfect but yeah we we can at least put a safety on the foot gun to torture that metaphor okay so uh there were a bunch of small cleanups in the syntax where um we had we had things that were kind of awkwardly defined as it's an object but sometimes that object isn't an object and stuff like that we took a step back and realized that um we can drastically simplify this by basically taking a page out of the um out of Json schema and similar things and just declaring things in terms of type so uh for example the proofing methods uh can be sent as either an object or as a string now um except that those need to be defined separately so the object version has a required field name method and that is a string that comes from a registry and then that has required parameters for algorithm in the content digest algorithm the string version has to Define everything including all parameters because there's no space to put parameters it's just a string um so instead of uh you having to do jump through some hoops and saying like oh this you just put this into the method field and then you default a couple of fields and sort of do that kind of thing it is instead just very explicitly defined as you do this in this way and that is the only way that it works and we did we did this um for uh access rights previously the key proof methods interaction start methods uh error responses uh are all basically use the same uh the same kind of pattern throughout the protocol all right"
  },
  {
    "startTime": "00:30:01",
    "text": "we have a lot of extended security uh considerations um specifically we wanted to call out referencing uh the BCPS for Key Management and also some informative references uh from uh how to manage things in TLS I'll let you guys go read those and in particular the TLs and Utah experts in the room should please go read those bits to make sure that uh that we actually are referencing those appropriately um and and there's other security considerations that were added in there all right client instances have a class identifier that class identifier allows you to say all of these to declare all of these instances of software are part of the same sort of piece of software so it's an app ID in an app store it's that kind of thing um we clarified uh the role of class ID in the system we didn't really change what it was or how it works we just clarified what it means so this is something that is uh decided by the as it has to be known to the as [Music] um and it could be pre-registered it could be issued by a third party it's really just a hint to the as that this software is claiming to be part of this class if you want a greater attestation to the membership of that class uh so you know that that attribute actually applies to this then you need software attestations which are a layer above and beyond uh what just a simple class ID string can give you so we clarified that this is a hint just like anything else that the client might dynamically send um but the text in there now says a little bit more how to apply that hint how to use that hint um oh and this is the kind of thing that uh in some cases is really going to act"
  },
  {
    "startTime": "00:32:02",
    "text": "just going to be kind of hard-coded in say a set-top box and say I'm this piece of Hardware with this version so you can really trust it about that much without other things strapped to it uh Fabian did you want to take this so as you were saying in the introduction we've got some work that has been done on the entire Webb profiles on especially on the mandatory to implement so here is it's again guidance for implementers since we're at the uh at the state where it becomes really um stable enough to to actually implement it uh so you've got two main uh profiles the one the first one is web profiles Illinois secondary profile um basically you'll see that most of the methods are actually similar the main difference obviously is there's some some case on the web profile where you actually redirect during your interaction while obviously for a secondary device your integration is actually based on a push so you're actually going to use either a user code or user code very which was discussed I think at the previous iitf meeting um so it's basically a different interaction so you've got both cases which are to be implemented and then based on that we actually just Define the minimal spec that needs to be implemented so that actually uh clients and authorization server can actually discuss on a minimal basis um so and that concerns everything related to key proofing the different Ash algorithms the different signatures algorithms and also the types of subject identifiers so for instance to take this one um we we could have said well go"
  },
  {
    "startTime": "00:34:01",
    "text": "implement the entire SEC events back and you need to actually provide email and and you need to to also support deeds and and so on but obviously this comes at a bigger expense for implementers so we wanted to have something which is common to all implementations of nap and we think that for instance the OPEC version of it makes sense to be able to communicate between the systems same for our session formats currently in the text we've got ID tokens or summer V2 um obviously the in in that word and of2 word ID tokens are very widespread and so we think it makes sense to have that as a default that can be accepted for authentication on top of the map protocol so basically that's really a way to to make sure that we can actually understand ourselves in in the week and the last part um is is a key proofing method and we we suggest that we go for HTTP Sig which is clearly the most the most advanced way of of making sure that uh our key proofing is is actually implemented correctly um the only downside from that which which was discussed at that point is obviously it's a new method it's something new for for people to implement but we also think this significant upside in making sure that it can be implemented for instance what just in described earlier for ntlo us you've got additional infrastructure to put in place here it's it's different you can actually base that on your HTTP stack only and that's that's something that's we think is is worthwhile um so yes that's something we should obviously discuss together to make sure that this inter probability profile is something that we all agree on but"
  },
  {
    "startTime": "00:36:02",
    "text": "that's our proposal so far right and I wanted to say one more thing about the uh the proofing method um because this was this was brought up in discussion um even though Jose is itself very well established applying Jose to an HTTP request in a robust way is not well established there's a lot of stuff that an app had to invent and sort of copy to get that to fit uh because Jose and http aren't the best of friends um so uh bringing that up because that's one thing on the surface that seems like it might have been a more obvious choice to use the Jose methods but it turns out that there's actually a lot of additional tooling that doesn't exist in toolkits today anyway so it's not as much of a win as you might think also yeah we also I did a section which will be removed when we actually publish the the spec but it's it's interesting for people to have a resource that centralized right now and the implementation status so we actually expect more in in the coming weeks uh so just for myself I'm actually working on on my rest implementation but we'd like to thank all the people that have actually committed to to implementing nap or at least the version of snap um and you see that there's already quite quite a bunch of them um either on the client or on the server and and you see that there's also a variety of languages out there you've got JavaScript roast Java python PHP um we we do see that it's actually implementable in in pretty much every every situation that's that's common today so"
  },
  {
    "startTime": "00:38:00",
    "text": "that's really what we want to do obviously we are quite aware there's there's more to be done on the on the entire release side and we'd like to to actually get more uh so if you've got uh your implementation please let us know and we'll add that to to the draft right and I just want to add that these are the publicly available implementations there are a couple of other implementations floating around out there that are part of uh proprietary products so uh secure key which is now a vast which is now Norton did I get that right yeah okay all right where what now gent that's the first Monday that's the first I've heard that so whatever this company is called now the verified.me um the uh the verified.me product actually uh is also uh an implementation of gnat but that's sort of internal proprietary code and so I couldn't couldn't point to it here uh quite as easily I don't know if we're actually supposed to include stuff like that in the implementation list as an author of PCP whatever it is that specifies this session yes absolutely okay all right so we'll we'll add in the verified.me stuff then uh as well and um you know if there are any others then um then yeah please uh please get in touch and one more thing going back to the previous slide if yep uh do we have an actual security cryptography justification why we're using two different uh hash algorithms or is it just historic and if it is why don't we make it so 256 for both"
  },
  {
    "startTime": "00:40:00",
    "text": "it's historic um I just kind of picked sha3 the first time because three is bigger than two and so it must be better and I picked that like three years ago and only one person complained and that's why we made Shaw to an option and that's that's where we are so if we wanted to make these both shop 256 I honestly think that that's fine given the uh the lifetime of the interaction hash is very short there's there's not a good reason to to do the additional level so I'm actually fine with that I think it's a it'll be easier for implementers even though we we already have so many still yeah um so I know I just remembered I should put Dimitri's um implementation on on this list I totally forgot to do that um because I know he was the one that actually asked for shot 256 because he was doing a pure in browser implementation and at the time didn't have a shot three uh in web crypto so um yeah I'm fine with that uh if anybody else has feedback on choosing the the hash algorithms please let us know um all right um so we only have a couple of open issues on the core document now um at least as far as I know as of this morning uh it should only be two uh during the key rotation uh somebody pointed out that we forgot to add new errors and forgot to mention this in Discovery absolutely true we forgot to do that so that'll get uh that'll get added in it's fairly mechanical um it's just getting stuff into the right spaces um you know not really a big deal just an oversight on on the editor's part um there's a second uh sort of more in-depth issue from uh some researchers actually building on Florian's um graduate thesis as it turns out"
  },
  {
    "startTime": "00:42:01",
    "text": "um and uh they pointed out rightfully so that uh gnap is not entirely clear that the subject identifiers coming back are scoped to the as that is um that is releasing them even when it's a global identifier like an email address which is to say that I can stand up in a s that says that you know I am yarin and I can have it spit out yarn's email address for my account but you need to be able to trust that as for that specific account in order to actually have that make any sense you know just because it's a global identifier the fact that I'm asserting it does not mean that I have the right to assert that this is actually a really really really really common thing in Federated identity and in fact this is um uh this is completely enshrined in nist 800-63c which uh has extensive discussion about this which we can reference directly uh here to say that pretty much if you're getting something back from an as you can only believe it as far as that as told me this you can't believe it beyond that there are no globally Universal identifiers and no dids don't count Justin yes it's a historical note right the the for for people who remember something called shiblets right they introduced the notion of scope in in 20 years ago to do exactly this right yep absolutely yeah this is this is not a new issue we have some text uh that already says this but it's it's not that strong and it's not it's not a normative requirement for the client instance to process this with a particular mindset and so that's why the researchers in doing their formal modeling was like you know you could run away and get get all kinds of uh all kinds of users confused uh if you if you"
  },
  {
    "startTime": "00:44:00",
    "text": "didn't do this so yeah Fair Point foreign all right I think this is our last slide yeah um so at this point Fabian and I have gone through uh gone through the core document um as you saw we've been doing a lot of work to fix things up and add in the last handful of uh features that uh have been talked about here for the last bit but we think the core document is basically ready um yeah hold off on this all right we will absolutely break here absolutely makes sense so yep all right so I think that cool and so we're gonna go to Adrian now yes okay okay thank you Adrian again you might just be muted all right hello yes okay you are very faint we hear you well okay great um so um I don't know exactly how much time uh I have um okay that should be plenty I have uh five slides uh hopefully I can go"
  },
  {
    "startTime": "00:46:00",
    "text": "through them in uh less than half that time and um um so let's see how do I uh present [Music] um and uh share the screen I think you got a request there you go okay uh are you seeing uh the slide yes Miracle amazing okay uh so uh just uh slide two is a summary of um what my uh point is that we need a separate human rights consideration and uh that some aspects of it might need to be uh normative uh in the protocol uh the reason is uh that uh privacy by itself does not uh recognize the asymmetry of power uh between uh the resource owner typical individual and the institutions that are playing the other roles um the concept of free association is discussed at length in the hrpc documents uh and how it applies to um as nrs's and clients again is not a discussion we have time for today necessarily except during the questions of course um so uh because privacy does not consider delegation it ignores the power asymmetry uh we now uh have to consider"
  },
  {
    "startTime": "00:48:04",
    "text": "in the hrpc uh context of force Association um what it is that we are doing and how it can be mitigated um and uh and so um the the problem uh without diving into it I think is pretty well understood at this point that uh forced Association and oauth to the authorization server uh has a lot of convenience features but it also uh comes with uh scaling uh uh problems that uh are cause regulatory issues in the human rights uh or privacy context and so my recommendation is uh that uh the resource owner must be allowed uh to uh State who their preferred authorization server is uh slide three is a uh summary of um the Privacy interests that have been mentioned in various issues uh for the past whatever how long I've been around uh I'm not gonna go through them um there's obviously the the top issue is who gets to choose the as the resource server uh wants to limit their liability and the resource owner wants to limit both their lock-in and their various uh risks of policy surveillance traffic analysis spam Etc uh and the requesting party as has been discussed in some issues uh once data minimization basically and uh their ability to choose their client um so uh in a PR that was requested at"
  },
  {
    "startTime": "00:50:00",
    "text": "the last meeting um I suggested uh uh two options after discussing this extensively with capabilities experts uh two and three uh I also added recently uh as part of the issue that it could be as easy as number one but number one is not easy it also has issues and my point uh is that one of these uh needs to uh be uh a must or should and then uh finally uh we have uh some links uh around this argument that uh people can can access uh they're obvious there's the pr itself uh the hrpc document which I guess will be discussed tomorrow at exactly the same time and uh and so I intend to use these slides tomorrow as well and uh that's it all right thank you Adrian um so can we get a show of hands here and in the in the room who has um reviewed the um uh the the pr looked at the proposed text Justin um anybody else and if anybody online has done that maybe say so Fabian has reviewed it uh he says on chat all right so we actually I think we need a little bit more review on this um to act on it but um I don't know if any of the um any of the core uh editors could step up and give your impressions and um sort of feedback um"
  },
  {
    "startTime": "00:52:01",
    "text": "hi uh Justin richer speaking um speaking as editor uh one of the uh one of the problems with the text as proposed is that it places requirements on an app as a specification and not on implementers of canap um this brings up a lot of very important um things that should be considered uh during deployments but um it needs to be written such that somebody making a deployment decision knows the trade-offs from the human rights perspective about doing different things so what are the trade-offs for example for allowing an end user to specify which as is associated with which are us there are very clear security trade-offs for doing that there are also privacy trade-offs and human rights trade-offs and this this needs to be written in that way and not with normative requirements on gnap as a specification as in gnap must specify this which is how it's uh it's the text was currently proposed um Fabian has moved a uh trimmed down and edited version of this to the RS draft because this is a lot about um this the text was mostly about association between RS and as and not about uh sort of client to as client to RS stuff that the core document is focused on um so we do think that it's a better fit for that space anyway um but it would need to be written closer to the security and privacy considerations"
  },
  {
    "startTime": "00:54:03",
    "text": "speaking as an individual um I haven't read the pr so the pr as is may not be appropriate but I think um requiring that the spec should provide capabilities that allow good implementations I think that makes total sense so I would encourage the editors to look at Adrian's three options and see which of them can be reasonably implemented within the current framework or maybe we should add something to the framework to allow them having said that um anything that involves implementers in my opinion again as an individual should be guidelines trade-offs considerations versus normative text what Justin was saying um originally well first I I want to thank Adrian for for the contribution because it's I think it's an important topic and I'm going to be able to to participate tomorrow uh at the hpsc meeting as well um so that's the first thing the seventh thing is initially there was a PR on the core draft and actually moved it to the arrest draft so I think that's already the first discussion to have is what the right place for that specific text to to be I do think the RS draft is a better place because it's really where we've got the requirements on the RS part and it's also where the actual mitigation can take place such as integration for for the tokens and stuff"
  },
  {
    "startTime": "00:56:00",
    "text": "like that um now said that I think there's remaining work to be done and we are very open to actually get more feedback on the actual text and not speaking now as an editor but just from a personal point of view I'm really not sure a shoot well most I think is is really difficult to implement and even a shoot is something well when I try to take out the the text from Adrian and actually put that into the areas draft as a PR um the actual way is to to do that from a practical perspective really depends on the situation um and so that's why so far at least in in the part I've put is there's no shoot and no must because we'd like to before doing that at least be sure that something can be done in in practice but that's it's funny thank you um okay uh for my part first of all I want to thank the uh the editors and and the chairs for uh uh uh taking this uh seriously and uh uh point out that uh hopefully tomorrow um we will see whether gnap is really the the ideal example of a of a protocol that hrpc and ietf wanted to address by whatever process they had in mind um I uh for this context as we discuss whether this is an implementation issue uh or not um I just wanted to make the point uh to stress the point that uh given a choice uh we have very good evidence that implementations will not give uh uh"
  },
  {
    "startTime": "00:58:02",
    "text": "resource owners uh this uh this capability and that is true of any human right um to the extent that it's optional it it does not happen and the bad thing about that is that regulatory capture in other contexts outside of our context here basically denies Regulators a an opportunity to to fix this uh this hyperscaling problem on platforms uh so um what I'm looking for is of course the advice as was said of the editors as to whether this can be done and how it can be done uh and then Adrian your audio dropped out uh no it's back there we go okay and so uh number one is the discussion that is anticipated as to whether this is possible and how uh and then uh what is the process uh that uh sort of uh the the the group will use uh to determine whether it should be uh a must or should uh thank you to make it clear that I'm speaking as an individual so um a couple of comments I I think uh Adrian your your point is well made maybe maybe not um it worth repeating that like in in society as a whole like free association also comes with cost right it's not the but we have chosen in society to optimize too often right for for free association and human rights over security considerations I mean there are security considerations with with free association and some in some cases Regulators actually come down on the on"
  },
  {
    "startTime": "01:00:01",
    "text": "the side of sort of against free association um but in in technology we've kind of defaulted the other way because in in large part we we're allowing as you put it hyperscaler um to to kind of govern what we do and I think the the the way to deal with this in or at least in this technology stack is to make sure that Regulators that let's flip this around to make sure that um technology providers cannot hide behind the lack of technical capability to do the right thing and if the regular is just Regulators choose to to point at a particular instance of deployment of technology and say this in this particular instance we're going to optimize for free association over security and the technology itself shouldn't sort of place restrictions the capability should be there and I think for for gnap that means that sort of the the field should be there but they don't necessarily have to be um uh judicious use of of sort of normative language will be enough and we should think about sort of the situations where Regulators will come in and say no no in this particular instance you know the deployment of gnat must follow this particular model and must be a must allow for for the uh resource owner to to control their as for instance if that's what what kind of this this comes down to to um so so I think let's think carefully about sort of what normative language we put there to make sure that we give Regulators kind of Maximum opportunity to to do their job which is kind of to govern uh the deployment of technology and situations where where there is sort of where human rights considerations really actually matter all right that's it"
  },
  {
    "startTime": "01:02:02",
    "text": "uh Justin richer this time speaking as an individual not as an editor um so uh one of the things about this first off again echoing Fabian Singh and uh thanking Adrian for bringing this in um I do think that this is important work and um you know I remember a time in the iitf where we didn't have privacy consideration sections in uh in our documents we do now they're required um and that was that was a hard shift in thinking for a lot of uh technology nerds that just wanted to go build protocols for things to talk to each other so I get that this is that this is a hard shift um for for a lot of folks all that said um I think that the considerations being raised around free association and the trade-offs they're in um while those are very very important we also need to keep in mind that there's more than one solution to providing this so uh for example one of the things that gnap has had as a fundamental pillar from the beginning is the ability to get more types of interaction more types of information more types of things expressed to the as by different parties that would allow for a resource owner to externalize their policies and express them to the as which then turns that into an access token without the RS and as needing to have a loose coupling between each other so you can still have your RS be a very simple dumb API that all it does is say it's a token from somebody that I have been hardwired to trust and that token is good and that is a level of abstraction that we know from the technology side is really really important where this really starts to come into play is what the as knows and what the as can do we're no longer in the oauth2 world of assuming that somebody has an account"
  },
  {
    "startTime": "01:04:02",
    "text": "that they're logging into the as to execute something we can go far beyond that and that fits with what we've presented many times here what the editors have presented many times here as the as a token Factory that is our model this Factory can take in multiple kinds of inputs it can take in verifiable credentials it can take in did documents it can take in zachimal if you want it to all of those would be extensions to connect its protocols built on top of and around canap to provide those things to the as in order for it to be translated to the RS and in doing that you could provide the same kinds of Human Rights considerations the same types of blindings uh that are that are talked about in the pr without having to dissociate the As and rs in the way that is proposed in Adrian's text so I do not I want to be very very sure that we do not limit ourselves and limit as they put the guidance to Regulators to say only choose this only choose bring your own as as the only option in order to fulfill this what we really want is a system that allows these types of sort of Human Rights pieces to be addressed and provide guidance on ways that that can be accomplished and not necessarily a single way to do that you'll have to forgive me if this is a little naive this isn't a space I've spent a lot of time in but the concern I have is you can solve this at a"
  },
  {
    "startTime": "01:06:01",
    "text": "technology problem and make the AIS independent but resource servers make a commitment to the resource owners to protect that data to a certain level and it's going to be very difficult for resource servers to keep those commitments if they don't have control or they don't have trust of that uh the authorization server and so I even if it not made it possible I'm not quite sure whether resource servers would be able to continue making those commitments to the resource owners on protecting the data um I I to that point I I that's also actually turning into a regulatory thing I mean we're we're seeing the EU regulating sort of um platform providers to force them to provide sort of externalized mechanisms for for data access etc etc so again it's it's kind of it's not yes you're right right to a certain extent you have to be able to sort of trust all the components in your system but again uh it's all of that is up to a point um you know trust is not absolute and in the you know in in a situation where you actually you have Regulators saying no no you're you actually need to be able to provide some externalized mechanism for for injecting policy into your your own resources which is happening today right that kind of Regulation um I I what I actually you know the the trust issues may not actually be that absolute right as as a as a resource owner as a resource server you may actually have to comply with legislation saying all right here's a set of trusted um independently provided resource"
  },
  {
    "startTime": "01:08:01",
    "text": "servers you know choose one right that's another sort of mechanism for doing that um and what I actually came up to this comment was Justin and I you know yes gnat provides a bunch of open a certain amount of openness um you just have to make sure that all of those capabilities that you're talking about Justin are actually real and and can't be sort of configured away easily um so again I'm I'm all for providing I think the the approach would be to provide maximum amount of technological Freedom um in implementations but then allow The Regulators to go and tell the resource servers and the authorization servers and and you know and here's how you must behave in this particular context and that should be possible and you know we won't don't want the resource owners or the authorization servers to come back to us and say no we can't do it because it's not in the spec um so I just wanted to uh to close with I think it's important that we don't conflate the roles here um I think that the uh the borders around what we're calling a resource server and a lot of this discussion um is getting fuzzy and um in practice the thing that the resource owner trusts is a combination of authorization server and resource server the abstraction of those two components is a technological abstraction not an ideological one the authorization server is the component that provides an artifact for access the access token and it is the part of the resource protecting"
  },
  {
    "startTime": "01:10:04",
    "text": "ecosystem that does the translation between policy and identity and context into that access token so I think a lot of this we're getting hung up on the resource server is this independent thing that somebody actually has an account on and they stored their data on and that's where they set their policies and the authorization server is something that's coming in and trying to like you know wedge that open whereas what's really the reality out there is that what people think of as the protected resource at large is some combination of authorization server and resource server in oauth one we called it just the server it was one component in oauth 2 we allowed those to be abstracted not for ideological reasons but for technological reasons people were building distributed systems and we wanted standardized standardized ways to connect those on The Wire gnap is taking an app as a protocol allows those two to be loosely associated but also allows the as to take in more information like I was saying before so that you can draw that line in multiple ways depending on what makes the most sense for your use case and if we can provide better guidance about what it means when you draw that line in each of these places then I think we should and I think that this provides a good motivation for doing that but it still remains an implementer's choice thank you Justin to wrap up this part of the meeting Adrian if there's anything you would like to close with uh no thank you very much I think this"
  },
  {
    "startTime": "01:12:00",
    "text": "moves to a process question for hrpc tomorrow and then uh back to the editors in this group thank you thank you Adrian Justin back to your slide foreign just put it up on the last slide that's pretty much all we got all right so um well that's well that's popping up um basically uh the question is what do we do now um we've been working on gnap for a couple of years now uh we've had a lot of good work and a handful of implementations on it um at this point the editors think you know it's probably time to ship it uh it's probably not perfect uh it would have been nice to have had uh you know sort of more eyes and more things uh involved here more features and things like that but what we have is pretty solid and so our proposal as editors is that we take the document uh we take the core document and we move this into working group last call Fabian and I started uh looking through the document and you know I could use a little bit of an editorial dusting on the text but we think that um conceptually the the core document modulo the missing error messages that we already know about um is uh is ready for a last uh set of last call reviews so that's what we would like to do now And to clarify that shows are fine with that so we are actively seeking feedback on that decision from the working group and uh if anybody wants to commit to doing a"
  },
  {
    "startTime": "01:14:03",
    "text": "last call review that would also be very very good everybody's rushing to the mic right now I can I can feel it thank you uh how would uh uh how would this impact the uh process by which something might be normatively changed due to human rights uh considerations the editors do not anticipate any normative changes due to the human rights considerations as was just discussed I mean regardless of where that discussion lands I I think we're I think um we we can deal with it during working group last call I think what um this is not uncommon for working groups that's kind of um that has a lot of sort of churn and um limited resources that you kind of need to push it into a working Loop class called process in order to get people to pay attention at the last minute so even if it winds up being two working group last calls so be it right yeah it's better to kind of start working on that and then commit to being done I think um I I wouldn't go so far as to say that there will be absolutely we're sure there's not going to be any uh um normative language in there I I think it's too soon to tell but I would encourage like everybody to kind of just Sprint to the Finish right and to be clear um what I said in case in case that Precision was lost was that the editors do not anticipate any normative changes there might be but"
  },
  {
    "startTime": "01:16:02",
    "text": "considering what we've seen and what we've read in the conversations we've had so far we don't expect there to be any so that's that's that but yes I agree with life that you can change things during last call I I have some of these very heavily dependent on oauth 2 at the moment but very ignorant of this as it has just discovered it exists today I'm will happily read through it and provide you with feedback as for what that's worth excellent no that is worth a lot thank you thank you and and for those in in the room and those who are not um people have implemented this protocol if you implemented gnap you should have a vested interest in getting this protocol in in good shape into publication so please give it a rate the working group last call is the best chance to get your feedback in yeah Brent please tell Farley thank you all right um the uh uh the next uh part of this is that uh of course a while ago we split gnap into two main documents um the resource servers draft deals with the association oh sorry not to go there yet okay sorry to interrupt do the editors feel that the current version is ready for last call or would you like to make some I don't know minor changes get get it to a more stable place and then have a working group last call uh let us get the um the errors and Discovery bits for the open issues that are in there I don't think that's going to take very long"
  },
  {
    "startTime": "01:18:01",
    "text": "um I may even be able to do it like on the plane um but let us do that do one quick revision um and then I think from there that's that's my take on it uh Fabian what do you think yes same um I think we need to just have a read for we need to get through that one more time just to make sure that everything is on good shape and and easy to read for for people and then we can we can achieve that yes so I think I would say next week it should be it should be fine yeah that sounds fair I think we can do that um so that that'll be draft 12 then that'll end up being all right excellent um so the resource service draft um this deals with the association between resource servers and authorization servers this is where we have thing would have things like the uh models of access tokens and sort of what what these things mean and how you communicate that um this hasn't really received a lot of a lot of energy and a lot of attention uh this is an open call to the working group is there energy in the working group at this point to also push the resource server's draft over the finish line um the editors have spoken and we would like there to be so people in the room and local and remote do are there people here who would be willing to step up and do a a review of the resource drafts in its current form to kind of provide the editors with a little bit of feedback on kind of where where it needs work yeah yeah to be well we have a volunteer yeah can I get your name for the record"
  },
  {
    "startTime": "01:20:02",
    "text": "Daryl Miller thank you that's much appreciate appreciate it yeah to be clear we know the resource server draft needs work it has been neglected on this and on the last thing of ask Norton Jen whatever we're called is happy to continue reviewing um okay could you repeat that name uh Brent zondel gen digital okay all right fantastic like the state of the uh the RS draft is really going to be dependent on the kind of input that we get um as it is right now it's a very very drafty draft um but we think there's potential to kind of quickly bring this uh bring this up in quality and uh also get this over the line um ideally we would love to have the RS draft in a state uh similar to what core is today by ietf 116 Yokohama it's a little aggressive but I honestly think it's possible it's a shorter draft uh there's there's fewer moving Parts um but there's Le there's more unknown in there right now so that's that's why we need more eyes and more hands I suggest we have an interim halfway between now and Yokohama where we look at the situation with the code draft and make a decision on the future of the Irish draft"
  },
  {
    "startTime": "01:22:00",
    "text": "I think that that makes sense so we would retarget like early January probably thereabouts May January yeah clarifying question isn't the uh the this resource server drafted a fairly critical part of actually being able to allow people to do this um interoperable as and the fact that you could that they can discover as capabilities is one of the key parts of achieving this human rights requirement uh for the human rights side yes because that's about association between the RS and the as fundamentally so yes for that aspect um that's why Fabian moved Adrian's PR with that consideration section to that so for clarification um I know you said you're you're new to this space the core draft is about it's really focusing on the client instance and how that talks to the authorization server and how that talks to the resource server but it's a very sort of client focused draft to how you make those connections the core draft is intentionally silent on how you connect the RS and as together because by All rights they could literally be in the same box and reading from the same database in which case you don't need any interoperable way to connect them they just they're just on some internal backplane and and that's how a lot of systems actually work um modern distributed systems though need to have ways to communicate across different nodes and so that's where you get token introspection you get structured tokens and that's where the common token models and things like that and the discovery of as capabilities uh and stuff that the client never ever sees or cares about that's where that is and so what we did a while ago was take those considerations which were all originally just dumped into one big"
  },
  {
    "startTime": "01:24:00",
    "text": "document we took everything that was about the connection between the RS and the as and move that into its own spec and so any questions about that about how you deploy that those belong in that draft and so that that is key to the specific human rights concerns that Adrian has brought up all right okay all right so I think that brexit yeah that's that's all we had um please read the new draft there have been uh quite a few changes in the actual text and uh look for the new new draft uh hopefully in about a week's time okay Justin I think we we have a plan for uh the time period between now and Yokohama we do expect to meet in Yokohama um thank you left and uh thanks everyone all right thank you all right we're wrapped thank you guys something's coming out of the woodwork well I was just looking over already seems to be fairly complete I'm presenting HD signatures are you thinking for something pretty"
  },
  {
    "startTime": "01:26:00",
    "text": "specific but they they kind of read the second did apparently somebody well right all right and it is running in production used to a certain yeah if you're committing with How uh well you you have you sometimes use something called someone method to do large mesh Federation okay aggregate some of them so we have an authorization sorry gives you a token based on the uh your IDP whether it's actually associated with us"
  },
  {
    "startTime": "01:28:01",
    "text": "[Music] is perfect for this because it's so configurable that you can do um foreign"
  }
]
