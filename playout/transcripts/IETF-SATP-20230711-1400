[
  {
    "startTime": "00:00:04",
    "text": "suggestion button foreign hello can everybody hear me hello yes can hear you hi are you waiting for the chairs"
  },
  {
    "startTime": "00:02:04",
    "text": "I think so so are we expecting any of the shirts or are they both not able to make it this time yeah I think I think we could just um you know uh Paul just discuss um updates Maybe and maybe talk about um what we plan to do at um San Francisco birthday yeah um should I should I go first I can go first as I have a small update on the vocabulary it's pretty quick we can get our agenda so at the moment I'm working on um making the vocabulary document into a draft on the way we discussed in one of the previous meetings so it's going to be a separate item rather than just an appendix on on one of the other drafts and as soon as soon as I'm done at the moment I'm struggling a bit with the XML uh draft drafting uh process but as soon as I'm done um I will send an email on the mailing list for review um and yeah feel free to add any any contributions to it but that's that's about it so I expect an update on the vocabulary in the next couple days"
  },
  {
    "startTime": "00:04:00",
    "text": "to the mailing list that's all I have yeah any any questions for Alex going going okay thank you Alex okay should I should I go next or Rama did you wanna go next uh just uh minor updates for me I uh I added a small amount of text on uh I think the comparison between sap and ifo 2012 and the architecture draft I just started privacy videos okay you can share that from the 45 yeah thank you I I received it I'm going to work on it today but I just realized the the cutoff date for um uh uploads of drafts was yesterday so there's a kind of moratorium until I guess the Monday of the ITA but but I think wasn't it I thought it was yesterday no it was yesterday the cutoff has happened so for now until the ITF starts there's no more updated drafts okay so so that's that's fine so um Rama I'll try to upload it like the the Monday of that um week so that uh but I don't think it's significant changes it's more like you know we've added text on the iso and we understand and um it's interesting folks um actually if you guys are interested the bis backup International settlement"
  },
  {
    "startTime": "00:06:01",
    "text": "um has just published there I think annual or six monthly report um and there's a particular section on on this you know related to this problem and the fact that the current messaging scheme you know I mean even they recognize that the current ISO uh you know messaging is not enough that it you can't do you know tokenization with just messaging uh so so we can uh you know um if people are interested send me email I'll send you the link to the the PDF I'll send you the PDF all together and you can have fun reading it but um yeah um so I think we're on the right track I think is what I'm trying to say thank you thank you Rama anything else oh uh yeah I I have to push an update to see the use cases draft as well but I guess I'll do it by uh on the Monday of the yeah okay great thank you um Raphael let me go first and then um when we get to the section on session resumption maybe you can jump in yeah sounds good no folks uh I'm gonna try and share my screen which is the version 19 of the message flow which is on the GitHub repo and uh let me help me hang on how do I actually share my screen um actually you know what maybe it's easier if everyone just goes to the repo uh maybe somebody can post the link um to the repo and and look at the diagram and if you and I'm asking a lot just look at the diagram if you really want to you can also open sat core which is if which is a match now with the diagram minus some you know one two words that"
  },
  {
    "startTime": "00:08:03",
    "text": "are erroneous uh so um if you look at version 19 of our color uh message flow diagram you will see that the transfer commence message and the acknowledgment for that message has been moved up to stage one so that's that's sort of the first uh big change uh and so the reason being was that uh as Alex uh pointed out correctly um it was kind of awkward uh to look at this transfer comments uh in in stage two when really the purpose of stage two was to do the Locking and to deliver the assertion for the Locking and so you know logically in terms of functional grouping yes it makes sense to exclusively Focus stage two on just the the lock and the lock lock assertion and therefore it also kind of makes sense that all all the preparation um and and all the the agreement to proceed between G1 and G2 really need to happen in stage one so if you look at that diagram and if you look at sad core version 02 which I updated two days ago you'll see now uh now there's a transfer proposal claims section so so that is basically putting together all the information that that G1 and G2 need to agree upon in a set of you know proposal claims you know so that includes if you look at the set core that includes things like Alice's verified added in the Bob's verified identity Alice's address Bob's address so imagine if you had to move this you know a regulated asset this is the kind"
  },
  {
    "startTime": "00:10:00",
    "text": "of set of information that um G1 and G2 as the owners and operators of the gateways will need right so so that's I think is now section 7.1 on the sap core um draft uh zero two and the diagram the color flow shows uh dotted um Circle so so basically um this is a a you know multi it could it could be a monthly around negotiation so G1 says hey here's the set of claims that I think you can accept and G2 might say well hang on a second um you've got the wrong address for Bob on my network so that's message 1.2 and goes back again so it's a loop and uh if you are interested in deep down again so the actual messaging start in section seven point three you know what let me um open up um actually here it is so if you look at section 7.1 that's all the claims pertaining to the asset and I added a new section point two which is all about the network capability so this is the stuff we have discussed in the past such as well what locking mechanism is being used in Network one um how long is the standard you know average luck duration in so so 7.2 is really Network specific and G1 and G2 are talking about their own Networks and so uh the set The Logical separation of the asset related claims and the network specific information or network capabilities claims is seven one and seven two two and so really the flows start in 7.3 7.4 is the loop and 7.5 and 7.6 is just a way to uh G G2 to say"
  },
  {
    "startTime": "00:12:03",
    "text": "accept or reject so if G2 says okay I like the claims that you've just sent me and I wish to proceed uh then G2 has to has to explicitly uh you know do a an acceptance message right so this would be 7.4 transfer proposal receipt message so so G2 has to include a hash of the set of claims and say yes I accept this and this has to be explicit now uh one way that I've introduced in seven point um uh five to two to actually do the loop thing and feel free to improve on 7.5 because there might be better mechanisms to do this if uh G2 says okay uh you've got everything correct 90 but I want these things uh updated or modified then G2 will send a conditional reject it's conditional and here's a set of alternative claims that I am proposing so it's a counter proposal and the text talks about a counter proposal so counter proposal and then back again here's a updated repeat you know transfer proposal message so this this Loop now if um if G2 says okay I'm good to go then he's going to say explicitly proposal receipt message is digitally signed if G2 decides to give up okay I I'm tired I I want to go away you know and you go away G1 it's gonna send a transfer proposal reject which is the same structure except the proposal uh uh field is blank there's nothing in it so it signals to G1 that that G2 is giving up and and terminate session and this is where the the errors messages section down below make sense because this is a graceful termination uh it's not a"
  },
  {
    "startTime": "00:14:00",
    "text": "protocol error it's G2 saying I I want to quit so so that's section seven point five and if everything is good then we're back to the flow diagram which is transfer commence and acknowledgment of the commence which is 7.6 and 7.7 so so that's kind of the progress that we made and and this came basically from a side discussion that a group of us made a couple of weeks ago you know on a separate Zoom call which I think was was announced and and there were five six of us and you know we talked about this uh and this is this is stage one any any questions about um stage one hey uh is that a quick uh clarification so uh one thing should we name 1.2 as transfer proposal acceptance rather than receipt because I think receipt will happen at every step of the negotiation right yeah yeah agree yeah we can fix that I I use receipt because Down Below in section three we use the word receipt but yeah yes yes except I know in fact I had acceptance was like okay let's just be consistent but I mean I like the word acceptance better but yeah yeah good but one more thing about the how the gateways should I think negotiate this I mean if a Gateway gets a counter proposal they are not saying how it should handle the counter proposal thing and whether it should decide by itself whether to accept the counter proposal reject it or should go back to the network we are not saying that that's between right it's out of scope for us and in fact this is part of the discussion that I think Dennis wants to have uh have about the um context this is the application the"
  },
  {
    "startTime": "00:16:00",
    "text": "application thing right that that really the the application is already already knows which asset and asset type and so on I think Dennis's point was that um The Proposal needs to include the um asset profile ID it's just the ID number of the Json document that defines the asset so there's that and then there's the actual assets itself in network one which which has its own identifier right but all of that is the context that needs to happen which is now out of scope currently out of scope for us okay just one some bit of background material that I mean I I did some work uh back in a PhD on this kind of negotiation and it was based on the two sides having their own policy databases and when you get a counter proposal you match it against your policy see if it is an accepted and or whether you need to set a Content proposal and also there's a there's work done in the grid Computing on uh service level agreements so this is kind of uh you know you can you can water from that yeah yeah so so Ramo anyone if you have a better idea of how to do how to express this Loop proposal except reject if you have better mechanisms feel free you know to suggest because you know that text there and section Point um uh 7.3 proposal 7.4 the receipt acceptance and the 7.5 yeah that that that's fluid right now you know we can change that it's just a way of saying well if somebody asks us well how do you do this this Loop thing right which which I think to be honest I I did not look at how ipsec or how Ike Ike version one did it or Ike version 2 does it but it's the same kind of model that in in act there's a security policy database at both ends and they keep on looping uh and I think one of the biggest thing is um you know for example negotiating the"
  },
  {
    "startTime": "00:18:01",
    "text": "algorithm for the hash right so yeah you have to be a human we we today conveniently say oh we'll just use whatever NIS says right but it could be that specific networks have a different maybe stronger standard you know beyond nist and so we need some kind of a way for example to identify the hash algorithm IDs which is already standard right so that we have to communicate that yeah but yeah yeah Rama if you have any um alternative ways to like do this Loop yeah happy to happy for you like to to you know recommend it sure any any questions about that particular the stage um stage one um changes anyone no uh okay so going further down in the diagram in in the flow diagram version 19. so um at our thick last interim meeting and also uh subsequently on the email Alex pointed out something uh you know uh very very um uh observant very good which is that uh it seems that the in the old uh previous diagram that the um acknowledgment prepare message was redundant like why why is it there right so if you look at stage three now who have a commit prepare 3.1 that basically signals G1 to G2 you know uh you know get get ready I've agreed on the uh lock assertion that you have that I've indicated I I've accepted I'm accepting it and I'm giving you a signed receipt"
  },
  {
    "startTime": "00:20:00",
    "text": "uh and so now GUI says okay let's let's begin to you know uh prepare to to commit and this is the the classic commit prepare message uh you know that we've stolen from the database world uh now the ACT prepare for those who don't know so the original uh two-phase commit three-phase commit in the database was a was a one coordinated database to many M recipient databases and so if you had like three databases on the other side then then the coordinator which is in our case is G1 it needed to receive an explicit acknowledgment from all three and that's your act prepare but since we only have one recipient Gateway so it's only G2 G1 and G2 it's kind of redundant and so in this diagram the ACT prepare has been grayed out and so for those who've seen multiple versions of this diagram what will happen is that um it's grayed out to tell you that when we update this diagram next time to version 20 that is going to be completely gone the act the great the great ad is just going to be deleted uh and as you you know if you guys are Keen enough you could see all the previous versions uh going back to you know I think version seven was the sort of the most um sort of uh it had feet let's just say you'll see the same thing things grayed out and then suddenly at the next row it's deleted so so in so that's the first major change for stage three we do not have an act prepare and I have explicitly if you go to the top of the diagram you'll see ITF set B message flow diagram asset transfer unidirectional one sender one receiver okay and the message we're trying to say to people that okay we're conscious that there's only one sender Gateway G1 and one receiver G2 and if people have"
  },
  {
    "startTime": "00:22:02",
    "text": "you know in the future um ideas about you know one-to-many asset transfers great you will need this act preparer you know you bring it back into the picture uh you know um if you need it but for now that's out of scope for sapi we're just doing unidirectional one to one so that's the that's probably the only major change minor typo so if you look at the blue message 3.5 blue balloon on the right hand side I said 3.5 must be received by G2 else G1 may be subject to the classic heuristic deadlock state so we had a discussion led by Dennis about um the fact that even in today's databases in the huge you know 30 year old field well-studied well-documented mature products and so on there might be very edge cases where um there it's not a deadlock is deadlock is too strong a word that that the protocol gets into an awkward and a stuck state right deadlock is too strong and so the message the the the the key you know take away from this is that we really need to have uh transport reliability for 3.5 so 3.5 has to be received by G2 right and so in the case that that G2 dies crashes and 3.5 goes unanswered what will happen is that the asset has been extinguished in Network one but in network 2 it's been self-assigned to G2 so G2 still owns it but Bob hasn't received it right so this is an awkward it's it's it's it's an awkward said it's gone it's been it's been um recreated it's yes it is in network"
  },
  {
    "startTime": "00:24:01",
    "text": "too but it's an under the wrong owner G2 is the owner not not um Bob and so uh it may need manual intervention in the sense that Bob knows this is um coming this asset is coming because Bob's application is waiting for it but it's still stuck at G2 and let's say G2 crashes G2 needs boot up and say okay this asset uh is is uh self-assigned to me but it's really needs to be assigned to Bob and so then um uh G2 needs to assign this in 3.6 a to Bob so so the AI for me is to remove the word deadlock from the um from the document and also from this diagram because it's it's the wrong word it's just it's called a heuristic State and it's kind of a very specialized terminology that um uh the database people use uh go ahead Rama practical matter can we I wonder if we can handle this uh you have a G1 is has committed to sending 3.5 right assuming it's able to carry out section three point Sorry extinguished if if it does that then assuming both both given G2 are compliant and neither of them are behaving in a Byzantine manner then uh G1 comes to sending 3.5 so if it cannot send 3.5 then in one word will keep retrying so um uh then G2 if it does not get 3.5 within a particular timeout it can probably just give up and if if G1 uh I mean if this they"
  },
  {
    "startTime": "00:26:03",
    "text": "can't follow choose to follow the protocol so if G1 fails to submit send a 3.5 in a way that it knows has been G2 and the timeout is passed it knows that its extinguished should be reverted and G2 knows that it it should not proceed so that's something they could do but of course it's uh there are many different kind of cases that's right so so the point of this is to communicate to the reader that we are aware of this very edge cases right it's almost um you know a contradiction because um we've said from the beginning we have to have transport liability so you know 3.5 you know G1 can resend 3.5 multiple times right until G2 receives and so this is you know this is part of the crash recovery that you know G2 or G2 backup needs to understand that it's waking up from a crash State um and so so if if we number one if we remove the case of message loss now messages do not get lost today I mean none of my Netflix movies ever get lost the internet is so reliable um you know so assuming you know we say it's got reliability that really it's G2 crashing that that is the issue although of course you could have a Dos attacks a Dos attacker could be monitoring this and say okay at the right point we're gonna you know um you know flood you know G2 with all these messages to make it you know you know dysfunctional basically but but yeah so this is this is also part of the session resumption uh that we need to handle uh and um in um and Raphael can talk about that um maybe after this but in the draft a court the course had version two there is a new section on session"
  },
  {
    "startTime": "00:28:01",
    "text": "resumption and we've we've been having uh some issues with the the diagram so there is a missing diagram uh in um in the text but but there is a new section there if you look um which is now uh section 10 called session resumption so uh uh Raphael is proposing uh to use the um primary backup model as as the model it's it's the easiest one that is two this primary backup and so primary backup is configured to understand the current state before G2 uh actually crashes so G2 Prime knows how to pick up okay so maybe that's a good segue actually any questions for me before I hand over to Rafael okay Raphael all yours thanks Thomas yes so we've been working a bit on the session resumptions this is also work trying to work with andravus which is on the call he did an excellent implementation of these functionality in our open source implementation of set B at hyper Roger cacti so this corresponds to in the set the draft section pen I believe exactly 10. in in section 10 we are referring to the crash recovery drive for a more detailed overview of how we do the logging and therefore are able to capture the state at every point in the process in the core draft we are giving considerations on how to do the recovery itself so the recovery itself it's based on um a rather simple primary backup mechanism"
  },
  {
    "startTime": "00:30:02",
    "text": "that Andrea Augustine I studied a while ago where each Gateway on the setup phase defines at least of backup gateways so in the form of public keys that can be encoded in X 509 certificates so upon crash the counterparty gate will wait for a certain timeout which we call the max timeout and it will basically either wait for normal messages of the protocol or for a recovery message if the gate recovers sorry if the Cato receives a recover message it means that the counterparty Gateway crashed and was able to recover before the next timeout if the next time I'll expires then the counterparty Gateway initiates a robot procedure so we introduced the rollback procedure when the crash seems permanent or when it's sensitive to issue a rollback instead of waiting even more for the crash gateway to recover so the crash Gateway we we can assume that it recovers by itself called the self-healing but we focus on the primary backup mechanism because it's probably uh more reliable and we can also add parallelization making it more efficient so in this primary backup mechanism the crash Gateway is replaced by one of the backup gateways that were accorded in the beginning with the counterparty Gateway"
  },
  {
    "startTime": "00:32:00",
    "text": "such Gateway one of them identifies itself to the counterpartic Gateway that didn't crash and and they can resume the process from there we defined a few messages for that information flow to to be exchanged which is the recover recover update and recover success messages so when a Gateway crash title recovers it sends a recovery message to the counterparty Gateway it informs the counterparty K2 of its most recent State the specific certificate information that the counterparty needs to verify the identity of this new Gateway because note that the recovered Gateway is a backup Gateway it's not the original Gateway so session the the session needs to be a new session needs to be created between those gateways PLS sessions Etc after that the counterparty Gateway sends back a recover update message which also informs the latest state of of that Gateway so the recovery Gateway can compute them let's say the Align state after the crashes so there is a computation step which um computes the latest state after the crash and after the the crashed Gateway now the recovery Gateway computes the latest State then it sends the recover success message and and both gateways at this point are agreeing on the same state after the crash so that they can resume the setup process so this is the underlying idea we'll still have to add a few drafts we had some formatting issues hopefully we'll resolve this soon and and adding a bit more details about"
  },
  {
    "startTime": "00:34:02",
    "text": "these these techniques so the they're quite uh well documented or rather documented in detail in an academic paper that Andrea August lab uh but we need to Port some of those details to this document and also the crash recovery document so that's what we've been doing in the last in the last few weeks any questions so so Raphael um the the plan is for you to be presenting in San Francisco right you're gonna you know he's got slides let's let's just say so so so we have probably you know a more extensive discussion about about this yes and and probably it's worth explaining to folks who are not following this closely the the mechanism to actually recover and so on currently is out of scope right it's the the thing that the scope is the the the arrows in between the the two columns but like the context ID context setup discussion we need the core to be informed by at least some you know within some crash recovery scheme or architecture that informs sat core and so Raphael's picked one which is the easiest one which is primary backup right but but if you are interested uh I know Raphael and and Andre they have papers um academic papers that talk about all sorts of kinds of um other schemes Paradigm schemes to do recovery uh for gateways so if you plan to write this in a"
  },
  {
    "startTime": "00:36:01",
    "text": "separate class I plan to add this to uh there is there is a section uh in so when we talk about session resumption in section 10 again it's it's the first text you have that you know so the idea would be there's a G2 would wake up or G2 uh backup due to Prime will back will wake up and say hey I want to resume and so the question is what does G2 backup tell G1 in that resume message so there's at least we've identified like three possible Flags which is in in capital letters there in section 10 which is recover recover update and then the response will recover success right so so we're we're Limited in the current scope to just have two messages that can also loop around right there's the I want to resume resume request and then G1 and say okay yes let's resume because G1 can say okay hey you've been silent for 60 seconds I'm giving up right that that will also be the default behavior of G1 right this is you know worst case scenario G1 but is there a way for uh us to inbuild just a a simple message message sort of um two message to three message addition that we can ideally insert anywhere in the flow so it doesn't you know it could it could crash you know for example looking it could it could crash in stage you know um stage two and the lock assertion message was sent by G1 G1 crashes can we use the same pair of session resume requests and request you know granted you know anywhere there that's kind of the goal I don't know if it's achievable but I think um that was the thing that that I think Raphael is trying to communicate but what that message"
  },
  {
    "startTime": "00:38:01",
    "text": "contains that's the TBD and I think um uh you know knowing more would require there is a separate draft there the Raphael's got a new draft uploaded and that will inform us well what should be the body of the session resume request message the fields yes so we basically Define we say that there are some interfaces to do this process in the core but the the core isn't normative about what to implement and the Crash recovery draft suggests an implementation or a specification rather of of that crash recovery mechanism but the uh tell me in the present scope I mean as a scope seems to cover the entire process of moving an asset from one Networks so so the the firmware answer is let's finish the first three drafts that we have before we add more but it doesn't mean that we should not continue working and I've said to Raphael like you know if I understand correctly and there's there's plenty of experience people here uh you know from the ITF that they should continue working on the draft because because at some point it will become relevant and there might be sufficient reason uh after the the three is finished to actually adopt you know the cross recovery for example as um you know a proper a formal working group item and the same uh Rama with the views right which is why I was asking you the views things actually absolutely needed right so this is in this discussion about tokenized deposits this is about this is about representing your bank deposits which is what the bis people are talking about Bank of international settlements as tokens on a ledger that's a private"
  },
  {
    "startTime": "00:40:00",
    "text": "Network right and so if I want to sell my my Ferrari to you not that I own a Ferrari uh I I need some proof that you have liquidity right and for those who are following the whole um you know FTX thing and Terra Luna liquidity is a huge topic I mean both these you know particularly Terra Luna Terra USD and Luna um it was the lack of proof of liquidity that just brought the whole thing crashing right so so what is so proof of liquidity would need to be something like what you have in the views which is this here's my proof what's the network idea what's the block ID what's the transaction ID right which is what you already have there in the in the snippet that that you gave us on the mailing list Rama okay thank you Rafa anyone any got any questions about about this this topic foreign not on this topic but going back to the message diagram I'm still wondering where where in this whole process does the asset move from G1 to G2 right right so so so it's a it's a burn so David it's a burn and myth model so so formally speaking uh by the time we reach message 3.7 formally the asset has moved when do the bits in the asset actually"
  },
  {
    "startTime": "00:42:00",
    "text": "move from the from G1 to G2 you know that that's going to have an effect you know we're talking about recovery we're talking about resumption yeah yeah so so in the burning mint model it's not like transferring bytes as in you know using uh you know uh something like srtp or something like that to do probable transfer transfer it's it's burning mint you destroy it and regenerate it and the model doesn't necessarily work for every single type of asset on the planet right so if somebody could argue that you know for cbdc's it doesn't work but but Alex did you want to speak up yes I I only wanted to add that um you know according to the satp model uh the asset moves at the point I guess when it's deleted from uh the initial network but you will notice according to the diagram that the asset is present in both gateways at some point so because this is the way the the mint and burn model works first we created uh in the account of the second Gateway and only after we are certain that this asset now exists on the second Network assigned to the second gateway then we burn it so essentially there will be two representations of the asset present at one point but we can consider that once it's deleted from the initial Network that's when the move effectively happens thank you Alex any other questions before I I want to say one suggestion for the uh people going to the San Francisco uh ITF so right now we're listed sapi to"
  },
  {
    "startTime": "00:44:03",
    "text": "be meeting on the Tuesday morning and so for those who are going to be in San Francisco I was thinking that maybe we could get together for lunch and we certainly want to invite the ladies Thursday morning Tuesday Morning a Thursday morning oh they moved it okay on Thursday 27th that's what I thought yeah okay okay whatever morning is don't go away for the lunch you know hang around and we can all get together and get lunch and we want to extend an invitation to Paul of course who's been tremendous uh helping us here so Paul if you're around uh uh the we could we could shout you lunch I don't know if ads are allowed to drink beer at lunchtime but yeah the the beer you know it's also you're right it's not usually but it was Thursday until uh a couple of weeks ago so you're right Tuesday driver okay and any thing else folks any questions issues concerns ideas proposed you know new work items things you guys want to work on you know nothing for me all good quick uh mention that we have a uh so under hyper Legend uh we have the cacti project right uh doing interoperability so hyper nature organizers the mentorship program every year which uh and they pay people and people can apply to uh work"
  },
  {
    "startTime": "00:46:01",
    "text": "on particular features and uh so we offered a project to implement satp within cacti using uh the release relay company three days being like Gateway components so just want to let everybody know that we have an active implementation going on and um I asked the intern to be on the scholarships as possible uh he's on vacation right now but uh you know as any any feedback that uh we get when it comes to how easy it is Implement satp uh if there's something you've missed out then uh I'll communicate that in the or on the meeting so there's something that Rafael and I are uh cool thank you Rama any questions for Rama oh okay folks so so hearing nothing I think we're gonna give back nine minutes to everyone's calendar so I hope we see as many as possible you guys in San Francisco um and yeah just put that in your calendar the Tuesday morning and Tuesday lunch uh for our group oh okay folks so I don't know how to uh actually end this session maybe Paul you need to uh actually click a button somewhere to to end this session the the actual meet Echo but I think if people just log off uh meet Echo will probably terminate itself yeah I don't have any special permissions here as far as I can tell so we'll just all leave and hopefully it'll work"
  },
  {
    "startTime": "00:48:03",
    "text": "okay all right thank you Paul thank you folks so uh we'll see everybody in San Francisco okay bye thank you have fun at the conference bye"
  }
]
