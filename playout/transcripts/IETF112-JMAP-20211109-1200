[
  {
    "startTime": "00:00:04",
    "text": "maybe that's right according to the clock it's time so how about we do this thing sounds good so i guess i'll be uh i guess um brian and i discussed earlier i guess i'll be leading it because braun is such a really world-class note taker so that's great works for both of us so welcome to the gmap meeting at itf 112 we'll begin with the with the note well which from looking at the participants list it looks like everybody is familiar with but we'll we'll uh again say if you're if you're not that you should pay attention to this because um it governs the uh policies on uh intellectual property rights for things that you say in ietf meetings and participation in ietf mailing lists and so forth so if you're not familiar with it please do read it and we'll start with an agenda bash we're doing the intro and note well now as you know um uh ron's gonna start with uh gmap blob i'm gonna go through s mime on the on the mail side of things and then delve into calendars and tasks for a longer period of time uh contacts and then alexi will be talking about some work that is going on in the extra working group that is uh comparable that you know has a relationship to things that we might want to do when i'm in jmap as well"
  },
  {
    "startTime": "00:02:01",
    "text": "so that's that's coming up afterwards we've got a little bit of spare time 15 minutes or so at the end if we're on schedule and then we will go through our usual milestone review at the very end any adjustments or comments on the schedule from anyone if you add this up carefully you'll discover this isn't even filling the full two hours um i was expecting more work to appear at this meeting but we had an interim just a couple of weeks ago so a lot of stuff was resolved there and not much new work's been generated since um in fact the next sli slide on this set is my blob slide so i'll if there's no agenda bashing i'll just go straight off this set of slides if you want to keep them going jim the other thing i did want to say um up the front of this is that i've seen in some other working groups there's been a bit more discussion discussion around the code of conduct bcp 54 area and in particular being welcoming to new people and not scaring them away too much with weird jargon and and dismissal um so definitely to anyone who does come in um though of course i'm talking to people who aren't here yet in a lot of cases please feel free to pop in and ask questions if there's something you don't understand it's quite likely there might be someone else who doesn't as well so please do ask questions if anything's unclear so this slide here is talking about blob um and this is a draft that is close to finished now i have not uploaded the latest edits in it that have come since a couple of weeks ago the one thing that was pointed out that i really hadn't done was defining the encodings really well um we have space64 but base64 wasn't specifically referenced where it came from was just assumed so i'm going to add references specifically to rfc 4648 which defines it"
  },
  {
    "startTime": "00:04:00",
    "text": "but the question then is should we define as hex as being a fixed case at the moment it's defined as being lower case in the document but rfc 4648 says that it's case insignificant you can use upper or lower or any intermixing of them does anyone have any comments one way or the other on that um likewise should we rename as hex to ask base 16 just to align nicely and would anyone want base 32 should i include it for completeness or just leave it out because i didn't see a use case the other feedback i had was the expires property we the cyrus server at the moment sets expires so it went into one of the examples and that basically says this blob will sit around on the server for a week before it goes away so it gives a date to use it by but that's not really defined anywhere and i wonder if it's better just to not do it because the there's no defined assumption of that so i welcome comments on any of that um once i have the feedback i will update the document i think jim i'll ask you to do a working group last call at that stage because it's i believe it's basically done neil do you want comments now sure we've got time my views on those three would be uh uh mo everything else in gmap is case sensitive and it's generally nicer if you can assume that it is because then you can just do easier comparisons uh rather having two case and sensitive comparisons so i would lean towards specify must be lower case it's generally what we use for that kind of thing uh i would pick as hex instead of as base 16 because i think it's more obvious just if you haven't read the specs what you're gonna get"
  },
  {
    "startTime": "00:06:00",
    "text": "and uh i suspect no one will ever use base 32 but who knows but probably not that's my thoughts hey thank you any other comments ken yeah i'm just wondering if if we even need as hex was there a use case in mind brown to have that in addition to base64 you've grown you're muted yeah yeah local mute you couldn't see it yes thank you yeah i'm happy to do that i'm happy to just ditch ass hex i don't see a particular use case for it asp64 gets you the ability to transfer binary in a fairly efficient format so yep that's it that's easiest i will ditch it and as far as expires i don't have a strong opinion either way um if we think it's useful it should be fairly straightforward to document i would expect cool yeah i'll just get rid of it anything else so brian you're going to make those changes before we go to a last call yes i will upload a new draft and ask you to do a working group last call with that one okay i prefer to start that next week after i'm back just so i'm not yeah yeah cool all right let's see what else we got in the slide deck here oh that's milestones okay"
  },
  {
    "startTime": "00:08:00",
    "text": "we'll come back to that so uh i guess s mime is next is there is there any more discussion on blob okay so let me figure out how to share the uh whoops i think i hit the wrong button here alexi go ahead uh i'm um hello can you hear me yes i can um are you happy with flipping through slides or i forgot how to do that to be honest i'm happy with flipping the slides if i can figure out how to oh there's the closed deck button it's down there okay i was trying to hit the little a little uh chair icon for it so all right hold on a sec here so [Music] yes there it is so there are actually two is mime uh one is the old one which isn't just went through hg last call and i will talk about this first and then i'll talk about the new one so um yeah i think there were quite a few changes since last time i i really remember i couldn't make it to jmap session in july so uh yeah lots of changes between version 3 and 10 which is the current one major things is basically addressing uh comments from gen art art directorate etc"
  },
  {
    "startTime": "00:10:00",
    "text": "some comments about better formatting you know split into sub sections you know make it easier to read um some missing references the biggest one were um clarify the implicit trust model that basically you need to trust your server with the trust anchors and doing the right thing and not not returning bogus information to you and then uh roman also uh suggested some extra checks for the security considerations um it's basically stating why certain things are not a problem but instead of just assuming people will figure it out just sort of spell it out so that was good um there were also some changes related to s mind status attribute extensibility main issues around there i i will actually have a slide on this but um the document allows for sign messages but it's also kind of explicitly allows for sign and encrypted without but that is supposed to be an extension to this that's why the complexity here um yeah and then there was also requests to extend email query to actually be able to search for all this mime send messages all these names and messages with valid signature this sort of thing next slide so um i will just go through various issues that um sometimes i have an opinion but i thought it would be really good good idea to check with the working group several people asked about why specifically 10 minutes caching time"
  },
  {
    "startTime": "00:12:03",
    "text": "um to be honest i sort of picked it from the air i thought you know i didn't want it like to be 30 seconds um the reason for this is uh because serial retrieval and certificate verification and signature calculation it is kind of cpu intensive and possibly network intensive um so we want to protect from the denial of service attacks um certificates don't expire very often so if there were no crl in existence then probably checking once a day would have been okay but if we actually want to allow i don't know suddenly i discovered that my certificate is uh macro keys compromise i requested revocation and how quickly do you want the service to figure out that the certificate was revoked um so um i'm thinking 10 minutes it's probably on the low side maybe maybe change it to one day or something like that but i sort of really don't have an idea any suggestions alexi is is the ten minutes uh like advisory time or it's sorry i haven't actually read this bit of respect at least recently like you say it must be i'm just wondering whether we should be specifying exact value or give the reasons and recommend a value if you see what i mean um yes i think it should be advisory but you know i you don't want one server to implement five hours in another ten minutes just because we underspecified"
  },
  {
    "startTime": "00:14:01",
    "text": "in that sort of sense i would like to put the text probably should be no more than x if it makes sense yeah okay uh i i guess one one comment i have on on the revocation time is i mean verification doesn't actually have i mean doesn't happen all that often i mean when it's revoked you you perhaps want to pay attention to it fairly quickly but a day certainly seems reasonable i mean if you if you are checking crls you i mean checking a crl every 10 minutes is a lot so um i think a day is is a is a good uh ballpark okay yeah i was just um i was thinking about uh like star certificates very short certificate they don't have relocation time they just have very quick revocation time a very quick expiration time and i was wondering what they're doing there what's the granularity just for comparison but yeah tend to think that one day is probably good enough if you have opinions if you want to send on the mailing list please do otherwise i'll change the default all right next slide right so as meme status so a lot um basically i had weasel words in the document saying well you can add extensions and various people"
  },
  {
    "startTime": "00:16:00",
    "text": "started asking me what exactly it means and how does it affect um um calculation certain properties like um there is one property that depends on all messages of the valid signatures so if if a new value is added which is sort of similar to signed verified like what i had in mind was encrypted plus sign verified then it should be treated similar so um two options here a lot of people asked about ayana registry i don't really have any [Music] extensions beyond signed and encrypted together for this so i'm not sure whether registry is going to be much of much use the alternative is don't create the registry reserve a couple of extra values don't fully specify them but uh allow extensions to clarify that so what do people think and murray if you have an opinion as well i have an opinion of sorts which is basically that jmap is designed to have you have to opt into capabilities to get additional things so i don't think you need either an extension or adding known values because a new extension would by opting into using it would automatically make those values become available and that extension would also define them so i don't think you need to define additional extension points here"
  },
  {
    "startTime": "00:18:02",
    "text": "just say this is this is what this document defines and allow future documents to to change it okay i think it's important to actually point out that certain things are intended to be extensible that was you know and just add minimal text around that but yeah yeah but yeah i don't think you need to actually go beyond that just say this is designed to be extensible yeah i agree i think because you have to opt in that makes sense and then you don't have to bother with a registry for this which it's not really a registry thing like this there is a lot of work for not a lot again yeah i i cannot see like million different values being being registered that's just not going to happen yeah yeah so can you speak up a little bit nil i was just saying can you speak up you a bit uh oh sorry i was just agreeing with braun i i think um yeah because you have to opt into the capability um that's the extension point and so yeah no need to create a actual registry here okay am i right i think i agree um just to play devil's advocate the ex the an iona registry might be useful as an index to these if more of them were to appear but if you're it also allows for creation of uh an s mime status value that maybe doesn't refer to an rfc maybe it's defined as someplace else um"
  },
  {
    "startTime": "00:20:01",
    "text": "if you think those things are unlikely then i don't think it's really necessary yeah and there is a registry of gmat um extensions so you'll be able to kind of find it kind of via that i guess for the capabilities yeah murray just reminded me while i actually like ion extensions um yeah i would i would probably recommend that um if another extension comes along that extends it that could create the registry as well at that point um but it saves us having an iona registry with two values in it that never gets updated which is kind of the alternative there okay fine um all right so i think i know what needs to be done it's more like option two but i'll propose some text right next slide so um in email get there is a attribute that says uh give me as mime status at the time of delivery um do we want to be able to do something similar in email query we have uh so the document has um has verified this mime or has a smile or something like that for uh smile messages that have valid smile signature at the time of request"
  },
  {
    "startTime": "00:22:00",
    "text": "should we allow similar thing for the time of delivery sorry was that two separate questions one of one about email slash query and one about um at delivery and at just about email query because email get already has an attribute for this basically cool i think neil was probably going to say the same thing i was which is yeah you might as well define it um the server can always say cannot do it if you try and query it and it can't but yeah i mean have you what are the use cases are interested actually like i would have thought the delivery one might be more common than the uh verified now i think you might want both as in you sort of want to know whether it was validated delivery time but if you really if your message is really old then it will expire um that's probably useful to know as well yeah you probably don't want to be able to do a query across the whole server for has valid s mime now because that could turn into a really expensive lookup if if you have to do s mime validation on every single email in your store well hopefully caching will help but yes you have a point would you still be pretty bad potentially but at the delivery time we should be presuming that's caged at delivery time that sounds very reasonable to me yeah okay fine so i'll add this in next slide please"
  },
  {
    "startTime": "00:24:04",
    "text": "um yeah this is uh another um thing basically um another optimization in the document is that a lot of clients what they do they just want initially to just play a list of messages and they want to display an icon saying that this message is like i don't know as mime signed or bgp signed and then when you click on the message then they will tell you whether signature is valid or not um so signed attribute value allows so we just say well syntactically there is a s9 signature there but i haven't verified it yet now that there is a attribute on email get for status and delivery basically the question was asked can the server ever return sign just sign as opposed to signed uh failed or signed verified the way i implemented it is a bit of cheating in a sense of um actually as mime status so a delivery doesn't need to be calculated at delivery it just when you ask for it it will calculate the status as you know as was valid at delivery and just cache it from that point so it's actually despite the name it doesn't have to be done at delivery time um so proposal is keep signed because it's uh still useful optimization and clarify what this mime status of delivery means how it can be you know if it's easy to calculate a delivery it"
  },
  {
    "startTime": "00:26:00",
    "text": "can be but it doesn't have to be signed by anyone right not there isn't any sense of alignment with from address or anything like that no that uh that will be uh done when specif uh asmr status is explicitly requested uh for the message and then it will be signed verified or signed failed if it's misaligned right but i'm thinking of you know signed by whom i mean there could be a signature from somebody else potentially right um well the document does say that it has to match the from okay that was my question thanks yeah this proposal seems fine to me i think all right thank you next slide so ben wrote that the immutability of s mime status and delivery might have unfortunate interactions with trust anchor changes so i think uh only actually i should have double checked i'm pretty sure that s mime status said delivery is marked as server set and i just checked yesterday that it's not the same as immutable so server can change the status if an anchor got added and now it became valid basically um yep so i think that's right just clarify that that this might happen"
  },
  {
    "startTime": "00:28:01",
    "text": "to change the status if it's trust train trust anchor changes so right can you repeat that is the is the server required to change the s mime status of delivery if the trust anchors change i i'm just looking at this and looking at the name and thinking maybe what we want is s mime was once valid which covers delivery which covers you change the trust anchors and it became valid a your case saying in the past the s mime status of this was validated and good and you can also clear that if there's a certificate revocation but otherwise you keep it because it was good it was good for any other that name would imply to me that it wouldn't be revoked once it gets set it's always true you know was once you know you're saying if you revoked a certificate it should go to false that seems a weird transition yeah you want to revoke it yeah but on the other hand if it was revoked after it was delivered so it might have been valid at the time of delivery yeah the the revocation is is basically saying we think this leaked at some point would be nice if you could say when you think it leaks so if you have something that that you verified before that time then you think it's still okay well there's also the converse case isn't there where the you know a new trust anchor gets added uh af maybe after the message was delivered and uh it looks invalid and but actually is yeah but i mean that would be covered by this because you're saying it was valid at some point and the some point is"
  },
  {
    "startTime": "00:30:00",
    "text": "after the trust anchor gets added right but but if you're saying it was valid at some point then you know perhaps it still means that the the server status needs to be updated after the after the initial delivery and i i guess my question is whether whether we're explicitly requiring the server to go through and make sure that all of those things are valid i can imagine for a a large email service that you know if if a trust anchor was added or removed there might be significant overhead and trying to make sure that all of the client mailboxes had all their messages checked yet you would need to key um the messages in some way being able to search them by which which signature was on the messages right as a user check the one that failed verification before right so yeah it's possibly expensive but i'm tempted to say that probably implementation should do that if you want to keep yeah as a user if i had this feature on my server what i would be wanting to see is should i trust this message like that's that's the signal i want yeah and that that is true in the case where the message arrived and was signed by a key that was valid at the time and was validated by the server as being valid for that signature even after that that time now expires so if i come back and look at my mailbox 20 years later i still want to see that that message is trustworthy because i validated it at the time and the key was valid at the time and that certificate has not been revoked since then saying it was compromised if this on the other hand if i received something that was signed with a compromised certificate and that certificate then gets invalidated i want to know not to trust that message anymore like that that's the cases as as the user"
  },
  {
    "startTime": "00:32:00",
    "text": "what what i want to know is should i trust this message which yeah and i want to be able to tell that after the the key expires so are we treating revoked certificates differently from expired certificates then you mentioned like 20 years later yeah i think i think so that if the if a certificate gets revoked then you need to to know that you shouldn't trust this message if it's like close by the semantics of revoked and expired are very different so yeah well they are but but frequently exploration is used as a proxy for you don't need to revoke it anymore after after it gets fired well but the the point is that revocation says i know this was compromised you might you you don't want to trust things that were signed before the revocation where expired says that it was good until it expired and anything that was valid before the expiration needs to continue to be valid so that's the difference in the semantics sure i forget does the crl have a revocation yeah it has a revocation date on it yeah but does it can can it be uh predated so but as a crl typically go ahead very good uh a crl typically doesn't have entries for certificates that have already expired i mean part of the reason for expiration is to constrain the sizes of the crls get to be so what's the risk case here that do you discover later that the certificate was compromised but it has already also expired so"
  },
  {
    "startTime": "00:34:00",
    "text": "people may have received messages from it before the expiry date that they should no longer trust that the question is do we need to handle that case and if so how do we handle it but otherwise you don't want the message itself to just disappear when the key expires which it goes untrustworthy well it it shouldn't disappear but you you shouldn't assume that i mean it's almost like there's a third state here with with expiration that says i don't know whether it's valid or not anymore um because yeah but you know pretty well the user experience for that would be terrible i know and and it's but but it's for that reason that generally you considered uh expired certificates to be invalid i mean they're invalid for a different reason than a revoked certificate but they're still invalid well darren they're invalid for new messages that is different from having never been valid right which is what it feels like to the user if they try and validate that message in the future right if you validate a message today with a valid certificate and uh a year from now that certificate expires the message is still considered to have been validated and any user experience that doesn't include that is going to be terrible we have first-hand experience of this um because uh apple profiles which is how you can easily install mail contacts et cetera settings do exactly this uh after our certificate uh certificates valid at the time of installation later pointed expires we renew it and now if you go to your settings it says that the profile is uh marked as scary red warning thing even though it works fine but then the users ask us what's what's going on and yeah it's so silly it was valid when they installed it and then suddenly you decided later that now it's expired you're going to show a warning on it"
  },
  {
    "startTime": "00:36:10",
    "text": "alexi i just have um another question on this actually uh okay not because because it's not immutable uh does that mean if it changes or could have changed the email will show up in email changes or no it needs to be documented either way i guess normally the email slash changes would return anything where one of the mutable properties you know the ids my of anything where mutual properties may have changed okay can you send me a quick note on this yeah so that time don't forget uh so where are we on this one braun wants a semantic change well slightly different attribute well i'm wondering if it needs a name change that's all okay the description the semantics as well yeah the semantics and description need to match um but what i want from this is to say this was considered trustworthy at the time it was inserted into the mailbox it was validated by the server it hasn't the key hasn't been the certificate hasn't been revoked since yeah i i think the actual name is fine for that i think that's just the description you need to go with it i don't think we're going to get all of that into a name i think s mime states that delivery is perfectly good some short way of summarizing that okay fine i'll tweet the description then so ned's comment in in the chat there which looks like it was about now from the time stamp was the name says s mom"
  },
  {
    "startTime": "00:38:02",
    "text": "status at delivery that seems to me to be the status at a fixed point in time which is my argument against the name because that the fact that that assumption is made from the name yeah it's the status at that point in time but not it's of the message if you validate it at that point in time not we validated at that point in time and now that's what we we're showing potentially yeah yeah can you suggest i know what you mean ron but i'm just not sure you're going to come up with a name that's any clearer without being like 10 million miles long yeah all right um i'll put myself in action to think about that name and see if we can come up with anything clearer to propose cool all right next slide um yeah okay so um basically signed verified and sent failed were going in too much details about which conditions should which check should be covered like serial checks and various other things i think roman suggested just to reference existing rfcs i don't think it's quite sufficient because implementations vary i don't think you know existing rfc say for example that the from had a field email address has to match from the certificate so i will try to add references well they already mentioned earlier in the document um"
  },
  {
    "startTime": "00:40:01",
    "text": "but i'll try to clean this up to make it more explicit saying that these are important examples of things that need to be checked and yes answering my own question i i think i do try to fix some minor deficiencies in prior rfcs but um i kind of don't want to propagate them to new implementations i think that's it on this one so um yeah this was actually quite curious uh very good comments from isg but none of them are blocking so in theory i could have just ignored them all but i think it was a good discussion to actually um they made me think and i think it was a good discussion today um so i'll i'll post a new new draft uh i'll ask people to double check on the maining list and and then we'll hopefully get this approved right shall we move on to the um of this mime draft now here with me a sec while i get used to this"
  },
  {
    "startTime": "00:42:00",
    "text": "i'm having i keep forgetting where the right button is to share from the there we go i found it it's okay the share preloaded slides one looks like a document yeah okay so what is my signing and encryption is that the one that you're looking for alexi yes okay hold on a sec i've got the wrong ah okay i'm i'm messed up here sorry about that where is the right button so it's under your name second one along it looks like a document share preloaded slides good thank you i i got the slides up on my own screen because i used the other button that looked like a folder yeah yeah okay hold on a second at me taker your interface still confusing unfortunately signing in encryption there we go thank you sorry sorry for the segue here so the previous draft was about signature verification on received mail and this one is how to generate sign and only encrypted messages when sending um fairly simple really email set has two extra attributes both optional uh and both by default false so if they're not specified then basically if the gj map behaves just"
  },
  {
    "startTime": "00:44:00",
    "text": "as without this so if both are specified and true then it's first signed and encrypted next slide so yeah i did i posted the new version in july then i think i made after the adoption call i i posted it as a working group document and something has changed in um xml to rfc rendering so it's actually though there is a bug that it sort of move text in random ways um when this space was used that looked very awkward so i just noticed it a few days ago so i yesterday i think um i posted the new version to restore um the text so otherwise there was no changes from zero one to zero zero so open issues um it's quite common well some implementations do multi-part sign some some do application to kcs7 mime one signing do we need a way to control this i have a suggestion yep um these these sound like they're the kind of things that you want to set on on an identity rather than on individual emails um so you would set this on your identity sounds good to me and presumably that's where you would set um key names or or key data as well at the moment it's out of scope it's sort of magic but yeah if if there was an extension for that that's where it would go as well yes"
  },
  {
    "startTime": "00:46:00",
    "text": "um is it worth doing that in this extension just defining that it's still on the identity or or defining how to specify it on the identity as in if you have multiple keys which one to use yeah so you you would create an identity for each key and you would select the one that you wanted presumably or you'd have some way to to specify the key as part of the the signing so so do you actually put the key material into the identity that seems possibly not and if not a way to get reference and then bronze you need to be able to get the list of what keys i have i don't know i think it's going to complicate it a lot once you start yeah i would rather not put put the key material itself it just say that's out of band whatever you know however you manage it for your system uh like for us is going to be like pkcs12 stored in ldap for example which is uh as much as i like our implementation i don't think everybody will implement it like this yeah go on i just wanted to ask with the creating the uh structure if the idea you would create the body structure as you normally would with jmap and then wrap that whole thing in a new kind of mime like the multi-part signed or yeah yeah okay cool so um i actually to be honest i struggled here a little bit because what my implementation does it's actually it creates message on send um but i thought it would be slightly better to"
  },
  {
    "startTime": "00:48:02",
    "text": "create a message and then just like keep the send sort of simple but i'm open to suggestions well are you storing the signed version in your draft yeah then yeah then i think you want to do it yeah when you create that email not in the sending bit yeah so i think email set is better for that so that's um but neil if you can double check that what i wrote it actually makes sense yeah i'll uh read through that and see if anything jumps out right so um okay suggestion so far is multi-part sign versus application because seven of mine uh have a boolean in identity i assume header protection is similar thing and the identity possibly be able to list keys without managing key material itself in the identity object um then the other thing that is an open issue is whether automatic smile decryption is something um we're going to have there here as well again it can be yet another extension i suppose or it can be just part of this just for convenience um i'm open to suggestions i mean some of the nest uh specification i forgot what what the specification was it suggested that you"
  },
  {
    "startTime": "00:50:00",
    "text": "automatically decrypt and store decrypted version and secure store uh so that you avoid the issue of the expiration all of this is the idea you would only decrypt on demand like when you fetched it or you would um [Music] like the secret store where yeah server or client yes you can yes i would decrypt on demand i mean i suppose you can out of the crypt everything but uh yeah i'm just wondering like how seamless should it be to the client or should the client need to explicitly request to get encrypted kind of they just when you fetch it with email get it automatically decrypts it in some way i don't know whether that's actually good or not there are lots of things that can be uh if it's a single simple structure like if it's application pkcs7 mime with just encryption or signature and encryption then you can sort of do that automatically if it's uh if you have a bunch of encrypted attachments in a message then it becomes more interesting i'm happy to uh leave this be and just people can think about this because obviously it does have quite a bit of complexity yeah email get already defines a bunch of boolean options like fetch text body values fetch html body"
  },
  {
    "startTime": "00:52:02",
    "text": "values max body value bytes that kind of thing that control what's returned so adding another boolean for decrypt seems like an easy way to do that so if you want it to be decrypted and get back a part of the decrypted body you just pass a header or pass a an extra property in the get at the top level okay can you um can we minute this or can you send me an email yeah both oh definitely thank you because yeah i was thinking about like you know create create a new blob ide and and then parsing to email parts but your proposal sounds simpler write any other comments on this one i think i have one more slide that might be it i didn't find one okay then then just did three slides there i mean in certain way this documented is other than decryption um it's kind of much easier because there aren't that many attributes um on the sending side um but there is quite a bit of complexity implementing it obviously where the s9 signature verification sort of the reverse cool i assumed that these would go a lot faster than they did which is probably because i didn't read through the slides and work things out so we're well behind on the agenda but luckily we have heaps of extra time"
  },
  {
    "startTime": "00:54:01",
    "text": "but i guess we're up to germap calendars which is not going to take the 20 minutes that it that we would expect that isn't to nothing much for this one i don't think there's actually much to say like especially as we talked about this at the interim meeting um a few weeks ago and honestly it's not a lot of time for much to happen um we're still trying to get some implementation experience uh i'd hope to have that by this meeting but um various things got in the way uh but we are so close to rolling it out in quite a few places so definitely by the next meeting um we will i've got a small list of to do's to the spec um based on our previous meetings and i'm being a bit lacks and updating that so apologies i'll also get to that uh yeah i don't think there's much to say today though unless someone wants to talk about it i suggest we move on to the tasks hi hey that was quick yeah quicker than expected okay uh yeah so uh today um haryo and i are gonna talk about jimmy for tasks so there is one minor change that i did since the last intro meeting ah perfect um i i essentially i i made assignee part of a js kind of participant role property so so it's a new value that it can be instead of having it as an extra object that basically is was the renaming of the the thing that is in js calendar in jmf calendar and we also have uh published uh the survey of various task systems"
  },
  {
    "startTime": "00:56:00",
    "text": "and this is where i give over to how you to give an introduction to it all right thanks um yeah just to to give some more context i think with jammer for tasks we are uh you know in an earlier stage than we are miss with a lot of other jmet stuff which i think uh started much earlier um and our observation which i think we in part already uh discussed in the previous meeting is a little bit that unlike email contact and calendaring functionality there seems to be more differences in tools supporting tasks and that led us basically to survey also different tools and to look a little bit into them in terms of how to design the jammer for tasks specification there is one major question which comes out from time to time and is also touched a little bit by the recent discussion on jaime fosseef on the mailing list and this is a little bit the discussion about you know what is what is the intention or goal of jmf in a certain sense so um and in in how far is it really um desired that jmap is also used by existing systems in order to adopt jmap to expose data which is already there and i think we discussed about that in the last ietf working group meeting and there was some positive feedback with respect to tasks to look into different tools which are not core groupware or webmail tools and this is basically what this survey was about so to look also not just into groupware and webmail tools what we also did but also into tools like issue tracking systems or those ken ben kanban style systems like trello and these kind of things and um yeah i think a handover again too yeah okay so so just a short overview of about what we what we did and and how we came to that uh for those results"
  },
  {
    "startTime": "00:58:00",
    "text": "so the the initial scope of the survey was that we we chose three different kind of systems uh group s systems like ox for example kanban style systems like trello as well as issue tracking systems like mantis all of them use tasks in in one way or the other and the goal was here again to identify potential gaps in the in current the jmap for calendar and also identify common or distinct features between those systems the approach was then to look at the ui features of each system could categorize a certain feature so we can compare the values and also can count usage across the different systems that we observed in the survey okay you can go to the next slide um so the first results can be found at the github feel free to leave comments there if you want um you can also could also upload new revisions in case that makes sense if there are some some if there's some important feedback um so the most of the most important observations of that survey um are that task systems are heterogeneous regarding some features so i didn't find of this of the system surveyed i didn't found this find a system that had implemented all features of jmf for tasks and so the result of that is that probably developers that look at the jmf for tasks back will not want to implement the whole thing basically and especially some more complex features is something that that some developers might want to skip and"
  },
  {
    "startTime": "01:00:00",
    "text": "it might make sense to to identify some that might be optional or separate from the core features but yeah core features is a good point there this is it also has become obvious that uh task systems are homogeneous regarding most core features um yeah that's basically the main point here i can i think you can go to the next slide again yeah so here um to spark some discussion maybe we listed a bunch of um properties or features that are currently within jmap for tasks but are not supported by all systems that i surveyed uh for example alerts and sne attachments recurrence or relation especially recurrence is for example a quite a complex thing to implement and if you don't need it at all for your application it uh it it might make the the spec a bit easier to read maybe i don't know it's it's it's a point for discussion the suggestion here is uh to to come up with a way to group them somehow uh and have a make them like an optional separate capability maybe some kind of an optional feature maybe okay and um yeah so they're also there i also identified some features that are not yet present in gmap for tasks but i found but some systems are using them there are some kind of complex properties like a checklist which we already shortly talked about in previous meetings um also a comment list or a discussion that is attached to a task which quite a lot of systems used also"
  },
  {
    "startTime": "01:02:00",
    "text": "quite a lot of systems used history where you could look at old revisions of a certain task and there were some additional simple key value style properties observed so the suggestion here is maybe to to extend gemma for tasks somehow with those features to support most systems observed maybe yeah i think we can go to the next slide again and probably discuss afterwards um so the next step here in general for the survey are we would continue this survey a bit further and refine it get the feedback work it in we also want to reach out to to developers and vendors about jmap and stuff that they would require and yeah updated the spec obviously with feedback from various places is there anything you can add uh ohio today well i think thanks but uh sounds good for anyone else so yeah i've if i can make a suggestion so um one idea here for path forward is is so the the extra the data format is actually kind of js calendar it's the task object within that right and then jmap tasks is kind of the um having a server to support that and being able to um you know store it and communicate in a few ways so uh the data format is easily extensible because there's registry for everything you can register extra stuff so i wouldn't worry about all the little like key value stuff where there's one um you know uh app that's using it like they can always just register uh a new property"
  },
  {
    "startTime": "01:04:00",
    "text": "in with ayanna it's pretty straightforward if if us trying to do everything it's not worth it um there's common stuff then we should try and register those uh although the complex stuff i wonder if um that should actually be a separate data type over jmap like um or some separate in some way like history seems interesting um uh and comments as well as potentially a separate data type but either way uh and then the final thing i was gonna say is is the server could we could have a set of um common functionality that we know is highly common that must be supported by any server if it wants to support gmap tasks just because otherwise it's impossible for a client but then it server could advertise um and hear all the other property names that i support and in the capabilities so you can just check does it support the recurrence tools property if it does i'll show my recurrence rules ui if not i won't because i know the server doesn't support it um so that's my suggestion for them making it adaptable because as you say yeah there's a lot more differences here yeah sounds good a little bit michael is next i think okay maybe as a shortcoming before mike speaks because um uh it's just related to one comment i think he made earlier so i think neil mentioned the history thing so it was actually put in brackets because i think i remember mike you mentioned it in a previous car connect meeting as a generic thing you were thinking about or even having implemented somewhere in um uh either uh i calendar or somewhere right do you remember yeah well that was gonna be my point is i i don't see anything that you've said you know suggested that isn't applicable to um you know regular events because we've had the same kind of"
  },
  {
    "startTime": "01:06:02",
    "text": "you know um idea we want some sort of auditing for for events and how that what happened to them i think all of these are features that could be i mean recurrences support recurrences is even sketchy in a lot of um [Music] event tools so it i don't think there's any difference there um we really only want one form of recurrence support and those things get really confusing so you either support it or you don't um yeah i i just don't i don't i don't i think we want to try it i don't think we want to try and um have much in the way of different support between one or the other i'm not hundred percent sure i got your point mike because for the recurrence there was no thing like a separate recurrence i think it was basically if or if not some certain types oh yeah yeah i i yeah i i've i've found it almost as iffy in some you know just calendars that uh are around so it's uh it's it's a general problem um yeah the hard bit here is that a lot of the systems that we'll be storing to are not using icalendar under the hood they're using some custom database format that we need to map in and out of reliably to this so certainly being able to say you can't write anything from this whole subset of the full js task because the server just doesn't have a way to store it and doesn't have a way to understand it i quite like neil's idea of having a list of capabilities in the the server side advertisement of this feature can say with with this particular capability here's what we"
  },
  {
    "startTime": "01:08:01",
    "text": "support and the server this is what you can use i think that that's a good way for to have server capability discovery so just for about the history topic again so that was me who at last itf um was discussing this in context of js contact and i think to remember i promised to write up a draft for that but i didn't do it yet so but um these topics seem to converge on the various data types so that might that might be um a booster for my ambitions on coming up with a document so i'll i'll do that and maybe maybe a short comment so i think it was not necessarily some it's a thing a little bit of special feature because in some systems it seems mainly like an activity stream like something you don't engineer as a user but which is generated from your actions um so so certainly um yeah like an audit trail is somehow right um and um my remark is basically in the direction it's certainly i think it's an interesting thing i think not so many systems expose it currently via api or something because they consider that rather as some you know system generated and displayed thing not something you can influence or read out with the tool even but that i think even makes it interesting because it shows up as you said that since a lot of tools are using these kind of uh concepts um that this is my might be something that needs uh or uh can can have some attention but i i wonder i think it's it's quite diverse still in implementation we're losing most of the audio here at least i am oh sorry but robert not it so you yeah i got it all um so in terms of uh expectations so what"
  },
  {
    "startTime": "01:10:02",
    "text": "i'm what we discussed in terms of js contact was to have a and not only um being defined only for gs contact but rather a generic history that that that tells the values of of a property at various points in time so um i'm not sure now if that is in line with what you were what you mean when you were talking about history in in context of tasks but yeah i think we can discuss and we will be happy to to look at something when you write something down and maybe discuss on that further then okay any more any more discussion on on this okay it sounds like not so our next topic is jscontact so there we go hello again um yeah so that next slide um that slide is [Music] basically the unchanged version of what we discussed at the interim meeting a month ago um [Music] so i think almost everybody here was also there so basically the main point to take away from that light is um we are we are waiting for our implementations or other implementations um to get to get better hands-on experience with with the data format mario has at the moment the"
  },
  {
    "startTime": "01:12:04",
    "text": "has implemented the most of the data format we at fast mail are are working with with an old version of context data um and i hear that also the rdap working group at itf are working on implementations there although i haven't yet i have no further details on on which aspects they're covering mario probably you want to have a word on this hello everyone can you hear me yes no i just uh to make an additional note uh i was informing last uh rejects the interim meeting that there are some uh just contact implementation inside rdap so as robert has just said the this content in our that doesn't cover all the information that could be represented by just contact only subset even if this subset i think that this this implementation could be meaningful nonetheless so i probably will be contacted by the other guys or the adapt working group who are implementing jazz content up so i will have some more feedback from that side but my feelings that in comparison to jacob obviously the guest contact"
  },
  {
    "startTime": "01:14:02",
    "text": "representation is more satisfactory in in the adapt context so i i don't i don't feel i don't believe that uh we will have um relevant feedback real one feedback to to change the current yes contact us batch okay [Music] then i guess we continue with the next slide please um one one thing we got pointed at recently is a unicode public review issue um you see the link here which is about which is concerned with defining personal name formatting so that's highly relevant for the way we are um [Music] we are uh using name data in in js contact um this is an ongoing effort at the only quote um the uh the issue is open for comments until the end of this year um and um while reading it so basically it it's concerned with the formatting and sorting of names and and uses um patterns mainly that define how to format several name components um depending on the context for example context would be if you are addressing a person or if you are referring to a person which given as an example in russian these the order of name components is used"
  },
  {
    "startTime": "01:16:02",
    "text": "differently then um and um it's also covering several other aspects but the main the main point for js contact um is that it's also that it's using name fields which basically are very much aligned with uh what we are calling name components in js contact so that's kind of um um so that that's good news that we that we at least seem to think in the same direction um as other um groups working on the same topic um so the in terms of impact on the js contact implementation um we would like to be sure to be alive to align our name components type with that unicode effort um but at the same stage um keep deformating and sorting aspects out of scope so that's basically something where an application then could use the unicode library or or or or implement their own based on their definitions on how to format names in various contexts and that means in practice on the next slide please that we are just renaming two fields or the personal name we suggest to rename to given and the additional name we want to rename to middle one thing that we haven't covered um so the unicode document [Music] discerns between a surname and a secondary surname um uh the first intuition was that the order of a certain in in js contact would just could just be deferred from its position in the array of name"
  },
  {
    "startTime": "01:18:03",
    "text": "that in my opinion is not good enough first we cannot trust the fields to name components to be in any meaningful order secondly even if they are in a meaningful order we still don't know what kind of order it is getting back to the example with russian names that have different orders if you are addressing or referring to a person um we would not be the wiser what is the what is the secondary surname in that context so we suggest what i wrote is this these slides i was thinking of um having a surname followed by a digit where digit is and at least two or higher uh but the more i think of it we might even want to since the name component already is a complex object um we might just want to add an additional optional um property um nth um which then can be an unsigned integer um and and and then we could basically use the same order thing for all different for all kinds of name components even if that would cover more than or allow more than the unicode document is aiming at any any opinions or remarks or other input on this one ah is it am i on ah i don't see a big difference between having an array and just stating in the text that the order should be the order of the surname in the array or having a separate property for each"
  },
  {
    "startTime": "01:20:02",
    "text": "surname like uh with the and with the number in the end in the end it's the same thing and the the array thing in my opinion is is a bit more elegant a bit shorter at least the problem is they may appear in different orders um in the way that the name is displayed than the the meaning so there are languages where where that does they could be either way around but still be the primary surname and secondary surname so the system can it a system can pick it out of an array or or can pick it out of the property right but it's it may be easier than to to pick it out of a separate property is what you're saying i'm not sure maybe um just to clarify what do you mean when you speak of an array so um at the moment the sorry at the moment the name is is an array of name components and these name components have a type which is one of these in the column that you are seeing right there is no array surname for example all right right right okay that's that's what i was missing okay then it makes sense yeah yeah my only question is whether um it's possible to give feedback to unicode and say hey this is what we're doing with this do we have any any communication with the group that's working on this um no not yet but um yes i was thinking of contacting them um i just read document uh yesterday actually um so but we should do that yeah all right anything else on this topic anyone wants to discuss"
  },
  {
    "startTime": "01:22:02",
    "text": "great thank you robert um actually i'm i'm not finished with the js contact talk so um there is no more slight but um i forgot to add so one thing that we that we discussed at the interim meeting was um the missing in vcard there is the chandra property we were in the interim were discussing if and how to support that in js contact we haven't come up with solution yet i remember that we were thinking of looking at where to ask at itf um uh if there is a like um a recommendation by itf across working groups for how to deal with that there are a couple of different expectations on this gender field the main expectation the main use case as i understood is mainly to um to understand in languages that have different pronouns or addressing like a mr or mrs how to address that person um or that contact um depending on their on their gender um i don't know if i don't recall any other specific use case that was mentioned that that's um that's where the gender plays a role um that being said the v card um the v property already defines discerns between gender and also has the optional field for sexual identity i think it is so um"
  },
  {
    "startTime": "01:24:00",
    "text": "the main gist still is which also which i also stated at the last meeting is um um both mario and i do not feel confident in that field to really come up with a standard for this so we might need to talk more with people who are working on this topic more extensively and we don't really know we haven't really figured out it how to do that basically yes sorry this was partly i was supposed to do that i did email murray about it who suggested contacting the isg directly about it which i have not yet done i'm sorry yeah so then i guess i still have that action item yeah so basically we will also need more time to figure out how to address that topic um that being said also the um the unicode document also has this is an open issue so uh we will talk with them also um what's their uh what's their opinion although they they only need to narrow it down to um cases where the formating of the name depends of the gender of that person pete uh mentioned in the chat that the ihf does have a formal liaison manager with unicode and gave the name as well so we have somebody to to contact about that so it might be worth mentioning both these issues in that discussion great thank you okay so that then that's really now the end of my presentation cool so i guess just in terms of next steps on this document it's dealing with these issues first and then then coming back for a last call or"
  },
  {
    "startTime": "01:26:01",
    "text": "implementation uh implementation experience i think that would be good to to go into la before going into last call to um to to have a good understanding that we are covering everything we want to cover cool okay then so uh the next uh the next topic is from alexi again let me find the the right slide set of sides for that there we go and take it away alexi so yeah very quickly uh there is no extra working group meeting today or this week but uh there are some people who are active in both gm and extra so ask for extra time to introduce this so yes what's a problem statement um how how do you how server implementations deal with very big mailboxes and what is a good client-side behavior to help servers uh handle this and not overload them when i say big mailbox what do i mean it's at least 50 000 messages on the server side um it can be quite memory and resource usage intensive um some servers struggle with keeping message number to uid map depending on exactly what back-end"
  },
  {
    "startTime": "01:28:04",
    "text": "and clients some clients just cannot handle this you know there are clients that are limited to their they're happy to open any mailbox but they only show the last 10 000 messages so uh yet at the same time they still fetching flag flag changes or just general flags for all messages even though they are going to ignore most of them so um some of this was already tackled so constant quickly sync extensions are definitely helping if clients were to use them but this a bit more can be done next slide please um so the proposal is extend search and fetch by uh specifying that only so many messages uh i expected in the result so for search this is actually partially defined in context equals search extension um using the partial search result option um however the proposal is to extend it a little bit because uh partial can say well uh return the uh first end messages uh or you know a certain block but it starts from lower messages so extension here is um to allow to to ask for the the and last messages for example so um"
  },
  {
    "startTime": "01:30:00",
    "text": "what's the advantage of this this helps the server by saying well you cannot you only need to search end messages and then you can stop so server implementations can optimize what they do and also if the client doesn't care about you know 50 000 results then it can say well i only need hundred so this also optimize network traffic um and similar extension to uig fetch because uid fetch can specify uid range where the client doesn't actually know how many messages are in the range again saying you know i only care about so many messages next slide please so um yeah um search extension partial originally defined in rfc 526 but an extended syntax to allow negative ranges uh for addressing so many last messages as opposed to so many first messages so this is an example i want to search all undeleted messages not mark junk and i only want the last hundred next slide um similar syntax for uid fetch uh uid fetch already had fetch modifiers for constor so uh we'll use the syntax and reuse the same partial construct here next slide so what also good is actually uh"
  },
  {
    "startTime": "01:32:00",
    "text": "we do have a wonderful imap feature when multiple extensions interact with each other in lots of interesting ways um we actually never defined how partial and safe interact so a reminder save is saying save this result an internal variable and don't return it so now the document also define interaction between partial and safe next slide i know i just introduced this i'm not going to ask for adoption here because it's wrong working group and people need to have a time to think and read this but my intent is to ask for adoption in the extra working group comments questions brown you are smiling i know you have something to say we're going to hear you first thing i have to say is don't make the windows key on your keyboard the screen lock key when you accidentally hit it occasionally because i just locked my whole system up and then mistyped my password trying to log back in so i couldn't get in to re-enable myself um i was smiling about the minus one because that is that is what the asterisk or star operator is the well very much misunderstood operator that means the last with the last item or the item with the highest uid specifically um this whole minus one syntax is yet another weird thing in imap and it's fine but it's also like imap is so so syntactically edgy"
  },
  {
    "startTime": "01:34:00",
    "text": "and tricky to deal with but if people have better suggestion you know i i just thought it was cute just because it was used in python other places but yeah um i think it's it's definitely worth taking it to extra and asking for adoption it looks implementable and if you get one client and server using it then it could expand out so sure i saw in the chat that um ken and pete talked about the imap x view extension which was published some long time ago july 2000 there you go so i'll put a link to that in the minutes as well alexi was certainly around for that to probably bring back some bad memories i don't think that went very far with that draft yeah it's also complexity of implementing you know like partials actually is fairly easy to implement and you know i know that there are multiple implementations of partial already yep agreed yeah i think i think view probably try to do too much at the time yeah because it it tried to be like uh yeah yeah more like a mailbox which caused all kind of interesting things and partial also uh doesn't try to deal with updates which is quite nasty well has a bunch of interesting issues with it but yeah that's a good point i'll i'll have a look at the view and see if there is anything there that"
  },
  {
    "startTime": "01:36:02",
    "text": "that can be rescued all right any other comments so i guess the next thing is to go through working group milestones so uh ron that's uh i think that's your thing yeah yep just hang on a second while i uh sorry did you skip any other business so this is the final oh yeah yeah oh nice job sir sorry i i i would have one thing but i'm not sure if this is desire to be discussed so question is mainly i think to ken and maybe alexei um this is about this uh thief uh implicit standard thing i mentioned in the last tech connect um into a meeting and i think alex say you asked me to send this to the extra group uh however it didn't really spark in there so the question is how to proceed with that i still still owe your response uh well um it is difficult in the sense that i don't well we probably wouldn't want to modify civ syntax because that will be just too disruptive but if we can have structured comments i think that's probably the way forward but yeah absolutely i i think this is the problem that was solving just well because multiple people ran into it it's quite a common thing all right so yeah i have it on my to-do list i haven't forgotten the story just uh no no no don't worry no worries absolutely fine um maybe um also in the direction of ken because i think our use case initially was stemming from jmap our implementation of jmapreceive in jmap even though we experienced the same problem with raw thief under managed c so"
  },
  {
    "startTime": "01:38:01",
    "text": "um but for for jmap actually we currently also could do with it by ourselves with the means of the standard um because we thought about also transmitting basically a product id via the capabilities so that's a little bit maybe i don't know if this is intended usage of the capabilities but i think it's not strictly forbidden and that would actually allow us um to do what we want so we can currently live with that and work around it's the same way we work around with it in the um in the managed thief case um maybe that is an uh yeah sorry i was your guy i had to stay muted because my dog was barking at the fedex guy um yeah so the issue you're having is is that the implementation that you're trying to write or trying to use doesn't support vlogs i'm not right now oh no no so the blob thing is a different thing and um that is that is also okay we can work with that so some of my remarks were there were also maybe for other people having to deal with the same issues so we just found that a little bit difficult but we certainly were able to do it yeah so so certainly the things that i think neil presented makes sense so we can do it that way the only open issue another open issue was that issue with uh implicit um conventions so so to make a particular particular example for instance we've wrote a jmet for forcive wrapper for harder groupware and for instance already internally [Music] has names for the rules which it displays in the ui to the user because typically you you define the thief rule in the web ui can can you clarify what you mean by rule are you talking about an entire script or just a portion of the script"
  },
  {
    "startTime": "01:40:01",
    "text": "yeah that's that's also an interesting question i think which i wrote in the in the in the post so typically the kind of systems we deal with when we deal with thief i i think there is actually in the wild there is two major things how people use sieve one is people engineering their own whole script and one is c scripts basically generated by systems such as a web mailer and these thieves scripts tend to be quite regular so they consist basically of a set of individual rules that's basically at least what we observed in in project so far yeah and and i would argue maybe the second case is actually the majority of safe usage because not so many people will engineer their own c scripts by hand maybe i don't know anyway certainly that second case is i think a valid case because you have safe rules within systems like corey yeah um and which are which are created by users and within that single script which which hordi maintains in the back end um there are the individual rules which the user created in the ui like you know move set mail from braun to folder broad and so on does it clarify your understanding yeah i'm mentally i'm trying to figure out if we could even use jmap to manage a set of rules without having just crazy crazy things happen because if you've got a handful of rules they probably need to be executed in a particular order which the webmailer or the fast mail ui is well aware of and that one constructs the script that does it in the correct order so so technically these rules are c scripts they are valid tv script and are interpreted by a thief back end as far as i know yeah it's just a convention how these systems build the c scripts that's my understanding here right so yeah so the interesting question is can you annotate the rules"
  },
  {
    "startTime": "01:42:02",
    "text": "um with something that allows you to to have the name so it displays in the ui in the fast mail ui they display i think it's just a description of the actual content of the rule we don't have a way to to label them with a label as well but i could see what happened i know there is a there is a here we have a thing you can name your rule there you go so the fastener ui does precisely that okay so you can you know if it's an entire script you could give the name you know to the script if it's a single rule that's interpreted as a script it's the same thing right and i guess if we wanted to add another field for a comment or a longer description we could also do that but i think what we have is probably sufficient unless someone someone else has a stronger view well i mean this is what it looks like in in the fast mail ui and these are these get generated down to sieve and if we were to look at one of these there's an ability to put a name okay how do you expose that and steve sorry let's have a look i can i can show you right now um oh sorry that's blocked senders i clicked the wrong thing i wanted to see my custom zip code okay so that's that's this is the seal that gets generated and i can put blocks of custom sieve in as well so this header gets added to every single email that i receive um there you go so it's just a comment above it okay so that this is this is the the variables and complex structure stuff that we build for our civ rules"
  },
  {
    "startTime": "01:44:01",
    "text": "now okay so so i have basically two two points here so one point is this is certainly an interoperability issue if you think about you know migrating rules from one system to the other and probably also with tools editing scripts because you know if you now i don't know if you expose manage thief uh braun but for instance if a client would mess up that comment yeah it would mess up the ui which is not nice yeah i think you agree right yeah we don't expose manage service is basically and there is not just comments uh there is also a sketch in the initial mail there's priority sometimes you can define or you know those special use kind of uh annotations you have to roots which may sort it in some way or the other in the in the ui um so that's point one and we don't need to discuss further here i think that was the mail i sent to the extra group and probably it's better there than here in the gmap working group just to sort things out my second point was we have the practical problem of doing the implementation for gma proceed in a particular case where we need a way to know how to interpret the rule coming from the gem at backend so we so to know for instance this jmf perceive server is actually serving us a rule coming from a haudi um convention so we can actually apply some special logic that are passing where we know this is how hard he does format the rule name or something like that because otherwise we cannot correctly uh you know transfer it and my message was for the second aspect we found a workaround so we can use the jmap capabilities um in order to uh you know convey the information this is holly implementation so we are basically fine here which brings us back to the first aspect which was actually a successor of the second one in the initially"
  },
  {
    "startTime": "01:46:01",
    "text": "uh which we can follow up in extra sorry i just wanted to yeah um yeah okay so it looks like uh alexi and i both have actions to reply to you on the extra mailing list all right thanks one other comment on the uh the blob thing uh hans york i know he would you would had some concerns about multiple round trips to fetch touch the scripts i uploaded a new version of the draft yesterday morning i think which shows how to use blob get in addition to um uh either uh subscript get or or a query to basically effects that's the script content in one round trip okay awesome i'll have a look maybe as a media remark here and and maybe also to to neil especially who took quite some some effort to to respond to my email so most of these comments were also meant to be some feedback which we had based on how we perceived on how to implement this yeah so personally i think this could be so the gmat perceived thing i think could be in practice be really useful for many people using sieve to finally allow to expose um existing safe rules which probably didn't want to expose manage thief so far implemented and and my feeling was that you know this blob kind of thing makes it a little bit difficult to to you know understand on how to do it or you know poses some restrictions on people that maybe have a a bunch of rules on a local fire drive because sometimes they are just stored in on a file system um and and i thought things could probably be easier in there but i'm totally fine i see your argument that it also makes sense to keep things a little bit consistent but that's just part of my larger mission to also raise a voice a little bit for for thinking in in the design of jmap also about you know people which don't design a"
  },
  {
    "startTime": "01:48:00",
    "text": "whole system from scratch in a nice and funky way but maybe want to use only pieces of jmap um and it might a little bit be be overwhelmed by some restrictions in there i i i know there is no um a clean way out of this and i appreciate the feedback by neil i hope that wasn't uh too aggressive on the email list or something like that um yeah i just wanted to make that point yeah if you compare it to the body parts in an email we allow you to fetch the text of part of the body of an email in line rather than giving you a blob id and telling you to go fetch that blob id and partly because we didn't have all this blob infrastructure then but it i i can see an argument for doing the same thing with siv to allow you to fetch the the raw text of it as part of the fetch as well as giving you a blob id so that becomes different things you can fetch on the script yes it's more than one way but that we do that with other other types so we can keep discussing that is there anything else before we go on to the milestone review sorry i forgot to uh call that before so braun you're on yeah let's do it go through the screen sharing dance this is what one we're looking at so these are what we have at the moment um adopt s mom advanced we did that i believe"
  },
  {
    "startTime": "01:50:00",
    "text": "that that is adopted right s mime ascender extensions presumably that's what it's now called yep cool so we'll update that uh gem up access to address books when do we think we're going to get to that robert not before we got gs contact um at least until we got the implementation experience with js contact so yeah spring next year i don't know when next itf is but yeah i don't even know when spring is it depends which part of the world you're in i'm going to say april 2022 yeah um submit jmap calendars to isg that's probably also i think all these things that are currently december except for maybe blob blob i expect will get submitted in next month sieve what do you reckon can still waiting on some implementation experience with uh the test method and i guess we probably still need to revisit the blob versus inline uh script data issue"
  },
  {
    "startTime": "01:52:05",
    "text": "so i i i think december is probably uh not doable probably early next year i hope you want to change the name on that to reflect that it's been adopted yeah yeah i'll do i'll do the whole lot as a batch i'm just putting notes in the in the minutes now for what to do and that's i think everything gmap quotas is the other final document here which we didn't discuss at this meeting but um there has been some movement on that so we'll leave that for now now that extra quarter is is nearly done i'll probably have some cycles too read it again cool and after all that we only have seven minutes left um does anybody have anything else let me unshare it's always very quiet in these groups but quite productive well this was good use of time i think murray has something to say"
  },
  {
    "startTime": "01:54:01",
    "text": "just a quick i saw you messing around with milestones but i haven't seen any emails come through that you're editing any is that correct oh no i do i haven't edited anything yet i've just been typing it into the minutes okay thanks i'll just mess with all the milestones and send all the actions yep are you feeling more awake now murray uh be gentle yeah a little bit more i've been working working while listening and uh yeah i agree it's pretty productive thanks uh thanks for tuning into your milestones too some groups are kind of slack about that yeah i stood up in a working group chairs meeting and told people that they were it's reasonable to be held accountable three times a year to what you promised to do so i figured i'd better set a good example because otherwise i'm a hypocrite and although i am a hypocrite that's good not to be a hypocrite in this specific thing cool thanks jim thanks everybody let's go hang and gather or something i'll say sorry in half an hour we'll see you then thank you"
  }
]
