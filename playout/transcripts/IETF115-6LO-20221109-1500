[
  {
    "startTime": "00:00:12",
    "text": "thank you okay hello everyone welcome to the meeting of the six law working group please make sure that you are in the right room my name is Carlos Gomez we are the cherish shweta bandari she is online today we have our responsible ad Eric client here and we have at least one minute taker Dominique volunteered once again as minute taker for six laws so thank you so much for your continued support and we encourage actually everyone to join the collaborative process of taking minutes which will be done as usual by means of hedge doc you can find the pointer at the end of the slide also we might need some jabber or zulip scribe is there anyone who would like to volunteer if not then we'll see if we can handle that by ourselves and finally on the screen you can also find the link to the online agenda which anyway you have probably seen many times already so there are a few tips for this meeting similar to the last couple of meetings which had an in-person component for in-person participants please make sure that you sign into the session into the meet Echo session for example by"
  },
  {
    "startTime": "00:02:01",
    "text": "find from the data tracker agenda it's also available from QR codes here recall that we are going to use meteco to manage the queue so there's a single unified queue which is the one in meteco also for remote participants well you just need to keep your audio and video off unless you are presenting something then this is the node well this is a reminder of ITF policies on several important topics such as patents code of conduct few others so please make sure that you have read it and this is the agenda proposed for today so the first presentation is the usual chairs introduction which is currently in progress this will be followed by an update of the IPv6 over NFC draft given by Young Wang Choi next there will be an update of the six low use cases draft by Jung Yoon Hong and that will be followed by a couple of presentations related with neighbor Discovery the first one is multicast address listener registration and the second one is a new draft although the idea had been presented in a previous ITF which is on prefix registration both will be given by pascala then there will be another set of two presentations you may recall that in August we had a call for working group adoption on the document that was known as native short address NSA so there was a lot of discussion then and the authors have updated the documents and now they have been renamed as path aware semantic addressing pasa so there will be a presentation on the base draft and also the companion reliability considerations draft both"
  },
  {
    "startTime": "00:04:00",
    "text": "presentations given by Luigi then I will present uh the update of the draft on transmission of chicompress package of the 15.4 networks and as you can see these leads already to the total allocated time for this session which is 90 minutes so you can see that this is a pretty packed agenda so we need to kindly request the presenters to try to stick to the allocated times which in addition should allow for some time for discussion and questions and so on nevertheless if time permits we have another presentation which is entitled IP payload compression excluding transport layer by hangxi so is there any common any question on the agenda okay if there is none let's proceed to the status report on the working group documents we have currently four working group documents in six law the first one is IPv6 over PLC which is currently in the RFC editor queue the second document is IPv6 over NFC you may recall that this draft was evaluated some time ago by the isg then it was modified and now after some time the draft has been updated and also we have interesting news that the draft is back in isg evaluation State and it is actually scheduled for the telechat agenda in December so it will be interesting to see the the feedback from the isg and there will be a presentation on the last update later today the third document is the six low use cases draft which had been evaluated by a couple of directorates then the draft has been updated trying to address the remaining commands and the document has also entered the isg evaluation State and it's actually on the same telechat"
  },
  {
    "startTime": "00:06:00",
    "text": "agenda on the same day in December this will also be presented later today and the last working group document is the multicast address listener registration draft which has been updated several times since the last ITF and it is perhaps getting close to being ready for working group last call so um is there any comment or question if not then let's proceed to the first or the next presentation which is on IPv6 over NFC oh the Commerce that this is your one choice from entry career um I'm going to present that the object or the status of date of the IPP system NFC this version is number 18. next slide please the first page is the kick introduction about the LFC actually every time I shoot that the and this is the the history of the draft the draft has such a long history actually uh I think the the longest history ever or ever in ITF I think uh last the first Stella chat two years ago just we got the updated two for two draft budget the number 17 after that the uh there is something common from the Eric day he wanted to know the changes the because the the there's newly list of the the data link of the"
  },
  {
    "startTime": "00:08:01",
    "text": "NFC is for the number waterfall from the Wonder three so he want to know the changes between the two specifications so and then after that the finally I got the good news from the Eric with the draft update with the new schedule of the telechat and the we are going to second round the child chat on December next slide please this is current status let's try it please so since the previous meeting results actually to Eric gave us the comment uh gave me the comment actually uh he got the finally reviewed about the the of two specification of the data link of NFC version 1.3 and on the four but I think he did doesn't know do not have any any more concerned about that changes what about the two between the two uh specifications and then he gave us gave me that one comment from about the secret concentration revision about that the incompressibility the other uh six or four document and then a couple of days ago he also gave me um they mentioned about the RFC sorry 756 about that the survive the layer sequence condition five position six uh he gave me that the I think we need to put the new references of the RFC 770s 37 56. so because I will produce the new draft version maybe 19 as soon as I I finished we finished that the sixth row session this time next slide please"
  },
  {
    "startTime": "00:10:03",
    "text": "so this is the details of the the changes from the version 17 to 80 80. uh actually I got I gave some example explanation about that the first crop about that the llcp this is still a data link of the NFC version number 1.4 is the it's about that security data transfer lsdpa and the second paragraph is actually this kind of the the short address the cluster of a fixed consideration about the salt should address of the NFC next slide please so next step actually uh I'm going to produce television the 19th I put that I mentioned that the RFC sorry 7 56 will be there you'll be that will be put and then we will have the second round the TeleCheck on December 15th so I can see that the final step finally and then I can see it at the end of the a little bit more that before I think thank you any comment down comment any questions or comments in the room or remotely okay so if there are none thank you for the presentation it will be interesting to see the feedback from the ASG hopefully in just a few weeks so the next presentation is the six low use cases draft"
  },
  {
    "startTime": "00:12:05",
    "text": "okay uh good afternoon everyone my name is present the sixth row use k-thrift next page please uh this is the history and status or this is the 14 revision so in this year so February this document will to ISC evaluation so we are awaiting some of the feedback next page yes so this is the opaque after last meeting or we call a couple of command so we believe that we are we reserved or comment but among document from the robot or spark or there are some the command was not remaining as on the result that is the handling appendix a and the security control section so appendix a is neither introduced or differs from the body of this document so we ask why it is here yes he's right so in the revision we try to resolve his command and the second thing is the security control section uh Robert Sparks says that he didn't satisfy our update so in this revision we also try to resolve his command next page the first thing is to appendix a the appendix a is a design space dimension for sixth row deployment so in all the position of this draft or this content in Authentics a is located in main body but or during the progress in this left and resolving some document it was moved to appendix a also the other comment to keep the appendix a because it provides useful information for sixth row"
  },
  {
    "startTime": "00:14:01",
    "text": "deployment so our resolution is to add a related sentence in the introducing section so it is a simple modification next phase yeah the second thing is to security control section it was come from the robot spark so import the text is like this it is a little short but He suggests to add some sentence which is related to L2 layer of security so we uh analyze the other six row RFC document so we cut some ideas from the existing sixth row rfps document so we modify the security control section as like it is so in the last week I replied to robot spark for how about or changing this update but until now we don't have any feedback yeah we hope so it resolved his command okay next page please just stay true okay thank you any question Workman any comments questions so it seems we have none this is also another document that is on the telechat agenda for December so it will be interesting to see also the feedback from the ASG on this document thank you thank you very much so the next couple of presentations will be given by Pascal on the two drafts related with IPv6 and D ude hello um so this is Pascal from Cisco um this document here is an extension of RFC 8505 that aims at uh"
  },
  {
    "startTime": "00:16:02",
    "text": "registering not only unicast addresses we do in 8505 but also multicast and anycast addresses it comes from a requirement that was made by the white sun Alliance so for those who are not aware of the wise and Alliance wise and develops a standard for smart grid devices which operates on the 802.15 forcepgig ASM band so that's that allows several kilometers between devices and the devices are deployed in mesh networks which can range from Androids to thousands of nodes those nodes join the network using six slope nnd and then repo is used to Route inside the the subnet so each mesh is a single 64 where you can find those thousands of nodes and the links are about 100 kbps speed so it's all route over using repo now the reason why we developed six slope and indeed the way we did was to avoid multicast because the 6lopan devices are usually sleeping so they cannot respond to lookups and we cannot afford basically the the energy of of broadcasting all the time so devices Alliance recognize that but at the same time they said a we also have uh multicast traffic and the benefits we see for six slope and ND for unicast we want those same benefits for multicast and so when they looked at MLD they said well well that won't float the boat we need something where the device can sleep exactly the same way as it would for a unicast and so we turned the MLD model where the router pulls the devices and the devices have to be awake into just 48505 same thing as a model where the device wakes up makes a request to the router and can go back to sleep"
  },
  {
    "startTime": "00:18:03",
    "text": "um for those who are aware of RFC 9010 RFC 9010 allows to redistribute the host's addresses which are learned from 8505 into repo so these are called external routes but triple allows for Unique for address and prefix external rods it Ripple also allows for multicast addresses and anycast addresses so what we do in this draft is not only enable the registration of anycast and multicast addresses in 8505 we also couple that with work on the Ripple side to redistribute this knowledge into repo same message 505 the advertisement is uh unaware and Abstract agnostic to the rotting that happens on the other side of the router so today we want to use this for any other multicast rotting protocol like PM we can we can always do that um so this this makes it so that the six-dependent family is growing um we so we have this multicast registration which as you said is is close to finish we are done with this document pretty much we have the unicast lookup which has not progressed for a long time we've not been working on it we'll have to decide what we do with it but basically the idea is since the rotting fabric knows where the addresses are why do we still broadcast work as lookups so can we generalize what we do uh in so we don't even have broadcast value caps and then there is the new uh member of the family which I will discuss after which is the prefix registration so this gives us kind of an interesting family now next slide please so what changes do we see so as you said callous we've moved uh quite a bit since last day ATF so um we have improved the"
  },
  {
    "startTime": "00:20:02",
    "text": "terminology we have beefed up the section that says how we improve uh Ripple we extend repo the six slope and piece itself has been uh rather stable but on the Ripple side we have improved in particular the way we look at freshness for those who are aware of the way Reaper works there is a sequence counter that comes from the host when the host moves which is password 505 and then redistributing in redistributed into repo as a sequence counter the path sequence that allows to find which is the most fresh the freshest path and key on the older path well when you inject a multicaster drives for multiple members those numbers may not compare because each each host will or each router will maintain its own sequence number so as long as it's Unique as it's okay there is a single one but if it's multicast then there can be multiple sources and the numbers cannot compare so we we explain how we use the rubber field which is taken from six weapon ND and inject into repo as a proof of ownership of what's being distributed um we basically say hey if it's coming from the same guy so same Rover then you can compare the sequence number and eliminate eliminate the stale routes if it's coming from different Rovers so it's different listeners for the same multicast address then effectively all the routes have to be injected in the multicast rotting table another thing that happens is the introduction of the P flat pfl but I will go back um to that on the next slide and with clarifying the language when it's any cast or multicast we are using the term subscribe as opposed to register just to say hey it's a subscription because you intend to get a multicast packet delivered basically we had we discussed last time an issue about the consistent uptime option so"
  },
  {
    "startTime": "00:22:01",
    "text": "the consistent uptime function is option is the way the host can figure if the router has lost a registration State basically did the router uh reboot for instance since last time this device registered in which case the device need to re-register because the router may have lost the state um this is this impact six-man and so the question was sandestier and I guess they're equal well tell us um basically what we do with this this uh consistent option obtain option and then again there is the next slide so you'll be free to next slide please so yes there is the option it does change a little bit because we want to to exchange uh the uh State uh sequence information in both directions so the host can know what is the most recent State for the router and reciprocally it's completely abstract to the fact that we use it for six slip and ND or any other state from which the host and the router must have you know some some kind of agreement uh right now it is still in this pack because we didn't get a clear message that we need to write a different spec for it I'm perfectly happy with that uh and as far as I know we can go for one group let's go in that state and Rick you jump in when you want even if during the work group let's go we decide to take it off I don't see why that should hold our group last call because taking off that section is still good reviews I mean if anything get reviews yes during World group Prescott for this and we take it off the reviews are still good to take"
  },
  {
    "startTime": "00:24:00",
    "text": "yeah do you have a problem with the mic there we go does that work yes um yeah this fell off through the cracks a little bit from the last Philadelphia meeting I did send email to six man chairs and there was a uh but I failed to follow up because I think there was no the general discussion on on that email the thread that I said um so I think a perfectly fine thing to do is to uh do it you know if you want to do an adoption call do an adoption call on all cc6 man yeah sorry uh and I'll cc6 man um and we'll talk about it then I mean like like we said any review is good to take even if we take that section off later sure so I don't see that as blocking local classical next slide please yes so the the other change doesn't affect the binary of the packets uh that would be thrown it's just that since we are doing the work and the prefix registration for a number of reasons we needed yet another flag to indicate prefix but if you look at its unique as multicast any cast and prefix are mutually exclusive so why take yet another bit saying it's mutually exclusive with the others so the idea was let's keep the two bits with the same value zero unicast one multicast zero well second bit on any cast but call that a single field so the value of three would be available to us for the prefix registration so it doesn't change the implementation for this draft but it allows to free and to to give a sense to what this means when both multicast and anycast bits are set basically it means it will mean prefix um by the way so the prefix is the second draft I will be talking about right after but remember for those who have a pending draft there is this early INR discussion that has happened for for"
  },
  {
    "startTime": "00:26:01",
    "text": "those drafts and Amanda came to me and said uh what do I do with this thing and well that's a question to the group if we agree to do the prefix with the value 3 then we could avoid having to declare a registry for this draft for which the last variable values 3 would be assigned by the draft which is right coming up on the other hand if we delay the work and the prefix and we don't go for adoption Etc then we probably want to have this registry so the value 3 remains um unassigned so at the moment the assumption is you know we don't know what we do with the other draft so this draft has a INR section which requires a registry for this with the value 3 on the side that's that's the state of the art if anybody jumps to the mic um next slide please so yes I mean no news from six men and uh certainly it would be nice at least to circulate this at six months during the war group let's go and ready to start the worker plus call as far as I'm concerned yes so the idea will be to uh to start the working group last call perhaps we might need to keep six months maybe in the loop somehow Eric yeah yes it kind of fits with what Bob said at six men the other day which is like when the group is you know he's happy that this thing is needed then he can circulate by them but not too early but that's not too early anymore okay so then uh well I don't know if there are other comments or questions about this first presentation uh just a gentle reminder that why sun is effectively waiting for the RFC for their home specs so I mean if we can be"
  },
  {
    "startTime": "00:28:02",
    "text": "Swift on that one that would be nice sure okay so then let's proceed to the second presentation okay so this is the the newest and bestest member of the family so next slide please so this one we already saw next slide yeah we we are already redistributing what we learned from 8505 into routing this is not a surprise the way it works is today when the host or even the router has a unicast address and he wants to ensure there is reachability back independently of what the rotting is above the first operator it will set the r flag in 8505 telling the router a whatever you're doing in the proxy Rift evpn you name it repo obviously do whatever is necessary for me because I won't be doing it myself on the other hand if it's a ripple router doing it then it will not set the r flag because it will inject its own dial messages so it doesn't need the other router to do it with a 9010 if the bit is set then the Ripple router that accepts the registration sends a dial message with the external bit set meaning this is a route to the outside next slide so this is um what we have here and well that's effectively the way Reaper works so you can see this uh prefix a which is the whole ysn network if you like the the single subnet and you can see that uh Mr C and Mr D um tell the root that their parent is B and the root will know that it has this"
  },
  {
    "startTime": "00:30:01",
    "text": "last Hub to to make to Rich basically you see on the right routing table that's built out of that next slide okay so this is nine zero one zero the difference is now the Hub between uh C and this node L that you can see this lfn as we call it in my sun um is this this device uh is effectively injected into Ripple by c as opposed to l okay as an external Rod the result is pretty much the same it's just that the router is aware that this host does not belong to repost so it cannot be expected to terminate the Ripple artifacts that we place in the packet so typically a tunnel from the route uh that is supposed to reach L will terminate at C that's pretty much the the main um difference with the usual in usually determine the tunnel will terminate the node because it's Ripple aware but here we don't even expect that the node L is capable of terminating the rod the tunnel so we terminate it at C now we have this for hosts but next slide please um we don't have it for prefix so what are we waiting for there are a number of reasons why we would do it for prefix not any type of prefix we never want it and still don't want Ripple to become a Transit Network because we expect tlds to be a very edge network but for this Edge node that we saw there could still be a an external stat Network connected or it could be that this Edge node is not only owner of a one address but it could be owner of a prefix for instance there is the story of doing 64 per host which is perfectly good and legal why would not Ripple a low for it so if we if we go for something like that we have the need to expose to the Ripple router that we have ownership of not just one"
  },
  {
    "startTime": "00:32:00",
    "text": "address but the full prefix and that's what we are doing here next slide please uh so this is a reminder as before the triple is not only for uh host addresses and no threats its Ripple is a generic distance Vector protocol which is uh optimized for a number of reasons for power but still it can route prefixes just like it can route or struts and basically these are the kind of routing table that you build next slide and what we're missing is dependent of the other drawing where effectively The Host as a routing protocol independent agnostic way of telling the router hey I have this stub attached to me or this step that I hope and so this is the gap that this draft is attempting to solve so basically in this case it will be a ripple again but it could be any rotting protocol or any action and I will be presenting this draft at slack tomorrow because it's it solves the slack Prime just like it's it helps in the Ripple case snack snack snacks it's like well much is like these days so I will skip that but just just as an example of uh how that's that addresses the snack use cases basically as soon as a router advertised like a step writer advertises to a main writer that it has a prefix the the main router can forward the packets to that uh first router you don't need a full-fledged rotting protocol with distances and stuff because the stub is attached to a 6lr2 so why go and participate to a bgp or no SPF of this world when all you're trying to say is hey I have this prefix it's attached to me you can give me the packet it's going to be loopless okay so that's that's effectively what you are doing next slide and and a"
  },
  {
    "startTime": "00:34:01",
    "text": "symmetrical case is when the steps are separated from the the main link um that that's that can be typical of some some households I guess when you have levels and stuff same thing the the routers which under the steps can declare to the main router hey I have this tab and then you get reach a bit Rich ability back next slide so the interesting piece is uh okay now we are doing uh 8505 for prefixes uh What Becomes of that do you want to do put a configuration and that's an interesting one because we could and we have to work on it we have to decide what we do but we could say say that we've got this slash 48 for your home could you say oh routers are free to autoconf 64th instead inside that slash 48. because we have still this 6 lbr which could manage no you can do it it's a duplicate or you can't do it I mean we have all the the tools that would basically say Hey you have this prefix or you can't have this prefix so it's pretty cool by reusing what we have but instead of looking at exact match of okay that this address already owned exact match with this adult dress now we could look at is this prefix part of that other prefix is this other prefix available for auto config subnets of it okay so so there's a whole uh possibility there that we we could uh develop just because we we have that anyway and it would be an extension of what we do for that but by looking at which prefix is inside which are the prefix so so the draft doesn't do auto allocation or prefix a location right right now but that's a possibility that is offered to us with this draft next slide so well how that would that work but"
  },
  {
    "startTime": "00:36:00",
    "text": "pretty much the same way as nine zero one zero works I mean the the step router uh advertises through ND the the one half reachability of the prefix and then the routers above will do whatever is necessary maybe the aggregate maybe they redistribute whatever they have to do in their own routing protocol and here I have the case of pvpn but it could be anything basically they will inject if they are flag is if it's set then instead of injecting a horse route they will inject a prefix rod now there is a question I presented that slide to ietfs ago because when we started this I presented it before I wrote the draft to see if there was interest the group kind of told me hey yes we're interested in working on that so I produced the draft and in my slides I indicated it could have been an RS and the other option could have become a stub router or option or something the names are not that important it could be cool to figure out if we want to use errors RNs at the moment to keep it very similar to 8505 it's a narrow option in an NS and there is just a prefix length that set it to the error option but if you know you guys think it's more relevant to call it an errors then it could become an errors whatever works for me next slide and big surprise as I introduced this these two bits which can say unicast multicast anycast now the proposal is to assign value 1 1 to say hey we are registering for a prefix and if we are registering for a prefix yes you have a prefix lag somewhere in this packet next slide so in the RO effectively and this is not change much this is this this just shows that same asset 505 with uh eight nine two eight eight nine two"
  },
  {
    "startTime": "00:38:01",
    "text": "eight is the way we do sound in that world that basically says hey when you register an address if this route ownership verification verifier is a crypto ID then you can be challenged for running it so so if the same address shows up somewhere else the routers will challenge the somewhere else to see if this token is can be validated if the host can validate the token it means he has the private address that goes with it so it can only address that's basically the way we avoid stealing addresses well we can do the exact same thing for prefixes if the prefixes are owned by a single node or if the different owners share the same key then it's possible to ensure that a route can only be injected in the routing fabric by the real owners okay so the same zero conf zero trust I'm sorry the same zero trust capabilities we have for host now becomes available for prefixes as well next slide and this is just a trick on how this could be used effectively for ipv4 prefixes um by uh putting them inside slash 96. same thing you would you would provision a certain prefix and and then uh okay the slash 96 and encapsulate the the 10 dot or whatever uh for certain tenants so this is more of a data center type of use case like list by VPN next slide okay now so it's just a beginning there are tons of things we could do um would we want to to add a to to make it an arrest uh make it an NS would we like to to extend the proof of ownership per ifc9 8928 which is not done yet in this draft"
  },
  {
    "startTime": "00:40:02",
    "text": "um more interesting since we are advertising prefixes and we may advertise them through different places do we want to influence load balancing again that's more of a data center type of use case and then again it's not a distance we're talking about right it's it's we're talking about weights we are not doing a routing protocol we are still in NS space but in NS you have a pre-filled router for you have this router preference thing right same thing when we inject the prefix we could say hey if I have several parents to whom I want to advertise this prefix I could say I want more traffic through this parent and through that one for instance because I don't know I mean that's the way balance Mannix and well that's pretty much it I just want to to to be very explicit that this is a beginning and there is a lot of power that we could develop with decider it's so so don't take for granted the fact that it's an NS uh or that the capabilities that are disclosed in zero zero are very limited there are tons of things we could be doing but then again it's not a rotting protocol it's just advertise the one how preachability it will stop and that's pretty much it so yes I would like to to see discussions on where we want to go with this I mean if we go for adoption uh would we would we care for doing an SRS um do we want to call the ero with you know P equals three uh stab registration option um do you want support ipv4 prefixes using search 96 do we want to extend the zero trust that we have with uh 8928 in all these questions and that's pretty much it okay thank you Pascal so are there any comments or questions I mean I was on Courage last time I mean 12 years ago to do this work are you still"
  },
  {
    "startTime": "00:42:02",
    "text": "kind of supportive of this thing this happened yeah okay yeah so now since there is a written draft now it's a good moment to actually read it and provide feedback so we encourage the working group to to read the document and provide comments thank you so then the next set of presentations will be the ones related with past aware semantic addressing I'm requesting for sure I'm granting you should be there yeah okay foreign Luigi I'm gonna give you an update on what was named before NSA the native short addressing which is now called password semantic addressing smaller meaningful as a name a model focused on the real content of the real aim of this work this is rapidly the the the history how the the draft day is advancing we are back again to zero zero because we changed the name okay uh we have beside the name we have to welcome two more quarters one is Pascal that is a great job in helping us we'll go over the his contribution Kieran as well all this contribution actually came up from the nice discussion that we had during the the working group called for our adoption that I mean the document didn't make through but actually all in all we did good progress to be honest so that's wonderful uh from my perspective"
  },
  {
    "startTime": "00:44:02",
    "text": "uh the outcome of the call for adoption was the the fact that we need some clarity clarification sorry the chance did a a good summary of all this discussion that we had on the mailing list was a quite a long discussion I think in the last year or so was the longest if I dare to say but 69 emails oh yeah it was pretty good I would say so and as I said before uh Kira was suggesting a new use case and we had discussion on that and also uh Pascal in one of the latest email was suggesting to use the routing header as a way to move forward okay and go over what we um the different points that were discussed right so yeah the main changes beyond the name in the in the document is the fact that uh uh we have now an extensive use case section which better explains uh what what where we see this solution to apply because it's not and should not be considered a general solution that you you can use in all the possible six slow scenarios okay there are specific uh scenarios that were it is very reasonable to be used okay and we have a tighter connection with the uh six slow use cases uh draft and then there is uh the new header format so the use of the six law routing header in order to encapsulate uh the the packet and this is very very meaningful because it's more in line with the general solution that are designed in this group right want to point out that actually the"
  },
  {
    "startTime": "00:46:01",
    "text": "allocation function which just to recall you is the way we assign addresses in the topology and at the end the forwarding algorithm so the way you decide where to send the packet that piece of work remains on on changed that is pretty stable it's just the way where we use it in which use cases and actually how we encode uh uh our pockets okay as I said we try to to have a to type better um the work with the six slow use cases this is one of the the points that the chairs put in the uh summer email closing the call for adoption the the clarification of whether we should use this uh the main use case is obviously related to PLC where we have already uh three uh topologies which is also the logical topology that the passer X NSA tried to build in order to forward the packets and obviously the uh if you do this stateless approach in order to forward you are sensible to Mobility so we I mean PLC there are no Mobility requirements there are other scenarios who where the mobility is not a requirement but then you have to build the tree topology which may or may not fit uh we can claim the star topologies kind of a tree but this is a discussion for another uh so I forgot to put the the animation here actually the idea was to give you in one slide a snapshot of the four uh main use cases that we detailed in the document basically this Market smart home data center monitoring and we when we say mono monitoring is not about the the"
  },
  {
    "startTime": "00:48:02",
    "text": "data traffic itself is monitoring of the the electrical appliances itself is is a different thing so basically it's based on PLC again uh that we where we can use Passa and the the use case that Kiran added about the industrial operation technology networks which is uh uh let's say the the data based on different layer to technology from which you cannot necessarily natively add up all the the the full six law protocol stack program but you can have a software update that allows you to have stateless forwarding and yeah the again this pasta solution seems to fit well okay uh I invite you to really go over the use cases and see if this solves all the the the the clarification requested that we received in an email and also suggested by the HHS so as for the uh encapsulation format itself uh what we have is now to use the 60 pound routing header I suggested us Define it in RFC 8138 so we will have page one this um routing header and then the normal low pan iphc so basically the IPv6 compressed header according to 60 to 82. okay no special uh treatment there what we do is actually once you build the what we call the passer a rich header is um well the format is pretty simple we you have to type that allows you to understand which kind of routing header you are using then we have two bits that allows us to to understand what kind of address you have in this header the size of the address and then we have a set of quad"
  },
  {
    "startTime": "00:50:00",
    "text": "squads so just two octets so it's a couple of that's like uh we we cut the IPv6 addresses with the columns right so the idea is basically when we add this header we take the destination address from the iphc and put it there and we do you don't need to to put in the iphc you can delete it uh at once so that we you don't need to have duplicate and then each and every node what does it's it looks at this header and it takes the forwarding decision according to the rules um uh that were all already there now and this this piece of content that update is something we we discussed at length by email with Pascal I thank you again for the idea and the help the people and the effort to put in this document so basically uh how these things all works together um the password domain just does compress and compress uh the the the packets according the the specification in this document um the prefix of the parcel domain represent the context that we use to compress according to 6282 so basically you can shrink the the big IPv6 address at least to a slash to only 64 bits okay according to the size of the the pass address you can do even more if you if you wish on the way back the the document describes how to take the pass address and rebuild the full IPv6 or just just the correlations operation that is always already described in 8138 Okay so when we send a packet we compress uh uh according to 60"
  },
  {
    "startTime": "00:52:01",
    "text": "6282 okay uh based on the context and then as I said we take the destination address we put in the uh RH we lead it from my phc and we said well we set the size accordingly etc etc and we send the packet the receiving side what we do is basically we take the the address uh in the uh RH header and we use it as a IID and we we can rebuild the full like pv6 uh address according to 8138 that is nothing really special and this is the the intra-domain communication in a passer domain okay from the the for external communication uh things are a little bit different but different because we need to send outside so this is something that we I wouldn't say we're still working on we we have to better the finance and the document we are discussing again with with pascalte but the idea is pretty simple if we have to send outside what we need to do is just send up to the root nothing more right and when we receive something from the outside the root will will create the uh RH header with the pass address and this becomes a intra-domain communication and will be delivered to the offly to the right destination okay so all in all this is uh the the the the updates on this specific piece of work with different names so if you have any question or comments on this okay so there's two people in the queue"
  },
  {
    "startTime": "00:54:03",
    "text": "okay uh thank you for your cool presentation and thank you for your report sixth row use case left I think that sixth row you skate draft is a kind of the information to other documents so it is very good so I'm wondering so you refer to PLC cases the PLC the PLC can be utilized in uh G3 PLC or electricity ucg so I'm wondering your idea is is there any practical reference site to use or do you have any plan to utilize your uh this uh can you repeat the question I didn't get it I apologize what is exactly the point with PLC yes in the sexual use case trap the PLC is used for G3 PLC or the electricity it is the Practical site yeah so you are the pssa do we have any reference site or do we have any the plan to utilize your idea not specifically I mean no we need to do to look in more details to the to use that okay but yeah good point Thank you thank you for bringing this up [Music] just a couple of quick question or about a quick note uh I wouldn't rule out or I would ask you to state in document why you did rule out all kind of hero compression other than iphc for example for example GHC or chic uh I know that Rover brief for the document it is more important to ex to explain how for iphc is uh"
  },
  {
    "startTime": "00:56:02",
    "text": "working the address expansion and compression but there are other methods as well and the second is a suggestion for addresses that are going outside of the network I found myself very comfortable with stateful compression for a phc that sure enough it requires also to have a distribution for the contextness but it's very useful uh just uh just because your scenario seems to be just fitting the idea that the outside addresses or whether the addresses toward the internet are just a handful yeah but I I agree on the second uh uh comments that you did about the external communication about the the first part uh the first comment that you said are we ruling out something and uh let's say that we did not include this something in this document but this is my personal point of view this is something to discuss also with the other quarters and with you guys the working Loop but uh uh uh we we don't necessarily rule out other form or compressions we maybe need other specifications at that side yeah it's not you it was just a point that in this case good but you will have to stay that the aphc is an example in the document uh from the original one let's say there was also some kind of optimization in the way you treat the the addresses that are external and as I just said these are optimization we don't need in the basic"
  },
  {
    "startTime": "00:58:01",
    "text": "specification but something we cannot optionally if we wish and the the group is interested but the basic set of of specification that we are converging on looks okay thanks hello here um yeah I was looking at one of the use cases that you introduced so there's a smart home use case and again about the PLC there so um yeah what I was thinking if you look at that topology then typically in a smart home there's also something like or what we call sometimes infrastructure link so that's like Wi-Fi or ethernet link that binds everything together so that yeah that I suppose we have that there and then there are a number of PLC gateways and those you can consider as a stop Network so that was called introduced and actually it looks to me like hplc network is kind of a flat Network headers one power line connecting all the devices so I don't really see the need for her well some kind of hierarchical addressing so that's not true actually because in the uh in the different use cases and we have ASCII art in the document that uh tries to explain what you there is also in the text is the fact that at the end of the day you have some hierarchy in your privacy Network we have because one thing is the end device which could be uh something big or some something small but all the the connecting uh infrastructure as small as a smart home might have some hierarchy limited you don't have 3 000 levels but there is not necessarily completely flat okay so you mean that uh if you could have a look do the use cases section and"
  },
  {
    "startTime": "01:00:02",
    "text": "send us all the feedback which you have that would be great yeah I think okay then it's good maybe to update the picture also so if the PLC has some hierarchy then I kind of understand maybe better yeah how that how that fits but um overall the use case doesn't doesn't look like the smart home that's now usually introduced today where lots of devices are Wireless like your lights and doorbell yeah wireless networks today excellent point and this is related to the next presentation because one thing that you have in this solution is the the reliability aspects because if you have this stateless forwarding is based on the knowledge of your neighborhood but if something goes wrong and you don't have a routing protocol that allows you to go around uh then you need to to manage the reliability in a different way so uh what I want to say by that is that this work in principle could work in the wireless environment but there is a reliability issue that you have to to look at it carefully because the wireless link is is not as stable as a PLC wireless link so so yeah so so this comes also to the initial comments that I made the solutions is not to replace Ripple for example is and be used to as a general solution there are cases that you can use it okay this is as meaningful it's not uh okay yeah I'm just doubting a bit on home use case that's all but okay I will check it thanks but please again uh read the the section and send us all your thoughts that would be good input anyway oh sorry I was going to remove Esco from the queue but I accidentally removed one"
  },
  {
    "startTime": "01:02:00",
    "text": "Peng as well so one thing if you still want to make a comment uh yes a quick comment uh Quantum from Hawaii uh one of ulcers as men knew that we had a good discussion on last uh Comfort option for the ANC document but for the past I suggest many people who interested in in this document can send it and set their concerns in the mailing list thanks foreign if there are no other comments then I guess we can proceed to the next companion document which is on the reliability considerations thank you um okay this is an update on what was before called the NSA reliability uh now choose to be said the new version of the draft is more uh renaming update but since we did not have the possibility to present this document last time uh we will go over it this time um certainly uh let's say this is an initial effort uh and might have some adjustments to be done but the more important the point is to receive your feedback so I I hope that you at some point we will have uh the possibility to discuss this on the mailing list okay so new document submitted in October as I said the main change is the the naming we try to go over the the whole document to replace"
  },
  {
    "startTime": "01:04:00",
    "text": "an essay bypass and and a few other changes were the meaningful but um we will work more on this document for uh 116. okay so uh the main content is pretty simple we have a general introduction to the problem uh the possible solution uh uh classes which are pretty pretty much two and I will present in the rest of this uh presentation uh there is also a section about consideration how to detect the failures and the recovery as well because this is also a change in topology it's not about only a workaround something that is missing is also understanding when this this link for example or not that that was not available is coming back and we can go back to the initial state and then some consideration about their obviousness um you know so the the obviously in order to to have a reliability the private requisite is to have redundant links uh if you don't have an alternative if something breaks it breaks and you you lose connectivity so this is obviously the what you need at the beginning um doesn't mean that you need to this redundant links all to be active at the same time so it could be an active passive uh kind of uh usage okay and but the point is the one you use the active links you have you must be able to build a tree because passer relies on this logical uh three topology okay and uh the other thing is what we need is to have a secondary pattern a parent so each node needs a two parents okay uh which is pretty natural so that we"
  },
  {
    "startTime": "01:06:01",
    "text": "can uh alternate and have a reliability ability this is except the root nodes uh in the sense that the root node is the one that that is the the gateway to the internet and starting from there you have different kind of reliabilities and you are outside the passer domain so uh yeah that's a different story and uh the alternative parent could be uh you know is connected in uh to a non-active link uh now in when you have this uh set of uh conditions that hold then you have basically two choices either you use multiple addresses which basically boils down to have a uh a different topology okay so it's like multi-topology routing so basically you have uh two parallel instance or over to three topology that not match in the sense that so that when one link is down you have an alternative uh pass on the other topology right or uh you can use one single address or like we do in the normal case but then you need to store uh uh alter some addresses in order to have to know which is your alternative parent or children okay in a multi-topology case you don't need you don't need that they are really running in parallel so but in a certain way both require some some additional uh State on the different nodes so I said this is pretty uh trivial I mean there is not such a thing as a free lunch right so when the multi-address uh case in case of a link you you will have"
  },
  {
    "startTime": "01:08:00",
    "text": "basically two routes and then you have these multiple links you build a parallel topology when something happens like in this case in this example we have the link between one zero zero and one zero that he at some point breaks um after detection one zero zero can use the other topology in order to send a an icmp notification to the root in order to say this link is down and this is this is done on the alternative topology using the address zero one one zero zero sorry for all these bits going through the alternative route and then the original route okay this is from let's say from uh the bottom side of the link on the app Sim side the denote one zero just send an icmp straight up through the different layers to the root and for optimization you can use some uh some some CMP messages and also to to delivering children in this in this way Whenever there is a a packet coming from the leaves or the the sub trees of one zero zero going up and in principle should go through the link between one zero zero and one zero you can tunnel through the alternative topology and send it to the root okay on the way back let's say that oh there is a packet from the root could have come externally or from the local domain doesn't matter when it is on the route and you look at the destination address now the route needs needs to remember that there is a broken link and so that it needs to Tunnel the bucket on the alternative topology back to 100. okay so basically it uses the alternative"
  },
  {
    "startTime": "01:10:01",
    "text": "path goes to one zero zero decapsulate you see the real destination and you send it down to the real destination okay so uh the the the the the state that you need to add is in Niche no each node that is um has a broken link uh absely more donesting there is this additional stated that you have to remember that the link is broken but it's not that much stage you still need to to have this this information on the Note right um You need to know the alternative path but this is pretty simple because you have the the secondary topology okay you just need to encapsulate there is some State on the root because the route has to have the knowledge of all ongoing failures and where to um encapsulate in order to Tunnel the packet to the right node I mean now this is uh hopefully limited State because you have few failures but if you have a lot of failures popping up in your network so the state that you have to keep on the root is not anymore your problem you have a bigger issue with the reliability physical reliability of your network right so if I may if you think it's possible to speed up a little bit yes yes so I described this this logic to us so I don't really need to go over this slide here um I will go straight to the single single address uh case with the simplest uh the same scenario okay a link failure between one zero one zero zero as you can see now we don't have double addressing it's just that uh in this case we need to keep a bigger neighbor State with alternative"
  },
  {
    "startTime": "01:12:03",
    "text": "parents and children in order to know what to do when the link fails you basically one zero zero send an icmp message through 110 to the root in in order to say to do the same notification basically okay so we need to exchange Samosa state but we still can walk around the the link failure okay and when we go down uh The Roots knows that something is wrong and it can decide to um do some kind of source routing in order to send the packet to the right destination looking to run through uh forwarding through an alternative pass in that case however you can have some hope at it because uh you need to to embed the path the alternative path which is the not not the natural pass a path in your pocket okay for the sake of time I will skip the the um the flowcharts but these are in the document uh pretty easy so if we want to compare a little bit to classes the multiple addresses single address the the amount of state that we see in the root in the multiple addresses is low because you just have a redirect rule the single address the root needs to know that your full topology knows that when we go downlink we need to know which path to build okay in in the forwarder nodes the status is in both cases relatively low some some rules can be um there or neighborhood and the robustness uh if you have multiple failures the multiple addresses there is no clear synchronization could be weaker in that case"
  },
  {
    "startTime": "01:14:01",
    "text": "but in the single address case since the route has a global vision can do semester choices but again if if you have a lot of failures then you have a bigger problem and that's it about being a little bit of time if you have any question now or later on on the mailing list please send any feedback okay any questions from the room or remotely okay okay so thank you very much thank you for the presentation so the next presenter will be me actually so shweta if you can share the presentation okay thank you so hello again I'm going to present the last update of the draft and title transmission of she compress packets over IEEE 802.15.4 networks Mike author is an Amina burum From macleon next please so first of all a reminder for the motivation of this draft as this working group knows well RFC 622 has been the basis for header compression in six low pan and also in six low with these rfcs possible to compress a 48 byte ipp6 UDP header down to just seven bytes in the best case with global addresses however there is a more recent specification called Chic which is the main product of the lp1 working group which is able to compress even further the same header down to just for example one byte that's because cheek uses static context based on a priority knowledge of the header field values of the packets that will be"
  },
  {
    "startTime": "01:16:01",
    "text": "transmitted then if we take into consideration also an application layer protocol like Co-op uh there is no six low band style header compression defined for Co-Op but there is a way to compress Co-op headers with Chic so here we are considering two examples two cases of Co-op headers one which is a means no header options which means uh had the size of four bytes case b corresponds to the example in Table Six in RFC 8824 where the cop had a size is 16 bytes so in both cases the seek it's possible to compress those two headers down to just for example one byte which leads to a total Improvement which is quite significant uh if we consider the join IPv6 GDP Co-op header size with six low pan we can compress those down to 11 or 23 bytes depending on the two cases but we think it's possible to compress them down to just couple of bytes in both cases so for example this represents a battery lifetime Improvement for battery operated devices over 15.4 by a factor which in theory could be even greater than two although a disclaimer here is that the actual Improvement will be lower depending on the different parameters and settings like the device Hardware features such as sleep current consumption different settings at the Mac layer adaptation layer application layer payload size Network topology and so on next please so just to provide a few more details on this this figure shows the maximum battery lifetime Improvement Factor as a function of the co-op payload size in the horizontal axis and here we are assuming some things like short Mac addresses intrapan communication and a sensor that is battery operated and periodically transmitting a message for example containing sensor readings over 15.4 and we are considering also star"
  },
  {
    "startTime": "01:18:02",
    "text": "topology and mesh under so we may add route over in in future updates of this figure and as you can see there is some improvement factor which is reasonably significant and it increases as the core payload size decreases and anyway this is theoretical results so the actual Improvement will be somewhat lower next please so on the status of this document there was some previous uh document a precursor to to this one which was presented already in ITF 110 then this document I'm presenting tries to provide all the details required to enable the transmission of sheet compress packets over 15.4 networks and the previous versions previous first four versions of the draft have been presented in the last four ITF meetings and today I'm presenting revisions zero four and zero five where the main one is actually zero four uh which aim to incorporate the feedback from the last ATF and also from discussion on the mailing lists of the six low and lp1 working groups next please so let's see the update in the draft first there's some changes in the organization of some of the content in the document previously there was section 6 entitled multi-hub communication which now has increased and now uh it's located in Section 3 architecture also we have modified the change of the two previous subsections in the architecture part in order to provide a better introduction to the multi-hop communication topics then in these multi-hop parts we describe at the moment three different possible approaches to transmit a compressed sheet compressed packet over a 15.4 multi-hop path and then section 4 has been extended as well because now we provide the frame formats that correspond to these three"
  },
  {
    "startTime": "01:20:01",
    "text": "different approaches and finally there used to be subsection 5.3 in Section 5 about header compression examples however well the the section still by the way needs to be developed and now for the moment we are moving it to an appendix which seems to be a better place probably next please so on Section 3.3 on multi-hub communication these are the three approaches by which compressed packet maybe transmitted through a multi-hop path in a 15.4 network now the first one we are calling it straightforward route over approach in this case all nodes must store all the rules in using the network for compression decompression that's because maybe a note could be a node in the middle an intermediate mode which might need to decompress and compress again however while this is good in terms of header overhead this is probably more suitable rather for small stable networks or perhaps without nodes without memory issues then there's another approach perhaps for larger networks which we are calling now tunnel Ripple based route over approach where an endpoint must Only Store the rules for the communications it's involved in as an endpoint so later we'll see the the details for this one which is the details have been added in these last dates and there is also the mesh under approach by which an endpoint must Only Store the rules for the communications it is involved in as an endpoint as well next please yeah so on the tunnel Ripple based route over approach here the assumption is that we are using Ripple non-stirring mode and the overview would be as follows packet sent by A6 Ln are tunnel upward to the root and if the final destination is another 6 Ln in the same Ripple domain then the"
  },
  {
    "startTime": "01:22:00",
    "text": "packets are tunnel downward from the root so then we have RFC 9008 which describes how a packet would be transmitted from a 6lm to another node which could be another six land or the root in the same Ripple domain or an external node so according to this RFC for downward traffic there is IPv6 in IPv6 tunnel except when the route itself is the packet source and there's the tunnel it terminates at the 6lm if this is a rotting away a leaf or at the last 6lr if the 6ln is routing and aware node and then for Upward traffic there is IPv6 in IPv6 encapsulation performed by the or initiated by the 6lr if the signal line is rotting unaware node and by the way there is no tunnel if the destination is the route and then there is IPv6 in IPv6 encapsulation only optionally from the 6ln if this node is a routing aware live so next please so we understand that we need to have a tunnel for Upward traffic so we understand that this document would need to update out of c9008 by stating that when I seeks the land transmit the sheet compressed IPv6 packet it must be tunnel by means of IPv6 and IPv6 up to the root regardless of the Final Destination and then there's another point which is a to-do at the moment which is address the case of the 6ln being routing and aware Leaf um because in that case it is the 6lr the first XLR the one who initiates the tunnel or the last six dollar the one who terminates the tunnel so we need to address this case and then for the sake of efficiency the idea is using RFC 8138 to compress the different routing artifacts the IPv6 and IPv6 headers the Ripple option and the source routing header next please"
  },
  {
    "startTime": "01:24:05",
    "text": "so these are the frame formats that would be used the first one is the one that we had seen previously in in previous versions of the draft this one can be used for single Hub communication or in the straightforward route of approach so here this format starts with the Chic dispatch some bit pattern in page 0 in this case that signals that what comes next is a sheet compress packet and then what's new is the formats for the tunnel Ripple based route over approach where we can see the main downward the main format for downward communication which is inspired by uh product c8138 where we start with the page Suite which indicates that we are in the dispatch type page one then there's the six low R8 headers for the source routing header Ripple packet information ip9p encapsulation and then uh ship dispatch telling that what comes next is a sheet compress packet but in this case the dispatch would be in page one so as you can see it would be the same bit pattern but in this case also in page one by the way this bit pattern seems to be not allocated at the moment next please so for Upward transmission the format is similar however in this case we don't need the source routing header and formation under the ideas that the formats would be the same as those in RFC 4944 however the compress header in this case of the IPv6 packet would be a header compression would be made by means of chic next please so there are other fewer dates in Section 5 which is about Chic compression of IPv6 UDP called headers now we've added that each row defines"
  },
  {
    "startTime": "01:26:00",
    "text": "the set of protocols whose headers are being compressed or decompressed for example in some deployment one could decide to assign rule IDs one two three for example to compress the IPv6 header Only Rule like this fall to seven to compress IPv6 UDP and Rule like this 8-15 to compress IPv6 UDP Co-op and other than that we also have a data Diana considerations because as mentioned before we need to request the allocation of a dispatch type for Chic but not only in page 0 also in page one and by the way it seems like especially if we need to update perhaps a role RFC well we may need to keep the role working group in the loop perhaps more formally even if some of the participants are actually also seasonal participants okay so next please yeah so the document is getting more and more complete of course it's not yet finished but the offers would like to ask if the document would be ready at this point for working group adoption thanks Carlos so oh can you get a sense from the room um on how many people have read it and would be interested in reviewing and continuing to work on this as a work group document should we do a show of hands or hum yeah so I'm hearing suggestions to if you maybe want to run the poll through miteko Maybe"
  },
  {
    "startTime": "01:28:26",
    "text": "thank you thank you okay so shweta if you yeah so we have about 16 people who raised hands in support no one opposed it so we'll take it on the mailer and start our group adoption gone okay thank you thank you any comments or questions so we are well we have one minute left there is if you recall there is this if time permits presentation so perhaps if it's possible to do it maybe in five minutes quickly hangxi are you present yeah"
  },
  {
    "startTime": "01:30:19",
    "text": "okay hello everyone my name is Hunter and I'm going to present an IP copy extension next time please yeah the background is really simple the ipcon is compressed IP IP payload and the the compressor penalty prepared with ip.com header contains the compression parameter index to indicate the compression algorithm and is located in the IP Circle this registry no no sign please thanks yeah and under the problem with the IP comes the first problem is that incompatible with network function which requires the name for information for uh because and therefore information is is already compressed so for for example an ite file or ACL menu to access this compressor information so they cannot deploy between the IG comp nodes next size please so the first extension is about do not compress this Source proton destination for the information basically there are two options to do that we can change the flags to add one bit indication or we can change the CPI to duplicate each compression algorithm code point and the second problem is that uh Auto photo processing basically it's because the ipcon May produce longer pay nodes"
  },
  {
    "startTime": "01:32:02",
    "text": "the compression is not effective for example and the obviously says that if uh if compression is not effective you just send the uncompressed results and the IP comp header but say in the decompression side the packet with the IP comp header will go through the decompression code processor first but if a package is without IP comparator it will be forward directly so it's different process is cause also of other next so the the second negotiation is about so we add the ipcon header regardless of the if the pain of this and uncompressed or not we can just add a new CPI value for the uncompressed packet next next side please yeah that's one basically we think a signal also have some kind of compression on the header so we think we can ask a phone the suggestion about this kind of design thank you anyone had a comments so at the moment there are no comments in the room or remotely perhaps it might be good if you send a pointer to your document to the secret reading list okay just in case people have time to read it also people who are not present in the meeting okay sounds good yeah oh yeah okay yeah so so did you hear the comment yeah yeah okay okay so yeah okay thank you okay so the session ends here thank you everyone for the participation"
  },
  {
    "startTime": "01:34:01",
    "text": "and hope to see you in Yokohama thank you as well thank you foreign"
  }
]
