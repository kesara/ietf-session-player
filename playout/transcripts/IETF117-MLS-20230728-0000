[
  {
    "startTime": "00:00:08",
    "text": "We only need the decisions. We don't need the play by play. Yeah. Right. The guy that wrote the protocols are gonna take the minutes. Thanks, Richard. You wanna start? manager. Okay. Hello, everybody. This is MLS. MSL here on the on the slide. For the sale, just say that you're paying attention. This is this is the note well. Please read it online if you haven't. If you've been to any session, you've probably seen it. Here are some meeting tips. So if you're in here, we have a QR code, scan it. This shows that you're here, and make sure we have a room that fits everyone next time. end with that. This is gonna be a pretty packed schedule, wants some technical things. and This is graffiti, you know, the MLS after the protocol RFCs put out, it's, you know, it's getting the word around with the Street team again, apparently. So apparently, the story was I think somebody took this that's in this room, but it turned out it was on the bus line where Benjamin Duce, and then he uses that, like, bus line every day. So we thought this was very Apropos. Okay. So we have a full agenda. Let's move on to oh, here at the distributor. So This is these are the talks. We're gonna have time for questions for each of these. And there there may be some additional changes. We already have one agenda bash Is there any other"
  },
  {
    "startTime": "00:02:02",
    "text": "changes that people would like to record to request So, yeah, my only request would be that, and maybe not last. if I could move one up. So we've -- Great. -- people that were right before you asked to move back in the line, so that might work out. that you're not absolutely last. Okay? Cool. Great. the the grand announcement at this meeting before we start is that our RFC is actually published. 9420. Richard will pass out some champagne. take minutes, I appreciate that. Would you like the last Thank thank thank you very much. Thank you very much. And I guess the the other document that's in process is the detector document, and Eric has, like, 2 sentences to say. So it'll ask him to come up, and then we'll jump into Richard's Yeah. So, you know, sort of looked through it and decided I need to go more editorial work. So I've been doing some of that there shouldn't be any really, like, substantive changes about, like, the actual tactical stuff, but, like, I was trying to make you know, make it more meaningful for people and more Portugal. So we're only about half of the changes. Feel free to look at them, you know, the new draft, and it's gonna be, you know, panning those out every few weeks, and then we should be done That's cool. Great. I appreciate it. Yeah. Like, next couple of weeks would be awesome, then we can get the other one out the door. So picture. Right. just say next when you went to the next West June May thought that the protocol is complete as published, we need to add more stuff. Next slide, please. So we made 3 types of credential. Well, 3 identifiers for credential types. in c, basic credentials which have no identity associated. X509 credentials, which are, like, follow-up certificates, but we need more Next slide. In fact, we need to double the size of the INA registry. So this this document proposes a few new things."
  },
  {
    "startTime": "00:04:01",
    "text": "So user info VC is a new format for actual credentials. It's a way to issue credentials to users more easily. then these multi and weak multi credentials are basically rich And credentials is a way to combine some credentials of other types so you can present multiple credentials for a single client in a single group. I'm gonna talk about each of these real quick. Next slide, please. user info VC is probably the most interesting ones. This this So ties together with some group some work that's going on in the open ID foundation. to make it possible for open ID providers to issue credentials that are compatible with MLS. So open ID is working on issuing these things, and this is the corresponding document. to time into MLats. You may be familiar with a bunch of this stuff, in this JSON object if you looked it up an idea before us. We got, like, names and given names and family names and email addresses, all the stuff that you're used to authenticating with an FID provider. The thing that's cool and new here is this did GWK thing which binds all this identity stuff to a public key. So think if if you, like, squint your eyes real hard, the 3 the 3 main things in a certificate, our identity stuff, a public key, and a signature. so this is basically a JSON credential JSON Certificate Lightning gives you those 3 key attributes. in a way that fits better with open ID and the way that that community talks about user identity. idea is just, like, if you got an SSO provider for an enterprise that's already doing open ID, you can extend that pretty naturally do these certificate like things. And now with what we've defined in this document, you can pull those into MLS. and have end to end secure communications authenticated by your endless enterprise SSO provider. So, like, if you're having a Webex meeting, it's using MLS, presenting these credentials, You know that Webex isn't impersonating you because the other side, because hearing directly from the other side's enterprise SSO provider."
  },
  {
    "startTime": "00:06:04",
    "text": "So that that's the pitch here. It's kind of notching together with some stuff from Open ID. Next slide, please. Now As we start you know, as folks have started looking at implementing, you know, these identity schemes in reality, both traditional certificate based stuff and these new user info ones, are some cases where you want you might wanna present multiple credentials for the same clients in a given session. So if you're a messaging provider, you might wanna say have one certificate from the messaging provider that says this user has this handle in the messaging system but also provide a user info VC credential that says the SSO provider says the person has this email address. And so you get attributes both from the messaging provider and from the SSO provider. both of those tie together. So what these multi credential schemes do is say you have a credential of, you know, a given type that has a binds to a signature key. And then these signature keys that go through credentials all blessed the single signature key that is gonna represent the client in the MLS group. So, I mean, it all kind of fits together in in the straightforward way. Each multi credential is a collection of credential bindings which have the credential, the signature key, and the signature over the leaf key. Kind of as you'd expect such a combiner to fit together. The slightly interesting bit here is the multi versus weak multi distinction because there's a couple of different use cases here. So if you in this case where where I was talking about where, like, you wanna present a provider level identity in an so level identity, you probably want everyone in the group to understand both of those credentials. and so they get all of that information, understand all that information. So that's what multi credential does. So everyone in the group has to support all of the credential types in the multi credential. covers"
  },
  {
    "startTime": "00:08:03",
    "text": "in MROs could try and make sure everyone can process all that could credential. We have uniform credential support. So we continue that support everything scheme with the multi credentials. These weak multi credentials loosen that a little bit. And so this is to allow for, like, transition scenarios where maybe I'm trying to introduce a new type into my system. And so everyone starts out supporting the old ones, maybe, half the group now has upgraded, and they support the new format. And so this weak multi format allows me to present old and new credentials, And as long as everyone in the group supports 1 of those 2, okay. So, really, the only difference between these 2, all the processing works It's staying, only difference is how we evaluate these support requirements when we're adding folks to the group. We're adding credentials the group. And I think that's it. Next slide, please. I think a couple of folks have taken a look at this. It's it says draft 0, but it's really kind of a draft of 1 because we did another one for sites. Yeah. We just renamed it. We've got a draft implementation in MLSPP. We're working with some open ID providers to prototype out the open ID end of this so we can flown all the way through. Yeah. I'd love to to get an adoption call and any other expressions of interest and, you know, folks are interested in the draft as it is or other other types of credentials that people are interested in, you know, since we've rebranded to additional credentials, we now have what kind of a bucket draft. So if there's, like, you know, you know, fancy moonshot credentials that people like. We could in principle, had this here too if there's if there's momentum. That's all I got. Sure. Yep. Ruffer Roberts speaking. So I haven't read everything in detail, but I think in general, this is something that we need. So we need fundamentally, this dissociation of a very long term identity of a user with something that you use with MLS. simply because you want to rotate that more frequently."
  },
  {
    "startTime": "00:10:04",
    "text": "This is good for FS and PCS for the actual signature key. There's some very practical aspects like for example, having the the long term certificate in a secure enclave in a phone that is secure, but that you cannot always access when you need it to sign an m and s message. So this layer of interaction is important there. and and generally supported, we go to seeing that with a reduced metadata, for example. It's useful there to have one more layer of interaction, for example. So Yeah. Fundamentally, without, yeah, acknowledging all the specifics here. I think we we should have that. So I'm expressing some interest here. Yeah. expect Go ahead. Hi. Yeah. This is this is super super useful, good work. I know, been following this for at least at least 9 months now. and this is finally, you know, starting to cover all the major all the major issues. So I think it's ready. for adoption. and I will you know, I I'm willing to to do document, reviews, and implementation. wanna Daniel Con Gilmore. I also support this work. I think it's good to exercise some of the extension points that we have this early on. I think it's good. Rafael, I just wanna try to understand. You said that you thought this was used that the decoupling of long term identity from and the less keys is good for You said FSN. I think PFS, which to my mind is forward secrecy, but I didn't think these were secrecy keys, not. So are we actually using No. They're the private keys are secret, but I I thought that the key Well, that the key schedule was not related"
  },
  {
    "startTime": "00:12:00",
    "text": "If any of these keys are lost, I didn't think that they would break the confidentiality of the So maybe I'm misunderstanding something. which is entirely possible or or -- No. No. You're correct. Like, the the loss of these private keys would violate authenticity. So -- But not confidentiality. Right. Okay. I just wanted to confirm that I I haven't missed a a big page of what's happening in in the last year. Just just to rephrase what I what I I think Rafael was hitting on I I've shown this example structure here with 3 different credentials. but you could actually have a degenerate case where you have a multi credential with only one credential For example, if you have an external wallet that holds a a verifiable credential that could bless, you know, sign one of these credential bindings to bless a an emilevski without having to be kind pulled across into the MLS boundary. So there's kind of some utility to this this in direction structure even without the multi multi part I apologize for not having read the draft, but does this allow for indefinite recursion? What what kind of what kind of headaches are we over -- I I I intended to for multi as one of the I I forbid recursion. I don't know if it's in there. That's a it's a good thing we should make sure to get. So, yeah, FS and and and PCS, I didn't mean that Yeah. Yeah. regarding MLS. Literally, the key material the signing key material. So, for example, you have a long term credential in a secure enclave. You have a short term signature key that you use all the time for MLS. your phone gets compromised, that short term signature key gets compromised However, you can issue a new one that is signed by the one that is in the secure enclave. So the damage is not too bad. That's what I mean. No. There will be PCS, I think, in that case. Yeah. hit. Real question while speaking. I generally like the idea about using using in you know, user info VC and"
  },
  {
    "startTime": "00:14:01",
    "text": "And I wanted to ask about the multi and weak multi credential big. I think the these are, like, a a meta version of the, like, credentials credential type compared to, like, user info v c and x 509. So, like, I I wanted to ask why did you why did you choose, like, include this at this layer instead of, like, doing the separate graph because, like, this this this would result this may result in, like, as someone said, like, like, infinite recursion. I I'm hopefully, we can avoid the infinite recursion just simply by forbidding multi Yeah. credentials as a credential type in a multi credential. Okay. Yeah. Yeah. And so so, yeah, I I put them in in one draft just because there were more credential types, and it saved a little bit of text. But if if folks think they should be split out, I'm happy to do that as well. Thank you. Alright. So we're gonna run a show of hands. see if we should do an adoption. So I'm gonna start 1 in a second. So, hopefully, you've logged in. you're able to participate. Here we go. looks like Yeah. I I can't get it. I'm raising my head, Sean. Yeah. Yeah. Cheers. Alright. Well, it's it's unanimous at this point. Excellent. So we'll call that done. Thank you, Richard. Thank you. And, again, it's always a starting point so the draft can get adopted and then get whacked. So yeah. Alright. So next, We have Rowan. Do you want me to do it, or are you gonna do it? Please run the slides for me Okay. And I'm gonna take you up on your offer to do an abbreviated presentation. Okay. So next slide. Bye. It's me. you're fast, man. So So"
  },
  {
    "startTime": "00:16:01",
    "text": "the the two drafts that I most wanna talk about are this the draft that is on this slide and then one on the next slide, which is the self remove proposal draft. So What is this? This is a quick and dirty, Safer Suites using an already defined, already INA registered, key exchange mechanism, So this is a hybrid post quantum, Kyber and traditional x25519, key exchange mechanism. that instead of doing the default super suite, instead of doing a diffie Hillman cam using x25519. We do it with this hybridpostquantum traditional Why this why is this important? This protects from the harvest now encrypt later attack this category of replacing the chems, replaces from this category of attacks, where somebody can go and download traffic, and then decrypt the crip the traffic later, even, you know, could be 10 years later and that traffic might still be relevant. So this is super straightforward to plug into MLS. it's actually quite fast. This was roughly two and a half times slower than just doing x2 255 19 alone in our implementation. It's it's big, but it works. It's implemented it's super straightforward. Now is this, like, the end all be all of post quantum? And then the last absolutely not. So there are several Cypress suites which would know, which could be coming. we could have a much more generic approach to how we're going to deal with Post Quantum. First of all, Kyber is not yet standardized. It's probably gonna be another year. before NEST finishes the the process. And so there will be a new version of this thing, which is now Now Kyber with some small changes."
  },
  {
    "startTime": "00:18:02",
    "text": "there will be postmortem only versus hybrid, key exchange mechanisms. There'll be hybrid approaches which mix versus concatenate. there will be there will be the desire to post Quantum signatures or postquantum and traditional signatures. And there will be other postquantum approaches, which require MLS extensions. So I know that Joel, for example, and Brita have mechanism that they've been they've been looking at that could really solve the the size problem, but requires some more substantial changes to MLS. So I think this gives people the opportunity to go and implement something soon, that can solve an immediate problem or let people get some experience with a new Tim, it's It's easy. And I would really like if we could if you can move forward with this. and not wait for, like, the ultimate You know, here is, like, a pull post quantum framework for MLS. And I also support that work as well. Okay, thoughts, Rafael. Yeah. I think it's great. I think we you know, unprinciple because We've been working on MRAS for the past 5 years. We've always said MRAS is post quantum ready We cannot keep saying, you know, in theory, it's post quantum ready, but, you know, we don't know we're gonna do exactly. So that's why we need this. A couple of remarks. I think the attack is called Harris Now decrypted. The teens. I noticed that. Unless you know something we don't know, And so specifically for that attack, I mean, this is much more than we need for that attack, where you already alluded to that there could be a much more lightweight version of doing that."
  },
  {
    "startTime": "00:20:02",
    "text": "because this gives us, you know, full FS and PCS. a post quantum level that we don't need specifically for that attack. So But as you are also said, we can solve that later, and folks already working on that. So, yeah, I supported I I think we should do that. Yeah. Richard Barns, Rafael. The the encrypt later attack is is the latest ransomware technique. Yeah. So, Richard Barnes, I I also support this work. I I think really nice too that we, you know, we we sold our our quantum support by a post grant support by relying on chem, so it's nice to to finally reach that now that we've we've got the the protocol ready to go. The only thing I noticed that we should probably get tuned up is that the symmetric bits are AES 128, and shot 2 56. I think they should probably be bumped up the larger sizes. Oh, True. Yeah. So I also question that. and then But what's the ban told me that I was wrong. and that AES 128 is good enough because it's Unlikely to be subject to the the grower. thing because it cannot be paralyzed well. So the security level is low. But if you cannot paralyze stuff, it's good enough. So it's very unlikely that's that's will become a problem in practice. And a lot of other things are much more likely to happen. So, apparently, there are some consensus. Or it's a bit of an urban legend that you absolutely need AS 256. Also, my For optics, it might still be a good things to do maybe. But yeah. Also, what I've heard was that the Yeah. reason for Cyber 768 instead of 512, was to get up to so that it was above the 128 or at or above the 128 level."
  },
  {
    "startTime": "00:22:01",
    "text": "Okay. Okay. Yeah. And this may be something just to get a few folks to look at who are in the space in addition to us. the the cost of upgrading seems pretty low, so it may just be conservative yeah, we should get advice on it. k. For the hail, I also hardly support Jafarone mentioned that there is ongoing work for another version hybrid is intrinsically different use cases so that they're not in competition at all. and definitely think this is a good way to go. Hi. Michael B, UK NCC. On the a s 256, s 1 to 8. We're using X Two 5519 here. That's roughly equivalent to a s 128. So let's be consistent and stick with that or go larger on the cans if you want that. other thing is thank you for using the terminology of my colleague in her. draft, which I should be very grateful. You can thank Paul Hoffman for that. Corey? Considering that pretty much everywhere, including microprocessors. a yes to 56, is accelerated hardware accelerated. Regardless of how expensive grovers algorithm is going to be in in practice. Who cares? it's not that expensive. to just use AES to 56 and not not worry. this standard requires AS to 56. That one requires AS 128, that obscure one wants a s 192. There is a reason why CNSA 2.0. a settled only on a s 256 for everything. It's simpler."
  },
  {
    "startTime": "00:24:02",
    "text": "Or did you support the draft moving forward with or without as a s 1256 or 128? which are And I am 4 moving this draft forward. I prefer to keep a yes to 56. correct. Out. Yeah. I think keeping the alignment of security across the symmetric asymmetric aside, we're gonna do a call to whether or not this is something that the the group is interested in adopting. Should shares be should work your call. Call for adoption is always on the list. And there are more for this one. I'm gonna end it. Yep. Yeah. Okay. Next one, please. -- this and the previous one to the list. Thanks, Ron. Alright. Next slide. there wasn't another one on there. the softer move? Ah, one more. Yeah. Okay. So right now, removes are challenging. So in groups with lots of joins and removes, it's hard to leave. because external commit commits can invalidate remote remove proposals. So what we've seen in in our actual testing is that a client in the absence of, like, a sort of a designated, you know, either joiner kind of control node. Clients might have to wait an undefined amount of time which often is several epics, like, between 3 and 7 epics before they're able to leave. because they send they send a remove proposal. Somebody else does an external commit to join. another external commit to join, they might actually issue the same proposal over and over again, for finally, they're able to get it in. and someone else is able to commit it."
  },
  {
    "startTime": "00:26:00",
    "text": "So this and this is problematic because that client has access to the key material for the entire time that this is happening. and but and it's just annoying for the client that just wants to, like, leave the group. So the self removal proposal type, it has one critical difference with remove which is that external committers are required to include any pending self removed proposals which are valid. So Remove proposals are not valid inside of an external commit. high spec. It only includes it includes a null body inside of the proposal itself. but because the leaf the leaf index comes from the the self removes sender.leafindex. Lastly, because a sender of an external commit can't validate the membership tag, it skips this validation. And in the security consideration section, describes why this is no worse then the status quo with group inflows, which it also cannot validate in the in the exactly this same narrow manner. So I received a handful of comments on the list after I submitted this. Those have all been I've all been addressed in the editor's copy. on the GitHub repo there. So in terms of next steps, This was discussed among a handful of people already, and it's been you know, there's been some comment. Is this something that we could move, for example, into the extensions draft what would folks like to do with this? Yeah. Just so to reiterate what you that you also hear it from somebody else. We discussed that intensively, ma'am. quite a few people. It's always a trade off no matter how you design and I think this is probably the best trade off. The damage that can be done here is also very limited because The only attack could be that, you know, the attacker"
  },
  {
    "startTime": "00:28:02",
    "text": "removes themselves from the group. So it's yeah. it could be a lot worse. So I think we should move this forward, and I also think that the extensions acumen is a natural choice for that because I I think the description is relatively short. And it's it's a very essential thing. And to a degree, I am to blame here because I was the one who proposed the external commits that introduced the problem in the first place. So, yeah, thank you for Thank you for fixing that, Ron. Joe Hall from Internet Society, although I'm not here here as an individual. Hi. It is it seems like having access to the carrier materials isn't such a big problem. The client could suppressed for the user, the user experience of continuing to receive messages. But Is it is the trick that you'll have to have sort of the time is will will be a while. You'll see, like, a spinny thing or whatever. until you're actually removed? Or or is it is there a deeper problem than that. It I mean, 1st of all, it's just it's annoying for the clients and indeterminate because You just don't know how many you know, like, there's no limit to how long you might weights. And particularly if that client is a mobile client and it's, like, near the end of its battery, And, you know, it's it's like it might wish to be removed, and it might not be able to do that in a in a finite tangible -- Yeah. -- amount of Okay. Okay. Thank you. Okay. I guess, you know, I we we can do a show of hands for, like, put the proposal in the extensions draft, but it if nobody's getting up to speak against it. That seems a little, like, overweight. Just submit a PR and let's get on with it. Alright? Does that work for you, Roan? Works for me. Cool. Thanks. Thanks. Take care. Alright. Okay. cool. I'll stop sharing those slides."
  },
  {
    "startTime": "00:30:00",
    "text": "back over here. We're gonna move on to you you your slides. Be prepared for the orange. was inspired by Richard regarding the color. Alright. Yeah. So I'm not gonna propose anything reduction today. Just talk about the MNS extensions give folks a little update on that. Next slide, please. So as you know, we have this extensions document that has already been adopted. Can we move to the the next ah, sorry. One second. Operator here. Yeah. So what we've been working on in the past months, although it was a relatively low key effort, was to see if we can actually give some guidance as as how to design new extensions in a safe manner. So the idea here is to give guidance in the document on how to do it to include a concrete API to the extensions, and then I'll give you some examples. that's still at work in progress. It's not there yet. It's happening now. Next slide, please. So these are the extensions we currently have. It used to be in the call protocol, it moved out of their targeted messages is something where you can send a message to just one member in the group and content advertisement that happened in the realm of mini, and there's gonna be more of that. Next slide, please. So, yeah, the idea behind the the safe API for the extensions is that you can design an extension that is not going to interfere with the core protocol, but also not with other safe extensions. that you don't have to coordinate with all the authors of all the other extensions. So it provides a a safe way to, you know, using"
  },
  {
    "startTime": "00:32:04",
    "text": "or or extracting key material, for example, and then, you know, using labels, etcetera. to disambiguate the key material and to have domain separation So new PSK times for the injection of key material, etcetera, exporting extension specific secrets, and stuff like that. Yeah. Next slide, please. Also, guidance on how to use the AAD. This is currently coming up for Mimi. And Also, yeah, regarding proposals inclusion of past. This is not putting it and using it with external commits where the logic might be a bit different. Next slide, please. So, yeah, there's been a lot of discussion on extensions we could do, and we will probably do So none of these are are really propose yet, and Not necessarily. All of them will go into the document. We have to see that. The question comes up regularly, but in our ability as We are no. It didn't make into the court protocol because there was not enough traction for it. We've been working. Again, it was a low key effort. on 2 modes of deniability. 1 relatively straightforward. 1 where we can have deniable application messages, but not denial group membership. and then a more comprehensive mode that we only started to look into recently, where essentially, even the group membership would be deniable We have something there We are not really satisfied with the performance of that. So this is work in progress. And, yeah, if folks are are super keen on deniability and, you know, want to see this move faster, reach out. would be interesting to see. Then we will have a bunch of mini related extensions as Mimi progresses. So the idea is that in the mini working group, we cannot really define extensions of MLS, so we need to do that in this working group."
  },
  {
    "startTime": "00:34:04",
    "text": "We discussed an ARBOC extension that we'll have some overlap with Minnie, so we need to see what happens with that. We discussed application messages from external centers. So what that means is Yeah. Folks extended to group can actually send information into the group. We currently have group contact extensions in the core protocol, And there in clear text, it might be interesting in some applications to also encrypt that. but could be another extension We already mentioned earlier the post content optimized node. unsigned application messages are of interest apparently when the thing that matters in terms of authentication is that a member is a member of the group but it doesn't matter who the member is exactly. And one thing that came up recently is in the core protocol we talk about transfers or key packages, which are key packages that you don't throw away. because it's your last key package. You need to keep that around. It will be interesting to market as such. so that we can handle them better. and potentially more. So if, yeah, if anyone is is interested in any of these topics, there are different people working on it. Please reach out and then and connect that. None of it has really been brought to the list yet because it's in some RD efforts still. Next slide. That's it. think that's it. Okay. Good. I guess as as a chair of a working group, that recently got done with the protocol that in the version got rid of a bunch of old extensions, I would just like to apply The restraint where possible, if you can not just go hog wild. because if we have version 2 to, like, blow up blow away half of these, that would not also, I guess. The other thing I think we might be talking about later we have time is the interaction with Mimi. It's not entirely true, like, for TLS, Right? Other working groups can actually define TLC extensions, but that didn't happen for years."
  },
  {
    "startTime": "00:36:00",
    "text": "because we wouldn't let them. And so maybe because this is a new protocol, they need to come back care because all the people who did it are here still. So maybe Yeah. Right right now the charter of Mimi for bits. to -- Alright. -- to do that. So we would have to recharter from them. Yeah. But that's Alright. Cool. Cool. My connection is failing, so I'm gonna reconnect and then we're gonna have Brita come up. Cool. Thank you. Alright? Sorry. Breta, if you if you can get in and or or if you can do it from your phone, that's that's all well good, but I'm out. Yeah. Like, share the slides. Oh oh, no. It's trying to do something now. Lang. I ought to be able to do this. Nope. chat room. for client. coming back. Sorry. Apologies. even look like we're gonna have time. Here we go. Here we go. Come on. yes. Request browser permission to steal away my permissions, get slides. Oh, guardianship. share. Cool. Alright. Cool. Alright. Alright. Hey. Good afternoon, everyone. I'm Susan Tan. I'm presenting some joint work with Doctor Hale and LC Fonavik. Excellent. So we're presenting this idea of guardianship for MLS. It's for use case where users with multiple devices operating in limited mode or receive only mode. still want to have some nice security guarantees that MLS offers. So some general cases may be some traveling user who has limited bandwidth. or remote IoT devices that have periodic activity or maybe even wearable devices that are in receive only mode necessarily. So getting to this concept of guardianship, it's"
  },
  {
    "startTime": "00:38:00",
    "text": "basically where you have a designated Guardian device performing updates on behalf of a edge device. which is the device that's in that receive only mode or limited mode. And so with this kind of concept, you have improved forward secrecy. and that the Guardian's periodic updates allowed the edge to be to have smaller security windows. And then with post compromise security, as it currently is, MLS, you have to perform an honest update after you're compromised to self heal. So this guardianship PCS concept is that the Guardian will be able to perform key updates on behalf of a paired edge to heal. Now this does require some kind of pairing or key sharing in between the Guardian and the Edge ahead of time. but we'll explore those in our constructions. Alright. Next slide. So before diving into the construction too much, Just wanted to share some of the design decisions that we ran through in in kind of designing out the constructions. So we have 1st, a shared leaf. So this is where You either have the Guardian and the Edge share an MLS leaf or their distinct leaves specifically, in the construction that we have, they're gonna be sibling nodes. You have a shared signature So this is the signing key and whether or not Guardian or an Edge can share a single signing queue or they have to have distinct ones. and then shared randomness. So this is ultimately going to allow the performance of updates. Nice. Next slide. Alright. So these are the shortlisted constructions that we came up with. And so they range from kind of a naive implementation of just doing Guardian NEDges in the existing NLS construct except that"
  },
  {
    "startTime": "00:40:02",
    "text": "you require them to be sibling nodes so that they have that shared path to the root. or you have the case of forwarding where you have a Guardian as a member of the MLS Group. but you have the edge being in a separate channel with that and having the Guardian forward all the control and application messages. There's also the 3rd and 4th cases here, which kinda get interesting and that you're now talking about them sharing a leaf node and whether or not they're allowed to have that shared signing key or or not. And so this kinda gets into Construction 3, 4, 5, and 6. 56 mirrored these 34 in that that shared secret amongst them is going to be either preinstalled somehow or in a shared and separate channel. And so you can imagine and 6 will have a dotted line between the Guardian and the edges. Alright? Next slide. So with these various types of constructions. You get some nice security features centered on extensibility, whether or not Either of them can be online, offline. So having this toggleable mode traceability and impersonation, And then Forward secrecy and post compromise security. So depending on which one you go with, which which construction go with, there are these various trade offs. and we definitely don't recommend, for example, construction number 2. that forwarding case if you're gonna go about exploring that. And and it's just that because you have that external channel between the forwarder and the and the edge. you you lose a lot of good security guarantees. So, ultimately, we wanted to see if the larger group is interested in This use case where we have, you know, many devices that"
  },
  {
    "startTime": "00:42:00",
    "text": "need to be offline or in receive only mode or limited mode. and having the MLS construct support this. So borrowing that. That's the end of the brief, and I can take any questions. Alright. Oh, alright. Daniel Cohen Gilmore. Thanks for presenting this. I like the systemic way that you're looking at the problem. What I don't see here is a mention about the visibility to the outside parties about what kind of devices or how many devices a person has. Is is that I'm sorry. Is that's not one of these items that you one of the rows on your table here. Right? So it kinda getting at the traceability of guardianship. Can we can you go back to the construction slide? Sorry. I just wanna see the So so So, yeah, maybe can you can you talk a little bit more about what you traceability of guardianship? Yeah. Yeah. So when we get we get to that through having the identity keys being shared or not. Okay. So if you do share identity keys, you really you really can't tell if there's a misbehaving edge or or if it's the Guardian misbehaving. But, ultimately, you can still tell that it's particular node misbehaving, misbehaving Right. The the parties who are not the ones who are setting up this Guardian edge relationship. Right? Yeah. Parties who are not, they'd be able to trace it back to that specific node since it's still a leaf node in the MLS tree. But if you have the case, for example, where in case 4 construction 4 here where they have separate signing keys. you'll be able to eccinctec you'll be able to trace back which one was the misbehaving one. And that also depends on the kind of distribution service you you wanna implement. Right. So I'm I'm imagining the sort of situation where The adversary wants to know when someone has gotten home. and switched over to using their client on on, you know, the"
  },
  {
    "startTime": "00:44:03",
    "text": "client that they have at home as opposed to the client that they carry with and when they're walking around. Right? I wanna know when they're home. I wanna know when they're not home so that I can go break into their house or target them because they are home, one of those. Right? And I don't I wouldn't want the MLS metadata to reveal which client the target is using at a different a different time So if we look at the table, Sorry. I went back to the table slide. Sorry, Sean. I know you're having -- Right. -- networking problems. And I'm like, I'm on I'm in this presentation. now. So let's go. Where does that at at I'm sorry. I haven't I haven't read enough of your work to know where would that kind of visibility show up in this table? And how how does it apply to across these different constructions that you have. Yeah. So across all the constructions, we have the ability to do a toggle online offline mode. And so depending on so what you're getting at is true, like, if if you're distribution service somehow is hacked by the adversary, then depending on which construction you have, whether or not you do the shared signature or not, they may be able to tell when you've come online or offline. Is it just the distribution service that's the potential Everseri here or any anyone in the chat as well. off the left. It looks like Veritas. Sorry. I'm anxious. I'll just jump in there Great question. So the when we talk about the traceability, obviously, since it's giving a short version of this. Transibility, if it shows green, then it could thanks. If the traceability shows green, then other devices could potentially see if it's, like, full green there, then, yeah, they can see it. If it's partial green, then it really depends on the distribution us. So what you're getting at is really is it a bug or is it a feature question? because sometimes it's actually good that the other device is, you know, assuming that we are all doing the sort of mode that we want to know that I'll have, like, some, you know, parallel device sitting and listening to the conversation that it's"
  },
  {
    "startTime": "00:46:00",
    "text": "really you your main edge. Right? And then there's a version of, I actually don't want other members to know what I'm shifting between devices. So It Yeah. Basically. It it's kinda like depends on which use case you wanna aim for, and that's why with students presenting here is saying, what is the group interested in, or are we interested in this sort of offline and it's not true offline model. I'll say that. It's a if I'm in receive only mode so I want to be getting in messages, So I want some sort of updating to happen so I can get the security guarantees are people interested in it and which sort of things are concerning because there's clearly trade offs between those. Okay. Thank you. I I I need to think more about the different trade offs here, but I I appreciate the details. Hey, Richard. Thanks for this this presentation's interesting to consider some new properties here. It seems like something that could be useful. I was wondering if you had kinda drilled into kind of what the protocol implications would be of of some of these different proposals is are these things that would require MLS to operate differently, say for a commit to have a different shape or are these things where the Guardian might attack something, you know, stapled something to the side of an MLS message that gets read by the edge node. And so it could be kind of done kind of outside of MLS. We we didn't look at it specifically in terms of, like, what the commit messages would look like for this, we we analyzed it from just, in general, a continuous group key agreement protocol would would need to do in order to accommodate this. I'll let Where did I answer again? Sorry to jump in. So to answer your question, most of these, nothing would have to change the MLS protocol. It's treated as a black box. the couple right at the end, it would depend on will we allow multiple signature schemes per leaf note. So that would be the main change. Most of the rest doesn't get changed, and it would be external."
  },
  {
    "startTime": "00:48:03",
    "text": "There there may be then some overlap with the multi credential stuff from earlier. Okay. Yep. That is the draining the queue, and we have 10 minutes left. Any other questions? But k. So I'll be the last power of those 80. Sorry. I'm not questioning for this, sir. You meant yes. So I have a question about the this internal, sir. Yeah. So, I mean, like so what would what's the plan? next if there's, like, not go away. I didn't hear anybody say go away. I was I gotta think about this a little bit. The next step is to Yeah. And We could work on a draft. Yeah. Yeah. Yeah. It sounds like so the main goal is to see if there's interest, and it sounds like there's a couple points of interest, particularly with, like, multiserviewites and stuff. And then those people then hopefully get together and write the draft and bring it back and see what be able to stick with that goal. Right. Awesome. It looks like there's maybe this is maybe sampled from a bigger write up. Has that been sent out the mailing lists? Okay. Yeah. I I would be interested to kind of understand, like, the the deeper detail here. Yeah. And we we have a paper that's in in review, and we'll have it out in eprint soon. Great. Cool. Thanks. Yeah. Cool. So I guess the summary is we'll write an ID. Internet draft. Awesome. Great. And, Paul, you get the final word. if it if this is get the the whole session. Or or is this gonna be, like, if you wanna session next time, make send it on time and get the room appropriately sized. because, by the way, that was all my fault. So yeah. Okay. learned some lessons on that. Well I No. No. There's No. I'm I'm I was I'm not saying that any of the work that is proposed today is not in charter. But Nothing is a charter. So we need to re charter. So let's take an action item for the chairs that need recharter and then the working request to figure out what to prioritize and to set some milestones. So"
  },
  {
    "startTime": "00:50:01",
    "text": "maybe have that discussion I can do that That's all the good plan. That's a fair fair comment. And with that note, we're gonna call it a day. Alright? going once, going twice, Thank you. Thank you for taking notes, Richard. So enter your I'm what Yes. quick one was getting some questions from the audio t force. Yeah. shows"
  }
]
