[
  {
    "startTime": "00:00:09",
    "text": "Yeah. Okay. It's 5 football. So it's 5 o'clock. This is the DNS op working group. Welcome. This is session 1. We have a Second session on Friday morning. Right. Okay. So my name is Benno. Reiner, Suzanne. Sitting beside me Tim is following our auto chair, Timmycinski, is following the DNS Up Working Group Remotes. Hi, team. Area director, Warren, here in the room. And it's over there. Hiding. No. It's over there. Lawrence, stand up and take. Nah. So, meeting notes, by Paul. Thank you, Paul Hoffman. That's it. So Of course, this is an IETF meeting. So the note well applies here. And we assume you're all familiar with the note well. Okay? This is important. Now we're, well, using Meet's echo as also as the blue sheets. So I really, really want ask everyone in the in the room, and we have full room to use the on-site meet echo tool. Because then you sign the blue sheets. And they are counted. All your names or Well, the attendance is being counted and use for the reservation of rooms in the next IETF, meeting So sign in If you go to the microphone, Raise your hands, on the on-site media account. And then you walk off to the microphone. We really a strict So if you didn't raise your hand on the all side tool, you don't get microphone time."
  },
  {
    "startTime": "00:02:00",
    "text": "Remote participants well, they're already registered if they use the tool, of course, and preferably use headsets. Like, K. Good. This is also part of the note well, but we really, really like to stress this again. Listen. Listen. Listen. Listen. Listen. Code of guy guidelines, conduct of guidelines, RSC, or the BCP for the 50 4. And we take it very seriously. So if you feel you're treated friendly. Correctly drop us an email. And we'll, will contact you. That sets, we go to the agenda. For today. So the, agenda So we start with Hackton updates. 10 minutes for better. Oh, Then when you go to the working group business and for consideration time permitting, a draft. So this is the working group business, so the verification techniques, presentation by Schumer, the generalized notify. I paid the Thomas and or Johan, I'm not sure. One of them, they're both in the room. I see someone pointing to yohan, Johan, And for consideration, Mark, if time permitting, he will give a presentation of his draft. Good. Right. Yeah. Mica over here. So, yeah, before going here, I want to make sure that We make a lot, we lost minutes. We wait small chasers agenda for today. So the existing work updates, current working group documents update. We will do that Friday morning. So now it's only what we finished in the past 3 months. Good. So Luna optional is published, end of September. RFC 9471. Just yesterday as we see the HP has been published as RFC 9460 So, very happy with that that it's is finalized."
  },
  {
    "startTime": "00:04:02",
    "text": "A lot of things, just actually not finished yet, but we're think this the QD counts, this one draft is almost finished or as good as finished. But we really want to have more eyes, reading the documents, more feedback on the mailing list, before we go for a working group call. So please please review the documents. There's also, a request by Ray the free Bellas. I think we done, and we can start with, I would like to invite better. To give the, yeah, the hackathon So you have a clicker here if you want. Yeah. I Exactly. And I will upload share the slides. I bet you would first ask any comments on the agenda before we go on That didn't tell you anything and and and and I think this is Yeah. We do have more time on Friday. So Hello, everyone. I'm Patricia. I see about speaking for a group of people from the hackathon. We this time, we had, like, 20 people working on different things. Some people implemented rest info for bind. So finally, we have that there is work on progress on notify to the parent to say that, okay, now update the DSP So that was the actual implementation work and lots of group of people which consist of DNS providers large and small, the alifolite operators, large and small as well. And people who actually implement the code and people who are around since forever. In DNS. Discussed Well, can we improve in the DNS? And we started possibly. And the reason I play with the question, if you could change anything, anything at all. What would you change?"
  },
  {
    "startTime": "00:06:02",
    "text": "And of course, we had, like, six pages full of bullet points from the top to the bottom and, didn't know what to do with it. Then we decide, okay, let's view is enabled. And we at the table limited ourselves to let's say, compatible changes in a sense that, We want to keep the name space coherent, so we don't want to create new DNS usage disconnected, but, connected to the existing system. It doesn't we didn't want to change the management schema. So the zones and the principally to delegate to someone was like sacred. We didn't touch it. And of course, the steps and how it behaves. Generally for anyone outside this community. Shouldn't change. So the principle okay, you sent in query name and type and get something back also was off limits. But other than that, We wanted to see, okay, so how we can actually improve it and be interoperable. But the trouble is that we are different in the, the first group to ask that question because over the years, there was many, many many attempts, which which which which failed for various reasons. And this time, we were hoping that, okay, this group is kind of more diverse than before we had kind of buying from large operators, small operators, various people implementers. And also the environment is changing because the pressure on the existing protocol is increasing because the environment and the requirements are changing. Right? For example, if accidentally some quest post quantum thing happened for real. We might have issues with the wire format if it doesn't fit in the message size. There is nothing we can do about it in the existing call. So that was the starting point. So what can we do? How we can evolve and be eventually from the list of six pages of things, which are problem we've identified we think, an underlying problem"
  },
  {
    "startTime": "00:08:01",
    "text": "that the delegation, in a sense, the NS record as we know it, is the limiting factor because It's doesn't have any section. It is just a name. You cannot change it because everyone is relying. Right? At, at the same time, it's not signed. So it's not really good place to put anything in it. So of course, if NSE is not cutting it, and we can't find any other place. Let's try something new. And at this point, I have to assess this is the days old. This is not fully fledged idea. It doesn't have 00 version. Is working progress from the hackathon. So you get it basically, warm from the oven. It is just a principle. It's not fully fleshed out back that this is a principle. We have the NS record as we used Since beginning of the DNS, we have DS record that's not changing either. But at the same point where the DNS and DS are creating zone cut in the traditional DNS we have now does work in progress named Delek records, which creates a delegation the same way. The difference is that it lumps together all the data needed for the So we have the name of the name server IP addresses if it's you know, in bailiwick you get the IP addresses the same way as you will get blue. And what's most important You have array of parameters which are key value it doesn't have limited length or at least in a reasonable sizes. So we can add stuff as we need, which is major difference from the NS is not extensively. It's just a name. This mechanism is extensible. Everything is in place. It's author that they found the parent site, s the same way as the DS record is and it can be signed. So it's secure. It's extensible. And it's it's basically a vehicle to enabling new things. It doesn't do much by itself."
  },
  {
    "startTime": "00:10:00",
    "text": "Or the allows him to do stuff. And here, we have out of bailiwick example, which is way more interesting. Because it's not just lumping together glue and an s and signing it but there's more. The Delek record is heavily inspired by SVCB. So it has 2 modes. And on the previous slide, we have seen the direct mode or service mode and SVCB per allowance. We have the order parameters in line here the Delek record is using LAS mode. Which means that it says, okay, for this delegation, go to different place in the industry, And in that different place in the target of the interaction. You will find the connection parameters. Issue. Means that we can redirect, for example, a subtree for a given provider and the provider can manage himself the parameters. Does a need to go to register and tweak every little thing? Deviation from SVCB Direct is or RFC now. Yeah. Is that, Elias accepts and we expect, to use multiple aliases at the same point of delegation So here, we have 2 hosters. 1 is called Hoster and the other one has named another hostess. Sorry. I like, of imagination on my side. And the thing is that now The 3rd hoster has its own subtree where, the hoster can manage equivalent of NS records on connection parameters. And the other host has the parameters elsewhere, They don't don't need to coordinate you know, for example, CloudSpark can change records in its place. The other host, in some other place, Arco Zio or whoever. And of course, the end of the interaction you get parameters. So you can Again, key value pairs can specify whatever you need for your given server and or protocol. So it can be transport. Like the OT or the traditional DNS"
  },
  {
    "startTime": "00:12:02",
    "text": "or it can be really wild and say, okay, let's make a clear cut on the wire are going to 1 version 2 And it's like completely different stuff, but still delegated to the same name space, still connected to the original thing. And of course, you can turn it to the old system again using NSNDS. Is basically a summary of what I said. Zone caps. It's signed that's the most important part is extensible. And as you have seen on the slide, it creates the interaction allows us to kind of put in the role of DNS operator, which doesn't formally exist in the traditional r r r model. But here, we don't touch the register side of things that's exactly as it was But we are allowing the operators modify their own parameters. So This interaction by itself creates a value, But of course, the extensibility with the key value, key value pairs is the most useful thing because that allows us to do a change once. I mean, bite the bullet and pay the cost for introducing a new parent site record. Once, and then we have extensive reallocation mechanism and we can use the option parameters to do interesting things in future. Again, this is enabling new work It's easily enable us new transport and so on. But Sky is the limit. We can go further are not limiting what can be done with the additional parameters that's up to this group. To use. I think 2 minutes. I never. Okay. Rest of the slides is for people who will be reading this offline. So I will skip them because that's basically what I said. In many words, And of course, it needs work. This is the cornerstone, But now the traveler is how do we get there?"
  },
  {
    "startTime": "00:14:04",
    "text": "This is 3 days old, very much work in progress. Everything is in flux. Because we want to have, give the chance to people who cannot be I'll be here in person we went to the DNS Orc Mattermost severates real time chat, anyone can register. Blings are in the slide. If you register, there is a channel name in that, like, dash design, And also on the slides, you'll find the link to the GitHub is the current version of the draft. It has like, proto version in the making. So It has some text where you can actually look at it and say, okay. This is stupid, or this good idea. You forget about this command the end and so on. So it's on the GitHub, but I strongly suggest you to jump to BDS or server as well. So we can see the discussion happening in your time. Some people in the US looking at it breakout, or maybe I after decision ends. And Second thing is that This needs eventually involvement from registries and because it's a parent site think So please talk to your people, you know, in register register our business and get their opinion because this will impact them slightly, I mean, it's not a big change, but we need buy in from their side as well. Thank you. Impressive. Right on the stop sign. Thank you. So, I guess there's a lot of discussion maybe following up. So please reach out. Yeah. We don't have now right now. But follow-up with Better and, and and the others And it's maybe this opportunity to meet during the week. For further on discussions. And thank you. Thank you again. It sounds like a terrific side meeting. Yep. Alright. Next This is Shimon Mhmm."
  },
  {
    "startTime": "00:16:02",
    "text": "Yes. Did you want the clicker? There you go. K. Hello, folks. I'm, Shuman, and I'm gonna give an update on the domain control validation draft. So usually Shivan is the one who comes up here and talks about this draft, but he's remote today. So you're stuck with me. Alright. Why is this not a fancy? Okay. So we pushed out. No. It's fine. I I'm not allowed to change focus on my laptop. Okay. So just checking, checking the agenda is not possible for me. Please go ahead. Okay. We pushed out, dash 3 in, mid October. And somewhat to our surprise, we announced it on the mailing list. There were no comments. So usually there's a barrage of comments every time we push out version. So I'm hoping there'll be discussion, during this week or at this meeting. So let me, summarize the changes. So with the permission of the chairs, we've added Eric Nigrann as a co author. I don't know if Eric is in the room. Is he? Oh, here we are. Okay. Good. And you may recall that few months ago, Eric did a very detailed and very crucial review of our document. And we spent some time responding to his feedback and figuring out what things we needed to update in the document as a result. And at some point, we decided, why don't we do all this work? Why don't we just recruit Eric into our club and make him do all of it. Right? So that's what happened. Right? So, the other, let's see, some of the changes, we've tightened up the requirements for token generation mainly I think talking about what encoding alphabets are suitable under what conditions depending on the validation method you're using."
  },
  {
    "startTime": "00:18:02",
    "text": "We have a more detailed treatment of delegated domain control validation, which is becoming increasingly common the real world. There is a new section on domain boundaries and public suffixes. I don't know if it's a new section, but at least new, much more detailed text. And also we have, enhanced the validation record format to support some new capabilities, such as accounts specific validation. If you have multiple accounts, being authorized to act on behalf of the same domain name, if you have multiple CDMs or multiple providers. And we also have a mechanism to indicate the scope of validation. Alright. So in, on the token generation topic, I think we were a little bit loosey goosey in the past. We described you could you know, you can use whatever, base 64 based on the 2 base 16. We decided to be a little bit more precise with the language because there are some search circumstances where you can't use some specific alphabet. For example, if you use CNames, the challenge token is going to be present in the label in the target of the senate, right, which may have restrictions because you may be using an implementation, which is imposing LEH rules are allowing only characters that are allowed in the host names, And moreover, it could be the case of the z name target actually is a hostname because it owns address records. Right? So you have to be careful about these things. So we've described those limitations. And we slipped in some other you know, DNS protocol minutia step, which I think most of the people in this room know, but application providers may not necessarily know who are using you know, these kind of domain ownership validation mechanisms such as the fact that DNS labels are limited to 63 hot desks. Right? So So if you're"
  },
  {
    "startTime": "00:20:01",
    "text": "using a mechanism that generates, say, challenge token and a bunch of other parameters, you have to make sure you say well and well within the Let's see. Think that's That's all for this slide. And Are you doing something better? I've been in zulip, but, that should work. Still focused. Try it again. Alright. Okay. I'll I'll keep my hands So we can split it up next time. Okay. So on delegated domain control validation, I think we've just this was already in the draft, but we made the text more complete. I think that's what we did. I think the way it appeared in earlier versions was just on the, as an example, in the appendix. Now it It's real version with a fully flash out example with the rationale. So the typical way people do delegated domain control validations. You have a CNA pointing to a name in in a zone operated by the the party you're delegating to. And, that owns a text record where they can stick in the application provided secret challenge. Right? So that way, it's certainly easier for them to, do it, but also to maintain it and automate the rotation of it they needed to revalidate it for for example, certificate issuance or for some other applications. So I'm not gonna read the rest of the text, but, please review what we've added and let us know if you have any comments or suggestions and moving on again, for, domain boundaries and public suffixes, we did have existing tech but I think the only thing it mentioned in the earlier versions is that a recommendation that you should not attempt to do domain verification for a public suffix. Like, nobody wouldn't wanna wanna wanna do that com"
  },
  {
    "startTime": "00:22:00",
    "text": "or code on UK, for example, But it turns out there are cases where you may want to. For example, the public suffix list itself has a division. So there's the ICANN division, and there's the private division, which I actually didn't know because I think, I loved about it after talking to to Eric. And in the private division, there are cases where an application provider may want to validate the public suffix itself. And the canonical example, you can cite our things like, cloud providers doing blob storage or s 3, blah, blah, they have a whole bunch of customer specific domains under it and they want to, authenticate the suffix order to be able to issue a wild card certificate for Of course, that's not the only way you could do it. You could manage certificates individually for all of them because this is a use case, that people want to utilize. We have a carved out you know, so it may do this under certain conditions. Additional safety checks. So I don't know. We didn't elaborate on what those safety checks are. Ideally, there should be a programmatic way to do that. I don't know. It could be some attribute stuck in the PSL. I don't know if any such thing exists, or if the debound the Ubuntu 2 work. Ever takes off that's something probably we should make sure that have a way to express in that protocol. Okay. That's it moving on. And, the last thing we did was we enhanced the format of the validation record. And this is in order to do a bunch of things, the first is to be able to indicate the scope of validation. So, for example, is it for just the single domain name being specified is it for the entire domain by which I mean the domain tree rooted at that domain. Domain name,"
  },
  {
    "startTime": "00:24:02",
    "text": "or is it for wildcard names, wildcards at the domain? And, also to be able to support multiple distinct accounts or multiple distinct providers where each of those need to be authorized individually, to provide a service on behalf of that domain. Okay. So I'll go through those elaborate on those examples specifically. So for the first one, indicating scope, the proposal is that the, challenge record, the owner of the challenge record, should have some string indicating whether it's for the host or the domain of the wildcard. So that's what we've done. I think we've shopped this idea around at least with, the acne folks, and I think, Eric may wanna correct and I think their initial response was well. We're not really sure. Maybe we can solve this problem in other ways. With CAA records, for example, which do have a mechanism I think there's an attribute called Issue Wild, which you can use to specify whether you're allowed to or not allowed to issue law guards. But that is incomplete. That's not not enough to distinguish these three cases. And moreover, that's very specific to a single application. Certificate issuance, whether the scope of this document is much larger. It's many different applications. So we think there is the, need for a general purpose way to specify this. So that's what we've tried to do with this enhanced format. So I think this needs a little bit more dialogue with acne and maybe other application communities to see if they're receptive to that approach. And on the multiple accounts, so this is if you don't understand what this is, this is, for example, if I I'm operating a service, at a provider, and I have multiple accounts. That I will control, but each of them have to be individually"
  },
  {
    "startTime": "00:26:01",
    "text": "authorized to be able to issue certificates or do something on behalf of the domain name. So all of those things have to be individually have to have an individual challenge. So the way we're proposing to do that is we just add an account or CDN specific or provider specific, identifier token. As the left most label in the owner of the validation record. So there's identify a token dot underscore food challenge dotcom, text blah blah blah. And this one, again, we have talked to other folks. So at the last IETF, we, became aware that Acme is also working on this exact problems. So they have a draft, a doctor draft, in progress on d n acme DNS account challenge. The way they were doing it is by just sticking account identifier as a blob after the acne challenge in the same label. And we propose, I mean, a better way the DNS people would do it is follow the DNS model. So you may want to delegate all the accounts that I owned the same party. You can't do that if you have a blob. That identifies account in the same label. So we have proposed instead to the thing in a separate label at the front. And, they thought about it, and they came back and said, yeah, we think this is, reasonable idea, So they have a poll request with this change to their document, but it's unmerged. And the reason is, apparently, the current CAP form rules don't allow them to do that. So this requires doing a little bit of work with CAP forum and doing a new ballot. But we've had some discussions with folks there, and they think it's it will be possible to do that. So we'll see where that goes. And I think with that, that's it. Right? Okay. So I will stop here for comments or questions. Yeah. Folks should notice that then way cool meet up. Folks have given us"
  },
  {
    "startTime": "00:28:02",
    "text": "timers now as part of the display. So we have 3 minutes 15 seconds for any comments or questions. Okay. Thank you, Susan. I just noticed that. I was staring at the screen. Hold on. Serum. This is Daniel Con Gilmore. Thanks for doing this. I think this is interesting, and I'm glad that you're coordinating with acne. And I see this change here, which is good. In your previous slide, there was some stuff where it's the tacker, but not sorry. I'm I'm already thinking in attack mode here. You've got these labels that have spliced bits in them. Yep. And some of them have spliced bits that are suffixes and others have spliced bits that are prefixes. Yep. With a fixed string And I think with this change here that resolves it, But, I just wanted to point out that when you have a spec, mechanism where somebody else gives you a half of the label for the suffix, And then you have a fixed prefix for it. Another situation where you have somebody else because you their own choice of labeling. You have a fixed suffix. It's possible to swap those things. And so somebody can sort of force you to generate a label that does the opposite thing. Am I making sense here? Yeah. I think so. I'll have to think through that example a little bit more. Yeah. The idea that you're gonna splite you're gonna build a label. Yeah. That is spliced from somebody else's recommendation recommended text. Yep. If you once you start doing that splicing, and it it matters where you're splicing. They need to all either be spliced in as a brief 6, or all spliced in as a suffix, Yep. And then you need to have a clear registry of what the fixed bits are so that you can differentiate between those situations. Otherwise, you end up in a in a connect connect connect connect"
  },
  {
    "startTime": "00:30:01",
    "text": "where you can confuse you can confuse which things are happening. Okay. So this example on the last slide avoids that problem, right, because Yeah. Here here, you know, you're not splicing it up. Yeah. Yeah. Yeah. Right. Okay. Okay. Got it. So maybe we should talk about that for the, the example where we're using the scope indication inside the same thing. Right? Okay. Thank you. Go ahead. John Levine. I like this. This is look a lot better than the last time I looked at possibly because it it incorporates a bunch of suggestions that I made and and some of the authors say no. Those are stupid ideas. So but beyond that, I guess I guess what I have and a half things to say. One is I don't see have a registry for underscore tags. And I think it would be very good idea to encourage people to register these things they don't collide. I mean, it's like it would be a really stupid idea to use, like, underscore demark as a challenge tag, but people, like, wanna be registering my D Clark something or rather yeah. So, anyway, it's a lightweight registry. It's very easy to add And the other thing is, I listen to your discussion about PSL, and I think your take on it is right but having spent quite a lot of time talking with Jonathan about it. I mean, the PSL will never contain any any flags or tags or anything like that, but it's like it's then because can't keep up with what it with with what it does now, you know, and you need to keep in mind that the PSL is fundamental goal is to is to avoid cookie stealing. Anything else that happens to match there is sort of an accident I think you can sort of give people general advice, like, would be a good idea to use the the PSL to avoid putting challenges in places that don't make sense. But but I think you need to be very clear that It's just a heuristic, and you need to make sure that it's actually doing what you need to do because do it mechanically, you will run into surprises. Mhmm. Okay. Yeah. Thank you, John. So in your first comment, I think we have discussed that in the early days of this graph of having a registry of underscore application names, think the registry exists. You don't have to create"
  },
  {
    "startTime": "00:32:00",
    "text": "Oh, it does? Yeah. Okay. Yeah. All you all you have to do is tell people that and it's really lightweight. It's f c f c f just tell people to add add their add their tags to it. Okay. Alright. So Okay. I'll talk to Paul. He wants to say something. Alright. On the second one about ESL not ever evolving to have other attributes or something. Yeah. I guess I don't know. I mean, I guess, I guess that means we'd have to wait for you know, an iteration of debown to address this kind of get me in the bar later, and I'll tell you the whole miserable story. Okay. Sorry. Sorry. We we did close queue. Sorry. He Eric says me. He's one of the codes. Yeah. I understand. But Yeah. One brief remark, one sentence is fine, but we're really short in time, and I don't we've just clarified the PSL feature. We're not asking for new PSL features. We're just using existing ones. Okay. Thank you. Yeah. Thank you. Yeah. We yeah. Maybe I'm a bit strict here, but we want to give everyone, the allocated time, to be shared. So thank you, Sean. Thank you, Shuman. And for for procedural, the working Most. The document is fairly finished, but we're not going for working group last call because we were waiting for the discussions with, the cap. Yeah. I think it's a good way some of those. Excellent. So the the working group knows. Yep. Thank you. Up next is, Johan. So you have to make this Yeah. Never mind. So, Sam, do you wanna stay a thumb from the Swedish registry? And This is the latest iteration of the draft,"
  },
  {
    "startTime": "00:34:01",
    "text": "Peter Thomas and I started on generalized notifications. And then John Levine has helped out the tail end And now we're sort of down to to the details because there isn't much left to say about the general idea. There you go. So We have the draft about generalized notifications I don't get the timer. Oh, Thank you. Thank you very much. That's so I you want to fill up the full 20, or shall I for the 18 already. By the way, whatever it I think I deserve. And so so we we have we have this draft And Oh, We have he's generous. We have this draft about generalized the number of times. And then we also have another draft the line wrote about essentially extending the localization mechanisms from generalized notifications. For another mechanism of updating the parrot. And that is based on DNS dynamic updates instead of sending notifications, and I will speak about that on Friday. So now we have more than one mechanism, so to speak. But they both share exactly the same underlying need for a mechanism to locate where to send The message. The message may be a notify or the message may be an update or the message could be something else, but they need to figure out where to send that. That's the problem we're trying to solve. Obviously, There is always possibility of a static configuration that is needed in some cases, that's preferred in some cases, and we will obviously have that. Because of the scale of the issue, there are millions of delegations, etcetera. We also need some sort of dynamic So"
  },
  {
    "startTime": "00:36:00",
    "text": "There are essentially two questions to determine first question is, what are our types should we query for? And either we defined a new or a type Never mind what we call it. There are two examples here. D. Cine can notify we use an existing or a tieback SCCP, And the second issue is what queue name should we look for? And essentially, what we are defining here is some sort of of of social contract. An an agreement between the child, what should the child look up? The parent, what does the parent publish? In essence, it really doesn't matter what we decide on. The thing is that it's a contract where both partition agree on what what they're using. So if we start with our archive, the 2 alternatives, new R type or existing archive, there are certain pros and cons fridge, obviously with a new aura type, we can define whatever we want. We also have the advantage that it will not collide with other uses in the same RR set, which at least I see as as a major benefit. On the other hand, the bug issues initially, etcetera. We have SBCB and we could use that. So it's clearly sufficient to to deal with our use case. And you can see that my slide is more than a couple of hours late, because SVCB is no longer an internal draft. It's now an RFC. So that con argument actually falls now. So, anyways, This is essentially just a decision to make. I don't I don't care strongly, which we choose because we choose 1 of And then we can get to the slightly more difficult issue or slightly more sensitive issue, and that's the tuning to look m, The simplest case, which we've used in the draft, for instance, is to just query for"
  },
  {
    "startTime": "00:38:03",
    "text": "the apex of the parent, the parent name, and then whatever are a type we decide on, be it the sync or or SCCB or or whatever. And there is a scheme parameter in there that we've had for a start just to cater to multiple mechanisms. And the one means notifying. So if that is published by the parent, that means that the parent is ready to accept generalized notifications on that target and that port. However, This is not sufficiently flexible. To, for instance, deal with the situation where they're already stretched. And the notification or update or whatever should really be sent. Elsewhere than to the parent itself. So it's very simple to down is very simple to implement, but it's probably not sufficient to flex a Yeah. Yes. The microphone up because one of the remote folks is saying that you're It's too short. Nobody's saying you're too tall. My my hands are too weak. Oh, no. Thank you very much. No problem. And I will start singing. So so, anyways, because of this lack of flexibility with the the simplest alternative Here is another one. If we query for the name of the child some magic tag, doth parent, we could have different expansions depending on the child, which would essentially turn into different expansions depending on the registrar. And Well, this clearly works. It it has the drawback of being potentially a rather large number of records in some zone, not necessarily the parent zone or somewhere. On the other hand, these records could be generated generated on the fly, so it doesn't necessarily mean that we have them statically somewhere."
  },
  {
    "startTime": "00:40:01",
    "text": "On the other hand, if we look at Let's call them smaller parents. As in parents with a dozen or a 100 delegations non registry parents. We want this to work for everyone. Then this is overly complex. So it would be nice with something that wasn't Well, essentially forcing people to have wild cards in their zones, etcetera. Do something more simple. So let's look for some sort of compromise here. And, the compromise that we've come up with. I mean, it's not a trivial problem how to identify which register to send, an arbitrary child notification for, etcetera. So it's a somewhat hard problem. But, anyways, if we do this, The the second alternative And in case we do not get a response, We say, okay. No one at home. And then we fall back the first alternative and just query the Apex. That would cater for the really small zones that just published one record in the APIX of the zone and they're done. And it would cater for large zones with lots of delegations, etcetera. Front hit that need flexibility to point at different registrars, etcetera. And the cost is essentially that in some cases, this will trigger 2 DNS queries. Rather than just one. On the other hand, Yeah. My view is that should really optimize for simplicity in the parent end here because the parent is the one that publish this, and the parent is the one that needs to get it right. The child will not query very often You don't roll your keys every day. You don't change your NSRSF every day. It's a low frequency operation. So two DNS queries not really an issue here. And that's where we are."
  },
  {
    "startTime": "00:42:00",
    "text": "This is now a working group document. So it's something that we should somehow try to come to to a decision on new record type or use SCCB. And what name to query for or what names to query for. To make it both sufficiently simple and sufficiently flexible the use cases that we have. And that's all I have. Thank Thank you. Eric? I'm sorry. Eric Nagran Akamai. If if if you want to be able to put it up the zone Apex with the zone cut, then you probably do wanna record type because this having SBCB there, probably is not a good idea because it's it's ambiguous as to what it is. If you only would ever be using it with an underscore prefix label mode. You could probably use SBCB. I I I completely agree. Okay. Patricia, I see I would like to make you wonder, but there will eventually might need some extra parameters or not because problem with delegation is that we just don't have place where to stack extra parameters. Yeah. So if you are going for new error type, I suggest to make it somehow extensible, maybe in the future, were born, say, talk to me over TLS or whatever. I don't know. Just think about it. That's what I'm saying. I I see where you're going. And my guess would be that in the fullness of time, we will do some delegate thing. So in essence, this is to solve the problem we have today. When that happens in the future, perhaps we will need something or rather use something fancier and more flexible for the stock. Okay. But I I absolutely agree. I'm just saying, you guys are all already working on more more general solutions to the"
  },
  {
    "startTime": "00:44:00",
    "text": "to the problem. John. Hi. It's John Levine. I completely agree that you need a new RR type for the practical reason that if this is useful, top level domains are gonna wanna put it in their zone files and and the people at the secure the people that I can to approve that stuff would freak out at the thought of putting an SVcb that might do something So that if it's a single single purpose thing that has no other no other purpose, that makes the security issues and the approval much much simpler. I'm a little dubious about putting in, directions for update because for update to be useful, the two sides need to share it secret. And if they can share the secret, they're they already have a path to to to tell each other address to look at. So I don't, you know, I don't think putting in the update thing hurts anything. I also don't see that it's useful. Did you say that they are sharing a secret? You need a a useful update needs to have a needs to have a Tuesday on I have no idea. No plans to suggest easy in any way, shape, or form. This is 60. This is only asymmetric. Nothing else. Yeah. Well, then they need some way to tell to to share, like, where do you look for Oh, absolutely. And that's just something for Friday. So I agree with you, but there's no shared secret anywhere in any other proposal. If I can back off a little bit, there's they need they need some kind of shared. They need some kind of configuration information before be beyond where to send it. So I'm gonna anyway, if we're gonna talk about it on Friday, we'll talk about Okay. Jhabit. One, I'd be like this idea, and I think we're now getting the stage. You're just trying talk more through one of the potential implementation details of how we can make this progress but just something that came to me as as you would discuss. What about the situation? We've got deeply nested trees and there's empty non terminals. In the labels. How will the client or the end device find out where the pay the delegation point is, where is the parent and do plan these cases iteratively going up the labels until you hit something."
  },
  {
    "startTime": "00:46:02",
    "text": "Are you going to find some other mechanism to deal with I had some ideas about doing this before and get badly shot down many, many years ago. About relying on the the n x to be in response in this order, clearly coming back to see what the zone cut was. So how do you plan to deal with this? I I I agree with your your problem statement that you need to figure out who the parent is, and there are algorithms for that. Yeah. And I agree that there are always issues when you tell essentially an authoritative non recursive name server that it should go off and query for stuff because it it it it tends to get more complicated than you initially hope. But we already have other things that do that. So the the the problem I agree with and we're already dealing with the problem in other context, but it's certainly a problem. Okay. With Alright. Benchmarks meta. So on extensibility, I just wanna say, I I don't think that we need this draft to to talk about DNS Transport. My understanding is that this draft uses DNS and However, DNS is transported this, this should just inherit that, So, let's try to let's see if we can can make the text nice and clear about that. I'd like to understand a little bit more about how this relates to the existing ecosystem of dynamic DNS, which to hinted at in some of the examples. So there are protocols out there for dynamic DNS and you know, registerants using dynamic DNS to to tell their registrars to change things. You know, can't we use that mechanism, or how does this connect to that mechanism?"
  },
  {
    "startTime": "00:48:03",
    "text": "There there is a presentation by me on Friday on exactly how that works. I I would have preferred to have that before this presentation, but I I cannot affect that. So Okay. You you you just have to wait till Friday, and then we can hash that out. So so just just reiterate. The the notified draft and the dynamic update draft They are really, really similar in the sense that they are trying to essentially sold the same kind of problem how to synchronize the child and the parent. They are really, really similar in the sense that they are both using push mechanisms. And they are really, really similar in that they are using exactly the same algorithm, if you like, that we need to decide on for how to find where to send whatever kind of message it is sending. So they are so similar, but the dynamic updates stuff I will present on Friday. Okay. Peter. Hi. It's Peter from DSAC. So as for Jim's, comment, I think you only need, maximum 22 queries to figure out the parent. So you can go one level up. If you find that's not the parent, we are talking, about DNS secretary so the response will be signed. And then the r r sick that you get when you look on label up, she will see who signed the r second. That's the parent. So you don't need to loop until you find it. And the main observation I wanted to make is a different one, though. So, in the proposal too where the notification target is published under some kind of magic name where there is something in between the child label and the parent label, the underscore D sync here, for example, I wanted to point out that that's a general mechanism for the parent to publish, information about the children. So for example, here, this would be, the endpoint for"
  },
  {
    "startTime": "00:50:03",
    "text": "where to receive notifications for DS updates, for example, or some other kinds of updates but the parent could also publish other things there if interested for example, if in the future, some mechanism would be needed to somehow point at the name of the registrar or something like that. It's conceivable to do that under the same kind of label and then perhaps with a different record type or something. And, I don't think we need this now. I just wanted to, observe that. I think there might be more use cases to this kind of thing. I also wanted to observe that, while this is the parent publishing stuff about child, there is a similar mechanism that is used, for example, for the DNS bootstrapping protocol, which is currently also working group draft where, the child level is, prepended to underscore something else and then talk to the name server host name. And that allows the name server operator to publish some information about the zones they're hosting pretty much in the same way as the parent does it here. About the children. So, maybe it's it's It's useful for future developments to keep in mind that these things facilitate the parent publishing stuff about the child and also the the names of operator publishing. Stuff about the things they host, they are not in the chance on themselves. And it's useful to have these general, announcement mechanisms and they can both be signed. Thanks, Peter. Yeah. Ray. Yeah. Ray Bellis, I see with my expert reviewer hat on. Yeah, absolutely. Go for a new RR type. I would say if SDCB actually has the exact correct semantics that you need suggest you just basically derive from that So you can reference SDCB and stick with its wire format in the presentation format essentially makes allocation of the RF type much more straightforward because we just And that would make Peter happy. So, yeah, that that may be a good idea. But, yeah, basically exact same format. Just just just just different number name. Thanks."
  },
  {
    "startTime": "00:52:01",
    "text": "No more questions, and I have 40 seconds that I give back to you. You. Thank you very much, John. And and Okay. So we come to the, sorry, we come to the last presentation for today. Mark? There we go. Saturday. Yeah. I guess it's a new timer. That's 9 minutes. I'm not at all. Park, Cool. Yeah. Context of this draft. Mostly isolated networks, and it came from, these the the space community. There's a space working group. That that that that is looking for, out to deploy IP in space, essentially surface networks sir, service networks. There's a couple of references there. Space is long delays in internet in term, it's a, communications, no bandwidth. And, space communities asking including someone you may know and serve for document on how we do this, given the, restrictive, communications we have. Yeah. For DNS resolution, back towards, to internet is that possible. So we need some kind of autonomous environment. But at the same time, there's communications possible to to those intrastructures. So there's way to push you know, data zone files or, you know, whatever. We want it to be secure in a sec. Same friend, just Anchor. I'm not sure we want to have another route. And we want to do remote management. In the next slides, local means"
  },
  {
    "startTime": "00:54:00",
    "text": "the remote one. So we need, that play on the surface of moon or Mars, NSS Resolveers, trust Anchorpreloaded, you know, this all with you. Everybody here know, using RFC 8806 is kind of a these here. We need local names, but, at the same time, we want to be able by mostly management will be done for some time from earth to be remotely managed and, you know, add names and things like that. From Earth So one approach, suggested by Warren, pre walk all the leader names, So you do you do a tree walk, with DNS related to our arms. You save it, send it to the local infrastructure. So you know, the remote one, by some means. And, but that requires, that you need to know all required names, and you got do not forget when 2nd approach, You prefetch all the zones that you need in the name name Yarki you need. So maybe you'd be looking to choose the right hierarchy. Some Right? TLD in 2nd level. Maybe the dedicated don't want to enter in the discussion of a special TLD for that. You have access to those zones and you send those zones you know, by some means. 5 transfer r sync. Bundle protocol, you know, name it. The problem, if it's not a dedicated name, Yarki, let's say that you chose the dotcom zone There's a lot of non useful MRRs that you would be uploading. And if you remember my last the first slide, bandwidth is somewhat limited. On space. But that's improving."
  },
  {
    "startTime": "00:56:05",
    "text": "3rd approach, was, suggested by Mark Andrews and whenever I say suggested by someone, Everything all the errors are mine. Not theirs. You do a special zone or, a new zone from a current zone that you can you actually create a new zone with only that needed are ours. You sign it. Send it. Remote to the remote location. We could have a new route. We could step the DNS local lanes, but that's the the point of having local lanes. Names that will be you know, in the normal DNS tree, but use in both places. So that's in a nutshell what it is. I didn't want to take too much time of, your time. Looking for comments, review, and if there's any interest in the working group, drum is actually right now not complete. There's a lot more discussions to be done on TTL considerations and stuff like that. And, Yeah. Your your last on the agenda at the moment, do have a few minutes. For comments, questions, Do people think this is good work for Danesop to be doing? Okay. Okay. I guess it's first. Yep. Yep. To Ben remote. Hi. So my my core question about this is somebody doing this today? Are there, like, robots on the moon that are making DNS queries. The NSQUARES on the moon? No. For your information, there's a LTE net, antenna that is going to be and 2 months to moon with, couple of, row rovers, all IP network, back all to so it's especially for moon."
  },
  {
    "startTime": "00:58:01",
    "text": "We're moving fast. Okay. So that's an IP network, but is there DNS in that network? Not. No. Because it's a experimental, kind of a technology demonstration as you, as we say. Okay. The but that thing is actually something that could you could see other use like undersea networks or, you know, remote networks that I have kind of a intermittent, you know, connectivity and stuff that appears other you know, use cases. Yeah. So okay. Overall, my my view is like, Face is is fun, but as far as I can tell, this is not a thing that anybody is doing today. So it seems a little odd to produce a document providing a practice recommendation for a thing that is not but there are networks out there that are intermittently connected And I think, we can certainly mention space as an example, but I know that, you know, that and the draft does talk about isolated networks. Would love to see this run from real operational experience of people who operate isolated networks. And that has been you know, over the decades there have been 1000, millions of intermittently connected networks. How did they deal with? These kinds of named resolution issues, and what are the best practices that emerged there? Let's Oh, I would love to get that for information in space, the missions are usually planned when I you know, years in heaven. So you what you have in specs now needs to is something for that would be deployed in years. So you know, it's actually urgent. But I also think that we should consider whether the right answer is like don't do DNS in space. But, like, it's a DNS is bound to the planet Earth and, like, do something else if you're far away from the planet. Well, there would be an IT network there. So for for time keeping, I'd like to go to the next"
  },
  {
    "startTime": "01:00:02",
    "text": "So sorry. Yeah. Sorry, I've been to to to cut this off, but I'd like to We had to close the queue after Ralph and then West but thank you for your contribution, Ben. Rafael Akama. I haven't made up my mind if we should be in essence space yet, but of the questions I have, the mean, in the end, usually, you use DNS lookup to connect to somewhere. Where are these connections terminate? Mostly local on the surface because you know, And then from earth to re for remote management too, The So the lookups on the isolated network would be only isolated. Roughly. Yeah. I mean, that from East Christ local infrastructure and then Yeah. From Ursa, I mean, you find the name somehow. Yeah. Let's see Fiant. West Hardaker wearing only my university of Southern California so my local project, which 80806, but actually offers more zones than just through which 8806 really talks about, actually does this type of stuff. And I looked into transferring very large TLDs some of which were doable over standard DNSA XFR, and some of which you definitely need our sync the other things that you talked about, I also had a master student actually study his own traffic for a week. And in order to do pre caching and actually sort of learn in advance the types of things that you might use. And obviously, so it doesn't work for generic browsing day to day. But, but his analysis showed that you don't need to precache that much. It's actually a very small percentage that you could get into. So doing traffic profiling ahead of time could get you a long way as well. Mhmm. It's should be on my local root site. And I'd and when he was mentioning this, I realized I never actually added the link, so I will try and have that up on the local root site by the local root.icacy.edu, and I'll try and have it there about the end of the week because there's no reason it should Okay. Okay."
  },
  {
    "startTime": "01:02:02",
    "text": "Thank you all. Marcus to run, but if you have any questions, please. Find him later this week. Or send comments to the mailing list. Before I close, I would want well, Make one thing Yeah. Okay. Maybe Friday, but there's a case for, cute discounts is 2. And, We have a working group draft. But Okay. One short, it's it's for DNIS. It is it is for thread wireless low speed networking. We'll be talking about did DNS SD on Thursday. There's time on Friday. I'll bring it we currently have software written by enthusiastic engineers that's using QD cam people too, and we wanna stop that. Yep. Exsection. So go to DNS SD or find Stewart during this week and talk with him. Thank you. Thank you all. Thank all the presenters to keep stay perfectly in time, and I like to thank the participants here in the room all Bye. See you Friday."
  }
]
