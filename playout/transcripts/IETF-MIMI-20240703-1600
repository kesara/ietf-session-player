[
  {
    "startTime": "00:00:24",
    "text": "all right it's the top of the hour so I think we can get started hello everyone and excuse me welcome to the Mimi interim for today um as usual please uh make your yourself aware of the iatf notwell in particular the policies on intellectual property and the code of conduct um I'm going to go ahead and take notes today and for the sake of expediency and then as for the agenda um we actually have nothing formally on the agenda today so the floor is open if anybody would like to talk about anything really um and if we run out of things to discuss hey Ran um then we can I suspect we'll end up wrapping up early um so I wanted to continue the metadata privacy discussion to the extent possible um I already had a short call with Conrad and Rafael this morning but um so there's I um so there is a PR here which um there's a PR which we could discuss regarding that um people just bear with me for a moment um and then yeah if anybody else wants to I'll I'll I'll be quiet here for a minute in case anybody else has other things they want to talk about"
  },
  {
    "startTime": "00:02:11",
    "text": "oh looks like it's all you roll here's the pr this one that I just put in the chat number 80 alternate way to have a semi-private handshake give me a sec please sure right uh yeah I just get I just pushed a commit here um so yeah you can have a look at this so do you want to share your screen so you can drive that discussion sure let's see what do we get this"
  },
  {
    "startTime": "00:04:20",
    "text": "okay so all right so let's basically the idea here is that uh I'm going to go ahead and open Rich diff so the idea here is that you should that uh we want to avoid having to send um public message because that could reveal information about the membership uh even if the members are are all pseudonyms to uh providers other than The Hub so if we want the Hub to be able to see the membership but we don't want the uh the non-hub providers to see the membership then then an option here is to um to send an encrypted copy of the message to the to the hub or to just send an encrypted copy of the keys for just that individual message so here what we have is just the the MLS um generation you know individual message key and Nots which are used in private message to encrypt the um to encrypt a message and so then this is this is encrypted using the hpk a"
  },
  {
    "startTime": "00:06:01",
    "text": "seal uh algorithm with the hub's public key and a um we probably need to put a different label in here but for now I just I just left that um encrypting this key in Nots and then in the case where if we kind of scroll down here uh so if the message that we're sending is a public message then we just send the public message if the message is a private message then then we also include this this thing that we this encrypted copy of the key and the knots and then the struct looks basically the same as it was before except that that the propos that every place that there is a proposal the two places where there's a proposal or commit here and here it's just replaced with this struct so if it's a private message we also share the encrypted copy of the key in the Nots uh Rael is in the Q do you want to take that now or do you want to wait until some other point yeah go for it go ahead Rael yeah um so two things uh one more fundamentally um maybe I missed that but do we have consensus on the threat model here that that is something we want to design for meaning it's fine that the Hub sees membership but we want to avoid that the the followers see that that's question number one and question number two is um if that's a threat model uh why don't we just solve that with oblivious HTTP instead of manually caming stuff to the hub sorry why don't we why don't we solve that with what instead of"
  },
  {
    "startTime": "00:08:00",
    "text": "oblivious hdp because the it it's not clear that the providers are willing to accept an oblivious HTTP message that comes from a local provider um because they don't have any authentication relationship with the with the sender unless the send unless the Hub is the local provider for the sender so you mean during fan out no no I I mean let's say we have Alice Bob and Kathy um the each on a different provider AB andc Bob uh had created the group so the group is host is The Hub is B provider B Alice sends a message sends a commit uh so if Alice sends if Alice sends the message uh presumably she's gonna first of all she you know this is Mimi is a provider to provider protocol right so presumably Alice is going to send this with her proprietary client server protocol and then the message needs to get sent over the Mimi interface between the local provider and the Hub provider right um so Kathy or sorry Alice just sending uh an oblivious HTP message directly to the hub there like the Hub doesn't have any way to authenticate Alice The Hub doesn't you know there's no we're not defining a client to server protocol um in our Charter anyway but but that's not how HTP works"
  },
  {
    "startTime": "00:10:00",
    "text": "right I mean Alice would send that to her local back end and then to her local omtp relay yeah but I mean it might very well be the case that that is too complicated in conjunction with the rest of the server to server protocol so maybe that doesn't work very well um so yeah but going going back to the first question are we sure we want to design for this particular threat model are we are we convinced by that I I don't feel like we had a lot of discussion on that um so there was there was a sort of not exactly vigorous but there was substantial mailing this comment on this question about um Richard I'm let's me see if I can dig up the message that Richard Barnes sent where he categorized sort of four you know four different levels of privacy uh of metadata privacy uh Tim do you uh do you remember the message that I'm talking about no not at the top of my head I mean I I do remember that one um because that that was essentially an overview of what we could do theoretically but then I feel we never like there was some consensus that folks were interested uh essentially in the threat model that now you know Brendan's proposal and and our proposal is trying to address and also some interest in you know not protecting metadata at all but I didn't feel like there was a lot of positive response or specific response for this sort of intermediary thing where we hide metadata from the phers but not the Hub so let's see we had um"
  },
  {
    "startTime": "00:12:02",
    "text": "I'm looking for the um so I think I found maybe this is the message from Richard on May 21st where he enumerates quote three tiers of privacy we might aim at here does that sound right Ron uh so he's got AB b c and d Hub and followers can see group info and membership Hub and hub can see group info and membership followers see local membership Hub can see group info on pseudonyms membership I I'll just post this this you said May 31st I think I'm looking at a I've got a May 23rd Day date Thursday May 23rd uh and that would have been couldn't hurt for us to for so there was there was support for from um a handful of people for um"
  },
  {
    "startTime": "00:14:00",
    "text": "for C so basically the the current draft with pseudonymous membership would only be able to provide B and mimii would provide yeah can you do you want to comment um Rafael or Conrad on like what level Mimi would provide I think mimimi Falls at least into C the sense that the Hub sees snonymous membership yeah um but it does not necessarily mean that followers have to see local membership um so I think Mimi is somewhere in between C and D I don't know con if you have a different opinion here so this list does not exactly capture Mimi um but yeah I mean what's different with Brandon's proposal is the pseudonymous part on the Hub that that's the big differentiator yeah Brendan's proposal is is in is D but it's unclear that it provides all of the all the requirements that that people have proposed if I can jump in here um I I think in The mimimi Proposal we haven't really talked about how uh how the messages like if there's any encryption between the client and the Hub so I think that's what you want to add right Rohan you you want to make sure that the local providers can't necessarily see the pl extens messages so um I would say the so if I'm I'm not concerned about"
  },
  {
    "startTime": "00:16:03",
    "text": "Alice's local provider seeing uh seeing something what I'm concerned about are is like the follower for Cathy so Alice sends the commit to you know through Alice's provider a to uh The Hub B and then when The Hubb fans out to uh the to AB and C um Kathy's provider C doesn't get to see that Alice and Bob are in the group that that's I think the essence of the of metadata privacy level C here and so the the encryption that goes to the hub this happens to mean that the local provider doesn't see what's going on but it doesn't it doesn't have to be you know I like for me that's not the requirement the requirement is about the followers so mine just happens the The Proposal that is in this PR just happens to accomplish that in a way that hides it for the local provider but you know so essentially it tunnel it's like a tunnel from Alice through her own back end all the way to Bob's Hub in that example is that correct yeah but earlier you said you don't mind that Alice's server uh can inspect messages so yeah yeah so this the fact that it that this is that Alice's provider a doesn't see the message this is just a side effect of The Proposal that I made it's not a it's not a requirement for me okay"
  },
  {
    "startTime": "00:18:00",
    "text": "but H sorry how is it a side effect isn't it the main effect of your proposal well um maybe uh you know uh it's an effect that was not you know was neither a you know neither desirable or undesirable effect on on for a from my perspective so what is the main um intended effect then then I don't don't understand that part I thought that that was the main thing the intended effect is that that Cathy's provider see when the message is fanned out doesn't get to see the membership doesn't get to see well okay I guess that there is that there is also if a gets to see the the commits from Alice then a can glean the can glean Kathy's membership and so she gets to see things that are also outside of a providers so I suppose that yeah that is actually important now that I think of that okay I need to look at the pr again because I understood it that it it would only encrypt stuff between Alice's client and then and the Hub I mean from there to the hub de facto excluding Alice's provider but then the Hub would decrypted so I I'm not sure I understand how cath is you know provider would only get to see the cipher text sorry did you say that again so the way I understand the pr is that essentially you cem like Alice's client cems stuff to the hub and and that cyh Forex is being relayed via her own provider but then the Hub decrypts that can um because it it wants to do stuff with it obviously um and then it it fans"
  },
  {
    "startTime": "00:20:01",
    "text": "out the plain text and no no no it doesn't fan out the plane text it fans out the the private message only so okay I mean Conrad has had his hand raised for a while I need to look at the pr again in the meantime I don't understand it go ahead okay so if if I understand this correctly I think this is a great addition to the Mimi like it it complements MIM quite nicely and um yeah I mean it's simple enough the only thing is that I mean I think we and we discussed this in the call uh today the um uh the implementations would have to you know spit out the key and nons from whever they're generated so that's kind of deep in the engine room of of MLS essentially and kind of pass it out which is a bit um which is a bit unfortunate but I think otherwise it's quite elegant um yeah I I'll take a look at it again but I think conceptually this is a good good metadata privacy Edition okay I see I see BR here sorry go ahead Rafael um yeah I just want to interject quickly so the idea is to cam the the key used for to encrypt the private message to the hub is that correct that otherwise is only known to members uh yes so encrypt encrypt the key and kns that is that is from the from the private handshake message okay sorry I completely missed that part that encrypted to the hub yeah that is indeed what we did discuss earlier so agree with Conrad like in principle this this could work"
  },
  {
    "startTime": "00:22:02",
    "text": "um in practice we violate a lot of the the nice layering we have so but yeah can think yeah and and the the alternative that I that I was that I was looking at involved sending a copy of the framed message of the of the commit message um and you know this also has layering problems because you need to get a copy of the frame message that you were going to encrypt before you encrypt it um and then you can send a copy of it and then you but you also need to the hub needs to know that it's the same that it corresponds to the same content and so then you need like a hash of that in the aad and it's much more complicated yeah yeah yeah sure I mean um and that's probably what motivated the the member proof uh documents I guess exactly yeah but so I mean yeah this sounds relatively straightforward I guess we need to think about it a bit more see if if there any downside but one thing that this still doesn't do it still does not encrypt the header of a private message meaning the group ID still leaks um so this we might have to address that you know as well but of course I mean it's better to have more CER text and less plain text as a starting point so maybe this this is a good thing to do yeah okay it be quiet now okay um BR I not sure when you when you joined if you had a chance to follow this um but if you have any comments you'd like to make on the you know or any concerns about the layering violation uh be happy to hear from you uh thanks unfortunately I"
  },
  {
    "startTime": "00:24:02",
    "text": "did join quite late so I'm trying to catch up here on the core of what the discussion is and I don't want to ask anyone to rehash that for my sake um so I can absolutely catch up offline and give further feedback to the list okay um so I'm just going to mention one more one more concern which is that um if we if we're encrypting just the key and the nons um whether a sophisticated attacker could generate a false encryption key and knots that would make the private message appear to have completely different contents are you talking about a um I think it's called a salamander or an invisible salamander like in the same vein yeah right my brain isn't all here today but my intuition is that there are like constructions of symmetric ciphers you can use that um uh rule out um salamanders yeah I think what we want here is key committing encryption so like that the the CeX commits to the key as well so that you cannot decrypt it with a different key to result in something different but I might be misremembering I don't know BR uh do you remember the I think it's key commitment but uh yeah once again I'm still catching up here on what the discussion point was so um I find myself called on I need to be here earlier thanks for the patience on"
  },
  {
    "startTime": "00:26:00",
    "text": "that uh if I'm catching up correctly it sounds like we're looking at pulling a static key and encrypting the group ID and Epoch to the server uh under that static key or is that key coming from the key schedule and then to the the inv visible salender Point uh about whether or not we can get the eoch ID and uh the group ID changed up so the server is expecting something else or are there further layers under this that I'm missing so yeah this isn't attempting to hide the um to upus skate the group ID or epic um it's just that I've got a private message and I don't want the followers or you know the I don't want the followers to be able to glean membership ID membership information so I encrypt with the with a public key of the Hub that's not a member of the you know not a member of the conversation uh and not in the key schedule I'm just going to encrypt directly with uh with hpk to uh to the hub the decryption key and kns uh for the individual private message uh for only for handshake messages uh one immediate concern I would erase with that is how long lived that public key of the server is and how many people are using whole lot uses of the public key uh and if there's a way to keep that um more Emeral essentially obviously need to be vouch more but more Emeral so that we aren't um exposing it so much yeah I mean for example if this is if this is in the policy of the uh if this key is only used for this for delivering"
  },
  {
    "startTime": "00:28:00",
    "text": "handshake messages and is expressed in the policy of the room then it's only going to be used once per you know it's only going to be used every time anybody tries to send a a proposal or a commit uh as opposed to being used and only in one group as opposed to if it's shared across groups okay thanks that's definitely a good point about how cing stuff to the server is actually being managed um but yeah going back I think we're slightly confusing two things here so on one hand we want to cem the Keyon key pair from the secret tree uh of the member to the server um and there we don't have you know key committing encryption at all and we probably also don't need it um and then in addition to that we also want to encrypt the group ID and EPO um and there it might be required to have uh key committing encryption and we are at Liberty to Define that if we want to because that that's not something that's already being used in MLS or or any other protocol um but those are two separate things I think the proposal is not to reuse the key nons key pair from the secret tree to also encrypt the header um yeah I'm not making any attempt to deal with the with obious of of headers or epics yeah but I mean this is something we we should look at as well because"
  },
  {
    "startTime": "00:30:03",
    "text": "um The Hub needs to have the the FR plan text but nobody else does um you know along along the route of the message so the the tradeoff that we pick for private messages is the wrong one for that particular context here okay so to just to play Devil's Advocate um what what would anybody do with the group ID in the Epic if all the messages are private message so the the Epic is probably less of a concern but the the group ID if you have an attacker that can inspect um cues of clients then it sees the group at is in plain text and it can just correlate which client is in what group essentially so if they if they're inside of the if they've broken the transport encryption or they're inside if they're inside the follower server for example and say the follower server has a lot of users um then it can it can just you know agglomerate the group Ides and understand which of its own users are actually in specific groups um and then that falls you know into the threat model like the typical subpoena threat model where this is plantex data that you have to hand out and and whatnot right so so I think that's where Mimi complements this right but the um in in the in Richard's list of three of four levels level C says that the follower can see the local membership right and so that's presumably like if you don't want you know presumably that's under the control of the Direct Control of the user that they can pick a provider that"
  },
  {
    "startTime": "00:32:01",
    "text": "limits the amount of of metadata that that it keeps keeps about its own users and that they have good security policies but I think as a separate you know sort of a separate proposal being able to hide you know hide local metadata that that's quite valuable as well so touching back on the question of the epoch ID that one actually gives a lot of uh activ leakage information leakage about the frequency of messaging or particularly the frequency of updates and so forth uh if it's exposed so from an attacker's point of view then I would know how active a given group is and potentially also which ones are more vulnerable to targeting uh because they're you ending up quite likely in longer epochs um then adding to that if I'm interested somewhat in a group ID I have a very clear concept of U that targeting window so these I would say probably we do want them both to be protected U we might consider this as Allin one so when I say all in one I mean looking at Ground Up of with the Assumption we want group ID protected and Epoch ID protected and the private message protected but maybe instead of solving these separately uh we actually look at as a sort of layering where I only need say that when I'm talking about the group ID that uh needs far less protections and could be you um protected probably under a more static key for instance uh and then once you have that then the server just you now knows where to look up um the next key to use to unwrap the next layer so to speak and we have these where the there's more change over and you can use more feral Keys as far as who has access"
  },
  {
    "startTime": "00:34:02",
    "text": "to what in terms of the ID the epoch with a private message over um yeah good point about the EP I didn't think about that um and and I fully agree I mean since we are discussing it why not think about a a holistic approach of how to protect everything uh because you see R you you know you give us you know finger here and now we going to take the whole hand because why not we can so so yeah I think if there's a timely proposal for the whole hand that solves the problem of the finger uh and it's reasonable to implement cool I mean in in a way so what I said earlier was that we the trade-off we have private messages in MLS just happens to be the wrong one here I think because we already have this key that you can use um to decrypt the header of a private message um so that you can actually uh see who the sender is and derive the the particular key for that so this is actually not accounted for I think in your PR um the private messages have this this two- stage encryption and decryption um with the first key being like group and epic specific and the second key being group epic and uh member and generation specific right um so yeah mechanically this is probably still missing but uh and then I'm wondering the first key that we use to to encrypt the header of the pro private message like conceptually this"
  },
  {
    "startTime": "00:36:00",
    "text": "is also good enough to further encrypt the the group ed and EPO I don't immediately want to suggest that we should just reuse it but I think this is fairly close Okay so the encrypted sender data is the is the thing that we we that the Hub probably also needs to be able to decrypt right yeah because it at the end of the day it wants to have you know complete PL text so that has the leaf index the generation and let's see is the ReUse guard shared across yeah okay okay fair enough clearly some additional stuff needed for this particular proposal and you know like we don't have enough of a quorum I think to to go in um you know to to say to like take a poll or something like that but it's good to get you know as many participants that have this kind of in-depth knowledge as possible um on the same page as what we're what we're talking about as possible uh would it be worth for the epoch and group ID encryption to go to the MLS working group and do it there this seems to be relatively MLS internal uh and if I understood you correctly Rafael you're more or less proposing we just expand the center data encryption to a whole kind of header encryption scheme so we could make that an extension I guess a safe extension"
  },
  {
    "startTime": "00:38:00",
    "text": "yeah yeah might be a non-safe extension and it might also be tricky because you're getting a message and it's you somehow have to figure out like how to decrypt it I mean what key material to use so this seems to be non-trivial like you need some sort of indicator I think at least within the MLS working group we also discussed um you know replacing the epoch and the group ID with something derived from the key schedule so that you can detect uh what group it belongs to but then this raises issues where you have to process a commit and merge a commit and then again look at your received messages to figure out which is the next commit and stuff so yeah I think this needs some more work if we really want to obvious skate the epoch and the the group ID as well yeah I mean I was shooting from the hip a bit just saying and that we could just expand this under data encryption but as you say we need some external indication uh what what group this belongs to maybe this is for the MLS working group um I don't know um but I think what what we should draft up is uh how you can cem you know the necessary secrets to an arbitrary public key most likely the DS but it could be arbitrary um and then how that entity can decrypt the private message and then maybe we can determine in in which working group they should go depending on on on what the mechanism looks like I'm wondering do we really need it to be public uh in this to indicate what group this belongs to or is it simply that it needs to be indicated which Hub it belongs to because if it can go to the right hub and that then has a key"
  },
  {
    "startTime": "00:40:01",
    "text": "that can decrypt and see the I you know which group ID to use and can use we can use May to which which provider which Hub is is involved right yeah I mean you're right in the sense that we have a an hpk Cipher text uh at the the end of it so we we only need to identify you know the holder of the private key who's then able to decrypt that that's correct but then once that has happened that's when you need to look you need to look at the the group ID pretty quickly so I mean I I think that in terms of a local provider most local providers are going to want to know the room you are going to want to be able to know what the room is associated with a particular request not just that it's a request for a specific Hub provider I'm you know I'm trying to think of any provider in the world that is willing to do Mimi that would would be would be willing to accept a message to to forward it on to a hub when it didn't know what room it was I think the challenge here is that um you have to do the Decap essentially at the load balancing level um like you do with TLS typically and that's a bit on usual because normally you don't run uh"
  },
  {
    "startTime": "00:42:03",
    "text": "application specific code at that level in in a general server infrastructure typically you just terminate TLS and then you have PL Tex and you send that to application specific servers here you cannot do that because you don't know to which server to send to send it to essentially because you you might want to know what the group ID is um you know to look up what kind of group it is ETC um so that makes it a bit unusual I don't know if that's going to be a showstopper but just want to Frank that okay well it sounds like we um let's see if I can summarize here so there is sounds like there's interest in being able to deliver this Richard's email level C of metadata privacy there's also interest in being able to do um group uh MLS group ID and epic layer obfuscation or encryption um one of these requires you know which would which would likely require a new unsafe MLS extension um and then the question is what's the um is this something that providers providers would be would be willing to"
  },
  {
    "startTime": "00:44:02",
    "text": "deploy um would they also be hiding the room ID or not um so the big question is if we're going to do if we're going to do um if we're going to do both uh do we want this to be one mechanis number two and the other question is is the do do we want to do now or do we have a mandate to do this additional level of group ID and Epic Level protection does that sound about right um yeah I think so if it was up to me I would just go ahead and and look into what what the holistic approach would be and then present it to folks um because it's without a ton of context it's kind of difficult to say what makes sense and what doesn't whereas if you have a comprehensive proposal people can still disagree with it if they think you know it's too much encryption but then they would have to make that point specifically okay Tim did you catch that yeah I think so I would second that as well it sounds good okay cool beans that's all I had for okay thanks Rowan um sounds like we could excuse me sounds"
  },
  {
    "startTime": "00:46:00",
    "text": "like we can look forward to more discussion about this on the list and perhaps at ETF 1220 um so if there's anything else anybody would like to discuss today um we still have an hour plus Rafael go ahead sorry unmuting is hard um so yeah I just wanted to raise the awareness to what Conrad uh posted earlier and feel free to jump in here Conrad about the overview um of the requirements we have gathered so far like the functional requirements for Mimi um and how that fares with the different um privacy approaches we have meaning MIM me and and Brandon's approach so I think that's all on the list just wanted to reiterate that it's indeed there and can be discussed okay sounds like there's no other business for today so everybody gets 1 hour and 13 minutes back thanks everyone and we'll see you next time thank you bye bye thanks everybody Take Care thank you"
  }
]
