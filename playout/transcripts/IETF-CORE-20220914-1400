[
  {
    "startTime": "00:00:04",
    "text": "uh what what I took home because yeah if you make it five minutes then people will adjust to that again and only join five minutes or four minutes is minimum risk my default waiting is still but let's wait for sure and I believe many will be just switching uh from the previous meeting yeah that's fine adding already the notes to the agenda wow notes but I guess I will be talking a bit too so I'll try to I'll try to participate I can take notes no worries any help is possible is appreciated uh and by the way no problem because it's really close to B released right after all the editorial effort which one are you talking about problem details um I don't know why the RCA editor is hesitating so we can change topic"
  },
  {
    "startTime": "00:02:05",
    "text": "it's an interesting discussion anyway there is still a discussion yeah yeah I think it's it's not that everyone can see it but I'm in the loop you you really want to join the Earth 48 archive mailing list or you may want to subscribe to it not join to it and look for the discussion uh 90 to 90 because really this is uh just examinator RFC stupidity which doesn't allow us to do the right thing so we are putting work around on top of work around um and I think I remember something like about artwork and the less linear equal yeah okay yeah it was less than I think it was Shalom but uh yes so things things that should have long been resolved but yeah yes well what a time is the meeting begin we are going to start in 30 seconds or so okay"
  },
  {
    "startTime": "00:04:10",
    "text": "okay and here we are it's for past it's going it looks like we're going to be a small crew today anyway so um welcome everyone to this uh entry meeting of the co-working group uh I'm Marcus and this is an officiality of meetings so do not well applies get familiar with that if you're not already it's not just about APR it's also especially about our code of conduct so be nice and professional to each other and the agenda for today that you can find also uh in the notes uh for this meeting as two items uh so far the possibility or thinking through about using the resource directory not just for resources and Discovery triggered by use case in anima in discussing the open issues tract on the GitHub for the href document we may have time for further short discussion on other topics in the end but these are the two main items and I think there are both mostly covered by Karsten in the same slide set so Karsten please share your site okay all right okay you should be seeing my slides now yes good um so um there are two items on the agenda and and the first one really is a single slide because it's more more of a discussion uh point the discussion that has been ongoing for a couple of months now and and that we really need to"
  },
  {
    "startTime": "00:06:00",
    "text": "find an answer to and the other is actually about document the the href or CI document so let's talk about the discussion Point first so this is about a document oh I don't didn't put the document name on this slide um this is about a document that has been created in the anima working group and that essentially is completed there so we we have to make up our mind quickly on on this one and they are providing a joint proxy mechanism and the the important issue about joint proxies of course is yet that you need to be able to find them and the the current document has uh different ways of finding joint proxies and one of these ways is based on resource directories are multicast access to where known core um so uh the the idea is to find uh join proxy by making a query uh to uh the resource directory or to to uh Brandon car uh via Magic House that asks specifically for a joint uh proxy and we we have a good way to do this by giving a resource type so the the draft actually follows this and uses two different resource types for two two different kinds of joint proxies which probably are not that interesting to us at the moment what those kinds are um but the the interesting observation is that a joint proxy is not really a resource it's actually um a protocol that that you can talk uh"
  },
  {
    "startTime": "00:08:04",
    "text": "to a specific server to use that server as a very specialized proxy to to a join server so what we actually need here is is not not a resource but the transport address and of course the the IP address often will be implied so really what what they want to communicate is the part number under which this joint proxy mechanism can be found and you you can see on the slide the the way such a uh resource directory entry or when a core entry uh would look like it's essentially a link uh from the server to carb S Plus JPY colon IP address joint port and there is no no meaningful uh role for a pass or a query component to that UI and that link has a Target attribute brewsky rjp and that's why we we even are involved in this um because we need to register this resource type and there is a Synergy check um on this registration and the the Synergy triggered uh a big question mark in in my head and that that's uh I think why why we talk about this so what we are having here is a link to something that isn't really a resource um this is not entirely new we have had uh other fantasy UI schemes such as TCP colon at"
  },
  {
    "startTime": "00:10:00",
    "text": "least in the real world I don't know if that ever was registered um where people use URI syntax to to just provide a transport address so it's not like this isn't something that that has been um done before um but still I think we need to to think a little bit about whether this is the right way to express this information so let me say one thing uh before we go into the discussion um I think it is a good idea to be able to use resource directory or multicast access to well known call to find this information so I don't want us creating roadblocks here that make that somehow impossible um on the other hand we want to do this in in a way that allows the architecture I have a question about this yes I I wanted to know uh uh quick uh is that the quicker works uh like TCP in your PowerPoint you know uh quicker is very hot and very famous now TCP the past so I suggest we can change uh the motor the most famous yeah I was using TCP here just as a historical example for what has been used so I'm not aware if people are doing this with with quick um so this is not really further relevant to"
  },
  {
    "startTime": "00:12:01",
    "text": "to the discussion anymore because we are not using TCP here this is definitely a UDP based uh protocol um but the the fact that people have been making up fantasy UI schemes like like TCP colon shows that that it is often useful to use the UI syntax uh to to provide transport address information you you said that you come you compare with uh URL such as the TCP yeah that that is uh um an existence proof that people have been doing something similar uh before but it's not something that we are using here it's just something we we look at from a historical point of view uh oh okay uh okay I got it thank you thank you so the the final question of course is if we actually go for this and say yeah we you you can use fake or fantasy URL schemes uh in in the resource directory um the other question is what should the client be searching for is it really an RT a resource type or should there maybe be another um Target attribute that really provides the information what is going on here and I want you to know uh is IP V6 works yeah"
  },
  {
    "startTime": "00:14:02",
    "text": "or IPv6 in this IP address actually I have no idea um so core doesn't really care whether you're using ipv4 or IPv6 and I think the environments that the joint proxy is targeting are usually using IPv6 uh but uh um from the point of view of this discussion it's not not really relevant which kind of IP address is being used so so I suggest we should appear more teaching about IPv6 you know ipv4 in the past three there are a lot of change about ipv 6. about a router about uh yeah yeah this is my uh idea uh the young to ensure this motor discussion please raise your hand using the queue tool in miteko just let the speaker finish okay okay thank you okay so um I think I I have presented this slide and I would be interested in hearing uh what what people think about this question go ahead I think it's useful I I do agree that it's useful to have this information some Somewhere In Your Eyes um but we might even consider so"
  },
  {
    "startTime": "00:16:02",
    "text": "um what we'll have to do I think is split at least mentally what is a statement about a particular resource and what is the statement about how this resource can be reached even though it might be expressed in the same resource the transport indication graph has terminology for that I think we can use that um but applying it to co-op S Plus JPY is a bit trickier because it's not really a co-op protocol but it's more like a UDP wrapper protocol and no end device ever talks Co-op directly over that protocol so it's it's a bit of an in-between thing that's probably a hack used because one is about using Osco but that's kind of the point of the draft so let's skip skip that um and I think then it's just a matter of stating that a particular statement and resource type is probably the the one attribute that is not the right one here that a particular statement is about the transport implied by the level this or that address yeah so um this resource here is not the resource that will be um addressed via the joint proxy protocol of course the the the the actual join uh protocol is a different protocol and I don't even remember whether that that's Co-op or not so it's called as good um so the the we could do this by by providing a UI to the place you will actually reach uh using this join proxy"
  },
  {
    "startTime": "00:18:01",
    "text": "and giving that some some transport indication attributes that that tell you that you should be going through um the the servers that makes this declaration plus the The Joint pod given that's certainly an interesting design uh but it's not what the the authors of this draft had in mind I hope you can hear me yes I was driving and I lost part of the information because of that so is the problem that the Port is not allowing you to define a proper resource is it the IP address what is the issue with the URI well the the issue is that that um there is no proper resource so um actually in the end when this joint proxy protocol is is being used there is a proper resource but that's offered by somebody else um and what the joint proxy does is it provides your way to access that uh resource that is provided by some some other sub the URI core base plus JPI and so on that doesn't resolve to a specific resource but to a host or it's it's providing the protocol parameters you need to run the joint proxy protocol to talk to somebody else and I agree it's a weakness um that this entry doesn't reveal uh to whom you actually would be talking but the the other question is whether uh actually this is desired uh feature and"
  },
  {
    "startTime": "00:20:01",
    "text": "if it's not we shouldn't should force people to do that and one last question this jbi protocol which I don't know much about sorry um I guess it wouldn't help to have a default uh resource that would it will resolve to like index HTML or something like that initially I guess that doesn't make a difference well again it's it's not a resource it's a protocol um so they might have a default Port uh but they would need still need a way to indicate that pot right Christian yes I just want to read from that I agree with with how what you said about um that it's that sorry okay sorry let me rephrase um I think that the way that you mentioned that top of talking about the specific resources is the way to go here discover the resources that are actually that it's actually about and then at metadata about how to reach them okay yeah I think we we need to come up with an example uh for that and we need to talk to the animal people about that Jaime yes sorry again when Christian refers to metadata and do you refer a link attributes or way to the link yes I'm talking about attributes applied to that link so like the JPY part on this side right so I I took I took most of the"
  },
  {
    "startTime": "00:22:00",
    "text": "content for this slide from a previous message from from Christian um so just to acknowledge this these are not my ideas here so building on this approach uh resource type would become a Right Target attribute right well right if you point to the actual resource to use for the joint protocol then resource type is the right one again actually yes but but not with that value but we're not with that value right I don't know about the value can be just a brand new one uh minted for this okay I think they already have one I just didn't find precisely from the draft which one they would be discovering initial initially yeah I think the the interesting observation here is that um the way it is being proposed in the current animal draft uh the the client that gets this resource simply doesn't have the information who he would be speaking to which maybe in in certain closed environments is is okay but from a general point of view that that's a bit weird I'm in sorry again one last uh dumb question this is a resource that we find in our deal women core of a multicast or similar and you mentioned that the protocol use is not core but jbi why is the URI Co-op S Plus jbi because that is that is just the fantasy scheme that is used to store the IP address and and Port the transport address"
  },
  {
    "startTime": "00:24:03",
    "text": "and that's it right in practice yeah the the name of that scheme is kind of an orthogonal um issue right and I must admit that that required S Plus JPY was what I uh proposed a while ago so that's my fault thanks yes yeah one more comment still building on the latest apples discussed when it boils down again to the the real resource um if you use the resource directory would be about the join proxy to register itself first um as endpoint and and then registering this resource right just by the book yes um I'm not sure because I as I understand the joint that that joint that that JPI URI is not the joint proxy itself because the joint proxy itself is the the the other constraint device but that your eye refers to just another port on the um on around the joint resource where Co-op s and that joint protocol are baked together but I think that would typically be on the same host even no no you you really would be looking for for a joint proxy so um if you if the the pledge which is their word for the newly joining client if if that finds a joint server I forget what the name in in their attorneys if if the pledge finds a joint server then the pledge is all set but if it doesn't uh then it has to start looking for a joint proxy and the The Joint proxy uh knows the joint server uh in some way and um you would once you find the proxy you would"
  },
  {
    "startTime": "00:26:02",
    "text": "be able to use that proxy to talk to the Joint server but the again that then then my impression was that the The Pledge discovers the joint proxy link locally anyway and then that join proxy is either stateful in which case it can do the forwarding or it is not in which case it has to find whatever is described by this co-ops plus JPY URI and then proxies through that to the actual joint proxy which is kind of implied in the uh to the to the Joint server which is implied in the joint proxy URI yeah we probably have to generate uh slightly more uh extensive example to make sure we have all the components of that so that the slide is abstracting this a little bit too much uh but I I can't answer that question I have to reread the document how am I yeah just throwing it out there in case it's obvious I guess you could have uh hosted by relation like on the first uh proxy hosted by relations I guess they also work for different interfaces on the same host but also two different uh endpoints altogether Christian you probably have thought about this already yeah the the hosted by or the host's relation is already implicit in that statement um it's just not particularly helpful and not not it's just not used in a way that's of anything can't help with you"
  },
  {
    "startTime": "00:28:08",
    "text": "just as um as I suggestion if you end up with examples involved in the resource directory I think the registration phase is also important to have although this all started with uh discussion on Discovery yeah we we have to have the the whole flow I agree with that so I think the next step is to actually get uh uh something written up and then get a joint meeting between some animal people and and some uh core people to close this um I think we can do the the finding of the the right time to do that offline so unless somebody wants to add something to this I think we have the information we need I'm seeing a lot of people uh dropping briefly dropping from the call and coming back is that something that people actually uh experience or is it just a fluke in the member list s yeah and some issues earlier but I think there was local on my end so okay probably related to the system as a whole yeah I actually also have some issues perhaps good so I think we can complete this agenda item and go to the next one which is the remaining open issues on CIS or the the href uh draft"
  },
  {
    "startTime": "00:30:00",
    "text": "and there are a number of issues open in the GitHub repository and I should have put the the address uh in there I'm sorry um and some of these are about selecting test cases creating test vectors so I'm not going to talk about those because that's just ongoing implementation and there are a few more that that really uh probably need to go into the the document and I propose that we go through these um issues now so there are two issues 43 and 44 which are both about percent encoded uh text and uh we we noticed that unreserved characters such as period uh normalized to to being a non-present encoded so we had to make some some changes um there um and uh also everything that is ugf age and not in the first 128 code positions uh also becomes uh non-pet because we we essentially open up normalizing this to to utf-8 uh text so uh in the interest of having um a single normalized way of writing a CI for a UI uh we could Define a normalization algorithm that simply takes the the text uh starting from the left and uh looks"
  },
  {
    "startTime": "00:32:01",
    "text": "at the the start of the text and if we find a valid utf-a encoding of an unreserved Unicode scalar value we can put this into a text string and if if that is not the case so this is all for four percent I call it takes sorry um if we find a percent encoded a text that would not be a valid utf-a encoding of an unreserved Unicode scalar value then we put one byte in into a byte string for that preset encoding and repeat uh so we have a well-defined normalization algorithm and the the examples on this slide is the word globier circuitry which is uh uh blueberry marmalade um and that would just be encoded as utf-a text because um both the the ASCII and the uh Beyond as key characters are proper Unicode scalar values so um this would come out nicely but on the other hand if we have weird uh percent encoded stuff for instance if we have percent encoded 0 0 DC 4701 A5 then some of this would be picked up as utf-8 for instance the zero and the one these are valid utf-8 uh while dc47 certainly is not valid to gf8 because that that would be a surrogate character and A5 is not a valid duty of age because ugfh uses uh the the prefix binary one zero only for second and"
  },
  {
    "startTime": "00:34:03",
    "text": "initial character of utf-8 encoded a character so these dc47 and A5 would land in uh byte strings so this is all about utf-8 encoding and valid Unicode scalar values um the the observation here is the the co-op actually requires uh oh interesting um the um the um observations is that co-ab requires net Unicode so there are some some additional requirements like no bums and so on but we would not be mirroring those and Christian noticed that the dc47 would be just a DC and then 47 is is actually a village uh character because it's capital f uh so uh excuse me capital G so it would be uh in the string together with the U zero zero zero one um as uh the as the text string so to summarize we we um my proposal here is we Define the normalization algorithm uh we require that normalization algorithm to be used this is not Unicode normalization maybe the word normalization needs to be replaced for something else this is just a defined way uh to uh get um partially percent encoded URI into the patch structure"
  },
  {
    "startTime": "00:36:02",
    "text": "and we would do this with regard to utf-8 and unicode scalar values but not with regard to the additional coab requirements on uh net unicode so any opinions on that Christian I'm happy with the state of merch of much things here um I'll just like to point out that because when we take this route of of ignoring that Co-op statement we might be pushing co-op in whatever kind of later development it has towards dropping that requirement because there is no practical there is no practical way for for users to process a URI a CRI that is not just taking the text values into Co-op and failing if there is any any pet so my my secret plan is to to drop the net Unicode requirement from a co-op and replace it by something that I actually even have a draft for but I need to finish that draft first and then we can use that to replace net unicode okay so if people agree with it we can go to the next question go ahead yeah I wanted to know is there a way to delete uh bom I'm not sure that there is anything written up that would"
  },
  {
    "startTime": "00:38:03",
    "text": "uh Define any special processing for boms in Uris um so I I don't think we we have a the we have a reason for doing that kind of processing uh I you you know uh there is not any BLM requires right no if there is no no bom then we are fine um this is really about the the situation where uh somebody evil put a bom into a URI and um then a co-op implementation uh which uh is is implementing the net Unicode restriction I don't think such a an implementation exists but in Syria it would be possible uh What uh stumbled about that so it's a bit of a theoretical case but it's good that we have been thinking about that okay thank you thank you so the the next issue was that URI with a scheme No Authority and no path um actually could be either considered to have no path component or could be considered to have uh no leading slash and then no path component so we we have an ambiguous translation of a colon into either just a"
  },
  {
    "startTime": "00:40:00",
    "text": "CI with a scheme or CI with a scheme and then the indication that we have no leading uh Slash and we could pretty much toss a coin but Christian has dug out that that full colon bar plus dot dot slash bands should resolve to Foo there's and um so it's kind of more more obvious to keep the the um Foo itself in the uh leading slash category otherwise we would change that while doing this resolution um so um yeah this is a weak reason but it may save us from tossing a coin and once we have tossed that coin or accepted that reason we would simply Outlaw uh having just a scheme and uh the no leading slash indication but no uh actual path uh being given so my proposal here is to to essentially declare the coin trust and assembly Outlaw this case um so we have a well-defined UI to CRI translation of of a colon any comment on that question I think others either is probably good I'll go through these I'll have a look at the issue before we merge it maybe but I can't have I don't have"
  },
  {
    "startTime": "00:42:00",
    "text": "any strong opinion either way yeah we cannot merge issues we only can match for requests so somebody has to write the pull request to us and then we can check that uh this doesn't create a problem okay last slide um issue number 50 is really a grab bag of of really uh small issues so the first observation is that an entirely empty reference is is not useful so we shouldn't allow it um the next observation is that we again have an ambiguity uh where we allow null for a path that that could also be an empty array and my proposal would be to um use null only when this empty array would occur at the end of the CI and in the middle uh use the empty array this is of course a little bit of context sensitivity issue so that's not not a beautiful solution we also could maybe find a way to uh change the the rule for suppressing trailing uh nulls to to include empty arrays but I'm not sure whether that actually works um so the this is my proposal at the moment uh use not only when at the end and in the middle use um GMT array so cope uh question mark bar which is uh uh scheme an authority and a query part"
  },
  {
    "startTime": "00:44:00",
    "text": "but an empty um path part I would use an empty array and not uh the Special Value not to represent this so maybe I should ask whether people have an opinion on this Kirsten I'm just wondering if it's possible to Define any simple sanity check to see that one gets this right in an implementation is it just sufficient to see that null is not present in the end um yeah I think that that's a good requirement and um since I haven't implemented this yet I I don't have a strong feeling on how to put this in uh but in in an Ideal World of course it would be possible to say this in the cddl but this is such a context sensitive thing that that cddl is a little bit not strong enough to do this um okay yeah I don't have an answer to your question but I think it would be really useful to get a simple sanity uh check we can apply here I didn't mean necessarily A cddl or a semantics definition more a practical guideline for an implementer exactly yeah yeah okay so these are two items that really need a decision and there was a third item in this issue that just notes that that the host part in the authority is a bit weird"
  },
  {
    "startTime": "00:46:00",
    "text": "because it's it's a group in a larger Authority array so in all other cases when when we build uh strings out of arrays we are using the entire array and here in this case we first have to lob off the the port on the right hand side and other stuff on the left hand side and then we can use the the text strings remaining to build the the host uh value for the UI and I agree that this is weird uh I'm not sure that there's much we can do about that without introducing uh quite a few more bytes um in the encoding okay if nobody has a strong feeling about it I'm going to paste the line of cddl in into the chat that really demonstrates this so Authority is is a optional user info then a host and then an optional part and if you actually want um let me paste the rest of the city that is relevant here and if you actually want to recreate uh the host name then you have to uh find the the text strings in there"
  },
  {
    "startTime": "00:48:02",
    "text": "and join them with a DOT uh in the middle between the labels so this is a bit different from how we put together other parts of the URI but I don't think it's a disaster so that's all that I have so the the authors would now generate a few pull requests based on this and try to close uh the issues with these four requests so you may want to watch the href repository if you want to look at these pull requests uh and then I think we are very very close to a working class called good to hear uh and just to be sure I think you covered all the issues except the one on test vectors to the Adidas and appendix oh um I missed that I wasn't comparing one by one but uh yeah that one came up to my mind but I mean it's not really for discussions just offending action well it's a good question um so there are several ways of of handling test vectors and assuming that we want to have test vectors um of course one answer is not to have test vectors but I think that would be a mistake assuming that we want to have test vectors we can uh put a set of test vectors into the RFC and or have a more complete set of test vectors that is living in a repository somewhere and uh what what I think we should be"
  },
  {
    "startTime": "00:50:02",
    "text": "doing is uh have a reference from the RFC to that repository um that's a bit of a weird thing for for a Perpetual immutable document like an RFC to point to a GitHub repository but the isg has recently warmed up uh to this so we could make use of this device so we would have the test vectors and some some supporting uh softly uh in-depth repository which would make it a bit easier for people to make use of the test vectors that that would be my proposal so we would have we would still have a few examples in the RFC but not with the the intention to cover all bases but just to to support the explanatory text yeah totally agree on the overall approach we need to select carefully what to include so I think it would end up be a few very very important not too difficult ones and a few uh very useful to know Corner cases yeah we even have an appendix for Corner cases the small print appendix so yeah uh we can do that but we shouldn't try to be exhausted right yeah sounds good great so I think okay so we expect to pull requests anytime soon followed by a revision of course I suppose before it F15 yeah I'm going to be on vacation next week but I'm not sure how many programs I will be able to uh we didn't interact that much but yeah we should have something by London yes"
  },
  {
    "startTime": "00:52:00",
    "text": "great okay uh those were the main points on the agenda um is there any other topic or any other business actually anyone wants to discuss related to core ub3 aub2 everyone hang on so I think we cannot join the meeting and talk again latest in two weeks thank you everyone have a good rest of the day thank you thanks a lot bye-bye thanks bye foreign"
  }
]
