[
  {
    "startTime": "00:00:15",
    "text": "50. 5 you can start in about a minute or so. Hey, Aaron. Until you're up to speak, why don't you turn your video off? Yo. You're given Yep. You have you're muted. You're currently on mute. Yeah. Okay. So welcome everyone to the Acme I'm meeting at IPF 119 if you intend to be in the rift meeting, it's in the other room. This session is being recorded. Like it says, on the slide. Since this is Thursday, I suppose you've seen this slide, several times this week. So with the place here as well, and Also, this slide. So,"
  },
  {
    "startTime": "00:02:02",
    "text": "Mhmm, meeting tips if you're remote, strongly recommend to use a headset, and make sure your audio and video are off unless you are sharing or presenting. During decision. I am sharing, but they will turn my video off as soon as enough talking. Okay. And don't forget to sign in. That's how we can get to a big room like this. Okay. This is the general agenda Mitako in for patient all the other things generally for, the IETF 1 119 meeting. And this is our own agenda. So we're going to do administrative trivia. That's this part. Technical difficulties, so far, none, other than me trying to speak when I'm muted, and agenda bashing. We'll do a quick document status. Then BTN node ID, ARI, device at the station, Akmian, and all the rest. If we have time, either The AOB at the end stands for all other business. And the agenda bashing. Hi. This is Roman Unity, your former responsible AD. I don't wanna the agenda, but, I wanted to first say thank you so much for Deb for previous sharing this working group and now, now the security area director but I wanted to thank Tomo Phoebe for stepping up, as being the replacement kind of chair. Congratulations on the new role, and thanks for helping to run the working Yes. This. You, Thomas, for me. Thank you. Okay. So on to document status. So Acnie, ARI, Acmeonian, device at the station, and scope DNS, All of the business challenges, all of those had new version in February,"
  },
  {
    "startTime": "00:04:02",
    "text": "So they're still in active development. DTM node ID was already, in ISG handling and was sent back to the working group, to reevaluate the consensus, there is a new version from January, and I'm not going to say more about it because we do have a presentation. Acme client was allowed to expire, Can we say that it's dead? Anyone running to the mic I'm Guess not. Okay. I don't see Kathleen on the call. So, usually, she's the one that comes running in at the last minute and updates it. So I guess we'll see. And keep and then there's, ACME integration, which is in the RFC editor's view, Ms. Raf, if I'm reading that correctly on 2 drafts, the lamps draft ARFC 7030 CSR attributes. It's getting regular updates, and there's it's not just maintenance updates. They text gets changed from 1 update to the next, it's not in last call. The other thing is, Annie Mabrzyke, and it's in pub it's really recently the publication was request So hopefully that one is going to get out of our way. Any other updates? Good. So, making excellent time, and it's time for presentation. So the first presentation is that the aforementioned DTA node ID. Alright. This one's gonna be pretty brief. If you could, then next slide, please."
  },
  {
    "startTime": "00:06:03",
    "text": "So the the last draft was the Vision 12. Which had some changes to improve the introduction and and abstract text and and some of the slides to explain why this is experimental. And they're actually was intended to be some changes for, a later revision before this IPF that, just got missed And now that the, data tracker submission is open. I'm gonna be sending those the changes are already in the the source repository, but they just need to be updated to the detractor These last changes are purely typos, that were cut. By Deb. And, thank you for catching those There there's no further changes. And once this is done, then it will be ready to progress and it will be dependent only on a companion draft, updating the Ironwood Street. In the DTM working group that I will be talking to tomorrow to try to kick them. Into, making progress on that document, which is very small. Okay. So can we run a sort of consensus call, like, next week or the week after that, to see that everyone's okay with all the changes and then push it back. Yeah. I I think so. My intention is to get the the hopefully dash 13 revision out this week, Sure. And will be then it ready Okay. Thank you. So, the next one is ARI."
  },
  {
    "startTime": "00:08:02",
    "text": "Yeah. Hi, everyone. I've requested control over the slides. I know exactly how that works. But, Let's see if I know how to do that. This this It looks like that worked. Mhmm. Alright. So since I was not able to be at IETF 118, but since one 17, draft of 3 has been published. This has a few substantive changes in it in particular, changing the computation the certificate identifier. I'll talk about that more in a minute, and removing the post request to the renewal info end point and replacing it instead with a new field, the replaces field, on the order object itself. I'll be talking about that in more detail in a moment. There's also, draft 04 it doesn't exist because I attempted to publish it very shortly after the close of, the submission period before this meeting, but Drafto 4 consists solely of typo fixes and small wording clarifications on top of draft 3. And the draft feels like it's in a fairly stable state at this point. So changing this we have a question in the room. Yeah. Could you back up one? Of course. These, draft names are wrong. Right? There should be trash. You are you are absolutely correct. I apologize for not on my, in my slides yeah. These should say,"
  },
  {
    "startTime": "00:10:00",
    "text": "draft IETF, Acme, RE, as it said on the first slide. Changing the certificate identifier, the in draft. 1, the certificate identifier was computed as a base 64 URL over the during coding of the search ID structure as defined for OCSP, we thought this was a good idea because, hey, there's already a nice standardized way to uniquely identify a certificate when talking to a CA it turns out this is very difficult to implement we got a lot of really good feedback from clients implementers saying that standard, PKI libraries that are capable of handling X 509 structures like certificates and OCSP requests and responses just do not expose the cert ID structure in a way that is here useful. I wish this were otherwise, but it is truly a barrier to entry for a lot of clients. So we came up with a much simpler way to do this. The the other disadvantage of this is that it requires access both to the certificate that you want to query about. And the issuer of that certificate. In order to compute this correctly, you have to have access to the issuer certificate or have separately saved data about the issuers cert. That kind of sucks makes, more stateless implementations a little bit harder. So the new version of the certificate identifier is a, again, B64 URLs so that it's safe to transport over the concatenation of the authority key identifier contained in the identity certificate a separator period and the"
  },
  {
    "startTime": "00:12:01",
    "text": "dure of the cereal. So in the MFP certificate itself, the authority key identifier can be counted on to be something that the certificate authority knows because they put it and know how to look it up. And the only subtlety here is that the second half of this does have to be computed over durgeon coating of the cereal because Otherwise, there's no specified encoding of an integer and basic see for of an integer depends largely on what language you're using, and we can't be having that. So you do have to, during code the serial remove the tag and length fields and compute the base 64 over that. Regarding updating the server, one of the things that we do in this draft is make it possible for the client to form the server, hey, this certificate has been replaced This is useful for a lot of reasons that we've talked about in previous meetings. The way that draft0102 did this was by having the renewal information endpoint support both get or post as get requests that would provide the renewal info and post requests where you could say, this certificate has been replaced. That's a lot of extra requests and, ends up being a little bit unwieldy and doesn't provide very useful information to the CA. It lets the CA know certificate is gonna replace. And that's it. And it turns out there's a really easy way to provide even more useful in information to the CA, and that is for a new order request to contain a replaces field the value of the replaces field is the same cert identifier that we"
  },
  {
    "startTime": "00:14:03",
    "text": "talked about on the previous slide. And this informs when this order is finalized, It will replace this certificate that's identified. And the CA can do all sorts of things with that information. The original motivation of this draft was that it would make Mass Notification events easier so the CA can use this information to know certificate has been replaced. Therefore, I can revoke it, and no one will have business continuity issues, but it also helps servers do things like know that this new order is a renewal and maybe exempt it from rate limit. Or various things like that. So we're very excited about this idea. This has already been implemented in let's encrypt server implementation and the Lego CLI client's implementation and is underway in the Google trust services server implementation and a couple other client implementations. Other editorial improvements that have happened in this draft, I have improved the IHANA section. This was my first document with Diana considerations, and I didn't full understanding of how that's supposed to be formatted and now it is much better. Thanks to some feedback. I now reference RC 3647, the one that describes what a CPCPS should look like and defines terms like renewal and also RFC 5 280, obviously, because this thanks to including that authority key identifier field in the search ID, this is dependent upon the RFC 5 280 certificate profile. If your certs don't have an authority key ID, this isn't gonna work. But 5280 says that they must have a key ID. So that's taken care of. And then also thank you so much"
  },
  {
    "startTime": "00:16:00",
    "text": "to the people who read Draft 3, and I've made a bunch of tiny editorial improvements and type of fixes and stuff like that. That will be in draft for when that's published as soon as, an ETF 119 is over. Of the other improvements is there's now finally a filled out of acknowledgements section I want to use this opportunity to actually thank all of the people who've helped on this, the people who supplied, clients and server implementations Samantha Frank, Alari, Matt, Mudar, Freddy, Thank you all so much for supplying implementations and like truly vetting this. And also, thank you so much to Rob Straddling and Amanda Barber for editorial feedback and helping me get this in a good state. One open question at the moment maybe 1a half. One of the things that the draft says is that If the client supplies a replaces field in a new order request, and the server looks up the certificate that they're claiming this new order places and goes, woah. This is not a replacement of that. That previous certificate was issued by a different account, or doesn't contain any of the same identifiers, or various other things, the server might reject that requests saying that this is not actually a replace something has gone wrong, fix your replaces field. But there's one particular circumstance, which is what if the server would accept that replaces field. Yep. These 2 certificates look like the new one is a renewal of the old one, but the old one has already been replaced What should the server do then? This is a kind of open question We'll probably continue to leave it at least partially up to server"
  },
  {
    "startTime": "00:18:00",
    "text": "policy, but one of the things that has been proposed is that the server should be required to respond with an HTTP 409 conflict because that's actually kind of semantically appropriate here. The client thought that it could mark an old order as being replaced by this new one, but behind the scenes that order has been updated to say that it's replaced by some other new order. This is the semantics of 409 conflict, maybe it's appropriate to mandate the server behavior. Would love to get feedback on whether that's something that people think we should do. There's also between when I finalize these slides and just now, there's been a question about whether the draft should support a sort of, like, mass Ari info endpoint some way of saying, hey, please give me the suggested renewal windows for every search associated with my account or some way of getting this data in bulk. This idea has come up before It was rejected before because of, performance issues and having to deal with paging and long lists of results just not actually being very good things in ACDP APIs but if this is something that a large number of people think of this, draft, like, absolutely should implement any way despite those concerns that would be useful feedback to receive. Finally, I think this is pretty stable at this point. Draft 3 came out and received almost entirely editorial feedback it's implemented both on the server and client side by a number of people graph to 4 makes only small editorial changes on top of it, and I don't really know what the next steps from here are. This is the first document I've shepherded through to this point. So I am looking for feedback from the rest of the group on what the next steps here are. Thanks. That's it for me."
  },
  {
    "startTime": "00:20:08",
    "text": "Okay. Since people are not running to the mic, oh, say that, The usual, first, the next steps are to resolve that one issue. And by starting a thread of the mailing list and after that, which could be even in 2 weeks because we generally don't do working group last call, calls, the week after an ITS because everybody's coming back and this is really busy at work. So the right thing would be, to start a working group last call. After this one issue is, decided And you you think you you don't have any issues, and then you do the working best call and somebody, there's all these new issues with it. Well, that's the way things go. Yeah. I see there's been some comments in chat on the side. Tim said 3647 is informational. Yes. This is a good point. The def the the new reference TRC 3647 is not normative is being used, although I may have mis formatted that. So thank you for pointing that out. But this is basically just saying that the word renewal is not very well defined. And in fact, the ACME protocol itself does not have a concept of renewal, but 3647 does have concept of certificate replacement and certificate rekey and something else. And I just say for the purposes of this document, the word renewal is used to refer to, all three of these things that are defined in 3647. So it's just for semantic shorthand, not a truly normative reference. Thanks for pointing that up. Okay. So any other comments,"
  },
  {
    "startTime": "00:22:00",
    "text": "And on yep. You were really, going very fast in this, agenda. So, thank you, Aaron. The next one is device at the station. Sprague Bannum, thank you. Okay. This is my first time attempting to control the slides. Hello. It's been a while. I think last time I presented was in London. There's been a lot of activity on the mailing list. At least relatively speaking for this draft. So please interrupt with questions, comments, concerns, Hopefully, you can have some discussion. So I thought it would be useful to kind of go over, some of my original design goals that was kind of what was being discussed in one of the one of the mailing lists post how do I make the slide go to the next slide? You just say next slide. Oh, next slide. I was trying the slide control thing. Okay. So Some of the original design goals for this draft were issuance of client certificates to end user devices, Marily envisioned in the enterprise context. This, I believe is the 1st draft that kind of steps outside web PKI for acne. The 2nd big design goal was building upon existing,"
  },
  {
    "startTime": "00:24:00",
    "text": "adaptation formats. I know there's a lot of work at IETF and TCG and other working groups to just design kind of vendor neutral forward looking at a station formats that are everything to everyone. But none of those are done, and they're definitely not implemented and there's definitely not code support for those. So one of my goals was being able to Ashley use station schemes as vendors have built them today to issue client certificates. Not try to build the perfect solution. So web often, is well supported by the vendors that or at least in kind of my initial design scope, Apple with macOS and iOS, Google, with Android and Chrome OS, Microsoft Linux to some very limited extent. It was Not really intended to interoperate with rats whatsoever. It But when I originally started this, rats Wasn't really done it all. I kind of imagine in the future, there'll be a way to issue to integrate acne with rats and this draft will be supplanted and We will all live in a vendor neutral attestation there is a hand. Hi. Mike Downsworth. Not sure if you want to later come in now or but, yeah, I'm an author of a parallel draft called CSR attestation going lamps. And we've chatted a bit on the mailing list, and I think decided that this work here and the laps work is totally parallel, and we should proceed with both."
  },
  {
    "startTime": "00:26:06",
    "text": "Yes. So I I was in the lamps and branch working groups and saw your presentation, I was under the kind of impression that you're hoping to get new vendors on boards with implementing kind of attestation for the first time. Kind of, I think one of the examples you had thrown out was HSMs for issuing web PK certificates and actually being able to do at a station across the open internet for servicers. That's the rats. Yeah. We've got our design team as 2. The rats is what you just described. The, the lapse work is, whenever association you have now. Here's how you jam it in a CSR. Which is meant to be, like, super, super general, but But You said you've already got implementers on this. I think it was our on discussion, so make sense to force them it doesn't to change. Right? I think that's an interesting discussion. Sounds like there might be a little bit more solarity with the lamps than the rats. Because one of my goals was in most, like, in the environment I was building this for, all of our platforms support attestation, but they don't support certificate issuance protocols that actually support that, right? Windows support skip can't really pass that a station over that. So Michael was really just to tunnel the existing thing over at me. Which does mean the CA has to implement 4 or 5 different attestation formats, which is not ideal. But, yeah, thank you, especially for, I think, yet, the most feedback of the mailing list about this."
  },
  {
    "startTime": "00:28:01",
    "text": "And then kind of the last thing is kind of things that weren't really in my scope. I this is really intended for platforms to kind of already have web authenticate, at least in their library ecosystems and the ability to generate web authenticated at a station statement formats. Wasn't really attempting to be appealing to vendors that don't have code already to, format these out of station statements, like I just mentioned the HSM vendors wanna speak ASN1. Totally understandable. This is probably not super appealing for them. And this doesn't really make any provisions for being used from web PKI. I Sure. Someone could short in there, but I don't really see how this would make sense. Next slide, please. Since, the last We have a, a couple new public implementations IO, macOS is new on the Apple list. Is previously not supported. On macOS until The latest version came out last September. Acnez is a Go client library. Go client library. Is that it supports, small step remains the only open source CA that that supports it and I have been told of rumors of other private implementations from fairly large platform vendors. Not authorized to, speak about that, and I couldn't find any public information about it next slide, please. Same, kind of question as the last presenter."
  },
  {
    "startTime": "00:30:01",
    "text": "This is this draft is is this for a while or hasn't been a ton of feedback. Most of the interest has seemed to be in implementing it, not discussing it, I've encouraged a couple of the larger implementors to attend the next IETF, and I'm hoping they can figure out their corporate policies to do so. Bye. I ask the, the room and the chairs kind of Wow. What are good next steps at this stage, and would be helpful. K. You've finished talking Google. It's not so much about the next steps, you just wanted to make it week announcement on behalf of my team at Google that we are planning to Implement and open source the client and CA supporting these challenge type. Thank you. Okay. So do people think this is ready for next for last call. Open issues. Any Anyone? Yes. Yeah. Charles. Sorry, maybe a really dumb question, but, is this always tied to like a physical device, or could you see it being more of a virtual workload or even container workload or something like that. That's identifying itself."
  },
  {
    "startTime": "00:32:02",
    "text": "It's was mostly envisioned for physical devices that, or primarily identified by a serial number but a lot of the cloud environments implementations of the TPMs look shockingly similar to physical, so I think that would kind of fit in, pretty easily containers starts to get into service and workload identity I think and that feels like pull other set of constraints and Okay. So, like, something that has a unique ID that identifies it necessarily wouldn't work here, or or is that the main requirement, for the skiing door? That that having a unique identifier is the only technical requirement. Okay. Alright. Thanks. That's that's helpful. Thank you. Thank you. So since others are not joining the QLS, you. Do do you think it's ready for working request call? There hasn't been a ton of editorial feedback so I'm sure there's some still some typos in there. I would was if the places that have implemented it would actually provide you back, but Seems harder said done. than Yeah. So my suggestion would be to have a working group last call, not immediately with me being a month or so. And then specifically ask within the last call for people with implementation experience to share their implementation experience. That usually drives a lot of,"
  },
  {
    "startTime": "00:34:00",
    "text": "that might be able to, drives some discussion because we really need discussion if we don't get feedback from the group, you might as well have done it on your own without the working group. Yes, Mike. My account's worth. So I guess as one of the people who's read this and given feedback in detail, I vote. Yeah. Working group last call. I think this is, I think this solves a real problem. Web auth end devices. I think it's mature enough to implement and deploy, I say go for it. K. Thank you. So I guess that's the plan. Okay. I will, reach out to the implementers that I in contact with to do that. Okay. Thank you. So The next presentation is for akami onion, and if I, view the things correctly, it think he was not in the room. Well, Definitely knocked, physically I think not No. Either. I think I don't think he's planning to be here. Encouraged him to give us a slide so that we could Okay. So we have one slide that's kind of nice and colorful. Mhmm. So, we had the working request call in December, Would that very little to no engagement, So please people review because having work if the working group is not saying anything, then the work group, we can't really progress it. So please review, some minor nets are now fixed with Please review. Please read and comment. Okay. And answered the question. Is it really ready?"
  },
  {
    "startTime": "00:36:04",
    "text": "Okay. Which bring this over to I can best, Provisioning. Are you still here? Sorry. Mike. Okay. Hi. I'm Mike Sweet. Might know me from cups and ITP and Airprint and bunch of other network stuff and printing stuff. I've been working on this for the last 2 years, basically. Next slide, please. So basically, the point of this is to allow IoT devices like printers, cameras, and so forth to be able to Actually, get certificates that browsers will trust. And, hopefully, to do so in a way that will, scale from Little old home networks all the way up into corporate networks. And, 5. Yeah. So, This has support within the printer working group anyway, which is c, standards organization that the printer manufacturers are most involved in. And, I, Did a presentation and IOT ops last year. And think the response there was generally positive, and we're gonna do Design group or something and, and haven't really progressed there, but, I'm still kinda working things, but, finally, Found a time slot here to present for ACME so that You all can see what's going on here. So next slide, please."
  },
  {
    "startTime": "00:38:01",
    "text": "So, if you've ever tried to connect to Your printer, or camera or anything? You've probably seen one of these scary browser security warnings. Because, they're using self sign certificates. And, we can all debate the the merits of of these things and over the years when I was working for Apple, I tried to get some of these things changed and without too much luck. So, so this is this is kind of the the user experience we have right now. And it's it's hard to to point a user at Their printer to configure something or their camera to configure something. And not have them scared away by seeing one of these messages. And, I think we need to do better. Next slide. Alright. So, just general observation here, and this is from Talking with browser developers over the last 15, 20 years now. To to allow a self sign certificate without the scary warning even for a dot local hostname If Basically not interested, and I can understand why. And So, you know, the easy way is is is is out for that. Right now, if you want to to have a certificate on your printer or your camera, you have to go off and buy 1, or do your own local CA, you know, with open SSL command or something or use one of the various third party solutions to to, that provides you a a GUI to click in. And, None of those things are really scalable to home users And, it certainly doesn't lower the workload of of your enterprise IT department"
  },
  {
    "startTime": "00:40:05",
    "text": "because you have a whole lot of these devices, and you need some way to to configure them securely. Next slide, So, your typical home network you have a WiFi router, modem, that's provided by the ISP and and, you know, provides DHCP and and and DNS path passed through, and there may be some amount of traffic filtering, but it's usually very minimal. And, you might have an embedded web interface that you can access to do speed tests and and other sorts of configuration stuff. But, essentially, you you put your device on the network. You get an IP address. It tells you what to use for, DNS server and and what the local domain name is and Everything's just connected on that one 1 little network segment, And, You just kind of trusting that everything is is is copacetic and and and can is allowed on the network. Next slide, please. Enterprise is a bit more complicated, and we'll generally have a lot more services and filtering and everything. And you might even need to supposedly provision and and allow devices on the network. Depending on the level of paranoia the organization. And so, Here, there's actually an opportunity to to have a proper certificate management, but it's not, It's not something that's that's formally supported or or There's no protocols or anything that that, device manufacturers can can actually follow. Next slide. 1,"
  },
  {
    "startTime": "00:42:08",
    "text": "Alright. So that brings us to Acme. And, of course, Acme has kind of transformed the the web. But it doesn't help for your local devices because you can't do a challenge to to your local network. And, solution. The obvious solution is just to run an ACME server locally. But, you know, you have all sorts of of, issues that come up. And that's what, This draft is trying to to, Address, address, And the key ones here, how do you discover what your ACME server is? How do you know what the root certificate is, that You can use to trust these certificates And then, you know, what are all the the rules for making sure that this isn't a complete waste of time and and worse than what we have with self sign. So next Next slide, please. So for the discovery, I I went for the the obvious simple solution. Which Some security guys have already told me, well, but that's that's too insecure. Well, We're already trusting, these things to to get us on the network in the first place. So why not trust this as well? So With DHCP, we can have a DHCP option that just points at a local Acme server. But in many cases, you may want to have a little more management of this, especially in the enterprise And, So we can also define, DNS SD service for ACME that, allows you to discover what is the service for our domain. But, of course, we can't use MDNS for that, because you know,"
  },
  {
    "startTime": "00:44:00",
    "text": "and you're just ask asking the room. Who should I use for an Acme server, and and you don't know that the answer is authoritative. So For that, we have to use regular DNS, once we've connect to the network. And I have a note on on the slide here. You normally would have one server for network. But, Yeah. And there's all sorts of tricks to to do load balancing failover and so forth. So Just from the the, network device, it's there's one server, but it may actually be multiples that are or, linked together. Next slide, please. So to get the root certificate, It seemed kind of simple to me too that if you connected to the local lock me server, it would and you do the TLS negotiation, you're gonna have its certificate And That could be the root certificate. So, If it's CA signed or something, you know, provided by you know, Enterprise certificate services. Then You're you're already set there. You can trust that out of the box. If it's a self signed certificate, then you need to do something to trust it the first time you connect, And No. Don't trust it for everything. Just trust it for dot local or the local site specific domain, And, So that's that's kind of of where we have it there, and there's some more wording in the draft for that. I'm seeing some comments on here. Let's see. So, for Mike, the We do have that same issue. There's, small step I noticed has a way to Creload, a trusted root certificate onto the major browsers,"
  },
  {
    "startTime": "00:46:00",
    "text": "and that's something I'm actually doing with my my own implementation as I as I, try to get this up and running on as many OS. This is problems as as possible. And And the whole network identification thing, and I've got a slide coming up in here as is is one of the pending issues that we have to to resolve because is is Easily have, you know, wi fi and ethernet or Wi Fi and cellular. And, you don't want to necessarily trust the root your Wi Fi network, for a device that's being served up on a separate network. So, there's a lot of issues like that that are Alright. And we're still working out the details on And, Daniel, the, the client decide when not to trust that CA in the future. Well, What's in the draft right now is basically if you disconnect from the network and you stop trusting that root. And, when you reconnect, you'll see, it's it's the same root And and it can be trusted. And if it's a different network and you see that root, then you would have to show the user something to say, hey. This is using the same same network credentials as this other network, and and what do you wanna do? But I I agree. There's there's a lot of, Uncertainty when it comes, to to self sign certificates, being used here. Alright. Next slide, please. And, Tim, yeah, I agree that asking user isn't usually the right answer here. Alright. So security considerations for the ACME server You know, pretty straightforward. These are in the draft. I won't go through every one of these The No. The big thing is"
  },
  {
    "startTime": "00:48:01",
    "text": "say you have a local Lochney server, You don't necessarily want to automatically generate a certificate for any network device at Asport on your network because you know, it's it's one thing for your printer to automatically get added, but, you know, you know, somebody that's that's got raspberrypie or something. They just bring into a room and put in the corner and and have it joined to your network, and and it can impersonate The printer that it's it was set sat in the corner next to. And, have a valid certificate so that the client just trust it automatically. And, So one of the things is how do we How do we Either standardized or at least standardize the behavior of this so that a local Acme server could notify network owner and say, Alright. We have a new device on the network that wants to have a a certificate, and, you know, prove it. Or deny it and And, and and have it proceed accordingly. So There's obviously some issues, for a local server to to follow just as if you were running in an enterprise, its server, The The main issue is is to to, to have it very clear because if this ends up in a in a a Wi Fi router or something like that is the the basic home service, service, The rules need to be very clear. Next slide, please. So on the client side, as I as, it was asked before, and I mentioned before, Yeah. You have this this local root certificate it"
  },
  {
    "startTime": "00:50:00",
    "text": "has to be limited to that network, and you know, the big challenge here is how do we identify the network and I list a bunch of things and the last IETF meeting that that I reviewed this with IoT ops. One of these proposed solutions was just to use the local root certificate as the network identity because we're We're doing a TLS negotiation. You're approving ownership of the private key and everything, and So it's It's possible to to trust that the owner of that certificate. Yeah. It's the person that you're talking to unless, of course, you've had the the root key or the private key compromised. But, you know, at a certain point, you know, you can't you can't get around that basic level of trust. And, on the IoT device side, one of the things, you know, the the usual things for protecting the information, but, it's also important that you're able to do a factory reset of the device. And wipe it because otherwise, you know, you you do something and then you sell, your your printer or your camera to somebody else, and then they have your your key information and that You know, you don't wanna have that happen. And, similarly, you don't wanna be stuck with something from the manufacturer. That that can't be cleared out, so that you have it as if it's a brand new device. Let me catch up on these comments here. So do we really need that local At the moment, dot local is is is the Only way to access printers on home networks. And, and, And, certainly in,"
  },
  {
    "startTime": "00:52:02",
    "text": "And the enterprise, it's it's it's It's less necessary, because there, you will have a local domain and And multiple networks that you have to be able to to navigate through But, but definitely for the home network situation, we do need that local. Yeah. And, certainly, you know, the Yes. The, automatically updating root store, No. That's that's why the the the security considerations here have have been a a, A major discussion point in in past meetings. Let's see. Okay. So for the printer manufacturer domain name thing that assumes internet connectivity and and in many cases, there isn't, and and we need something that'll work standalone as well as, connected. And I am not familiar with the work, in the dance work group yet. K. Michael, the, The chat too is, mostly a back channel in somebody really wants to interact with you, they're going to do like Aaron, actually joined So Aaron? Okay. Hi. Yeah. I mean, first off, I I wanna thank you a lot for this presentation because I fully admit that I had read this document previously and"
  },
  {
    "startTime": "00:54:03",
    "text": "I don't get it. And, thanks to this presentation I now get it, and that is very useful. So thank you very much. I think question which may be more for the room than for you is does this document belong in the acme working group? Because based on this presentation and reading through it, The document isn't actually proposing any extensions to the acne protocol itself, what it proposing is a discovery mechanism for devices on a local network to find Acme servers and a requirement to that devices which sorry, a a discovery mechanism, a profile for the certificates for the issuer certificates used by the acne server, and the and entity certificates requested by the IOT devices and it's specifying that client devices must use this trust on first use mechanism to trust the issuing certificates generated by the acne server. And all three of those things, the discovery mechanism, the profile, and trust on first use are sort of orbiting around acne but they're not actually the acne protocol itself. And So it's not clear to me whether this belongs in the Acme working group or elsewhere, whether this is a normative or informative slash, like, in informative document, like, Something about this whole thing feels kind of different from many of the other documents that this group has discussed during my time on it, and I'm curious what the rest of the room thinks the the right path forward here is. Thanks. Well, if I make one quick comment, I agree. I'm not"
  },
  {
    "startTime": "00:56:04",
    "text": "I it's why I've I first presented to IoT ops because obviously, the focus on the Internet of Things. And There isn't a specific extension to ACME, but It also seemed, Nope. You know, uh-uh a big, bit of hubris to say, Okay. Well, we're gonna, if if we do this over an IoT app, we're never gonna consult Acme work group on their own protocol, and security considerations that might be involved and so forth. So this was more intended to make sure that acme work group is aware of it, and then You know, if if, This is something that Acme workgroups wants to work on. Great. If not, you're aware of it and and and IoT ops. If if they as go to adopt it. Don't step on any toes here. And, obviously, all the security stuff, I I can't claim to be as an expert on any of this stuff. So I, I defer to to your wisdom. Okay, it's Andrew Frankly. Yeah, I would sell vaccines. Lead engineer on our, IoT efforts at my company. And followed what the dance working group did, and I suggest that, I don't even know if that group still around, but this is the type of problem. That they were trying to solve. And, pretty familiar with that work. Suggest you follow-up with Shuman Hope a 0 like I said, tremendous overlap with this work that's was done in that group. That's my comment. Alright. you. Thank"
  },
  {
    "startTime": "00:58:00",
    "text": "Yeah. Dave, Dave, aim. Waking Hi, Dave for Andrew's, thing to go away. Robin. Yes, I love this document because, coming from representing the building automation industry where stuff does not have DNS names, and we 1000 of devices that all need to be provisioned for certificates. So but they in here. So I'm reading. I'm watching this with fascination. But I'm curious about, What is the identity anymore? It's just an IP address. And it comes up in claims to be want a certificate. And you're with with Acme, The safety net is your certificate has a DNS in it, and it says, okay. I'm gonna resolve with public DNS system find you and you either put records in the DNS or the HTTP as, okay, you don't wanna do that. But I found your IP address. Publicly routed to you, And now there's a little magic cookie there. That's great. So I get the HTTP as a as a mechanism of authors a or a identification works because you've already found it with a DNS name. The key here is I'm just me.local I'm your security system dotlocal. And I asked for a certificate and I get it. What's what's What's the name? What how did the browser even find it? The first place, Did it probably use MDNS to find it how how is the browser even talking to this thing? That's the that's the question. If it doesn't have a DNS entry and nobody typed in something in the browser. How is the browser finding this thing and how is this thing identifying itself? And you said an important thing that I wanted to highlight there that maybe you just got glossed over is that somehow the local Acme has to tell the user hey, a second device is claiming to be my security system dotlocal."
  },
  {
    "startTime": "01:00:05",
    "text": "And that is the unworkable part or the very difficult part. I don't know how this thing running in your WiFi router is going to alert the user Somehow, and suspend issuing that second certificate who is now attempting to spoof what he saw for the first work. So, anyway, without DNS entries, really not sure how this all works. Yeah. So in the printer world, anyway, the the convention, we, have a a default host name that is a vendor prefix followed by the MAC address. And so Yeah. MD and S host name becomes like, HP, you know, you know, gobbledygook.local. And if you have a local domain name, then it's hpgobligookdot Local domain. And and so that that kind of gets auto assigned and And, obviously, you can go on the web interface and change that or go on the the control panel of of a lot of the printers and change it. But that's how you get that, unique quote, unquote, identifier. And and from there, you know, that's what it can go off and say, okay. So this is who I am, and this is this is I I want to get a certificate for me. And you know, obviously, with MDNS, there's all sorts of of stuff that happens in the background to to resolve conflicts and in the printing world, the reason we added the the the MAC address, by default, for the host name, at least, is that, we don't want those conflicts if at all possible. But the other part of it is that you know, when you're getting the the address of the ACME server via DHCP, you're actually getting an IP address not a host name, typically. And And it was, DNS SD,"
  },
  {
    "startTime": "01:02:01",
    "text": "You've got the DNS servers address And then you ask you know, for the service and that resolves to both the host name and the IP address of the Acme server. So from the standpoint of you know, is it actually the real ACME server on the network that part of it should be pretty Pretty solid because, if you can't trust The network infrastructure you know, the the the battle's already lost. Oh, that's that's not what's bothering me. At all. It's it's the the the name of the device and prevents another device from coming along and claiming the same name because there's no DNS to dispute with. There's no DNS to be the authority. It's the same MDNS problem you have They both claim to be the same name. They exposed a little HTTP server The Acme guy goes, yeah. There you are. You're at that address. Great. Here's the certificate. But there's no identity there. It's just I'm a self claimed So therefore, in the browser, how do I not have the user get tricked. The the user knows what he's typing when he's going to a web address. How does he even know which of these two things that claim to be Your important thing and they both have certificates. And their self assigned names. So I know how this works. And that you said I don't well, the ACME server will throw up its hands and and alert the user. There's conflict you you're right. That'll work, but I don't know how that will work. So, anyway Yeah. I I and I agree. not a there's not a protocol there, standard There's for audio notify Right. The the owner, the the manager of that the ACME server to say, hey. Yeah. You have something to look at. And I'm I'm also sensitive, you know, aside from the whole security thing, but you know, If you're an administrator, And, hey, we're deploying Yeah. 7 a1000"
  },
  {
    "startTime": "01:04:01",
    "text": "Internet of Things gadgets on on this corporate network do I really wanna go through a 1000 notifications? You know, it should be a way that Yeah. That that we can do better than simply Trust me. You know? So That's that's where, like, we on 1st youth use I get. It's the second guy that comes in and wants the same thing with nothing to verify which one is correct. Because with the with the DNS as the authority, it you know, you could set you could find, anyway, Absolutely up. Thank you. I'd, I'd, Sure. Thank you. Hey. Thank you again, it's a token. Just a quick comment on using option for discovery of the ACMA server. If I'm not wrong, some ipv6 only network do not use DHCP. So you may need to, yeah, handle it separately. Yeah. Well, I looked at doing a DHCP V Six option. There's also the DNS SD you know, we're you know, you have to have a DNS server that'll be able to serve up those those those records, but, you know, in the enterprise, you would have that. So at least, you know, that's why there's a backup for that. Thank you. I just wanted to add that David Benjamin has had a very good point in the text chat on the side, which is that It's not just a question of having HTTP clients update their trust store every time they change networks and discover that there's a new local CA,"
  },
  {
    "startTime": "01:06:01",
    "text": "issuing certificates for the dot local network, but they need to do things like treat all food.localdomainsasbeinga different origin for things like the same origin policy and how Right. Cookies and things like that are shared. And that that means that this whole, like, seamlessly swapping between different local networks and treating local names as though they are public names is significantly more complex than us, the web PKI portions of this and extends fully in to browser implementations and h and h TML and JavaScript standards work and stuff that is not only outside the scope of the ACME working group, but outside the scope of the IET Yeah. And that is terrifying to me. Yeah. Well, I and with one of my other hats on, I I I have also been over in man with, trying to to resolve the whole ipv6 link local addresses and and URLs and And I've been dealing with that for 20 plus years. So There's there's a lot of, origin issues to deal with, as soon as the browser gets involved. Maybe we could just flip to the next slide real quick because that it it actually has has some discussion of some of these same issues. Mike, I've locked the queue because, we're running out of time. So Okay. Yeah. Wanna propose the way forward. I wanna propose a way forward. Will you let me can I q jump to propose a way forward? Okay. Is, so I've mentioned in chat, Tiru Reddy is working on a very similar problem. He posted slides earlier week. Like, I think there is a real problem to be solved here. This probably isn't it, but, like,"
  },
  {
    "startTime": "01:08:01",
    "text": "Can we dispatch this somewhere or make him get him to work with Tiru or something? I suggested after the meeting, we talk, with, with our ADs and decide where this work should go. Yeah. I'd appreciate that. Is is this this is this is one of those things that doesn't exactly fit in any work group and And it's a problem that I've been dealing with personally with with printing for over 20 years. So No. It's I think it's high time to do something about it. Okay. Alright. This was this last slide. I think it's the last slide before the Yeah. It was just this notion of being comfortable with less than perfect security, and every time I I I talked with a security person that that cringe at this sort of notion, but, It's You know, what is What what level of security does does each kind of, connectivity provide. And And, You know, necessarily MDNS is less secure than a real DNS and and, And, you know, dotlocal is less secure than a a a regular domain name and so forth. So I don't know how to quantify this, but I just I I wanted to make sure that This this is front and center. It's it's I I know there's a lot of holes in this in this proposal. Okay. And since we're running out of time, thank you, Michael, and should take it, with VADs and, of course, to the lists. Okay."
  },
  {
    "startTime": "01:10:01",
    "text": "Well, thank you for your time. Okay. Which leaves us with, mic. And, nice and trust purple. Any of you know that I lost my laptop at the beginning of this week? So these slides are purple, means I wrote them before Saturday Alright. So this is a continuation of something that I've been presenting since 1 17. I'm gonna give a very quick background and then talk about the updates. Xyplus, So, basically in Prague, we were asked this was an interest only draft. We were asked to some of the vendors involved, and there was a couple roadblock issues that we were asked to formal design team and solve. So we've done that, and we've added a few more collaborators and authors And, yep, Good. Next. So we've now got 2 drafts. This out of this design team, we ended up taking one draft and making it 2 draft. And I'll give this is this is all I'll give by way of background here. I do in the back half of these slides have all the previous materials. If you wanna download the slides and refresh off on the full problem. They're in the back. So the very quick Tim, do you, Tom, when do you want a job? Okay. I'll let you stand up when that comes. Thing about Okay. I'm not there yet. Okay. So the the general background here is this is for issuing certs into big cloud environments, think big cloud hosting sort of virtualized environment where the infrastructure sits behind a load balancer that isn't owned by the domain owners. Like, I might own"
  },
  {
    "startTime": "01:12:01",
    "text": "mikesblog.com, and I might host that on some cloud service provider. And with the TLS termination, the person actually needs to own the TLS private he isn't me. It's the CDN or the cloud hosting provider. So it's trying to solve the problem of how do we get certs into that environment specifically CA's other than what's encrypt. CAs that require some account binding. Maybe there's, account, maybe there's verification that goes on external to the to that you can't do just in band over acne, some sort of third party human verification, maybe there's billing, and so I need to know who to which credit card to charge for the cert issuance. You know, whatever reason we need account binding for that issuance. And how do we link that all up without requiring UI changes for every cloud service provider in the world to pass through acme configuration. So the first draft is addressing the how does the acme client, the acme bot, know which acme server to reach out to, which acme server is preference of the domain owner. The second draft as we're working through this is we need we actually need a discovery mechanism in the other direction also. The CA is gonna need to know What are the acme public keys? Like, the acme client RSA keys, that belonged to say AWS if I see a request coming in subscribers, a domain, or you say, yes, I, I host my stuff on AWS. Please allow AWS a request or it's on my behalf. How do I know which actual public keys is AWS. And in particular, we don't wanna get those locks that it becomes impossible AWS to rotate them. So we need to add one level of interaction there to allow for rotation. Tim. Yes. So I was talking to Mike about the the other day. And I wanna think through it more about how the security is going to work. But the one thing that did occur to me that I just wanted to mention so that other people can think about it"
  },
  {
    "startTime": "01:14:01",
    "text": "is the fact that we're now looking up the Acme keys for the cloud provider, via a well known extension means that we do have a slightly larger attack service the surface for the BGP hijacking types, funny business that, people have been engaging at some point. So we'll have to think through the security implications of do we have do multi perspective when looking up cloud provider keys, or should there be I mean, potentially, since I think you told me that this is not the domain being validated, it's the cloud service providers, domain it could potentially be authenticated via for example, so we don't have to deal with all the sort of men in the middle silliness that people sometimes throwing there. Yeah. Another point in this design space is I mean, if if we're willing to entertain pair wise CA cloud hosting provider out of bandbusinessrelationships, then you could imagine it. It would have been, but then it's not doesn't start out of discovery. It's pulse it configuration. So we're we're trying to figure out a way to do this where we don't need to come tutorial explosion of every CA needs to talk to every cloud provider. Okay. I've do have a few slides here. Is there one more in queue? Aaron, I'm going to walk through the specific design problems that we've solved. Do you wanna jump now, or do you wanna go later? I'm happy to wait and do my quest at the end, maybe you will cover my question before the end. That is my hope. Okay. Next slide. K. So for this talk, I'm gonna define the words account. There are 2 types of accounts floating around, and I know that in me if the word account gets overloaded. So acme account, when I say Acme account, I mean, the account used by an me client represented by an asymmetric key pair. When I say CA account, I mean, an administrative organizational account in the This could be used for associating out of den out of band validation, billing, or other types of in"
  },
  {
    "startTime": "01:16:00",
    "text": "but is out of band with respect to the acne protocol. K. Next. So the first design point that we resolved in the design group is how do you handle multiple accounts the CA. So it could be the case that, for example, a large organization, that The TLS certs are issued by 1 group of IT admins, and the SMIME certs are are managed by a different set of admins, and so you want to need to designate which accounts, the the different certs are gonna come off of. So you may have multiple accounts associated with the same domain. Is all sort of ties into cert profiles, and there's been discussion of having acmeable to carry or profile mechanism. That could be in this context, it could be other context. It could be you want this needs to get charged to this credit card, not that credit card, and I don't know how with cert profiles. So we went a different direction here. RFC 8657 defines the account URI parameter for CN for the CAADNS record, Great. Let's use Done. So we added, like, 2 paragraphs that just say you can use the account URI put it in your DNS, and that will say when you're auto discovering me request they should go to. That ACME server, and they should use this account URI. It's not authentication. It's not authorization. It's just routing information. And k. Done. We also have some text there saying how this CA record interacts the priority CA record that we're introduce introducing. Okay. So this one's this one's pretty clean. Next. 2nd point is how do you authorize the client? This is This is the sort of tricky one. So here's the sort of picture that I've been running for a few actually owns the domain. Joe is gonna configure his DNS record to point at ca.cacorp.com. The ACME bot that's running inside the cloud service provider."
  },
  {
    "startTime": "01:18:04",
    "text": "Is gonna go query the DNS. It's gonna see that that's where supposed to go. It's gonna go make a request to CA Corp. We then need to say, dear, accounted men, Do you authorize this cert issuers? As the owner of the domain is, is this a legitimate or a fraudulent cert issuance? K. Next. So basically for DV certs, you don't really have a problem because for DV search to DNS01 or the HTTPS01 is already sufficient authentication and authorization of the clients. Specifically it's authorization of the client. But But For things beyond DV, you do need some other binding, stronger binding method. This is what the Acme external account binding, the EAB, is 4. But that's a That's a That's a API key. And if you have the ability to push the API all the way down to your cloud service APIs and that you've got explicit configuration you need an auto discovery mechanism. So we need a way to to to to do the authentication of the client without assuming that we have the ability to push plus configuration. Next, please. So the answer that we came up with is or a phrase, this is a bunch of discussions that we've had is can subscribers pre configure with the CA a set of Acme account public keys, that may initiate requests to this account. So content service providers must publish their Acme account keys. So you imagine AWS has a webpage. It says if you're gonna if you want to allow walk me out any auto discovery, here's the public keys that we're gonna use to do that. Rolling them over is different. So is rolling them over becomes difficult. So then we need the layer of in direction. So that's the 2nd draft that we spat out here, which is acme account key auto discovery or acme client auto discovery."
  },
  {
    "startTime": "01:20:04",
    "text": "The second question that we had a fair number of debates around was CAB forum compliance? Is is this actually BR compliant? Specifically the TLS server cert VR section 3 point 2.5. Got read many times in great detail. During this discussion. We think that this should be allowed. I think we'll have to go back to Cab forum and if this is explicitly In scope, it is something cloud form decides is is fine. Then then we might make a swipe BR tweak to make that clear. It all has to do with definition of who actually is the scriber in this case and who is the authorizer it's not totally clear from the way the VRs are worded that this who is the subscriber, who is the authorizer would work out the way we want in this case, but I think it's close enough to the intent that we should be able to get I should be able to get that squared up. Next. So, yeah, I'll I won't read all of this in detail, but the this is the 2nd draft. The new draft is the client discovery basically, it registers dot well known slash acme keys, which is a list of public keys, and that would be hosted at the cloud service provider's URL. So the subscriber would say I wanna authorize AWS to issue on my behalf, and you'd sort of put in the URL, and here's the URL where the where you can find their key so the CA can keep checking there. You know, if it gets it requested, and it can look up the URL, and it can pull the keys and say, yes, request came from 1 of the currently listed keys. This draft needs a needs some review. I think Tim is to come to the mic and say this is sort of new and experimental, and so we need to think about this a little more carefully. Next, please. So, yeah, just closing up here. So in Prague, the chair is asked to form a design team to solve any issues. We've done that."
  },
  {
    "startTime": "01:22:03",
    "text": "Resulted in realizing that we have 2 separate discovery problems here at the client auto discovering, which I can server the domain owner wants it to use via DNS. And the CA having an allow list of Acme account keys that are authorized the issue for this account. Yep. And that's our 2 drafts, and that's where this is sitting. So I have an adoption slide. Adoption. We obviously like both of these drafts adopted. We think the first one is actually really mature and can probably progress pretty quickly the second one probably needs a lot more thought and attention. Aaron? So my question was not fully answered, so I will jump in and ask it I'm confused as to the necessity slash motivation of the client key auto discovery specifically because In the current acne protocol, there is already a 1 to 1 binding between Acme account public keys and Acme account URLs. Right? One public key has 1 Acme account URI and the Acme protocol says you must reject any or RCA555 says you must reject the creation of a new account that claims to have the same public key as an already existing account. So we have a 1 to 1 binding there. And we already have a mechanism for publishing account URI, as you mentioned at the beginning, the CAA account URI method is a way to say, hey, here's the account URI. So why is there a discovery mechanism"
  },
  {
    "startTime": "01:24:01",
    "text": "for, these are the client keys that AWS might use when we could just say these are the ACME accounts that AWS might use and we don't need to do it over HTTP. It can all be in DNS and we don't need to Oh, yeah. And 8555 has a he rollover endpoint. So if AWS wants to change the public keys that correspond to their accounts, they can just use the key role over endpoint. So we don't need the, well known acne keys for rollover and rotation. So what what am I missing? Yeah. Maybe maybe maybe your point is that we're overloading account too many things of being the new DNS parameter. So the what if what if that Acme account has never interacted with that CA before? Then that Acme account doesn't exist yet. By definition. Right. So how do I authorize it to issue for me if, if it doesn't exist? Yet. How do you authorize a public key to issue for you if it hasn't been added to the well known acne keys list yet? Well, presumably it would be added to the well known keys AWS knows the keys of its own. Clients, but there's, like, 30 CAs out there that might not have reached out to each one of the Yet. You're proposing a situation in which the same acme accounts, key pair might be used at multiple CAS, which is understandable and makes sense is not my of how most clients work today, because they bind key pairs to CA's by"
  },
  {
    "startTime": "01:26:01",
    "text": "directory URL. They say, oh, here's the directory URL reaching out to what key pair do I have for that directory URL so they generate separate key pairs for every, Actney server they want to talk to. So may maybe we can't do client discovery in the nice abstract, way we want and this does need to go back to cloud service provider to see a configuration or established relationships. Alright. We're running out of minutes here. I wanna give the chairs back some time. So I I I I stand by my suggestion that I think the first one, the server discovery is fairly mature and ready for adoption second one probably needs more design team. So, Rich, yeah. Rick Saul. I think, The first one, you know, nice job. You said go fix these problems and you did. And I think it's an interesting Business issue that needs to business use case that should be resolved. You know, I could imagine, you know, lots of mid tier cloud providers who use Cpanel Right. Let the customer pick which CA they want because maybe they're deploying something that is integrated with our company. Course, or so on. So I think this is, an a problem worth solving, and I think you've got most of the tough questions answered. So, yeah, definitely be I mean, definitely be in favor of adoption. Someone anonymous said, hey. We kinda owe it to the commercial CAS after what we did it after we did to them. Not me. I see. The second one, you know, yeah, there's the problem if you take it back to the design committee is you won't get the detailed informed feedback from Folks like Aaron who were just here, so I'd actually kind of be in favor of that one also being adopted, recognizing that it's in more rough shape. But, yeah,"
  },
  {
    "startTime": "01:28:01",
    "text": "Yeah. I I guess the question, Rich, is is this a problem, is the second one representing a problem worth solving? The adding. Basically, in in one sense, it's just adding a layer of interactions so that Yeah. So that Right. You can roll those keys. CS problems ourselves. Yeah, I I don't know. But if it's a problem that needs to be solved, then I wouldn't I would not delay adopting this because I think you do need wider feedback you get for the working group But to answer your question, I not competent to answer. Okay. So message us in a way to already exist. Sorry. Yeah. Suggest for me to raise these Questions on the list and, you know, we can have an adoption call. The if there's enough people who think this is a problem worth solving and these are good starting points in with the query. Always change the text after adoption. We don't have to have a draft ready for publication, when we adopt it. I think that's fine. I mean, we, we can have an induction call before Vancouver. Okay. So, you had this, thank you, and then you gave me some, 15 other spare slides, Yeah. Which brings us to all of the business. Is there any other business? K? Yes. Oh, yes, we do. Really quick speaking on behalf of Amira Mitty, the wow. I've just blanked on the name of it. The DNS account"
  },
  {
    "startTime": "01:30:00",
    "text": "So one draft has had significant updates since the last IETF, Amir is unfortunately unable to present it today. But, The updates are significant. It has drastically changed and I ask that people go take a look at it because it's in a very different new and interesting state, and there's been some good discussion on the mailing list. K. Thank you. And anything else? Oh, In that case, then Thank you all for coming, and See you in Vancouver. Virtually or in real life. Thank you all. Hi. Yeah. And I have a lot of friends"
  }
]
