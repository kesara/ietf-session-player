[
  {
    "startTime": "00:00:52",
    "text": "hello tired man hey there we are here for the fun this is where the fun is i knew i could find it where you were obvious question is is it fun because suzanne's here was suzanne here because it's fun you know i i think that tends to heterodyne so i'll say both okay it's fun because you're here warren how's that i strongly doubt that yeah it's a stone soup thing but we're glad you are so we're glad it's a stone soup thing everybody brings the fun see what you started paul i but now i know better"
  },
  {
    "startTime": "00:02:01",
    "text": "as you know as you know i get my fun mostly from the bottom of a cup so chairs just as a note i'm not going to be able to take minutes during life yes we discussed that um right yep yep and and paul those slides that i a couple of slides i sort of summarize some stuff you can we can use those whenever you see fit sort of thing it was mostly to try to jog memory sort of thing okay well i'll go through mine and then we can switch to yours okay yeah that works because we just um wanted to put together the mailing list discussion around the uh the issues that are already in your slides so coordination is a wonderful thing cool team effort gang thank you thanks everybody and we still have people joining so we will what guys give it a couple more minutes a couple more minutes um because we don't want to this is the thing about having one short meeting is that we uh want to get down to business fairly quickly but we don't want people out yes and we're going to use that hedge doc thing that i know you despise paul hoffman um just for us to sort of keep track of stuff that's not mine yep all right the one minute warning so final check if everything works"
  },
  {
    "startTime": "00:04:04",
    "text": "do you hear me suzanne yep excellent so i know any of us can go through the chair slides but benno did you want to do that or i can do it i think tim [Music] was to kick off he prepared some slides also for the for the terminology so i think suzanne you should since you're running the slides you can do it and what we'll do with those of course i just delegated okay and the summarizing um as paul said after he talks we can throw those up okay that works benno you are sharing so okay thank you we start we start at 30. so we we still need one participant we have 30 and then somebody ducked out okay but we shall waste no more time on our internal procedures eagerness for all of us to uh do our part here yeah so welcome everyone everybody sees the slides well sharing um okay welcome for the dinosaur interim meeting we have an agenda so but first of course uh the chairs suzanne tim and myself warren as the responsible area director well thank you tim we have a twitter handle so everyone we can also put it on the mailing list but the the working group has an idea oh as has a twitter handle a twitter account itf underscore dash working group underscore dash dean's op we also well we already announced our meetings on the on the twitter"
  },
  {
    "startTime": "00:06:00",
    "text": "and we already have a number of followers so please spread the word the jabber room is open i think there's people already in uh well the minutes are taken uh using the the notes tool see here below the the link and the volunteer ordeal help chairs will work on the notes on the minutes here of course with all mitigs we assume that you are aware of the node well so that and of course also important the code of conduct respect each other and be constructive good this is our agenda for this evening sorry for my this evening for today um so the dns terminology uh we we discussed that already earlier and also on the mailing list i think we think it's a good shape we have to discuss a number of open issues so we reserve their 30 minutes with paul and the second draft on on the agenda is the delegation revalidation schumann paul viksey and punit is added as an editor to the document so thank you punit that's the agenda well of course are there any questions feedback additions did i miss something raise your hand otherwise we go to the first presenter paul hoffman yeah thank you um yeah paul uh i can what do you do you want to share yeah oh yeah do you want to share uh your slides your own or shall i share the slides on my desktop um i thought i was going to i have requested the ability to okay i don't oh yeah yeah yeah uh ground screen yeah sorry i was let's see"
  },
  {
    "startTime": "00:08:00",
    "text": "yeah you appear two times on my uh my desk and um the window that i want is um the window that i want is not being [Music] shown because why should it okay well here um yeah your deck is is pre-loaded if you want to yeah yeah i'll actually use the horrible thing called powerpoint which is what i use to do it and so i guess i enter full screen here and you know what i'm just going to do it this way you all are seeing these yes okay great excellent so um kazunori and i have been watching the mailing list there's um this is for [Music] rfc 8499 bis and at this point we believe there are only two topics that have been discussed on list four changes in the draft um the term in bailiwick and the term glue so what i'm going to do today is present on these two and then i'm going to stop presenting because in both cases um there is discussion on the mailing list there doesn't seem to be consensus i am a great believer that consensus is managed by the working group chairs not by document authors i have opinions i'm sure some of you have noticed that um but in fact what we really want is consensus on where to go so like i say i have a couple of slides on these two topics and then i'll hand it over to the chairs who you know have a better ability than i do on calling consensus in a fair fashion so let's do invalid work wic first um so the definitions that are in the"
  },
  {
    "startTime": "00:10:01",
    "text": "current draft were added in rsc 8499 that is remember 84.99 was was is the v2 of our terminology document um they were added after a bunch of discussion but they became controversial of course after 84.99 was published um tony finch started a thread i want to say a year ago but given covid who knows how time works but we restarted those uh last month in november um there is a link here for the summary of where it went um that was uh well i guess it wasn't november because that's actually october again cove it in time um so uh the basic problem we have for in bailiwick is that there are no definitions in the source rfcs we can't say here is how in baileywick was defined before so what we've done in rfc 8499 is we came up with some definitions and then we added sibling glue and we added a few things um but there is now a large disagreement about whether what we got whether it's better to say what we got or to leave it undefined um there is in my mind and again just my mind a weak consensus not a strong consensus to abandon any discussion because any discussion that gives definitions will be confusing um and not necessarily match what people are saying um i have a preference to try to define things that's why you know i started the original document and i believe that kazunori also since he has done a lot of refinement on some of my blathering um would also like things defined"
  },
  {
    "startTime": "00:12:01",
    "text": "but personally i don't want to define something that's just this seems okay for a few people so um as we'll as the chairs will have it um we might want to put something in for baileywick and in baileywick out of baileywick even if it is a non-definition even if it is something saying gosh we can't define it or the working group might come to consensus on a definition so do look at that archive although tim you said that you were going to be summarizing there but um it would be good um for us to deal with this because it is a term it is a term that people hear and um we should at least acknowledge that it's a term that people hear so going on a bit um let's deal with glue so here is the first part of the current text which quotes a little bit out of rfc 1034 um which talks about what happens if you don't have glue basically it's it sort of says what glue is but it doesn't actually say this is glue and then here's more of the text that's in the current um document in 84.99 and in in the draft which says okay well then with that but a later definition says this you know which is from rsc 2181 um and we also say although glue is sometimes used today with this wider definition the context surrounding the definition in 2181 suggests that it was intended only to apply to the use of glue within the document itself and not necessarily beyond um that confused a lot of people it's like well are we using those stuff from 2181 or not so i looked around at generally at how people talk about glue and we've"
  },
  {
    "startTime": "00:14:00",
    "text": "actually in the itf had a couple of discussions specifically related to glue in the last couple of years for things in the deprive working group that is if you want to have things attested to by a parent in a signed way and such that is not what they're normally attesting to what are they attesting to are they signing the glue and so people use the word glue a lot um and that's been coming up in other places so i have proposed this definition whereas where i'm ripping out some of this stuff and trying to give a succinct definition i think we can agree that not everyone will agree with this definition of glue because some people think glue is what they think glue is at the moment and we've certainly seen that in the discussions around deprived where some people will say glue is only addresses it's how you find the server and other people say no glue is about what we know about the server that is not signed by the authoritative so here's what i'm proposing that we quote from um 1034 that says data that sometimes i'm sorry data that allows access to name servers for sub zones is sometimes called glue data sometimes it's called whatever paul maca petrus felt in 30 years ago but sometimes it's called glue data so but 1034 also then says to fix this problem a zone contains glue rrs which are not part of the authoritative data and our address are ours for the server so that part i think everyone agrees that glue contains addresses these rr's are only necessary if the name server's name is below the cut and are only used as part of the referral response we might even cut out those"
  },
  {
    "startTime": "00:16:01",
    "text": "last two sentences from this definition of glue but it gives a little bit of context but i also think it's important to then quote the second part which says glue above includes any records in a zone file that is not properly part of that zone including name server records of delegated sub zones ns records address records that accompany those ns records um i like the fact that they have aaa quad a and etc trying to predict for ipv8 um and any other stray data that might appear so 2181 specifically talked about other stray data which is i guess the stuff we're talking about in dprive certainly could be called stray data because it's it's signatures and certificates and such like that um so this is my proposal for a succinct definition of glue that i think um will probably piss some people off because of the second part um but if we didn't include the second part that would piss some people off because they're thinking of glue that way um so then this is where i hand it off to the chairs what do we want to do about in bailiwick and the current section and um is this simplification of glue sort of what we want and i think with that i will thanks paul yep yep and then we'll throw up the slides um [Music] benno if you want to throw that first first one up um mostly what i we tried to do is sort of summarize some of the mailing list discussion um so we had it best in our head right um as well and paul waters did a good job sort of writing a bunch of this up and then he had a comment about sibling zones and sibling glue which seemed to get some like agreement like this seem to make"
  },
  {
    "startTime": "00:18:00",
    "text": "sense um sibling zones being two zones whose delegations are in the same parent zone and then sibling glue the addresses of name servers that are in a sibling zone um those seem to get some you know like oh people seem to be okay with that on the mailing list um a side note i um was looking at the glue is on optional draft and they use instead of baileywick they use in-domain glue which i i think you know is a reasonable you know it's like okay that sort of you know is a useful sort of data point um i know tony was saying that in baileywick he feels is sort of overused um one thing that we thought is um is keeping separate the glue definitions for the dns protocol like what does dns need for glue versus what like a registry requirement would need um and i do think we should they we should definitely keep those separate and define those and maybe they're not both called glue maybe they're called something different um i don't you know i don't know but i don't like to get them i think when we mix them up it gets things all sideways um and then on the next page with something from tony's one of tony's emails um [Music] he's i know i asked him about coming but he's switching jobs and he's sort of tied up so he apologized and ben i think on the next page tony had made a comment um in bellywick he called the property of a name server which did not seem completely accurate um and and or is it the property of the nsa records of the q name right um so that was a something that sort of popped up in that you know and then he said well we can't use in belly work anymore so we've got to just sort of you know move on to something else um so that was where i sort of saw that sort of that mail thread so i'd love to hear some comments on folks let's go back and"
  },
  {
    "startTime": "00:20:00",
    "text": "talk about this where do people think we're gonna go with this i don't want to get rid of in bellywick or i don't want to get rid of that definition the name is probably it will change but what we do with it i think does need to be better you know better to find paul please go you raise your hands paul yeah mr vixx i'll be paul hoffman not paul dixie okay um i think both of us appreciate that um so going back one slide i think we have an issue here where we are now mixing up baileywick and glue um and i would like to discuss them separately i absolutely agree with you tim or with chairs assuming that you all discuss this that we should keep separate any definitions from the dns protocol versus registry requirements registry requirements came well after 1034 1035 or even 21.81 registries have different requirements um for the definition of bailiwick i would absolutely not want to have any anything about registries there that is um a registry is a zone holder and they should do exactly everything that is needed to hold his own i also don't think we should be talking about that i'm skipping ahead now but i also don't think we should be talking about registry requirements for glue that is even if registries have contracts with say a certain organization about how they handle glue if we haven't defined glue well that's our fault"
  },
  {
    "startTime": "00:22:00",
    "text": "we should not be taking somebody else's interpretation of how we defined it badly or didn't define it and then say oh well since they think we defined it this way we should follow along i think that that's actually really a bad idea given that we you know both 1034 and 2181 had a picture of what they meant with glue but let's note that they didn't talk about bailiwick and so i think it's okay to say people started using this term you know what we probably shouldn't have to me that's an okay outcome i think we should acknowledge that the term was being used and i'm not in favor of saying some people think x and some people think y because there's absolutely going to be people who think z and a fair number of people who will think x you know today and why tomorrow but i think it would be good for us to acknowledge it yes absolutely i think we're in violent agreement on some of that so um and yes we don't want to actually touch the registry stuff i think staying away from that is the right way to go mr vixie i i think your hand is up or no oh sorry maybe it's just the way it's showing up on my queue i apologize oh please but thanks uh please go ahead yeah listening to the discussion on glue i'm wondering if uh we need a separate word for the later definition of glue are we here to invent terminology"
  },
  {
    "startTime": "00:24:06",
    "text": "yes we are that is we actually defined a bunch of new terms in the documents was that a good idea most of the time yes can you say the later definition do you mean the part from 2181 that you said and other things yes so to me it sounds like we have uh now two definitions which is referred to by glue and hearing the discussion it sounds like it's confusing so that's why i'm wondering if we need a new terminology or are we going to say both things are going to be referred to as glue then people will keep using the word glue and i think we will live on with the confusion if that makes sense i thought we were talking about bailiwick not glue no my my point was specifically about the glue sorry if i jumped subjects thank you mates now so there's definitely an opportunity to update definitions or to introduce or more specific definitions if there's confusion and there's also a remark by fujiwara-san and schumann about the other draft the new glue is not optional that should the definition should be in sync should be"
  },
  {
    "startTime": "00:26:01",
    "text": "consistent so waiting for or indeed we don't necessarily have to wait for the draft to be finished the glue is not is not optional uh but work towards an same definition between the authors and the working group of course so back to paul hoffman speaking out for for consensus today it is uh uh well that's not what we can achieve today um one thing that it's useful to point out is that previously there have been multiple cases in the terminology documents where what we ended up documenting was that a particular term was ambiguous and we can even we could either discuss you know how different different operators different participants in the system are using the same term and document that it is ambiguous and it is context dependent or even say we don't think there are consistent definitions here and suggest not using the term at all so we we have a few degrees of freedom here but because we're talking about a definition document we do have to be pretty careful um not to attribute clarity to a definition that doesn't really exist i like warren's comment in the chat but um i i over the years i have"
  },
  {
    "startTime": "00:28:00",
    "text": "increasingly come to hate the term beliwick so that's a personal opinion and probably varies widely and will be good to hear from folks about which of these terms you think is clear enough and useful enough that we can define it reasonably precisely yeah i think that's important indeed is it useful to have the difference yeah yeah yeah the important thing is which which of these terms is useful and and how to define them in the most useful way yeah paul hoffman thank you suzanne i think that that's good i'm a little i'm still a little bit um graffable because we're talking baileywick and glue at the same time here given what you just said i think a reasonable way forward is for us to have a entry for baileywick that says basically what a few people on the list have said which is this is not a useful term like like you know it the the differences and definitions are are fairly huge and therefore it's not a useful term glue i think that everyone agrees is a useful term and we might have to um and and i sort of tried to in the um in in my proposal show the two different ways that it's used i don't think that there are more than those two different ways um and i'm sensitive to what mattias suggested about maybe having a different term for the 2181 definition which is addresses plus croft um but i would certainly want to see a discussion on the mailing list about that but i i think you're right suzanne that we can say this term is not a useful term because it it has you know so many definitions and i would i would lay that for baileywick"
  },
  {
    "startTime": "00:30:04",
    "text": "headward yeah um i mean obviously no hats i agree it's useful to say things like this term is not a useful term and people shouldn't use it but if possible i think it might also be nice to have some sort of some people the re the reason it's not a useful term is some people use it to mean sort of this and some people use it to mean sort of that and some people use it to mean something completely different and my thought for that is i think a lot of non-dns people are also going to look at this document and when their random dns expert tells them the reason your domain doesn't work is because the non-bailiwick in dns sorry and glue is not actually working they would like to have some way of knowing that a the person's making up random bits and b sort of what they might have been trying to say um i don't know if we could actually word that in a more useful manner but some sort of like this term should be deprecated if you come across it in legacy use it might sort of mean this but it's also very vague so that's just sort of a rough pointer yep no absolutely worn and and i think we do need to define it because i i know i point people non-dinas people to this document to read about stuff like glue and things of that nature right and and as paul mentioned there is this issue coming up in deprived about what people think about is glue non-dna as people trying to do stuff um and i don't fault them it's just that we're not defining it in in a clearer way is okay paul does that give you um directions and we'll i'll we'll talk with paul and at least yes i think we can sort of figure out start"
  },
  {
    "startTime": "00:32:00",
    "text": "beating the path forward no to suzanne and i look forward to tim okay it does feel like we've made some progress here if only by saying what we're not trying to do but yeah let's let's um certainly folks are welcome to have additional commentary on the mailing list about how these terms should be defined and we will attempt to get some new text yeah after some further discussion with paul just about what that that should look like well i think it's useful to have a summary of this discussion on the mailing list so people have contacts whose action holder is action okay and moving on to schumann i guess is presenting yes yeah schumann um i think you're the yeah you're the presenter you want to share the slides i will stop sharing this can you hear me okay uh yeah so now i think if you drive the slides for me that would be a bit better because the last time yeah yeah i wasted everyone's time for five minutes okay all right so yep okay so uh we're trying to wrap up work on the delegation revalidation draft that's been lingering for a while in the working group so i think the bulk of the draft is largely done we just have a few uh remaining issues and a bunch of us finally found the time to get together to identify those issues as you might have heard paul suddenly has a lot of free time on his hands now so that's very good and we also recruited punit to help us"
  },
  {
    "startTime": "00:34:00",
    "text": "out who was already involved in early discussions of the draft anyway so next slide please all right so i'd like to reorder the discussion a bit and move this item uh to the end so that we can get through some of the quicker items first but essentially we described in the draft a simple and a more detailed revalidation algorithm and uh there was a bit of put push back against the complex one so this simple approach came from a suggestion from ralph delmons and ml labs and the more complex one is the original one from paul's resin proof wrap but um so the three of us talking paul now has some new clarifying and motivating text for the latter and we'd like him to discuss and walk through that in some detail so we'll leave that to the end and let's move on to the next slide okay so the next issue is the dsttl and how if any uh in any way it should be used as part of revalidation so interestingly the dns protocol specs today say that the ds and the delegating nsttl should match but in practice that's not really true for a variety of reasons so the latest text says that resolvers may use the dsttl in preference to the delegating ns to compute the revalidation interval and we didn't really have a good sense for whether there was consensus for that text all i recall is that no one objected to it but we now have a slightly different proposal and that is to use the lower of the dns and sttl so we'd like to see what folks think about that um so let's see i don't know if we're going to take comments now maybe we'll do it at the end so let's go to the next slide"
  },
  {
    "startTime": "00:36:00",
    "text": "all right so there's a section on delegation changes in the dash 01 of the draft again there were no objections that we heard around this but we wanted to explicitly understand if there is consensus for this text so this is by the way a pretty important aspect of the original res improved drafts motivation namely to try to clear stale data from the cache under the zone cut whose parameters may have changed because of say complete removal of the delegation or redelegation of the zone to completely new servers as that stale data may be unsafe to use so think of situations like domain takedowns for malware or hosting of other pernicious content we do want to avoid unnecessary churn though so we explicitly carve out an exception for situations in which only a subset of the name servers have changed in that case no cash cleanup is necessary or even desired uh next slide please there was a suggestion made to include a treatment in the draft of what resolvers should do if the entire ns set is assessed to be lame that is if we can't reach any of the name service for the child zone and the proposal was to say that resolvers should go back and try to continue to perform revalidation but with some sort of hold down timer so that they aren't constantly spinning in a loop trying to do this and effectively causing a denial of service attack so our current thinking is that we don't really need to discuss this resolvers already have to deal with this situation whether they implement this draft or not and presumably they already have a sensible way to deal this so in the interests of keeping the draft simple and focus on its main goal our suggestion is that we don't say"
  },
  {
    "startTime": "00:38:01",
    "text": "anything about this but you know we're open to alternative thoughts on on that topic let's move on to the next slide there were a couple of optimization suggestions that have been made uh these ones i think mainly came from uh olafur and friends at cloudflare so the first one is that resolvers could cache whether or not an authority server is doing minimal responses or full responses with the nsa populated in the authority section of the responses and if they were doing the latter then we could forego explicit child ns said fetches for uh subsequent interactions with those authority servers so on the face of it this sounds you know reasonable it might save the resolver some work but we have a few concerns uh it does involve additional complexity storing additional state on the resolver for a currently unknown gain right i think you'd have to do a kind of a measurement study to figure out whether or not it's worth doing or not and also the other issue is how to quickly and correctly detect estate changes on the authoritative server if they change from you know minimal to non-minimal etc etc so our current suggestion after uh voicing those concerns is maybe we'll just leave this topic out of the draft next slide uh another optimization that was suggested was for the authoritative servers so if they are employing minimal responses what they could do is proactively populate the ns set in the authority or authority section only of responses to the dns key queries so the idea is this could obviate the need for resolvers doing explicit child and a set fetches for sign zones however again the question here is"
  },
  {
    "startTime": "00:40:01",
    "text": "this is additional complexity for unknown gain or at least as of yet unquantified gain and also this kind of moves the draft into discussion of authoritative server behavior which it wasn't doing before it was focused uh only on resolver behavior so this kind of expands the scope of the document beyond its original intentions and you know maybe we should have some concerns about doing that so again our suggestion is a reasonable idea to consider and think through but let's uh let's not discuss this in the draft for now and let's move on to the next slide which is abuse prevention so i i have brought up this issue in the past of how resolvers can protect themselves against abusive configurations deployed by others that may make them you know do too much work but we haven't said anything about this in the draft yet but once we recruited putin into this effort he raised it again so resolvers clearly should should bound the amount of work they're willing to do right that's as a general principle not specifically having to do with this draft alone the way that thing could uh surface in this draft is if authoritative servers are deploying extremely low ttls and causing resolvers to perform very very frequent revalidations and the obvious suggestion here to mitigate that is that resolvers should place some kind of lower bound on how frequently they are willing to revalidate and uh so you know we should state something about that in the draft along with possibly recommending a default value for that lower bound but we're open to suggestions and discussions on that point and next slide please okay all right so before we go to the q"
  },
  {
    "startTime": "00:42:01",
    "text": "a um as i mentioned let's come back to discussion of the detailed revalidation algorithm and paul you want to take it from here i would thank you um may i have permission to uh broadcast definitely yes you want to share a screen i do yeah uh you can oh there you are yep granted oh all the slots for the requested media are already taken i will stop sharing that might be one of the that was the yeah the culprit yeah okay it's asking me what i want to share that's very cool i normally expect explosive decompression under these conditions but okay windows rides again by the way i was not the first person in this meeting to use powerpoint um so um this is about uh the complicated part which was section four of that draft and um uh to remind everyone this came from an expired draft from 2010 um and so the text that was in there uh was a little bit naive as such things turned out to be in hindsight in particular it allowed the ttl within a resource record set to vary and that is in fact not allowed anymore and is treated as a format error by some pretty popular resolvers so that that part is gone and the the draft is better for it now a simpler approach was proposed for this draft um and that won't work and i'll explain why and then i'll tell you the clearer"
  },
  {
    "startTime": "00:44:00",
    "text": "approach uh which has not been seen by the mailing list partly because it was done at about midnight and partly because it uh it uses the term in bailiwick which i now understand we can't use so i've got some some rework to do and i'm hoping to get some input from this interim meeting on on those topics so that i can then post this text to the mailing list this text by the way is not in the current draft but it is inclusive of everything else that is in the current draft it does not mention the prevention of abuse because that was left as an unknown but the other changes which um schumann has as enumerated here are are coherent with this or this is coherent with them as you prefer i do want to say that the res improve keyword has taken off i'm happy to have inspired this residential improvement uh e-commerce site um i i'm not affiliated here is the simple mechanism um and it won't work um partly because there isn't a normal iterative algorithm that would cause delegation revalidation in other words it is perfectly valid behavior to let and the ns set expire and it doesn't matter whether your parent first or child first you can let that expire if you are using what's called minimal responses and because in that case you're not going to be including the ns set even in negative uh answers as described in 20 2308 as a negative proof um and so it's perfectly valid to continue"
  },
  {
    "startTime": "00:46:00",
    "text": "using cached information even if there are potentially no ns records above it in your cache um and also if we wanted to take this approach we'd have two other problems one is that the revalidation process still has to be described and the other problem is more than one delegating ns set can be stale in this way and you don't you can't just go to the closest encloser because that may be inside of let's say a data attacker's delegation hierarchy and they may put a longer ttl on that just to frustrate naive revalidation you really have to be able to look at the entire upward chain to make sure that the entire upward chain is still valid in in the sense of ttl coverage so that uh it kind of holds up if you will it becomes the the foundation the virtual foundation under the answer record that you wish to use in a response so i was inspired by this because not because it was correct but because it was clear and so i tried to be clearer i've rewritten section 4. i'm not going to go through every point in detail because again i have to clean up this language remove the invalid references and so on but i do want to walk through it briefly just so that the approach that is taken can at least be reviewed here even if the the total detail is not um so first this is the essence of the whole thing you have to describe what revalidation means you can't refer to it as something that should be done you have to describe what it means to do it"
  },
  {
    "startTime": "00:48:02",
    "text": "um and this is expected to be done sort of starting from the owner name of the answer record set and then working your way upward first to the closest and closer then to the delegation that leads to that and so forth back to the root um in a non-hierarchical cache implementation you don't have a sort of a tree of of name nodes that you can walk in that way and so in that approach you know in that sort of architecture it would be necessary to tag each delegation with the one it came from so that you can walk through them up toward the root um so that is a a point which was not raised in the 20 2010 text uh but which will be covered here um so uh we're talking about the uh delegating or ancestral nsr set um and you know you could say the parent zone and perhaps that is a change i will bank after hearing the previous part of this working group meeting but the idea is um for a delegation you have to know where it came from and you have to know what it said at least you have to remember what the ns record set was above the the cut and what the ttl of that was and you also have to remember the ds ttl you don't have to remember the ds record set that could be allowed to expire if you're not a validator you probably don't care but you have to remember what the ttl of that was because you need to minimize against those in other words the shorter of the ttl for the ns record set and uh and ds record set is what you actually use for revalidation so what it means to revalidate is to"
  },
  {
    "startTime": "00:50:00",
    "text": "just determine whether the delegating ns record set has been remembered for too long if it if you had it in cash longer than the lower of the two ttls then you it's kind of out of time i don't want to use the term expired here because expired would mean you know it's it's bad and it must be refetched uh what you're doing is you're saying uh is is it still valid and um if it is then you're not going to change anything uh in in some cases so um the in the language of the following paragraphs the point at which a delegation to a delegation or actually any delegation point has been discovered to be out of time that delegation is referred to in the following text as a revalidation point um this is the hard part this is this is the part that is still complicated in the style of tooth 2010 and it uses in bailiwick um and by the way the the logic from 2010 was written up after it had been implemented in a name server which was not open source and so never saw the light of day um and while rewriting this text i found a bug in the mechanism which in fact was present in the code so this has been useful although that code base is dead so what you're what you have to do is uh sort of walk upward toward the root and um find a delegation somewhere and what it pointed to where both of them are above the name add or above the or the bottom one is at or above the name you want to use and the um uh the top one is you know the one you're you're considering"
  },
  {
    "startTime": "00:52:00",
    "text": "um and then and so i'm referring to that as the second closest uh valid validation point um and that's that's tricky uh but the ultimate mechanism of revalidation is to send a query for some and i apologize mr hoffman in baileywick name uh for the second closest cash delegation point because what you're hoping to uh to expose here is a response from the delegator that tells you whether the delegation that you want to use is still valid and that one might also be expired but you still have to see if the revalidation point uh says the the servers at the revalidation point say that the delegation you want to use still exists because if it doesn't you've got a lot of pruning to do and and so there's again this this part is a little bit crazy it's midnight talk midnight speak and uh i'll improve this before it hits the mailing list but this is where the bug was um so if the response and this by the way is as i said earlier inclusive of schumann's earlier points if the response is that the name you want doesn't exist anymore yet then you've got uh you got to do some pruning if the referral is to a different name in other words the hierarchy has changed to shape com used to delegate to example.com but now somehow com delegates to foobar.example that that's allowed you can have an in bailiwick uh empty non-terminal uh in or an end zone empty non-terminal in the parent and so it won't always be semantically the parent zone it is the ancestor but if the ancestor is uh is telling you that the shape of the"
  },
  {
    "startTime": "00:54:00",
    "text": "hierarchy has changed um then you got some pruning to do or if it still the same name but it points at a set of name servers that have nothing in common with the one you had cached that would be another case where you've got some pruning to do now again we're using the term in bailiwick i'll fix that um and so you are in this case gonna have to go purge some stuff out of the cache and in a non-hierarchical cache uh you probably can't do that in the style of the unix file system with rm-r um because you don't have a hierarchy and so you'd have to do something else and you know you can approximate this in a lot of ways lazy generational pruning would be one example um and i i if there are any call for it we can we can put that in the appendix and say this is what lazy generational pruning means uh but if you don't care because you have your own idea then there's no requirement to do it in that way what you have to do is um uh behave as though the data at or below the re revalidation point uh doesn't exist anymore somebody asked for it that might be the the point where you lazily remove it from cache but either way you can't use it um last slide i promise uh so that new referral is valid data you got it from an authority and it should be placed in cash uh and if there's something else in cash that is different from that then you're going to be replacing that with this at the atomic granularity of the resource record set um and then finally you got to repeat this uh so you just go check again to see if everything is still in time and if you find one that isn't then according to the traversal logic which was described earlier"
  },
  {
    "startTime": "00:56:01",
    "text": "the next one you find is going to be above the one you were just revalidating and you're going to repeat this either until you reach a work limit you don't want to spin you know cpu loop flooding the network with queries so there always has to be some kind of loop detection but uh you're going to repeat this potentially revalidating your way all the way up to the root because what you're looking for is a virtual foundation which will underlie the data you wish to use and that's my show i'll stop sharing and turn it back over to schumann yeah so paul you're going to send out your uh once you've finished up the text to the mailing list right because i think we'll need to get people to read uh in detail the text i think yes absolutely yeah go ahead i think in fairness i'll fix this up as best as i can and send it to you and punit first and we will send it to the mailing list after the authors or at least all kind of say yeah i know what that means it's coherent even if we don't all agree all right yeah sounds good yeah so the one confusion i had was why the if if the simple algorithm is applied uh iteratively to all uh ancestor delegations why it doesn't achieve approximately the same effect as your complex algorithm but i you know i'll wait until i read your full text to to to try and try and figure that out yeah we've only got a few minutes and uh paul and schumann have said that there will be a new version of the draft um so if folks have comments that will help them make sure that the next draft answers the big questions addresses the"
  },
  {
    "startTime": "00:58:00",
    "text": "at least the first set of concerns that people have um queue is open i think warren is cute thank you so yeah a quick question for paul vixie um apologies but i don't remember how much of the original resin proof document is not in this document i think there were a bunch of other useful things and maybe once this document's done we can discuss actually doing the rest of the resin proof dock because i think some really good stuff well thank you for that there were three points one has already been covered in the rfc uh titled nx domain means nx domain uh so that's in uh then there's this and then there was one other which is somewhat obscure but i would be happy to take it up again again i am unemployed and able to engage thank you any other questions feedback from the working group so i think i'll just relay that put it was trying to speak but his audio is not working okay same with schumann i will review the proposed text before it is posted to the list thank you yeah i think we're all looking forward to the new text and i think also we should ask the the resolver implementers to look have a careful look at the text if it's that i think that's good for for review as paul said it's uh it's not it's not the sim well as paul said also and uh it's good for uh for have a review have a reference implementation etc etc so i think it's"
  },
  {
    "startTime": "01:00:00",
    "text": "good to ask the software developers to have a look at it and either make a proof of concept implementation or work forward are there any other questions feedback wrap up okay suzanne you have some final words i will put it on my my my camera so i'm now worried i guess i should should also yeah um yeah the the we we talked about some really complex issues today we you know kind of dove into some stuff that requires a lot of careful thought um and that's kind of what why we started doing the interims is so that we could focus on one topic or two topics for you know a more significant amount of time um but that's still but people still need to go ahead and send texts and review the written document as it evolves so thanks everybody for your time today and we're looking forward to further discussion on these issues um on the mailing list definitely chairs a chair's action item to work with paul hoffman on straightening out which terms we're defining and which terms we're pointing out but we do need to go ahead and review carefully send text and so we are looking forward to that on the mailing list also that concludes our intro meeting thank you looking back at our this is a third interim meeting this year and again well suzanne already put it it was i think it's very useful"
  },
  {
    "startTime": "01:02:01",
    "text": "that the chairs are very happy happy with it we make good progress and we'll certainly plan more of these interim meetings did we already well most likely another one before the itf in march the dates etc will be well we will send polls a doodle to the mailing list to select a date and of course if there are authors so we can of course approach authors of document editors we think are ready for uh well either a 30-minute plus discussion or if authors would like to have more exposure please reach out to us send us an email and we can discuss plans for interim yeah that's that means that this is the last one this year so um thanks everybody for showing up participating contributing in 2021 happy new year and here's to a 2022 when we might actually get to see each other but we'll continue the good work thanks thanks bye thank you all you"
  }
]
