[
  {
    "startTime": "00:00:46",
    "text": "hi folks i suggest we wait another five minutes maybe as i think there's gonna be more people joining but welcome to the taps interim 2022"
  },
  {
    "startTime": "00:03:20",
    "text": "hey folks welcome uh i think we should maybe wait until five past the hour until we get started to give folks more couple more minutes to join but feel free to switch on your video audio as you know we're not as formal in our interim meetings hi okay and i think they actually uh changed speed so we now get a great view of more than nine people i think that was an issue in a previous interim"
  },
  {
    "startTime": "00:04:55",
    "text": "is planning to go to vienna if it's possible yeah planning yeah i think if uh caps is having a meeting i would like to try to be there in person oh did we get a q oh i think so i'm trying but i'm not sure whether i will make it due to corporate travel policies okay folks it's five past the hour uh"
  },
  {
    "startTime": "00:06:00",
    "text": "welcome to our first steps interim of 2022 today aaron couldn't make it unfortunately because he had a conflicting meeting but yeah welcome as you may have seen on the agenda today we have we were planning to discuss more issues and prs as usual and then also talk about uh an agenda for a potential tab session at iatf one one three we're gonna have to decide whether to have such a session today uh or by the end of this week so yeah please keep that in mind but um why not get started with the issues npr's first if that's okay with folks would anybody uh be willing to drive our slides uh what's nice uh github please i can try to do that thank you tommy um i think in in meat echoes of sharing the entire screen that we get to do uh yeah i think i think there is the usual window versus screen yeah i i don't i don't see window i just see screen so you can see my screen yes so we can see your i can see your screen at least okay i'll just not switch to any other tabs all right um so we have eight open prs oh and unfortunately they don't have tags for api versus implementation etc um"
  },
  {
    "startTime": "00:08:00",
    "text": "should we just go oldest to newest yeah let's try to do that i feel like this one is still do not merge yet we're gonna wait for kyle on that um there's one i had opened brian approved and michael you had a comment shall we discuss this one um essentially this was i believe what we had agreed at a previous meeting to say you know we're not going to mention framers before we've even defined them as part of message context in this vague scope thing instead we're just going to essentially have that be in a lighted parameter that there's a variant later that can take a framer um michael do you want to comment uh yeah my comment is that i should have read this pr my comment again to remind myself of what the issue was um okay so i thought it's inconsistent the way we have it what i'm pretty sure of from my memory is that i didn't have a very strong opinion about it so uh i'm probably okay with taking it as it is yeah um i think part of the this is where it gets into the weirdness of our pseudo programming language here um you know some languages do allow essentially saying that if you have a different number of parameters it is a different function"
  },
  {
    "startTime": "00:10:00",
    "text": "and that they can both be called add and both be called get even if they take different numbers of things and some don't allow that yeah so i i don't know what's the rule for our made-up example language here i guess we said it has optional parameters for this question and therefore we should somehow allow it and i'll leave it language implemented how to cope with that so either make two variants of the function or yeah we would give it another argument i think this is up to the implementer so are you arguing for having the original one have an optional parameter in it i think for this one we really have to make our mind about what's better for that either have so we have a scope for param um for the whole pokey system already and we have defined this scope to be able to accommodate protocol specific properties and implementation specific properties and now uh for the framer it's the question whether we we really add the scope parameter here or we say oh yes it's a special case of of the scope we already have up and up in the definition of properties and and it's it's an implementation specific properties that's just prefixed with the name of the framer so you you could uh take it that way or you could um could take it the original way with the scope parameter here and explicitly name the framers so i have no i guess what's better but what's more consistent as far as i can see this was the only place in the document where we had anything called scope that was a parameter so i'm"
  },
  {
    "startTime": "00:12:00",
    "text": "i don't know probably very much anyway no if if you go to the um to the definition of the properties we had uh something like a scope uh ah like but but it wasn't something that we actually put it was on part of the api specifically it was part of the ap api and it was explicitly part of the api to make sure that we could accommodate uh protocol specific properties something in how to name properties relatively at the beginning here now even even further specifying properties transport property property names this transport properties yes and there we have no no we called it namespace here sorry yeah yeah and so i i right that that makes sense to me essentially name spacing the names of properties but this it just this scope felt i think when we looked at it last time it felt too broad especially when it really just meant uh if you have a frame where you can say it's a property for your framer yeah um yeah okay and then using the namespace mechanism to identify the framer would perfectly solve the problem and make it less look less awkward um right the other option and we mentioned that in the pr that yeah the other option would be to do that i think the weird the weird thing there is that a framer doesn't um if it's not part of the tap's implementation itself and something that"
  },
  {
    "startTime": "00:14:00",
    "text": "is being provided by the application what is its name and how do you make sure that the namespace doesn't conflict with other framers that are being used that's why it seemed clear just to say it's almost like we just want like the property that we pass here to just like somehow also include the framework so the question is do you really have to uh to solve the name clash problem here so if you give give your so first it could be that your implement so let's assume you have a framer that implements a protocol and more or less ex exposes a protocol specific property that way so you implement a framer um yeah we had that um we had to start here example earlier and i know it's not a good example but for this case uh exposing parts of this tls stuff with the um as a protocol specific property from the framer looks looks the right right for me the questions were whether you have multiple stack protocols um and implement the framers with that just just exposing the names from the framework the protocol name seems somehow feels somehow right for me yeah i would agree with that and also i i'm thinking of martin sort of flexible protocol implementations kind of thing we might have multiple implementations for one protocol and then we would run into namespace issues"
  },
  {
    "startTime": "00:16:01",
    "text": "too right yes i'm not sure we have to solve that namespace collision question in our api document so concretely what what are you suggesting is like that in the framework text we talk about how you can come up with a property name by appending the name of the framer basically making the framework part of the namespace like we already have it in transfer property names 4.1 would be the suggestion the name of the framer and not append yeah so i'm going to just tag you here to say can you propose text for how we can prepend the name of the framer as a namespace for the properties we had yet and i think this upper part could actually remain the same and it's really just in the framework part we say hey there's a way to name space properties for framers yes definitely okay yeah yeah then it looks like that inconsistency of having an extra parameter great great assuming it gives you a different function when you give one you have one yeah all right um and i will also add as a co-assignee here fantastic all right we have a way forward there we don't have text yet but we will move okay um we had this pr from sean and i i've merged a bunch of sean's pr's which is great um this one i was not as sure on"
  },
  {
    "startTime": "00:18:01",
    "text": "um this is just a typo but let's let's take a look at the change here so it used to say at least one local endpoint must be specified for listen now it says should and at least one remote must be specified for initiated outbound connections and now says should i think i just disagree with that um joan do you want to help us discuss maybe i did um i will completely defer to your knowledge here when i read this um i was just trying to think which way it went if you read this again and you're like nope you're wrong don't accept the change then okay do other people agree that we do indeed need a local endpoint for listening and a remote endpoint for initiating connections i mean i could see a default local endpoint for listening being configured somehow i cannot see uh missing a remote endpoint and i mean you gotta connect somewhere right right okay so i i guess right i could also see i mean for listening yeah because you could say i don't care about my address i don't care about my port and just assign one to me so i think you could that could become a should but i think we definitely need us we still need to keep a must for remote like you need to say what you're talking to some actually would people be okay with just keeping i was stressed here i was so for the first one i definitely should for the second one um if you have something strange unlike"
  },
  {
    "startTime": "00:20:01",
    "text": "ospf where you know you can only talk to a specific multicast address you might be able to skip that and just derive this from from the other um parameters on the local endpoint but that that sounds very that sounds like like a corner case of a corner case let's not go left yeah yeah maybe if we change to should we should also explain the situation where it's not needed on the listener side oh actually but it says the list of local implements um i i just looked at the issue again and i think um it's pretty clear that sean just had an issue with the wording that basically the sentence says must but somehow not always must and then the other one also for the remote case says must but then somehow not always must and your answer is saying if listener must have local may have remote if initiator must have remote may have local and i think that settles it and it's just a way of phrasing this in text so i think we all agree that well about this condition about if listener must have local may have remote and vice versa and uh based on what sean just said i think we should leave the sentence as it is because nobody actually proposed a semantic change to the mustang and shoot okay so just just close the pr i think so okay yeah yeah okay i would agree with that"
  },
  {
    "startTime": "00:22:05",
    "text": "okay um updating outdated references i think this looks good there was one open comment about do we want to add a reference for ice um and i think we'd asked if colin or someone else could chime in about that so currently it only references eight four 8445 for ice and the question is should we also reference 8839 and put his 8839 i'm not sure if it's necessarily needed does anyone have an opinion here okay if not i'm just going to go ahead and merge this because i think it looks good okay corey do you want to talk us through this one is cory on"
  },
  {
    "startTime": "00:24:03",
    "text": "laptop i can't see what this is ah sorry apologies um issue uh pr number 1000 right i'll dig to it so um i see path is network path this is a implement implementation document change yeah i i think it looks good to me if i can spell networking i think it's okay i think we we went through something similar previously yes yeah i i think this seems to do with okay but it it's a lot of it's a lot of fine tweaks to fix the words interface and network and and other things when we use them rather loosely in the past but i i don't think it caused any contention okay there's a typo i saw it exactly just a typo okay but michael other than the typo you think it's good no no it's just a typo right yeah but uh you're you're fine merging it after that yeah yeah yeah i am i just saw that okay gotta fix it right away fantastic thank you all right and then i opened a bunch of pr's yesterday um michael you commented here right so this is in the implementation draft"
  },
  {
    "startTime": "00:26:01",
    "text": "talking about framers we had an issue just to mention that you must uh the implementation must make sure that calls on a framework are synchronized so that operations like adding a framer or passing through data is synchronized with actually sending and parsing data and that those can't overlap in an inconsistent manner michael it sounded like you had kind of reviewed this um does anyone object to merging this fine all right um so this one is about we had a discussion around the immutability of pre-connections this is also an implementation and essentially trying to clarify what it means that once a connection has been started the application cannot change the pre-connection um yeah i don't know about this last part that was added i mean that seemed to kind of say what brian was complaining about that it was the same object that changed from that is expressed both as mutable and immutable actually i'm not sure what the problem was from the beginning because the text actually talks about two different objects i think but i think the new text is clearer so except for this last part that i didn't understand"
  },
  {
    "startTime": "00:28:00",
    "text": "okay i will just remove that and there was a typo also was the typo only on the new text uh no it was there from the beginning it's on the makes the application may exchange this to the it cannot or at least cannot be mutated by the application makes changes ah uh-uh yes thank you application making changes can't be mutated by the application making changes yes perfect all right i think that's good then would there be a way to make that that long sentence into something a little shorter somehow break it in two i don't know how but i just feel it's a very long hard to read sentence i don't see it clearly that's a good way to do that well neither can i okay okay let's merge this and we can always come back yeah yeah yeah it's okay it's okay um i look forward to seeing what the uh rfc editor process on this stuff is going to be like all right and this one was approved by anna essentially explaining i think this is in response to one of martin's issues that the way that an application expresses preference or one of the ways to express a preference for what address to choose when raising different addresses is via selection properties and it gives"
  },
  {
    "startTime": "00:30:01",
    "text": "the example of using temporary privacy addresses and if you prefer that then you end up preferring v6 if you require it you require v6 etc and just kind of explaining how that can influence things any objections here okay since it has an approval i'm going to go ahead and merge it all right and that is our pull request list so we're just going to wait for um philip to help comment on some text here shall we go over to issues cool alrighty um let's filter by what's first on architecture that's just a cleanup one let's filter based on api so we do have eight here these are not going to be talked about um and then we have these ones so what's the pr here you can certainly knock one ones out about the priority in like 10 seconds it was just a question oh uh which one the one that's uh number nine that one right there yeah the priory default value i just put the value of a hundred and i'm like why a hundred yeah okay i had to pick something great close it that was that was only there's some great thinking that was behind that if it's like we had to pick something you know we could have something no no there is some great thinking right you need"
  },
  {
    "startTime": "00:32:01",
    "text": "something in in the middle of things right okay so that smaller and larger values can come later yeah right right like essentially like the the approaches i've seen are like you just you can use like a double between you know zero and one and you just use that for priority or you just use big integers um okay i mean i don't have any suggestion to change i was really just kind of curious so i mean feel free to go ahead and close it out i just wanted to know if there was some grand thinking behind it got it yeah sorry to jump in there no that's great i think that's close fine by me thank you all all right um so this one this one got some text it got closed it got reopened um so is collin on the call right now yeah yeah um i guess do you think you'll have cycles to try to clarify this bit uh colin are you"
  },
  {
    "startTime": "00:34:00",
    "text": "with us hello did someone mention me yes um i wasn't paying attention currently i just wanted to check but um your audio is very choppy okay i think let's just if you could comment in the issue maybe and then we'll just move on for now can you hear me now um this issue is the pr we were discussing that we're waiting for tech oh yes yes now again okay there seems to be about five seconds delay and now we can't oh and now he uh he's offline and there seems to be a delay okay is that any better yeah yes okay uh i was saying i had missed the question unfortunately was not paying attention so you have the context"
  },
  {
    "startTime": "00:36:02",
    "text": "the context is just we have this issue there have been discussion you had reopened it and i think we're just waiting for text or proposals from you is this something that you'll be able to do sometime soon um it is something i am planning to do yes i haven't had chance to do it for this meeting unfortunately but yeah it's on my list to do now this this is the multicast stuff right looking up here it's about adding asm back into the multicast because we did the source address part but we haven't added the asm part yeah this this is the the rendezvous thing yeah i mean if if people have no no objection to me proposing you know we use rendezvous then yes i i'll put a pr and i just don't have a chance to do it yet i think my objection will be colin if it turns out to be many words i mean if it's nice and clean and simple then it might be good okay i i will try to make it nice and clean and simple in that case i i mean i i think it's simpler than the current approach which is why i'm proposing it so but yes i'll try to do that okay all right um so this issue on certificate path validation let's see let me pull up section 3 6.3.2"
  },
  {
    "startTime": "00:38:00",
    "text": "trust callbacks and it just kind of jumped out at me is uh ah yes this is something it's it's about like certain path validation so is it worth adding a reference and it's simply that an informative reference to like hey if you're gonna do this and using certificates go read over here got it um what is um and that's like the the mack daddy of the pki specs right it's got oh yeah format it's got crls it's like how you do trust verification and walking back the names yeah got it um yes we should yeah in general you know because this is something we do in like in our apis of the system itself will do that and do the right thing it's like if you want to have some customized validation yeah then you use this call call out to do additional things but it is around this area yeah um i i can assign that to myself i can write up text for that all right um and then this one looking at the security parameters and the things that are set and i was like yeah most of it's there um because you're setting identities and private keys and they're flowing back and forth but what i didn't notice was if you were going to use pre-shared keys and i don't know if you need to specifically"
  },
  {
    "startTime": "00:40:01",
    "text": "call that out here or if that's already supported and so that's really was like should we be pointing there or not okay and so this is yeah and i didn't i didn't propose anything because i wasn't really sure uh but it was just kind of like a well it's got a bunch of stuff in there and you're including things and yeah it all kind of looks good but like is there you know we know psk is used uh should we have it included in here um this is uh as an individual i uh i think we already have pre-shared keying material imports in 631 i'm wondering if there is something missing from that uh you know let me assign myself and then also um let me tag chris on here um because he was involved in some of the early stuff again like in our experience i think that i missed what we expose is just a generic pre-shared key and then it gets interpreted kind of buy the tls layer um but so it maybe it may turn out that you're like no that's fine close it yeah i'm not that there's no like axe i'm grinding uh just to make sure they got covered that's great um yeah so i'll i'll make sure we review this with chris that's good okay and then this is a relatively new one property inheritance uh michael you were engaging on this do you want to talk through it yeah um i would like to hear"
  },
  {
    "startTime": "00:42:01",
    "text": "opinion because so i i self-assigned because i thought i had i had a way out and if people would agree that this is the way out i can do it and that's that but it seems that philip doesn't agree and i'm i i don't fully get i don't fully get what you wrote here okay so can't i guess can you just explain it to us a bit me the issue of philippians answer please please view the issue and then fill up the answer okay yeah um so the issue is that um is that you can create a message context and adjust stuff in it at any point and it doesn't have anything to do with connection or selection properties and then you're expecting that when you then later use it it should inherit like if you don't do anything about it actually if you just create it but you don't change it then it should maybe get a value from a connection property inherited from that right so for instance reliability if you don't uh like you create the message context but the context would have an object for deciding about messenger reliability and the default would be reliable when you use it for a connection but the issue is that the object itself is not connected to a connection somehow so i can create it at any time long before i even make a pre-connection right and it should somehow be made clear that it inherits uh the property of the connection that it's used on when a message is sent or you're using this message context so that's that's that's the issue that's that's the behavior that we want the question is how to put this in words"
  },
  {
    "startTime": "00:44:04",
    "text": "how does that work if you don't have changed one of the values beforehand how you need to keep track of that then so that you don't default if you connect it to the connection later or do you maybe need to not create it before you have a connection to send it on that's that's explicitly the thing we i guess we we wanted to work around with the original implementation saying um just we see this message contact as something like a dictionary and you put all the changes you want to have on a sent in this dictionary then you give it to the send and the send will then apply all the defaults and apply then the changes from the message context over the defaults this is how i think when writing this we anticipated it um and bento uh sorted no no no a message context should have all the states um of all the properties um in the way the cent will do it and if you want it that way you would really need to con to create the message context from the connection and then make sure that you can use it for introspection and other stuff to make sure what would happen to that sand so this would be the alternative implementation but we reason yeah and now i agree with your original interpretation that's also how i interpret it yeah okay i think the issue is that that that um bent has misinterpreted it and that means that the text isn't so clear about it i think that is that is"
  },
  {
    "startTime": "00:46:01",
    "text": "really the issue that we have to make this clearer okay so this we should the make of properties from connection-wide preferences onto messages okay and yeah michael is assigned to you do you want to well tackle this now the next part of this is that my proposal on how to do this here was to say that we can just say that they all have a default and the default is ignore and ignore means that it's going to be overwritten by the connection behavior when you use it for the connection so unless you set it to something specifically it's going to have that behavior then we have this message from phil saying ignore is going to be really bad here yeah and that's the conversation i'd like to have what is it i would be fine with with the mechanism you propose but just don't kill quality nor just call it inherit or default okay okay does it mean what i wasn't sure about so it's just the wording that you didn't like yeah oh okay can i i guess oh yes grace can i uh just related to our type question here so i think there was also some discussion about this being a boolean but then people uh i guess want to turn it into a preference and i'm not entirely sure what's the best uh way here but maybe this would have been a preference all along when it's sort of something to be said on a message but uh we do also have uh this thing of basically turning a selection property"
  },
  {
    "startTime": "00:48:01",
    "text": "into a boolean after protocol selection has happened right you have a specific selection property a specific feature and either your protocol stack supports it or not right at that point there it's not really about prefer versus avoid anymore at that protocol either has it or not yeah but i'm not sure how this works uh so that's that's the difference right i mean that is kind of natural i mean you choose something you say i would like it or not and if you get it then it becomes a boolean situation right but the proposal here for using a selection property is kind of just to misuse that type because that type exists and say we basically redefine the values to mean true and false which i think is pretty ugly because that means semantically this isn't this isn't the preference or it is a bulldozer so i would be fine with for example for reliability on a message context saying okay we we call it the pro um we use um a property um preference there too and just say okay when sending a message you have the preference of not using reliability on that message if you got chose tcp ah then it's reliable anyway um if if you re and if you really want no reliability and say reliability prohibit and you've chosen tcp you get to send arrow back so for for this case and for for some other case i could really become it becomes awkward doesn't it because you you then have message context like in principle somebody can create so many message contexts and put the put a few preferences in there and then also create connections and say i have this in this preference for this connection and i want to use this message context with these preferences on i mean it becomes just a strange mix"
  },
  {
    "startTime": "00:50:02",
    "text": "of things i think that's i think that's okay michael like i mean if we look at the text we have here we have we essentially say yeah if you set message properties that are so inconsistent that they're not even possible with your underlying connection you get an error if it's possible then it overrides it i i think maybe to some degree the only thing we're missing and rather than trying to have some default value in a message context already being filled out can't we just add a paragraph that says if the application does not add a specific message property to a message that all properties from the connection are inherited and just say like there is no default value there is no inherit value you just didn't add it if you didn't add it then it's not there but that's fine that's the same as just the same as saying that the default value means it's going to be overwritten it's just shorter and nicer right so that's that's perfectly fine yeah yeah i agree with what tommy is proposing but i'm not sure if every message property has a corresponding connection property there are actually only i think only two cases that we're talking about okay um two or three maybe lifetime priority orders yeah so it's only a handful yeah it's it was like 10 but okay so let's see um so the suggestion in what is this section in 9.1.3 explain that if you don't set"
  },
  {
    "startTime": "00:52:02",
    "text": "a specific property on the message the connection and selection properties apply by default or just apply based on what the connection has and and then should we also say that every message property just has its default value and every message property the 10 listed in the section but look i mean this is this really interesting i i think it is only about two why why did you say it's about 10. or isn't it i mean so if you look at the message properties there's only two or three that as a default have a description saying the queried value of the selection property for instance reliability or inherited from the connection property something others don't others are just false or true or whatever oh that's the case for everything it's just two or three properties oh i see yes it's just these yeah these two inherit okay okay yeah priority ordered yeah that's just yeah three uh reliable data transformation yes one no foreign each of those properties then yeah that's what i thought we can just write this i mean this is what i wanted to propose to just give it a value as a default it says it's going gonna be overwritten but we can use the the phrasing that uh tommy just said and just put it"
  },
  {
    "startTime": "00:54:01",
    "text": "per property right yeah well yes i and you know michael i think it sounds like you have a great idea here so yes feel free to make a pr i think adding something to all of the properties or whatever makes sense it may be nice to just have some text up above because that's the area that the person who filed the issue got confused in yeah and so just explicitly saying by the way when you look below it explains how they inherit and what their defaults are if you don't right yes okay i think we have a way forward here yes um so that means yeah on api we effectively have one two three four proper issues that still need text and they all have assignees that's good all right uh did we want to move over to implementation or i guess yeah let's take a look at what's your question are we doing okay i think we're doing okay on time we have another hour i would like us to take a couple minutes towards the end to talk about aitf 113 but i think it's good to take a look at what implementation issues we have first okay"
  },
  {
    "startTime": "00:56:10",
    "text": "all right um what's a path i think yeah this is oh this is the one that corey just did okay i think we can close this that just didn't mark it um i just need to do this that's on me what sorry github is being weird on me okay i'm just going to close these out interface for app driven racing unconnected protocols yeah i i still just need to do that i i was trying to clear out some of the implementation issues but uh this one got merged so i'm gonna close this this i think is similar to the other issue we're talking about for getting into more details of certificate validation um does anyone remember that here we go 977"
  },
  {
    "startTime": "00:58:06",
    "text": "okay i think this is more of a to-do final pass they can the implementation mapping on i guess you'll be able to get to that sometime yeah that one relies on the previous one yes um privacy consideration we should yeah i will try and get to them great great so part of my edit pass which happened in march of 2021 um i need to go have a look at what i did there and see if i just forgot to do this or um uh whether i forgot to close the bug so got it right now yeah at the very least let me just look at our current security yeah did i did i it got renamed did it get renamed not the one in implementation not the one in implementation okay so i think i might have just forgotten to do this so i'll go do it great and i suspect it's the same for the next one yeah this is just a review pass yep so yeah we can just double check maybe some of it i'll double check those great this one is with me i was looking at this i'll get to this soon this is i can just do a big kind of editorial pass to get that and then this is essentially just a to-do of when we're shipping the api to make sure we do a pass on implementation so i think that's it um for issues i think we're in a pretty good spot and i'm gonna stop sharing yeah i would agree with that uh"
  },
  {
    "startTime": "01:00:03",
    "text": "i'm kind of wondering given that we already had working group last colon architecture and api and on implementation i'm seeing a couple of editorial issues i'm wondering if we should consider a working group last call on implementation soon to get more comments the standard working group last call is a threat right i'm using i'm thinking of using it as a motivation to get people to read it we're gonna publish it so um yeah but seriously i think we are we're getting closer and closer to finishing those documents which is great so so api as i understand it we've got like a couple of outstanding things there and we'll do another rev before vienna is that what we're targeting to do that would be great that'd be great awesome yeah it sounds good to me and for implementation we have a couple of outstanding issues that we just looked at but maybe should we try doing a working roblox call on implementation uh very soon do people think that is something we can do before vienna try like when is so just from a logistics standpoint right like so now it's the second of february"
  },
  {
    "startTime": "01:02:00",
    "text": "we are not going to schedule another interim before the ietf i presume i know this is driving you forward to your next move um so like would we say working group last call on implementation starting at the ietf does that seem reasonable starting after the atf yeah i mean like you can but if if if we are all planning on going to vienna which i'm not sure we are all planning on going to vienna but let's you know let's alternate universe this and say everyone's going to vienna um i would propose that uh the chairs say at the beginning or you know whenever we do the the updates like and working group last call begins now right um because i don't think it's i don't think it's feasible to target ending the working group last call before vienna i just don't see all of these pr's getting in by then but right yeah that's not fair uh thanks anybody else have thoughts on this because otherwise let's talk about ietf113 uh we already had a little informal question of who is actually planning to travel and i think we had not not a lot of people but uh of the people who joined anybody already making plans to to travel just curious i said i'm planning to go let's see if it works should be good"
  },
  {
    "startTime": "01:04:02",
    "text": "i have not yet decided whether i am planning to go or not um i i strongly suspect that i'm gonna well i'm gonna do something that'll probably a lot of other people are doing is check the agenda or check the the agendas and the attendee list um about two weeks before and then like you know rush book it two weeks before right because like worst case i can bicycle home from vienna um uh it'd take a while it'd be fun um but worst case i can do that so like i also i'm not sure what the travel restriction situation looks will look like at google at that point in time like you know if if i have to get warren kumari to sign off on my expenses then that's a maybe if i have to get like ben traynor to sign off on my expenses that's a no um so but i'm looking into it and i'm considering showing up cool uh yeah so i guess the orthogonal question to that because we are going to have a hybrid meeting and uh remote attendance should be sort of more well supported than at previous in-person meetings uh we can always have a tabs session and i was wondering if ietf 113 will be a good time for us to have a tabs session again to sort of maybe start the working group last call we do have a new implementation that we might get a presentation and maybe some discussion on and then uh we do have a bunch of potential follow-up work that maybe we would like to start discussing in sort of more concrete terms but um okay tommy agrees we should have a session what do other people think i'm seeing a"
  },
  {
    "startTime": "01:06:01",
    "text": "thumbs up and some nodding uh i i think i like but in the previous agenda item i implicitly assumed that we were going to have a session so yes okay sounds good and i think we're having 60 minutes and 120 minutes slots again i think we did well with the 60 minutes slot last summer so we should probably go with that again people do we already have ideas on agenda items other than maybe talking about the go implementation which would be one that has already been proposed starting the call on implementation which will probably have a bit of an issue scrubbing on implementation also talking about more um protocol specific properties or protocol mapping documents would make sense for sure and i have hopes that if if we make it on a meeting we have a chance to drag a few people in to help us with quick and probably the other pet pro protocols yeah in our december interim i think we already mentioned that a quick mapping document would be a great next step i am not sure if we have anything specific we have an old draft tommy did you yeah i i had the old draft i mean if we have if we put it on the agenda that'll be a"
  },
  {
    "startTime": "01:08:00",
    "text": "good forcing function to rev that um like i won't be able to do that in the next two or three weeks but after that sure why not um so i think yeah trying to get a quick mapping document there would be useful um the other thing i could think of if you're looking for agenda things um you know as we are kicking off a last call for implementation there and essentially you know saying that okay architecture api are you know pretty locked up it may be worth i don't know who would have time to do this um but just kind of having like a summary like you know how do we explain this to the world in a quick pitch like you know now that we think things have settled down just a recap of here's where it ended up and there's this long document but how do we summarize it and you know something to point people to just like a a deck for like hey if you're reading this and if you know at some point if you're the isg or ietf last call looking at these documents you know what's this all about again and so sir talk about you know how do we progress this forward and get it more out into the world okay so this would be specifically about implementation or about tabs in general thinking in kind of in in general just saying like hey we did last architecture and api how did it end up just like just reminding people is especially if we expect to have people in the room who are not on these calls well i think brian's um tsv art talk is"
  },
  {
    "startTime": "01:10:03",
    "text": "has not been has not been overcome by any of the changes the document we've made since that's true um that's true that's like a that's like a good well i mean it's like 20 minute talk plus 40 minutes of arguing but like that's that's a i mean that's that's a relatively large time commitment but if people really want to know what it's all about like that's about a good entry point as you'll get um so that's easy to find in the youtube archives yeah i'm not sure what the specific adrenal item would be for this case for a taps meeting so one thing yeah oh sorry yeah i was only suggesting the way to code that is simply to put um a note to brian's talk in the agenda and just say have a look here material and then we don't have to spend time talking about it yeah i think okay chair slide could actually um point to the youtube link but i was thinking like if you really do a quick mapping that would actually that presentation could uh give an asset test to all the documents so to say that's the things that you want to touch tommy so so so so the other tool that i've advised to really any um any like relatively obscure working group is wikipedia um with alto which is equally obscure uh like so i was in the habit of like reading about alto because i was a responsible id kind of to like process a document or something and kind of forgetting about it and like then having to read it again and like make new notes and throw them away and and this and this like so i ended up just writing a wikipedia page"
  },
  {
    "startTime": "01:12:00",
    "text": "about kind of the high level what the heck is this about thing um because i just can't keep that state and uh like it and it turned out the useful thing to send to the isg like you can skim this you know a thousand words about what the heck this is about um in a readable way and if and if the if you're looking for an entry point that is less than an hour of time investment that would be a good thing to do just really accessible text about what the heck this is about and like some example code or something that's short um you can go to the alto page if you're curious how i did it for that but um yeah i would definitely recommend that as something for for newbies disambiguate yourself from the movie taps and the song uh and believe me also had serious problems so this is a similar problem so you know catchy acronyms man it really really gets you it seems like there's an action item to turn my talk into a wikipedia page um is anybody here like other than martin already edited wikipedia martin should we collaborate on getting some like i have i just have no idea like wikipedia terrifies me um okay i mean i can do that like i mean it's it's really not hard but um basically is it it's basically markdown now right or is it still like you know old school editing things with clicky clicky um literally i've lost the ability to use a mouse while i'm typing it's just kind of it's it's mark downish um uh like it it's kind of a similar concept i"
  },
  {
    "startTime": "01:14:01",
    "text": "think it's a different syntax okay if i'm not mistaken maybe it's marked i don't know like it's been a while but um uh sure i can help you we can we can yeah you know we can detail you know we're getting ready to go into perf season which means if i don't have somebody who's like going to bother me about it then it's you know not going to happen before yeah i'll nag you i mean if it doesn't have to be you brian but like it's certainly easy enough because we can do um yeah i mean like yeah if i i can set up the format and like if you just have some text you yeah i'm gonna cut basically yeah yeah that's what's fine let's cycle run let's what's that all right yeah i'll send you like an outline and you can fill in the outline awesome stuff and i can magic that into so can i say something before you go like finalizing the wikipedia thing because i i mean let me just understand the thing the wikipedia anybody can edit right so are we saying like a taps working group taking uh this wikipedia page as a like as a information center kind of thing and i take the ownership of that one and what if if somebody just screw around that wikipedia and does something wrong so who is gonna like take care of those things i really like the idea of wiki but i'm not sure like wikipedia is the right media here theoretically you shouldn't be doing a first party article on wikipedia like you can't write an article about yourself and put it on wikipedia it'll get deleted so well i mean they're they're references though i mean so that the way that the way that manifests itself is that like you need references so if i write an article about myself and there's no media about me then that doesn't get anywhere but like you can point to internet drafts and rfcs um and that's like that's the documentation that they need um right and like i said"
  },
  {
    "startTime": "01:16:02",
    "text": "literally i would expect that a lot of the stuff is going to be quotes directly from like the arch document right yeah but what about a new working group wiki i mean that that possibility do we have so so i think the idea and what what alto did with this right the idea is to make sure that people who are not necessarily like paying attention to the working group can fall into having information about what's going on right like so the advantage of if we put something on a working group wiki and then we put something on wikipedia i i'm pretty sure where the natural seo is going to rank those in the search rankings in you know your favorite search engine um so like so a couple things so i mean so so to solve these the small purpose of ietf is being able to find an accessible summary of what the heck this is it is true that like track or whatever the new tool i mean the one issue is they're like migrating from track to something else and i don't know what something else is yet but like both are equally fine um i don't think it'd be the worst thing in the world on publicly accessible information uh on something like wikipedia i mean we don't have to like quote unquote maintain it we can report abuse and vandalism if it exists and i mean i'm not an expert on with computer procedures although i know who people people who are but um like there's a way to handle that i mean i don't we don't have to like explicitly maintain it and it certainly hasn't been a problem with alto um we don't really have ownership of it per se uh so like i i like theoretically we could become the targets of this sort of abuse um which would require some effort to resist but like i'm not sure that's a practical concern but if people really want to do this in track and not deal with it like i don't i don't think that's a show stopper"
  },
  {
    "startTime": "01:18:03",
    "text": "not track but whatever the new thing is so we would just should make sure that everyone agrees that putting it on wikipedia means more or less leaving it out there for anyone to yeah add things to it and make sure that we don't call that we own the text and it's so in in a year it can't it can happen that it's not brian text anymore and if it's right we should be fine with that yeah that's actually what we want so there is an idea of like having an id blog i think that could also solve the purpose um that's like i think that that will also an environmental idea block content i think i've already done an ietf blog post on this if i don't i've done i've done one or two and i think one of them was on taps um but we can check the blogs that we can do on taps right i think none of this changes sort of the action item that martin and i are taking in that like the content is going to be the same no matter how we um we disseminate it and like you know the next question is why not both right i mean once you have the thing you can just sort of like put it on the channels that you want to put it on in order to get it in front of the people that you want to get in front of maybe i remember i would say that i don't post on taps but it was like well it's two years ago but again things haven't changed so i would say the ietf blog and wikipedia might also be sort of tend to be different audiences there is an ap nick uh blog article as well yeah that was the one i was i think both are useful uh but"
  },
  {
    "startTime": "01:20:01",
    "text": "so it's it's not contemporary information that that we think goes away like many block entries so i think it's both fine to have both so i will take the action item to email you an outline brian and then you can yes you can fill in text as appropriate and links and stuff and i can pretty it up for wikipedia and if people want to go put that in in in other outlets like i don't have a problem with that yeah and like the the apnic blog post was um beginning of 2021 right like so it's newer than some of the bugs that we're talking about today so um like it's it's accurate to you know the level of accuracy that we were talking about here right i don't actually remember but the tsp talk i gave that was in person right that was you know that was in the into the luvian past so right that would have been tsv area right okay yeah so i mean i don't want to discuss martin you outline this one i think we can figure it out where to publish this one this would be anyway good post uh whatever you would do it um the and my personal thinking is like as long as we don't claim the ownership of wikipedia we should be fine and yeah whatever blog post we do we can anyway somebody else in this world can take in uh taps wikipedia page and like refer to all the rfcs and block posters that we are doing so that should should not be a big deal"
  },
  {
    "startTime": "01:22:00",
    "text": "but as a main communication method i i don't want to take the taps working group to take the ownership or keep it a content in any sense so that can be my only concern but i really like what you guys are doing here discussing so please continue that thank you sounds good um did we have more suggestions for either the topic at hand or big painting tabs or the tab session at ietf113 and yeah i am also unsure if we are going to have time for another taps interim before iatf113 it seems kind of tight you know i think the next meeting is is in vienna or in vienna or in virtual vienna yeah yeah um i guess right i guess we could have a um a sort of deadline for trying to get all the prs in and see if we can agree on them we don't need a real meeting if they're pretty close then maybe we could just sign them off and then we have a more clean position so maybe just an email around reminding us when that comes up would be enough rather than having an intro a week a week before or a couple of days before the the draft deadline before the meeting yeah yes draft deadline let's see when is that internet draft submission cutoff is on march 7th monday okay okay so yeah like march"
  },
  {
    "startTime": "01:24:01",
    "text": "second and let's try to get in a new revision of interface but also maybe implementation if we can get a couple more issues resolved by them and especially if we are going to working group last call implementation we should publish a version that we actually want to last call so yeah that sounds good to me okay yeah i think unless somebody else had something that we wanted to discuss in this round maybe we can give everybody half an hour back um all right not hearing any pushback uh thank you all for participating in this tabs interim and i am looking forward to seeing you in vienna and or in virtual vienna peace thank whatever"
  }
]
