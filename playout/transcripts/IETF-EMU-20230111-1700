[
  {
    "startTime": "00:00:04",
    "text": "looking for some folks to cut to help with uh notes I posted the link to the uh notes in the chat um so if I could have some confirmation for from some folks if they're going to be able to kind of record uh you know major decision points and action items in in the notes um do we have any volunteers silence I might be able to do the first half uh Joe but by The End by the bottom of the hour I need to not be doing them okay okay can you let us know when just uh let us know when you're when you're heading when you can no longer take notes and then uh um one of the chairs may be able to kind of help out there and anybody can you know the the notes are collaborative uh people can join to that link and and update them as needed um so I you know we're just this is uh ietf interim meeting for uh emu it's under the standard note well uh policies um what we wanted what I wanted to go through today is the remaining Errata the two uh 5770 and 5775 which are perhaps a little bit more complex than some of the other ones we've we've gone through um is are there other I think that's the primary topic are there um kind of important topics that we"
  },
  {
    "startTime": "00:02:00",
    "text": "would want to talk about uh before that we can always add additional things when we get through those but does anybody have any uh topics to to supersede those two all right that's not then Alan do you wanna go through those yeah okay uh uh screen sharing uh let's see we can do that um okay let's make this size where people can read it um five seven seven oh so I put some mark down farther than doing slides I put some markdown files into git um the summary is that the simck is derived from msk or emsk and what happens um the definition there uses imsk but all the later references are to imskj um the secret used for the prf is emsk and then the text if you go read it is like no no really it's sometimes msk um and there's no discussion of what to do when you pick msk versus ensk um so in the end the fixes aren't terrible um change the definition so it's I am I am sorry typo but imskj"
  },
  {
    "startTime": "00:04:01",
    "text": "use the word secret instead of e m s k um and that um solves that definition problem the other complexity um based on Alex's suggestions of implementing this and interoperating um there's now some additional text saying uh yeah I know it says you derive s i n c k but in fact you have to derive two complete sequences one of which is msk derived and the other one is emsk derived um and there's the the latest commit there which is linked if you if you go to GitHub um you can see that so in the end I think there's a lot of sort of technical squinting at it but the solution is not that complicated one of the things that I think May complicate it and I mean in practice it may not because it probably won't happen but what happens if you have a series of methods right and in each iteration of a method you know has the potential to generate an emsk and an msk and in some implementations the emsk may not be generated and some it will and so you can end up with like say three methods which may or may not be a good idea to have those but like you you know the the one party uses the msk for all of those and the other party uses the emsk or so one party uses the mfk for all this the other party uses the msk"
  },
  {
    "startTime": "00:06:00",
    "text": "for two of them like is there a problem with like combinations do or do we just say like because you well I guess there's only two options and you because like do you have to keep this running total or is it resolved after each after each method execution you know which msk or emsk you use is that so the this value of s i n c k is really an intermediate result used to derive um the imck and what the text says is if a method doesn't produce emsk or msk then your derived imck is zero right so so think of this this sequence all of this s stuff in the middle is thrown away after you do that calculation the only um output is that final imck which is either zero um or derived from this calculation so I can clean up that text a little bit so one of these things of working on it yesterday afternoon and this morning thinking out loud and explaining it helps to clarify a little bit so I'll see if I can clear that text a little bit but yes um yeah it really should be clear that this s i n c k is an intermediate thing and its only purpose is to derive that next thing and then one of the other"
  },
  {
    "startTime": "00:08:00",
    "text": "Errata was what what do you do when you have like basic password and no and and the answer is your imsk output is all zeros so well with all that yeah go ahead that that one stage is all zeros there's only the msk is zero I I don't think the whole lot flattens out to zero if I remember the the bits that get set in the sausage uh yeah like your secret is zero not the s i m c k is zero uh uh I'll have to double check the text I think it was written as the output was Zero but yeah so it probably should be the secret and I'll I'll double check the code too but yeah I think that may be correct so I'll because you're taking these values and then you're hashing them into the what your previous result was and so if you're doing something that doesn't generate a key you're hashing a zero buffer into that versus and then you your other case is well my method could generate an mfk or emsk and that's implementation dependent and so yeah the the server provides two up well what once I provide the server provides two options you know um if it has them and its policy allows for that it provides two options so that the client if it only supports one of them it will choose it can choose one and you can interoperate right yes and then at the end of that transaction you then have chosen the client has either chosen the msk or the emsk um and the msk could generate to zero if"
  },
  {
    "startTime": "00:10:02",
    "text": "there was nothing uh if there was no or email whichever one we decide would degenerate to zero um and that gets hashed into the running hash of what which I I think it's the IMs Community imsk or imck or I guess the imck um and so okay okay so yeah I I I think that the summary there is is the input here is msk or emsk or all zeros and the output flows from that and then you have um two derivations of everything um I just have to find ways to explain that a bit better but yeah was there also part of this one or is it part of the next one that was the question on if you're generating all zeros which is it ambiguous as to which um Fields you put it in in the protocol message or is that clear um I think that's clear there's a separate one about crypto binding and which one you put in um but there there is there is text about that so yeah so I I I think we you know module out some last minute fixes I think we're mostly good with this yeah I think the 5775 talks about you know basic auth and what how you do the key derivation for basic auth uh yeah and we will need to get into that in just a bit more detail um what concerns me a little bit in this one and we should just I think probably it will help to have some test vectors to see this but if if all we're doing Joe is hashing into zero um it's this is really sort of a null op isn't it in terms of a secure in terms of a security value right"
  },
  {
    "startTime": "00:12:03",
    "text": "yeah yeah it's a no-op um because like zero you always know it's going to be zero um you know it there's no way to bind anything to the tunnel because there's nothing generated I think we had some discussion on the list and from you know my memory of why we did it this way was just to kind of keep the implementation simpler um but like certainly uh you know whether we change that or not I you know I think we could change it in the revision we couldn't change it in an Errata I don't think but we could change it in a revision if we thought that that was an improvement and people wanted to do that yeah I think that's a good point for the we should separate the Errata and just a little bit I don't want to go too far from I'd like the era to be pretty close to what's in the revision I know that Allen would for sure but um where it where it if we're doing something that doesn't make sense and especially if like the security area is going to throw up red flags and vomit all over all of us over this and then we have to change something so what we'll have to be a little bit careful about that but for this for the errata as long I think the text needs just a hair more um specificity um in order to close it but but I think we're close I think what Alan is proposing is okay yeah so I think what we would do here is uh kind of you know get that review the text that Alan proposes because like it'll be easier to to review like the concrete proposal versus like kind of unless there are specific things we want to talk about but I think that the thing here is that it's you know the text current text is pretty unclear and so we just want to have text that"
  },
  {
    "startTime": "00:14:00",
    "text": "clarifies it in a way that you know helps implementers Implement to what most implementations yeah I feel I think that's good so go ahead yes just in terms of wording right I think it's probably also good to mention whether you know just just to reiterate perhaps and this is because it's a bit of a change um that when we're talking about inner method it could be an inner eat method it could simply be um the execution of tlvs I think is what we said correct in the previous uh that was what we said in a previous erratum yes that's why I have five seven six seven there um it's addressed there we can get to that after um seven seven zero and seven seven five okay yeah I was just gonna say if in as much as we're saying that we should just make sure that it may need to be reiterated uh in several places just in the Errata so that people it sinks into people's heads um in case they read one and not the other for instance yeah um for me you know you using all zeros uh I mean it's a choice some you got to pick something um I I think the the only other alternative for something like basic password is use the the password here as the secret and that way you're you're you're doing some level of crypto binding to the actual password that was sent over um that would really be the only other choice but yeah we can't rev keep in an Errata update yeah and and we can discuss using password the reason why I think we didn't do that is that we won it's not clear that it helped anything because you're still sending that quantity within the tunnel"
  },
  {
    "startTime": "00:16:00",
    "text": "right so it's it's not going to make anything better um and then you know for each kind of method that doesn't derive a key you would have to derive you you would have to say what quantity it was that gets and how it's encoded and all of these things um and so it seems simpler to to not do that um but and there might be more considerations around hashing in a password although it shouldn't really matter um because all of this is you know the hash function is you know kind of generates in a random output so it's it's shouldn't be too big of a deal to Hash in the secret like that um what I would say uh is just that we should note in the Errata that when we're using all zeros that it doesn't provide security value the only purpose here is to provide consistency of implementation for interoperabilities sake not security yeah what what I I think we should include that in uh in the text for 7170 revision and what I want to do is have the text for 7170 matches close to the Iran those texts it there shouldn't be much difference to them unless we're making some sort of change that we can't make into Narada right so um the the goal here would be to align those two things and have that explanation you know like there's like I don't say there's clarification and terminology and all of those things some of it's editorial some of it's a technical clarification um uh but I think we could put those together in one section because it's just we're do I think most of these changes are contained in one section um so like it it's one or one Errata in a sense we can have one block of text that gets replaced um"
  },
  {
    "startTime": "00:18:00",
    "text": "you know okay I'll see what I can do I'll uh push some fixes this afternoon while it's fresh in my head um I think we've covered seven seven zero modulo changes and updates um 775 turns out to be relatively straightforward there's a bit more to it than this as you see there's three different commands here um but there's a definition for how to derive cmkj but not cmk0 so we add some text in which is that and then make sure that the references to things are consistent um there is the the original attack sort of assumed the reader knew what was meant um and I've gone through and double checked references to cmk and all this to be sure that they use consistent terminology everywhere it doesn't change any of the technical um meeting or implementation but it does make um it easier for an implementer to read it no you know I go I know exactly what to do here foreign so if you want I can pull up those three commits but um I think it's it's similar there is some overlap between five seven zero five seven seven zero in this one and that they're all deriving related things using similar technology or terminology sorry foreign"
  },
  {
    "startTime": "00:20:04",
    "text": "hearing no concerns there um I think it'd be good to move on to uh 5767 as Elliot was mentioning the text this was a bit bigger one in terms of edits the original text was playing fairly fast and loose with inner eat method where it meant inner Eep authentication method in other places it referred to eat method where it really meant Eep or basic password um and then as Alex was pointing out or vendor specific um so rather than trying to put weasel words everywhere um because there were some where it said eat method or basic password but that wasn't consistent um so I've defined something new at the top of the document in the terminology section um saying there is a new term inner method which is wave your hands vigorously whatever happens inside the tunnel for Authentication which is an Eep authentication method username password or vendor specific and then all of the text can refer to Inner method um and then as a side effect of that the Eep sequences section simply becomes an Eep section because there can be a little bit of text before that saying oh by the way you can mix and match inner methods however you want and so some of the sequence stuff in that deep sequences"
  },
  {
    "startTime": "00:22:01",
    "text": "section goes away um and then the Eep authentication section becomes inner Eep authentication method which is a little long but it's only used in that one section and only a few times um I'll let people digest that for a second I'll go make some notes for updates since it's mostly an editorial Errata I mean I think we can include a note with the with the resolution that could maybe explain uh what what will be done in the revision but like I don't think this is something we would uh publishing around before I agree with that I think this is a hold for update because Alan you shouldn't have to worry about you know essentially trading through the document and trying to redesign their their criminology that's especially since we're going to come out with a new document very soon I wouldn't I wouldn't I would just hold for updated if you're okay with that no I think that's good so heck yeah I'll make some notes for for my updates for that um about pulling the 64 octets from TLS prf um moving on there are let me see here issues so I don't know if we want to go through the issues in detail I opened up a few based on comments on the mailing list so"
  },
  {
    "startTime": "00:24:02",
    "text": "where I could address things um comments on the mailing list I put them into the document where I couldn't I opened up an Errata so it was tracked um do we want to go through that in um in detail there's only a yep I have uh you know one thing that I that was discussed on the list that I'm not sure if I understood what the resolution or the issue was was around eat fast Ms chat V2 and and what because that seems to have caused some interrupt problems or maybe it hasn't um yeah so there is a separate section now um in the document which says oh by the way if you're doing Eep Ms chap um it is the Eep fast Ms chat variant as defined by this link um which means that the uh there's 260 octet fields which get swapped so that is explicitly called out now is do we have a neurotic did somebody fall out of for that um I believe so yes okay yeah yeah okay I I have to go find it but yeah that's fine I I remember now so I think we're good [Music] um in terms of open questions uh if we go from the bottom up I think I've already addressed that I had a consideration section I I pushed a commit and Link it to the issue"
  },
  {
    "startTime": "00:26:01",
    "text": "um the other one don't lose track of verified errata I think we'll leave that pack I think is either tls13 changes or TV2 I I don't know what else to say about that um let me open 5128 Ellen I think what I I think the coverage on the list if I understand correctly that's one where essentially my read is that I was the only person who said oh let's dump it but um and since I'm I don't mind being the odd man out you can just close it unless other people want it yeah okay okay oh I didn't know it offline um I think five one two eight exactly this is all adding the output lengths and updating everything to say um this derivation is the first and octet of whatever um so I believe that's been updated yeah I'll check I mean you're right it's it's just um like we we had there's the whole definition of the function signature for a prf is like was not well defined in uh in t or we didn't stick to a consistent function signature so it's pretty confusing sometimes we have a length and sometimes that link means you mix the length in and sometimes it doesn't so I wanted to just kind of clear clear make those clear and and not change the function signature that TLS is already defined so um"
  },
  {
    "startTime": "00:28:00",
    "text": "that's what this one's about and I I'll I'll look into what what you've changed okay uh let me make a note okay uh uh next erad uh uh I believe this was Alex's comments on the list all that people go over that have we got any pack tlv implementers Cisco didn't implement it for deep I never saw a tick box in micro on Windows for it either I expected there would be one if there was but because I think the client has to request it usually if I remember I think um wpa's supplicant implemented it and the reason I think this is essentially my my view of his code is that Yoni basically stole the eat fast code for this and just did the same thing and roughly the same for where he borrowed that that code path so I think"
  },
  {
    "startTime": "00:30:00",
    "text": "he only spoke to himself though if I remember so I think he only tested it into like root back the ends together yeah so if if nobody knows what the heck to do for for pack um do we want to keep it do we what I mean I I would almost suggest leaving it in to minimize the the edits of the document but just add a note saying oh God nobody implement this we don't know what it does and we don't deliver it because yeah if nobody implements this uh maybe it's time to rip it out yeah well I I think we could potentially but I'm just if it's going to uh causing we'd want to do it in such a way if we can that it minimizes the chance of causing an interrupt issue um so but definitely we can I think we can add a note that says hey this is a candidate for removal in the next revision because people haven't implemented it I mean for a pack file right they're generated based on previous results right and if you don't have a pack file you just run through the full you know whatever set of methods you're going to use so I'm not sure there's actually an interoperability problem here if you rip it out the problem with the pad I think there was an out of bound provisioning idea so like people could go around with USB sticks and say right this is provisioning machine so you install this blob on the machine and that's how you hook up um it's not just a case you wouldn't be able to it's like you wouldn't be able to even connect in the first place because that files no longer being sent or used I think that was one of the use cases"
  },
  {
    "startTime": "00:32:00",
    "text": "there was definitely that yeah but I don't think it's very practical but there that was there was out of bandpack provisioning I mean you know you wouldn't necessarily have to do it by USB stick but you'd have to have some way of provisioning that um okay yeah and we can look into what the impact is if because in some ways it's attractive to kind of remove stuff that that we don't need but if if it's going to cause um you know if nobody implements it and we think it's a useless idea then um we can't I think we can remove it just but we need to be a little bit careful that it's it's not going to cause somebody a headache if I don't know anyway foreign this is to describe people trying to implement it today like that we've already got existing implementations out there and if new people are joining the party um I don't know if the the uh RFC 7170 describes enough that someone else's back um if you remove this the impact would be new implementations would not have like hypothetically uh I don't know what the lot actual practical loss would be right if somebody did Implement pack would they is there a recovery option here like would they just able to say I don't support it and go into a full handshake if that method was available like obviously if they only have pack"
  },
  {
    "startTime": "00:34:00",
    "text": "way of bootstrapping something that that might not work but is there kind of I haven't looked at in a while is is there a reasonable thought like if I don't support pack is that is it an optional enough part of the protocol that you could just say no um and continue on with the main part of beep fast if you support the full Authentication I mean the spec seems to say that it does say include your pack if you've got one but if you haven't you you haven't um I'm thinking this documents I sort of aim to describe what we see out there in the wild um and we can't describe what someone else might have done with their pack or what they should have done with their pack tlv implementation and how to use a pack file um if we describe something and Hammer in a nail somewhere in the ground someone if someone's different we've already created an interrupt which I think we're all worried about but by let's say we just remove that whole the whole pack section from here uh say hey you might you might see a pack on the wire but just ignore it for new implementations uh this when when someone writes a new implementation let's say to talk to a vendor we don't know of that vendor might have implemented it in a way which any of our interpretations of this uh RFC we're not going to come with we're not going to be able to meet in the middle um I think someone's going to be just looking at the output of Wireshark and keep poking it or looking at a debugger until they can figure out how to talk to this other vendor um I don't know though yeah no one's seen this like I think it's worth you know trying to see if we can just remove it and because it sounds like well if you don't support pack you're just gonna there's this kind"
  },
  {
    "startTime": "00:36:02",
    "text": "of corner case of out-of-band provisioning where somebody might you know there's some bootstrapping that you couldn't do but I think it's unlikely that people have really implemented it I think the person maybe to check with is is Oleg um from Cisco but if Elliot said that they didn't uh implement it you know I think it was probably implemented for Epass but I would be surprised it was implemented for for people I mean Johnny implemented it for host AP so one option is we just describe exactly what he did so I mean that's the only interest out there I guess we're aware of if is Cisco definitely didn't do it yeah I didn't do any interrupts anywhere else so uh for this also yeah and we might be able to uh get you don't need a comment if he would lose sleep if we removed pack so yeah I don't know that there are any um actual uh shipping implementations uh cheap supplicants using uh host AP um typically you know that goes into Android um and the tip code is relatively new um I haven't seen anywhere that Android actually uh exposes this anywhere I suspect in park because the code is new and as soon as anyone looked at it they went you know oh gosh here be dragons and said well let's not do that um so yes I wouldn't be surprised if there was no production implementation or deployment of um of pack in which case there is a bit more of an argument for simply nuking it from the document"
  },
  {
    "startTime": "00:38:00",
    "text": "cool yeah I think if you know sections that we can remove that nobody implements and nobody's going to implement would help the document so foreign okay if I go back to the issues I think most of the other issues are hi did you have a comment or is your hand raised from a previous comment how about no yep I can hear you yeah uh some Linux distributions may have uh well they have they are using WPS applicant Ubuntu and Fedora so they may have it uh because they are using WPS applicant I haven't checked so I can check if there are any of the recent Linux distributions have it so that's uh"
  },
  {
    "startTime": "00:40:00",
    "text": "besides Android so that this one so let's say that the Linux Distributors are one user of WPS applicant until very recently WPA supplicant wouldn't even talk TP anyway because I mean well Ms chap it was using the non-fast version the keys the msk flipped over um so that wouldn't have worked full stop um and it wouldn't of authenticated against Windows either um various reasons so I don't know even if the team shipped it wouldn't be usable in the state it is until a patch I think was added within the past month I think yeah that's true okay so is there at least rough consensus that pack is perhaps irrelevant um and then whether or not we remove it from the document um I think would have to take that to the list and have a bit longer discussion about that yeah I think we should have a call on the list but it sounds like a good a good candidate for removal uh oh yeah so I want to comment if I can uh the tip or RFC still has this session ID based resumption so if somebody wants to have a quick TLS handshake I think that option Still Remains"
  },
  {
    "startTime": "00:42:03",
    "text": "right you could potentially still use new session ticket maybe I don't know there's another uh comment up that seems like in Alan's issues list so something we should figure out if we can if that's an option for people who want to be able to use the statelessness yeah the I I won't open that uh issue at the top but the summary is the pack text says you get the pack from the tlvs or maybe from the new session ticket uh depending oh okay when how do you know that the new session ticket is the pack and not a TLS session ticket so there's some incentives you know what if we're going to do teach stuff that goes into plvs if we're going to do SSL stuff or TLS stuff that's TLS stuff um I think the only real difference between um the pack of the new session ticket is that um you can begin a a new TLS session and authenticate using the pack or is the new session tickets are really one use only or limited uses shall we say um but yeah I I think generally if you want fast session resumption that's what discussion ticket is for is that and otherwise do fully offensive motion foreign okay so the one remaining thing is pkcs seven"
  },
  {
    "startTime": "00:44:00",
    "text": "um let's see what is I think this is Alex's comment I don't have a lot to say on that other than I meant to take a look at it later it would require digging over I would need to dig into this a little bit more to see but it would be good if somebody's thinking of implementing this or has implemented it then like we should get them to help with this revision yeah we have no plans to do the peaky cs7 or pgcs10 stuff for a while we're trying to get this at the door first so yeah I I have no real opinions here unfortunately foreign so have we gone through the sort of remaining open issues are there other things we want to bring up at this point for me that's really the the highlights um there's a bunch of commits"
  },
  {
    "startTime": "00:46:01",
    "text": "um all tweaking things here and there um it would help if people could review them with a really contentious ones and and open ones are all listed here so the only thing I have to do now is some minor updates as noted today and then we actually go to the list and try and figure out what to do about the pack and then this pkcs7 issue yeah so I think we're we're getting to a point where most of the technical sort of changes or at least have a first pass into the document that we are we think we're happy with and so we'll want to have some pretty decent uh review of folks kind of taking a look at the document as a whole with those changes and make sure it holds together um but uh I think we'll maybe resolve that pack issue first and then see if we're uh well in this pkcs7 issue and then maybe we'll be ready for a working group Last Call on it um might be aggressive but I I think it leaves getting um you know a set of you know a couple people commenting on the whole Doc and then we can ferret out any other issues foreign if there are no other issues and I think we could adjourn for today we do have a meeting scheduled uh for next uh Wednesday as well I'm not sure that we need that one I'll keep it on"
  },
  {
    "startTime": "00:48:04",
    "text": "the schedule for this week but if we don't seem to be having any need for it I will cancel that one so that we get some time back and then uh it does we need at least a week to schedule an interim um and preferably two weeks to give you know make sure that we can get time so we can schedule and uh an additional one later say maybe in February to kind of uh go through any additional issues but I'll hold off on that for right now so I'll leave the current meeting for next week on but I will send a note to the list if we cancel it uh probably by the you know during the weekend if there's no additional things Brewing that we would spend that time on does that sound reasonable okay and then the goal is to uh kind of get you know technical issues resolved so please if you have remaining issues post them in uh in the GitHub on the document to uh the issue section or you can suggest a PR and then um and then if once we have uh all of those issues resolved then we can move to kind of a working group last call phase where we'll do a working group last call and collect comments there'll probably be some revision and perhaps another last call after that um but we'll we'll be nearing uh the end of the you know getting the document published and at the same time as we're going through the issues um we can also I've been starting to post suggested Errata to the resolutions to the list and just want to make sure that"
  },
  {
    "startTime": "00:50:00",
    "text": "we get those aligned with the revision and then we can send those to the ad for uh resolution of the errata and that you know we can do and it'll be published I think sooner than the revision will be published so people can refer to those all right uh well everybody have a good day good evening and uh we'll see on the list and we have scheduled some time in uh Yokohama for this uh for emu and in particular this topic and we may be kind of getting this document off at that into the isg at that point in time but it'll give us a chance to meet and resolve any additional issues that have come up okay all right take it easy"
  }
]
