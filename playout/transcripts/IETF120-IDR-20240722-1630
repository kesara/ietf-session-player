[
  {
    "startTime": "00:05:16",
    "text": "of updates on the four drafts we had for VGPL SR. We took one of those already off the list. That is the draft pain draft that you saw earlier. We had pending adoptions for chair reviews If you're in that status, Geng Yitar Abris Wang or Mishra, those groups of authors, please talk to the chairs if you have some concerns, but we're in the middle of reviewing those. Lastly, early out allocations. We have two outstanding for John. One is the draft IETFB, BGP, inter-AS topology 16. We would"
  },
  {
    "startTime": "00:06:01",
    "text": "like John to review that. It's been sitting there, John, for about five weeks. So we'd appreciate it some attention. And we're working this week actively to complete the draft IDR 5G edge service metadata looks like I left out the S there we thanks to Jeff and I we were the shepherds reviewing it we expect that to be done and then go off the designated expert. There are three drafts holding for the publication of S draft IETF, IBR SR Policy, SAFE. If you're those, people, we're working with Diana to see how we handled that, but right now you're, the best I can do is sort of suggest that you keep in touch with us because you can't get an early allocation for a registry that's not yet created Any questions on draft? status? Okay, I think I did that fairly quick. I'll try to do the rest may take us. I may be at 15 minutes and actually minus on our count. Close spec. V2 we had a number of interms that were working intrams, meaning we were hoping for a lot of decisions and participants to talk about how we needed to break the big flow spec 2 meaning we were hoping for a lot of discussion and participants to talk about how we needed to break the big flow spec to IDR draft which is complete and useful, but the implementer said, could we have it? broken up in chunks so that we can implement a little at a time Why did they want this? Because we require two implementations That's a good sensible thing. The basis"
  },
  {
    "startTime": "00:08:00",
    "text": "uh IP flow spec for DDoS is a minimal subs plus that just carries over the V1 actions and filters and a user order. The second one is more filters. We looked at the same thing only trying to add dependent between filters. That's still in dIESGuise and we need some feedback because people say well, I'll give you an example of that. Maybe you want to set DCP and treat limiting and then redirect it to another port so you might be able to hand a denial of service attack and send it off to a post processor. If you do them in reverse order, redirect your not going to get to the DSCP setting or maybe the traffic rating The new actions for team three are really looking at how to extend and make consistently extended community actions and add what we used to call wide community actions but it's really the path attribute uh the community path attribute and to add an action change. Again, I gave you the example of an action change earlier instead of a filter change Filter might be I want to look at TTL and then IPJC destination and then source address. My apologies for swapping them And then you have a plug in for L2 and other things. Okay that tells you that it's a split and how the split goes. The IP Basic has the minimal subset. The second one look at looks at the extended filters the third and the filter chain TTL plus something else"
  },
  {
    "startTime": "00:10:01",
    "text": "and the last is the action We will continue to discuss the last two the purpose of the breakout in Draft Harris FlowSpec V2 more IP filters, is to do the general work of handling filter chains and then work on a template The same sort of thing is due for the IP actions. You will have a general concept of what is a chain of actions, set of DSCP bit, then set rate limit, then something else And the last we'll deal with in a DSCP bit, then set rate limit, then something else. And the last we'll deal with the non-IP, such as L2 what this is proposing if you have flow spec V1 drafts and add an ID, what we're asking for you to do is to create both a flow spec V1 and V2 draft if it's deployed, if it's not, please use V2 templates That was a decision made three years ago by the working group okay now I'm just listing drafts. Why in the heck are we doing this? Well, if you look at the listing of drafts there, we have a whole bunch of proposals for Phil filters. We have a whole bunch of proposals for actions doing redirect marking and we have a whole bunch of non-IP. So we're trying to categorize it, divide and conquer Okay, Friday we will go through that in detail and hopefully I have given you what we're doing A couple new ideas Should we have packet filters as well as link? data? Example of linked data might be color because you might use that to go to a particular VRF. And Jeff asked to"
  },
  {
    "startTime": "00:12:01",
    "text": "question, so I put this in thing should we make component IDs global or local to the type the type would be IP extended filters L2 filters I've given you a global thing. Again, we'll talk about that. And with that, I've managed a little over my 10 minutes Any other questions about status or our interim status? Please, if you want to talk about flows back V2, how talk to me. I'm the chair hurting that work Okay, next we go with Linda Thank you Give me a moment, Linda Okay, so I'll just give a brief update of the major changes to the 5G metadata past attribute draft So the just rehash the people who haven't read it yet, I hope you go ahead to read it past attribute is a new noun non-transitive past attribute to carry some metadata related to services attached to I-West router and just bear in mind that's only a few prefixes need to attach the pass attribute those services are like low latency services for edge computing services and there's a GitHub issue tracking and for people who have issues and who want to promote propose some new features, comments"
  },
  {
    "startTime": "00:14:01",
    "text": "please go ahead and go to the GitHub to put your new requests in there So since ITM 119, we just add a new sub-tob called ASCope sub-tob added to the section into the propagation and scoping the propagation is mainly to prevent unintended leaking to ASS, which are not supposed to process them Even though we had at the non-advertised community into the past attribute, but some routers may drop them So the AM Scope sub-TOV is attached with the pass attribute Basically list in-scope AS Linda, maybe you speak a little louder. Okay, is that better? okay so um there's a checking procedures for mismatch checking in the document which is just uploaded to today. I hope people can have a look of that as the new subsection added. Basically if a router received the past attribute and the right cannot doesn't recognize them AS value, it should drop the past attribute, not propagate to other routers There are some other changes from the mail list and GitHub We moved this this, there's a section explaining how does Ingress Router process the past edge attribute passed in is mainly for illustration of why we need to pass those edits attributes. So that's moved to the appendix and we added all the explicitly added the service, which can attach pass attribute. We added the section on the route chung consideration because"
  },
  {
    "startTime": "00:16:01",
    "text": "you don't want the Inquest router to change route very quickly cause issues, even though the service metrics may may change value quickly And for the security consideration, as I mentioned earlier, we make sure that route reflector will add a non-advertised community and it's set as non-transitive There's one discussion point I think Jeff mentioned at last IT set as non-transitive. There's one discussion point, I think Jeff mentioned a last IETF, about construing the population because not all ingress routers are capable of considering this service metrics So for those routers, they may not need to receive the pass attribute So there's, you can use IFC 46 to indicate the prefix that you're interested in receiving so that raw reflector can prune those ingress router who are not interested in receiving the path attributes So currently we're using CFI 133 which is allowed in obviously 4684 So you mentioned that we may apply a new Safi so we would like to hear the working group feedback on that if it is necessary here's the list of um iron registry we needed and the most important is the early allocation for the past attribute and underneath this past attribute currently we have defined seven sub-tLVs So that's it. We hope to hear more feedback and they would like to have earlier allocation for the past entropy. Thank you Any questions?"
  },
  {
    "startTime": "00:18:00",
    "text": "for Linda? Thank you Good morning, everybody. This is a reminder to please scan in the QR code if you have not done so. We use this to actually make sure that we get rooms that are big enough for all of us. And we'll make sure that we'll actually continue the case. So we're going to have a set of presentations back-to-back discussing things related to BGP finite state stuff, which seems terribly unexciting BGP version one shipped in 1980 as I was graduating from high school and the state machines that are inside of it have gone through different levels of revision over time Some of the details we'll talk about in this presentation have been very stable and over the course of VGP. And what we're finding is as we're maintaining the protocol, especially as we start adding more intrusive features, by getting these details right is itself not necessarily hard on the code, but getting the details correct and specification is challenging And so you got that lead focus on here so I can click Here we go Back up. So as I mentioned, you know it's been about 30 odd years, you know, for BGP at the moment. BGP 1 did actually specify the state machine And, you know, BGB4 is where we've been in our current six states of, you know, how BGP actually works right now starting in the effort to actually put out rfc 42 so"
  },
  {
    "startTime": "00:20:01",
    "text": "around draft 17 of, you know, very many drafts we added a bunch of stuff related to the rfc 4271 around draft 17 of you know very many drafts we added a bunch of stuff no related to fism for a lot of internal states at the request of the ad at the time Alex Zinnon and you know this is because we actually had some implementation interrupt issues that were being observed in the field 42 so news is what we actually shipped that gave us no deterrent set of things a couple of details overlapping terminology So the PGP state machine is largely in the form of a more state machine. It's transitioned are based on a set of inputs and don't depend on prior inputs 4271 doesn't have anything that resembles substates, and that's an interesting set of choices that we made at the time. We kept the original you know, six states that BGB started with way back of the day primarily because what we observe is that these are roughly corresponding what happens on the wires as BGP executes a state machine to come up That said, there's a lot of things tied to what we eventually call session attributes that represent some internal state and some of the events that are getting generated in there are based on you know something happening well given variables effectively true or false So pick examples of things that probably could have been represented using substates, you know, timers that are running as an example that could be represented or not as a variable. The delay opened feature, which is implemented by a significant number of implementations and is actually one of the original sources of a lot of problems for sessions coming up. TCP state tracking, we have to do some level of the no matter what did you say things like grace restart you know, sessions that are running in parallel, session collisions are another example of something that is effectively multiple instances of the state machine needing to cross cross-communicate with each other and the same thing's also true with reversion negotiation. And, you know, these details"
  },
  {
    "startTime": "00:22:01",
    "text": "about how multiple state machines that are existing in parallel interact each other is a little bit vague even in the current our also true with reversion negotiation. And, you know, these details about how multiple state machines that are existing and parallel interact with each other is a little bit vague even in the current RFC. One of the things that we spent almost no time in there uh dealing with which has impacted maintenance of the protocol, has been, you know, what happens when we're the established state. We just say we get the established we've done, you know, multiple pages of this very complicated physics only to have the actual interesting pieces of the protocol that would we get talked about at all You know, for state transitions, you know, we again have largely a current state when we actually get an event of some sort, which might be decorated by, you know, some attribute, We'll have a transition to next state. One of the things that we have chose to do in 4271 which is the source of lot of the churn and most of the textual noise in the RC is we chose to represent the actions that take place as a block of text that may be repeated and this repetition is where some of the errors got introduced in the RFC This includes actions like setting pieces setting or clearing timers changing session attributes, and of course the state change itself. For the actions, like I said, there's a huge amount of redundancy in there That was a conscious choice at the time, and what we found is that that's actually a source of, you know, the maintenance headaches that we have in the current, you know, format that we're defining in the RFCs right now and this is maybe our opportunity to start reexamining this sort of thing One of the things that we do have as a problem is that when there is redundant, text, this means that sometimes over the main maintenance of the text, you know, errors have crept in in So we're having this conversation because we're talking about maintaining things in BG where the state machine is being involved. So you know, from a lax box perspective, as I've mentioned, these six states that we have are basically taking their transition on standard BGP events, you know, based on stuff in the wire, open messages, notifications, keep"
  },
  {
    "startTime": "00:24:01",
    "text": "alive. The internal states that we're actually doing, we didn't really talk about what's happening inside the machine, no terribly well So question becomes effectively what happens in terms of sub-states, and if we choose to manifest these things the big six states we have right now, show up in the old mid module, show up in the current Yang modules, both IETF and Open Config if we're adding substates we're going to need some level of management exposure of these things as well which means some level of standard for such things Maintaining the text itself, as I mentioned, is a challenge no, the style that has been using given the blocks of the action text is here's a block of old text here's a block of new text. It makes writing diffs effectively very hard. IETF is a pattern culture and is a side effect now if you support some different sets of, you know, a given feature across a given vendor, given implementation you know, it's very tricky to know how the patches sort of line up You may have a conflict effect related So in terms of consistency, you know, we have a small number of things that apps absolutely have, you know, fism impact that were different levels of success, you know, in terms of clear about the changes BGB graceful restart you know, did actually talk about how things were actually impact It impacted TC state tracking it talked about you whether or not the release read resources, as we were talking about in 4271 or not We have outbound route filters built on top of route refresh and a consequence of that is you basically enter a sub-state where, you know, you're learning the rules for your filter, and once you've accumulated the rules, a refresh operation executes them this is all happening inside that giant black box called us established that we don't talk about very well and very similar the enhanced drought refresh feature does no similar types of substates We're having this conversation because we're actually changing things"
  },
  {
    "startTime": "00:26:00",
    "text": "and we want to actually be a little bit better about how this is done And, you know, we've gotten a lot of more scrutiny on this because, you know, people that pay close attention to detail, working group members like katon as an example drawing our attention to there's things that we're not discussing inappropriate level of detail. The places we've seen this is in the most recent send-hold timer work, very small change a set of things, but it caused an awful out of discussion you know, there's hundreds of messages over this thing, you know, much to lead this heartened authors that are working on the future the bfd strict mode feature again that doing some similar types of things we discussing that a little bit later The BHP quick proposal is making significant changes to how it be you know, sort of works for individual pieces of detail while trying to keep you know a very broad brush you know it equivalent of how BGP sort of looks today You know, how do you document the differences? How do you actually? document how the different sub-state machines work? Those are going to be part of the upcoming presentations And sort of finally on this sort of thing, there is potential work that we're looking at to actually take BGP to full standard. This is our chance to basically reevaluate now the maintenance choices we've made inside of the protocol and decide if we want to change how they're documenting So in terms of making things maintainable, like I said, even though we're doing more state machines, you know, there are things that we're doing that are unimpact or on input that are part of the events. No, this is not quite a mealy style state machine and if you're a finite state machine formalist things that we can do this sort of help us, especially for BGP-specific procedures Yeah, when we have common actions, we can base basically build templates for these things This means that it'll be a lot easier for us to see when there's commonality of a set of overlapping actions you're doing the same thing in various places This also gives us the opportunity to chain actions together"
  },
  {
    "startTime": "00:28:01",
    "text": "such that a template one can have an additional action added to it. This isn't sort of a enables our patch culture to maintain these things more successfully. And the know the pending operations we're looking at probably will make document the transitions for future extensions you know better Stylistically, we're still very much in, you know, trauma trough-style RFC stuff, you know, the text forms have gotten better, but, you know, they're still not great We do actually have some ability to do better in some places through the current RFC tools as an exam we can split things into sections in more clean fashion The F.T. Strict does this. In the HTML formats, we get the ability to do markups such as block quotes and no emphasis on various things to make the diffs easier to read. And, you know, finally, you know, we're also looking at, can we use EOML, both in textual format and graphical format which we'll talk about in the upcoming presentations, to actually put the state machines a more human-readable form? inside the RCs themselves That's the last light for this. Yep, we should go right on to the next So having given the introduction, we're going to talk about the BFD strict mode feature. This is a brief update relating to what we've changed And just as importantly, you know, some of the impact on phism maintenance and things we're looking at Just give it a couple minutes It's got to tell us you're not almost saying deck. Go ahead Let me focus under the window Okay"
  },
  {
    "startTime": "00:30:03",
    "text": "I'm just going to ask you a good next light I'll do this. Go ahead Here we go. So you should be able to use the clip for now Yep OK should be able to use the clip for now. Yep. So, a brief reminder, what is the FD, bi-directional four? detection, which I happen to have the joy of being the cheer of 20 odd years, is a very lightweight hello protocol that basically says these two systems are able to talk to each other. We've been using this no fast mechanism to augment other protocols to fail fast. That's the only job tiny tiny protocol we have a generic RFC 5882 that says, here's how you use BEM for things like control plane protocols, and for the most part it's pretty dumb. Once the session goes down, take your thing down fast. That's all it really says the headache that we have for any of these maintenance no feature is that we don't talk about when does the session for BFD go up versus the state machines for the other bits of the protocol. And the consequence that we've actually seen is that things most work, and much like 4271, sometimes you have edge cases where they didn't. And these are things that we figured out over time as a consequence what we've been doing is strict mode features across our IETF protocol speeds for the IGPs ISIS and OSPF have strict modes. And PGP here also is adding a strict mode as well. But this does as it regulates when the BFD state machine goes up and how the BGP state machine goes up along with it the problem is if they actually go up at different orders and one's waiting on each other the implementation A and implementation B could deadlock And we're stuck again Try now. There we go Have you tried turning it off back on?"
  },
  {
    "startTime": "00:32:01",
    "text": "again? So BFT strict mode is capability negotiated. If you both agree that you're doing this you're going to follow a rigorous procedure between two devices. Very tersely BGP should start its state machine before BFT goes up itself. So you don't deadlock starting BGP Implementations might want to start the BFD before BGP actually, before BGP gets configured itself. This allows that anybody that has a slower BFT to actually start the process so that it doesn't take too much time to come up BGP doesn't transition to open control until it needs to send that final keep line until BFT itself goes up This hasn't changed, no, in a good long time. Red version 13 What is the difference? Well, we've had no prompt, no from K-ton. It's like, look at the state machines as part of our various implementations. Did we get the details right? And the answer was no when we sort of do the formal analysis. We were trying to see if you're an open confirm, hold your breath before you actually send the keep alive. That's not how the implementations actually work and that doesn't reflect what the bgp states look like. So as a side effect, 13 says that we're going to add in sub-states for all the places where we would transition into open confirm And, you know, we're basically now in a BFT pending state. This means we're going to have to change the documentation for the code and review or implement to make sure that this is what we're doing In terms of the on-the-wire observable behavior, nothing has changed. We also did the work to document that when BFD goes down, we take BGB down with it. That was written down nowhere In terms of document status, we have, you know, early cheer feedback on this. Please take a look at the comments on the list and add your own. Implementers need to make small tweaks to the code actually impact display issues where those things now exist, and to verify against the state machine stuff that we've just spent our time working through"
  },
  {
    "startTime": "00:34:01",
    "text": "This is the time for the working group to take the look at these four details and ideally before IETF 120 tell us we're ready to go As part of the modeling effort, and I'm going to do a much nicer job than my two pieces here You know, what's actually changed here? Well, here's an example of a subset of the BGP state machine representing the transitions strictly for BFT strict mode so this is a way to visualize it, but when we sort of look at, you know, how do we represent our internal states? Well, as an example if we add the delay open, that really is the motivation for some of these no transition we're now actually exposing the fact that, well, delay open really is a sub-state itself and as we start documenting these details, BFD, BHP Quick is an example where we've had to re-examine these things, you sort of see that, you know, there's some hidden assumptions that are getting exposed and that uh had to re-examine these things, you sort of see that there's some hidden assumptions that are getting exposed, and that UML is a nice way to actually help us debug these things We have time maybe for a brief question if anybody has one. Otherwise, we'll move on to the next physical fism-related presentation Okay, I think we're ready for the next one That's right, I'm doing the first part So in general, both doing this together So again, this is both overlapping, no, the finite statement machine, and very specifically, this is an update on the BGP Quick work that we've been doing together, which Ingen is done most of the hard work on the finite state machine. She's now one of the ten people in the planet that understands the bgip state machine very very much So a refresh about why are we actually talking about a BGP for quick? Well, it's not just running normal BGP"
  },
  {
    "startTime": "00:36:01",
    "text": "over a quick stream. That's pretty boring You can run BGP over pretty much anything that looks like a stream transport. What we're doing is we're actually trying to leverage the thing that Quick gives us which as a core feature is multiple layers five streams. Why do we want to do this? Number one, the resilience model changes We get the ability to actually use different channels in VGP where we can actually send, you know, address families down an individual stream. And if the to actually use different channels in VGP, where we can actually send, you know, address families down an individual stream, and if there's an issue in one of them, unlike current VGP today we don't have to kill everything And this is a significant issue for operators when there's just a system framing error for the protocol So we're targeting this for resilience. This also lets us solve the multi-session problem We're instead of saying, well, we can't bring up the new address family or whatever, we have examples of a feature for dynamic capabilities that implement have found sort of an interesting set of problems well we we're addressing the issue a slightly different way by just simply saying you're allowed to run multiple instances of the GP as individual streams since each stream is per AFI-Safi and this also allows us to no handle our prioritization different in DGP. Individual AFI-Safis don't head a line blocks each other in the same way anymore other features that we're leveraging out of each be quick, as quick for BGP is that Quick does provide transport security as a different bit of features inside of it Minimally, this gives you a lot of the same properties you'd like out of TCPA AO or MD5 or, you know, IP sector, obviously not exactly the equivalent of security spaces, go see your favorite security people if we want the deep dives on it, but that said, it also gives us features like certificates if they're actually useful You know, this is something that will be exploring in future versions of the document A thing that we haven't talked about quite as much as the click supports connection migration"
  },
  {
    "startTime": "00:38:01",
    "text": "So if you have a circumstance, maybe a data center in environment where BGP, you know, maybe talking to some server and an instance of VM needs to pop up and move somewhere else, you know, you can allow what to happen with actually having to worry about, you know, moving the address in exactly the same way So a few terminology points We have channels being sent over streams what we actually care about for matthew quick connection itself is that on a individual quick stream stream number zero is the BGP control channel This is where the protocol is brought up and down and how notifications are sent from one device to another Everything else that we traditionally assume that giant box marked established is, you know, a function channel. This is where on an individual stream, in a unidirectional fashion, we allow BGP to send individual AFIs AFIs. And since it's unidirectional, we can actually fail one direction without taking the other side out So this is a nice actor diagram that talks about the usual way this things work So on their control channel, pretend that's normal BGP for purposes of getting the box up some of the details here that are interesting that impact state machines are things like graceful restart. The box meets to know on a restart basis what individual affy safes had been previously negotiated because those are going to run on function channels and you need the know to start the state machine for the graceful restart up front but the actual work as you see in the other diagrams, where we're starting individual address families, say, for IPV4 unit for the Graysville Restart up front. But the actual work, as you see in the other diagrams, where we're starting individual address families, say for IPV4 Unicast, ETLS, etc, are being run as individual instances on separate streams So this is where we turn it over to the goddess of fisms"
  },
  {
    "startTime": "00:40:00",
    "text": "Okay so if you do a search online this is the beautiful diagram you'll find that illustrating BCP fism as defined in RFC for So this picture does show you the big six state of in RFC 4271. So this picture does show you the big state, six state of the BCP finance system machine. It helps you understand the overall how it works, how it flows, how it transit from, you know, from a state to another state However, it doesn't give you all the details If you want to see like Jeff talk about, right, it doesn't show you all the sub-state. So what BCP fees them really, looks like is something like that Okay, obviously I'm now going to, you know, like you figure out the exact what is the way state what the substates This is too messy to look at. But that's real how PCP fizzum works And this one is actually the big in the BCP work quick, we have the function control channel. Well, control channel will have function channel. Control channel is responsible for set up the BCP over quick connection. So the finance state machine is the control channel is pretty much the same as the finance day machine defined in 4271 So that's include all the sub-state that's how it looked like so to you use you some, you know, something makes sense instead of looking at this, you don't even know where to look at their ground. So we can look at just connect state as an example So here we include a sub-state The text in the right the text box is actually the one I use"
  },
  {
    "startTime": "00:42:01",
    "text": "to generate this state there one And at the bottom is an open source online tool you can use to generate this diagram. So here you the right you can say I include sub-state, like delay open, hold timer. So how does state is the event triggered the state transition also various depends on whether you have the subs with sub substate you are in. So the number is actually the event number that defined in 4271 from 1 to 28. And for BOQ we added two more events for PCP for quick stream control And that's the event You can send. Yeah. Are you a assuming TLS 1.2 or T and that's the event so yeah are you assuming TLS 1.2 or TLS 1.3 with quick in these control channels? Yes, so for TLS 1 in these control channels. Yes, so for TLS 1.3 is matthew quick that's part of quick data definition. So for us, we are now changing that part So here is assuming TLS 1.3 for your quick. Yes. That might be useful to add in these diagrams Okay. Meeting someplace in your document specify your quick TLS version. Okay So this one is the established state. So in the current version of the draft, we actually integrated DCP Grispo the established state. So in the current version of the draft, we actually integrated DCP graceful restart, 4724. Also into the fism because that's one changed the"
  },
  {
    "startTime": "00:44:01",
    "text": "BCP finance machine. In the East tablet, state you can see the sub-state whether your GR is in there or not that will when you have a new TCP connection comes in depending whether your GR is enabled or not, the collision. How you deal collision will be different So I'm now going to explain all the details here, but all can take a look at the draft if you are in interested because the time limitation right, so it's going to take a long time to go into all the details so the square bracket is actually the action that trigger after you receive the event So besides, not just the state transition, your problem also need to, for example, delete, you know if you are transition out of established state, you may want to delete your, the routes you calculated, all reset some timers So and these two are the state machine for the function channels because function channels can only be started after the control channel already reached its tablaced state So the state machine for the function channels jared mauch simple because we have unidirectional functional channels, so we have ascending fism and a receiving system So the function channel always start from users pretty much send an open message and start that opens matthew quick stream, and then you can start send the update so for the sending fism it's we start from connect stick directly. And for the receiving fism, because"
  },
  {
    "startTime": "00:46:01",
    "text": "it's always waiting for an open message right it's doesn't actively send an open message. So we function channel, for example, we don't have delay open anymore. That still works in the control channel, but not in the function channels So the overall, the physical open anymore. That still works in the control channel, but not in the function channels. So the overall, the fism in the function channels jared mauch simpler, but we do have them separated and they are different so if you are interested please read the and okay these are the actions. So I try to merge some of the very similar actions defining 4270 I think they essentially mean the same thing but the language used at some places are now very common consistent. So we'll use this opportunity to try to clean up the language a little bit And so right now in the draft, how the try to clean up the language a little bit. And so right now in the draft, the, how the finesse the machine, that session is still following the 4271 step finance machine that section is still following the forty two seventy one step but we are thinking you know maybe later somehow we can figure out a way to include those pictures in the draft, even in the appendix that may help people to understand this is a different. So, and of rape marker that's actually defined in 4724 for the purpose of PCP graceful restart But even just in 47 actually defined in 4724 for the purpose of PCP grace for restart. But even just in 4724, it's recommended because it's helpful for overall convergence So for us, since we have a fresh start, we make this normative language, we make it should always send end-up rear marker to its peer. You know, you can, to each indicate the implementation, the"
  },
  {
    "startTime": "00:48:00",
    "text": "completion of the doting update This way it helps the jotting conversion and it also helps the overall performance So Yeah, we're having me a internet issues. Yeah, so I think that's how so I think that's all. So we have a GitHub repository Can I move the mouse? Okay always have the latest version of draft there. You can also track issues there I can make one final comment and then. And now we questions Yeah, so the throw in one comment before the comment questions hit, a couple slides back where Yingjin demonstrated on our slides, the text that is used for, populating the state machine, that is actually the input for it tool. One of the discussion points that IDR may be the rest of IETF may wish to consider is we have the options that potentially embed the state machines and along with the SVG into the draft. One of people at the mic has a nice RFC that actually has very nice pictures of an SVG that may have for additional comment Tony, we have two minutes for discussion briefly. Yeah, just a met observation Tony, PG-Ur from, um, dealing with this stuff quite extensively This is a different level of complexity than like the initial toy machines right And pictures are nice, and the text is nice and probably even textual tool may be nice, but in my experience if you want this thing to be implemented and not cost years of interrupt problems and fixes and the ratas I would strongly suggest to write the reference implementation of caused years of interrupt problems and fixes and the Rattas. I would strongly suggest to write the reference implementation over a highly formalized finance-state machine library. We can talk about this stuff, right, how this stuff looks that actually generates out the pictures and the"
  },
  {
    "startTime": "00:50:01",
    "text": "text of all the actions from direct experience. Easy, no but this level of complexity otherwise it's extremely hard to manage it because you have implementation, you have the pictures, you have to text, everything will start to go out of sync. I know Jordan's work on some tool we talked about DBA and all the different approaches, if that's stuff would be easy would have been solved long time ago by research right? And the original, the UML guys as well, the illusion that you're draw pictures and it generates codes. And that was one of the biggest abysmal you know, failures in modeling attempt So maybe good offline discussion but my observation is without a good reference implementation of an abstract library that generates all the stuff you'll never keep the stuff in sync with reality and people will just come off and do all kinds of weird stuff you find in the field. Thanks. Yeah thank you for the comments even for this too i actually tried several tools and took me several iterations So I think so far this one looks the best to me. Maybe I haven't found the back yet, but this, well, we'll keep trying but this who points which will the best to me. Maybe I haven't found the best yet, but this, well, we'll keep trying, but this who points which we will try to also commit the text is actually the one used to generate this picture umlet probably probably right it's it's still the best tool i think i have extensive experience with this kind of stuff the problem these things getting updated all the time hard to keep them across the platforms you know I live the dream enough as well, yeah yeah hey keyur patel Arcus speaking as a working group member This draft is pretty long, so I have reviewed everything, but one quick comment that I'd like to make is if you look at Quick as a transport, there is a general pushback particularly from stateful versus stateless security standpoint so minimally what you could do is augment and beef up the security"
  },
  {
    "startTime": "00:52:01",
    "text": "section and put something in regards to that and just beef it up as opposed to just saying, hey, this runs on TCP now it runs on Quake. Yeah, I totally upgrade great so that's a note to your past AD is also a co-author. So far, this year we have spent so much co-author So, yeah, we have spent so much time on this finance machine, so without there. Right, you might also in the security, look at the known TLS 1.3 issues and address that also as well that was my reason for the earlier comment Yeah. I mean, generally compliments. I mean, it's incredibly tedious, difficult work, right? So thanks for doing all the stuff. It's very relevant I think Quick is a very good candidate because of the multi-channel especially which nothing else provides yeah provides We have one from short time online, Shortup Maybe Okay, thank you for, you know staying awake for us for finance state machines. This is a interesting in some of the academic session, but it's actually very important stuff Shota, you can go ahead Okay, it appears we have a bit of a problem We'll go on to the next presentation I stop this one"
  },
  {
    "startTime": "00:54:15",
    "text": "Okay So. You saw? Okay He's fixed Can you guys hear me? We can hear you. All right all right so this is an update on the extensions for supporting the generic metric for PGP this is the incremental update and the one that we have given in the last IET. My name is Rieri Sangling I'm from Juniper. I'm presenting this on behalf of my co-authors. Next slide, please Yeah so it's going to be a short agenda I'm going to provide a quick recap, talking about the updates to the draft and then just talk about the next steps Next step please. So the problem is to provide an end-to-end intent-aware path across multiple ASS Today, RX3-11 provide this capability, but it only supports the default IGP, which is the default IGP metric Now, now that the is a need to provide an end-to-in metric, beyond IGP default could be delay based or bandwidth or any administratively defined the metric types The existing EIGP attribute cannot support and if we try to extend this we get into"
  },
  {
    "startTime": "00:56:01",
    "text": "a problem with discontinuity and and it would be nice to have multiple metric types aligned with what the IGP registry develops so what we're trying to solve is next step, please So the proposal is, as we presented to the last IETF, we want to leverage the next topic capability attribute, NHC as defined in the draft, it's a working group document. It's an optional and transitive attribute. It gives a nice way of providing a next top level scoping Accumulated metric is going to be carried within the NHC And here is the format as defined in the draft Specific attention is to do the do the flags which carry the different means for detecting or documenting discontinuity or if normal what is the status of that So next slide, please please The a metric procedures have been defining the draft more clearly. I just want to hide highlight few things. Intent can be specified with more than one metric type. So the NHC can carry more than one a metric information with that I just want to highlight few things. Intent can be specified with more than one metric type. So the NHC can carry more than one a metric information within it. And as the non-originator, when along the path for every for each of the A metric received, unlike the base, NHC which talks about reconstructing the entire set of content of the NHC, what we are asking is the non-originator router should read the received a metric and then update it. It is needed for accumulating the metric across the path by adding the cost to the next top. And if it is normalized, update it it. It is needed for accumulating the metric across the path by adding the cost to the next top. And if it is normalized, update the flag. And if you're not able to understand the metric type, then we have to set the flags in the in the D bit has to be set to one in the metric flags Next type, please"
  },
  {
    "startTime": "00:58:03",
    "text": "Yeah, the discontinuity just elaborating the types of discontinuity that can be seen in the network The draft talks about the three types If you are using NHC, then type A and type B will be automatically between detected, depending on which route is upgraded to supporting NHC and which router is upgraded to support A metric. For the router, that does support a metric, then the type C will automatically be detected because the metric flags will be set to the D fit in the D bit in the metric flags will be set and therefore all the different types of discontinuity will be deterministically determined with these procedures next time please Yeah in terms of best path competition, the, we could have the existing deployment with AIGP carrying the IGP default and a metric can also have the IGP default So if they are the case, then they are comparable On the other hand, if the A metric has different types of metric just to break the tie recommend lower metric to win and overall, the implementation can support a local policy to specify or override the preference Next time please Okay, so here is where some of the discussions that have preferences next time please okay so here is some of the discussions that happened on the on the alias so um regarding the discontinuity. For discontinuity, comes in because some of routers are not subpoenaed and therefore they don't support either Nextop capability or the a metric, right?"
  },
  {
    "startTime": "01:00:01",
    "text": "so nHC is option and transitive so if the router that is originating this a metric, gets advertised and if the border router is according to the NHC draft the border router must filter the NHC as well as the A metric if it is going to go beyond the common administration is boundary and this is one way of preventing the leak and let us say it is not implement and because of this transitive it gets leaked to the neighboring ASS. This is outside of the common administration right and the receiving peer, the EBG peer, can implement a local filter on the incoming. It can drop the nhd attribute That's one manually filtered. Or if it is not done then it will go within the neighboring AS until it hits ASB or some router that's going to be detecting the NHC and given the NHCs next top level scoping that attribute will be dropped on the floor and this is how the lake is detected and nevertheless, any router that's going to be analysed in the amateur will not be able to use the A metric because next stop scoping will be will be will be will fail will fail and then a metric will not be used right now within the common the a metric because next stop scoping will be will be will be will be will be will be will be will be will be will be will be will be used right now within the common administration domain just one couple of within the common administration domain if you have uh discontinuous path propagated to the ingress the ingress can figure out how to do just one couple, within the common administration domain, if you have a discontinuous path propagated to the ingress, the ingress can figure out how to use those paths either it can discard or put a low preference if you have multiple path is discontinuous another one is continuous or can use the type break but the draft is recommended that all routers within a domain must use a metric because the best competition will be, has to be"
  },
  {
    "startTime": "01:02:01",
    "text": "consistent unless you use tunneling to reach the any of the next stops Next time please So all of these, what I presented here has was discussed in the last IETF session The work group adoption call is done and there is some comments. Any more comments that people have either now or on the list? or most welcome This on the side, some people have expressed maybe capability as a overloaded word in the entropy label draft This is just an request to the authors to see whether that name can be changed. I'm just proposing characteristics, but any other better word would would be helpful That's all I had Any questions? A quick question. Speaking as a non-working, as a questions A quick question. Speaking as a non-working, as a working group member, NHC is not transitive across ASAs particularly where the next stop is over overwritten on an EBGP session. So how are you, I probably have missed this, but how probably where the next stop is overwritten on an EBGP session. So how are you, I probably have missed this, but how are you incorporating AIGP equivalent matrix across ESS? Okay, you're, I may be, I may have misunderstood. This is transitive, but then at the boundary, the NHC will, NHC is going to say within, within the ASBR? or at the ASBR for the ABGP, it's going to allow the NHC Okay, we can take that offline, but my question was very specific across EBGP sessions where next stop are overwritten you know, that capability sort of ceased with exist and how do you then accumulate? IGP matrix but I can take it"
  },
  {
    "startTime": "01:04:01",
    "text": "offline sure Ketan, go ahead ahead So to answer, Kethan Tara Likar Sisco, so to answer Kyo, this question, not non-transitive. The text in the draft says it is kind of it's not just sent across unchanged, it is refra or repackage or re-originated is the term use so even for for example entropy label in a multi-domain deployment where the ASS are under the control of the same provider, it does cover the mechanism for conveying the ELC Okay, that was my question. Yeah, the same. Yeah think then that means is that an implementation has to enforce to that outside the scope of protocol meaning it's more an implementation dependent thing where next off flips but implementation has to carry that NHT into an accumulated conversion and then send it reinjected. It's the same for ELC as well. Precisely like a non-trans community is getting re-injected across ESP ESPounds, right? Yeah, it's the same for ELC for ELC as well. Precisely like a non-transitive community is getting re-injected across ESPounds, right? Yeah, it's the same, it's same for ELC as well. That's right. Thank you Thank you, Shihar. We'll go to the next presentation Chengueh Have you here on me? bit louder, please please"
  },
  {
    "startTime": "01:06:00",
    "text": "Can you hear me? Yes, we can Okay Hi everyone, this is Taiwan-Lew from New H3C. I will present this draft. This draft is about BP protocol extension of SR policy for composite kinetic path Next page, please So background, as described in UFC C, 19256, Composite can be passed act as a container for grouping as our policy a regular S-R policy candidate pass output traffic to a third of segment list Well, as a policy, can pass the candidate pass output traffic recursive to a set of essay policies on the same head end end As you know right finger, the SS Policy 100, which has a composite candidate pass, referenced policy 1 and Policy 2, by colors in the composite candidate path as this described in draft IPF PCE multi-paths the PC already supported this disputing composite candidate paths However, there is no similar mechanisms in DPSR policy This document defied the extension for BP to dispute S-R-Polis carrying composite candidate pass info Next page great S-R-Polis with composite candidate pass information is expressed as below In the Kiti Pass of SBA S.POLIS constituted"
  },
  {
    "startTime": "01:08:00",
    "text": "as a polys attribute sub-theory is defined This theory include Cara weight, and folding class The color is used to reference the sub-esopolis the folding class. The color is used to reference the sub as a policy, and the waiter is used for loading balance and then the folding class papers different types of traffic Next page page The constituent, as a policy sub-tioe has the following format An optional single-weight sub-tier which is defined the idea as a policy and and and optional single per flow for the in class subtero which is defined on this document Next, please please Here is a specific use case the parent as a policy policy a specific use case. The parent, S.R. Policy 100 has one candidate pass which is composed of policy A, POTP B, and the policy uh it refers this policy is by color and map specific traffic to learn using folding class So it's really different folding class carried different DSAP values in the package packet The voice traffic or VIP customers is forwarded according to a low delay pass of ESR policy and other traffic VIP customers is forward according to the path of ESR policy speed and all traffic of non-WIP customers is carried by SR policy"
  },
  {
    "startTime": "01:10:01",
    "text": "City 6th. SR Policy 100, PolicyA and Policy Policy Policy can all be distributed or BP. When distributed, as a policy, policy 100 the subpolice A, sub-police, B, and the sub- as a policy C are referenced by the colors in the composite path The folding class subcure is used to map traffic with different DSP values to the suitable path. Next page page Rachel, thank you. Any questions? comment are welcome This question is fair Katyn How does this composite relate to what? you've done in the SR Safi flat? draft? Keaton, Talauleu, says, go to what you've done in the SR Safi draft? ketan talaulikar Sisko. This would be an enhancement So it is adding, let's say, a new functionality or new capability on top of that safi SAPI. Thank you Any other questions online or in the room? Okay, we'll go on to the next presentation Hello, thank you"
  },
  {
    "startTime": "01:12:00",
    "text": "Hi, you're a little loud back off from your mic, please It's better? It's still loud Try reducing your volume on your your set Okay. If you could move your microphone you know, further from your face, that may help yeah but now further up you're too quiet now It's better Away from face But for the closer to your mouth, but away from your mouth Yeah. You are pup, p that's what we're trying to fix. Okay is that better now? It's good enough, thank you. Good enough Okay, this is feng yang from China Mobile, and it's about time range wait for BGPS SRV6 policy Co-author is me and China wang Ling from H3C next page peace So why we do that, the motivation is some observations the one is the internet traffic model is graduate changing with cloud computing we notice that an increased amount of data is to be transferred to cloud for processing. Examples including the intelligent vehicles about 8 terrapids of data for each use test card daily and a film production and also some astroids observation about 38 gig per second"
  },
  {
    "startTime": "01:14:00",
    "text": "So all of these applications are some characteristics The first one is data these applications have some characteristics. The first one is the data that transferred is quite quite And the second one is all of the tasks are time bounded requiring the network to transfer the data as quickly as possible so the problem I may notice that that current data network, the network to transfer the data as quickly as possible. So the problem we noticed that current data, one is the network data center is quite, is start to deploy the 800 gig big technologies where, whereas wine area networks still rely on the one gigabit links So there is the bandwidth is unmatched, so we rely on the ECMP and lag such kind of technology to to meet the demands of the large data transfer from the data center to data center center But the problem is that when the large amount of data transfer over the from the data center, 800 gig data center to the 100 gig bit links in the one links the existing flow-based load balance mechanism may result in the uneven path load without properly scheduling of those kind of data transfer tasks The congestion, some kind of congestion leading to the efficiency and maybe sometimes the degree service quality"
  },
  {
    "startTime": "01:16:00",
    "text": "may happen so so the simple idea is we proposed to schedule a data transfer task and enhance overall transmission performance performance We suggest to introduce a time-way-scatron attributes in BGP to pre-configure bandwidth resource allocation in network such as attributes in BGP to pre-configure bandwidth resource allocation in network. For example, we propose to have the time range attribute for the weight So we can see in the bottom of this this slides you can see uh beginning there are several flows from the B2C. One is over the bottom link, the other one is over the BAC link. So at the beginning, the BAC link is not fully fully utilized because there are another flow between the B.A fully utilized because there are another flow between the b a and later on if the b a flow has been finished, then we can fully utilize all of the bandwidth between the BAC so that's simple example just illustrate what we want to do with this weight time-ranged weight So why we do that? It is because what benefit we benefit we the time-range weight. The first one, I think that is well quite, well, makes our configuration work more"
  },
  {
    "startTime": "01:18:00",
    "text": "effective because all of things has been done in advance. The other one is better is we can we will not rely on the SDN controllers while the all of the under, on can we will not rely on the SDIN controllers while the all of the under the task is run run so the last one you're running out of time you might go to the anything you want to cover in the subtail Okay, that's the last page It's what's the data format we have we proposed that all, I think think any comments ideas Caten's gone to the mic, and so does Lijian uh katan delaware cisco Question, there is work being done in the time variant routing, working group which also deals with you know, things, metrics and other characters in the routing protocols that need to be changed or tweak as time elapses Is this work? kind of along the same line, would you? would you agree yeah yeah so i mean if then uh just a feedback maybe look at uh how it's being done there and try to kind of have an alignment, perhaps Yeah. Warning to people who are at it or going behind katen in the mic ac will probably not going to get to you due to time i suggest you send your comment to the list John, as the AD will let you go ahead"
  },
  {
    "startTime": "01:20:01",
    "text": "and Luzeng will let you go. I'm sorry that we don't have more time. Go ahead Okay, thanks. Yeah, my question for the speaker was, or anybody who knows has this been talked about in spring already? because my immediate reaction is when you start telling me that you're going to add weight to the segment list, et cetera That sounds to me like a segment writing architectural question and only secondarily a BGP protocol question Thank you And Li Zheng Yes, lixia zhang from Huawei I never based on your description in the use case, I want to know whether there's data transmission time can be predicted because you're used the asset policy with start time and end time. I want to know whether the data transmission time can be predicted. Thank you We're having trouble hearing you. It's a little overrunning on the mic. You might also send your comment to the list. Thank you. Okay, thank you Yeah Hi, can you hear me? I'm clear Good morning, everyone. It's a pleasure to be here. Today I will be talking about extension of link bandways extended community Next slide, please To cite the stage, let me first discuss the bottleneck of current BGP link bandways BGP link bandwidth is now encoded in existence"
  },
  {
    "startTime": "01:22:00",
    "text": "community attributes using 32B discuss the bottleneck of current BGP link bandwidth. BGP link bandwidth is now encoded in extended community attribute using 32-bit floating point tab. There is a deviation in data type conversion, such this mode is not user-friendly, especially when the routing policy is used for bandwidth matching Next page, please Therefore, to overcome this problem, we extend the link bandwidth based on 64-bit a new type of IPV6 address specific extended community attribute that is considered to represent 64 64-based link bandways Meanwhile, we recommend considering both transitations and non-transitive scenarios Additionally, only the format of link bandwidth has been modified in our document The processing mechanism remains consistent with the link bandwidth document At the moment, the sub-tag of transitive has already been assigned with a value of six where the non-transitive has not yet been assigned The 64-bys link bandwidth is packaged as an 8-octite unsigned integer The unit is bytes per second The AISN stands for the autonomous system number of the router, which added the extended link bandwidth community. Next slide, please From this table, we can clearly see the difference First, the encoding is altered to add we can clearly see the difference. First, the encoding is altered to IPV6 extended community. Then, the transitive situation is added and the format is changed from 32-bit floating points to 64-bit unsigned integer Next slide, please As for the implementation information, the open source project RFR routing"
  },
  {
    "startTime": "01:24:00",
    "text": "has implemented this draft Next, please Thank you for your attention more comments and discussions are welcomed Jeff, you have the mic Jeff and Sir Envidia, quick comment The problem statement is not entirely correct The bandwidth community is not meant to encode the bandwidth available It's meant to provide ratio between highest bandwidth available and lost one So I'm not sure you really want to encode exact bandwidth You're really interested in the ratios because as you go down the system normalizing this value, it's not bandwidth anymore. So as you go through REAP, eventually into 4 forward, bandwidth is not interesting. That's number one, number two, the functionality is why this value, it's not bandwidth anymore. So as you go through REAP, eventually into forwarding, bandwidth is not interesting. That's number one, number two, the functionality is widely deployed. There's millions of devices running this today so updating it will require really serious consider And even so there's for our implementation practically, it's used in a way as defined today and if you want to change it, you need much more meat on the bonds than what's in the draft Any other questions or comments? We will go to another presentation on link bandwidth Reshma, you're up next Good morning everyone. My name is Reishma and I have a with Jennifer. I'll also be speaking about the link bandwidth extended community along with Satya Mohanthi and on behalf of other others Next slide please please"
  },
  {
    "startTime": "01:26:01",
    "text": "Skimming through the agenda as you know this is a draft that already exists We will see what is the current status of the draft a birthside view of what are the works going on in this area I would like to present the goal of this effort then walk you through the proposed solution We want to see what is the current trend existing and what is the next step for this effort Next slide, please Okay, so the link bandwidth extended community is an idea adopted wrap long since 2009 and it has expired since 2018 So this is an effort, it has been implemented, but expired and not standardized in this draft it is the extended community is defined as non-transitor. That is at a AS boundary, this link bandwidth community would be dropped The current version of the draft, it does not go through all the use cases It mainly speaks about the intra-AS case how this bandwidth community is treated in an EBGP scenario has not been stated or these use cases are not, has not been discussed So why are we discussing this again? the problem is different implementation have implemented this differently So some implementation has used the transitive version of this link bandwidth community and others, the non-transitive version so there's a deploy it has been deployed in both versions, and there is an interoperability issue Because of this, the idea shares has requested the working group to look into it and this is part of that effort too bring in interoperability. Next time so let's take a website view of what are the other work going on this area so one of it is the eVPN based solution which is presented in BES. This work"
  },
  {
    "startTime": "01:28:01",
    "text": "introduces a new transitive ding bandwidth community, which uses a new format And if you go through the draft, they explicitly say that one of the motivation for this draft to exist is that the transitivity type of the original idea draft is non-transitivity Another work is the DEA So this is this works over the already adopted link bandwidth community What the DMZ does is it aggregates the link bandwidth community on a particular router And the draft talks about enabling knobs to accept as well as advertise the non-transitive link bandwidth community at our EBGP name border of an eBGP neighborhood enabling knobs to accept as well as advertise the non-transitive link bandwidth community at the at the border of an EBGP neighbor. So what this draft does is it uses the ambiguity in the 4360 so where it doesn't clearly state how a non-transitive community should be advertised at the EBGP border. The next is what? we have already just heard from lee it also introduces a new format Eminich also carries the link bandwidth community It has a per next stop scope, but that is out of her discussion now. Next slide So the goal of this whole thing is at this effort, is to achieve interoperability we want to revive and keep the procedures simple so that when a receiver is updated, the code just interrupts with backward compatibility The draft should cover all the use cases inter- interiors, all we should state and see how it is covered define proper error handling and conflict management and revive the existing draft Next time In the interest of time, I'm just going to just skim through this I'm just flashing this we can have a more detailed discussion over it or we can come back to it. So I've given, we have this discussed how a sender should behave. It should be able to contact"
  },
  {
    "startTime": "01:30:00",
    "text": "should be a configuration driven of transitivity time receiver should be able to receive both the type of transitivity Next slide We prefer the lowest attached in case there multiple link banner community. We can discuss why later and if there is the values are equal then she the lowest attached in case there are multiple link-banded community. We can discuss why later and if there is the values are equal then choose the transdotae type. Readvertising, what's next of self is same as a sender so it's the same procedure without any change in next stop It is less reflecting, so there should not be any change in the link bandwidth community Next time please Jeff bandwidth community next slide next slide please uh jeff have we froze Next slide Yeah, I think the slide moved. Current rise slide. Yeah, I think the slide moved. Current, right, sorry. So we see deployments that are both transitive and non-transitor Juniper currently supports both the sending and receiving of both transitive and non-transitive link-bindwood community We are also seeing other vendors incrementally supporting transitive and non-transitive version. And there are ongoing discussion on link bandwidth with a lot of vendors Next slide so what is the next step next step for this effort so basically like i said revive the draft, modify the existing draft make sure there's backward compatibility and interoperability expand the draft to include all use case We also invite participation in this effort We would like to request an interim if we needed to discuss the use cases and what the proposal idea is so or we can discuss it in the forum We request other vendors to participate in a hackathon to demonstrate this interrupt which will law to the"
  },
  {
    "startTime": "01:32:01",
    "text": "standardization of the solution. And also, like I said, 4360, the extended community draft should, RFC should also have a clear indication how it should behave at the EV solution. And also, like I said, 4360, with the extended community RFC should also have a clear indication how it should behave at the EBGP border. Next slide Thank you and I invite questions. Yes, Jeff So thank you, Rashma, good presentation Just as a brief clarification, the 4360 thing that Rushma is mentioning is that in general the non-transitive link sorry non-transitive BGP extended communities, the procedures is unclear whether a router and an ASBR is allowed to throw it over the wall to the adjacent AS, and this is what's leading to some of the confusion out of the best working group. So while this impacts link bandwidth, it's not necessarily the only thing and we may we should actually look at this document for this Jeff. Jeff, that's your media this impacts link bandwidth, it's not necessarily the only thing, and we may we should actually look at this document for this. Jeff. Jeff, that's your own media. So many of us here try to regime we may we should actually look at at this document for this. Jeff. Jeff, that's your in media. So many of us here try to rejuvenate the draft over the last six years with now success right? And the real use cases went into cumulative drafts that's progressing and best for what reason, right? So my practical consideration again, it's deployed at scale. The cumulative behavior is mandatory. That's a real use case that are deployed. So building kind of two drafts in parallel, doing different things is counterproductive. I would rather the DMZ, the best draft to progress rather trying to rejuvenate this one, because it's kind of proposed the same thing that the other draft does, but trying to also adjust to initial draft I don't think it's productive really which dies are merged and have one document or use one that actually built on real requirements that is deployed And again, it deployed in practically tens of thousands of devices today today Yeah, so Jeff, hi, have you"
  },
  {
    "startTime": "01:34:00",
    "text": "Good morning from here. So essentially that's the final goal, I think Those two drafts will converge at some point. It's not India independent. This is just, this has been a pinpoint for 10 years. And I do see most vendors, they are moving where they have the capability to send either as a transitive or non-transitive and that's why that document was returned to us in the first place right so eventually that's the goal so i'm in complete agreement with you these are not competing traps traps So as a user of this technology, my main goal is to avoid non- non-backforce compatible additions. Yes, that's why these the knobs are there and this is something that has not been written down this is just to bring to the audience what are there. And this is something that has not been written down. This is just to bring to the audience, whatever was written to us and how to work on that to make it a competition So practically we need to figure out what merges were and again, I think the best draft has real use case why this one is more abstracted Yeah, that one certainly has more want to draft the progress defining different problems space. It should be one document and one working group that is you know kind of allows people to continue working on it Thanks. Sure I've got two minutes for coming Kalaraj, you have a time for brief comment Yeah, I just was trying to say that the current draft that we're trying to review, it's kind of more deployed I mean, there are a lot of use cases. So we're trying to cover all the different use cases that are deployed including the EVP and DMG one. So it's good to have the standards document that got acquired, revived, and incorporate all the different deployments EVPN, non-AvPN, and the standard link"
  },
  {
    "startTime": "01:36:01",
    "text": "that's used in the data centers for L3 IP poverty Thanks, Kalaraj And Jeff, to your point, we do realize that reconciling the protocol work we're doing now to this document or at least the intention to incorporate into this document does need to be addressed with the use case documents that are over and best. So we will be having a follow-up conference with the best chairs about how to best reconcile all this work. No, the goal is to get the job done for everybody in a consistent fashion Everybody already has this stuff in their network. And if you got more than one, then vendor, you already have problems with this stuff So we're just trying to solve it for everybody Thank you, Rashma. Thank you No, Tim Lise Chawali, this job place about the source metric distribution based on BGP in CAS network Next page page So background in CAS network as shown in this page page. So background in CAS network as shown in this picture as described in soft IT CAS for framework Sega SMA is required to collect service metric routine in the ingress for order should be based both network and the service network There are some problems with the test network as followed First, the service metric period change unlikely is 15 existing routine information. Secondly, service identified by this"
  },
  {
    "startTime": "01:38:00",
    "text": "and CIS ID and layout are imitation in person land through the existing address family Certainly the period update of service metric need to avoid impacting the existing routine The period update of service metric required efficient mechanisms to improve the transmission performance. A level-based alert mechanisms to improve the transmission performance. And therefore based on about the issues, we have the following thought Use the extended BP to transmit the search metric Our region, the BP's information and the powerful extension capability We can also exist an independent address family to just meet a service metric without affecting the transmission of our routine information We can define the flexible NRI to efficiently achieve the learn transmission of service metric We can implement it on-demand subscription to each on-demad transmission of enable on-demand transmission of service metric next page Let's take look at the new address family the NRI format of the source metric address family is TOWA and there are three loops types are defined and then type 1, type 2, and type 3 Type 1 represent the social metrical registry route which is include RD and CSID. Type 2 represent a source metric subsection"
  },
  {
    "startTime": "01:40:00",
    "text": "route, which is included RDI and SISID Type 3 represents the resource metric update route, which include RD, SISID, CISID the gateway also service metric Type 3 route include both the key and non-key data through this design a service method router are embedded in a single GP update message, enhancing the packing efficiency Next, please This shows how the new source address family works First is registration operation. Igor has known the standard registration route to R and are forwarded registration route to O ingress node And secondly, is the subscription operation. Ingress node received a sole request and the substand node. Secondly, it's the subscription operation. Ingress node received a sole request and sent a sub-scretion route to R the R and are forwarded the subscription route to the corresponding igres node and the igres node and the igres node responds and updated node to the ingrat node. Next is the period update operation Igor send period update service metric route to the subselector Last is the unsubescapitor operation When the folding table agent, then we draw subscribesen route to sub-scapital operation. When the forwarding table agent send withdraw subscriptial to R, and are notified"
  },
  {
    "startTime": "01:42:00",
    "text": "the corresponding equals of the node withdraw Egress no longer send a period to the update to the ingress Next page, please A summary of what the current solution had accomplished First, we define a new BP address family to dispute the computing service metric information include a variable Lens NRI related to distinguish between key and non-key paths A metric that changed the PRF are placed in a non-key part A set of the next hopper for so is metric router to zero and place the alert a non-key part, a set of the next hopper for sewage metric route to zero, and place the service associate location address in the nanky pad pad We established mechanisms for subscribing and published service metric The disciple is a the follows to first to minimize the impact of the existing rudder advertisements. And so is the site identify are not limited to any caste IP address Certainly important the efficiency of sending PRR period service metric update Lastly, we send on demand and control the the propagation scope of service metrics metric Next page, please Finally, let's take a look at a specific use case of"
  },
  {
    "startTime": "01:44:00",
    "text": "source metric advertisement advertisement In this case, two service is in of the same computing service are located at the gateways of two different egress forwarder Use data, use the user at the gateways of two different egress forwarder. Use data is sent to the best service instance based on the metric information at the ingress for water One and two represent the register operation of the service by equals for water one and the 3 and 4 three and four type one looped represent the registration operation of the service by igres forward two Five, six, seven represent the metric subsquerace operation of the source by the increase forward forward The 8 represents the metric update operation of the source one, source instance, one by egress forward for water. Data represents the metric update operation of the service one, service instance one by egress for water, which is sent to our device and then the 10 the present the ARR received all service metric update, loot, and the form to the ARD device. And the 10, the present, the ARR, received all those metric update and forwarding them to the Ingress folder received all those metric update and forwarding them to the increase forward. Well, as since it will pack the route with the same attribute technology Efficiency improved the sending efficiency efficiency That's all. Thank you Any questions comments are welcome Any questions in the room?"
  },
  {
    "startTime": "01:46:03",
    "text": "Okay, chung-won, we don't have any questions in the room. Thank you for your presentation Yes, thanks So as a final reminder, if you have not scanned in for the QR code, please do so so that we can for your presentation. Yes, thanks. So as a final reminder, if you have not scanned in for the QR code, please do so so that we could actually get a room of an appropriate size I think this takes us to our final presentation for the day Hi, everyone Hello, we can hear you Okay, and before I start, I need to make it clear that there are some problems with my IETF account and I cannot log in so I temporarily borrowed this account to give a speech I am painful I'm glad to share this draft for you you BGP extension for Turner Equip Point Next slide, please In general, AI training may have fewer flows, but most of the fluids are elephant flus with a stronger burst, so it's easy to call suggestions using traditional like untaplot balancing methods currently the direction of traffic scheduling for curses on load sharing individual packets of the same flow which requires reordering based on the terminal equest point information from the remote end So this document described the master of point through the BGP protocol Next slide, please"
  },
  {
    "startTime": "01:48:00",
    "text": "and have already provided non-isernet master, which effectively address the challenging encountering AI application scenarios And it will meet the technical requirement of AI sorry of of uh, of, uh, of, uh, of, uh, of, uh, of, uh, a network architecture, uh, in terms of, data forwarding this article introduces implementation scheme that you see this non-isernet method as a firm of internal inclusion for Ethernet patterns We refer to this network architecture as open schedule fabric OSF There are two important parts in the slide. First is about OSF free framework, two rules in OSF framework. One forwarding node and the other is in conclusion termination node, which we call OSF forwarder and OSF ingress, egress rooter A second party is about control plan, uh, ingress and egress nodes will establish which neighbor and transmit the necessary in-capolution information for the OSC forwarding layer Next slide, please It's a quiet, this slide has lots of content so let me take a brief introduction for audio slide has lots of content. So let me take a brief introduction for outbound interface information and data packaging completion information In an OSF network, data forwarding involves"
  },
  {
    "startTime": "01:50:00",
    "text": "processes such as licensing authorization and resamble with multiple devices playing different rules including encapsulation news and forwarding news And data packets are segmented equally sized data streams and transmitting in a spray-like miner within the OSF architecture This approach addresses the issue of load balancing but it introduces certain issues in the process of resembling the data stream into Ethernet package Sorting problems the inbound interpollution node needs to allocate the green numbers to the packet based on the outbound interpollution node interface information plus the outbound incomplete node to resemble the data streams into Ethernet package using the unique sequence number information associated with each interface This requirement needs the extension of interface information in the routing information as part of the conclusion information within the OSF's control plan. The outbound interface information consists of two parts the device ID and the port ID for data packet in completion information when the data plan adopts non-Ethernet technology, the packets needs to"
  },
  {
    "startTime": "01:52:00",
    "text": "be converted into an Ethernet packet app the app This device needs to design a local item to its own local internet internet in conclusion information and past it to other devices through control protocol. Meanwhile, the incapacity devices will carry this ID in the high information of each non-isernet packet allowing the de-incalution device to quickly locate the incorporation information based on the packet higher information. Therefore, the country plan means to be extended to carry an encapsulation to all and devices. These IDs only have practically significant on the producer Next slide, please In order for network host to achieve data communication, through the OSF network architecture, we choose EGPE EVP as the extending the EVP internal inclusion tabs. The necessary encapsulation information for OSF forwarding is synchronized across the interior and communication between hosts is down through internal forwarding similar to eternally rather than hop-by-hop IP forwarding A new tab, TEPT tab, to PGP terminal in conclusion attribute terminal tabs"
  },
  {
    "startTime": "01:54:00",
    "text": "Next slide please A layers recommunication example, established full mesh PGP neighbor relationships among leaf nodes as we can see, leaf four, collides local routine information and auto-caps outgoing interface information synchronizes routine information to other BGP neighbors and then LIF-1 outgoing interface information synchronize this routine information to other BGP neighbors and then lift 1 will generate the tunnel route Next slide, please In this slide, we take a proof in terms of data for layer two communication example, actually Mike Learning and Mike Tivore micro-synchronization um, uh, lift for, uh, microdrease of host 2 in the internet forwarding domain and synchronization to other nodes through PGP, eBP, eBP, to route The necessary encapsulation information for the OSF network Just like I said, device ID and the part ID. Then leave one will generate the layer two units table, a Layer 2 Unicast table Then how to establish a bridge domain? We will utilize extended events layer two unicast route. Then, how to establish a broadcast domain? We will utilize, extend EVP-TAP3 routes to include new attribute different how to establish a broadcast domain, we will utilize extended EVP in Type 3 routes to include new attribute, include a new attribute"
  },
  {
    "startTime": "01:56:00",
    "text": "carrying programs member part information allowing devices to determine which egress interfaces need to replicate broadcast packets at the ingress in completion mode For example, host one's project packet is met in the broadcast table on live-wind device and Live 1 replicated to the broad domain. Next slide Um to the hardware and software development is honorary, with plans to conduct to conduct interoperability testing in Beddance life in 2024 in 2014 Yeah, next slide This is a the last slide. Any questions or comment? comments? We will continue improving the OSF network architect. Hey, keyur patel, Arquez This is somewhat interesting work speaking as a non-work, just as a working group member. We have been working also and we have certain, we have a documenting process, but the way we are doing is a little different from what you are doing so would love to connect and make sure if we can converge on a single document document Yeah, it's true. Thank you so much Just to your Nvidia I think you should clarify motivation your document"
  },
  {
    "startTime": "01:58:00",
    "text": "The reordering of packets is function of the receiver not of the switch that is in the middle. You cannot do the switch, simple steps, especially if track is encrypted. Your statement that packets need to be reordered before fed into application, layer is incorrect. It's an HDM packet if you're talking about AI traffic Each packet has a pointer to location in the memory So practically, you can place it without reordering. It's widely implemented implemented With regard to what you're signaling is you said it could be either unicast to Type 5 or Type 2 All you need to know, you already know, you need to know how to turn consolation which in most cases, VX-LAM could be Geneva, could be something else. So practically, the information already is there The rest belong in the NIC and the host It has nothing to do on the switch, so your motivation is not tired clear and reading it. It's not clear. You are trying to do something The host, you are trying to do something on the switch and how please clarify what you are trying to achieve Any other comments? Well, we've hit the end of our time, just about on time. Thank you everyone. We will have a session on Friday It is the last session of the day. Join us at that time The only benefit is after the session Supposedly, there are goodies in a goodbye meeting We will also have online, so if you are in the middle of the airport, join us that way Thanks again, bye-bye Exactly Yes, use the cue Please. You didn't He's special"
  }
]
