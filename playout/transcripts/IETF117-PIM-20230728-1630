[
  {
    "startTime": "00:00:24",
    "text": "either way, that's why we decided to do this draft. other other number, I guess, groups are asking what it would came up in the siding, like, what have you? Why what multicast protocols are being used? Why why did you guys use either one sure, like, they have a history lessons. Yeah. excitement about it. But the story is like why did these things get built? pure pain to presentation using dense product for source discovery. Don't let that excuse me. biter. resource discussion. Excuse me. I guess. Oh, we wanna get started. Let's get a little let's keep going. taking your pictures. It was, like, 15 years Yeah. Exactly. And it and the getting passed that we need to understand why we needed to get it. So -- Yeah. Yeah. I agree. Yeah. Forget the social stuff. Hit it. started soft strong. Alright. Okay. I'll stop. Yeah. Can you bring up the slides? Yeah. Yeah. Welcome to IETF 117 Welcome to San Francisco. you've been here the whole week already."
  },
  {
    "startTime": "00:02:03",
    "text": "Yeah. So, yeah, let's get started here. glad some of you made it here on a Friday. Okay. Next slide. Yeah. You have hopefully seen the note well. So Yeah. Please keep that in mind. Next slide. is our agenda. Any any comments on the agenda? This Alright. Next slide. So the working group status So we have these Doctor documents that we really need to do something about I see I accidentally say one of them is on the agenda today. That's copied from lastitf. And my yeah. We need to do something about that. We published another young model You also have a couple of graphs in the edit RFC editor's queue, so we are getting some work done. Then we have these piece documents, like, MLD, This And we did a working request call, but no one no one responded. complete silence So, yeah, we'll try to do another last call and we Yeah. We need we need at least someone to to respond for us to progress them, I think. and yeah, you all are pretty familiar with these protocols. The main thing is to check what what you're at changing, you know, as we progress to this and those changes make sense. Okay. Let's see. Next slide. possible. Yeah. I think I think so. Yep. Yep. Okay. Then we have this point to multi point documents that are more or less ready"
  },
  {
    "startTime": "00:04:03",
    "text": "for last call, I'm thinking. But, yeah, we're not discussing them today. Also, a pin light to stuff discussed today. Then they have this John Prune list extensions to PIM. That went the last call, but our several comments there. I think the draft needs some Major work before it can progress And, yeah, adopted lessons learned since last IETF, and that will be presented today. And Yeah. Ours is 8736 pissed that also is an RC editor's queue. to remember what that is though. It's my documents, but It it it just had to make some changes to the Ayanna language, I think. It was just a very minor change that was gonna import for process reasons. Okay. think we can go to the first for any questions, comments, Okay. Let's go to the first presentation, I think. Okay. Cool. Oh, don't you"
  },
  {
    "startTime": "00:06:00",
    "text": "is there a button like shared documents? I'm sure you're Right. and Mhmm. Alright. It's okay. Yeah. Okay. So this draft was adopted recently. It's a draft that was also presented in Mbonddthisweek. to get some feedback from them. and It's a draft to provide some lessons learned on multicast over the last 30 years. there was feedback from a side meeting last summer about, you know, what heck is going on with multicast. We have a variety of protocols. Why aren't we using certain protocols anymore? Why do they get dismissed by people? And so this draft is to address that topic."
  },
  {
    "startTime": "00:08:00",
    "text": "So, really, again, our purpose for this draft is to help us understand that previous development work that leads us to where we are today. and maybe this will help us understand ongoing efforts. We started with DDVRP. because that's really how multicast started. on the Internet. We have this dis inspector algorithm that's being used in a flood and proven manner. to share route routes and We included some information about mbod in this late Not yet. Not yet. multicast backbone in this latest draft, and So that's really the where we start with the draft. Just kinda talking more about DeepRP and how it doesn't scale that well today because of or it quickly didn't scale because of the higher bit rates and the larger deployments of multicast. And then we get into IDMP version 1 and why we needed the version 2 and the version 3. and of providing leaves and importance of providing being able to join certain sources And then we discuss dense mode and sparse mode and all that. Next slide. These are current topics that we are addressing Next slide. the final slide. So we did add biter per Lenny's in request, and he's one of the authors. did, as I mentioned, add a bit about m bone as it relates to the admRP and this week the inbound participants suggested to include MSDP and session advertisements So we will do so for the next for the next 8th. Yes. We'll continue to evolve this draft. We'll probably be working on a sometime. We are working on major issues. lessons learned, don't plan to include all protocols, but we do include them them the major ones, I guess. and we appreciate the comments so far. We're trying to include them."
  },
  {
    "startTime": "00:10:00",
    "text": "And any comments, and I note towards this in the queue, and I'll Greg also has some suggestions as well. Hi. Go on a second. Eli, on in the document, I provided a a bunch of my proposal and things that are felt would be useful. Did any of that make it into the document? Not yet. But one thing that we did add that you brought up was the m bone And so we included that. We didn't really discuss that much. So we're we discuss that more. So we're we'll we'll start including more from your -- Well yeah. Let me know whenever I can help on on on those topics. Thank you. Right. Shepherd breaking things. Here we go. and associate route views. I'm just talking to you about this one too. like, that this problem comes up all the time. It is Mike Mike Mike. Okay. This this problem comes all the time, which is why the draft is coming And I think It just hit me now, which wasn't when I came to the mic board, but hit me talking here here in Torless that in among these people were also asking about other protocols. If we don't stick them all in, at least give them a section, these questions are coming up The point of distractions has stopped this or at least point them to a document that we to Durdish. We all share the same narrative at that point. So something to consider. Even the sideline stuff that happened, like, why did that happen? explain it might just be a paragraph. ordot. Right? It'd be nice to get a document that's gonna be of what I came to the mic for is say that I attempted this once before word. not more than once. In the beer cloth, we wrote a problem statement. and we also wrote, hey. This is probably a problem statement. In that I wrote a narrative, from Darion's epiphany to beer. and it goes through at least my view of how we did that transition. So It's an expired graphed. wanted it to get published because I wanted the story out there so we can point to something. But in the context of beer, the ADs didn't think this really fit as something before. for dot."
  },
  {
    "startTime": "00:12:00",
    "text": "It belongs, sure, Nbo D real So The stock has expired, but it's still accessible. It's graph IETfearproblem statement. feel free to steal any of all of it or none, whatever you think fits. he wanna roll me in to help this together. I'm in. Great. Thank you. Sounds perfect. just wanted to say thanks for putting this together. It's really valuable for somebody who's just trying to learn about different protocols out there and we use some and not on So thank you Yeah. Thank you. Nate. Okay. Great. Let's move along. input. hungit. Hi, Mike. Can you hear me? Yeah. Okay. Uh-huh. But I can't see your screen. Yeah. You'll get we'll get ready eventually. the Go ahead. Okay."
  },
  {
    "startTime": "00:14:00",
    "text": "Good morning. I'm I'm from Ericsson. Nolan, we introduce some updates about this UAPM unicast, a young model, nice fees. you know, last year, I we we have got some comments about this draft. So we made So I made about 3, 3 3 updates about this draft last fees. craft update while we we think the Manikasa sauce arise from I know the IP default has 2 IP I know the IP address. So that both IPV for an IQV 6 could be covered next fees, please. Update to We have changed the the multicast group address from RTAP's IPV for multicast group address 2 IP manifest group address. So that, both IP reform and IPV Six could be covered Again, let's please At this rate, We changed we changed the maximum response time from your from the industry to to in 16, and this is to keep consistent with the query, nice response time defining the agent, PMLD, Yamodo, Naples specify the maximum time allowed before sending a respond sending a responding report next week. This is the whole a hierarchy about this in your model."
  },
  {
    "startTime": "00:16:03",
    "text": "You need in this nominal way, it's time I have a EVPN data Either includes the 3 new EVAP 3 in your e vapor pin, rules to carry the AGMP membership reports. from tab 6 to tab from from tab 6 to tab 8. Now the the SMAT root and the multicast the memory shaverly pausing root and the Medica's lives in growth Okay. 996 Okay. That's all. We'll welcome any more comments Thank you. Yeah. This is Steve. So Well, one question though. This is a about EVPN. Right? So have you presented this in best or are you trying to present it there? Last I can have a meeting where I I have sent an email to the best chair but at It's a it it wasn't placed on gender. So but I have reviewed the web the webpage about the best best working group. I see that I I saw that this stuff has it being set as related related draft. again there, in the past web page. Yeah. Yeah. I think we need to talk to the best chairs you know, but we're where where the document fits and if they agree, it fits and best, then hopefully, they can get it on the agenda. Yeah. And we've tried we just haven't got a response. So maybe we can have our"
  },
  {
    "startTime": "00:18:02",
    "text": "Local best expert help us bridge that gap. Makamana. No. I mean, I'm not I'm not sure if the document itself would not be in in pin or best. Right? given how it's adopted I think we should be responsible for for finishing it. Right? I think the the decision which probably is that I think it's late. But Just escalate the fact. Right? I mean, it is about since the status is that is the best working group. to to do the yen for for these components of the particular service, the service is invest. So seems like you know, shouldn't be too hard to get the work group shares to make sure that it does does get the upgrade Right. Yeah. We might possibly do it with you by the way. here, but it makes sure it at least gets reviewed by people that now we p EVPM. AC LIND and Lavin. I, you know, have been following best, and they have a significant back blood. up documents, at every phase, including AD review where He's pushing back and complaining about the quality of the document coming to him for a review of So it would be good to do it here if you could. Now Having said that, When you think about MVPN, the the the m VPN Multicast or, you know, EVPN Multicast it's more about the BGP encodings than it is about multicast. really, you think about it. I mean, for the most part, you know, you know, you get that you know, the 651360 or 65 1365 14, those 2"
  },
  {
    "startTime": "00:20:00",
    "text": "they were done. in invest. But if you could do it here and get review just as a matter of finishing it sooner. that would be the reason to keep it here But if you're just looking purely at where it should go, I think it's more about MPBN and EVPM than it is about are the the base multicast capabilities. Thanks. if we don't get a response from them you think it would be bad form just to issue an adoption call in this working group and just see where it ends up. No. I don't think so. Okay. I mean, I mean, you know, like I said, they have at every phase from from documents they wanna They wanna adopt to last call, to once waiting for AD review the error. significant backlog. Okay. Okay. heard it got a little heated in there too, so I need to watch that video. Alright. Stick. It's a Yeah. That'd be good. Not on mine. it was just normal. maybe strengthen Oh, okay. Okay. Yeah. Hi. I'm sticking with us. present this new draft that I rock recently. So we have this PIMFodding mechanism in source discovery, which is an see some from some years back. and And I started to give actually implementing that and you found out that it's nice to have some extensions to that. which I'll talk about now. Next slide, please. So So in att360 4, there is a TLE for announcing a source as as"
  },
  {
    "startTime": "00:22:00",
    "text": "this source source address, group address, and hold time. And that's fine. But then We are thinking now that it can be useful to sometimes announce some additional data like parameters or something about the flow. like, bandwidth for org. or flow the rates packet rate might be one example. Not going too much into that, but if I rather knows what what the the rate is or less overflow. it can avoid joining an interface the upstream interface there's not enough available bandwidth. Or in case the ECMP can make some better decisions about where to join, for instance. But the main thing is if you want to add some info about the flow, there's no easy way to do with the existing TLV. and I'll explain that on the next slide. accept this. So so this is the TLD that is currently defined. So So it's basically just group address, source address, and hold time. If you now have multiple list TLDs in in the packet, they want to add some material we say about bandwidth. it's not that easy to say If those are separately, at least, how you know which source group address co spin, which with TLD, for instance, So the purpose here is to and reduce the new TLD. Next slide. and So the idea here is to have sub TLDs. So, basically, It's a new new TLEs that can have sub TLs. And that means that, you know, you can have the main TLE with the source and group address, but then you can have a lot by this small metadata or or whatever about that flow if you want. And then if it's just one example, like, it could be other stuff that you might want to announce as well. Next slide. And for the the flow rate,"
  },
  {
    "startTime": "00:24:00",
    "text": "some tealuminum, proposing the format you see here. There is an ARCC from long back for was that? pop counts. phenomenal stat. And with pop counts, we actually had the idea that you can instead of joint upstream, you can include some information and one of them is is I forget who this is used in pop count, but you specify the band if you have available or or flow vendor for something. I'm not quite sure. But at least this format is exactly the same as in the pop count RFC. So it's just some fairly efficient bio encoding the flow rates. Sure. Sure. slides. Okay. Charles, So was just we we we we had this actually in running code. in in the end of the nineties. with the SAP announcement. Right? Right. Right. you're basically creating a weighted fair q q for anything that was an SAP, and where you joined, where you're on the train, to guarantee the bandwidth for the flow relatively speaking. Not absolutely. And and so I'm I'm wondering, you know, the more information we put in there that's kind of also helpful for diagnostics or so, the less I feel that's a good thing for him. But why don't we simply use SAP and just revisit what were the criteria why we ultimately said we wanna get rid of it and at But, you there seems to be, you know, more more diagnostics that don't really necessarily may maybe best fit for for him and we have done SAP. So -- Mhmm. Yeah. I know. I was thinking about that. I don't really I don't want to turn this into a new SAP kind of No. No. But I think maybe maybe it's it's it's a draft on how to you you at SAP key to this existing feature"
  },
  {
    "startTime": "00:26:01",
    "text": "What is the delta? What are you missing down? No. It's interesting to to consider, I agree, and So at least for for this, I'm mainly thinking you know, what information is useful to their routers to make decisions or, yeah, probably troubleshooting. also, but don't wanna put in too much slack. You know? circle SDP has the more, like, human or SAP. you know. interface, you know, information for, like, the and the user as well. Well, I think the the main difference was what if I remember correct, the SAP was meant to discover this session. So it was on its own group, Yeah. Yeah. And if we're here now, just say, you know, we wanna give more information about the session to the session members Right? then if we we just figure out how we put it on the same group, And and that would be a a change in SAP, but then it would you wouldn't call it Tim. It would be Right. Right. So so something something in that Okay. Sure. Yeah. Okay. Thanks. This is Dina. This might be a terrible idea. but you might wanna make a subfield encoding that says it's JSON formatted. and you could put ask you Jason we did this with Liz, in there. I everybody says it was a bad idea. I use it all the time. It's so flexible Anyways, it could be and it's gonna yeah. Then you're gonna have MTU size problems, but The upgraded recommendation, of course, is called Seabor. That's the binary version of it, but you still are as flexible this Yeah. Or at least I I would say the yeah. The main thing is you want to get the TLV concept in there. so that we can do all kinds of self extensions if they want to. Hopefully, the JSON is the last TLD of Right. kinds of"
  },
  {
    "startTime": "00:28:02",
    "text": "There's a lot Yeah. I'll I'll think about that. think that's the last slide. Can you check Yeah. Yeah. some modality, I think This IDR may bring more idea. Maybe something many, many of things like dinos that many things will be inserted in this TRV But I think that's This has a product away to can make many more information into the domain. So I think atom might the SMART makes this, but I think we Right? Discuss more about what we will put in information that. Yeah. Yeah. Yeah. Yeah. I'm certainly open to ideas. We could possibly define some more TLVs in here. Of course, we can also do future ICs with the new extensions. I remember in the pop count. This is Dino. I remember in the pop count draft. Shep and I struggled quite a bit about merge points. And is information aggregated? Is that a good it's aggregated for scale, but then it filters it for usefulness so you know, that's the big problem with putting it in joints and putting it upstream on it through. Yeah. Yeah. And I kinda like this, you know, where the information comes from the resource is kind of more natural -- Yeah. -- in a way. Okay. Yep. Thanks. I got a quick question. So You you are referencing rsa8364, which is experimental. Yeah. Are are you planning to make this if this were to be adopted, is this something that would be experimental as well? Yeah. I think it has. Okay. Yeah. The other thing, though, is the you know, we have running code and and have done also testing of that RFC so it could potentially"
  },
  {
    "startTime": "00:30:01",
    "text": "be progressive for post standard, but ideally, we should have maybe 2 implementations before we do it. Do you want an induction call? Yeah. We can. It's gonna be a little early. I don't know how many people read it. gonna do a quick little bowl. Sorry. I struggled on the question, but how did you get it? Okay. Thanks. So we take minutes from the video later. So just for that, sake. We have 9 in support of adopting this draft and one against and we will take it to the list. Thanks. Okay. Hennania, pf in forward."
  },
  {
    "startTime": "00:32:01",
    "text": "Hello? Yes. Think I got it. this that's not it. Let's try it again. We had this one loaded. Right? him swimming for multiple options. it is uploaded. Yeah. Hi. This is Ananya. from Cisco. I'm a first time presenter, and this is the first time this our draft is being resender. So, like, in the previous slides in the previous presentation, Stick talked about the been flooding mechanism. So this is all also one of the extensions that we can do to that. It's elemental RFC. So today in BFM, between 22 routers when they exchange PFM messages, These messages are flooded On all the links, between them. So let's say this these two routers have a them enabled on these links between them. a PFM message that is that is intended for the other router, it goes on all three links. and, obviously, the other 2 the black links, they would just be dropped because of RDF checks. So this problem can be further optimized is is 2 routers, have, have, multiple pin enableings. on with each other."
  },
  {
    "startTime": "00:34:03",
    "text": "So the proposed solution for the problem is that we width we can also implement RFC 6395. which which which helps a router identify another PIM router, on all the links. So, basically, if it has multiple links with the same router, it can identify that these messages are coming from the same router even though they are received on different links. This can be done with RFCCC 395 where we exchange a router identifier as a pin hello option. And the optimization for the PFM forwarding enhancement would be that if we see a router that that is advertising this hello option. we can check on all the links if you are getting these messages from the re same router. So if the same message is received on link 1, 23, we can say that this this message is actually being received. being sent by the same router. Of course, we would need a new hello option, but it it will only advertise router's capability that it is able to optimize this. optimized CFM. messages. So if a router is advertising the router ID and the PMM Optimization Hello option. It can it can optimize the FM message exchange. So the way that we will do it is the proposed solution for this is that if we can choose one link per BIM router pair. and we can ease the RPF check. We can relax the RPF check on the other box."
  },
  {
    "startTime": "00:36:00",
    "text": "given that both of them know that we support this optimization. as well as we have a unique router ID. So this this would help in reducing the number of PFM messages. that are being exchanged between 2 routers, which have multiple your neighborships are different. links. Any questions or comments Sun is LED. I think that from this solution, If all the nodes in the domain support this capability, think it's up to the idea. and all the duplicate packets will be this chair. patch. if There is no support this capability in the command. So I think the duplicate is still existing. Right? So I think it maybe we should consider how to make sure all the nodes can support this capability and we use it Otherwise, I I think it may and may have some is at 1:30. Yeah. That's my OP. Yeah. I think that test case is actually covered in the draft, but, yes, I will look into it. where if all nodes do not supported how we should react I have uploaded in the graph. This is Dina. To support that idea, should should should PFM have a capabilities message that. And the only requirement is everybody has to support PFM first And then after that,"
  },
  {
    "startTime": "00:38:00",
    "text": "any new capability in the future can use that mechanism. Don't know. And how often do you send these general PFM messages? That's that Sorry. Yeah. So, yeah, I can comment here as an offer. So, yeah, at least what it currently says, we use, you know, PIM Hello to announce this capability. to neighbors. Yeah. Yeah. Because right. Yeah. So Well, at least, yeah, the at least the way I see it is this optimization can be used ful even if it's on some routers. don't think there's any harm in in doing that. But you get full advantage of this. You would want all the routers to support it. But but, yeah, I I I have have thought about this. And from my previous presentation, I mean, the one I sent it. The sub TLv The problem there is if you want to use the new TLV, definition, and then you don't know whether all the routers support a new TLV or not. Right? And and then Sorry. I don't know if you know what I mean, but But you're right. But, yeah, with with my draft this, like, you have since you're replacing the old TLV with a new TLV. Yeah. But that's bad if there's at least one router somewhere in the domain that doesn't port the new TLB. So then I have the problem that you're saying it would be nice to have some kind of domain, my knowledge, what the capabilities are And if And PFM could be used for that. knowledge in 90% support the the feature you want can the future be turned on? Is it at all or nothing? It gets complicated. that. Yeah. I also had this idea that with Pim Hello, so you can know if your neighbors support something. you could maybe say, you you float this information with a new TLV with a Bandwidth and whatever. then if along the way, if you find out, oh, I have a pin neighbor that doesn't support the new TLV."
  },
  {
    "startTime": "00:40:00",
    "text": "can you translate the message, like replace it with the old TLE? so the neighbor neighbor will actually understand it. Yeah. No. They all the the new no. The new guy that supports both TLVs. can replace the the new with the the old so the other guy can actually get it. but it gets complex. So, yeah, maybe we should think about some kind of domain wide capability for PFM and And, yeah, it could be know, it's something you don't need to announce all that often. So We can think about that and Yep. And to answer your question about how often these messages are shared. It's upon source discovery, and they're also periodic. So if we do implement this, we can reduce the number of periodic messages sent over in the PM domain. Yeah. And and, yeah, if anyone is interested in working on a draft for PFM capabilities that would be cool. By the way okay. Thanks. Yeah. We should focus on this draft. adoption. Yeah. What do you think? Yeah. to get That's true. Just the main pushing is some under I'm ready. but it's up to you. AC Lendon. Lavin. Hey. It's been some time since I've looked at this in detail. So if you don't have this and there's been running on, say, all the parallel links. The data the data plane multicast packets will also go all overall 3. You need this to optimize the multicast flows as well, don't you? Right? v, v, v, Yeah. Okay. It's not I mean, you're not just optimizing the flooding of you're optimizing the actual the the more significant. multi cash flows. No. This this is just the announcements."
  },
  {
    "startTime": "00:42:01",
    "text": "control things. -- announcements. But -- Yeah. Okay. Let's say you don't have this. And there's a flow in your running PIM on all of them. Will it only select 1, or will it will it go on all No. So the yeah. one way. Okay. So the Yeah. So you you will join you will pick a single interface to join the flow. Yeah. Yeah. only thing here is that you unnecessarily send additional messages and just do my processing. There's no pruning of this control mess like, a downsmooth with. they're sent on all links. By the way, the ASR has the same. So we just started an early adoption goal just to get an idea Okay. because it's eventually, I'm guessing we'll be taking this to the list same question I had for Stig. Is this intended experimental or standards track. think it has to be experimental because the main So state says he thinks that needs to be experimental since the main RC is experimental. I think the draft right now says standard track just so you know. But okay. So Right now, we have tenant support and then against. So Regular. Alright. Tourless you're up. if I can find it. Yeah. Alright. So this is"
  },
  {
    "startTime": "00:44:01",
    "text": "hopefully, one of the last once of our documents to move our standard track set of protocols forward. Next slide. So a quick reminder. r s 11 12 kind of viable of multicast specifies IP multicast host deck, not the routing protocol, also includes IGMP version 1. which is the primary issue because we would like to make iGMP version 1 historic but we obviously don't wanna make RFC 11 12, the rest of IP multicast host deck. historic, so that kind of raises the issue. and the idea with 11, 12 is to remove IGP version 1 update the text accordingly with all the newest protocols IgMP2b3 and also mentioning of IPD 6, which was invented or got into the IPF and it's, like, 10 years after 11, 12, So there is no mentioning IPV 6, and so there's not even a real RFC specifying IP multicast for ipv6, and then we can also first mentioned that we are now calling this ASM IT multi customer versus SSM. So this is all what the draft already is doing last time, we had 2 very useful fintechs. Next slide. So Alvaro was concerned about as keeping the text as much unchanged as we could, which pretty much meant that, like, a lot of documents 32008. there is no normative must and should and Alvaro was worried about 82100ipv6 itself, having had a lot of trouble. with that. Now I'm not aware of 112, having had any trouble"
  },
  {
    "startTime": "00:46:01",
    "text": "with the missing normative text. And so we've been 34 years around with the OFC. could be 6 only 6 years. So maybe, you know, Multicast, people are more agreeable with the RRCs we've written However, I went through the text, identifying the applicability of normative notions must should. and change those to The normative one, I think, Think think think think looks fairly simple, should be fine. also added the normative language disclaimer text of of course, And I would I would think this this should address Alvaro's concerned. So will use the standards text. Right now, my logic was I'm applying the normative text to all the packet interface, description sending and receiving multicast packets the need, of course, to support IGMP. v2v3, US version, and MLD. I haven't used a capitalized must and should where talks about the higher stack the socket, the application facing elements because we don't have history. but I'm open to do that. I'm only aware of a single working group who may have done that. So we can check with this. So But yes, so the must ensure the packet facing stuff I think it looks easy. Next slide. So issue 2 was from DNO, if we move 1112, and, hence, IGP version 1, to historic. It wasn't clear from the text in version one of this draft, what would then happen to IGMPP 2 and P3 implementation should they all go back and remove IGM PV 1 code and kind of recreate the biggest mess of multi ups on the Internet. That wasn't quite of my intention. right, but how do we make this perfectly clear and Of course, we don't wanna change any of the existing implementation and also not any of future IGMP or IgM p sorry, IGM PP2, V3 implementations. We just"
  },
  {
    "startTime": "00:48:01",
    "text": "wanna avoid something we've seen even as as little as several years ago where their host implementation that just had IGMPV 1, and they feel perfectly happy. because, well, it's a full Internet standard. Right? So that's what we wanna how do we do that in the text? Next slide? wanna take a question or not? Sure. Sure. Sure. Sure. It's just a quick data point. It's it's not a big deal. We just discovered this week that there's one OS that doesn't support IGB at all. So, like, the question you typed Let's hear it. Who? chromolus. Oh, wow. Okay. Next slide. I was not for the recordings. Right? So Okay. So the version 2 now specifies that the dock supersedes well, 1112. Sorry, typo. for all content except for appendix A. So 11:12 stays normative for IgMPV1. and we make 1112 historic. So it's obvious and and then, of course, the explanation. So there are 2 the nation's actions kind of normative changes and then changes over 11, 12, I have that in the next slide. So pretty much the idea is in IGP b2andigempb3b3 we're referring to 1112, for IGM PD 1, that stays the same. The fact that your backward compatible with the historic version, isn't hurting ILMPV2 and V3. But all the other documents going forward, or checking what are you referring to? Are you really still talking about IGP V1 in new RFC text, you shouldn't. So any new text that's written other than when it's referring to would go to this new RFC. Right? So That's basically what the text is trying to do. so that we have no changes in the status quo of what we're actually doing. with our product holds only the change in status of IgMPV 1 being retired to its start."
  },
  {
    "startTime": "00:50:02",
    "text": "k. So right. So then logistics and everything. So there's this template text block before 2009, that there is a text that the IETF doesn't have copyright over I changed the references. So that not everybody needs to remember what the numbers for our RFCs are, My favorite pet topic packets with the multicast source address are not any form of IP packets. They're invalid, so felt was nice to add such a sentence, And then yeah. So the explanatory text is now number 8 is new normative changes. So that is kind of, I think, most important for later ISG review, right, so that they're clear what normative changes are, which pretty much summarized what I was saying about IGP p 1. And then the I was looking to other biz documents. So when I moved all the existing explanation about the you know, text changes, into a section from an appendix. So but I I I there weren't really any significant changes here. Next slide. Right. And so that's that's pretty much it. So I I I very much hope that we're ready to adopt this. I think the to big issues last time raised our resolve with this. So yeah. Arthur would like to ask for adoption. And we will do that in just a second. There were a couple questions, comments on the list, particularly from Jim Stevens and, you know, Since your last update, and they were involving Oh, since the last update. Yeah. Since the last update. Yeah. Yeah. Exactly. that just look at the list. And it's not a requirement to ask for adoption, of course, for the looking to be perfect. But they wanna know, you know, what's what is a controlled federated network, network,"
  },
  {
    "startTime": "00:52:00",
    "text": "Okay. there was a comment that ASM is still an important approach for intra domain as well as overlays. so they wanna make sure that that's not Right. So I I I think this was already in o 1, and, yeah, I'm I'm I'm I'm I'm happy respond to that threat on the list. So there was in 11 12, the statement that IP multicast is the recommended or or or or or form of multitasking on the Internet. Right? And since then, people here in this working group including myself have authored this RFC. I forgot the number. about, you know, inter domain ASM being retired. So Now the explanatory section explains that the sentence was removed. Right? So I didn't want to add additional text in terms of saying the importance in the main text, but because I still like the main text to be as unchanged as possible and really only crucial things And so the fact in controlled networks, it's what we want, Right? That is in section 9. Right? So it's not in the main text. but this but this but this but this but this but this but this but this. but this but this but this but this but this but this but this but this but this but this text is there and it refers to the RFC for retirement of inter domain ASM. So, you know, also answer them. Yeah. Any other comments 4 Tortless, there is an adoption Paul going on. Okay. Again, for the notes, we have a strong show of adoption, preference. We have 17 in favor and then against"
  },
  {
    "startTime": "00:54:03",
    "text": "and we will officially 18 now. We will officially do so on the list. Alright. We're good. Alright. Louise. if if Hold on a second. Let me get your presentation up. I keep I keep losing connection to the server, so that's what's going on. Is it Louis or Louis? Louis. with -- Louise. Okay. Right. Okay. Here we go. I think I got it. Thank you. So this is Grace from Telefonica. I will present this this drop with the idea what we are putting here is a a simulate base configuration for supporting multiple ascending interfaces in IBM PMLD ruxis. yeah, just keep it just it's kicking me out, but we'll keep giving it a go. Okay. Hey. What are you talking about the dome disrupt whether with Hitoshiya aside from NACT. Next, please. Yeah. Hold on a second. Okay. Yep. I think we're good. Okay. So a a little bit of background on this. We we have another drop describing the dysfunctionality of a IDMP MLD proxy with multiple in interfaces."
  },
  {
    "startTime": "00:56:01",
    "text": "But in this app, there is the justification of of that. So this is just a summary where the idea is So being able to get content simultaneously for more than 1 as we need to face the current specification letter c 4605. that does only support one absent interface. So we are proposing this new topic, let's say, of having more than 1 multiple apps and interfaces from the IMP MLD proxy. Next, please. So not a scenario where we could have more than 1 up sync interface that could be different selection mechanism of the apps you need to face One could be the static upstream interface configuration, so that would be figure and based on and and using one specific absolute interface based on on on the channel. on the subscriber or any kind of priority. Then we have could have another mechanism that will be based on on a controller, being the this element, the the one configuring the proxy that will be the this SDM life control, then in the middle, you can see that what with the scope of this graph, that will be the definition of an automatic interface selection based on a kind of signaling mechanism. So this is what we we propose. And it's based on the station has been defined in a Recy 90279. Next, please. So the motivation, what we intend to do with this essentially to allow the the host express the preferences to the proxy. regarding the interface to be used and also even if they hose requires a robust reception of this thing so that the the the contact could be delivered for simultaneously from more than 1 upstream interface. And, yeah, essentially, to to signal what is the actual interface of the choice for the host for receiving the content. And I'm also Another target of this will equal other cost to know what is the proxy the sorry, the upstream interface that is being used by the proxy to deliver the traffic. Next, please. we have here 2 aspects to to be considered."
  },
  {
    "startTime": "00:58:05",
    "text": "First one will be the policies defined in the proxy for select industry interface. and this will be common for any kind of mechanism, the SDN, like, mechanism, the signal mechanism so on so forth. So we'll be coming to all of them. essentially, it's the the the yet to hear will be consider policies for either selecting based on the on the channel based on the driver is and and and the user itself I mean, the the hosted surveys on on the resource IP, so on so far. But, again, this will be common. This third part will be common. And then, the second part would be particular to this stuff. which are the similarly the different scenarios of scenarios that we are trying to rectify as as vulnerable for the host. That will be, 1st, the secret label. that I've seen in the face or to get knowledge What are the actual interfaces that the the proxy is using, and what are the contents and and sources that are being, let's say, retrieve from that for any of the Avcian interfaces. also the possibility of getting the content from more than 1 as interface for problems reception of the content. And, finally, also, the the way of this the the way of informing the the host, what is the absent interface being used So such that the host can, yep, assess that the is according to the the request Next, please. Quick question. So when you say that yeah. This is Steve. When you say that you join on Bulfi phrases, Don't you get duplication, or you're saying that you will only receive you will kind of join on both, but only forward for one of them at time on. That's right. That's right. So the the proxy should be in charge of eliminating replica replication of the of the data. Okay. So next, please. So this is the signal in logic that is 3 different scenarios. In in the first case,"
  },
  {
    "startTime": "01:00:00",
    "text": "will represent the signaling for proceeding the from the step retrieval from the proxy. So in such a way that the whole can be a get informed what are the different upstream interfaces available and also what is the the content and and the sources for each of the apps you need their faces. This is well, did make use of those of the proposed extensions, the repoestension the host to the proxy, for requesting the secret level. and the query extension from the proxy to the host for informing about the yeah. What what are the apps and interfaces and what are the the channels, and the sources per upstream interface. The second case in the middle would be essentially for the host to request and a specific content from one source of on multiple sources. as as usual. but indicated the actual interface of the that the host design for getting this content. Also, through this extension, the the host will be able to signal if it wants a robust reception, so using more than 1 are still in interface. the latest one, the the one that you can see on your right, will be, yeah, from the proxy to the host just to in in let's say, the conventional, reporting of from the proxy that the that the contents that are being subscribed by the host. also to inform about the upstream interface that is being used for delivering that content. So we will go now through the different stations quickly for for showing you what we are having in mind. So next is Yeah. Regarding the the first station that will be for soliciting their state retrieval actually interface from the host to the proxy. So here, what we are detailing is just what could be the proposed extensions, but they keep to account that this will be augmented would be basically, we are extending here a report message. So we have also the information of the report message to did not reflect this year, not in the draft, but, I mean, we will leverage also in that of the information in the the c conventional message."
  },
  {
    "startTime": "01:02:03",
    "text": "basically, for this state retrieval, we simply let's say, code the need of having the retrieval and and no more than that. So we'll be essentially this to fill the discovery request type and this discovery request length. After submitting the draft, we the offers were discussing and probably the it probably discovery could be a misleading term So our our proposal is to change in in new in the new version to a state retrieval. for being making it more much more evident that we want to to have is not a discovery of all the sources or the contents the project will be connected, but they are simply what the proxies being receiving in each of the offset interfaces. Next, please. This will be the other extension for for the report message. here what we are trying to to to to specify is how to request channel on the source for more than from 1 or more. of the upstream interfaces because we have the the robust we want to enable the robot's reception, we also need to think only we want the host wants to receive from more than 1 upstream interfaces. we have the basic encoding of the of the station that the is the one that you can see on your left. And then the details, what will be the kind of information that will be part of the of the value of this extension. So cannot be seen with It's not so big. But essentially, what we are putting in in the value of the of the extensions will be index of the movie because how there's record. for that that we won't taught to get. Also, indication if we want just getting it from one upstream interface or more than 1 is the the upstream interface. in case of receiving for more than one upstream interface the number of simultaneous interfaces. and then the list of the those interfaces. So here we this message will come after"
  },
  {
    "startTime": "01:04:01",
    "text": "the hosts getting knowledge for all the different apps and interfaces. So the cost can signal what would be the desirable asking interfaces for the multicast address. that is in the main part of the report message. And, yeah, I'm I'm finally basically that. So What is the multicast service that we want to to get? and from web upstream interfaces. Next, please. these instructions is for the for the query message for reporting I mean, for providing the the this state retrieval towards the the the host Right. Right. Yeah. So, essentially, what we are informing here is the for each of the source addresses that are in the main part of the query message, what are the different upstream interfaces that that that providing that that multicast address. sorry, that resource address. And, again, here we have the list of other the the another phase, like, the list of offset interfaces for, yeah, essentially, providing the information of the external interfaces associated to the the source address, and today, this is the quality message. Next, please. the final station that would be for And providing the information to the host of what are the absolute interfaces that are being used. for the content that the the host has already subscribed. would be essentially this format for the for the overall message. and the value will be similar to the 1 in the report message I saw 2 slides ago. will be the same format. It's not repeated here for for clarity. So next please. essentially, let's just say we would like to collect feedback from the working group to understand if this makes sense. for the work in groups is been betting on us and so. would like also to refine the the proposed extensions for me to to elaborate more on them, to understand you are consistent correct typos, also substitute this discovery by a state retrieval. sponsored so far. need also question to the content to IEMP. We are"
  },
  {
    "startTime": "01:06:01",
    "text": "by now covering simply MLD. and we need to deal with the include, exclude notes that in in the report message that we didn't have time to to think on that. for this IT meeting. So we will provide a new version and, for sure, comments and and use our mobile web Thank you. I just wanna understand it, and I have to say I think it'd be draft inside of So, basically, you wanna build the tree on all the interfaces between same router. So if you have 2, 3 interfaces between to switches or router. You wanna build a tree, but then You do not wanna send the stream through all those interfaces because, obviously, it's gonna get duplicated. Is that the first? I don't think so. Yeah. Sergio. I mean, I mean, with apart from the real from the M and D proxy, can get the content we from different apps and interface where the tree is already the So we are yet the the proxies attached through different apps and interfaces, the multicast stream. So what we can get is different content maybe from the different parts of the tree. This is documented in their letter, the the use cases and so You could have the same content. You could have different content. that could be the the same identifier of the group but from different providers. different scenarios that we consider that require this extension. in the proxy. So what this, what we are doing essentially is to for the host to indicate what will be the absolute interface that we want to use getting a a given content. for the for a certain source. But but that's what I'm saying. The content is coming on more to whole interfaces because you have redundancy with me to switch. And because it's coming on multiple interfaces, you're gonna get duplication eventually on the call. The duplication would be on one case. you could could also select without duplication. because maybe it's the same identifier of the group. but from different providers. that could be a a potential case."
  },
  {
    "startTime": "01:08:04",
    "text": "But if it's different again, I'm just trying to understand if it's different provider than It is different s g. So you would think that that should go to the receiver. Right? No. But the the g the identifier of the g could be the same. listen. Could be could be not necessarily the same multicast address. different In worst, it doesn't happen Somewhere else. Yep. Okay. Okay. And, basically, like, nothing like a lag or anything like that. No. No. Yeah. Let's dig here. So I I understand the general idea, I think. And it might be useful for, say, a user to choose which provider do I want to receive from? But what you get from with this extension you just get, like, some interface ID, right, I think. So how does the user know that, okay, ID 1 is the one I want to join? know, that you said doesn't know the context. Yeah. Probably the the the hospital you request some kind of reason for us associating the defining of their screen to whatever whatever whatever whatever whatever whatever whatever whatever set this logic. Maybe they come by there, maybe the Yep. It's be the provider or, I don't know, the preference for, I don't know, technology, whatever e for sure. needed for us to ship in that. We've got to the wise Yeah. This is not not the right one. Right. Yeah. So I think it needs some more text maybe explaining the kind of how it would use this. And I was also wondering, though, what happens if different hosts select different inter interfaces. Right? You have a LAN and and 2 different hosts select different That is a very good question. So we need to think on because my my meta response will be that, okay, you will get different replica."
  },
  {
    "startTime": "01:10:01",
    "text": "the content probably. But let me sync on that, and we will come with Thank you. to Do you wanna adopt people to know? Well, this is 00 version Maybe we need more work on that. Okay. Thank you. Thank you. Yeah. Thank you. I know we did that option calling several serial versus we do it? No. I don't. I think it's Okay. for stealing. we know. Yeah. Let's get this figured out. Hello, everyone. Today, I'm going to talk about the adaptive stability multicast Next page. a marked cache tree, is peak. and sporadic in some network. So here, we have example march house tree, which is from Ingusnode TE1, through p 1, And then onto the equals node a bunch of egosynotele's So for example, in this march cut tree, At node p 1, The links on the 3, So catheter root a big range of links from Nick Number 4, link it under 5, And then from Dink 100 8 to 100 and 9, and then to 100 19."
  },
  {
    "startTime": "01:12:04",
    "text": "So if we encode a match cut tree using 1 single encoded method normally, this is not most efficient So we propose a solution which each tree portion user mostly efficient coding method, So in this way, the encoding of a tree think it's mostly efficient in general. I So here, Each portion of a tree is the links from any node, The addition a portion of a tree can be part of a link from A note, a note, So here, we give an example. from from The Veega from know the p 1, Those the link separate a big array of leaks So we split These links into 2 groups. This group the yellow group And then we encode in the group. The link in the pink group use a unique number. 1, encoding method, and then yellow group in another method, for example, using flexible be the trim. So in this way, we can achieve most efficient encodings and then the overhead for MACcast will be minimum. For example, you code in, the tree in the future, local applies Finish 3 bytes. If we use the other method, Week number, likes of Peter Stream, and the swan, then we take Circle Street, pipes? 35 bytes and the 38 bytes and so on. So we can see that Using this solution, we can achieve Much, hancems. So with this encoding, The u word"
  },
  {
    "startTime": "01:14:00",
    "text": "at the ingress node after receiving packets from traffic source, US note just in cap the package with a header, containing the tree encoded. And then the package will be deferred to the equals was not. long bit along the tree, along the tree, we don't have any states. in the core of the network. So how do we encode each part of a tree And then first, We nook some basic encoder method first. Let's switch. your question about What's Yeah. Take questions. Okay. It's just fundamental. question This is Dina. I'm trying to figure out, are you trying to optimize less bandwidth and reencoding like, an audio or video stream. But the tough doesn't matter as as as required. If some people wanted to half of higher performance. reduce the overhead, and then maybe because it's like doing ideas that Cats has, computerware stuff, If that's that because when you were explaining the whole thing, that's what I was thinking. and then you said it eliminates state. And I don't know if you meant s comma g state. or a routing state, and then I got confused. I wrote this Logism here. role is so compared to the The traditional molecules, then we have a tree in the each of network. Right? each node network. So for this This use state of this means that we don't have a controlled states in the core of network. in the pink part and in the yellow part. This is no state. Yeah. We don't have a tree the corporate level. in the notes of core of network. And how do you know where to send it send packets and replicate? We can cope with you will see details in the following slide. Yeah. how do we achieve that without any stage. in the core network."
  },
  {
    "startTime": "01:16:00",
    "text": "So first, let's look at the basic encoding method. So one encoder method is using minktumber So, basically, for the no for the link from OneNote We can just select encoding the link using link number In addition to that, so if the the Microsoft that link Cuffs branches of links, and then we can have a pointer to point it to Those branches, that's the basic idea. So here, we give example for encoding the link in the pinker cycle the first picture, So here, where the those pink group, we have 2 links. we have a field number of links. So that field is is 2. In case, we have 2 links. And then for the link, with a minimum of for use an example directly. 4, missing the number 4, from Taiwan, And then link link number 4 is from p 1 to p 2, and then p 2, we have a number of links. So we have a point pointed to the links from p 2. that's for the encoding of link from p 1 to p 2. Similarly, for the link, faintfaint p1top He's free. So that's the basic idea of encoding by nickelamper, So another Basically, encoding is encoding Biggest form of note, using flex flexible be the streets. So here, we'll give an example for encoding Here, The link in the yellow cycle on the first star, seeker? So that's those are is link number 108, legal number 109, and then I'm tuning up lumber 119. So each of these these links on the tree well, use one beat. with regular one indicate that that link is done on the tree. So here, we have a a field called start to be the field. So here, the started field"
  },
  {
    "startTime": "01:18:00",
    "text": "has a lamb has value 1, 1, Have you great. That means that The first beta in the pitch string is course 12 link Lambda and your rate. So the light speed will be Next one, had room at 9. a 100 on on the line and so on. In addition to that, we have a size over the big string. So here, where 2 is 2 bispecific. 2 bytes in the 16 piece. So the big string lengths of this string is 16 beats. So here, we have pit stream. So this pit stream first bit corresponding to link 108. So the lightspeed correspond to Mink 109, so on. So each of the bids, with period 1, We'll indicate that or that link is on the tree. So here, we indicate that being 108, 109, 119. goats, links on the market cost tree. So that encodes the yellocycline income. Link. So next page, Couple more questions. Could I ask if you wanna finish You can ask. Yeah. Yeah. I just got one verified. Yeah. Yeah. Okay. Go ahead. Yeah. If we can So the top encoding is for G1. and the bottom coating is for G2. Yes. Yes. You say. Yes. So you have to store at least g state. No. No no states. Of course, the details are in the middle with the fan out to use for one flow versus another is? Yeah. That's a good question. I I in the in the photos slides, we have a special link called the split link. Those I think there's some kind of virtual link we can in that way? In that way? And then those also encoded in in the tree. So you'll notice that there were so so that I can leave you. I'll wait for yours. Yeah. Yeah. Yeah. Hey, AC Linda. Maybe maybe you'll answer this too. So this application was you're doing, like, with the best way you're doing part beer, and part like a multicastry in in the"
  },
  {
    "startTime": "01:20:03",
    "text": "a different mechanism with indexes in in the packet header. Right? You're doing 2 different types. Right? for different Yeah. Yeah. Yeah. Yeah. Yeah. In the same parts the parts of the tree. it's a hybrid tree. Yeah. You have version. Yes. Right. Yes. Yes. Okay. Many different different ways. Yes. Thank you. Thank you. And it and it could be better If you're not gonna change any of the unit cash flow in protocols to support it, Yeah. it could be better. Yeah. Yeah. Well, I think about him Yeah. Should ideally do that at the mic, but But, anyway, let's digger. Yeah. So to me, it looks a lot like beer or, like, beer tea With BOTE, you can do some similar things, I think, like, say, like, which links route, you should forward out and so on. But, yeah, I think if you know yeah. You know beer, and it's basically kinda like that. I still understand it where, you know, the the state is in a packet you can say instead of in the in each scrubber. Lightlights with. Yeah. Like, like, speech So this is just another encoderizers, and then this is called a halfflex pitch train. So this is similar to the flexibility train. Only difference is that The the first bit is is fixed. only the first first thing number 1. So that's similar. And then this this this The force Basically, a measure is that we call it fix. its strength. It's strength. One means that The first three time must be not fixed. that's first one. The last link number 1 and the last link. So this is on other on other ways. So next page, So here, we're talking about how do we split The mink from OneNote, Itomato Groups, So we use a special thing called a split link. Well, this is some kind of virtual link. So, for example, from p 1, we have a lot a bunch of links then we're submitting 2 groups. yellow group and the pink group. and then we use this 2 splitting of Fortune Link. And then from p 1 to"
  },
  {
    "startTime": "01:22:00",
    "text": "q1, one group, then 22 to book. And then the link from in the group, and then we just use 1 of a method, for example, mink number. So for the yellow group, then we use our master method and then use the flexible beta String. And then those this figure just show show the encoding of those Beach. From p 2, use 2 different ways. yellow, in in one way, and then link and then in link number on other way. To next page, Do you know? So this is the whole encoding of the whole traits. And then for each part, we can use a different method. for example, from inverse to p 1. We use the new number, and then from p 1, 2 The thinket group and yellow book and then we use splitting link. like I could some kind of virtual link, and then we encode a pink use a VIN number and use yellow gold. It was a flexible, PeterStream, and so on. So we we can have a whole encoding So each part each portion of the tree goes different ways. And then we can see for most efficient. For for example, in Gong history, we take 20 so 23 beats a 30, 3 bites. So in any asset method, maybe take 30 more facts. So these are the most efficient in general. to the next page. So here, this rule that each node cover label table. So this table table just contain The big problem was for the link attached to note, And then this table, we're connecting Lambda, the type of link, and then the IP address of a laptop node For example, for number 4, is for from link from p 1 to p 2, and then we're This link is a point of point, and then the Nice for my address where BP2's IP address. And I use this number link number, we can get the next swap address. And then for the special link split link virtual link, and then we have the link title,"
  },
  {
    "startTime": "01:24:01",
    "text": "and then offer an order to receive encoded this linear linear number, this is the first thing that we needed to do some special processing. So next page, we also have So one header. So this header will contain the the tree is encoded. So, basically, this header is very similar to a second round header. And then The difference that we contain the subtree And then we have a a void this point that will be pointed to the active sub tree And then when we do the processing, The the hydro went off chance. only exactly for those point. That point were changed to pointed to the south tree from my node. So that's all. So next page, So here, we have a behaviors for ingress node, traction node, and ingress node. So this behavior will show how this sourced them at work. So on the ingress node, after receiving packet from traffic source. English nodes just duplicate package for each link. And then contain, can cap the package with the handle. You hardware contain the slab tree. from next of the link and then soon as it packaged to the main swap. So that's the example, here, we only have one link from US Note. to p e p 1, And then Yipussels just have one package capital with the header. So that header will contain the subtree from p 1. And then the point, we can see that SL as a foreign furnace that had to start up a subtree. 20, and that's all. So next page, So this is the For secure, on the trans node, So on the traction node, after a traction node receive a package, that packet will contain the header. So that header will contain subtrees. from that crunchy note. So the treasure node for each link From my transfer note, So I duplicate"
  },
  {
    "startTime": "01:26:00",
    "text": "The package for that link. And then she asked her to change that point to the sub g, that's for the sub pointed we're pointed to The links or sub trees, a text hop. and then the difference The package too. That's all. That's all. So most more details, because we have some special links such as strategic So beneath the link and virtual link, For that reason, I just do some sort of processing. then either for suppose the process is also simple. Just that 1st, an appetite The point to subtree, to point it to that group. Right? and then we process the link. that group, such as So In addition to that, for special link, for example, is for to the e version of then we just settle the point of the tree to the 0 because for years ago, it don't have any trees. and then that's all. 4 was note because with the equals on the doesn't doesn't have any sub trees, and then it does a decaf, the package, and then send it to the might cause overlay. That's all. So that's roughly about the this one. And then we can Welcome, Thomas. Next page. has been packing, so I cannot COVID hands through the system. Just a long comment. I think there are several documents for this topic, just encoding the most Australian the data plan encapsulation. I noticed that the there do you have you know, consider the balance of the the complex of the method and the the efficiency. I know this that your proposal is really I think it is really an efficient way compared to, for example, just giving some pointer to the next segment."
  },
  {
    "startTime": "01:28:03",
    "text": "or just using this string. I think this one may be the most efficient way or relatively more efficient. but I think it it it is really complex. And it it is kind of combination of different approaches together to make the the the encoding really hard to of to understand or to pace for the device. So have you consider this as back end or do consider to have a kind of analysis about the existing solutions in the EITF how how we choose a better one. 4 different scenario. Yeah. That's a good question. I think we we from if we want more efficiency and then this know this is some kind of complex because I I've I've worked with offline with start with some people, and then they also mentioned that this will be the complex. I think this would have some finance, right, if you want the efficiency and then You can be even more complexity, complexity, So if this is fine. And, also, we needed to do we we make simplify this one. in some way. Right? For example, we may we may just select the couple couple of basic method. for example, one leak number, and the last one, just one be the string. And then this web simplify a little bit This is Dino. I have one general comment and then a couple specific to your proposal. I'm seeing over, like, the last 3 to 5 years that IETF has this urge put lots of complex instructions and data packets This is, like, really a bad idea, and this trend has to change. So that's that one comment. Second comment, the Don't you care where packets come from? So is the virtual link used like an RFPF check or is it not? This is the this link without any checks. because so"
  },
  {
    "startTime": "01:30:01",
    "text": "the link in the in co What what if your downstream links now tend to be the the eskama gtree around you has changed, and now it's an input link coming the other way. CAN YOU CHANGE do you have to change is the question? Yeah. Because if you have to change then you have to deal with rpf, and that's the problem, beer salt. quite nicely. I mean, with I mean, with with the cost of changing a lot of things. But solved that. So What are you gonna do about that? That's pretty complicated. Yeah. This this one is about based on a mockcast. And then this one, the tree is generated by the controller. So there there's a As it drops, in the PC, whatever, PGT Oh, there's a controller. Yeah. Yeah. Because the controller will get a joy and leave, and and the control over -- Yeah. -- trying to get a tree and send that for ingress on that. That's that's sad to hear. I have no other questions. As I can Yeah. We're a bit short on time here. So, yeah, I have some concerns about this person as well, but we don't have time to discuss much now. But, you know, it's a bit controversial in the IETF as well. There was a buff, you know, on on this overall topic. And it's also the question about whether beer, you know, is something that can be used and so I think we need to you know, we could have this technical these details, but but in the few sure if we we need to go back and look more at requirements and and and see, you know, if if people agree that this is a good good way of doing things, and then they should be able to work in this area. Okay. Thank you. Yep. Okay. Thank you. So The rest of the meeting stake is the only chair I'm involved in some of these other drafts. And last time, these guys we had to rush through their slides. So this time, they shouldn't have to. So let me just really quickly level set and kinda set the stage for these protocols that have been presented before. There's"
  },
  {
    "startTime": "01:32:01",
    "text": "2 protocols, proposals that are seeking adoption. Again, I'm speaking as an author and are complementary protocols that allows for there group allocation in a dynamic decentralized way. the next one. presented before, but we haven't had a whole lot of time to discuss. So the primary problems with thing group allocation protocols such as Madcap, are at least for some applications such as Nate's marine application which started this whole discussion is that they're a single point of failure, collisions are possible at the Ethernet layer and the configuration is more involved. If you look at the Madcap documented quite lengthy and involved. And so, again, for some applications, these problems block deployment. and so we're seeking some new ways of doing it. So there's a new draft, that we're seeking adoption of, which is a problem statement draft that kind of discusses some of these problems. Next slide. We also have a a draft that gets into the addressing problem, and maybe within some of your questions, we can get into that with their presentations. need to get the address space from somewhere It may be that we need to get that from the Madcap group address. we can discuss that further. each of the graphs specify what they need in their INS section next slide. So Nate's gonna be presenting his proposal. He's presented this before, but hopefully we have time to discuss on 0 comp it primarily is extending existing protocols, it's primarily focused on Layer 2, although it doesn't have to be, but these ships are primarily layer 2, focused if there needs to be inter shift contact, and of course, we'll need to declare a 3."
  },
  {
    "startTime": "01:34:02",
    "text": "One one question for me. there's a question If about this draft, you can ask me, but go ahead. when you say extends existing protocols, are you thinking of multicast DNS or Yes. Exactly. Okay. Next slide. And then Dino's been busy writing a new in of extending existing protocols. He's been writing his new Lightly protocol. do a similar thing and he's gonna share a demo on it today. I think that's it. So -- Yeah. From a procedure perspective, we are looking to hopefully have At common state, statement draft adopted a address related document adopted then these two solutions drafts adopted their complementary and we think having 2 solutions is not a bad thing doesn't mean that they have to progress to the IST, but we think having 2 solutions is a good thing. So with that, Nate, you're up. Hey, good morning. Okay. So This is 0 configuration multicast address assignment. I'm Carson with Garmin And National Marine Electronics Association. Mike did a great job introducing the topics here. I'm gonna focus mostly on the first two documents where we talk about problem statement and the the the group ID allocation. I think there's still some additional work I'd like to do on the MD and S based algorithm, and we'll talk about in a little bit here. So next slide. Okay. So we took the 0 Comp document that out there right now. 0compassignment dash 01"
  },
  {
    "startTime": "01:36:05",
    "text": "and we're gonna split that into 3 separate documents. The first one is the problem statement. that includes the kind of the background on the marine use case the use of multicast snooping and some of the constraints that we have. and kinda describes that, and then This still shows into a set of requirements and then also some criteria that we can use for evaluating proposed solutions of 0 conf address out allocation algorithms in the future. So this, we believe, is ready for advancement And then the second draft pulls out the discussion about the overlap of the server based to and host based groupID, allocation that's described in RFC 3307. and makes that a separate document to kinda kinda allow for additional algorithms to be used. and to avoid overlapping host based and server based algorithms. So there's some minor changes that out of this discuss that I like to make to that. and then that should be ready for advancement. And I think and then there's the the existing zircon document. I need to update that. basically, to pull out all the contents that went into the problem statement and group ID document. and then also to kind of reflect some of the latest things that we learn from developing a perfect concept Next slide. So as you see on the top here, there's a 1. So any slide that has a one there is meant for the first document, the problem statement. And then the 2 is gonna be for the group ID document and 3 is specific for the 0com document. So the the problems that we discussed is how to distribute the multicast traffic with a focus on efficiency so that we're not sending that traffic over links that don't need it. but also because we have a mix of sensors that are high bandwidth and low bandwidth,"
  },
  {
    "startTime": "01:38:04",
    "text": "we don't want the high bandwidth traffic to overwhelm the low bandwidth links. And so in order to accomplish that, we use multicast new thing. and because of the setup products that we have, the streams are we can only differentiate them by the Ethernet destination address. That's because multi gas snipping switches focus on the the Ethernet address and the ipv6 address. and also they don't support source specific multicast. So we noticed also that there are address collisions at the Ethernet layer, and that's because you take in order to get your ipv6 address onto Ethernet. you take the hex values 3333, and then you append the the lowest 32 bits of your ipv6 address there. that lowest 32 bits is where you're gonna have added exclusions because really any ipv6 address on the network. That's that 32 bits is the random section. The the next highest sixty four bits are the interface identifier And that's what is used to differentiate the different ipv6 devices from each other, but then that randomness at the lowest one is what leads those adverse collisions. We also need no single point of failure. So we don't run DHCP servers, for example. at least not a single one. And then we also cannot rely user configuration. Next slide. So the desired solution is a decentralized configuration protocol for dynamically assigning those multicast addresses. Next slide. So the document then goes on to list all the requirements, and I've basically copied them verbatim here. So it does not rely on a single point of failure. It does not depend on user configuration. it coexist with other multicast address assignment protocols, whether they're madcap or whether We have 2 different host based algorithms or however many future if there's other advancements that are needed. It supports operation on a single subnet."
  },
  {
    "startTime": "01:40:00",
    "text": "and it supports multiple applications on the same host. So we need to have multiple applications that don't have any way to communicate with each other be able to allocate their own addresses without stepping on each other. And then also it detects and resolves those address collision an extreme case of that, which, you know, does a good job describing in the the gap protocol document. is where a network has partitioned where you're not able devices aren't able to talk to each other for a certain time. And then when they come back, that's where you have a potential for a large number of devices to have a address collusions kind of all simultaneously there. The red one there is not currently in the document, and I I Part of me thought that it was kinda captured in the supports operation on single subnet, but it occurred to me. It might be good to actually describe that there because that was one of the things that was described. were discussed. 1 of the options that was discussed in the Philadelphia meeting is know, I'll just send all this stuff up to a server and have it you know, figure all this stuff out for you. So I think I would suggest adding that unless people feel differently, but we can discuss that in a little bit. Next slide. And then these are kind of the extra credits. So assuming that we'd meet most or all of their assuming a given algorithm or a protocol meets most or all of their requirements, These are kind of some other things that we can apply to different problem spaces to help evaluate what's gonna be the most appropriate solution there. So supporting operation across multiple subnets. most boats are gonna be a single subnet. And then when you start to get into the larger ships. Those are gonna be running multiple subnets on top of them. And then there's also talk about having you know boats on on the Internet or even on on local networks as they enter a like, a bay or a or a marina to have more automated, docking procedures and stuff like that. So lots of interesting work being done there something that does not require significant changes to existing standards."
  },
  {
    "startTime": "01:42:02",
    "text": "that means that we can adopt it a lot faster. or earlier than if we would have to wait for all of this to kinda be adopted into and and be implemented in operating systems and stuff like that. that uses the functionality commonly available on the variety of platforms. So we see different is. And different embedded spaces, real time oses versus more server based platforms like Linux and Windows. uses capabilities commonly provided to So if we have to rely on kernel functionality, that's harder to to provide on a variety of platforms. So having something that can be done in in the application space on most platforms is desirable. I'm sorry. You have just, like, 2 or 3 minutes left. Okay. So, yeah, we'll skip to next slide. So it then goes on to describe ipv66 considerations on there. and talks about the group ID over ranges overlapping next slide. For ipv4 considerations, we kinda describe how the i IP before address space is laid out, but I think the recommendation that we believe is that all new designs should use ipv6 because that was kind of better structured from from the beginning to accommodate situations like this. Next slide. We also described 2 excluded solutions. I'll skip over going into details there. Next slide. then this gets into the 2nd document. So this is a new dynamic multicast group ID registry in the ipv6multicasteraddress register group. That's our proposed initial population of that registry table. note there that the Madcap allocation is reduced the RFC 3307 basically assigns the full range of addresses there. And so we are shrinking that to a single entry. And that also that gives us room for developing 0com protocols. So the expectation would be"
  },
  {
    "startTime": "01:44:03",
    "text": "As those zerocomp protocols are proposed, there would be an ionic consideration section that actually is signs those unassigned ranges. This also accounts for the fact that the Silicida node multicast addresses are already being used in here, and so we would be colliding with those if we happen to be using that. that's not currently reflected in any document Next. There's kinda 3 to dos here. 1 is to acknowledge that this updates 3307. I didn't list that here. Dave Thaler helped us kind of evaluate this the use of Nat Cat and Microsoft products, so I wanna acknowledge that. then there's also this existing registry in the multicast address space registry. got a a draft of the document that describes I've changes that we need to make to that registry to kinda reflect this work. But I think when we when I get those 3 in there, this will be ready for adoption. Next slide. And then the 3rd document I've been working on source code. Did that that has a a proof of concept so you can go to GitHub and and get that there. And then there's also I've been experimenting with different on machines and IP tables rules that will simulate that network partition and repair, and I can report on the results on that. clean product. Next slide. This also talks about some to dos on that document. Next, That's it. Yeah. So for the problem statement, you're you yeah. You want us to possibly adopt that. So one question there is No. Yeah. Sometimes we publish problem statements less like separate RFCs. another approach could be for it to be, like, an appendix or something to, you know, some future solution, you, yeah, you would prefer to published the problem statement as a separate document. I think that makes sense because if we're gonna look at separate or different solutions."
  },
  {
    "startTime": "01:46:01",
    "text": "having one document that's just the problem statement and the requirements and how we would evaluate those different solutions. And then those those other in this case, the the MDNS based and the GAAP based. Those will both reference that. Right. Right. Okay. Yep. Yeah. So I think we can do out of time, but we can do a quick adoption call for the for the problem statements. Okay. Well, of course, we would have to take it to the list, but let's just see what the interest is. Let's see. So I'm asking if I should adopt just call it a zero comfort problem statement. Let's see. So yeah. I started the poll. Let's see what people think. Yeah. Looks like we have pretty good interest, like, eleven people that support adoption so far and no one against. So Yeah. So do the adoption column on the list. Okay. Yep. Yep. Yep. What about the group ID document? Sorry. Which which document? That would say number number 2. Number 2. Yeah. I think we'll take it to the list via our but out of time. So Okay. Thanks. But but, yeah, we we can't be, you know, we can't do another option call without checking in their room too. So let's consider that. com.com.com.com.com.com.com.com.com.com.com.com.com.com.com.com.com.com.com.com.com.com.com.com.com.com.com.com.com.com.com.com.com.com.com.com.com.com.com.com.com.com.com.comcom.com.com.com.comcom.com.com.com.com.comcom.com.com.com.com.comcom.com.com.com.com.com.com.com.com.com.comcom.com.com.com.com. k. k. Alright. Thank you. Yeah."
  },
  {
    "startTime": "01:48:09",
    "text": "I'm gonna talk about GAAP. And basically, what we're gonna do is we're gonna show you a demo of a gap application and We did it last time at IETF over a set of Docker containers. So we had multicast that was native But now we're gonna show it over an overlay. And these are the folks that have been part of the testing effort Also kudos to Nate because he's been involved with Gap and who else at Stig, of course Stig and Torillis has made some good comments too. So kudos to all those guys. what is gap It's a new we totally decentralized multicastgroup allocation protocols. So any multicast application sources of receivers that want to be able to get a group address to talk on, they will run cap in their systems. And the way I've implemented it, it runs as a library in the application. So there's no kernel changes. It runs in user space, and it's pretty lightweight. There's no central entity addresses this protocol does it for all the members. The group addresses are allocated in our guarantee to be unique. among all the gap speakers within the gap allocation range and again, no zero configuration. Next Design goals was to support both ipv4andipv6groupaddresses. So when the allocations happen, they're having for both addresses and and the applications could use 1 or the other or both addresses to communicate if they wish to. It's easier to do that on an overlay because an overlay doesn't care if multicast is or is not on the underlay. Group addresses allocated will be will"
  },
  {
    "startTime": "01:50:00",
    "text": "will not collide, and we are layer 2 cognizant. So we make sure that won't collide it later too. layer 2 switches, MLD, and IGMP switches. So for ipv6, we make sure that the 32 bits are unique. and for IPV 4, we make sure that the 23 bits are unique. Works on a single subnet as well as layer 3 infrastructure including overlays, and that's what we're gonna showed today. question. Yeah. Just a quick question with respect to the prior problem statement. Right? So I remember this all being a great fun with the ships and cameras on ships, but obviously, yeah, if you have something like this deployment and control network with an overlay this would be equally applicable, which I think you're talking about. Is that also that those type of use cases captured in the problem statement that kind of it is applicable to larger overlay networks because I think that would be good. Right? if if if Well, I think Nate's proposal says needs to run it layer 2. And if you have a layer 2 overlay, then it'll just work. And has it been specified? I don't know. Well, at least as as part of the problem statement just know, Just an add yeah. Make it extra clear that it can be possible in it, work it would be great to also have a solution, whether it's the same solution or another. different Yeah. Very good point. Mike McBride. So, yeah, in your problem statement, Nate, I'd pre sure you've mentioned the marine use case, which would be applicable for both solutions. Next slide. Okay. So multicast source and receiver notes participate the gap protocol, when the application starts up. It uses a group name. So all the user participantship, rendezvous, in the same session. So the group name basically is is SHOP256 hashed into a group address, and then we either mask the lower to 32 bits or 23 bits depending if it's v 6 or v 4. And if the"
  },
  {
    "startTime": "01:52:03",
    "text": "more than one group name hashes to the exec same 23 or 32 bits, then we send claim messages to say that there's been a collision, and then everybody, the collided group the first driver gets to win the second arrival then has to passed to the group name plus 1 as an ASCII string. and we do that four times and then give up. So we have a bunch of gap applications the gap library is basically the entire protocol, pretty lightweight, so we can fit in quite easily. We built it in Python, and we at the last IETF, we demonstrated this echo sender and echo receiver are And it was basically just send that text message there to the receivers, and they all joined this the the ERs joined all of the the same group based on that group name and the sender sent to the same group, based on that same group name And then we had Gap Shark and various other utilities. But for this demo, next slide For this demo, we built something called gap chat, which is basically a chat program that multicast all its data and all the participants type in gapchatgroupname. and they are able to chat back and forth. We put in a pink facility so you could see test reachability, and we're gonna show you that now. By doing this over an overlay, we need multicast And since we're doing this from people's homes. behind residential gateways and nets as well. We're also doing it on STARLINK. we have 2 nodes that are doing over satellite as well. So we had to implement the signal free multicast, which basically allows list to be a multicast overlay when the underlay is unicast only. And then we have to trip all those boxes to reverse nets"
  },
  {
    "startTime": "01:54:01",
    "text": "in myelisibers.netimplementation. It has a natural reversal implementation next This is what the demo is gonna look like, the top 2 nodes, our 2 VMs at AWS on terrestrial links. we have Dan Mitty at the bottom. He's on a terrestrial link residential. and Mike and myself are behind our Starlink Wi Fi routers at our houses. We're gonna show that? No. Right. Let me give you a demo of the gap protocol. over a list overlay. Basically, we're gonna show 3 technologies here. We're gonna show GAAP the group address allocation protocol that allocates group addresses to app locations, multicast applications dynamically. We're going to provide a multicast service using the list overlay. and we're gonna show that list parts of the list overlay can run over a satellite network. We're gonna show 5 nodes in this demo. We're gonna show dna map book in Micemac. is going to be on the satellite link we're going to have Dan. Many be on a residential arms, restore a landline. And we're gonna have 2 VMs 4, in Amazon called XTR1 and XTR2, that are gonna participate in the demo. if we come over to these sets of windows, we have Dino Macbook here up on your left upper left hand corner, and we Mike Smackbook here, these 2 are the satellite guys. And we have Dan's many"
  },
  {
    "startTime": "01:56:03",
    "text": "right here. They're already joined to the group using gap chat. GAAP chat is basically a multicast application. that uses the GAAP API to allocate addresses. when you start the application with a a group name, it will passion to a group address that's being used. And we'll show you that. similar detail in a second. Okay. So the idea here is We have all three that are part of the group that are already joined. And if we look at the RTR, We see The MATcache in the LISPRTR has the 3 members Dino Macbrook, 10, 20, and make MacBook. Mike MacBook. It turns out that the most The group named Dino Group will hash into 224-94040. 236. And all of these nodes are also running the GAAP protocol that runs on this one line group 2240171 70. k? The idea of the application is that it just broadcasts or sends messages one another over the multicast group, if we send this hello, see that the other two nodes got it. The EID for Denomac book is 241-one hundred and eleven. It was sent to the 236 a group, and we see that Mike's MacBook received it. So this was sent over the satellite network to the RTI that's deployed in Amazon, and it replicated it to replicate the multicast packet to Mike over the satellite and to Dan note that the group and the source are the same. Okay. Now what we're gonna do is we're gonna join We're gonna have these other 2 guys join from XTR-one. next tier 2, which are 2 VMs. So starting up to get Chad Group. gonna just start this guy up. we're gonna show that the joint latency is is pretty fast. So if we Then again, look at the RTR"
  },
  {
    "startTime": "01:58:01",
    "text": "we will see that axtr1 is now joined to the to the group. So we have now 4 members. that are running. And let's say he just says, hello, I am axtrone as training, and everybody should get that message. Okay. and we see that Dan got it. We see that money got it, and we see that dealer got it. Okay? Let's just join one more. Okay? And let's say, hello. just got here I axtr2 And you can see that data got it Mike got it, And Dan got it. and let's look at the other PM. and the other VM also Got it. If we just look at the state again, the RTR, we'll just see now that we have 5 group mount numbers. 1, 2, 3, 4, 85. Okay. Now what we implemented was a a pain protocol in the application. So if one of these guys sensor pain, It'll just show that everybody has has received the ping And then they're all going to reply to the patient with a pong message, and the Pong message is gonna be multicast back to the group. let's try that from Dino MacBook. Okay. So what happened here was we did the ping and demo MacBook sent the ping out to the 236 group associated with Denodash group. And this was the sequence number for the ping. And what Dio got back was from a XTR 2 the AWS VM. Got a polling from it, got a polling from XTR 1, got a pond from Mike, and one from Daniel. Now since these ponds were multi casted, we see that all the other nodes"
  },
  {
    "startTime": "02:00:03",
    "text": "have received the pontoon or displaying it. Okay? So, basically, we're providing a multicast service here. with the list overlay. and that's allowing anybody to connect anywhere on the Internet where they have connections to the Internet underlay and it could be satellite. It could be terrestrial. And they're all behind that devices. So the net reversal logic is being used here as well. to Thank you for watching. Questions? Yeah. Twellis. Yeah. Yeah. Just go. Yeah. to build is is is you said layer 2. So there is some form of list wait. is all layer. Yeah. No. Layer 2. All layer 3. This So just for these 2 allocation program, protocols that we're working on both gap and the zero comp stuff Nate's doing. We're positioning them as complementary So gap is used as an address allocation protocol. either over layer 3 and therefore could work over layer 2. but Nate's is looking at layer 2 because he wants to optimize layer 2 switches. and and how do you get them from 1 So the HDR is on each member slang, but it's it's a router. Oh, so the I think your question is is where do you put the overlay notes? See, how do you get through the kind of multicast? Right? It's ASL multicast. Right? So you Yes. there's no multi native multicast running or no protocols running whatsoever. and the XTRs, the list encapsulators, and decapsulators, are collocated on the same systems where the gap chat application is running. all over layer 3. they they could also be on the land. But So I -- Yeah. -- I can I can explain. Last last IETF, they were all"
  },
  {
    "startTime": "02:02:01",
    "text": "in docker containers on the same common land. and they were using native multicast through Docker. It was a single subnet, but it was native multicast my application sends something. It gets to the XTR. The XTR is routing. It's oval. It's right in isolating it in sending it to the other side. Okay. If you wanna know how it works, do we Yep. I mean, we can take it offline. I mean, it's fine. I I mean, it's pretty simple. It's the the fact that The application is sending from an EID means that list takes control over the packet versus it going down through the kernel. so when the ITR sees this s comma g packet from the application That's right on the same system as it. It doesn't look up in the mapping system. and then finds out what the replication list is. But since here, it's complicated because the network is complicated since here, this SDR sitting behind on that, encapsulates all his packets to the RTR. So, really, all these XDRs have a single default route for unit cast and for multicast to send it to the RTR. ERTR does the mapping system lookup and finds all those members then unicast replicates all of them. So the RTR becomes kind of like the list Yeah. But we don't have to make it work RFP, so to speak. that way because we have a decentralized NAT nap function where we could actually replicate at source to all of them as well. So choose your poison there. Do you have the hairpin, or do you replicate close to the source. Yeah. We're out of time, but Yeah. Thank you. Pretty good. Yep. Alright. you, guys. appreciate your participation, and we'll see you in on the list then in Prague. Yeah."
  }
]
