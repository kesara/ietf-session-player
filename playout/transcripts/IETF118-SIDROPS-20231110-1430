[
  {
    "startTime": "00:00:29",
    "text": "TF where cider ops is not on Friday soon. Exactly. Exactly. So at at this point in the week, I a suspect all of you have read the note well, but just in case any of you have a day pass. The, the note well is really important. It tells you what's your right your privileges and your responsibilities are. If you want to contribute, please make sure you're familiar with these, Policies. Please, please, pleased, be respectful of each other. It's totally fine to attack, Warren's ideas, but don't attack Warren. So, participants. Please all log in to the, Medico, This is how we track the blue sheets. This is how it determines how big a room we need. I've seen some groups that are in tiny little rooms, which both many, many people standing, and that happens because previous greeting, not everybody log in to the data tracker. Through me to And in the we will you be using the razor hands to get in the few lines for the mic. So, It's 0"
  },
  {
    "startTime": "00:02:00",
    "text": "Here in the room, use the on-site tool. And if you're remote, same way you join. But remote people, please remember to mute if while you're not talking, and, please don't stream tons of video at the people who are potentially at the end of a less bandwidth, capable link like in their house. So, please only turn on your video when you're speaking as well. We have a pretty short agenda. These are the topics. I'm suspecting there's a fair amount of, things that are gonna be talked about in the any other business because of the people who have been stopping me hallway today. So we'll see how this goes. But we'll do the things that we're talked about on the list first. So is there any agenda K. Hearing none. The first thing, is the the those of you who've been paying attention to the list know that, cider ups, 8 210 BIS has been returned to the working group. The ISG said we are not ready for this yet. And mostly, it's because it has references to ASPA, and ASPA keeps moving around a little bit. And so we will update that document once ASPA is final. Then we'll do a last call on it and then resend it back to the ISG assuming we got it anybody unclear about our plan regarding 8210 biz. Okay. Do my, co chairs wanna jump in and add anything to that. They're both remote. No. I don't."
  },
  {
    "startTime": "00:04:05",
    "text": "Seeing no one in the queue. Okay. Alright. The, next one, up is Sorry, Russ. Yes. For 8 minutes. Can you summarize in 2 sentences what the plan is? Because it went by very fast. It did. Okay. 1st, finish ASPA. Right? ASPA through successful working group last call. Then update 8210 to describe whatever that result is then the last call 82 tab is this. Okay. 3 steps. Okay. Sorry. Didn't mean to, talk faster than our notetaker can keep. Thank you, you know, for for making sure I got it. Okay. Next up is free RAM. No. You're gonna have to say Nick slide because it didn't seem to work with my laptop. So Good afternoon, everyone. So, this talk is about, design analysis of the RPKI prefix list and operational considerations. So we're doing the working group adoption call. A lot of people asked, what are the problems it solves and what kind of a rational issues there maybe. So we've been giving it some thought and, So that the this presentation is, a result of that. Next slide, please. So the RPK had prefix list object, as defined in the draft, current version 00 is quite simple. It asserts that the listed set of prefixes includes all prefixes."
  },
  {
    "startTime": "00:06:01",
    "text": "Originated or intended to be originated by the real estate or signing AS. So in this example, AS one, originates or or it tends to originate only these 4 prefixes. It includes all of them. In the prefix list along with it's a s number. Next. So the intention is that, if a prefix is originated, with, an AS with the with the AS that has created a prefix list And that prefix is not included. In the, in the prefix list of the AS the originating AS, then that would be considered invalid according to prefix list. So the recommendation for a route selection policy in the draft is also simple. It simply says that the relying party may discard a route if its prefix origin paid is such that the prefix is not included in the list published by the origin a s. So those three slides, put put the next slide, please. Please. So one other thing, that is a kind of left ambiguous in the draft currently is about a more specific prefixes of an included prefix. If there's a prefix included in the prefix list and, it doesn't make a clear statement about, whether the more specific prefixes included in that prefix, are meant to be allowed or disallowed. By the prefix list. Okay. So that's, so so far, it's all just briefly summarizing what is exactly in the prefix list 00 draft. The next slide, uh-uh, from next Yeah. From here on, it is, about understanding uh-uh, the prefix risk, putting it in perspective, and thinking about what are the problems that is that it is helping us solve and what may be"
  },
  {
    "startTime": "00:08:02",
    "text": "operational issues. So none of these slides going forward are included. Are the main any of the material is currently not included. In the, in the draft. At the end of this presentation, we will talk about, what makes sense. If if you want to talk about, the solution space, how the prefix list should be used, what are the recommendations regarding that, etcetera. Possibly be be the working group may consider a separate draft in which all of that can be potentially included and discussed. The state space of the ROV, and the prefix list verification. This is the, your we obviously, we wanna look at both of these jointly. Are we doing prefix origin validation. Prefix list is also in a different doing prefix origin validation. So we look at the state space of both of these verification, types. So if we, for the prefix, for ROV, we have had 3 states valid not found and invalid. For the prefix, this verification currently, the draft says, invalid or not invalid. Not invalid would include two cases, that the prefix list exists for the origin days in the route. And the prefix list, includes the prefix. Or no prefix list exists for that origin as in which case, it would be like unknown or not found but we only can see they're valid or not found, not not invalid. In in, consonants with current version draft. So we have these 6 possible, cases. Our combinations between ROV and prefix list verification. 4 of them, are similar to what you would have if you had only ROV. Prefix this verification doesn't matter because that's either not valid no, sorry, not invalid, or"
  },
  {
    "startTime": "00:10:01",
    "text": "Right. In those cases, it's, not invalid. Right? Or or it is Yeah. Fine. So 4 of these cases are identical to what would have if you were doing only ROV verification, It makes a difference in two cases. There are 2 and row 4. Where ROE is valid or not found but the prefix list verification is is, invalid. And in those two cases, the route will be detect Next slide. So now we look at okay. We have this team, and and this, this recommendation for for policy, based on that, what are the problems that are that are getting solved by this? Next pay, please. So there are 5 of these problems, that that we have been able to identify. So some of these actually okay, were mentioned and discussed during the working group adoption call and maybe some may be new. That have been taught through, since, the working group, adoption. So the first one is, a simple case of AS abuse while hijacking an ROV not found to prefix. So, in this illustration, a s 1, it has the same a PQRS for prefixes that that it has listed in the prefix list object with its a s with its own a s number. So those are the prefixes allowed allowed according to the prefix list. On the right hand side, we have a hijacker AS10 they are they are hijacking a prefix z slash 19 which is unrelated to any of the prefixes on the left. That a s 1 originates or has included in its prefix list. So z slash 19 is unrelated. To the prefixes on the on the left. And not only that,"
  },
  {
    "startTime": "00:12:02",
    "text": "a s 10 also includes a s 1 as the origin a s. So this will amount to, any views or a hijack of a s 1. As one's reputation, suffers. It is a case of path manipulation. And when the route is re slash 19 is received by a s 20 and it is doing about, ROV, let us say, as well as prefix just validation, particularly prefix list validation or verification in this case. A a s 20 determines that this this route is invalid, according to prefix list. And therefore, it is rejected. So that's mitigation mitigation of one type of ASAPs. Next slide, please. Another type of ASF use would be when the hijacker gets little bit more aggressive, and, they've created over. So maybe if and is colluding with the z slash 19 prefix. On the right or maybe it owns it. But in any case, there is a certificate, for 3 slash 19, and, that is used to create a for z slash 19 together with origin as 1. So this is a bogus Rua. And in this case, when this, route is originated, ROVIC, can will find it valid, a a valid route, but prefix list, clearly, uh-uh rules uh-uh rules it as an invalid route. And, again, this this route is rejected. By the router. Next slide, please. Do you wanna take questions now or do you? Clarification question, Jeff? Jeff Houston. Why is it bogus from the point of view of a relying party. It's a perfectly valid rower, And you only know it was bogus, if,"
  },
  {
    "startTime": "00:14:00",
    "text": "you are a s 1. So it's from bogus. It's it's quite. Valid Yeah. That's right, guys. So you've got the word bogus ROA. And it's kind of it's not bogus. It's a rolla. I see. Okay. Terminology. You have a right for terminology matters. And and you're kind of saying, we all knew this row was a lie. No one knows it's a lot. Party doesn't know it. Exactly. Right? So not bogus. Just Sorry? All rowers are fictitious in that sense because no rower has the visible acquiescence of the AS they're saying, give you permission to announce. Correct. It's a one way authority. So from that point of view, It's the same as all the rest. Sun. That that's true as long as it's signed by the Correct. It's valid, and I'm not suggesting valid. That bogus is in your mind. It's not in the row. The real world sorry. They're they're Warren, they're all like that. If you wanna close the loop, you need something like prefix list to close the loop with the other sign. Right. Thank you. Yeah. If someone's adding hands down, you put my hand down. That's exactly that we are not saying that it is, it is apparent to the relying party that it is bogus. This cockRabbitCC. It does it make sense to also consider ASB or deployment of ASPA in this context? I know those the amount of states, but it may prevents all these cases, let's let's discuss that later. You're saying include a SPA state. Right? Yeah. We're we're considering we should probably consider various parts of a full deployment scenarios, and we're adding 1 more object. So it's I'm It's about what is the most benefit and what we can actually deploy for me. Sure. I'll remember your question, and we'll come back to it during the discussion period at the end. Yeah."
  },
  {
    "startTime": "00:16:01",
    "text": "So next slide, please. So the third type is, a s accidentally strips as part and misoriginates prefixes. Again, this is a scenario that, that is found everywhere in a while, when there is a route optimizer and the the the the routes from the optimizer are leaked out. The AS part is tripped, and the routes are leaked with the with the a s that that is using the route optimizer as the origin AS. And this is call was called Route Leagues type 5 in RFC 2908, where Outreach's classification was done. So these are, accidental prefix by the AS that has created the prefix list. So AS Fortunately, in this case, has created its own prefix list and naturally, this prefixes, lead prefixes are not included, in that, in that list list they belong somewhere else, in the internet. If these prefixes are routes when they are received by the, neighbors, of of the of the AS in consideration, they will either find them invalid according to, ROV. If prefixes happen to have robots. If not, a prefix list list helps to detect that, they are invalid and they would be rejected. Next slide. So the need so this other benefit is in terms of reduction, of the hijacked attack, surface. In the middle, we have the green, prefix oval, we those are the prefixes included, in the prefix list some of those prefixes may have maybe owned by the AS itself and some of them may be by"
  },
  {
    "startTime": "00:18:01",
    "text": "OIP, bring your own IP prefixes. So and those, all have robots that in this, let's assume that, those those ones, I mean, the ones that have robots are the 2 overs to the left and the right. So there's an overlap. So there are in the prefix list, there are prefixes with robots owned by the AS. There are prefixes, that are owned by by o p customer, bby0ip customers, and they have robots. And in the middle of the green, oval, we have prefixes that are without lower coverage. They may they may belong to the to the, AS that that create that created the prefix list or or they may be be by OIP. The the point is that this efforts that, whatever is in the green, oval are allowed according to prefix list. The shaded areas on the left and the right art and art value would be valid according to But when we apply, the the prefix list verification, they would they would be considered invalid. And as a result, what happens is that if there is any, attack, that that we call forced origin prefix hijack attack attack and that they they the shaded area on the left and the right, they are reduced from the attack surface. With Raul alone, we have those attack surfaces but but with prefix list, those are shared areas to the left and the right outside the outside of the green oval are it used in terms of the attack surface. Next slide, please. And the last, benefit, we can call is that AS NAS can declare that it it originates no prefixes. Prefix list can be created with an empty list in it that is in the draft. Right? I think so. By doing this,"
  },
  {
    "startTime": "00:20:02",
    "text": "the ASS assets that it originates no prefixes in the global routing system. And then you're out showing this AS as the origin, is prefix list invalid, and hence discarded so it is just Tiffany. Says that, yeah, I may somewhere in the path. I may be a transit provider, but I don't originate any prefixes. It works for them to make sure that, some other AS some someone else doesn't abuse, their, AS and originate, prefixes. Okay. Next now we look at a few operational considerations, next day. So first one is, regarding, when the prefix splits, when a prefix owner splits the prefix. The sequence of events, uh-uh, or recommendations for proper operations. Think by OIP customer wants to split its, existing prefix by existing prefix, we mean, it is already included in the prefix list, the AS owner knows about it, and they originate it. And but that prefix, now the OIP customer wants to split it. The AS operator updates its prefix list it continues to improve the less specific, prefix in the prefix list and at the same time, it it it it can right away announce the more specific prefix but also continues to announce the less specific prefix. That's a make before break principle. And, and it and it has a play updated the prefix list and that it allows some time for that prefix list to propagate so that the more specific prefix is also reflected in the prefix list. And then after allowing sufficient time, it, it, it, and"
  },
  {
    "startTime": "00:22:00",
    "text": "it can let the customer know if, but, basically, the more specific has already been announced. It may be invalid for a brief period. Period of time. But once but the less specific prefix is still being announced. So so so it's a operational thing. So that you have made before break. And then the, updated prefix list will propagate. In in due course. And at that point, the more specific prefix, the less specific prefix can be withdrawn. If the owner requested it So it's just being careful about, how you manage the operations in the event of changes. Next slide. So that was, splitting a prefix. Now let's consider a BYOIP customer acquiring a new prefix. They all they already are a customer and they are they the AS is originating some other prefix for them and they have now acquired a new prefix. They're old older existing prefix is included in the prefix list. And the the the new prefix, needs to be included now. So the app or AS operator would upplay, update its prefix list to include this new prefix. It allows some time to let the new pre list propagate through the global RPKI system at which point, it will announce the new prefix and inform the owners, Yes. You're on your way. Your new prefix is now announced. So another, think to be careful about with with the operation on the operation side. Next slide. And in the in all of these, the robot also needs to be upgraded by the IOP customer, and that that can be at, proceeding in parallel. No. That, 3rd, our final operations consideration we have is future readiness for instantaneous announcements. So the prefix owner,"
  },
  {
    "startTime": "00:24:04",
    "text": "which has readiness, for future announcements of some split prefixes. So what they would do is, they would improve them. The more specific fix prefixes in their ROA. A priority and simultaneously inform the AS operator to include them in the prefix list as well. A priority. So by doing this, at a at any time, uh-uh, now, the prefix can be split, and the split prefixes can be, can be readily announced without, the prefix list blocking them. Right? So next slide. So with that, we can go through a few questions, and discuss it. And we'll also come back to TAS question about ASP. So the first question is, should the draft be may get specific and, clearly specify that the more specific prefixes, of an included prefixes are considered invalid if the announced prefix list AS with that and with the prefix list as the origin is. So, Yeah. So just allow only the prefixes that that are specifically, included in the prefix list but the more specific prefixes underneath that would are not allowed that's that's not that's not in the draft yet. It's not clarified. Or perhaps we could. Job Snyder's vastly co offer of the prefix list, draft I'll go through these questions in order and, provide my perspective I believe it is very beneficial if there's a one to one mapping of the prefix as seen in BGP. And the prefixes as enumerated in the prefix list. If we look at, for instance, the next length trick in ROAS, I think by now, most of us will agree that it has brought us nothing but grief."
  },
  {
    "startTime": "00:26:05",
    "text": "Technically, we can come up with, aggregation schemes taking inspiration from how in Cisco or Juno's, you, you can compress prefix list by using greater equal or lesser equal notation. Again, Let's keep it simple. And not, head in the direction of, making it unintuitive to see if ABGP prefix is matching to to a prefix list. If the prefix list, follows the the pre-seven seventy nine inspired prefix notation. I think the binary representation is very small, even for ASS that originate a lot of prefixes. So, we should nuts permits more specifics in BGP. If a less specific is listed on the prefix list. People should just list all prefixes. They originate regardless of more or less specific K. Then in case of ASF, We're doing a a pretty good job killing ASAT through SPAN. We can re it's right that in this draft, or, maybe Warren can progress, the deprecation of assets and, you know, Awareness, we're in this, it's Stuart Trafman. Oh, come on. Warren, if you wanna go to the microphone, please do. About not founds, for routing purposes where using, a binary decision tree. It's invalid. We drop this. Or it's not, and then other considerations apply. So I don't think that not found adding an extra validation step is helpful. N"
  },
  {
    "startTime": "00:28:04",
    "text": "I I also think that with robots in retrospect, it would have been better if we had not in felots. And the rest because, throughout the industry, people if trouble discerning whether there are security implications between not found and valid and sometimes arrive at the conclusion to reject not found routes for security purposes, and and this is unhelpful. So in prefix list, we can maybe avoid this, trap k. K. Sorry. The not found state in, Roa, ROE is not really being used for diagnostic purposes. No. Okay. And then separate drafts, I would say, defining the profile and verification. In in the current draft is easy, and it will help keep the document short. Having a separate draft with, in a narration of in what order to take what steps for what case. Sounds fine to me. So separate draft files out. So proof profile in one draft. Profile and verification in one draft. Operations in a separate draft. Okay. What I think is I could dotcom.com. Alright. There is also, a question about, recommending what prefix list, you should create probably easy. There's only the question about, the empty prefix list who should create an empty prefix list? We currently have that kind of thing for as per in the verification draft. But we can discuss and see what makes sense here Yep. The the So apologies for my monologue, and, thanks for the presentation. Tim. Hi. Yeah, Tim Rogers. Now that that's first of all, I I'd like to echo a it's already set. Regarding Asper, I think that"
  },
  {
    "startTime": "00:30:01",
    "text": "asset rollouts. There may be an operational need to pre provision announcements, that Goods. Be abused because they would be a seventh. And, I think that Oscar will actually help in that regard. And, I think it's good to know that. Regarding the not found outcome. I was kind of on the thinking that it might be useful in in diagnostics regarding how validation works, but I'm not I don't feel strongly about it. Okay. Alright. Lauren Kamari, for one, I think basically what Yobe said, like, Yep. 2, I think maybe it should just be like threw him away because, hopefully, though, we all gone real soon. 3, I don't really understand. Think that's kind of an implementation y thing. And 4, I think it's whatever means we can actually keep the document short and get them out the door. I don't want this to be another, like, ASPA where it's like 14 years, and we haven't got it published yet. My actual original comment though was I hope that when this gets implemented, maybe there could be a little bit of text and documents suggesting this I'd like to be able to on a device compare the things that I'm announcing to what's in my prefix list so that I can be like, these ones I'm announcing and my, you know, peer is likely to throw them away. So that's like egress verification before you send it out. Yeah. That was Yeah. Jeff Houston, 2 points 3, actually. I agree with everything that Job has said. So That's not a problem. To the reason why I'm here. Sir, sir? 2, the reason why I'm up here, who should be authoritative or who should issue a prefix list when there's nothing in it."
  },
  {
    "startTime": "00:32:03",
    "text": "The only party that can issue a prefix list is the AS holder. No one else has the private key. It's not a question. It's a statement. That's easy. The last thing is you used, and I'm not sure if the word was in the draft originally. But we've used the term discard. If you see an origination that's not covered in a prefix list, don't consider it. That's not entirely correct. What you should do is leave it in adjacent ribbon. And what you're doing basically is blocking its move into Fib and to adjacent rib out. K. If you see an date in the security credentials and a new prefix list you don't have to wait for another update in BGP. You can apply that across Jason Ribin, activate that prefix if the list changes in terms of, you know, validity or whatever that I've learned, Whether that clue is so bleeding obvious, you don't need to state it. Or whether we're dealing with five year olds writing BGP code, I leave 2 others to figure out. But you know, so obvious. I would have thought it doesn't need stating, but, you know, in the modern eye, year. Maybe we have to So keep it in the rape. If it is invalid, still keep it in the day. It doesn't to the to the. You know, you told me about it. Yep. I remember that you told me, but I'm not gonna use Bye. Yeah. Correct. So, TS, did your, question get answered? Uh-huh. Hey, Ben. Oh, Hi there. Can you hear me okay? Yes. So I I I'm mostly echo what's been said already. Just on the question of 3rd state. I think that there are I think there were scenarios left during troubleshooting. It's important for operators to know"
  },
  {
    "startTime": "00:34:01",
    "text": "why the the the question is receiving the verification state that it is. But I think the thing that distinguishes this from ROV is that with a row, it can be know, are not obvious exercise to work out whether a particular prefix is covered or not. And therefore, why it's not found. With this, we're talking about single integer. It's a question of is ASX got a prefix set or not. I just don't I don't see if being a problem worth solving in the protocol. It's a very trivial question to answer for an operator. As is. Secondly, just to to what Jeff was was saying, I think we absolutely should call that that faculty out, we saw all manner of operational problems when staff people started playing ROV in the wild where they didn't have you know, their equivalent of soft in bounds configured and we're sending root refreshes all over the place. It would be nice to not have a repeat of that. With this. So I think the paragraph just calling that out would be Okay. Thank you for the comments. Pretty good. Oh, dear folk, retired. First, on yeah. Well, okay. I would suggest that the source representation for the prefix list takes the takes essentially the same syntax as we have for IP address literates, in RPSL, which is a quadruple I have been handling, RPSL my exact matching, prefix list or a root lists, root sets."
  },
  {
    "startTime": "00:36:00",
    "text": "Sorry. Quite some time. And, having the expression power that, the quadruplets actually give is indeed helpful if people if people want to systematically in a enumerate certain certain sets of prefixes. And, it kind of it prevents errors from accidentally not completely enumerate certain stuff. And it shouldn't make anything difficult. The question of drip in. It I think there blaming that this should be done, referring essentially to, the RO the raw case. And, it should be possible just for all of the RPKI based proposals, essentially to reference, please do that. And, Jeff, kind of the nasty, the nasty cases were not recent implementers but the old stuff, and the vendor, not listening to customers, explaining to them why the soft inbound actually is not only for, for, avoiding heart research. Thanks, Rudigar. Okay. For my first question about ASPA, Yeah. I think it's, I will work out the answer on my own. I think it's, because"
  },
  {
    "startTime": "00:38:02",
    "text": "do that if I could get if I have the time, but probably good to consider all partial deployment scenarios for the mechanisms that are available. So we should probably consider it and see where the additive benefit is of every next mechanism and also, what is most important for operators to actually deploy. Right, the most, value is Then about, do not found outcome. Brieflyx this verification, I think it does not add a lot in verification, But when you create a user interface for less experienced users, which operator CA system, maybe, Then it's the states that, really matters and that you need clearly show to them. And I think that CA implementers should be able to work that out on the, themselves, But If that does not end up happening, then CA systems and BGP analysis systems will not clearly showcase that actually is important to distinguish. So I'm leaning towards actually probably spelling it out. Oh, Yeah. We can take it up further on the mailing list, maybe. Can we just go to the oval's pictures. You're regarding your ASPA. That now works I found the converter thing. So in terms of, dealing with the forced origin Hi, Jack, ASPA also helps. This one helps in any direction. It think ASPA helps in the upward direction. In the downward downward direction for storage in prefix hijack can happen a provider can fool its own customer. But this one works across all all those scenarios. I think we can think about that. Think through that carefully. But you are right that, ASPA"
  },
  {
    "startTime": "00:40:00",
    "text": "helps to detect prefixed origin hijacks So in terms of combining the verification results from different schemes, ROV as far prefix list, Whether you want to bring it all into one, like, states, say, state space table and try to try try to decide when to reject and when to accept or whether You just keep them separate and and and use some other mechanism, to or or maybe like each one just says it's invalid and and and just being marked invalid by any of these schemes, should, should be considered a case where the doubt is any ineligible for, part selection So so maybe that's a simple way to say that I may say how it gets combined anyway. But we can discuss it and make sure that we we're getting it right Okay. Ben. So I just wanted to respond to the suggestion that Rudy got made. So I've recently written an AST that amongst other things has the, RPSL set expressions and texts in it. And it is horrendous and complex. And the idea of trying to encode it in send one module in the whole sweats. And I really not do that. think you should really, I think, a flat list of prefix is is what we wanna And if we want to auto generate it somehow, using a UI that accepts our PSL style syntax jacks that's fine by me, and that sounds the scope of the trial, but the object itself is should be a flatness. Sure. Job Snyder's Fastley. For the benefit of the group, I"
  },
  {
    "startTime": "00:42:00",
    "text": "to read its rates, why adjacent written instead of discarding the prefix is important, as people modify their prefix list object, and these modifications trickle down through the publication system and into the RPs and then via R here to the ebhp routers. Every time there's a change, of any robot or any aspect or any prefix list, and the router does not have an competent adjacent rep in data structure, it needs to send BGP route refresh messages to all its neighbors. And this imposes an incredible burden on the global routing system. I did see the the recent RC that describes how to do ROP without route refreshes, and it suggests, a a sort of partial storing of of things. But at the end of the day, an actual adjacent rip in is the superior solution. So Uh-uh. Yeah. I think we are doing it in all three cases now. Right? ROV as far as the same and prefix list would do the same. Doug? So I think that since prefix list and, ROV are addressing the same exact question Right? Route origin validation. It's reasonable for possibly this draft or an operational draft to you know, address the, the concerns of of of operating both in unison. Aspah is solving a different problem. Although it's, you know, it's It's path validation can help in some of the threat space that showed up here, but I don't think the this draft or an operational draft about origin validation has to include Aspah. Some other draft about talking about the overall"
  },
  {
    "startTime": "00:44:04",
    "text": "BGP threat space and the collection of techniques we now have, might be useful I don't think we need to necessarily bring Aspa into this draft. Yeah. That's that's a centrally correct. Yeah. It's but, yeah, but prefix list and row, we can consider the combined state space because they do pretend to fix outage and validation. The queue is empty. Okay. Thank you. Thank you. T Next presentation is on Rowan Management. Yes. Good afternoon, everyone. Yeah. I'm from the Chinese Academy of Sciences. And I'm very glad here to share some observations and sorts about the lower encoding and management. Okay. Let me begin with the stage of the Away? And the the adoption of how we from the left of figure, we can see that half of the BGP rows handled already being covered by Lord, but from the right of figure, we can see that the ROV based filtering ratio is quite low. And also we do the we did some statistics about, routing a root hijacking incidents reported by BGB Stream. And we fund that. 20 28 to 40% of this instance should have been identified by Alwy. But the steel happened. So a lot more, for globally, API deployment,"
  },
  {
    "startTime": "00:46:01",
    "text": "there is still a long way to go. But what the off stackers here today, I will share some some source from the viewpoint of a from, over a network operate Actually, we operate, the, National backbone network in China that also has extensive international connections. So the security in into domain routing is important to us. Actually, we draw on the the minus last year, since then, we have had lots of debates about whether or not to issue a roar for our root prefixes. But now, today, we still do not have enough confidence to do so. Actually want to actually make us hesitant, to create and publish those That's the concerns about the lowest and, our way it'll raise the, which is by the community. Some of them that more than 92% of the advertisement invalidated by ROV as 2 specific. Were actually resulted by the missing of magnets And the others found that pointed out that there are some lose our laws. May cause sub prefix hijacks. The 4 d origin sub prefix hijacks and all those misconfiguration on rows are mostly attributed to human errors. On the other head, There are other studies that have pointed out that there are some reachability issues and the security issues due to the partial deployment of RPKI. This drives us to think about a question. Assume that architecture deployment is complete, and all network operators are careful enough. I mean, there is no human error. Then, would it be confident enough"
  },
  {
    "startTime": "00:48:01",
    "text": "to use our way Unfortunately, the answer is no. We summarized 3 operational scenarios and the key problems with them. Number 1, route planning. I think this is a the most common operation scenario for a network operate For example, we earn, IP address Brock and we have some services to run we announced we usually announce the rules with only part of the prefixes. Within this block. And we will reserve some prefixes for future years In this case, this in in the example, the the prefix is d. F and a g. Reserved for future use. In this case, the prefixes we want to also rise immediately cannot fulfill asaba tree. So we call this scattered authorization insurance Well, the key problem is how to set a proper maxness, Number 2. Business changes. Suppose that we we already have an ROA Ajora, also riding prefix block from slash 20 to slash 22. Then due to some business changes, We want to reserve some prefixes or or even in some cases, if we want to you some rules. Then we may need it to revoke part of the authorizations we previously issued So we call this partial authorization revocation. The key problem here is the missing of the update of operation with roars. Number 3, resource allocation. Suppose that we have an ROA authorizing a preface block from slash 20 to slash 22. Then we allocate a sub address block like, starting from the prefix c"
  },
  {
    "startTime": "00:50:00",
    "text": "to a custom AS Why? Given that we assume the API deployment is complete, So the a s y will have its own lower that covers the prefixes CF and g. In this case, these 3 prefixes are sealed by 2 different roles belonging to different because this market authorization Here, there is a potential security risk with the lower overlap. So next, I will elaborate on those problems 1 by 1. Probably want the delay mark in CD Maxness. This is the corresponding use case is a scattered authorization insurance. For example, we want to authorize the ASX to originate 4 prefixes a bc the e. Then how to set, set as a if we set it to 22, Then 3 prefixes, d FG. Should we will be included in the lower that these three prefixes actually reserved for future use. Namely we won't allow them in the BTP system. So this will cause the forged origin subal prefix, hijacks, the attacker can use these 3 prefixes to hijack the prefix is a p and c. Make them become insecure root prefix. In contrast, if we set the max next to 21, Then the root prefixe will be invalidated by our way So will cause the reachability issue because we assume that RPK is Office deployment is complete. So the so for to deal with the scheduled authorization insurance,"
  },
  {
    "startTime": "00:52:02",
    "text": "there is a dilemma in setting the maximums and the root cause is not whether the operator is careful or not. Root cause is the operational granularity of lower insurance is the binder of a block of prefixes. So should I ask a question here? Sure. What do you call it? I wonder why you seem to assume that you only can a single row out here. You could use 4 rows. Exactly matching. That is simple. You could use also 2 raw, yes, 2 ROAs. And, use max length, just don't assume don't assume that a single root should have one next length Yep. Exactly. Yep. In this example, I just want to elaborate the issue And in in next slide, I will I will compare you just mentioned is the, this, this solution to what we want to PropOS. So, actually, we can announce 2 or more rows with each with the minimal our roars this can work. But in the, next step, I will analyze why this is not a perfect solution. Yeah. Ben? Hi. I think I'm saying mostly what Rudy just said, but you don't need 2 or more rows in this case. Because the the max length is not a property of the roller itself. Proximity of each prefix. A single a single row of, a slash 20 up to 21 Plus, exactly."
  },
  {
    "startTime": "00:54:02",
    "text": "Would do exactly what you seem to be saying not possible to do. I'm not I'm not really following the problem. You don't you don't need more than one of us to do this. Yep. Actually if you need to announce the F or G short notice. But that's that's different to what we're talking about now. Yeah. Exactly in this example, we can use true laws to solve this problem. And but here, I just want to elaborate the esher the stuff that we want to issue 1 lower then we suffer from this delemer. If we can do more It's okay, but I will elaborate the issues the issues with this solution in in the next slide. I would like to add a historic note. The introduction of max length was meant as a Macron notation for denominating a set of robots. Mhmm. Is set of precisely matching laws. So, kind of we are providing you with the possibility to write in in a short in a, in a short form And, well, You seem to be complaining that the short form kind of is not it's is not as expressive as the full language, but, well, okay, that's kind of expected. Yeah. I think I will elaborate on this issue. In exercise. Yeah. Okay. Oh, let's go. Let let me go"
  },
  {
    "startTime": "00:56:05",
    "text": "So we we did some state this data, analytics on the more than 4000 reaps. For each rep, we also connect some, VRPs from the RPGA Rivers on the same day. With every rib and its corresponding VRP set, we measured the insecure root prefix that would be hijacked. Due to loose hours and the invalid root prefix. That would be invalidated by our with VRPs. And the from the left field, it shows the trend since 2011 till now. From the right figure, it demonstrates the case for 20 revers, on this year. And from the results, 2 important points can be can can be can get. 1st, the promotion of the RPK. Reduces invalid the prefixes. But it produces more insecure prefixes. 2nd, currently insecure prefixes and invalid prefixes account for around 10% and 1% respectively. Problem 2, the missing of update operation. The use case is partial, partial revocation. Suppose that we have an ROE also rising, prefix Brooke from slash 20 to slash 22. Then we want to revert the authorizer authorization of 3 prefixes df energy. Then it's not easy to achieve this. We need the 2 step of actions, actions, Step 1 we have to revoke. We have we have to find out all existing rows that contain the target 3 prefixes"
  },
  {
    "startTime": "00:58:00",
    "text": "and then withdraw them. Step 2. We have to reallounce the authorizations for the rest for prefixes. And for this insurance, just goes back to the scattered authorization insurance. So the root cause for this problem is a operational granularity of lower relocation. In the hole Rower. So this is, the second problem. Should I ask as a Cool. Yeah. Okay. Job Snyder's vastly, I'm starting to sort of sense, where you are coming from, and I will agree that that if the problems as you present them are true that you would run into operational issues But I suspect there maybe is a, gap in knowledge about how exactly robots are encoded on the wire and how raw updates are facilitated through so called manifest signed objects. And that you can essentially do atomic changes to, do a, a withdrawal of the free prefixes. So for this particular problem, you you'd have some existing rollout where you say this /20nextlink 22, you would then simply remove the next length 22, you would list the e prefix that you still want to retain. Put that in a new roll on. Delete the old rower from the manifest list the new rower and the manifest and you heard from atomic. Yeah. Presentation towards the, RP, community. So I don't think"
  },
  {
    "startTime": "01:00:00",
    "text": "As I understand, the structure of the files and, and distribution mechanisms in, in the RPKI, that's there is something missing in the, update operation. And Yes. If you somehow remove a rollout. Issue a new manifest, create a new robot, issue another manifest, then you will see gaps like you're describing, but CA's have have the power to to follow, the correct sequence of steps to, to minimize any any, friction. I I am happy to to see the the the rest of the presentation because maybe, there there's something I am missing. But I'm also happy to sit down with you and, show you how robots are encoded and how they hook into manifest to see if we can alleviate your your operational concerns and hopefully get your employer to issue robots. Yeah. Yeah. Yeah. In addition to what Joe was saying, You also can consider a two step procedure that's actually uses the commonly known make before break Parrodine. In this case, you would you would keep the old Roa in place and just issue In parallel, the re desired new set and they don't they don't they don't actually They don't actually interfere there is no problem of having overlapping robots in the tree. And then, well, okay, second step, withdraw the stuff that you do not want anymore"
  },
  {
    "startTime": "01:02:02",
    "text": "And for your example, that's Very straightforward. Yeah. Thank you, Rudiger. Next time. Please put your self in the cans. Thank you. Yeah. Actually, I just want to show with the existing scheme, we can actually deal with this, scenarios with some, like, first no matter first announced, second visual or first visual or second analysis, but I just want to appointed to the outlet if we have defined some like the update operation, we can do any own demand update on any part of the authorizations we pre fields issued Yeah. This is the point I I want to make by this, by by this scenario, Okay. Okay. We also did some like, statistics on on this scenario. And, two points can be funded from the results. First, the partial relocation happens almost every day. With the average number being 1:8:2 per day. Second, the maximum cost of 1 partial relocation instance can be as large and 4000 operations that we need to visual one big role and then a allowance like 4000 smaller ones. Yeah. We found this from the the the the the historic data. Yeah. Yeah. Problem 3, the security risk with lower overlap. Yeah. The this use case, is corresponds to the multi authorization. Yeah. For example, we have an lower authorizing a prefix proxy starting from slash 20two slash"
  },
  {
    "startTime": "01:04:00",
    "text": "22. We allocate a server address procs, to our customer ASY. And authorize it to originate 3 prefixes. CF and at g. Given that we assume the RPK is I forget the deployment is complete. So the customer why will have its own lower that covers the 3 prefixes. Then there is a there is a overlap between two rows. This zero is a potential security risk. Because as a provider, we already allocate the the transfer the privilege to use these three prefixes to my customer. So, basically, we wound amongst these prefixes in the BGP anymore. Then the attacker can use These three prefixes to hijack the prefix a, this is a procedure security risk. To resolve this multi authorization We need the tool we needed to Re revoke this is the authorization of this 3 prefixes. And this goes back to the partial authorization relocation. Then problem 2 arises here So the root cause of this problem is that the operational granularity of roller insurance is a bundle of a block of prefixes. Okay. Go ahead. Okay. So oh, sorry. Go ahead. I'll I'll Michael at the end. Okay. Okay. And Rudiger? A requirement in"
  },
  {
    "startTime": "01:06:01",
    "text": "ROA Management or actually So our certificates, certificate management. Is that When? A CA who owns an address block. Prefix. Delegates a sub block and, gifts the appropriate Certificate to the customer's CA the contract We would like to understand that there should be a contract to your relation between CA the upper and the lower CA where the upper CA promises not to issue roas that inter see your with the delegated block of the co of the customers. If we do not understand this, We And if our rears, for example, don't under stand and, and, conform to that kind of agreement anybody who has ever where has legal address space is running the risk that's The rear. Will be take off will take over any address has been delegated to anybody with the rears, I think, it is kind of a quiet understanding. Not quite sure whether"
  },
  {
    "startTime": "01:08:02",
    "text": "any of the rears has kind of recently done that agreement. When you go down, we allocate, the allocations, 3 it becomes more important to actually have accompanying agreements like this with doing allocations of address space. Yeah. Yeah. I think this is, this is the point that I want to make here. Better for the practical operations, we always isherr1st. Then we have some customers and then we signed some agreement with them. And it's just we but I I promise that we we won't have use these resources anymore, then to achieve this, we may need to revoke those authorizations from previous we showed yours. Yeah. So this is that the point I want to make here. Yeah. Thank you. Carlos, please go ahead. Actually kind of providing some context information for, I'm sorry, Carlos Lagnique. For what, Rudiger mentioned in our region particularly on policy was recently approved year ago, something like that. That actually ask ask to implement the ability of creating robots to prefixes that were allocated by, majority holder, if you will. That was not possible before. I mean, if you received an a sub allocation from an ISP, you had to ask the ASP to create the ROS for you, and it was quite friction. There was a plate of friction there. So these days, if the"
  },
  {
    "startTime": "01:10:01",
    "text": "allocation is properly registered in the database, which is, we almost I 20 it's mandatory because a very old policy then the recipient of the salable cell allocation can create ROS. Whether they do that or not, that's a different thing. Another thing is, they don't get to manage they don't get any management over resource So we don't create a new resource certificate. So if if, the holder remove this allocation because some commercially, relation ends. Derose automatically deleted. The roles created by the recipient of the self delegation. Kind of complicated to explain this in the year, but it's, plate plate plate plate plate plate plate plate plate plate plate plate plate plate plate plate plate plate plate plate plate plate plate Wait, logical. Mhmm. Yeah. Thanks for the comments. Yeah. Okay. I will go on this Yeah. We also do some Wait. I think the first person who wanted to talk to Scott Beggin Go on. Yeah. I don't see it. And and now I will jump in. I thought you were a little bit global. I'm I'm standing here to reassure you. That we're running a big network too. And we run-in all these sorts of questions as well. And It's just a matter of the correct provisioning procedures. If you are migrating a prefix and you follow an 8 step process, This probably will not occur. And we have signed 98% of our the prefix is in our customer The ones that were hit most my RPKI was when a few months ago, a Brazilian I started to hijack part of the IP 6cetera space. And the only customers had a no had a problem where the 2% of customers that didn't have their rowers. So I'm just here to reassure you. I understand it's difficult"
  },
  {
    "startTime": "01:12:00",
    "text": "in at 1st to get these processes correct in the steps that you operationally need to do. I'm just here to tell you it's possible. Okay. Thank you. Thanks for your comments. Yeah. Okay. I will I will do yeah, we also did some statistics on on this scenario and we found that the number of multi authorization instances increases year by year And in the case of possible resource allocation, accounts for around the 50% to 80% of the instance where there is a potential security risk Actually, there is a minded or something like that, multi authorization just for the m o a s. Yeah. So we just, and we found that the possible resource allocation accounts for like, around the 50% to 80% of the instance. So, here is a very brief summary. We just want to show the relationship between the 3 problems we can see from the right Yeah. If if, the failure of the market authorization resolution may cause the security issues. But if we want to, resolve multi authorizations that goes through the partial authorization relocation. And the video to to deal with the partial relocation will cause security issues, but you deal with the partial authorization relocation, it goes to the scattered authorization insurance. Then finally, we go through the dilemma in saying the marksness as revealed Yep. Maureen. Yep. So I'll be the first to admit that I'm not this like have roast Bunny in the bunch. Actually, I suspect Joe would be the first to note I'm not potential risk money in the bunch. But but but And at least a couple of the networks that I run"
  },
  {
    "startTime": "01:14:02",
    "text": "We just announced, like, the prefixes we announce with the max length set to the actual link that we announced at and, like, basically, all of these problems that you disappear. So if you don't have a huge chunk of prefixes, Right? You've announce 8 different prefixes. Exactly. You have 8 rowers. The max length is the or prefix length and done. Like, Yeah. Am I missing how that doesn't solve the problem? Exactly. Yeah. Will discuss this in the next slide. Okay. Doug, I'd I'd like to go at the end. I have a actually a question, for Carlos about his comment from Lochnick. So Keith, thank you. Okay. Okay. Okay. Let's go. Let me go Yeah. So in regard to these three partners, we process the requirements for managing always. Number 1, the fine granularity This this the encoding scheme should enable to manage authorizations and the prefix granularity, namely the exact authorization, just like a war instead And is number 2, the scheme should enable Lowers to be updated on demand with partial authorizations involved Number 3, we should also keep the, efficiency and the elability, high enough to keep the operational costs Reason number, Okay. How? Then this is a current solutions. In my mind, we find that just the they cannot fully satisfy the proper requirements. I think the first solution I called a single prefix lower It's just as a as a warm, Warren mentioned that we want to announce, like, 4 prefixes then we issue 4 rows. And the second production is called minimal ROA like the"
  },
  {
    "startTime": "01:16:01",
    "text": "FSA 9319. That it will do some conditional aggregation with those exact authorizations. We just analyst, satisfaction of these true solutions. Like, for the the the single prefix row, solution. It can, achieve a very find granny granny find grand management and data support incremental updates but, it's encoding infancy and scalability is not that high. Regarding that for the entire BTP read, there is many years of prefixes if we need to maintain minutes of rows it's a grid burden to the router. Or the RP So this is is the the drawback of the the single prefix are lower solution. For the second solution, Yeah. It's better in the encoding efficiency and scalability that it cannot support incremental updates. Cannot support to manage prefixes and the prefix granularity So here is another option. Maybe we can encode lower with bitmaps. For example, in this example, we want to announce for prefixes, a, b, c, and then we only needed to issue 1 bitmap will each set a bit represent and authorize the prefix And in this way, we enablers to manage it pre manages authorizations and the prefix granularity and also we support the only mind update, for any part of the authorizations while very efficient bit wise operations, And but the only drawback of this solution is that it cannot deal with a very big prefix proxy"
  },
  {
    "startTime": "01:18:01",
    "text": "But from this view, the high in our way and the minimum our way are complimentary to each other. Also, we like to analyze the trend of the maximum settings Like, we we we found that the the, like, the the difference between the marksness and the prefixness, is getting smaller and a smaller currently for more than 94% of VRPs The total is smaller than 5. And for 83% ipv4vrPs and the 81% IPV 6 VRPs. Dirt is there. That means The marksness is the same and the prefixness. So in in this figure, we can see that The trend there is that the small sized we are small size the authorizations is the trend. So we make some recommendations First, for lower insurance, we recommend to issue exact authorizations whenever possible. 2nd, So we re we'd recommend that you use high in our way. To encode authorizations unless there are risks that need to encode another prefix block. Such as the AS00 Zilar. 2nd, for the raw update, We suggest that you make only mind updates on part of the authorizations in Zoho whenever possible. To reduce the operations in updated the part of the authorizations last, for the IP allocation, we suggest that you ensure that the customer gets it's lower after IP allocation and the provider's lower is updated Yeah. This this or"
  },
  {
    "startTime": "01:20:01",
    "text": "for my for my talk. And this there are some resources. The first the first of all is the drop we just submitted And then the second one, this purpose engineer is bitmap based scheme. Thank you. Doug, It's almost done piping the question. So the question was really from for Carlos in the comment about Lochnick, when when when When you allow a properly registered customer with a with a you know, a a sub block of a provider based address block to create ROAs without issuing a new certificate, e you limit the scope of the prefixes, right, that can be included in that Roa. To to just the subset of the of the sub allocation Clear clearly, the certificate would permit them to create beyond their scope. Just interested in how that works. Sure. Go ahead, Carlos. Dude. They use, I mean, the the then organizations that they receive the several locations. They use the parent's resource and certificate. What I meant is no new certif no new resource certificates I created. And, yes, the salable patients are received from the blocks owned by the parent. I don't know if it's answers. Right. So that's controlled in in the user interface or the API to make sure it stays within the scope of the sub allocation because you know, the the normal X 509 Yeah. Yeah. Yeah. Yeah. Validation rules won't protect you there. You're right. It's controlled by by the API, basically. Thanks. Ts. I should have really queued up physically already, actually."
  },
  {
    "startTime": "01:22:01",
    "text": "Yeah, I think I agree with you that the bitmap encoding can be more efficient for some situations. I'm not sure how often that it happen. But if you look at it holistically, We 1st, let's recall that when you up when you issue a robot, you need to replace object all at once and sign it again, gets a new certificate, most of the waste is in the, there's difficulties that are attached and the signatures. Yeah. Exactly. If you if you want to do a full analysis of letter, it's we need a more complicated, scheme for describing authorized prefixes, with the bitmap and coding, maybe a subtractive semantics. I think that it's It would be really nice and I'm asking a lot of work here to also consider the churn in us that happens over time. Because, what we see as a CA operator is that a lot of data wasted where an object is recreated. And if you have, CA that would create a lot of objects and actually mutate them, often. The most efficient solution may actually be the single prefix, row up. On the opposite end for a CA that never updates issuing one with all the prefix or there's no problem. So I was really I would We like to see nurses that considers this dynamic effect as well. Com. Yeah. Exactly. Thanks for the comments. Actually, we analyze the piece map based encoding. Actually, from the CA side, it's not merged for the efficiency. Is just and more flexibility in managing authorizations. Yeah. This is this is a benefit on the C side. For the efficiency, I think we most consider the the case for the RP or the router because for the single prefix LoRa, there is a much burden to the loudera all through the architecture. But but but"
  },
  {
    "startTime": "01:24:01",
    "text": "how I understand it's a transmission to the router. It doesn't really depend on the ROAS, is the RTI protocol, which would would, normalize this. Yeah. Yeah. But for the IP, it needs more efficient Mhmm. But practice, I think you can create 1 row with a lot of prefixes on it. It's not elegant. It but it works. It's big. The recommendation to create, ROS that contain a single prefix and it definitely has benefits if your resources change. But if you, hit the situation where we need to create a lot of robots, it's it's I would lean, and I think it's better to create this role with many prefixes on it even though that elegance Yeah. Exactly. Yeah. You are you are right. Yeah. We we did some, like, evaluations with some like, with the to encode the entire re or entire, include some other data sets. We just found that I use a, use a piece map based solution. Can reduce more than half of the encoded entries. I think this is a benefit for the our piece of the world to manage users entries. And also it will be a benefit for the router to process those authorizations, and And the faster we yeah. Yep. We we did some evaluations on on this part. Well, maybe we can add those just results to the draft, later. Yeah. All shared, I mean, like, in, like, slides. I'm Yeah. It's, it's, interesting to think about this. Yeah. Thank you. Thank you. Okay. Just as a reminder, we have 5 minutes left the session and three people in the queue. So please be I'll I'll I'll be fascinated. Okay. I'm following up with you again. So the the publication of minimal row as it's in our seats, 9319 Bcp18, 85 I think you've you've read that too. I have a question. So when you're doing the hanging rows, how does that change"
  },
  {
    "startTime": "01:26:04",
    "text": "when you need to migrate add or delete prefixes, from Your authority. Right? I think you still need to have a process. And, you know, the process of migrating or adding prefix to your routing, obviously, is not only the rower management It's also managing your prefix lists for source address validation and the whole charade that you need to go through when you're migrating one of these in prefixes. So How does your your your different bitmap change that provisioning process because robots need to propagate Yeah. Let me think about it. Yeah. For the first for the first part, here. To perform the changes with the Hainan Norway we still need this to, like, to published some lower with the flag set it to elancement or withdraw. Then we use this bitmap to perform a bit wise operation with the existing one like, we'll bitwise all or bitwise add to to to perform these updates. Yeah. This this is for the first part. Actually, we are now working on another draft to detailing the operate the operations with the beaten map based asking. And now I just want to like to to to elaborate the problem that why we need those speed map based, scheme. So so I'm I would be very interested in hearing that. Right? Because, of course, in my experience, We don't have that many cases where you would need that sort of bit, That's that's one. And and and the other thing, you know, I don't see how this can open operationally speed up change changing the bitmaps."
  },
  {
    "startTime": "01:28:03",
    "text": "So that that just just Yeah. I I I can send you some some data. Of night. Yeah. We we we do have some data about this. Helped. Job Snyder's nicely. Using a bitmap. Or or a bit masking, style of of expressing expressing, the the set of prefixes As far as I understand it, adds nothing that can all that can not already be done with the current encoding mechanism. That's right. Utility. So recognizing that Yes. We can encode things in multiple ways on the wire, but we already have a way that's been around for 12 plus years. At doesn't seem super beneficial to me to to work towards a new encoding mechanism that By definition, does not add something new other than it being different. And I think this will be a significant burden on RP implementers. NCAs and then ultimately also to network operators. Because it it having multiple ways to do the same thing is is, a path towards confusion. So I think, as a next step, perhaps, we can take 1 or 2 of the examples where you perceive, a risk, And, I can elaborate on how on the file system, you would move through the motions and use RPQI manifest to have atomic, updated. Procedures, because I I think they're is maybe a gap in understanding of how the system is implemented on the wire. And, how that translates to potential risks that you perceive. And I think you"
  },
  {
    "startTime": "01:30:01",
    "text": "Hopefully, at that end of that conversation, you will be pleasantly surprised to see that the current system accommodates all the deployment scenarios that at this point in time concern you. So I Let's let's work through some examples, and then I I think, we will, both the wiser. Okay. Okay. Thanks for the comments. It just want just one sentence to, to to, for response. Yeah. Actually, as a network operator, We are thinking about it to use a a drawer as a but we found that the current, the existing scheme cannot fund a the trade off between security, Usibility and the scalability. I can see, sir, very original motivation that we want to find out some new scheme, to to have this, since all covered Yeah. Yeah. So just for later, I will I will I can I can share you some more details about what we saw about this and the examples and some evaluation results And also, a good sense for your comments? Thank you. Okay. So I encourage you guys to find a few time a few minutes to talk to each other, but we're out of time. I do want to, Note that the chairs have been approached, about a whole bunch of, related things in the hallways here during the week, and I know that people are concerned about ASR and some things with it and wanted to use the any other business time to talk about that but we are out of time. And so please take those to the list. We we won't approve the we won't move out of last call. Until we see that those discussions have been taken place on the list. But we are out of time. The IETF ended a minute ago. So."
  },
  {
    "startTime": "01:32:00",
    "text": "Thank you, guys. This IETF meeting. Thank you all. And please continue the discussions on the list. I want to use any other business as well. Yeah. Okay. It's gonna ask, US chair to"
  }
]
