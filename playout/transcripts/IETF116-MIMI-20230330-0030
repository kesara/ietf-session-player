[
  {
    "startTime": "00:00:15",
    "text": "Alright. thirty. Yeah. It's Nine thirty past the hour by my clock. So I think it's time to formally start this. Okay. Welcome everybody. To the an Eye session work group session for more instant messaging interoperability. So first off, I've been asked to point out that background image on this type of slide was generated using stable diffusion. That's interesting good of trivia. Also, we know the data's is wrong on the slide. It is in fact March t thirty. If you're in japan. Okay. Moving on. So we'd ask you to take a moment to make a note of It policies for how these meetings are run both in terms of the code conduct, intellectual property. And, of course, the mass policy I think the salient points are that you must wear mask times unless you are actively eating drinking or at the microphone speaking. Okay. Right. And before move on, I should ask for a note taker. Do we have any volunteers to take notes for this session, please. Pete pete res neck fading notes. Right. Thank you very much of appreciate. Okay. Next, so the agenda for today, we're gonna have a bunch of talks covering a number of drafts that have been submitted already. So first off at, which we're doing right now. Next row is going to talk to us about the content format draft. Then we have a handful of presentations, a number of presentations rather pertaining to message transport or message transfer or message delivery protocols. Up to you which now you prefer?"
  },
  {
    "startTime": "00:02:02",
    "text": "First Travis and Matthew, are gonna be looking at matrix as a transport the join up Rosenberg on the Bd Transfer protocol. Rafael Robert on the Bb delivery service. And finally, Ec is going to wrap up this section by discussing a different requirement, the the requirements for these transport report or transfer protocols. Then finally, we'll discuss the process for this working group going forward. Alright. So any comments objections to the agenda, Alright. Let's say to overview. Thanks. So just to kind of motivate the ordering of items on the agenda and try to get a little bit of a level set on what we as the chairs think is a reasonable prioritization of the work items in this group since it's the first time it's meeting. We wanted to to sort of tick through the main lines of effort and you know, try to give people a clear picture of of what we're seeing emerges as the drafts have been rolling in. So there's there's really kind of five lines of effort as articulated in the charter and and based on the work that's been done thus far. The first three are are here on this slide. There's the content format. This is, you know, how do we express messages going back and forth and the features that they support also includes to build beyond whatever we standardize there a requirements draft that's been submitted in that space and also a couple of different alternatives for specifications and, of course, existing building blocks like mime and your eyes that are being reused in and some of those drafts. Then we get to as Tim said, what is alternatively called"
  },
  {
    "startTime": "00:04:01",
    "text": "sometimes message transfer, transfer message delivery, sometimes called transport. These are all vaguely the same the same thing. I'm sure we'll settle on. On a favorite terms soon enough. But this is like, the protocol mechanics for how providers of messaging services exchange messages, how users on different services initiate contact with each other and may include some components of implementing how the delivery service functions are performed. So again, here, there's a requirements draft. There's a a number of different specifications. And we'll hear from several of those authors today. And spend a good chunk of our time today on kind of motivating the requirements for for that bit. Then there's what some people have been calling the Ml profile, which is a kind of an explanation of the details of how you operationalize Ml to be able to build of sort of full featured messaging application. And there's bits of that in in Rafael draft, I think. But hopefully, we'll get a little bit more clarity on on that as a distinct work item. As we go through. Next. And then the last two identifier naming convention, so we need to agree some way of how do we identify all the entities in these in these systems. There's a couple of drops there. And then finally end to an identity, so how do we actually link the crypto representation of a user our client to a non identity in in the real world. And this could include some of the Ml authentication service bits as well. And there's a couple of couple of drafts in that space and some existing prior work that could be reused. So if go to the next slide,"
  },
  {
    "startTime": "00:06:02",
    "text": "the way that we see a a logical prioritization of this work is is here on the slide. So think if we think about this as like, you know, instead of building blocks that over time could be composed to create inter messaging services you obviously absolutely need the content formats and it just of seems like the lowest hanging fruit something that I could we could come to agreement on. Potentially more quickly than some of the others. So we think prioritizing that you know, trying to make progress on that. Might be a little bit simpler and and we have to do it for everything else anyway so we might as well do it first. Then the message transfer protocol and really that's like tied in with the identifier naming conventions. You sort of need both of them to go together. So we think that's that's the next highest priority Profile, which hopefully would fall out of that once the transfer protocol is a little bit more mature. And then finally the identity piece, which is quite a bit thorn and everything we would will take more time. This is kind of what we're proposing as far as, you know, not strict ordering. It's not like we're not gonna work on something later until, you know, the earlier items are complete. But in terms of how we allocate time, for discussion in the working group and and how we try to demonstrate progress. This is the chair proposal for for how we prioritize. So any comments or questions on that? Okay. Then I think we can kick it off with Rowan, who's gonna talk about the content format. Hello, everyone. Good good morning."
  },
  {
    "startTime": "00:08:06",
    "text": "Alright. Rowan May. This is the nail basically year old. Content format documents. Next slide, please. Okay. The goal here is that if we are going to be end end encrypting in a federated or inter environments. The thing that is inside of the end to end encryption needs to be something that's all of the understand. So having a standard format, for common instant messaging features. Would be useful. So I just, you know, did a very informal survey of a lot of different consumer and enterprise messaging platforms, and I came up with a list of features and did not get a lot of you know, got some nods and not a lot of people saying, hey, You forgot something or, you know, that's not common. The list is there, plain rich text messaging, mentions, replies. Reactions edit edits and deletes of previously sent messages. Expiring messages delivery notifications and receipts. Message threading. And then sharing files and calling and conferencing. So the sharing files on calling and conferencing, those are not completely in scope, but the others are definitely but I've considered core sort of messages that are that are set by lots and lots of different instant messengers. And Not coincidentally coincidentally, this happens to address a mimi charter item because I was one of the people who was promoting mimi. So this while it's focus is to be like a very kind of small narrow set of stuff."
  },
  {
    "startTime": "00:10:04",
    "text": "That we should be able to extend this format and also have the option in some cases of sending proprietary formats alongside of or instead of a standard format. Next slide, please. Okay. So the approach that I took in the this version of the draft, So first of all, this version now has an abstract syntax to focus more firmly on the semantics. So when I originally wrote this, over a year ago, wanted to answer the objection of, like, not inventing a bunch of new stuff, so I used the thing that we did a long time ago in the instant messaging and presence protocol working group called Cp p. Which nobody particularly liked at the time and I still you know, also thought it was ugly. But that was the sole comment that I received on this draft over the last year. So this now has no... No cp at all. The... But in order to avoid us getting into syntax force, The semantics are expressed using basically, you know, like a c str style. Definition. But those metrics have remained largely unchanged for this whole year. So what's in there? So each of these... So there is a sort of a a thing that I call a message container type. And there is a message report type. A message report just gives a... This the status of a list of messages and what their statuses are. The message container type has on mandatory part which is a time. And a unique message Id. And then it has other optional fields that can be used to"
  },
  {
    "startTime": "00:12:03",
    "text": "give additional information, so we can refer to other messages. To indicate a reply or a reaction. We can edit or delete a a previously sent message. We can express that there is a fixed expiration time and we could express their messages as part of a thread. And finally, with the exception of deletions, basically, all messages have a body of some kind. Because the whole purpose of sending it, you know, instant messages or reaction, or editing a message is to send some actual content. And I will note that There is no sort of equivalent of a two or a from field and that is because In mimi, we are assuming that we're gonna be using Ml for encryption. And I did not want the message container to duplicate information that's already integrity protected by the protocol that's carrying it. So, you know, if we wanted to use this format in another protocol and we could come up with new corresponding fields. I have no objection to that. For the sake of Clarity And for highlighting this point, I did not include fields that would have been duplicate information of something in indian closing protocol. Next slide, please. Okay. So finally, we had some non trivial list discussion and comments from mainly from Jonathan and Eric Sc. So I'm gonna go through what I think are the most relevant of those. Next slide, please? So regarding this issue, I already touched on for values that are already in."
  },
  {
    "startTime": "00:14:00",
    "text": "So the two address would be corresponding to the Group Id in Ml. It's already integrity protected. And likewise, the sender, this the you know, the client identity. Is is included in. We can derive this unless. The exact details of the formats of those, you know, identifier that is still... That is still Tb here in mimi. But the question remains you know, should we send fields with these semantics in the message container anyway or should we leave them out because we... Because they're already somewhere else in a but in a message in an integrity protected way. So my proposal is that we leave them out when they're already protected in the imposing protocol and that if we want to create relevant fields, if we are not using Ml, we are free to do that or create an extension to do that. Does anyone object with to this way... Does anyone have strong objection to this or like to make a comment you know, if we want, we can defer these until later. Let's just do them one. By one. So please join the queue and the tool if you wanna come up. Okay. Jonathan Jonathan Rosenberg five nine. So I do prefer to have them there all the time. The main reason is I anticipate this content gets put moved around, not just to move through To the client, but, like, oh there'll be a log somewhere on my client or... Oh, I wanna report this message was from a malicious person send me the thing they sent you. Right? That there's gonna be places this goes, and I I sort of like the idea that this is self contained fully defining the context"
  },
  {
    "startTime": "00:16:01",
    "text": "which you can interpret what this is. And without the two and the from, it's like missing the two most important things to be used in any form context you know, outside of. And and so just I don't see the harm in having it always there. So and just as a design construct I like the idea of the message being self contained and not dependent on the Ml s layer for fully defining its semantics. And you would be depending on the Layer for that information. Thank you. Gilmore. I'm really nervous about trying to include this. So I think I'm on the opposite aside from you Jonathan here on this discussion. However, if we are saying that these fields might be optional present, then we still have the same problem. The problem I'm concerned about is when they disagree with what's on the side. And if we say, well somebody else could define them option later, then they could show up later and the the the critical thing is that when you receive a message, you don't get confused between what's on the outside and what's on the inside. So I would love it if we could say you must not ever define anything that matches these semantics I don't know that we can get away with that if this is gonna be ex. And so maybe it is a better idea to say, here's how you could specify it. And here is very strict guidance on what to do when receiving the thing, so that you don't have the the classic confusion where the message on the side said it was from and two blah blah blah. And on the inside it says, it was from somebody else. Yeah. On Daniel conquer point D was just making. Is a bad idea to have these pills exist for exactly your business indicating. Because his opportunity have to be incorrect. So I think my rank ordering is roughly the same as D. I wish we could make possible policy, we should make it very very clear that"
  },
  {
    "startTime": "00:18:00",
    "text": "I mean there's no... There's really just no use for them. Like there's just new values for them. Alright and then in the two is actually and and and you know, the two is actually sometimes even worse. Right? Because... I mean, the former at least reflects some Estate Who's just a better assertion with no way. With like, like you're like you know, it doesn't even really like that... I mean, when we partial flexible in. So... Yeah. So I I I think peter bad news. Yeah. And I wanna point out one other thing, which is that the group Id is the thing that is integrity protected. But in terms of what you might actually store on a client in a you know, encrypted at rest database is could be, you know, could be like a mapping from that something else. Quite likely that it would that it may, you know, have them a friend name or a more local a more localized way of recording that information and likewise, the sender is the is this the clients identifier which is probably not exactly the user identifier that you that a user would want see when going through a message. What's the messages. Yep. I fully agree with D one and D two. I also wanted to add that what users get to see in the end? In terms of who the sender is, that authentication has to come from the S layer anyway. Because otherwise, there's a huge risk you just display something that's a mismatch. And and then the question is why do you need to repeat it and what do you do with it in practical terms? If before you display any anyway comes from the m and s layer. That's his security property here. Yep. Finally, rafael you stay at the microphone for a second."
  },
  {
    "startTime": "00:20:00",
    "text": "I wanted to point out that the sender might be synonymous address which is used for privacy. Jonathan? The sender might be pseudo synonymous. It might be a suit him. For privacy purposes? And so it's unclear if that's really what you wanna store database or whether you wanna actually d you know, the pseudo. Come up with the actual users. Identity. Okay. Harold two questions because I done... One one because I don't understand everything. The Values. Are they known to the center before he starts composing the message? Yes. Good. So the is possible to sort. The other thing is a comment more or to Johnson. A log entry saying message from two. Is an a assertion of message having been sent. It's not the message. I think we should keep these as two distinct entities. We might want to defend those. So her cisco. I I get the security point of having them have be the source of crude for this information. But there are many mailboxes are some of the that we have is that in talking to the between the parameters, they might not have an access to the context. So and they have to make some information, some decisions on based on that. They need to have information. We need to agree with D saying that we need to provide that information taken from the and put it in out roll up, But That's how how would they read that information inside the content format, which is end it's specifically so the provider cannot read it. Are you making that requirement? That is currently a requirement the way the charter is written."
  },
  {
    "startTime": "00:22:03",
    "text": "Okay. So there's no way that the middle box is that the providers could could inspect this if it was if it did exist. Okay. Thanks. So we're gonna close the queue on this in in a minute. If want to get in the queue, please. Get in there now. Go ahead, martin. Okay. One thing that we also should think about is that things like forward or e retreat or so you you have A message or maybe part of a message that was Was transferred then included in another one And there you might want you want some information on on who sent it to whom And and the question then is also how to do that. So I guess the the my first question is, you including it by value or you including it by reference? Yeah. That's a good question. Because if you're including it by value, then you... Then the sender can lie and put whatever they want. Yes. If you're including it by reference, then you simply would use a message Id of a message that... That the sender had previously received. Kinds of possibilities that there from just putting some general information, this was John Smith who sent it to having some encryption signing stuff to make sure it's really the one that happened whatever, but it's it's something we should also think about Okay. This is My jordan. Thanks. I I was just gonna kinda chime in favor of expressing information inside the the message. On the basis of the analogy up the Host header and And I. There's kind of an okay mapping between Tls"
  },
  {
    "startTime": "00:24:03",
    "text": "and hear in that the credentials that are carried in either of those cases can authenticate multiple identifier. And a given message will wanna be from one of those identifier. And so I think there's it's plausible that we would express. You know, you're not to do the mapping. You're gonna verify on the claim identifier one the ones so authenticated. I think it's plausible. You might choose one one sec. Colon. Calling James. I mean, I I was really getting on my major plan is, I think this is low level of detail for us to worry about right now. I think we should get into this much later in the working group as we get closer to the end and I I get the arguments both ways. I think there'll be... You know, people need to keep in mind Ml requires you to delete your keys pretty frequently and most of the clients I'm familiar with display history going much by farther back than that. So there will be at least some parts of it where I minute rowan you were touching on that of this data will promptly be copied from wherever it was on the wire to somewhere else in a different way. And I you know, I I just think this is is in the relevant detail at this stage of where we are in the working group and we need to get think the. Thanks. Thanks. I think that's a lovely time for us to go to the next slide. Thank you Okay. So this is not a so much a question as just a restate of something that is not obvious because it's the detail of this is not in this not in this working group. So how does a client know what formats are okay to use So there is a content advertisement extension, which is part of draft Extensions. Section three two dot three. And then there is that uses mechanism in the leaf node and key packages sections, of the Core protocol and the required capabilities extension."
  },
  {
    "startTime": "00:26:00",
    "text": "Of the protocol. But basically, You can always tell What the supported media types are for any member of a group that you're in Because those are in the leaf nodes. For that for each of those users. You can tell when you go fetch a key package because you want to try to add someone to a group, what they support You can tell what the required media types are if any for a group and all and there's, you know, Enforces that all clients need to support all of the mandatory required capabilities And then you can update that if ever if the resulting group is still consistent, you can update that with a group context extensions proposal. So That's kind of that's how it works. If you don't think if you if you go and read these sections and still don't think it works, or you fix your problem, please. Come to me or send a message on the mailing list, and we'll figure it out. Next slide, please. Okay. We had a long discussion about the difference between threads and replies. So the intention of in reply two is that a single message that you are about to send is in reply to a single previous message, specific previous message. And that the intention was that this is not to be used for selecting the order of messages or to to be used for Friday or anything of that nature. And I have in, you know, here the examples of the example of the user interface of two different messengers, one which is vaguely you know, hybrid consumer enterprise and the other which is consumer. Using this feature"
  },
  {
    "startTime": "00:28:00",
    "text": "So we also in the in this draft to use in reply two for reactions. So if you want to like a message or unlike a message, because a reaction is always directly in response to a single previous message. You're liking that message. And in in the most of the systems that implement this, you can reply to a reply you can reply to a reply to a reply. You can like a reply you can unlike a reply. So importantly, this is a reference the previous message. So the sender the composer of the reply isn't editing the reply message. Like you do an email know replies in line. You... Most messaging systems just quote, the most recent message in the reply, but you could presumably have the you know, show some tree of or show some hierarchy of replies to replenish to replies. Most importantly, this doesn't affect the rendering order in any of these systems. So I, you know, can reply to a message that was a month old. And indeed, often this is, you know, somebody is... Somebody says, what's the... You know, how do I find this thing and I go when I, you know, reply to basically bump a conversation back to something that happened three weeks ago, that's that's all kind of normal behavior of the way that replies are used today. So the way that the way the draft is written in reply to is completely consistent with this existing behavior Any clarifying questions on this? Next slide, please. Alright. There are also messaging systems that have threading. So these are... This is particularly useful in enterprise I systems. Slack does a excellent job of the user interface for this. Basically, all the messages in the thread are rendered linearly."
  },
  {
    "startTime": "00:30:01",
    "text": "There is no indentation. There's no... You know, you can't You don't specifically reply to a specific message in a in a thread, You just send a message in the thread. And if you didn't mean to send a message about that topic, you should have created another thread or replied in the main the main group or channel. So consistent with that usage a thread idea a thread Id in this Document identifies a single ancestor id. All messages that have the same ancestor message Id would be rendered in a single list of messages. And there is no attempt to there's no attempt to define what the rendering order is according to any other field. The only time that in reply two seems that it is appropriate in fred is when you are liking or unlikely a message. That has been that is in the thread. So I assumed that We don't need to to use any specific new header for specific rendering order and that you can just use the timestamp stamp. Eric. Yes. So You I discuss us in a list I think this is a bad idea. For several reasons. First of all, client clocks are actually very good. Except for Alvin? Second, it's you know, Alright. It's it's really, you know, quite common. Well so I just clear quite crashed for clash. I quite wrong. And you know, in a thread, you know, thirty seconds is actually quite enough minute change you're ordering. The Alright. Second, there's an obvious attack. Which I seven my clock even modestly far in the future and now I'm dead by the bottom of the. And I stay understood the line the friend. So"
  },
  {
    "startTime": "00:32:02",
    "text": "I relief... I as I said in the message, It'd be to actually specify the parent the current message? And I think even more generally, think that this is sort of like projecting too much these interface in the system. Into the protocol. Which is I would only do reply. And I... And that creates a dag, and then I would allow the the system decide how as bad rather threads or replies. Sorry. Could you could you say that last part a little more slowly and clearly? Even I didn't understand this is what you said. Would only do in reply two. And I would not use threats. And I would allow the receiving system to decide how with displayed. Okay. So I I I really don't like using in reply two for threading at all. Because the semantics have been replied to ...in my opinion are very clear and do something very useful. Which is totally different than what you're proposing for threading. But I don't have any objection to have something separate about the parents you know, parent and thread or something something different, which does what you described. Well, as I said, I that's it I think an issue for the client to decide how to render the information, not. I'm not persuaded the are fact difference. I'm not Okay. Daniel no. Gilmore more. I'm sorry that I'm not following this as closely as I would like to. I don't actually understand how this thrilling mechanism works. So my understanding is that every message that has a single ancestor message thread Id. And just your message Id, Mark as a thread. As the threat Id is in the same thread. Right? But those messages themselves have message ids. Yes."
  },
  {
    "startTime": "00:34:00",
    "text": "And I can then make a new message that has one of those messages as an ancestor. No. You can't have an answer Yes. Yes. Please go ahead. Yes. So is the ancestor message in the thread or not? The ancestor message The third Id. That was with a bunch of other messages, all those messages are in a thread. Okay. And so now if I make a new message, and it chooses its ancestor thread Id to be one of the messages that's not the. Is it in the thread? Is it in the same thread or that is in its own... It's in its own thread that it has... And its ancestor is not in its own threat. Correct. So some ancestors are joined to the thread and other ancestors are not. Correct. I find this very confusing. As a as a as a concept, and I don't know how I would represent that to the user in any way that they would understand what the hell is going on. Thank you. We're gonna close the queue in a minute. So if you want to be in the queue for this, please get in. Travis. So I do agree that threads and replies are different I they have different semantics. Though it is quite I guess important, I think for replies in threads to be possible. Particularly just for larger conversations. Jonathan. Jonathan Rosenberg. I also agree that threads and replies are different. And I think they run the risk of leading to a different form of interoperability which is defying user expectations. That I sent system something on one system that to me was starting a thread. And to the person looks like reply or vice versa. These are the kind of like, confusion"
  },
  {
    "startTime": "00:36:04",
    "text": "and interoperability challenges that have played. Systems. So I think being more rigorous with making sure that the experience that the two users get in the system is consistent. Independent of who their providers are, I think is an important property. I'm strongly in favor of having two separate concepts here. Gu. Most what I want to say has already been said, I just wanna say in apply to from email is not the same as this, and I think a lot of people have a mental model from email. This is not that. So it's specifically saying I'm this needs to be linked back to that message, maybe just flow a quote from it, something like that is a kind of reply to you often seen in messaging. Not the threading model that I'm happen to build on inner reply from may mail. Apologize james. I wanna up level this one thing if we're getting into this thing of, are we trying to define such that two different users on different clients are going to have the same sort of visual representation and experience of this. And I think that we're gonna have to come down on all of these types of things we're trying to define as well not that you have that. Or define it well enough like we got some bits your general direct and and like you may or may not put them in a confusing way on your screen in your how you lay it out, which I suspect is a more realistic target for us at this point in time. I think that we should just try and have enough semantics here that well we look at all the different systems we have to map to with this and similar problems are gonna come up to it. That we don't result in something where the way we map the semantics into or the the message bits into the given clients with different Ui that we resulted in behavior where the end user gets the wrong message. Like you know, somebody just sends a no and applied to something and two different clients appear to think that no coupled with totally different messages. And so we have to have enough semantic information and that should be our bar. It's just enough get that level and no no higher than that. Like, I'm I'm shooting for the mineral bar. That's my view of the minimal while product."
  },
  {
    "startTime": "00:38:02",
    "text": "Okay. I I like that bar. Our folks generally happy with that bar. Pete. You're in the queue. You're done Okay. I okay. So I I wanted to I wanted to ask one sort of question now. So Okay. I I'm gonna try to re summarize what I think I heard from everybody at phone. So I think that there were a number of people who agreed with me that replied that in reply to in this context is has a different semantic than things that you do in email and and things that you might do in threading but that threading is as specified here is under specified and needs more work. Does that seem like a generally reasonable summary of the state of this? Becker. I'm not sure. Okay. Maybe. Yeah. I think either way, Okay. Yeah. I mean, it sounds like this this needs a deeper dive, but overall people are interested in some protocol support for both of these independent concepts. Not solving the entire Ui problem. Yep. you to jump to the end because we're I'm gonna ask we're close to an end of your time slot then Okay. Talking about the... To me just speaking skim through so I can see Yeah. It just you can sort of say this is what that would have been. But we're not going talk about it. Yeah. Okay. This one, I kinda wanted to get that folks and input that. Let's go to the to do it on the list yeah. Maybe we can do it. Separately. Next. Okay. That is basically, there are some things where, like, you know, particularly some of the comments that Ec made"
  },
  {
    "startTime": "00:40:02",
    "text": "a couple of comments about, like, message that Jonathan made. It's like Yes. You're right. There should be some language in there. I'm gonna include that in next version of the draft. Those things were not controversial so I didn't two slides on them. Next. Next slide. Okay. So This is the big question. Do we think that that this is a reasonable starting point this some the Semantics here for a for a work group document. So if anybody has comments other than yes or no, please put yourself in the queue. K. Victoria. I had comment on slide four, which was before with the hugo was open. Very quickly. It was about message editing and deletion. This is a policy because there are cases in which you you really want then not request. Or the lead message because that maybe be for example a threatening message that they want to report two police law enforcement, and they need to have it evidence. There are cases in which to paid in the request. Because for example it's the sender who's asking Ed removal of information or whatever. So I we will have time to discuss this. And just wondering whether there should be a way to convey within the message a reason for this. Which will be still be centers us the declarations. So not on their world. But please say I'm I'm asking because of or not we can decide. But let's take this to the list, but... You know, I'm just gonna point out that the the messages are always there. The messages are readable, so the old message is still there. That's just... You have the old message on the new message and and then it's a case of how you get that information? I mean, most of these will be the... The the shipping time deciding what to do"
  },
  {
    "startTime": "00:42:03",
    "text": "well if you can the all version of the message not, but still not this work it out. Okay. So back to this question, aj yeah Sorry. I just wanted to observe to the previous question. That there's no authorization markings in here at all. Things like deletion or editing. Right? You get a message Id. There's no firmware or too in the message. Anybody could supply something with the same message Id that could potentially modify the message. You may have messages in different Ml context where somebody specifies the same message Id, and it pops up in an entirely different thread. So the user agent is gonna need to decide how to authorize something like a deletion or edit anyway. This is entirely agnostic on that. I think that's fine. But we shouldn't pretend that that we're gonna make the the authorization in here right now. That's a good point. Thank you. Okay. So gonna open a poll on the question of working through production. Raise my hands too. You're gonna... Okay. Yeah. I think Raise hand for helping. Raise han for adopting and do not raise hand if you oppose the adoption in the tool to us. Thank you. You could do it in the room too, if you want one. You can like put your on the floor. You can frown under your mask so that we can't see it."
  },
  {
    "startTime": "00:44:06",
    "text": "Alright. It looks like trickling we have one objection. So Would you here. So if I I end this then we can still see there results. Yeah. Okay. Okay. So it seems like we have strong support for adoption, but if anybody who as objective would like to come and talk about Why, please. Do so now if you want to, you don't have to. Okay. Well, we'll confirm on the list, but I think for now we have a good indication of support for this document. So Thank you. Or I can I get one minute? Two. Can see I think we should probably move on. Yeah. Thank you. But Harold is coming up fur hit one last comment here. So Quick question. Yeah is the what what's the preferred method of nit picking the draft to the get made. If you have if you have nits or proposed texts that you don't think changes the semantics Please just send me up feel free to send either like P r is totally totally I'm happy to take. If you're if you're discussing like, a substantive change please send an email and feel free to contact me on any of the, you know, any any reasonable electronic mechanism important person. I think also you'll res it as the as the working group. Document. And then once that happens, we'll put it in the order group brief repo. Yep and use that as the place for And issues. Thank you. Okay."
  },
  {
    "startTime": "00:46:00",
    "text": "So moving on to who is first. Matthew? Is Matthew first? I thank you. There we go. Would like gonna drag your slides for you. Yes. That'll be amazing. Thank you. No problem. A new deck is being shared. If I start coughing everywhere, please be aware, I'm not able. It's just long term profit I developed so Be good. So I wanted to talk about matrix meaning particularly in the context of delivery. And transport. So do that justice. I need to explain what matrix is correctly people who might not be familiar with it. So please indulge me for a few slides once we do that. Next, please. So matrix is an existing open protocol. Which is used an open network for security real time communication. We began it back in two thousand and fourteen. It is openly specified. With Open governance model matrix and dot org software foundation which is a non profit entity that goes and basically publishes a bunch of specs. Which I'm characterized a lot of markdown and a lot of open Api to actually define both client server and so for server Apis and various types of Apis for sending messages around the place, which looked very, very similar the content format that we were just discussing. You can use it for chats in interoperability, you could also use it for v signaling providing set semantics. You can use it for any real time structured data to so is v r a r o I t. Next, please. So what we're trying to do is basically provide a on communication there for the open web. Next, please."
  },
  {
    "startTime": "00:48:06",
    "text": "So wanted to discuss two Ids, one is Matrix as an overall framework from like for mimi. Next, please. It should be many, by Colleague Travis Charleston is attending remotely getting to basically steal his slides, because I'm here in person. So in terms of what matrix provides today, Already used very intra chat. Are about one hundred million users on the public network about a hundred thousand independent instances out there. And in today's incarnation rooms get replicated, or conversations get replicated much like get across participating service. Now really interestingly, you have access controls built into the protocol so to find a hierarchy of uses within the conversation. You get a linear number that says how much power they have. Typically not to hundreds hundred means admin Nor means completely un privileged. And then you put thresholds on those access controls for the operations you can do. Such as invite people, Banned them will send particular key value data in to the room or send messages etcetera. These are defined by room versions. And we're currently on version eleven of the protocol under the hood because it basically actually upgrades itself as we changed the spam six. Events express messages, it's ex. So that can have full representations you have end end encryption including Ml s or decentralized, or double ratchet shirts and after of the box as a transport, we just see a simple H choice in Apis. Next slide, please. So the current incarnation is quite complicated and that it provides eventual consistency. Any instance participating in a conversation can go offline and then re synchronize later we copy get by having a direct day growth that signs these events into effectively at. And then if service come and go, you heal the tank"
  },
  {
    "startTime": "00:50:01",
    "text": "recent criminals synchronized together. And there is a fun resolution algorithm driven called state resolution that governs how you authorize events how you mentioned about together. And particularly in the context of the digital market act, This isn't an easiest thing to implement. Next slide, please. So in terms of how this maps to the mimi concepts, On the messaging framework side of things, we have the room versions express particular versions of the protocol. For instance, how access control works and permissions. Then for messaging format, we already have ex events which are basically identical semantic to what we were just talking about. That we do have separate threads and replies and you can reply within the front. You know have the transport, which is H and Json, But again, be anything. Identity is a mess. Let's ignore that. And then for encryption, We use... A which double ratchet. But also M and S and D m and it can be completely accessible in terms of for instance, post quantum. Implementations as well. Next slide, please. So what we wanted to talk about specifically today we've done the thought experiment of what if matrix didn't have a tank. What if it was a much more simple thing to implement next slide? And so we've called this imaginative linear familiarize matrix apologies to will be offended mathematicians in the audience. Because we're are literally taking the direct today secular growth and we flat the to array. Next slide, please. So this partially centralized conversation around owner for a given conversation. And the key thing is they're just recycles and reuse. The existing access controls that we have in matrix things like power level that it says whether uses got power hundred or zero and but they're allowed invites to banned people etcetera still uses plain matrix events. However, it represents the room it's a single list rather than a dag."
  },
  {
    "startTime": "00:52:04",
    "text": "Much easier to implement and reason about and to prove it, try who wrote these slide and been working on this. Is just written matrix so so that eventually called linear rice matrix, which you can find on github dot com slash special slash because batch matrix, and this good get about twenty four hours. To see that you can have something that implements these semantics and a kind of hub spoke model rather than the full mesh. That you have in today's matrix. You can put over whatever transport you like. But for particularly interestingly, it doesn't shut the door on decent. You can take the matrix events in these flats matrix rooms and you can still go decent decentralized them if that's what you're into to. Next, please. So practically speaking, it looks like this sort of thing. The blue sp guess linear matrix service. Green things could be talking whatever api Into those instances. And a given conversation is literally a hub spoke where the is on the left hand side. Next please. So, come in a Dm world, you could basically end up with say and this is obviously hypothetical names. I message white Telegram graham and whatsapp. All going and running linear eyes make or exposing linear rice matrix Apis their existing. Offerings. With existing clients hanging off it could also have today's tag capable matrix. Right hand side, if you wanted to take those conversations and decentralized them across the words of matrix network. And I have to time I think that might have been the last night. Great. Thank you very much. Perfect. Yeah hold on. So we're just gonna take clarifying questions on these first three presentations if anybody has a clarifying question. I'll have a lot of time to talk later about requirements emerging from all three of these. Anybody. Months going twice."
  },
  {
    "startTime": "00:54:02",
    "text": "Okay. Jonathan is next? Okay. So this is really a straw and protocol trying to think about what what a solution potentially look like something to throw rocks at and evolve from here. Next slide. So rather than going to super shelves, I'm gonna call some of the decisions that assumptions made in the draft, and I'm gonna go into detail on a couple of them. One is sort of similar to the linear matrix concept. We just heard. It made the assumption that a group has like this idea of an owner and everyone else is sort of hanging off of the owner. That's relevant from a state synchronization perspective, We're trying to synchronize off of the single source of truth, which is the owner of the provider. It focuses on server server. It doesn't try and define what a client protocol looks like. That's because of the scope here we're trying to solve for is server to serve federation. It's based on this idea of doing synchronization by pulling messages from the guest provider. This is partly as an anti spam measure so that messages can't be delivered to a recipient that doesn't want them on the provider level. You have to ask for them. There's a synchronization process that happens I'll get into that's on a per group chat basis. It uses long pole. Nobody loves this. This got rewritten two times even while right in this draft. We can have a healthy debate about it. I've absolutely no skin the game, but that's what's in there right now. It introduces idea that in a room, there's two different pieces of state that relevant properties that are where we only care about the current version. The name of the group, the topic. The membership is a former property too as opposed to messages or which Each of them is a new thing there's a temporal sequencing my Ui renders is the most recent stuff first and I might be able to scroll backwards. Those are different? The protocol treats them differently. And lastly, which I wanna talk about is it"
  },
  {
    "startTime": "00:56:02",
    "text": "proposes some a few ideas on out of band connection authorization for anti spam. Next slide, please. Five minutes. Okay. So I already talk about this. Properties versus mentioned. Yep. Next slide. So here's sort of the framework picture for the protocol. You have users or attached providers. And this protocol runs between providers, largely messages initiated by the guest provider to the owning provider two separate pieces so rest full style operations using Rest Json, do things like send the message, retrieve the group membership we retrieve properties like the name of the group. And then a synchronization process by which all changes delivered. Those changes can be new messages as well as changes in properties. And each of those is represented by an event that has a timestamp and and that's allows synchronization. There's... And then there's out of Band comm checking I wanna talk about. Next slide, please. So let's talk about the sync model which is I think important because it's one of the ways in which this is different. From simple different from classic x. Which is it's trying to treat this more like a distributed database on distributed to database from a database problem where we wanna to reliably replicate data from an owning provider to a guest provider. So through some process, which in the stock is the out of band could be an in band invitation, bunch of other things. The guest provider learns that one of its users is now in a group for a particular group chat Id and therefore needs to start synchronization. So there's a requirement that the guest provider basically has a list that it maintains of the group Ids in each only provider that it needs to synchronize. And that's part of the responsibility. The protocol is to make sure that information can be learned by the guest provider. But let's start with that. So they know the groups I need to go synchronized. Next slide please? So what'll happen is the guest provider uses"
  },
  {
    "startTime": "00:58:02",
    "text": "first rest Apis to fetch group properties. So it does that to establish initial view of the state. So you can imagine if the user first joins the group they're gonna tap on a membership list. They wanna see all the members right now. That enables them to get that information. Next slide. Then the interesting stuff happens where there's a subscription the subscription is implemented as a long pole in this document And what it does is the subscription is an it should be request that contains from two. Please, mister owning provider, give me all the messages starting from this time to this timestamp. And it allows for the two to be empty which means I'm specifying only the stark portion, which means keep sending me stuff on an ongoing basis. And that's what establishes the sort of subscription to keep information fresh. Synchronization is achieve by allowing the guest provider to use a timestamp to indicate the last point of time at which has gotten all of the messages. If there was some gap and I'll show that in a moment, it can synchronize by asking for everything since the last time. This provides a burden an on the owning provider to persistent store those messages for a decent amount of time, The good news is that's what persistent group chat is. And that's why this sort of works in this model is you're already having to store this data anyway, therefore allowing the guest provider to synchronize off it. Next slide. So what once a long pole or the... The subscriptions created sequence of event shows up events like I said, have a time and a type. The typing is not well specified in the draft. This and individual zero zero after all, but it's meant for a bunch of different things. A new message of the format that We just... Roland just shared, it could be a change in a property for example, a group name has changed. It also talks about things like it would be Ml messages might show up here also as different types of events. Next slide? Right. So one of the things you can do with this is deal with failure. So let's say at some point a network partition or"
  },
  {
    "startTime": "01:00:04",
    "text": "are the servers or the entire cluster and the guest provider side goes down. The last event it saw had a timestamp of t two next slide. What it could do is send a request saying give me everything since t two t two maybe yesterday then the owning provider does a... You know, it spurt out everything in the history as well as than anything that continues to come since then the... Let's call us catch running problem in database synchronization. Next slide. So another big idea here is we want to design this not server a server, but clustered to cluster or service to service and make sure it works in a modern web practice where you look at the owning side, there's some H load balance service a variety for sorts that are sending these requests to instances, stateless nodes in a cluster, kubernetes or whatever your flavor the of the year is and so the protocol protocols is specifically done designed to enable that. So the guest servers... Like I said, there's a list of groups that the guest provider knows it has to synchronize. And this could measure in the tens of thousands, hundreds of thousands for a large consumer system. So there's an algorithm not specified of course, by the protocol by which the work of doing the synchronization is spread across servers on the guest side. So you can see here in this particular feature. Picture, guest server one is doing transcriptions for group one and two, server two server the next one for three and four and so and so forth. Because each message an event is a unique Id is immutable It's okay if two servers subscribe to the same information, they can all be d duplicated. And it all gets nicely load balanced on the receiving side. I'm at of time, but I think that's also pretty much the next slide. No That's it. That was all my slides. There nice slide. Alright. Outstanding. Seems to think that the servers are... I they know the message Id."
  },
  {
    "startTime": "01:02:03",
    "text": "Is that this is a different message I even the message Id that Was talking about? That is a great question. And indeed, it would either need to be copied or a different... Numb. I don't know is the answer, by the way, but this needs to be visible at the transport protocol layer. So it needs to be outside of the payload that the would be encrypted with Ml s. So in this case, it might make sense to be different. Think it should be different. Yeah. Because you wouldn't want to identify that something isn't eddie. Actually take it back. It... No they it has to be different. Because these events include things that aren't even messages. So, yeah, please don't use the same words in different drafts. I mean, you can figure out how to differentiated An agreement. Thank you. K. I'm gonna close the queue. So see last on you getting you. Go ahead. Heck. I I like your your pessimism but it's only to hundreds of thousands of groups as opposed to tens of millions of groups. You know, I can't imagine how many who have imessage. Once that crossover over that ever happens. Yeah. So the in in the previous slide, you of mentioned on time as this sort of in Oh of the indexing thing. Yeah. I here message Ids. Yeah. I feel like maybe that is not desirable say. So this synchronization effectively, you need a some. Yeah. You you case, however, on. It's straightforward way to argument unique from Messages, which is the hash Yep. And So I think that you know yeah of course a very common kind of in this systems. So I think like, I was just did in fact, tyson are under undesirable here. And and see. And super numbers what you want? Because they have to science anyway. Yep. So I'm running high time but I mean, they can of course be assigned by time, but like I would say"
  },
  {
    "startTime": "01:04:01",
    "text": "I'd rather... In this is... Yeah. Yeah. So this this is a great comment. So I I think you're right again. This is this is the relative inventory of the draft. But I think it is for purpose of the synchronization. It is in fact a sequential that does need to be contiguous in second continuous this is is incredibly probably not a good idea. Was hard to guarantee. Yeah. But they can but the sequential or the the increasing nature of them can be provided by the number of means including sampling the timestamp sufficient granularity. But the property we need is that no two messages have the same value and that they continue to increase. So you know that if you've received everything less than a certain value, your synchronized to that point. That's the property that we need. Yeah. On am we start with this, like, perhaps in more detailed at time. But I'm I'm not sure quite how well. I I agree with you maintaining absolutely difficult. But I'm not quite sure he's exactly how well this prioritization we know which apps is gonna work. Some mechanism would being I know where the gaps are. Fair enough. Alright. Ruined may. And I'm gonna try to make this a little bit more of a meta level comment about... When you're doing a encryption, things that are inside the the servers can't help view validate. Or you you can't, you know, cooperative validate. Unless you put a copy of them on on the outside, then the then the providers could theoretically go and do some validation that those things look say. And but then you would also there. You would also need to compare those things with what the the client would need to be able to compare the the outer thing with the and make sure that they are consistent. Yeah. So I think I think we'd already agreed on this point. And the the times mentioned here, I don't... Is not even relevant for the client at all. This is again this protocol protocols is a service of protocol. It's used for the guest provider to figure out whether it's got all the messages from the owner provider."
  },
  {
    "startTime": "01:06:02",
    "text": "I'm sorry, Martin, the queue was closed because we have to move on to the next one. So let's say to. Thank you Thank you, Jonathan, and we're ready for rafael. Alright. Good morning, everyone. I didn't my name earlier. I'm Raf Robert I'm affiliated with Phoenix R and D. Because it might be relevant. Talk week. to be really close? Can you pull the mic up to your So I'm raphael Robert affiliated with Phoenix R and d, because that might be relevant for the talk now, we have been doing a lot of research over other past year or year and a half around architectural questions around. So document is a delivery service and so those of you have followed a another might be familiar with the term. If not, next slide, please. So both the Ml protocol document and architecture document explained that there are two components that are necessary if you want to operate analysts. One is the authentication service. Not gonna talk about that today. The other one is the delivery service. So to put quite bluntly, if you want to operate unless you need a delivery service. And so This document another talk also is informed by the question. What could be the most generic delivery service. So that is useful for as many operators as possible. And incidentally also that it is easier to get some consensus. Next slide, please. So a delivery service comes in two flavors. One is strongly consistent the other one is eventually consistent. So I need to explain a little bit of what a delivery service does. It does some things that are comparatively trivial in the sense that's"
  },
  {
    "startTime": "01:08:02",
    "text": "It makes key packages available which is essentially public key material for clients. But then it does one thing that is very important. It takes care of ordering messages. So the underlying algorithm of ml called tri needs message ordering and just a requirement of that algorithm. And so there are two ways of doing it either, you do it in real time, and then you reject messages that are out of order or you do it eventually. After they've been sent, what that means is that you have on faults in the M and S groups most likely until the ordering has happened. So these are two very different concepts and they're not necessarily I'm competing with each other because they address very different architectures and different scenarios. Again, thinking about what's most generic. But strongly consistent one seems to align with a lot of messengers. So this is we picked for now. Next slide, please. So here's a diagram that's sort of similar to what we just saw from Jonathan presentation. The the logic here is that users are associated with providers. So here we have alice with ide dot com and ba dot com And we have an owning delivery service. Is essentially a network component that owns group state and that does message ordering. So this could either be hosted with a dot com or b dot com and just to illustrate that it could be both. Appears as a third component here. And then both Alice and Bob need to talk to the delivery service, and this is what this protocol is about. On next slide, please? So I can note ago quicker over that one, again, it is very similar to what been presented before. So Alice, there's a part a where a user talks directly to the owning to send messages or to"
  },
  {
    "startTime": "01:10:02",
    "text": "to a group, etcetera, and then that needs to be found out. To the other users on other domains. And that is part b of the protocol, which is much less. So the protocol is it's or ninety percent about part a, and finally part c is not needed for inter interrupt. That can be completely proprietary. So the idea here is to have a protocol that is completely agnostic of the transport layer underneath. So that could be http p could be x p p could be matrix whatever. For now, the proposal is to use lesson coding because we've already done that with. And that seems to work pretty well. But, of course, that would be a pretty bad. It could be anything. For part a, is request response. So it it's could be a rest for Api. Part b is push pull or potentially both. Next slide, please. So on a very high level, these, I think is an exhaustive list of what you can do with. So if you build messenger on top of Ml, You sort of have to figure out how you can do whatever you want to do. Based on all of these things. So I'm not gonna go all of them they're pretty and self explanatory, I just want to note that's you can... It supports the four ways of joining the group. I mean it's a four ways of joining group. So what's less vanilla is that we make a distinction here between one to one connection requests and actual groups And very importantly, it supports leasing. So That's important because in reality bit flipped on clients. And instead gets corrupted. And then you cannot decrypt messages anymore. So with para, this is already not great, but with it's even worse because you get kicked out of a group. So really here is that you with one operation That is completely asynchronous where don't rely on any other party, except for the server to be available. You can just reinsert yourself into the group."
  },
  {
    "startTime": "01:12:02",
    "text": "Next slide, please? And then in terms of capabilities, It supports device support meaning, a user can have several devices. It can enforce Seo and but it does not specify that words. It would effectively be compatible with anything else. We send it us around that. Important part here is that this can be enforced on the server side And the various kinds of right limiting imaging you can do that's important for abuse protection and, you know, dos, spam, etcetera. As I already mentioned can distinguish between one one connections and groups. And recently, we said that that's very important for spam. Because then you have one to one connections or a consent based and you cannot add people two groups unless you have one of those connections. Slide, please? So how does it work? This network side component holds some state, which is just derived from Essentially. So again, if, this is gonna look very familiar. There's a respiratory tree. There a group for all of that comes from the Protocol. There's a bit more information about client per use authentication and then of course, key packages. So next slide, please. The final thing is this is great in enterprise for enterprise messaging. But this doesn't as such does not work at all for consumer because the status quo is that in the past for the past ten years, we've had signal and signal has demonstrated that you do not need to keep metadata server side to successfully operating messaging service. And we cannot go back to requiring having metadata. So what we've been working on is variation of that protocol and I'm sorry I'm going over time of this. To essentially eliminate any sensitive metadata from that. So not gonna go into the details, but happy to talk more about it later and to explain."
  },
  {
    "startTime": "01:14:04",
    "text": "But the idea is that you have all the functionality including the robustness and the security, why not really having to store sensitive metadata. So... Yeah. Thank you. Lot of times. Okay. Mallory, and then we're gonna move on to the next. Thanks Mallory Nod. So this seems to me that it's still it's not server bridging, but you have an owner of the delivery service, which you think luxe users in in a way that the protocol design without an owner of the delivery service, without an assigned one anyway, wouldn't do and that Alice Bob could eventually migrate to a different service and still maintain the same chat, but this doesn't seem like that would work there. And so I I I like actually, I'm glad you got to the last slide because I think that where you have enterprise as not a possible flip of services for the users involved in such a sort of complete way. This actually makes sense for that case. But I think for consumer end users this would. Probably not work. Unless you have an immediate idea for that. Sorry, can you repeat what part would not work for consumers? The the fact that you cannot migrate it or something else. Right. So Alice and Bob, if they're using a the shared protocol, one of them could you know, eventually change services. You know, maybe they migrated to a different service they could still maintain that chat. That they have. Even if that user decides to to change identity and has a different server. But if they both do it, maybe they're not even using this the service that their chat originated on, so your delivery service is still in the middle. Even though your two users are no longer using either one of them. So I don't know... I don't think that actually would. Great question. So yeah, I didn't have time to get into that because seven minutes is"
  },
  {
    "startTime": "01:16:00",
    "text": "too short. But so the the variant of the delivery service that is strongly consistent meaning it's the only requirement here is that it has to be able to decide in real time does not mean that it cannot move. So we we could absolutely migrate from one what I call an owning delivery service here. Mh. To another one as long as it you know there is agreement. An agreement is one of the things we are very good at doing with. We can have agreement on arbitrary stuff. We have agreement on the membership that we can agree on anything else in real time, that that's really the benefit of this thing. So all we would need in that instance. Is an extension protocol that that would be relatively slim to agree to move to another delivery service. So there's no login in effect in and in that sense. I guess maybe one of the two users in this case is is on that delivery service. And if they change services that goes with them or something like that. I guess I can see I mean, we would have to look into it's of course. So yeah. What I think the make disappeared, then then that's always a different scenario. But if just one of them goes somewhere else. Then you can initiate a migration. And I think it's it should be relatively to straightforward because it's very little state that you have under delivery service. So migrating list. We have more we have more time on this in the next dog. So Thank you. Up. So now we have a forty minute chunk to go through basically best synthesis of the requirements. From all of these drafts and what this protocol needs. In general. So what this definitely is not is telling you how things that'd to be."
  },
  {
    "startTime": "01:18:00",
    "text": "Nor is it a survey of all the. What this is is attempt to go through you know, some of the architectural issues that we had during discussion transports and try to like them up so we can discuss them, you know, all calls this conversation. Oh, nice and brought the dates wrong. This because Guy was like my last my last You just... I use this deck. Lot of time travel. Yeah. Exactly okay. It's exactly It's it's in Way latex file what it is actually, because it be. Next slide. So maybe just like, try to, like, set hike a little bit of context that we're the same page about what we're trying to do here. You know, here is my not very good, but nevertheless, hopefully plausible diagram of, like conceptually when a messaging system consists of. Right? You know, so We are in the section I've labeled you are here. Message transport. You know, which is, like carrying all, you know, carrying all stuff around for everything else in the system, whether that is you know, key establishment v. The encrypted measures themselves with they've been inside all less. Etcetera. So on We're assuming we're only we talking this part of the problem. Other parts of the problem, of course, exist separately. It's not clear exactly where the cuts are between these places, but this is where we're trying to cut as a reference architecture. Next slide. So to try to hit the diagram in a different direction. You know, here's like my attempted layer cake of the situation. With, you know, mimi transport whatever walter call. Like guess Jonathan actually named this thing maybe transport, but I'm not assuming jonathan thing. You know, ml saying about that and content city about that. Very important to recognize that the Parts and the content parts are end end between Allison and Bob. You know, we're gonna have this discussion also this over this working group. Which is their things which have to also about her agree on and anything encryption light has to be some of those things."
  },
  {
    "startTime": "01:20:01",
    "text": "Transport however does not The has to be on the a and b servers have agree on it. I'm not... I'm not taking your a position on owning versus guest server. But but in any case the service have to agree, it is not clear, in fact. That Alice ellis and, you know, Bob have create on whatever protocol they used to talk to, the only own they're government surfers. Right? So it's just... You're just like email, you know, email even goes a good example, you know, we're we can agree. Like, I maybe be using web mail and you may be using I'm and like, that is that is in difference to me. So, you know, this is this is like, the mechanics and situation. Right? Next slide. So I think that gets us to like actually you know, the first thing that I... It's like, the wait the ways is gonna work here I got like a pile of, like, questions. Some... Sometimes have a slide that you have the questions, I just have question. I just wanna make sure, like, I'm gonna stop after each one and make sure, like, that people kind of agree on like we're trying to achieve use each stage because the and either hopefully in, I think as in descending order of importance, but also maybe ask anywhere of complexity and painful. So As I said, the... Obviously, the best analyst parts in them because content near the end to end. But the master of transfer is not. Even though many existing systems X or simple do back define the entire mechanic end to end. And I think largely, expect it light the protocol you use to talk your server is kinda like the protocol you use to talk to. The the reason I do talking. Right? So I generally been assuming, This is that the one case where I would an opinion. The client and server were not go client to servers not in scope, and we're only having to find the server server stuff. And, you know, if it happened that we selected a protocol, that had clients or reports that just fine, but it's not it's not our job to to develop that thing. Does anybody think that I'm like, off based on this And actually we should be dividing it end indian system like x p."
  },
  {
    "startTime": "01:22:00",
    "text": "Times so maybe like, with that concept, we're like, we define the whole thing. Awesome. People disagree. Great. Yeah. Yeah. I know much Anyway, for Robert. So yeah. No I I don't disagree per s. I just think it's money asked. So I agree that on the transport, level it is server to server. And then on much higher levels, it is client to clients. But the open question that relates to my previous talk is what do we do with the delivery service. How how does it fit in there? If it's because Either you pick one that is eventually consistent and then it might just be client to client, and then let's easy. That's a very conscious choice or you pick one. That is strongly consistent. And then you need to have agreement on the protocol from a client to an owning delivery service. And so that's that's in between, that's not it's kind to server, but not your own service it's somebody else's service. Potentially. So That's where the nuance comes in. Mind. I'm not sure I'm following, but I think I'm I'm I'm I'm just gonna sit here. So I as you're full of people two people for people wind now, Other people are, like, us on this? Do you want me to sip people's names this stuff or you got? I can do it fine. Sorry. Be thought about that again. I I was thinking whether that's actually a requirement to have a standard pothole hall. I think I'm mean in Europe, of course. I think not But at the same time, I think that would be value in having standard protocol and the at the same time that deal some implementation might not use it and we do something different. But at least if if there were, standard of a prod hold it might encourage the world to converge to standardization. Then maybe this could be the last item in terms of working once we"
  },
  {
    "startTime": "01:24:00",
    "text": "decide, everything else. I just wanted to observe the this question... Like, clearly, this working group is more than just what you're asking about hearing. You're you're scoping this talk. Yes. Yes. Yes. Yes. For Jonathan. I just turn it off there. Jonathan Rosenberg five nine. Wanted to sort of disagree with Rafael I think the server to server part combined with the owning provider concept defines a delivery service. There isn't a different delivery service somewhere that we need to spec out. So I I think this is strictly server a server. There's nothing separate. And and ron Ron is about to disagree with me. And as always. Travis sort of... I go the slide here. Client server definitely feels out of scope. But obviously we need to specify the the format that goes over that wire. And then yeah, the delivery service, whatever happens to be can basically just be passing around bytes. And I'll have to worry about the actual sort of internal format. Martin. Hello, martin Induced. Somebody that has mentioned is consistency and and so on And I think that for some things we have to really tried to be perfect, like, I mean, car if you have a leak, then you no longer private. But For example, the where one of the Big things that tim bi did is that Well, links could break"
  },
  {
    "startTime": "01:26:02",
    "text": "So maybe in a chat consistency, it could there's not that important Yeah. So Yeah. So thank you. I feel that actually is not as correct as where my like in this case because they're photography. That is if messages get lost does not could you necessarily be able to recover the Geographic state. I'm gonna close the queue. So if you wanna be in the queue, please get in. Go ahead to us. So Cisco I agree this should be server to server. For two reasons, one one one is that to be practical to get something out of working group soon or in the timeline Service. Kind very defined scope. And second thing thing is also that when we about the delivery service and how it imply... That that goes to the layer what record was talking about end to end and owning provider on browsers represent the ds in my in my model, and we can make it work it is server percent. Thanks. Rowan? Me. I agree that we don't want to define a protocol about how a client talks to a server. However, most people still do not understand that a delivery service. Is an abstract service and piece like parts of the delivery service. Are on are gonna be even in a strongly consistent environment. On the provider? On the the guest providers and on the clients. And there will be client implications. So I I don't think that we really disagree, but I think that the language that we use in this form matters because people who are listening, are gonna make are gonna make some really bad implementation and scope assumptions. If we don't keep saying it. Right. Saying that correctly. Thanks."
  },
  {
    "startTime": "01:28:00",
    "text": "I know. Forgot hell. So Echoing can wing a row sentiment there. I think the this aspect of the Ds, we need keep it very carefully terminology separate from knee server to serve or client server type situation. There are use cases where a server server end management will not work, especially in distributed type settings. And if although it's okay to have that type of ds realization, we need to make sure we're not locking ourselves into that. What do you mean by distributed settings? Yeah. So without getting into some specifics here, there are settings where you don't actually have one centralized server or you will have devices talking to devices in self managing that diaz. And so it's a matter of how can you get those devices to communicate among them my is that's actually out of scope this working group. I can show you know but by sense is that's out of. But this is really about federated centralized decentralized symptoms. Than respectfully different degree. Because when we talk about federation and so of these settings, we will be fed or it's device to device, and you temporarily or particularly when I say temporarily that might be months long. You will not have access speech to a back end server. And so will need be able to have the As, which, of course, is this the things of how managing identities and the security of is that Actually, facing... Excuse me. Actually interfacing, to transfer that identity among the clients themselves. So if we're just talking among clients that have no access to a back end server. They have to be able to distribute these messages ad hoc. As I said, my sense is that out of scope approach right at the scenario in in detail we could have it. Just a chairman when you did do. Okay. Just making sure that we don't lock ourselves in on that terminology. I... I'm a Joel Oli from Wicker from Aws. I wanted to make a comment that"
  },
  {
    "startTime": "01:30:03",
    "text": "If we define a client to server interface, it allows us to also due federation in a bit of a different way instead of having clients service and then service communicating, clients can just directly connect to the host to the owning server. And that has certain advantages First of all, it's one point one point of failure less. It also hides know metadata from the So the the original owner server of that of that client. So I think there's some advantages to finding that interface. It's a simpler system. There's less to define. There's less protocols. This is, you know, there's precedent for this. Right? This is this is how web service work. Right? We we always just connect straight to the web server that hosts the website. We don't go through any routing you know, like that. So I think that's something to consider as well. I don't know if we've settled on this this approach with going through servers. Right? I'm not sure where we've settled on that yet. Or we say is is designed Actually voltage and doing that, but maybe we she could have his line proposal I All I see is the proposal I've seen. Seemed to contemplate play having that's that's a first of federation like email or sent. So I think we I guess proposal we're not doing that, like, we could look at it but you should do it quickly. Matthew For Matrix. Something occurred to me, that even in a low environment to business point, you could consider it as being a client to serve it just with the social running locally. And so you need to have the concept of phone server so server. However for the mimi, I really think that the client serve technical interface should be completely out of scope. That we should figure or concentrate on this service to server interrupt sort of things. With the exception, as rafael says that you also need to said on the client side the crypto implications of what you're doing particularly if you're using M and s for the group"
  },
  {
    "startTime": "01:32:04",
    "text": "membership, sort of things. So it's again, I guess, plus. What people have said already. However, there's a final thing that we must not forget. Which is the actual uses semantics. We touch on pretty with the threads and the replies interrupt. The even don't worry about what the bits slip like between the client and the server. Whether that's basically the Ux or whether that's literally talking to it remote service somewhere. You have to consider the presentation there. Otherwise inter interrupt will fail. So we do need it in scope at least from that presentation semantic So I think what we need on this is given that the existing drafts all sort of focus on service server and assume this server architecture for those who disagree with that to please bring your alternative concepts to the list. Moving on. That was the one slide. Because the easy one. So next slide. Right. Okay. So this brings us the topic topic of naming and discovery. So jonathan in his draft, I guess, you're... I can where you called the draft, but how to had this taxonomy. It's called system specific identifier and system independent. Not sure I love this know terminology, but we're gonna use it for now. So systems identifier identifies both identifier and the context that identifier, maybe me, like, we know my number on whatsapp? Obviously it's the case that, like, that sort of goofy kind of like pair of information know the trip why and turn into like, some kind of like, by bringing front of it and like putting that sign in there. Or, you know, and then you know if there's any embedded signs, can into percent signs or whatever such nonsense? So I think I've also seen ones that had like the scope at the beginning, but whatever same conceptually. By contrast, a system independent in, It does not tell you the system. And so do I I gotta to communicate with somebody."
  },
  {
    "startTime": "01:34:01",
    "text": "It's worth noting that some of these systems have Si i's, which are actually Ssi in some other system. So for instance, if what you have is a phone number, that's a to be a router identifier with the Pstn, is we not a lot of about fire within the context of, you know, multiple the performance and messaging systems. So if I give you this number, six five five five five one one zero zero zero, and you type that in to like you know, Sms. It will go somewhere. You don't know, like, whether I use whatsapp, or you signal pilates imessage or whatever? So but also ones do not have which or do not. But about if enterprise any system, I'll we without the system ourselves. So, you know, if I use e ikea my end, you don't know if that's github or Twitter or a wire or So in general, an si is not necessary enough to contact I for that reason. Because you know what system we're on. And it's also the case that the same as I, may appear on multiple systems. Which I'm just, like I said, twice down. So discovery, mean this in in this context the process taking Si I and assuming systems it appears on so you can actually talk with somebody. And the the so the conceptual account trying to make here is that that, you know, if you have an Ssi, you know which do. But if si you figure out what to do. Next slide. So the question now is doing support discovery of all. I think there are number of possible purchase. Because these there's reports you see there numbers. I mean, that's what I'm typically using for alternatives. So one possibility to only solve for exercise. Say like you don't have an ssi, Like, sorry. We're we're not gonna help you right now. There's a sort of you it'll know, be version map which is self exercise now and then built real discovery separately. So So just takes it back on on one what this would like would Either be, You have some ambiguous thing that had like, you know, to kinda identify for the user and then the in in the system we have interface"
  },
  {
    "startTime": "01:36:00",
    "text": "we you typed it in a fire drop down. This is like, this is a whatsapp or is this all my message or whatever? The in... And so, like, think it's possible but this is it's a possible that perhaps that actually possible. To do that first thing, and then later to put some system to let you go and figure out which Ssi correspondent to which Si. That's... And it there's a third possibility which is embedded in the conceptually in both Spin and Rosenberg book, which is that soon Alice has out of bench contact bob, which may fact be an an Si I, which happens to be around identifier thing like the Pstn. And then she can talk bob with that that and and that allows you to resolve that to to the Si. And it those that on on that does consent, and and discovery the same good. Alright. So Yeah. So I think this last point is related. Is residue from like, a pretty version of this, which where I observed some some cases these are themselves around the identifier. But in the case of like, you know, If I know if I know Johnson says that his his handle J Rose, I gotta also ask him like, but your email address I can contact you because I can't even talking andy in any way. It catches up. So in terms of responding to the question here, the good news is the discovery completely less separately from everything else we've been talking about. The bad news so personally, I think it's really important to provide as a building book. And it's an amazing moment. So be Tk problem in terms of mapping people, public keys through to their real life I is rather than checking it to the user and making it this horrible Ux thing, but you say, hey, I want to talk to Echo, but let me select service provider oh wait he's using I address except by phone doesn't know about jets. So I now got to enter mozilla dot what is this this email address? It's a disaster. Instead, I should be able to resolve"
  },
  {
    "startTime": "01:38:01",
    "text": "whatever global identifier through to whatever service you want and know that it's you based on publicly. So what going add here to as context is I too. Excited about doing that work. I spent thinking about it and come away feeling like it was very difficult. To do with the preserve privacy and security at the at the same time. And so one... I think one motivation for that round two would be for version two would be maybe we're not sure we not solve it. But like, I am also excited about doing network and concept because it's difficult problem would like to work on. Johnson. Jonathan Rosenberg five nine. Obviously, I I like three although we've discussed. I'm not opposed... Necessarily doing some other things to, like, supporting Exercise and inbound what have you think this is the more tricky and and complex problem. I do wanna highlight, like, a consequence of this decision, which you mentioned and Matthew mentioned, but to me it it looms big on my mind, which is building systems that actually are usable users and one of the consequences of only supporting Size is is this sort of nascar screen where you're gonna type in a name and it'll give you a drop down menu of all of the providers and and that could be really long. In fact, if you imagine my larger federation systems like it could be a thousand entries still going. And and not only can be long and what percentage of the use cases is it a known piece of information to the person doing the inviting. And so my worry and why I continue to work on this promise is I think it. If you don't solve this problem, you end up with a easy to design, but entirely unusable solution. Thank you. Yours? Hi. I'm joe Sp. My question is not entirely what's this light is about is about feature discovery. So is... That might that also be in scope? So I'm thinking along the lines of chat room having having integrated, like, a graph or"
  },
  {
    "startTime": "01:40:03",
    "text": "or as a like... I don't know. Paul that's not tied to a single message as far as I So I I just know the concept from matrix integrations. Yeah. So he... This is in scope. I think it's... I think it's potentially in scope for this working whoop offer this piece of work because I understand it Rowan specified since future discovery as part of the the key package and and I is I the key but like it. But we'll we'll work kind now. So I think it is scope for this work but not for this later. In the last extensions. Draft. Thank you. Yeah. Got mister Peterson. How's on. With all rules over reversed. For once. Yes. Yeah. So I guess I'm most here to say that I I think the discovery problem is interesting. And part of the reason why I think it's interesting is because even in Ssi doesn't necessarily tell you how to get to it. Right? In other words knowing that this telephone number on Whatsapp, you know, is is a context of an Ssi is not like a Uri. That you can then, like send things to and understand. And so like, and in in this this... In many ways, relates to the previous coming about features and things like it. I mean, I think there is a broader discovery issue that is not isolated to Si. That actually needs to be exposed by this. Right? And so like, I I if we don't have that in scope, then what do you do with, you know, An Ssi that doesn't already tell you what it would mean for you to reach out to that system even if perhaps you aren't a user of it natively. And like, that's the actual heart platform that needs to be addressed here. So So I mean, again, sequence wise, I I can see these being. Right? And I I could actually see these progressing somewhat independently. Just don't think we're gonna have a system that works at all until we actually do this part. It doesn't mean we can't do content format first or where Else one first. Right? But like the system actually gonna work. If you have avoid to even take an s"
  },
  {
    "startTime": "01:42:01",
    "text": "you know, an Ssi and turn it into this is how I contact that service and why it should care and treat me not as spam. So I think that one thing that we was getting a little bit of discussion on that I I'm not sure Pulled out as well the I was hoping. Is if you read, dot rosenberg. He has like an answer this question, which is which is which is instead of having... Is that having I start with a rat identifier it's other system. And I guess and I think, you know, was some discussion online off offline whether was it whether it's an acceptable system... I just reveal my advisors. I think it's not good enough. I guess be good... If people think that that is a sufficient answer to this question, where I say, I don't tell you my... I don't tell you my identifier I say, send me an email, and I'll get back to you and make tell you and tell you what system I'm on. That we good hear. Or send me email in this particular format you are, you click on or whatever everything that's acceptable that'd be good to hear because that would help problem say, my sense problem piece is acceptable. Yeah. A lot of sins are hidden under the three letters out of band ob. Yeah. Alright. So do we feel like we kind of landed on two But that's sort of my sense. Yes. But you know, that's what I would want to anyway. Okay. Good. Okay. Next slide. Alright. So this brings us to the exciting topic of consent. Oh, I think we didn't update my slide. That's okay. I fix the last band. So like, there's are two kinds of Idioms you see messages and I sort of somehow had the notion that, like, it people had to get consent a lot, but what's point out to me their data not. I how it happens So like, one possibility is I can just check send you messages as long as I had her identifier. So I know, you know, I your phone number what's up I just are like blasting away. Right? I think I think I called this your mode and one of these in when his discussions. This is like an obvious. You know, and one of the things that systems often try to do in were to contain spam"
  },
  {
    "startTime": "01:44:03",
    "text": "is... And it's like, you know, going back like X. It require you to get consent first. Require you to ask to be to join... As roster and only could your message I say this also gets back because back to, like previous systems were, like know, buddy listing and roster were also about presence, which like know he seems care of it anymore. I I guess, you know, we're now as as Matthew Kaufman would say, it always offline. The I'm saying well, this typically consists. This is one kind of invite. I send to you that, you know, you example first analysis messages And the way that this is designed to work, you know, is that the invites are have a very restricted domain. So I can't like, send you a a complete message my invite. And all I can all you get is, like, you know, is also talk to you. Now this is like a perfect spam removal actually. And you know, you can be like, make money faster let's talk to you, but it does restrict situation quite a lot. So these are sort the two modalities often see in these systems. I'm just gonna step... This is just like overview so I'm gonna I've got like cash questions slide. So we're gonna I gonna talk to that a second. And then maybe maybe maybe rafael quiver after them can jot. Next slide. Oh, Okay. Like wasn't in guy. Doesn't... Does not turn with that. Why don't we wanna... Okay. See next like magic what happened. Okay. Yeah. Okay. Let's not talk key packages yet. So... Right. So I guess the question is, you know, what moments should we just here? Right? And, you know, ken Just send best Bob. And know possible that what we talked about is, like, this sort the quarantine stuff. Or I can send messages to you, but like, Bob, it doesn't it box like sis was then doesn't show them until like he accepted. You know, which concerns about, like, excess data. On side. But if the main issue spam is like there is the user offensive of this seeing it, then this actually doesn't problem. And finally like, owl can't do anything bob consent. The previous line was out some crypto issues about, like whether or not like a possible like, when you are, but like, I'll toll off on those for now I think probably to some more on relevant point. So I think like, there's, like,"
  },
  {
    "startTime": "01:46:04",
    "text": "I guess the whole question is not so watch exactly how this to be designed, but what models what this is them to assume. And in particular, if the system assumes like that one is at least possible in many cases, do we have adequate controls from energy spam in the situation And do we have design it whereas maybe if, like we do or say you have to get consent first can be less aggressive about to let spend mechanism worry about useless less. So I don't have a strong answer. Like, this is like, this like a core question that we t around with a lot previous discussion. So I'm, like, gonna shut up. character. My And Richard is pointed out in the chat, that it's possible to support. She's moved. It's not. Multiple. No. Right. We're not picking I think... Right. I think the the key question he when answer rich. It's like, what is the, like, most you mode you have to support? Because that tells you what the... What what the what the mechanisms you have to do in meet via or. Rafael. Yeah. I just wanted to put out. So on a technical level with Ml you can definitely do both. So and it was specifically designed that way but you don't have to wait for run trip or whatever. But Spam is going to be a problem in federated environments. So it's something we have to take very seriously. And so my gut feeling is that we probably you want to have this consent mechanism first. But What I'm not sure about is whether... That's a decision that individual apps should take. In the sense, but you can send contact content already and just not display it. Whether we should forbid sending content altogether. Again, that that's going to be question of policy, not so much of technical visibility. Yeah. That's all correct. There's a few subtle but we can manage them. As you mentioned being your. That was your james. Can you go back with flood? So"
  },
  {
    "startTime": "01:48:04",
    "text": "no. One got. So I mean, I I think that this is gonna be a really important property for how to design some pieces system experience wall works. And I I don't really think that consent is really inherently ever turned out to be a great solution or it's just the first part of Talking about the solution. Right? Whether you do it or not, and it has to do with whether those messages there or not. And what turned out have more to do with trying to block these things was almost all like, tons of messaging... The large messaging systems today. Force you to tie it to something that's expensive... A little bit expensive to get, so you don't have an infinite number of identities. Right? Generally forced to prove that you have a phone number associated with the account as an example of that. I think we need to talk about what are those things that we think that we need to to support at this level. And we're not gonna be... You know, we can't design this them where gatekeeper gatekeepers forced to just allow infinite amount of garbage come into their system. So we've gotta think about What are the identities? How can you not have an infinite number of identities? What are reputation systems you attached to that and those types of things. And like, consent by itself, we need to describe like is there contact... Is their user provided content that goes with without all of those types of issues And I it would be nice if we could just totally push those down the road, you know, kick that can't down the road, I'd love that at some level. But I think to have a viable solution here we're going to have to dig into the requirements of this bit more. So what just one to add a look call that what you're were just saying showing Saint Calling is that there's another mechanism in popular feedback from the receiver to the sender of kinds. And so the quality of feedback you get for when send... His versus non environment differs So in consent... In non environments, or you get his negative feedback or your complaints might as much someone sent me, but environment, you can also... One form feedback you also get. Is, you know, how many... What fraction of these people's consent messages got accept? And so again, just goes back, like, trying to define"
  },
  {
    "startTime": "01:50:02",
    "text": "what you know, what viable and each each in each environment, would see a very important think. I'm gonna close the queue momentarily. So if you want to get in please get in now. Jonathan? Jonathan Rosenberg five nine. So I was originally on the consent only but my mind was changed by something Alyssa said. So I think it's worth repeating. Which is in essence that there's a zero law of requirements when it comes this working group. But she didn't say it this way, but this is how I'm repeating it. The zero with law robotics on this thing is like if if it's unacceptable to the gatekeepers and, like, you may as well take your cookies and go home. And so if we think about it that way, you know, what is the probability that we hear in this room make a decision on a something of this magnitude that is in fact acceptable and good with every one of the gatekeepers and all the people that wanna to fed them. I put that probably at exactly zero. And therefore, we probably should take a stance where the protocol supports variability and integrates capability for different choices to be made on individual bilateral basis that allows it to be compatible with the models that each of these different provider support because they do indeed support different providers. Like, a techniques. Like why does connection based consent which I think is... I don't personally enjoy, but that's okay. That's a decision that wired me. My imessage does the, you know, send it forget it yellow approach and, like, how gonna work together and, like, that is more gonna to come to you know, how Apple and wire to each other. So I'm in favor at this point of making the protocol support a variety flavors and allowing to be useful negotiated in this in the system. Thank you. Thanks Ron. Really me. A quick correction to what Jonathan said. So wire does the connection approach if you were not in the same team. But I'd like to For the... For these modes here, if we start... We implement three right away. Can we decide later,"
  },
  {
    "startTime": "01:52:04",
    "text": "or do we need to know now? And that's not that's not me saying that we should. I'm asking you my sense is yeah, my sense is yes. I think my My sense is that, like, every mechanism Every span control mechanism is you need in... The the the you need for consent also need for the other mechanisms as well. You just need more. And so my sense is, like, if you were filling antsy, I was like, I mean, just to answer your touch question. If you're feeling antsy about your building control spam and like, situation one and two, then like, you... Then then you could start with three. I don't think I don't think there... And it's rafael. So really technical a reason why three and one two different from perspective in a really serious way. There's some subtle. Okay. So I'm I just gonna say that I think that modeling this as there are a bunch of there they're a bunch of authorization decisions. Yeah. And that any of these mechanisms that we implement are are, you know, basically need to be authorized by a particular policy. That's interesting good framing actually. Travis. The sort of second mode there, I think is probably the one that we would want to go for as it provides most compatibility with the existing sort of providers the ones that do require sort of, like, I actually be accepted before Bob will heal messages. That's obviously mode two there. And then with all the other providers that do just allow you to send messages like Sms and that sort of stuff. They could say auto approve on the server side. If they needed to. And then same thing with consent, we could implement a sort of client server Api that manages that interaction for you. Can you scroll back when slide? Sorry. I want I wanted to back... Twenty. Yeah. So think just one point... I one point I wanted to make"
  },
  {
    "startTime": "01:54:00",
    "text": "about, like, on the the technical point, I think Rafael and and albert talking about those two is it anything which allows the their some some mechanism you might imagine that consent wind without you could ask for doing someone actually existed. You be like, I think I have your phone number. I wanna see here on whatsapp, I'm gonna ask for consent the system would like, refuse to tell you into what person I get send. Any mechanisms allows you to like start sending back messages right away. Whether it is pre consent or there was, like, you know, consent quarantine. Necessarily, like, leaks, whether or not the person on the system. We could talk about whether you could shaft that, I don't think you can. Effectively. So there's a a privacy and input the privacy tie in here. It's asking this question of like, what happened if if these key packages they get exhausted because of this these for four issues. So So like, there's there's like, it's not like I do think it's viable to have a client quarantine mechanism but is not like a totally straightforward like like like folks switch falls switch. We're running a long time, so please be brief. Daniel Con gilmore more. So I agree that the system is need to be able to be negotiated with system. I don't think one model will work for everyone. I wanted to actually make it a little bit more complicated. Which is that that that consent can also be revoked And if you have this q thing, there's a certain amount that's quarantined, and maybe you only wanna a couple messages from the quarantine before you allow them to send you a million offers for penis enlargement. And So we need to think about this over time as well. And and it's related to blocking and all of that. So I think this is something that we are to think about and the crypto properties and the guarantees that we offer to the users will be different for messages that are in these lim states because I think the providers will have more visibility control over them. John. Yeah. I was going up here and say anything about one, but having heard jonathan and thinking about, oh, of course"
  },
  {
    "startTime": "01:56:01",
    "text": "be providers who are willing to, you know, Sms each other that are effectively gatekeepers. Right? I mean, I think to Collins original point, see a very complex design space around this actually that means a requirements document that's own in its own like whole scope to try to figure out what this would look like to have multiple gatekeepers negotiating with each other. Said they're willing to allow Right, maybe even on a per user basis. Harold. Hi raul this. I think this is question is completely at the wrong level. Need to get information from the sender to the receiver that they want to send a message? It's actually uses to the same problem with when the receptionist is a room as well as a present. The receiver needs to be able to evaluate. That against his own at the rules. Which may be private maybe complex maybe non, maybe anything. And sometimes the receiver needs to tell the network that I want help in making sure that this this sender does not ask again. But the policy it's not part of the transport protocol. Having a function to to ask for help in blocking these messages before they make waste too much time. Could be a property transport protocol, but the policy isn't Sorry. Following up on what harold said I'm concerned that that's not the only problem because depending on the scale of this for some providers. They may want to help whether or not the receiver wants the help."
  },
  {
    "startTime": "01:58:02",
    "text": "And block things before consent occurs. So I suspect we're gonna have to put in some mechanism at the provider level to require some sort of consent. Not at this point. Sorry? Should sit down at this point. Lucky you. Okay. Well, Obviously, we love thorn issues to continue to to work through maybe Tim if you could brings up to the... It's two bags. for. Yeah. There's, like, Russell actually had answers twelve more issues in this deck I we didn't get to. They just had like, we're easy. Yeah. So I think you know, we should start some separate threads on the mailing list. To continue the discussion on these topics and probably just get together with the authors as well. To think about path forward, but obviously, we have, like a lot more to discuss some. Almost all of those things. And so what Tim and I are proposing is that we kick start a series of virtual meeting interim on a regular cadence because this is a we have many weight topics and we have these externally imposed deadlines. Depending on how you want to interpret them. So we feel like we are really gonna need to kind of drive hard to make progress on all of these things. And to do that, we'd like to meet off in virtually, starting in a couple of weeks. And you know, doodle on the list for a for a time slot. Any reactions to that? Positive or negative? Yeah. Sorry. I I wish I had then. I have to say I'm not a huge fan of the structure. And I've actually told you that offline. I should have told to that before hate when I tell these slides. Like like, I I think the social there's a work we use for quick and for Tls on the Http, it's like much better of like somewhat frequent, like, for... Like, several. I find, like"
  },
  {
    "startTime": "02:00:02",
    "text": "this kind of stuff like it's like really hard, like, I I just I just need like, like, if I say back like, I've how one I wanna, you know, And, like so like having this... I mean like, that kinda clock bit different difficult for me, but like, other people like it then. Okay. I mean, those are also not mutually exclusive. Sure So yeah. I can imagine here at the beginning, we could need a couple days So that's another option. Okay. And then just the other note here because we are trying to drive towards externally imposed deadlines. Like to think maybe a little bit creatively about how the working group agrees on stable targets for Inter as we we proceed over the next, you know, year or so. Maybe, you know, some process where the chairs establish. Deadlines for P submissions, and if we haven't heard too many objections, then they just get folded in to the drafts that end up getting a adopted by the working group. So we're still thinking about that if people have suggestions on what what kind of a process I think would work. We're definitely open to that, but we just wanted people to be aware. We might try something a little different. That's a good question. Yeah. The the question was about whether we should we should turn issues list into a set of github issues where we can have the any preferences on whether we use github issues or what we use the mailing list. We have issues. Can't, hear what you're saying. So We should definitely have github issues before to the chairs and where we discuss things, but which how we have github issues to track or discussing. I feel like when we're in this sort of pre document phase that it's maybe a little easier to have the discussions on the list. Yes. Yeah."
  },
  {
    "startTime": "02:02:01",
    "text": "Okay. Great. I think we're gonna wrap up. Thanks, everyone. Very much everybody. Especially the speakers."
  }
]
