[
  {
    "startTime": "00:00:36",
    "text": "hello everyone i think it's already tend to get going so welcome to this itf meeting this is the cosy meeting and this is an official itf meeting and as such the not well applies please make sure you are familiar with it before participating in any discussions and we have a reminder for the idf con code of contact please be respectful of the others and treat them with the courtesy and yes and this is a reminder hopefully you know all that already [Music] and moving on so this is our agenda for today i will start with some administrative and then we'll have the document status of the working group documents i will spend a bit of time to discuss"
  },
  {
    "startTime": "00:02:00",
    "text": "the x509 i drafted the simpler encoding the certificates draft and we will hear about two new drafts that might be of interest for the working group and we have a bit of flex time at the end if there are any other topics is there any passion of this agenda i'll take that as a no and so uh the note 12 was presented the minutes can be accessed here we will need a minute taker or a person responsible for the minutes um are there any volunteers we only need someone to make sure that the action items are taken so it shouldn't be too difficult maybe john could you look at that and yeah [Music] i can help out if you want okay okay that's perfect thank you euron"
  },
  {
    "startTime": "00:04:03",
    "text": "and we also need the chopper uh person to be like monitoring um the chat um maybe if there are no volunteer volunteers uh okay wonderful we have chris to help with jabber thank you thank you bob so then a reminder this meeting and the attendance is recorded so yes and we discussed already the agenda with that i think we can move to the next slide for the document status we have four documents that are in a very advanced state and which we hope to be able to complete very soon the hash algorithms that has some questions from the rfc editor i have cited the questions and some answers some possible answers at this address in the github repository if anyone can please take a look and comment advice in one two weeks i will provide those answers to the rfc editor"
  },
  {
    "startTime": "00:06:03",
    "text": "with that the the next draft is the uh 8152 beast alex draft uh it is in hot 48 for some time the same applies to the best document there have been some small discussions that needed to be completed and i believe there was a suggestion by jorgen for doing a small modification and do you want to discuss that now given that everyone is around [Music] [Music] sorry viola was that the question about the biz alex or the destruct uh so i remember there was a deja with integers uh i think it was yeah i think this was allowing the key id to be both an integer and a uh byte string previously it was just a byte string yes so there is a pr uh on the uh on the struct draft which is doing just that adding adding the int and then what it was in the mail"
  },
  {
    "startTime": "00:08:00",
    "text": "exchange on what how should we handle this given that the draft is in a progress state and i think the proposal was that we should actually try to make the change in the document now but the question is do we need to have further reviews or how can we how do we handle this that this proposed change so this is mike jones speaking as chair um the point of taking stuff to internet standard from draft standard is to uh preserve the parts that are in use without any changes and uh changing the format of the key id is a breaking change it will if people use ins it will break existing implementations therefore i'm strongly against ever doing this it's unnecessary we should not do this we should close the pr can you uh put a link to the pr in the chat please and i will close it [Music] this goes against what best documents and internet standards are intended to do so i'm sorry i'm a little bit busy doing both the agenda and sorry the the notes and and uh trying to find this link but i'm on my way so"
  },
  {
    "startTime": "00:10:17",
    "text": "internet standards documents we we always have interesting discussions because not everybody actually has run through this process and internet and its a little bit over the course of the last 10 years in the itf so basically what mike said is certainly true on the other hand having experience with using a protocol can also mean that you learn something and i think the learning here was that there are applications where having a numeric key id is quite useful so we probably wouldn't want to rearrange the structure of of uh cosy encrypt zero or something uh at this stage that would be wrong but uh doing a small fix like this is well within what can be done on the way from a proposed standard to an internet standard so that's just one point i would like to make i i don't have a strong opinion on the point itself uh whether we need the the numeric key but i'm also not working with the protocols that would benefit from that most so i leave it to others to make that point but i want to say that the process argument is important but i don't think it actually applies to this particular situation"
  },
  {
    "startTime": "00:12:04",
    "text": "um it remains a breaking change which is something you're not allowed to do during the process of taking a draft standard to standard if anybody uses this it breaks all the existing implementations they can't parse it it would mean that we have to pull the draft out of the rfc editor queue which is actually in auth 48 and then return it to the working group and it is not worth doing furthermore the arguments for numeric values i think don't hold up because you can use the same byte string as you would use for the numeric representation and at most you're adding a byte to the value that is not worth pulling document out of the internet standard queue so i just uh want to uh that there was a long thread on the mailing list on the cosy mailing list and the the conclusion was that we should make this change and now it's it's always good to have new input on the topic but this input was not provided freely look i'm sorry i didn't weigh in on the thread um but we should not be making breaking changes in the internet standard process [Music]"
  },
  {
    "startTime": "00:14:00",
    "text": "uh yes john and then [Music] and probably yeah i i agree with what harrison said that this is something that is learned from experience and can very well be done in an infinite standard i definitely don't think this is a breaking change as this is as breaking as registering a new algorithm if if you use that new algorithm none of the old deployments will be able to talk to you uh so i i don't really understand why this would be more breaking than registering um like kiran said as a bit surprised i think this was discussed quite long and was from support i think it was an ad suggesting that it was best to be done already now but i i definitely think it needs to be done one bite actually matters i don't have a strong opinion about doing it now or in a separate drawing um the difference between adding an algorithm which i understand is that cryptographic agility demands the ability to add algorithms and that's an expected extension point changing one of the most basic data structures in cosi is not an expected change and again you're right that if somebody uses a new algorithm that and it's not supported by the implementation that'll break that implementation and if somebody changes the data structure"
  },
  {
    "startTime": "00:16:00",
    "text": "that will break all implementations but the difference is there's no expectation for the basic data structures changing there is an expectation for new algorithms and next q a as the responsible ed so i think that we've seen a couple of different perspectives uh portrayed about what the standards process means in going from proposed standard to internet standard i basically agree with what karsten said that there is some scope for discovered with the spec as it was in proposed standard form when we go to internet standard and you know what exactly constitutes such a fix is something of a subjective determination but furthermore it's something that we do need to get both working group consensus on and full itf consensus on and so if we were to propose to make this change in this document i would feel a need to go through a specific working group last call and i believe also an itf last call because as mike points out this is in some sense a significant change it's not something i'm comfortable just doing at the last minute in all 48 there is the potential for real consequences for implementations and so it would be something that we need focused attention on i will also mention that if we do not want to make this change in this document going to internet standard it's also an option to have a separate document that is proposed standard that would then update"
  },
  {
    "startTime": "00:18:01",
    "text": "the internet standard to be rfc uh to make this change and i think there was also a note in the chat which maybe bob is getting up to the mic to say right after me about uh being able to change the when you're encoding if there's also a version or a feature flag that you can use to get that um so i i'm hearing everything that that has every point that's been raised and there's valid concerns all around and so this is not a clear-cut decision to make at least in my mind and this is mike i would be fine with this starting in an individual draft that's separate from the internet standard as a proposed extension and then people could adopt the extension or not but this should go through the normal review process this shouldn't be crammed into a document in auth 48 right i don't think anyone is saying we're going to make it during off 48 this would be something that has to come back to the working group and the itaf as a whole if we choose to do it in this document okay i thought i heard people asking to do that maybe i misunderstood but i i i'll defer it to the queue okay i think that brings up bob decades and i can find going from proposed to standard cases where important changes were made because there were oops or we lack something or whatever and we've had to make changes and because we've fielded things we've learned that we don't have the flexibility we need for whatever reason almost always there was some versioning"
  },
  {
    "startTime": "00:20:00",
    "text": "that we could use to make so we didn't break what was deployed and make products migrate cleanly to what is standard so hopefully there is some version that we can use for making this change as to what uh was just mentioned in the in the in by dkg if we got products that don't look at version before they start decoding the things that's their problem uh that's why we have versioning in in these sorts of things so we hope we have urgently so uh i'll just wrap up with that that at as a community we do make these sorts of changes as a community that's why we've learned painfully to include versioning uh yes carton i think that should be the last comment and you should move on yeah let me just quickly point out that version is not needed um to allow integers in this place because the sibo encoding makes sure that you notice that there is something there that you didn't expect um so a version would probably only cloud the uh issue here um so the the essentially the the major type in that field plays the same role that a vagina would play in another situation so if i were going to build a separate extension i would simply say let's extend the data type of that element and people will notice if they don't interpret it there will be no false intervality which is really what versioning mostly is about so i really think we should move on and discuss this further"
  },
  {
    "startTime": "00:22:01",
    "text": "uh either on the mailing list or if we have time at the end i just we are i think more than 10 minutes behind the schedule and we have used all of our flex 10 so let's continue and move back to dc4 temperament so then tell us two documents on this page are the x509 that we will discuss on the next slide it is in uh its pasta adhd evaluation but there are still a few small things that we need to [Music] improve before it can be progressed after that and the last one is the countersin draft which needs to be sent to the is3 and this will be done right after this meeting i think yes uh so i believe that uh michael richardson was tagged to do the shekerbirds write-up and that that's the only thing we're waiting on right uh it is already done i hadn't noticed that earlier but we can now send it to the isd okay i think it's been done a long time actually yes it has been done for quite some time so with that i will move on so for the x509 document there are"
  },
  {
    "startTime": "00:24:00",
    "text": "a number of issues in github i believe most of them are already either are resolved or marked as one fixed as you can see some of them have the attack fixed question mark please the people that participated in those discussions take a look if the issues that were raised are really resolved there was like a big commercial question that finally got merged but there were still some comments that i weren't exactly at rest in it so uh yes [Music] please take a look at that ideally i would like to have someone that will be responsible for wrapping decent declaring victory and so for the fixed issues and there is the media type issue where i believe we needed to discuss further with kirsten how to [Music] progress with that one whether we want one media type or multiple media types i think the discussion was around that and how to formulate it in the draft yes"
  },
  {
    "startTime": "00:26:03",
    "text": "um was there an action there i'm sorry so i believe the action is apart from everyone to have a look who is engaged in x509 to have a look at the open issues so the action for me is uh the chairs and cars then to discuss the media type or if carson already has a good idea what kind of text could be suggested that would be wonderful otherwise let's have a small chat and try to finish that yes kirsten yeah sorry for some reason this was not my to-do list this would be a very quick thing to do okay sounds perfect thank you and yes i think the last time it was john who prepared a pull request uh john would you be uh willing to take another look at the questions and everyone to also take a look and unless anyone complains about their issue not being resolved and if you don't see anything please i just fix those issues would that be uh okay for you i took a quick look some week ago i think it looked good i didn't have any"
  },
  {
    "startTime": "00:28:00",
    "text": "comments yeah thank you so uh i think those were the important things and i guess we wanted to take another look what are the phrasing of the protection over x five uh back and chain and x5 t is clear enough i believe during the last interview meeting we said we want to at least strongly recommend protecting those parameters uh so yes i will create an issue and uh work on that and of course anyone that has a moment to help with that please just let me know but otherwise let's say i will be taking this item and with that i think and those are all the remaining issues for the x 509 document and we can move on to the presentation from your uh okay okay can you hear me let me just"
  },
  {
    "startTime": "00:30:01",
    "text": "stop my presentation and accept your okay can you see the slides as well yes okay good so this is going to be quick um there is just one slide or there is a there is two slides but there is only one slide with content and that's basically yeah status and next steps the base specification is stable we have had a discussion already at the interim meeting there is this seems to be fairly mature we would encourage more reviews to both look at this specification and and also have see if there is an interest in in in drop testing or i mean at least testing the the results from the rust code which is in the github repo there was one proposal we discussed this last time during the interim and that is that the revocation parts that's currently only talking about crls should be moved to a separate draft so we should try to complete this part without revocation and then have uh serials and other revocation aspects in a separate drafts so that's the uh that's basically the only things that we as authors have i don't know if john wants to add here who has been doing the coding and main part of the specification you want to add something not much um"
  },
  {
    "startTime": "00:32:01",
    "text": "i think we will have more time for c 579 here after uh after i theft hundred and twelve so i will i plan to do some i already have uh some updated code or some bugs in the old code and it didn't support everything so the code has been updated i will share that in a month when i have checked it also yeah okay so yeah so that's it um first question should we take these questions to the chairs want to leave this question about separating the draft into two pieces uh whether we need to adopt the the separate part or not and also it would be good to have a call for reviews if there are any see if there are any volunteers yes for the adoption of a separate draft or maybe even like the idea itself to have a separate draft i believe that is fine the the motivation for that was because it's separate from the main concern of the draft or what was the exact motivation there well maybe carson could could fit in there sorry it was just distracted uh yes uh kyrsten"
  },
  {
    "startTime": "00:34:01",
    "text": "okay so the question was i mean i think basically the reason why why carson wanted to separate out the revocation parts was that we have one part which is fairly mature and the other is still in progress and i suppose that would be a way of speeding things up that we get something that is ready earlier but maybe carson can add yeah i don't think i have anything to add to this so i think it would be good to finish c509 um so if we can speed this up by doing serials separately um i think we have more than one thing that could go into such a separate draft i don't remember what the other things were crl and ocsp has been on the table currently crls are in the draft ocsp is not yeah so ocsp is probably the the one that i'm more interested in than than so i think this is the wrong way around benjamin maybe you have a position on this i was just jumping in to say that we might end up in some situation where like the core c509 spec says and you need to have some way of using or conveying replication information there are multiple ways to do so which include but are not limited to crls and ocsp as specified in this other document but if you want to do your own thing that also meets the requirements of this spec that's the sort of construction of the relationship between documents that we see with some regularity this sort of thing makes some people a little uncomfortable because there's no mandatory to support way of doing this"
  },
  {
    "startTime": "00:36:02",
    "text": "and it's sort of saying there's a key part of the correct operation of the system as a whole that we are not specifying but in some cases it ends up being the least bad way to proceed i guess that's that's a good question good input so i mean we still have the option to to keep it uh as it is if we think that is better for for being more clear at what what type of revocation should be mandatory if any he has chosen some concern to move forward with uh this draft without having um you know a crl draft or some kind of revocation draft that you could point to uh that would follow i mean it seems like it would be kind of a gap that could you know during sector review or something else could be raised and kind of block moving uh this d509 from moving forward so i mean if they if the crl draft or or ocsp draft exists and is progressing as well then i think that would be fine but um yeah you're sort of pointing out that there's a risk that uh we end up in a state where we try to publish c509 and the other stuff just isn't ready yet and you know we could sort of force the issue by putting in a normative reference so that the rfc will not actually be published until they're both ready um and you know i i'm amenable to that for many of the reasons you described but"
  },
  {
    "startTime": "00:38:00",
    "text": "i'm reluctant to say that it is definitely required without getting some further input yes russ um i'm kind of opposed to the normative reference uh because if we just left it as it is and finished the work we'd end up in the same place with one document and that seems like a better outcome than a document that sits in the rfc editor's queue for a year uh hi there i uh want to point out that ocsp doesn't actually necessarily work all that well uh there's easy ways to block ocsp and i would be reluctant to see this make the same mistakes that we've made for years in the x59 world about ocsb in particular with x509 we've been pushing on the ocsp must staple trying to get that to be widely deployed if c509 certs are going to be deployed we'd like i'd like to see you know the must staple stuff be there from the outset um because otherwise it introduces privacy issues and um privacy issues if you don't do stapling and if you don't require stapling then the then you don't actually solve um the replication at the time of the revocation issue um so if you're gonna try to do revocation please please uh take heed of the problems that we've run into for basically like a decade um i don't think that means that this should necessarily hold it up you could reference the existing x-509 must-staple questions and granted that wouldn't work for it wouldn't necessarily work for a native c-port but you could normatively"
  },
  {
    "startTime": "00:40:01",
    "text": "reference existing x-509 must staple stuff start work on the must staple ocsp or crl work that's cbore specific and leave that out of a normative reference in this particular draft just have that subsequent draft update this one okay so my my summary would be that having this cla section would be a device to get this through the isg uh but well given that cis are usually not what you want in a constrained environment it's not what we would actually use so it's a rfc what was that 6919 must but you know you you won't and then we will do something like ocsp but better in the direction that dkg just said to solve the real problem works for me yes john and let's uh stop the discussion afterwards yesterday that mozilla is focusing on something they call crl light instead of ocsp but i don't have any i haven't really read up on what it is but is that something that that should be considered here we can junk you share that either in the minutes or somewhere so that people can take a look and maybe discuss that later uh in the interest of them i suggest that we move on and look at"
  },
  {
    "startTime": "00:42:04",
    "text": "are there any volunteers for reviews [Applause] in order for this draft to have progress we will need some reviews and i believe there was a good amount of support when we adopted it so please people that are interested in it progressing try to read street and provide some feedback [Applause] okay well i don't see anyone volunteering for now but yes i imagine we'll have to reach out to people individually if there are no reviews uh so is there anything more uh for this presentation nope thank you okay thank you then the next item is hp k e and thrust"
  },
  {
    "startTime": "00:44:06",
    "text": "okay are you gonna share the slides room i yes i will share it okay great okay all right thank you um just as a bit of background this is work that was started in the suit working group where this same set of authors was working on how do we encrypt a firmware load and uh we decided that uh it might be better to have a uh the hpke mechanism in in cos a because we probably weren't the only ones who were going to need it and so basically we extracted that piece out of the suit document and are proposing that the cos a working group adopted so let me give you a little bit of a introduction to the document next slide please so um as i said this was started as part of the firmware encryption you can see that the document suit firmware encryption zero zero basically is there we wanted to be able to support uh pre-shared keys and uh that was already offered by cos a but we also wanted to do the hpke approach uh which was not already straightforward in cos a so we uh wrote our own structures and we wanted to bring them here uh so that others can make use of that same work as opposed to it being tied tightly to the"
  },
  {
    "startTime": "00:46:02",
    "text": "firmware encryption next slide so um like the other um similar mechanisms it's got three layers uh layer three maintains the parameters needed to generate the shared secret next slide the middle layer contains the encrypted content encryption key next slide and the top layer contains the encrypted payload of course it continues to support a detached payload as well next slide so as i said at the beginning not burying the lead we're asking the group to adopt this because we think it has will have usefulness beyond firmware encryption next slide we wanted to point out that there's already some implementation experience with this uh the folks at arm in particular honest has has done this work but it's based on steve farrell's uh happy key work that was done before that happy key relies on openness cell and so on um but this is uh"
  },
  {
    "startTime": "00:48:00",
    "text": "the point is it's not just a paper spec so um i think that's the last slide but i did want to point out that yesterday there's been some discussion on the main list about this document already and uh you know we'll will of course take the spec wherever that discussion leads if the group chooses to adopt it i think that's it over to the chairs so um my understanding is that your goal with this draft is for it to be adopted as a working group document once it is a little bit more advanced is that correct yes that's correct okay do you want me to run the queue or do you want to run it yes that's that would be good thank you okay joe you're only using the unauthenticated modes for hpk is do you guys have any use case for authenticated modes or do you think it would be something that would be could be added in or is there a restriction of jose i'm not that familiar with jose uh no we don't uh so in suit we always have a signature and we optionally have encryption and so we were depending on that um we uh kose has a similar structure where there's a signature or an encryption but"
  },
  {
    "startTime": "00:50:01",
    "text": "we could look at that if there's a need for it but that's that's the current way we the the division is done okay thanks dan yeah thanks uh so you mentioned you wanted to add a deterministic authenticated encryption mode i had brought up adding such a mode to the hpke and cfrg and i received a lot of pushback yes i'm wondering if you have a better use case than what i was suggesting could you explain what your use case is um so you're saying in the mail we had that discussion or uh yeah i think i actually had a presentation at the last meeting too no no what i meant was where are you saying i need it uh you suggested adding aes key wrap you said we need aes key wrap in hpke and that's a deterministic authenticated encryption mode indeed the output of the hpke is being used as the key encryption key that is so that when a firmware package is distributed to multiple recipients they each receive the same ciphertext and obtain the content encryption key by unwrapping the um that key using the one that was encapsulated a kek that was encapsulated just for them that's the the mechanism we it for so are you're using the the cipher inside of hp that is not aes key rapid what you're saying you're you're using that to wrap a key and then"
  },
  {
    "startTime": "00:52:00",
    "text": "using that key to with ads that's correct okay thank you john yep i think this is great work i think because i should work on this um just the more high level question to cool see how do we see is hpk the future of key exchange in in cozy or do we continue to add more non hpk algorithms also to cosi in very shortly there will be new pqc cams they will probably be added to hpke and they will need to be supported in cosi will be will we support both apke and non hpk or will koci only usa piggy i don't have a answer to that question myself but i think it's a high level question we should ask ourselves if we adopt this draft which i think we will yeah i i don't know the answer to that either um i think lamps is struggling with the same question uh as the post-quantum kem's come along what's the cleanest way to embrace them we're talking about a kem recipient info in that environment a similar thing could be considered here um i don't know what the best answer is and it's really hard to guess what future uh algorithms will will look like and what parameters they all need so i guess this is part of the pain of being algorithm agile okay um so is the i didn't hear anybody speak against doing this uh does that"
  },
  {
    "startTime": "00:54:02",
    "text": "mean we'll have a call for adoption on the list uh we can yes this is my i think that makes sense yes okay thank you for the presentation and the discussion and with that and let's move to the last topic for today the uh fast verification print the uh ecd ac i guess just sick hello can anybody hear me we can hear you yes sorry i got an error on my screen for some reason um we are not seeing any slides though no and you want me to share this flight in the interest of time and uh you will just let me know when to advance okay all right um good morning afternoon everybody um i"
  },
  {
    "startTime": "00:56:01",
    "text": "see i have less than five minutes left so it's probably going to be hard to go through the slides but i will try anyway i to catch the main concept so what i wanted to do today is try to introduce a way to uh use ecdsa which is very well known and has been over 20 years in a way that allows faster verification and i think it's a useful effort for this group so the outline is the for the following and i'll just skip this part in the interest of time and so i just want to recap the ec dsa algorithm as we all know it's an elliptic curve based signature scheme which produces signature consisting of two components usually denoted as an r and s where the second signature component s is dependent on the first signature component and the private key in a way using a signing equation and the important thing to notice during the signing is that this signature component r is derived from the ephemeral signing key big r verification involves several steps it involves recomputing this ephemeral signing key are and then checking whether it maps to the same signature component small r so this is a very nice algorithm and has been widely adopted but the problem with it is that it doesn't really allow a fast batch verification so checking a number of sequences at the same time there's also a way to speed up a single verification um but that is only possible if we use similar to"
  },
  {
    "startTime": "00:58:02",
    "text": "like ed dsa so the essentially the bernstein signature where uh the signature instead of uh [Music] consisting of the small rns components replaces this r component by the thermal signing key and what is the impact of that change the impact is that we can essentially massage the verification equation that's the last verification step mentioned on this ecd is a star slide um and then it suddenly becomes only an algebraic equation that has to be checked and so that allows a speed up of roughly 30 percent in the single verification case and if you have for example a certificate chain or you have for whatever reason you want to check multiple signatures the same load balancing or something like that then you can get a speed up of roughly a factor six and the downside is that that the speed up only applies if we use a slightly different format for the signature itself so uh the objective of the next few slides is to show that actually the format can be the same so i'm i'm going to explain this trick and i i think i have only like one minute left i i just want to point out on the next slide there is an example in the rfc 7515 about how to use ecdsa in a josie context and"
  },
  {
    "startTime": "01:00:00",
    "text": "that example gives an ecd's a signature uh rs that's option one that is printed in that specification an important thing to notice is that with ecdsa you always get two signatures that are possible and that is due to the so-called b9 malleability property of ecdsa so instead of having one signature you always can make a second one and that can be done by anybody without having access to the private keying material so in terms of this example you get two options for the signature and um the important property is that in one of the options the if you actually would do the verification step itself you would have an ephemeral signing key where the so-called y-coordinate of this thermal signing key is odd and the other one is even so what he can do is he can try to pick any ecdsa signature of these two options at will and as you see if we have for example the rule that we always want to have the y corner to be even then we in this case pick option two but in in any case in in all in all signatures we have two options one of them with the assigning keys y corner to be odd and the other one even so let's look at this suppose we always pick the option where the used signing key was with y coordinate even then we are actually able to express the ec dj signature as yet one of those two options for the same ecd jsongju so it"
  },
  {
    "startTime": "01:02:02",
    "text": "remains an ecdsa signature but since the signature consists of the the x-coordinate of the signing key and the y-coordinate if we know this the parity of that y-coordinate we can uniquely recover the thermal signing key from the signature itself without first doing the entire verification and that allows to speed up so the procedure to get uh to more of these two signature schemes versions uh together is that we generate the signature always in the same way as we have done the like the last 20 years but if the signing key has an odd y-coordinate then we just toggle the sign of the second signature component that allows to represent the signature in such a way that the thermal signing key can be recovered and that all the speed ups are obtained i will think i will just go soon in the interest yeah yeah go to the last slide so um i think we don't really have time to go over all the details but uh the main reason that i wanted to present something is right now there's lots of interest in initiatives that use uh josie signatures for example in e-health initiatives for example just to get in a restaurant you have to show you qr codes there's lots of things and that uses uh jws signatures and i think there's an excellent opportunity to make some of these things speedier but for that we need this to be facilitated by uh"
  },
  {
    "startTime": "01:04:00",
    "text": "idf so the question is whether people are interested in in looking at this further and how we can make sure that we move quickly on that and what i need to do to in order to satisfy uh you know your requirements i'll leave it at that for now yes thank you for the presentation uh if people are interested for sure be uh sure to reach out to renee uh he hasn't smells to demonically so you'll find also there are his coordinates and we are quite over time so unless there are any special comments i think we can close at that thank you very much for the participation and [Music] have a nice day thanks"
  },
  {
    "startTime": "01:06:18",
    "text": "you"
  }
]
