[
  {
    "startTime": "00:00:05",
    "text": "slides and if I drop out during the meeting um that is likely because my I forgot to not unmute myself something is going wrong here um so I'll have to stay unmuted okay um I see five of us it's a minute past the hour and if someone comes late um they'll just miss the first Inu words uh welcome everyone to this meeting of the SEO working group um we have a nice agenda again after skipping a few meetings um you're all familiar with how this works um I won't be showing a not well slide because um you know it and if you don't please ask me or read read up on it um for agenda today we have um a brief update on time tag which has received an area direct review and where we the goal for today is to basically check whether we all agree that the changes are something that we can just"
  },
  {
    "startTime": "00:02:00",
    "text": "do now then cast that that is something where Caston will um mainly talk um then there is what is now more and more becoming the cddl point 2.0 block that also includes other things that are quite related to uh languages around seore that are not seore and then Martin will tell us a bit about the updates in DNS c-04 any comments on this anything that you want addit or noted I wow I'm mut is slow today um I wouldn't mind Martin going first um Martin if you're okay with that um I don't mind problem with that say again please unmute slow do you know about the mute do you know about the mute button in the bottom right corner [Music] mute button and are you talking to me or to Christian to Christian okay um yeah I'm um yeah I'm on system unmute because everything else is failing me today so uh yeah um but um seeing that it's all fine to go with Martin um please take it ahead um you should just manage to request presentation okay I requested them ah okay okay and your slides should be in the deck already yeah okay then let's start um so I will give an update on our CBO DNS message format um just a reminder for those who are new um the idea is that we want to"
  },
  {
    "startTime": "00:04:03",
    "text": "avoid fragmentation especially in uh more restricted link layers such as a 2154 and with uh protocols like Doc where we have a media type we can do that so yeah that's why we want to have a new media type or in the Co in the core sense uh content format so the uh objective is to reduce package size of the DNS queries and replies by conis and compression both by encoding it in cabore which is in conciseness omit redundant Fields uh in both DNS queries and responses and then also have some address and name comprom compression using p c uh which at the moment is optional I will talk a little bit about why I say at the moment later um since uh the last ITF ITF 107 17 and the last draft version which is 03 uh we provided a format description for the edns opt pseudo record format uh we simplified the CD cddl to a more simpatic style and do did other cleanup and housekeeping stuff and also removed the DNS transaction IDs because we assume that it's always over uh transfer protocol that uh can uh map requests to responses so it isn't really needed for this format so uh the edns op pseudo records uh basically have this uh cddl now um and with that we can basically uh provide uh wire for format which is like with this example on the right side here that we can only have 14 bytes for a wire for for what was in The Wire format originally 23 bytes uh we did this by again omitting a lot of like optional or"
  },
  {
    "startTime": "00:06:03",
    "text": "redundant Fields um and setting uh some values we uh used of course the CBO format and which results in uh length fields that are fixed size in The Wire format of 16 bytes uh to uh sometimes one sometimes three bytes depends a little bit on uh what we have and we have this uh tag here the 141 uh which basically uh shows that the uh that this resource record is an OP record so it can be distinguished from from defa resource record types um next uh I promised some evaluation at ITF 117 and uh we finally got there and for that uh we looked at the Data Corpus of three different uh studies um that were collected throughout 2019 which is consists of 19 iot consumer devices and from 50 50 vendors this of course is not the usual uh um uh use case we use coab for but given what we have at at the moment with DNS data that's what we uh used but there are also like of course as you see there phones tablets and PCS in there sorry my phone is [Music] ringing the moment you start talking your phones yeah yeah um then um yeah and it contains 1.2 million queries and 2.74 million responses uh this is because the a data a finder data set only contains responses and that means also that we have a lot of uh qu responses that don't have a map query but uh we use this to our benefit for in the evaluation which um we used our"
  },
  {
    "startTime": "00:08:00",
    "text": "implementation which I did at the last ITF hackathon for um and uh implied our SEO compression to that Data Corpus um when there is no question SE we lighted the question section which is a feature of the cabore format when the for the response there is no query as for example in the iot finder uh data set and uh we did for all of them uh the unpacked version and the packed version so in uh overall we have uh comp we we we looked at the compression R ratio so the wire format uh divided by the C format length and also at the bite savings which is uh the sub uh the substraction of both of them and we have this um so if you see most of the uh uh uh messages were actually uh comp press but there are some outliers and uh some that are not really outliers but uh where we have to maybe even work a little bit on the format still um on the left hand side we have here this long chain where the unpacked format is actually um shorter than the pack format and that's if you look at it first maybe a little bit unusual and the reason for that is basically that because the unpacked format has this extra table in there it of course uses a little bit more bites and then the other uh tail here is uh where we have really bad compression especially when we look at the bite savings and that's the reason why we because we don't uh use name compression at the moment in the seore base format and we have like uh something like this in the uh responses where we have a lot of duplicate names in the response and then uh they of course show up every time in the CBO format so maybe we need"
  },
  {
    "startTime": "00:10:02",
    "text": "some name compression actually for the base format and uh then I thought a little bit about this uh and had came up basically with two ideas one is that we have it a little bit more like the DNS yre format um which is less idiomatic um uh we uh reference basically the components within the sibo uh object or we do do it like a sibo Pack Light where we reference the components in a predefined table which is then of course more tics Sobo so the first idea was basically based on the idea that Christian had um uh that instead of having the uh domain name encoded as a text string we uh uh encode it as a uh as as in its component and um this compon fied name we can then uh basically reference with an with a uint which was somewhat look a little bit like this this doesn't work 100% with the current CBO format it's just an example um but just to give you an idea how this would work but the question then is what would these uh in U then represent is it the offset in the C binary or is it the E J's K's L's string in the cabore object and also then is the question is how to detect uh when the name ends and so the other idea was based basically on a paper this is recently in uh in in in publication going into publication um by there are some known names here uh in there um by byuk and and collaborators um as well as Christian's idea to have basically a table in front uh of the object uh where you then reference the index of in uh in the object and uh this would then look a"
  },
  {
    "startTime": "00:12:02",
    "text": "little bit like this and this of course introduces more overhead you see when you compare it to the previous slide you have a lot of more of these index references here uh and of course the um the area itself introduces some overhead and it's very much like packed seore so um the question here is should maybe the base format also be p seore should we even have like this special pack tore format and maybe use it just to have some as Christian also proposed uh use the number in the packed uh index in the in the in the media type parameter to have some context maybe encoded in there yeah um so all a little bit open questions still um so comments on that are very welcome and uh yeah then for the other next steps uh there's also the question if we might want to rotate the flags especially for the uh for the flags in the extended Flags in in the uh in the DNS opt records uh we have the problem that only the MSB is defined at the moment in uh in in the Yana Registries and uh this of course in SEO leads then to a three bytes of encoding in the in in the um integer definition and if we just roted this uh we only would use one by and then yeah as I said we need to think a little bit more about name compression in the uh base format and then I also want to do some runtime analysis to maybe compare different uh compression algorithms so yeah this what it from my side Thanks Martin um comments questions"
  },
  {
    "startTime": "00:14:03",
    "text": "answers I think answers would be the best but yeah yeah I'm amused by by this idea of rotating the the flags sure we can do that um this is one of the things that that people who implement this are likely to get wrong uh yeah that's why I why I didn't do it yet because yeah I I was exactly uh uh fearing the same thing yeah so um well usually what what I do in these cases is I just write some pseudo code and put it it in appendix so people who have no idea how to rotate this uh get code they can use yeah then maybe I should do that and uh maybe maybe some there maybe something also how to express this in the cddl that people get alerted that they have to pay attention there well we could Define uh cddl um control operator that does this kind of uh rotation so right now we we have a um draft uh open that will Define new control operators the next uh slate of control operators and um uh maybe you can make an issue there that that points out that this would be useful mhm"
  },
  {
    "startTime": "00:16:00",
    "text": "so these These are always 16bit numbers yes uh and then the I I mean I put the default Flex here in there as well but from my uh preliminary evaluation I don't think there is that much to be won there but I think it maybe also be a good idea to then rotate the default Flex just to be consistent but uh yeah yeah probably but they are also 16 bit uh yeah any comments on the on the name compression maybe also of course I would be happy to to actually have numbers comparing the the c p approach with uh any of the other approach um there is at least I mean for for our unpacked approach there is wait yeah I I was thinking about the pack approaches yeah so if you have other approaches to do packing uh then uh it would be interesting to know whether there's a practical difference or just going with p is is a good way to do this so basically having this name referencing stuff that I presented also in implementation and have a curve for this in here did I understand right yes okay yeah what whatever other approaches you think are are viable I mean you don't have to test things that you wouldn't want to do yeah but uh if if there is another approach we would like to know whether that actually gives you additional uh compression or actually is worse then see what"
  },
  {
    "startTime": "00:18:01",
    "text": "pick yeah there's there's one suggestion I'd like to throw in here because it it it aligns with with some of the things I've seen on the slides um that is um when we are going and I think that is a generally good direction because that's what packed is for um when we when we're going with packed um would it be viable uh for uh SE protocols like as this to state that in particular positions there is an implied tag six um because if if you go to I think that was slide uh 21 something yep um um you have yeah you have a lot of numbers there um and for immediate I think there are a few one by immediate values 16 but there yeah there are 16 okay there are 16 um immediate values are they all like are there 16 immediate values yeah and and not all of them are for packed right well right now we are stealing 16 for packed okay so there are 16 16 um immediate values that um that that could be used and then any six of um six of something gives us an additional like plusus 24 um for for one uh for for a OnePlus One Bite um I'm wondering whether whether there is anything to be gained and whether it's not too confusing um to allow a protocol to say that yep in this position it's either a string or if it's a number that is referencing into the packing table so that is behaving as if it were six off something um because I've I've I've played a bit around with the same thing in in in Coral where we would have a similar situation where in some positions there's like always a number"
  },
  {
    "startTime": "00:20:01",
    "text": "uh sorry always a um always an immediate uh always a reference um into the table so that's probably as much a question to you as it is to cast yeah well I I I can say uh it's probably not that easy with with with this uh stuff because as I said this is a little bit what what what you see here is a little bit wish wishy-washy because uh we have here C integers that should actually be strings when we look at the CD cddl and then we have some stuff where uh the type and the position of um of the of the uh the integer in this format or the the value in this format in this to be more General uh actually identify what this uh value actually is so um it is not that easy to have this zero here actually because the 12 and the one actually could be um could could be um uh um uh could uh be there and could not be there uh so it makes it a little bit harder to uh identify this zero here actually as a name reference um so we which zero here I don't I don't see your curs so sorry uh I was talking about the second array in in the in the most uh it's second area in the first index of the topmost array so so the Z exactly um and be since this is how the query is at the moment uh encoded but uh uh we we know only it's know by looking at it that it's a name reference but actually if you are within the array you can't actually that easy distinguish so I I'm actually thinking bit about"
  },
  {
    "startTime": "00:22:00",
    "text": "shifting some of the fields around maybe to have this actually be possible but um yeah I I I I didn't find a solution for the that's another thing why I didn't go ahead with this yet right now to have it as a draft but maybe the TXS are just the solution here I I think this could only fly if if there's something in the cddl that says that that makes this explicit so if it can't be in the cddl it it will be too complicated yeah exactly yeah doesn't mean it's not complic too complicated even if it's in CDL but the reason why I love to see numbers here is that um I consider it rather unlikely that you can be more efficient than uh with the first 16 um entries being covered by by the simple values um so um I I mean I would probably then just use C at this point but but like a light version where you only have the shared value references and not the uh straight and inverted uh references yeah that that that was going to be my next question so the the example you have in the slides has uh names that are actually identical um but but you of course also have in many cases our names that are identical except in the lowest level um domain name component and uh that's of course something where where prefix suffix uh would would be useful I mean uh we have here somewh the suffixes here ns1 is a is is a subdomain of example.org um in this example here okay so how how does this this fit together um it in the next slide let see it a little bit"
  },
  {
    "startTime": "00:24:00",
    "text": "better okay yeah um basically points to the zerious index of this packing table if you want to call it a packing table it's not exactly how P CBO works but yeah it it looks very similar that's what I wanted to point out yeah so in in this case but that's probably not not a realistic case um also the ip6 addresses what benefit from prefix compression exactly so yeah I I think that that's really something that that you have to look uh a cus have you look at a cus for uh and of course one other question is how how realistic that Corpus actually is um so when you take something out of a test bed then then sometimes that test bed has some characteristics that are different from what you would find in in the real world so that probably need some assessment for our doc paper we use the same Data Corpus and we compared it to some data and it is there are some differences and some EX in the in the maxima and and extremes but uh from the general shape of the curve of names that appear in there it was just about names sorry uh maybe it's not that true what I say but the names at least are very similar to what you see in good so I hope we have given you enough uh ideas for further investigations not some okay then uh thank you or are there any other questions comments going once twice"
  },
  {
    "startTime": "00:26:01",
    "text": "three times um I think we're out of answers or questions yeah um Thanks Martin for presenting this and doing all the update work thank you and um cast please take it ahead with the next block yes so can you give me the slides thank you okay so um I have three items that probably should take about 10 minutes each uh so I think we should be able to manage this in time um so let's talk about the the time tag first we we submitted this to the IRG on uh August 23rd and um fortunately by now Franchesca is back so one of the first things she did was create an ad review of that with a a lot of good points um so uh the authors processed this and generated a pull request uh that has uh all the changes and Franchesca already said this is probably a good change Set uh so she would go ahead uh with that and of course uh the working group should be looking at these things as well uh so uh yeah please have a look at the the pull request I I quickly say what's in there there also was was one thing coming up um about maybe having a slightly different arrangement of the Registries so uh let me go into these one by one um so the the um uh new Registries right now are done uh"
  },
  {
    "startTime": "00:28:03",
    "text": "by uh creating a new registry group called SEO time tag parameters so it's a registry group that is specific to this specification and within this registry group there are two Registries for time scales and for map keys and of course we are registering tag numbers in the existing CBO tags uh registry which is uh alone in its own registry group so when when we decided about the shape of the Registries in 749 uh we thought it might be a good idea to to have some some very direct access to SEO tags so it it got into its own um registry group as well so registry group is something that that you get a web page for at Ayana and that web page can have multiple Registries uh listed and and the assignments within the registry so this is what what is currently in in the draft in the draft that we shipped to the isg and um yeah so um this essentially means that uh whenever we have a new tag that that uh needs its own registry um we are creating further uh registry groups so in 10 years we will have 10 registry groups that start with C something um and U yeah one question was can we just put all these these tag parameter Registries into a common registry group so the only change in the document would be uh to say we are creating a registry group called seabo tag par parameters and then other registries could simply Define their uh"
  },
  {
    "startTime": "00:30:03",
    "text": "other documents could Define their Registries in that uh registry group so that that's a bit uh more more tidy we are not littering the top level space with all these U tag specific registry groups and uh while we were thinking about that actually maybe we can just use the existing registry groups C tags now this is currently just one registry which as I said has its advantages uh but uh the Assumption of course would be that we we append the new Registries so they would not get that much in the way the only difference here is that uh we would actually have to to name the registry time tag map keys because map Keys is is not specific enough to to know what these things actually are so this is a little bit of uh reshuffling I don't think uh it's very really critical so we don't have to do it uh but I think in in the um sense of of getting some HG hen there going um not littering the top level space I think that that would be a nice thing uh to do so I'd like to hear whether people have opinions CHR I have opinions but I'd let others go first okay um just brief question um the We There are already a few Registries that describe um TCH parameters for for other for other use cases for example cwts um have their own numbers and if I remember correctly they do have their tag so those would so those would of course not go retroactively over there but the idea would be that no matter"
  },
  {
    "startTime": "00:32:00",
    "text": "what we whether we do c tag parameters or just go into C tags they could have been defined here right away right yes okay so my assumption would be we would use this common registry group for things that are really seore extensions and and not things that that are their own protocols like cwt U and so on but we would have this available um so I mean time tag is not not a giant new protocol it's just a way to express things in C so like for for C utilities yepa I favor the latter use the existing registry Group C tags and take all of our Registries that really are seabo Central not WT or entire other complex protocol and list them there um for what it's worth that's what we did with internet printing protocol I and there actually are 14 Registries under that that it's proved to be very helpful for implementers to find things that they're all there on one top register group of making it easier to find thank you okay so uh with that I I'm just reminding you that there is this pre request that you may want to look at I think all of these uh changes that that Francesca essentially um described in her ad review are more or less uh necessary uh so I don't think we have"
  },
  {
    "startTime": "00:34:01",
    "text": "the option of just not making a change and the question would just be do we have anything that we want to change about this P request some wording or something like that um so I neglected to make a slide what what's in that Pro request but there there are some I sent a message to to the mailing list about that and uh I think the biggest item is actually um referencing the version 2.1 of the Precision Time protocol of i e 1588 because that's the current version but uh we are not pulling in anything from that current version except for slightly increased range of the clock accuracy um um definition uh so P please do have a look and and maybe approve that request if you like it or uh send comments to that and my plan would be to to get this done uh relatively quickly um so uh Franchesca can can get this on one of the next Tel chats instead of waiting for the ones that are going to be increasingly dominated by iatf 118 considerations so if if you can have a look by tomorrow evening or so that that would be great so that's number one um so the other two are in this uh Lake of uh SE Associated languages and just as a reminder we we have seall which is what what this is all about uh we have um a hex visualization of of seabo data with seore pretty which is uh never not defined anywhere uh but uh is has been used in in dozens of of uh"
  },
  {
    "startTime": "00:36:01",
    "text": "specifications uh already and then we have two Associated texture languages one is the diagnostic notation uh which is a more readable form of representing seore instances and we have cddl which is essentially a grammar for or data model for um seor data but also for for Json data and and recently also for CSV um data so um edn which is the short for extended diagnostic notation um was originally derived from Json while cddl was originally derived from abnf which causes these two languages to to differ in in pesky little ways so in cddl we have end ofline commands with a semicolon in edn we didn't have uh end ofline commments and the plan is to put some in um so yeah the these are almost but not entirely unlike each other um so on on the diagnostic notation side um we have an an older draft that originally was meant just to extend uh diagnostic notation by application specific lals and uh it has grown to to get other uh maintenance things in there so I mentioned end of line comments which is probably the the loudest request that that we can answer here and these are now in in the current uh document and they also everything that's here has been implemented in the edn abnf uh tool if you want to play with that uh we have uh the Syntax for hex floating Point uh in there um which uh is sometimes useful if you want to make sure that you don't have conversion losses between hex and decimal um we now"
  },
  {
    "startTime": "00:38:00",
    "text": "have text that explains when a number uh actually is interpreted as a floting point value uh versus when it is interpreted as an integer value so far we up to now we just assumed uh people will do the same thing as C so we don't have to describe that but now now it's actually uh well described um we have an example for fractional times so floating Point times in in DT in the application um literal DT uh we have a few Unicode fixes there has been a lot of discussion about unic code issues um in the the art mailing list and in the internationalization uh mating list and we have learned something about how we can minimize uh misunderstandings and so we we picked this up and there are a few more editorial fixes of course when you work on a document you always find things that can be said in in a better way um so the the two things that that are still open uh issues in the GitHub repository is one is about encoding indicators um so 749 and then Dust 8949 go to lengths of including encoding indicators uh in the diagnostic notation uh which is good for Diagnostic purposes so so it's uh really useful thing um but um I think we don't have a lot of implementation uh of this so that that makes it a little bit hard uh to properly handle that and worse it's not in the current abnf um and it's also not in the edn abnf tool because edn abnf uses a c implementation that doesn't really give us access to the encoding indicator so that that would be a signific ific an addition to the edn abnf uh tool and I'm"
  },
  {
    "startTime": "00:40:00",
    "text": "not sure that that this can be done in a reasonable amount of time um so that's um yeah we could fix the abnf to include the encoding indicators but then we don't have a great testing tool um to to do that uh unless uh yeah there is a little miracle and and somehow all this gets implemented um the other thing about encoding indicator that that's really what the the issue is about uh how do you add an encoding indicator to application prefix uh data so DT uh for instance gives you an integer or or a floting point number uh in in most cases and uh you may want to control what the encoding of that is that actually doesn't make a lot of sense for for this specific a prefix DT but there may be others like that that would benefit from encoding indicators so um yeah that I don't have a Syntax for that um it's probably relatively easy to to add some syntax to abnf uh uh but again I'm not sure that that it's easy to do a full implementation of that so any comments on encoding indicators as as the one who who brought that up I'd like to jump in here um I'd be perfectly fine if the if the verdict on coding indicators for app prefix data is um we don't do it because I think this can get arbitrarily complex especially when and so so so why go there but I think there is a lot of value in in preserving the ability to do um encoding indicators and there is at least one implementation that is the rust one um that does encoding indicators okay"
  },
  {
    "startTime": "00:42:05",
    "text": "good so my job will be to add this to the abnf and and think about ways to get it into the the other implementation as well the the useful thing about Ed and abnf implementation is that the implementation is directly using the abnf out of the draft um so uh it actually is check the the um abnf which I think is the useful thing to do okay so uh we'll keep the encoding indicators but we don't do anything special for application Prix uh data oh the other open issue is the Inna considerations for the application prefix registry um and I I was about to generate a long and complex slide about what we want to achieve there and how we would want to achieve it and then I noticed that I actually wrote this section already a couple of uh uh years ago uh oh I love uh formating in DET teracy um yeah so in Json path we have something called function ex tension uh which are really very very similar in their role to what application prefixes are in and edn so uh my I was wondering whether we can simply steal that stuff um I put it on the slide here so the policy uh we are choosing in Jason path which by the way is an approved document now um the the policy we are choosing is expert review so one would think that maybe one"
  },
  {
    "startTime": "00:44:00",
    "text": "would choose specification required um but we went for expert review to give the experts some leeway of registering something early where the specification is is uh only slowly materializing and you want to make sure that that the uh registration can be done early enough that that there are nobody else is using that for something else um and therefore the the there are detailed instructions to the experts uh detailed but concise uh first of all the experts are uh not uh allocating they told not to be allocating function extension names that are suggestive of generally applicable semantics so if somebody wants to have the application prefix x509 and and wants to to use this to represent the chemical composition of bananas um the experts should should not let that through that that's really the meaning uh of of that that first sentence so the the experts have some uh uh agency to to uh reject registrations that that uh uh really are misleading or trying to claim something vanity registrations and so uh but of course if somebody wants to use a nine character name for these that's fine so if it's called banana x509 that would be uh okay so the second point is the expert is instructed to to direct the regist to provide a specification so um this is something that could be be called specification desired uh which is not a category that"
  },
  {
    "startTime": "00:46:00",
    "text": "that is provided in BCP 26 um so we we really want to nudge people to to putting in a specification uh but we also see the reason why this is not always possible and uh therefore the the um uh registration should be made first before a specification becomes available so that's the second point and the third point is if there are function extensions that are or application pref in our case that are deployed and in wide use then the the experts May initiate the registration on their own so uh again just trying to curate this namespace uh a little bit better than than if they just have to sit there and and wait for someone to actually register the thing so this is what I would uh propose just stealing from the Json path document and and using for our application prefix uh registration policy as well um sounds very good to me comment um who was that sorry ad okay we have have someone in the background who likes it dog likes it too um I especially like I like this um level of detail but I also like the the first sentence about Frugal and especially the second sentence about allowing early registration in DLS work group and elsewhere proved to be extremely useful"
  },
  {
    "startTime": "00:48:01",
    "text": "to Avid collisions and um and move projects documents along I think this is a fine uh ionic considerations and much better than Reinventing it or making it complicated thank you okay if there there are no further comments on that my uh plan would be to address uh the the encoding indicators and and the considerations this week uh generate a-05 and then probably go for a working group last call relatively quickly um the internet draft deadline is on the 23d uh so if we want to be able to put in an updated version after the working group last call uh completes uh we would have to to uh put it in by Monday uh the latest if we want to go for the usual 14 day working plus call so that that's why I think we should do this a little bit faster so does anybody think we need more time for this or we shouldn't do a working R call at this stage at all that yeah General General feedback on on the state of things from the group pleasing I just wondered from your earlier slide it's possible to improve the title of this"
  },
  {
    "startTime": "00:50:01",
    "text": "document string in data tracker um because it's not strictly all about lals at this point I remember I put in the new title um already have forgotten what it was um let me just pick it up SEO extended diagnostic notation uh edn application oriented literates and abnf okay well that's better thank you I didn't want an a resulting RFC that people failed to look at because they didn't realize that was they should look we can further improve the title in the working BL call but yeah that that was overdue definitely and and I also agree that it's ready for last call working group last call and we should get right on with it um so that we do fit and with an opportunity for one great more comments on the on the General State of things then um I think um cast please submit whenever your ready so that we can have such a working group last call thank you great so the last document I wanted to talk about is the 6810 grammar updates um this is really about the number of Arata reports we have on 8610 uh and it's really necessary to address these Arata reports because the the abnf that is in in 8610 is a little bit fictional some places and uh yeah this needs to be fixed and um I think"
  },
  {
    "startTime": "00:52:01",
    "text": "the document is is now ready for working blast call I I wouldn't mind getting some some more feedback but uh uh I think we can work with BL call the z00 and um I think we have this other draft with a ton of abnf in it already so looking at this draft at the same point in time and and appreciate the the little difference between edn and and cddl uh would be a good thing so um I would actually like to to have the two work BL CS uh run in parallel uh so people are incentivized to to actually look at both sets of abnf and and form an opinion so again there there are two questions here is this thing ready for aass call and if yes is the the time frame of trying to do this in parallel with Idan literal is that a good thing to do um so on on the time frame I think I can wait and say yes this is something good to have together um on the redness for working group last call um just a a very brief um it probably is faster to just ask around before I do the show of hands to um who has read this so [Music] far um that that silence in the room um so if people if if if if people can find it in them to to to to read this relatively quickly and provide comments there um please do because I think it would make sense to do those together um but it will need a bit of a a few eyes from the working group and so far while from all I've heard this is an important"
  },
  {
    "startTime": "00:54:01",
    "text": "document to have it's also a very um say um tedious um housekeeping stuffy thing yes that I know people don't like to read um so everyone please still do even if it's a cursory read and have have a look and please leave a comment on the mailing list on this because otherwise um what one of one of us bar and me will have a very hard time doing a sh write up on this um later yeah but then it it's also quite okay to do that review during the working plus call um so the the the risk we get is that we will get devastating comments and then have to do another working plus call and and so on uh I hope that it's not the case yes but um like if if if if we do a working group last call based on not having heard anything and the response during the working group last call is the same nothing um then will will incur delays so please read this early okay that's ahead um okay thanks a lot um so um are there any questions on the um from from anyone around on the topics that we've discussed so far um I think I have something but I'll have to to flash that out um on the on the on on the SEO conversion side of the edn but not what you for for discussion now um we'll be meeting in"
  },
  {
    "startTime": "00:56:01",
    "text": "Prague um we don't have to have an agenda now but I'd like to start collecting items at latest at the next meeting so um anything that goes into the work group last call will obviously earn itself at least some some some short some some short slot um but please file proposals for an agenda um in this in this block of the next uh meetings um of the next minut agenda or just by mail to the chairs um any other business um I have three um yeah I'm asking people for to do reviews I think I've already mentioned that uh thanks Marco for um helping a lot with the minutes and um just as it's related enough to plug it here um the the rust Comm the embedded rust Community is having something like a birthday a mixed birthday party um basically starting an hour ago um I'll post the link there might be interesting to a few because that's where I'll be heading it's essentially the announcement of that there is Ed of rust that will be suitable for certified systems and a lot of just being around any other business that's not for me um with that uh thanks uh thanks for being here thanks all thank you all for your contributions um there is a link now in the nope that's the wrong button in the chat and the minutes for anyone who would like to do um look look around the rust ecosystem uh thank you see you in at latest than two weeks and looking forward to reading you on from you on the mailing list bye thank you bye-bye"
  },
  {
    "startTime": "00:58:00",
    "text": "B"
  }
]
