[
  {
    "startTime": "00:00:37",
    "text": "This time, Talk I'll Hey. This meeting is covered by the IETF Notewell. Please make sure you've read it if you're gonna contribute And this covers what your rights, your privileges, your responsibilities are. Mostly your responsibility. Next slide. So the IETF, code of conduct please pay attention to this. Basically the short part of it is treat each other with respect. All the time. Can't And, if you're for you if for those of you who are, in the room, please make sure you've logged in to Medico. That is the blue sheets now. So please make sure you've done that. Remote participants, please, make sure you're audio and video are off unless you're talking, or chairing or presenting And, Please use a headset if there's a lot of noise around you. In an earlier meeting today, we heard of dog barking. So"
  },
  {
    "startTime": "00:02:00",
    "text": "A quick request from I guess, us. Please remember to wear your badges, anybody who's not there's a better couple over that we need Theritus, Okay. Thank you. And this is the agenda? Oh, I'm sorry. Document status, it says big at the top. We have, Messaging sitting with the, RFC editor. Message Shit. As shipped. That's right. Got a number. 4, 9475. Passport RCD is in the RC at her queue waiting on the the SIP corridor dock. To catch up, And, John, you have a question. Yeah. Sorry, John Peterson. Just getting ahead to 4916 update. Remind me, yeah, we are in Pubrat. For that, where we should be getting too public for that. Right? There is nothing blocking us Okay. Yeah. from requesting some questions. Wanna make sure I didn't do anything else on that that I, like, forgot. Hang on. John, this one thing is not waiting on you. It's one thing that's not waiting on me. Okay. So we're we've just finished the service provider OB and we sent that forward to the ISP And, We have a Where are with the with the, 4916 update. It's been waiting on the chairs to get around the mudbrick So we just need to finish the Okay. So when the Shepherd report is done, we will hit send on that one. And, we're gonna have some"
  },
  {
    "startTime": "00:04:00",
    "text": "candidates for adoption that we're gonna hear about mostly today and decide, whether they are ready for a call for an option. My guess is they are. We've already called short lived. We we've done shortly. Yes. That's that ends today. So I think we can color it up I've not seen an objection if anyone has an objection to short lived, please make sure it comes up today because at the end of the session, will adopt it if, if that is not the case. Alright. Next slide. Here's the agenda. It's fairly short. We have a 1 hour slot, so We're gonna talk about certificates, and we're gonna talk how stir and MLS might work together. Any bashes on that agenda? Okay. Then let's get started. Hello. I'm John. Welcome, everyone. The the few about few, We're still with us. On what I think we're beginning to see is maybe the tail end. The major things that we're going to be doing here. Of course, the incident I say that some new emergency and fire is going to go off when you end to do a lot of corrective work on things that We are not currently anticipating, but let's pretend for a moment that we're actually nearing something that might look like closure. And in fact, at the end of the session. You know, we do have some AOB time, which I suspect we will we might even wanna talk a little bit about kind of what we see as potential futures for this with, the few things for steel dealing with. Excuse me, John. Can you Can you move up on that, Mike, a little bit Okay. What I should do is elevated. Kinda in Hobbit orientation here."
  },
  {
    "startTime": "00:06:05",
    "text": "That'll probably help. Does that help? Awesome. Thank you. Thank you, Robert. So, yeah, we're gonna talk a bit about certificate freshness. This has been an a subject that has a lot of interest out there in the industry as this stuff gets ever more widely deployed and people are ever more concerned about how well this curdie really works? So next slide. Just to review, and if you've not been the last fifty times that I've discussed these topics at a microphone in the IETF, are, of course, a number of ways we can have a certificate to ascertain its freshness. This has been very widely studying There are protocols like OCSP that do this quite well. There are, of course, CRLs that you can subscribe to. There are various push mechanisms that push down to browsers and similar entities, this is a list of things that you should not consider fresh anymore. Our case is a little bit different. Because we've actually extended X509 with this new attribute, the TN auth list, which is where we store the data for a stir about telephone numbers or telephone network resources, And so you know, we have to do something a little bit different. We have some extensions that we need need to put in in order to make this work with some of the existing protocols, And this has led us to A couple of approaches. And this is one of these classic cases in the IETF. Where the more you look at these 2 approaches, the more similar their technical properties so we are. Which makes them nearly impossible to decide between. I love these. I love these, but Basically, the 2 that matter are using the online certificate status OCSP. Or issuing short lived certificates. And we're gonna talk a little bit about those real quick. Just as they were fresher, Okay. Yes. We we've got a lot of ways to do this, and that that's not great. There are fairly minor trade offs between them. You might argue that some work more out of the box than others."
  },
  {
    "startTime": "00:08:02",
    "text": "Definitely because we're extending o OCSP, we can't say that works entirely of the box, And, you know, shortly, it really does. So, I mean, again, the the differences between these, if you're not super familiar with certificate freshness, you know, approaches in the IETF, OCSP requires some kind of a dip typically, that is being performed by relying parties to ascertain that there's the certificate that they are going to rely on is still fresh. Kind of reach out to the CA and you get back, yeah, that's totally cool. And there is a thing called stapling. That can is widely used in TLS and so on. That lets you anticipate that someone is going to do that, and take what would be the OCSP response and simply build it into the communications you're sending in the first place. So that obviates the need for that round trip time. From the terminating side to ascertain this ticket is still fresh. I still say, you know, compared to short lived certs, which, again, are just normal certificates that look just like ordinary 8226, stir certificates. They just have a really short expiry, so you need to reissue them. And so consequently, you need to have probably some automated way like ACME. To make sure you're always getting a fresh one. That's like the the cost you pay for that. It's, difficult to narrow down to any single solution because I suspect their will be use cases for both. And this may breakdown where we wanna do it one way, for example, for, Ordinary shaken style certs that are issued to service letters for a long time, for an o c n, an operating company number rather than a telephone number. Versus, you know, certificates that as we call them commonly delegated certificates, they're just for a single telephone It may be that we wanna make those short lived, for example, and use OCSP with stapling for the other. And because of that, narrowing it down to any single solution, still seems premature."
  },
  {
    "startTime": "00:10:01",
    "text": "Is why we are talking and pushing still to approach Next slide. What's new? Well, you know, at the last minute and at great expense, early this morning, in fact, it started yesterday, but when it this morning, there's, in fact, a 07. Version of OCSP. The main thing we were blocking on in that document is that previously, we had kind of broken out, broken out baseline OCSP for most OCSP has staples into separate docs. We since recombine them. But when we recombine them, we realized we really needed, like, some examples that show you what an OCSP response with this extension looks like. And, you know, because that's ultimately what would go into the passport. The proposal around this is that there is a Staple, STPL element that we're adding to the passport payload, And this element contains effectively the entire OCSP staple within it. It's important that people who are implementers of this look at the examples that we've just added to get a sense of how big these are. They are a little bigger These staples are than, you know, an ordinary passport would be. And in environments where resources are constrained, that might be yet another factor that kind of weighs on whether we wanna do short lived or when We wanna do OCSP for this, but it's not too bad. Right, looking at it, like, if you I could imagine RCD stands as that we could put into passport that would e easily be longer, right, than what this staple looks like. But people should at least eyeball it and get a sense of that. I do have a couple of outstanding questions about this, and we can discuss these here in the room, One is really editorial, which is So I've just put in, like, the literal of the OCSP request in response into the document currently. Russ, who actually did a lot of this work at the great minute,"
  },
  {
    "startTime": "00:12:02",
    "text": "last minute and agreed expense. Russ actually provided also, full write down in decode of those. Thinking about this, I maybe we should put those in, like, an appendix. Right? You can have, like, an appendix a and an appendix b, and this will have, like, the full break down at those, but they're not, like, in the main body techs that you're gonna trip over. From my experience with implementers, they just want an example that they can then, like, slightly hack in order to make the things that they wanna do. And probably that information in the in the appendix will be helpful to those people. But, Yeah. At least we now have something that is a credible example of how to do this. We still have some things to fix, We wanna get this to be, ECDSA. Yeah. And, you know, we wanna make sure that we have the algorithms right on that. So opposed to having, like, just shop on in it, So I wouldn't say that it is perfect, but it is probably ready to go. I think and ready to go in a Murray ish direction. As a relatively, baked specification at this point. I had no new version of short lived this time because, last time we said we're gonna call for adoption, for it. And, that that was our last outstanding item. On that? If there are any further comments on it. I mean, things that could come up during this, or I I should say going to last call is far as I can tell, it's pretty much baked. And so I mean, there may be I I forget. Are there TBD stub sections still for, like, set cons or privacy cons or anything, but there may be a little that we still need to do on that. Erica Skorla. Thank you for talking instead of me briefly, What's that back? Yeah. So I sent some feedback. 5 minutes ago or 10 minutes ago. So now that you've, sure, ready and assimilated it on, I I think this is, largely ready to go I think it could be saying to be a little clear, the, a little clear on"
  },
  {
    "startTime": "00:14:03",
    "text": "what, if anything, and normally changing, I take what normally I take what normally changing to be like, you have to use X Five C in this project X Five View, And, which the x seems fine. It probably is all worth noting presumably this means that, that, passport generated this way will not work. With, with existing, online parties. Correct? Or may not work. I mean, so X Five C, that's true. That that will not work with the current implementations of this, or at least I'd be There may be some implementations that support X YC versus Xfi VU. And be clear what we're talking about here in the header of a password, traditionally we have this X5C feel are that designates the certificate that signed the passport and and I'm sorry, X Five View Field that designates that. Moving to an X Five C is a chain. Will allow us to have you know, all the parent certificates in the chain leading down to, for example, a delegate cert, be presented simultaneously at that URL. And so I'm not port, for that today, but we kinda need it. This to work because otherwise you're just gonna be doing more fetches and RTTs. And so That that does probably need to be better noted. The Read. Is the notion that you would concurrently put in the next five years so that if that's was unparseable. It would continue to work I mean, you know, we we'd be overloading what X Five View is then, I suspect, But, like, I guess we could put a next five view in, that just has a reference to the leaf surge. Right. And, like, have that be an okay, then you can go get the rest. It's just a question of, is that, like, efficient and Yeah. I I I guess, I mean, you know, you understand this this content is much better. I do. I'm just trying to understand creating a situation in which basically there's a resistance in it for using Jural Asserts because suddenly your cross parts are unparkable. And if OCSP is different in their respect,"
  },
  {
    "startTime": "00:16:03",
    "text": "then that obviously is an argument for a CSP and a generalist or again, I don't know. It maybe may forecast up crazy much easier or maybe nobody cares about this, but, like, seems worth understanding. I mean, the issue again with OCSP is it's not off the shelf because we have this extension, right, team? this Yeah. Yeah. Yeah. And so I think both of them are gonna acquire a little bit of bespoke work. For them to work And and so the consequences is is, I guess, I to understand though is, but the consequence then is that guess, what I'm trying customers generating with these new modalities if we don't function correctly with, with existing relying parties. But probably. Yeah. Yeah. Yeah. Probably. I mean, you know, somebody could have a perfectly good, like, you know, base JWS Library, Yeah. Yeah. Is perfectly well. So I I I think it may it may vary. But honestly, in this particular community of implementers, sends me pretty down to the, we just copied the extensions and, like, filter rather than fancy libraries for this. So mean, so and you expect this, but you expect the upgrade to be really fast at or or or or the current deployment of the decision of Lulu that's not gonna cost people to to return from doing it. Yeah. That that's my intuition. Thank you. Press. Yeah. I was just gonna briefly comment. X Five C is standard in JOTS and You know, it's literally what you would download. From the URL anyways. So I agree. It should be pretty trivial. I mean, we consider just overloading XIQ and saying, hey, we're and put you in there, like, you know, I believe some people check that out. And why we didn't include. they do that. Already. Is they have, like, the the root like, you know, cert there and this behind that X Five View. So it's actually you know, maybe that is a more expedient approach, but Here at the IETF, we try to get people to do things in standard way. And X Five C seems like the proper do that's due. That's due. That's due. That's due Any thoughts include, Alec or or or echo you back in queue. Say? And then not, like,"
  },
  {
    "startTime": "00:18:00",
    "text": "Go ahead. Alec. Alec. Ended up. How's it going, man? Doing well. How are you? Excellent. I I guess the there's nothing that would preclude someone from using X Five View As it is today with the URL in it, that points to the end entity and any intermediates you know, the chain, generally don't include the root. And then also including the password to X Five C. So, you know, Edge of adds extra bytes for the X Five U, but then if you have an implementation supports X Five C. It doesn't have to do a fetch. If you have an implementation that doesn't, then it's just round trip latency, it continues to function. Yeah. I mean, that that that may be the best approach frankly is just have both I'm willing to pay the the bits because they're they don't tend to be long. For that in the header. Okay. Yeah. Yeah. I think I mean, that Sounds like an easy way to move forward for existing implementations. And then back to the OCSP, I do have a question in in the in the text there's an example passport And that example passport, I think, is is Well, it's got an X Five you in it, for OCSP. And In that in that example, ends in a dots sir extension, is and which I I know is is what is in 80 to 20 6. Yes. Does does it make sense to to put a dots there. I I know it's that's what's in 8226, but it also says it's pem and, sir, is It's really kinda used for dirt. Or Yeah. Yeah, you're you're probably right. We should switch that to Pam. Okay. Yeah. And it's, yeah, it's a trade off. Consistent see with the 8226 or or not. But but but I do feel like that was a That should be changed. Yeah. We can Unless the intention is for Dur. Well, I mean, it, yeah, it got Dura's productively more efficient, right? But, like,"
  },
  {
    "startTime": "00:20:00",
    "text": "we could, we could punt this the same way. Right, and just say, give me I mean, because this is a more fundamental what do we expect is gonna be on the other end of these URLs, And I, I don't think we're actually terribly prescriptive about that in 8226. I think the are consistent with the But I'm not it I'm not sure there's, like, a must in 82 20 or something for using Jira. If it's Dur, It's in 52. I mean, I think the expectation is Shane. this is Yeah. Okay. If it's in 5280, yeah, I'm a little more worried about transgressing that than I am transgressing 8226. But, I mean, do you think rest would be cool for us to, like, offer both these options? Basically, and just just call it like, say, like, you could do either of these. out, For Can it be dirt if it's a chain? Yeah. I mean, the My Mike Russ. Sorry. 5288 says that each certificate needs to be due. I don't know about the wrapper that is a sequence of certificate. Whether that could be burr. Okay. Well, I'll I'll take an action item from this to actually look at 5280. And figure out what we can do here that does not transgress like, laws that actually matter. Which ones we do here do not. That, that's cool, Alex. Let's just, like, do, like, some or if you're if you've got it in front of you, feel free to look it but it we we should go with what's in 5280. I'll have to look. But I guess Can't be Dur as far as the actual like, it cannot be a binary response. Because because your the expectation is this is gonna be a chain. Right? Not a single cert. So it's courses. I don't know. I don't understand the last part of Alex's question. I mean, but, yeah, the the I think the question, is it"
  },
  {
    "startTime": "00:22:00",
    "text": "can you do a chain in Durks Yes. Yeah. I assume you must be able to. Yes. It seems so significant. It's defined in I don't remember where, but it's not that not. Okay. So now Russ has an action to find the place where it defines a chain of certificates verder that we can, that that is on equal standing with 5280. Should figure out. Has that sound valid? Yeah. If there's a way to do that, I mean, I don't know what the delimiter is. I've never Okay. Yeah. seen it. Okay. Echo are you back in queue? I I am. Guys I'm not quite following this Dura thing. I mean, obviously, there is a way to there I mean, there's just an encoding like JSON obviously, like, 1 in Creek, during including a a set of certificates, it's not clear to me. The question at hand is whether it will be consumable by any fever. I mean, is there anything wrong with anything you specified in this specification? I said that may not be actually not make consumable by receivers of, you know, other things. So, I mean, the the a simple empirical question of, like, what of like, you know, as you note, you know, the examples you provide the examples provided in the original specs to not specify how to do how do you how to concurrently, you know, how to ride in line certificates. And so And so the question is really, anything you can do that, like, will, like, cause is there most most most recipients to process the certificates solely on the room because they just happen to use some stock, you know, job library or something. Right? But you can but I doubt any of them to, unless a once a Langan Joss that says to use it, a diverse sequence of certificates that's not gonna Yeah. Yeah. I mean, don't think there's such work yet, like, pem for this to work as well. Right? I'm sure. Because you know, most of them are assuming if there's anything else other than, like, the"
  },
  {
    "startTime": "00:24:01",
    "text": "the entities are in there. It's like the root cert. If there's anything between you or then it's gonna be messed up. So gonna have to do work. On their implementations to get that up to speed. So whether that work should be done for PEM or dear or both I think is you know, It it's probably about the same. Yeah. I I don't think you I I I I PEM is Durban64 encoded with a BN cert men cert. Yeah. And so you have a a delimiter of what here's the cert and then here's the second cert. Yeah. If if you're just taking the binary data, right, there without base 64 encoding it. No wrappers around it, and he just slammed 2 together. I think what you've just created is an invalid sequence of bits that would not validate for dirt? Because how would it how would did that mean, I I know that there's a length bit at the beginning, but no one's you can't just slam 2 their certs in one file next to each other. I mean, as far as the one that I mean, I like, again, like, saying guess, I guess, I guess, dirt, So, so, you know, you need a structure of this around them, that tells you that tells you what it's supposed to be. Otherwise, it is, in fact, not really sensible encoding. But, like, that's called, like, extra benign sequence or set. And then effectively, it is things that can get hidden inside the Yeah. Yeah. I'm I'm sure there must be something that does that. And Russ has already promised I will find it. You will find us that thing. And he But but again, like, you know, unless people are expecting that in in in in I see doesn't or or in some sort of existing, like, on JBS payload, those those are no good because, like, it just makes me something which no one's no one wants. No. Yeah. Chris, did you have something? Oh, I guess, Alec, you're next. Sorry. Sorry. Okay. Chris. So in"
  },
  {
    "startTime": "00:26:00",
    "text": "7515. For X5u, it does say The identified resource must provide a representation of ticket or certificate chain that conforms to 5280 in Pemmoncoded form. Yep. Yep. I mean And I believe most people are using them. So, so, Yeah. I mean, but just to be clear, again, that just means basically for case. Right? The so as as I read this text, what it says is basically, it's an array of strings and each string is significant. So, actually, this is exactly what you want the same people actually do Yeah. This is section 4.1.6. Right. The certificate the certificate of your change represented JSON array of certificate value strings. Right. For that That is the same. Right? Like, they're with base 64 encoding is essentially Yeah. So this is this is this is the real base issue. I mean, mean, I mean, just in this case, the storage means, like, the pep just means that, like, they certificate as written by the CA. I mean, like, let let us let us not get into Ruth can tell you, let's not get into burr versus during this case. It is the thing that I think for this purpose, that that that that that Okay. Yeah. Corey DigiCert. from Yeah, I'm just wondering I think Would asserts only CMS be a way to do that, That's more overhead than we need here. Okay. Right. I mean, it's it's it's explicitly in 52.80. That's why I thought of mentioned Yeah. Yeah. Yeah. Okay. Yeah. You gotta carry the content type. Alright. So what we're taking away with from this is I mean, I'm kinda persuaded by the text that Chris was just pointing to. About you know,"
  },
  {
    "startTime": "00:28:00",
    "text": "that's being defined as up to a chain of Pam for this as well. And so maybe we we honestly don't even need x5c, To do this, no. That wasn't what I was implying. I think We wanna support both. It's just both Well, it's funny. The spec refers to X5u as Ken. It's a URL to a pen Yes. While And the next five c is just that there encoded thing Base 64 encoded. As a in a JSON object. So, yes, I think I think we still want both. It's just where we're clarifying. format was it? The Yeah. Yeah. And another one of the things where what and the differences are so slight that we sit here and argue about it for half an hour. Yeah. 1 1 more after? Just to like, be clear, X Five C was to so we didn't do an extra dip. Right? Yes. It it was precisely. For Okay. Well, I think we kind of have an answer. You know, we can If we just say We're gonna stick with Pam Right. And change the examples to reflect that. Keep X Five C, but have backwards compatible x5u. And that that's what I heard. From, aggregate, I think, of what we've been discussing here, Can the minutes Minator. Is that Simon today? That's same one today. Simon, know, you're you're like a sing Like, remind me next time we're hanging out to by you librations. Did did did you did you get that, Simon? So it was a little rambling. I think so. Thanks. Yep. Okay. Okay. Perfect. Perfect. So next slide."
  },
  {
    "startTime": "00:30:03",
    "text": "So, yeah, with, I guess we're gonna do a little bit more tweaking here or just to get progressive, to be honest, And I think on on this slide, we can say, please go ahead and, Upload a work group version at your convenience. Oh, of short lived. Yeah. Yeah. Yeah. I'm I'm more checking about I'm Chad, but let me go in the wrong bullet. Yeah. I mean, you know, should Adobe SP go to Murray is the I think the first question I I should say to people, have people looked at this document, this OCSB document? I see a people who have, but you know, not not a ton. Obviously, there's a number of people who are really interested in this. And this is something that is getting traction in other forums. And so, you know, I think we need story for this to come out sooner than later. So my opinion would be that we should advance it. If we think we're, roughly comfortable with where the text is today. Anybody not comfortable? With the tax that is in The document I only submitted 3 hours ago. So all you've all read it and completely assimilated, like, everything I said in it by now. Right. We are gonna do one more spin, I think. Just to make sure we reflect proper algorithms to make sure that ECC PSA is actually being used in this. And, like, But with that, my opinion would be this is good to go. And then for short lived, This document has existed, like, forever as an independent some document and we keep talking about adopting it and we we haven't. But since the call for adoption concludes, today. Right now, in this meeting, That call for adoption is concluded. Is there anyone in here? We have jets. To us Making this a working group item, and let's be honest, advancing it pretty quickly. Because it's pretty baked from the amount of time it is spent being a Peterson individual."
  },
  {
    "startTime": "00:32:03",
    "text": "I see no objections in this room. It is adopted It is adopted. So there will be a new draft itfstershort lived. That will come out shortly. And with that, I'm done with this. And I think I switched with Chris now. Yep. Okay. K. There we gotta Alright. So we do have a new thing that, we're bringing to the table here I hope everybody thinks this is sort of a clear win. We've been discussing this in various forms informally but I thought it would be a good idea to bring this forward. Go to the next slide, please. So I'm not gonna go totally deep into, certificate transparency. But at least for those that aren't too familiar with it. It's, something that's already widely adopted. In the web and TLS world. To protect against domain certificate misissuance. RFC 9162 is B2 of certificate transparency. So, it's, it's it's fairly getting much more mature. That's that's we had because of experience, operational experience. The basic premise is that when a CA is use a certificate"
  },
  {
    "startTime": "00:34:01",
    "text": "you put that on a publicly monitored monicable log and in that sense, you have a way that monitors which is what they call it in the draft can be checking to see is there any certificates that are being issued that shouldn't be for example, somebody wants to create a certificate that google.com. And they really shouldn't be doing that. It would be immediately verifiable based on the publicly monitored log. It uses Merkel trees, to append only it's got all those characteristics that seem to be very popular these days. And once you submit that certificate to the log, you get a receipt. In in the the document is called assigned certificate time stamp, SCT, that then gets attached to the certificate that, is published. And then, can we used as, the mechanism that the relying party can tell Oh, yes. This has been verified on a log. And, is being monitored. Hopefully, I did the 3 minute and to satisfy everyone. But, certainly ask any questions if you You need to. Next page. I guess Simon has a question. Simon? Apologies if you're going to come to this shortly, but, what does this offer that, trusted T a list doesn't How does this, spot behaviors that aren't we don't trust the CA List."
  },
  {
    "startTime": "00:36:03",
    "text": "Yeah. You're referring to the trusted root certificate list. That the PA hosts in and at least they're shaking implementations. That is purely just the list of root certificates that are trusted this is much more comprehensive. This is a a public log of every certificate the, know, and and entity you full certificate so that it's verifiable. I'll get into the reasons why that is interesting. Or stir specifically? But did that answer your question, Simon? I'm happy to wait for the further explanation to decide. Okay. Sure. So if you read the the specification certificate is meant to be an extensible mechanism. It's not just built for domains or TLS. Over. Or any of those things. So, thought it would be a great idea to, take advantage of that. And, You know, and it doesn't even have to be about certificates specific e specifically. It can be anything around keys or even other metadata or or other things. So it's sort of an interesting public auditing mechanism more generally. So this specific document, I call it II certificate transparency, is really to extend and use certificate transparency to cover stir certs, and delegate certs. I think delegate certs has a lot of, Great properties in terms of certificate transparency. And you know, in terms of, like, For bad CAS. Trying to produce"
  },
  {
    "startTime": "00:38:01",
    "text": "Telephone number specific certificates. There is probably a case for SPC level certificates as well. Although, I don't know. If there's really as much of an attack vector for spoofing certificate or service provider level search, but maybe somebody could prove me wrong on that. But I think we should enable both in the in the in the document. In in either case. So telephone numbers and their management and assignment you know, follows a you know, similar characteristics of how domains are managed. So I think this just sort of fits in really well. For 2 telephone numbers specifically are unique. As we know. The interested party that would want to monitor their the the their own telephone numbers to make sure they're aware of all the certificates being produced is sort of an obvious win, I think, for the ecosystem. Yeah. Go to the next slide and Okay. Can you go back one Oh, for you. I wanna make a comment. Hey, Rory Steele. I just wanna say on the telephone number, like, self monitoring, comment you might wanna take a look at the key trends, architecture document in key trends, they're also looking at, transparency logs that include cryptographic keys. In this case, It's not limited just to certificate expressions, and they have use cases around telephony, key binding and and contact monitoring, you might be able to find some useful text in there,"
  },
  {
    "startTime": "00:40:01",
    "text": "be informed by I I can provide the link in the it. chat. Sounds good. Yeah. Appreciate that. I think there is probably other areas beyond just, cert, search stir certificates. So I I agree with that I did note, at the bottom there that I sort of followed the certificate transparency you know, RFC 9162. And just sort of pointed out the deltas, that are specific to stir certificates. One thing To note Specifically, is that I think we sort of simplify we can simplify things because with TLS. Yeah. You deal with TLS clients and TLS servers that have specific transactional things. There's one flaw so so, basically, the current certificate transparency document follows 3 basic patterns. I think all we need is one of them. The pre certificate mechanism. So, basically, when a CA creates a cert, they submit a pre certificate, they get back the receipt, and they injected into the certificate So I wanted to note that specifically because that's probably of the more important decisions to make for this document, whether we need any other mechanisms. Or whether we can settle on on that one. One way of going. Or are you still in queue or Okay. Eric? Yeah. So so a few points. First, as a predicate matter, no one does anyone you want 6962. 9162 was published, but like it is not implemented by anybody meaningful as far as I can tell. That is regrettable Sarah Fair has been never lost the one we find ourselves I'm sorry. What what is it implemented? what you I I I missed said. 9162."
  },
  {
    "startTime": "00:42:00",
    "text": "CTV 2. Everyone does the 80 1. Is Yes. Yes. That's another point to bring up, and I I I wanted to get some advice on that, whether it makes sense to go to V2 versus V1. It does not Okay. I mean, just telling you, no, well, does it? So you're gonna be a sad person. Even though it's even though it's been obsolete, I guess, that that was I I I I I I it's gonna come as a you perhaps that the ITS, instructions do not always that always have the first fit one might like. I think I think it's probably like you know, Like, we're fixing the throttle we're trying to address here, you know, the the the threat model of, super transparency on the web, right, is that CA's have universal jurisdiction, which is to say that can sign for any domain name that pleases. And and the it seems to me that the the the that one difficulty here is that the corresponding concept in SIR is the customer. And, and and then my efficiency with the detect in many cases is the CA a CA, which either, which has a very large scope she's sending for press reports, which should not, which should not be signing for. And, that seems like it's actually quite difficult to to assess. In the sense that, like, that that the ZAs like, well, I I I'm like, I didn't make this phone call, put the CAS as I did. I I appreciate that. I guess hers hasn't had a role play here, but I guess I guess, let's let's imagine that we had a complete CT for every for every X 509 operation in the system. What level of assurance that I provide about CA malfeasance. Also I think potentially, unfortunately, plays in this discussion of OCSP. Versus shortlist certs in the sense that effectively or no effectively when you have a, I, you know, a server, the very wide, the scope that is then narrowed by UCC."
  },
  {
    "startTime": "00:44:02",
    "text": "It's the OCS piece thing that is relevant more than the, more than the search Yeah. I think the the Because delegate certs are created based on the the assumption that a service provider or a rest board has the ability to delegate those number resources and create, you know, via subordinate certificate authority, a certificate, there is opportunity for potential, you know, that I'm gonna create a certificate that I may not be authorized or have authority over Now there is some scenarios, and I'm I know John's getting up here. There is scenarios where you may want that characteristic. But you you as a number holder, should know you know, who is creating certificates on the behalf of your telephone number, So you wanted to explicitly monitor those things if possible. So it's really sort of coming full circle in terms of how you trust that the delegates certificates that are that are out in, in the ecosystem are are valid in terms of, telephone number specific certificates Sure. I guess we just I threat model, is that a feel like doing back the which anyone has who certificate, which has a large enough scope to contain my phone number as a threat to my identity, which is part of the premise of key of KT in the 1st place. But me, I'll I'll step back and let and then John Alec Alec? Well, I guess just to maybe clarify the, right, the point is if if a CA were to issue a cert Whether it be an SPC cert or a delegate cert with telephone number in it to someone other than"
  },
  {
    "startTime": "00:46:04",
    "text": "who that should belong to. So, you know, could throw an example of AT and T you know, get to serve from particular CAS and then someone else that asks the CA for a cert with AT and T's surge shutter code in it, and they give it to them, whether it'd be, you know, who have, for whatever reason, AT and T has a mechanism of detecting that. If it's a delegate cert and someone issues a delegate cert with my phone number in it, I have a way of detecting that by monitoring the logs. I don't know that it you know, it But before you ever get into passports and actually signing anything with it kind of does its job just in the issuance of the search, just like how people monitor their domains. I monitor my domain, and I get an email anytime A cert is issued my domain in it. That I know. Did I actually request that? Yeah. Yeah. I did. Okay. That's fine. And if someone else requests it, then they wouldn't. We I would do the exact same thing my phone number and carriers would do the same thing. For their OCNs or their service better codes. Right. Jump. Yeah. John Peterson. So I think maybe dovetailing a bit on what Ecker said. I mean, the, so first of all, I like this work. We should definitely do something on these not here to say anything, to the country of that. But, you know, the the thing that's interesting to me, the way the draft cast this problem today. It's really It relies heavily on the certification authorities themselves. Being respondents to add new certificates to the ledger. And it's precisely in the cases, where something Bath might be going on that those people are not incented to add that to the ledger. Right? So if there is a rogue CA, we're relying on them to be the people that are reporting, Like, I just created a new CA, and I want to be entered in the ecosystem. Like, unless you mandate that every CA does this for every cert they issue. But even if you do, If these are bad actors who are misbehaving anyway, won't they just skip that one?"
  },
  {
    "startTime": "00:48:01",
    "text": "And then Wow. That that's so that's why I think, and I've set this point to Chris earlier, the the more interesting way to do this is the Observatory based way. Based on the way the old SSL Observatory work, right, where basically, somebody is keeping track of for the that are taking place in that instance, it was in the web context, but imagine it's for sure shaken, These are the certificates that are actually practically being used. By the entities that are authoritative for this. And if somebody starts using a new cert, who's, you know, you you support their root in whatever your CAP forum key store equivalent is and start shaking, right, like, that you detect that by the fact that there is an anomaly from the usage of that cert, versus the unexpired version that AT and T, for example, is using to sign all of other calls. What what I don't think this threat model is that articulates gets will will actually help with that much is the case where there's a rogue guy who issues a rogue cert, because why would that guy if he's already rogue being incented to actually put that into Actually, there's the assumption that the relying party will it, and we'll have transparency it it will know that that that was placed on the log or not. Based on the SEP receipt that comes with the certificate. So, again, if you mandate that every relying party needs to have an up gate list from every CA. Of those ledgers at all times, and they only are accepting calls from those, I can kind of understand how that would work. But is that because that's not how trust works and it's for taking today. Trust and Sureshikin today works on I support this root CA? You know, yes or no. Oh, oh, All our relying party, is is knowing is that the CA put it on a trusted log If nobody's monitoring that log, then then maybe that's one issue, but I think you can set it up for me. My point. It's that the bad app I can explain it. Oh, okay. Alec, can you help me out? Yeah. So"
  },
  {
    "startTime": "00:50:00",
    "text": "When the CA issues assert, they get a signed object from the log. That's that's saying the log saying I received this request to put the cert on the log. And they put that signed object into the cert And then when the relaying party gets the cert, they verify that signed object. So the relaying parties have the public keys hold on, of of the logs. In it pre stored. They don't actually have to go get the logs at all ever. They never go get the logs. And because it's question I'm questioning step so step 1 is that, the log gets the cert. And I'm saying, if this guy is Mister Kate issuing bad service. I know. I know. I think all we're saying No. It there's I hadn't gotten there yet. There's incentive to put the to put your certificate on the log so that it's trusted by the relying parties that are looking per receipt, I think so. Piece you're missing, John, is that signed object comes back from the log. And then you don't trust any certificates that don't have such an option. Okay. So you have fundamental change the way relying parties operate today. Because relying parties do not do this today. Relying party, you say, if this CA is you know, of the CAs that I trust, I trust that. one If your argument is, yes, you're going to completely change how relying parties choose to trust certificates, I understand what you're saying, Okay. Completely change. I think that's a little strong, but looking for the receiving a new step and a new actor that is mandatory. Janitorians. Right? But, again, I I think this is mostly relevant for a delegate certificates where we don't have as well established practices today. So Okay. No. That that's fair. Yeah. Time check. We have 9 minutes left and through three slides and another draft. So wanna rush us through this necessarily, at don't the I but, Eric, did you have another comment? Yeah. so So I'm sorry to keep on this, but I think it really is kind of important, which is"
  },
  {
    "startTime": "00:52:00",
    "text": "that that that that Like, the the correspondent object in this system to to The certificate is in many ways the passport, not certificate itself. If the passport opens a phone call to or the SMS or whatever to the extremely large scope that the CA is authorized sign. And and the concern and so, like, yes, one concern on what I have is that Timo is signed that I have a phone number with AT and T and Timo is, has issued a certificate, but a related concern. It's just that, like, I have a phone over AT and T and T Mo was signing phone calls for me. And and as far as I can tell, this isn't doing anything about The passport signing and the use of the certificate, I I think our, to sort of an orthogonal thing. So I'm not following ways. The purpose of CT is to detect miss it. I mean, I mean, my point is, is it, like, the way you think about this is it's like a it's like verifying a certificate for dot com. Actually, it's it's alright. It's like it's like you issued the cloudflushed to figure out for dotcom. And you're like, well, we're gonna, like, and so like, but that's that's it. And and so the and then now you can detect is cloudfly inappropriate is generating TLS connections fit.com. On it. But but your certificate scope is, you know, think of that you know, google.com as your telephone number, Telephone number is your scope. That telephone number certificate is used to sign a passport that must have an originating number that is that same telephone number. Right. Because I understand the situation, AT and T certificate does not say it's not have my exact number. It has extremely wide scope. And, minimally, including people, who, like, what, like, like, it presentation could be already making customers. Right? Yeah. Let me, let me do the even worse version of this of what you're gonna Akerage might make your core point here clearer. Which is that, like,"
  },
  {
    "startTime": "00:54:00",
    "text": "Let's face it. Are a lot of people who feel eligible to be able to sign for originating numbers that do not own those numbers. The stair shaking ecosystem today. And the problem is, there will be multiple entities who legitimately assert, say, a delegate cert. For a number because they have means to originate it. Right? As long as the if the legitimate number holder is monitoring the logs and seeing that that is whether that is being So in this instance, that's the enterprise, or is that the carrier? Who is the legitimate? That's that's what I'm posing on. I weak. I think ownership is really Is why we have this whole O CN thing to begin with. And that makes this actually super complicated under the hood but I know I know we wanna get off this. So, I up, and then think, yeah, Ecker, you're mean, chair chair in rep, please. We're running really short on time. Can we redirect the discussion about what should the next steps of this draft be? And and and get away from the technical Okay. Great. Yeah. Yeah. I I think this really needs to be a block curve in the threat model. Of what attacks they're trying to frame where that does not prevent. And until we have that, I think we probably should not adopt this document. Long mechanics here, but the question is, like, like, well, you need a threat analysis. Sure. So I support continuing work on this. Let's continue to work on it on the list and and elsewhere. But it's not ready for adoption. I don't think so. I wouldn't say quite yet. Yeah. Okay. Thank you for your feedback. Yeah, I I think it's good too for all. 5 to understand that. I have 5 bins for MLS. So given that, let's go to the next slide. We're gonna go through this real quick. A draft exists that is talking about the interaction of STIRR for MLS. We need to, as we look at MOS, especially in the Mimi contact, for those of you who also attend the mini working group."
  },
  {
    "startTime": "00:56:00",
    "text": "Start thinking about how it is that credentials associated with STIRR, could be used to prove identities in messaging systems. Because we're doing all this fancy messaging interoperability, and it turns out that telephone numbers are often identities people want to be able to express. In these messaging systems, those not familiar with Mimi overall and what motivated this? There's a MeetMe group. I'll be talking there for, like, an hour tomorrow. About, like, some of the things related to this, Another important piece of that though is that Mimi is largely predicated on the use of message layer security. Which already has ways to plug in xfonites 5 unknown certificates, etcetera. Next slide. So basically what our document does, it takes 2 approaches at the moment, which just talks about reusing stir shirts effectively. To be certs that you could use to assert identities and similar things within MLS. I'm just gonna go to the next slide because We only have 2 seconds. The other approach we've considered is actually using passport. Instead of certificates. As the credentials that you use in MLS. And there are some attractive components of this, which include the ability potentially to have RCD, or other kinds of rich data, then becomes associated with the user who is identity is being asserted in any messaging system. Not just getting, oh, this guy, this guy's telephone number, you're getting a signed and cool assurance about lots of other richer data about percent Next slide. Thing I did wanna say is there is a draft in Mimi that is called the Mimi identity draft. Which talks a great deal about, how you this would work for services that have what we call a Mimi's service specific identifiers. And this would be, kinds of identifiers that are internal to a service, not like telephone numbers, which are so decoupled from these services, every kind of binds telephone numbers to these OTT services, really have no association. With the carrier who owns it and things like that. And so have a good story about how to do this they for service specific identity identifiers, but for these service independent identifiers, like telephone numbers, it gets a little hairy."
  },
  {
    "startTime": "00:58:03",
    "text": "And so I think there's definitely more coordination that needs to be done and more integration what they're looking at in Mimi before we really understand what the task is here. And finally, I think this goes beyond actually getting the, you know, identity you would assert in interoperable messaging between providers correct when people want to use a telephone number as such an identifier but it also relates to discovery which is a really interesting open problem in Mimi. Question of, okay, if we're gonna have interoperable messaging why do I trust? That this particular messaging service provider is a good route for that telephone number. And there is a little draft I wrote that I don't really advertise the existence of at all because it's a straw man that's called draft Peterson Mimi ID Proger. Actually incorporates some of the early work we did with like Acme for doing, telephone number based proof of possession checks. But has a more interesting spin on that that is kind of specific to the Mimi use case. That might, in turn, have some cool things to do with with with Mimi as well. Ecker. Oh, are you ghosted in the queueacker? Okay. It's ghosted in the queue, next slide because we are down to it. One So, basically, what I'm saying is this is too early for adoption. Much like the last thing we discussed, there's more work that needs to be done in Mimi that's gonna shake out from that. And hopefully some of that will get some better traction on this week. Maybe a very difficult problem, though. And I think we wanna get all the I's dot ed and t's crossed on this before we answer with the right ways to plug that into With that, I'm done. Okay. At this point, the agenda has been exhausted. And there's no time for any other business. So"
  },
  {
    "startTime": "01:00:00",
    "text": "Thank you very much for joining. So I think the any other business we're not having is that, John earlier brought up the question of of what's the future of the working group and what what the you know, if we're on the long tail to shut down, So that's the conversation we will be having. And perhaps if you have opinions, bring it to the list, but please Yeah. We still had a couple things here that we need to get get to get done, but, think we we see the end of the receive light at the end of the tunnel. I finally got you Tuesday just in time to close. That. Thank you all. Have a good evening. Definitely closed yet."
  }
]
