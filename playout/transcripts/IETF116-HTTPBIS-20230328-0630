[
  {
    "startTime": "00:00:14",
    "text": "Okay. It's three thirty, but people still seem to be dr in from the Copious spread that's out there. I will give it maybe just one more minute. Yeah. There are Oh, interesting. Okay. Thank you. Maybe two minutes then we'll see. While while you wait, please take the time to check in as it were with the funky tool? As I commented earlier, I use Zoom about eight times a day and I use this twice a year. So a little rusty. Yes. Yes. I was just thinking about that. Who would like to be our favorite person. So we'd like to get a note taker if someone like to do that. And the best thing about taking notes today is that you won't have to do it on Friday, which is a longer session. Ned. Got it. Thank you. Thank you so much. You're awesome. There are still heroes."
  },
  {
    "startTime": "00:02:10",
    "text": "Yeah. I'm not concerned today. You wanna do One more minute. Who am I? Alright. We'll get started in just a moment. You have to say stuff. Right. Register to. Alright. Hello, everyone. Welcome to Http bus. At One sixteen, we're having two meetings this time. So this our first session. Our second session will be on Friday morning, This is the shorter of the two. So first, as with every other session, we do have our note well. These are the terms under which you participate."
  },
  {
    "startTime": "00:04:01",
    "text": "In the Idea, please familiarize yourself with this if you have not already. And just a couple other you know, brief notes again, if you haven't already checked in to the Qr code or join, please do that. That's how we keep track who's in the room so we can make sure we have the correct size room in the future. We do have our masking policies, so please keep your mask on if you're were not actively eating our drinking during the session, Say a couple of people with that also. So please get that on if you can. If you're speaking at the mic, you don't need to do that. And anything else administrative, we do have a note taker of thank knit. You pull up the agenda? You mean or you oh you could you're sharing your screen. Alright. So today on our agenda, we're gonna get updates on some of our adopted working group items on the cookies draft, on our Dns aliases proxy status. Header and un prompted authentication which was newly adopted. We've also had a request to agenda bash in some time to talk about message message signatures. That's something that has already passed through the working group, but if it has received some comments during last call, that are gonna lead to some changes that we wanna get update on the status there. Is there any other agenda bashing today or does this look good to people? Alright. Let's get started. So let's actually start with the quick discussion on signatures and how we're moving forward there? Just"
  },
  {
    "startTime": "00:06:03",
    "text": "Alright. No slides because this conversation just happened a few minutes ago. So as you may have seen on the list, there's been some discussion about how signatures are can be applied different use cases and things like that and particularly some advice that we had previously been given been giving people in some of the examples around signing the value of another signature. As it turns out, that is not a sizable in for some very fancy math reasons. But I've been able to have a really productive conversation with the researcher that brought this to our attention and we believe we've got a solid path forward about how to change the narrative of the examples. In both of the cases where we were previously signing a signature in the example as it turns out, both of the sections where that occurred. Neither of them were actually about signing a signature first one was about signing components of a request when you're sending a signed response So we can do that without even talking about a request signature for the main example. And the second example is signing a a reverse proxy signing a message on its way through. So adding multiple signatures adding a signature to an existing sign message. We can show both of these without showing without resort to this whole composed signature thing and the problems that that actually can cause in practice. So I'll be updating the examples. There's gonna be on that. I will drop a note to the list when that P r is ready. I've already started working on it So hopefully, that'll be available Today, if I'm lucky, but probably by next week, And Dennis has already offered to help sort of"
  },
  {
    "startTime": "00:08:02",
    "text": "Fort Smith, the narrative around that so that we are getting people the right advice about some of the sharp edges are around here. The last really remaining hit is that there's a a couple of place on signatures is that there are a couple of places where we need to be probably a bit more specific about encoding and getting Oc hats out of different pieces. And we're pretty sure that we've got ways to do that. This might technically require some norma changes but... This is more sort of clarification of intent. So I don't think that any of these changes would warrant dropping it back to working group last call. Obviously, the chairs are gonna review those changes and and make that and make that determination, but I don't think anything that we're doing is is going to require sort of reg recap consensus around this because it's it's it's really... Most of what's going on here is pointing out the sharp bits that are not gonna go away. Thanks, Justin. Yeah, I think from my standpoint, what I wanna see is we'll have the P r. People have a look at them. We'll have a new draft. We'll let that sit out there for a few days to make sure that everyone's reasonably happy, but we won't have a formal working group last call or our Of last call. Unless we or or the Adc c changes that that we think you know, require that. Right Of course. That absolutely makes sense. Yeah. Or or if there's, of course, contentious things gonna. Right. Yeah. Julian? Do you want? Yeah. And hello morning. I I mostly agree with that I'm a bit concerned about the statement that this is not the longer have changed as the verification because it's absolutely is a normal fifty change. I that's not what I said."
  },
  {
    "startTime": "00:10:00",
    "text": "So I think I will be yeah. I I believe it is a norma change but it is not functional change for anything that people are doing. It is breaking correcting the norma language. Yeah. Right. So somebody will probably Yep. have to change an implementation because needed assumption on the wrong side. I probably will. And but you know, this is this is the time to to fix those bits. Any questions, any comments? You on that? Sounds good. Alright. Thanks. Thank you, Justin. Thanks for your work on this. And bell as well. Right. So next up is cookies. I believe Steven was going to be not remote. Fantastic. Just a reminder for folks who came in later, you do need to be wearing a mask in unless you're actively eating or drinking? We don't... We don't have exceptions to that. So please make sure you're wearing a mask. I I got right. Right. Perfect. Hello, everyone. I'm Steven Bin from Google and I'm one of the cookies editors. I'm also gonna start up by apologizing my allergies are acting up. So if I have to take a break to cough. That's why. All alright. Six two six five bi. One of the longer lived standards continues to charge on a little bit longer. Next slide, please? These are all of the changes that went into the dash eleven draft that we published a few months ago. I'll just leave these on screen for a few moments. And if anybody has any questions, they can ask me at the end. Two three. Next slide, please"
  },
  {
    "startTime": "00:12:06",
    "text": "Alright. First off, there's a typo on this slide. There is no dash twelve draft. That was supposed to be now, that was supposed to say something else. So these are this is the change that we'll be going into the up coming dash twelve draft. As for this change, it's one that I'm somewhat excited for. We've had some issues in the past with the cookie spec in that it actually describes two sets of requirements, one four servers that generate cookies and one for user agents that consume them and echo them back to the servers. And we've seen problems where implement will accidentally choose the wrong session and then find that oops I'm broken and don't accept the correct cookies. So this had some hopefully playing English explanations for which section applies to you depending on what you're doing. Next slide, please. Alright. These are all of the open issues in scope. We've got about five I'll get back to same site cookies and reg redirects, because I I have some some more to talk about, but the remaining issues are internal white space and cookie names and values. So a change went in recently now, eight months ago. Is that still recent? Where There was an attempt to clarify which control characters were were not allowed cookies and h tabs were somewhat unintentionally excluded. A later change put them back in. But it turns out that the Chrome, Firefox and Safari, all treat h tabs internally or differently. And internal here means that in the middle of some non white space characters. So you have a H s b, that would be an internal h sub. Chrome just allows them entirely. I think Firefox allows them in cookie names only and Safari allows them and browsers there. both. So there's no compatibility between the major"
  },
  {
    "startTime": "00:14:01",
    "text": "Having looked into it a little bit. I posted response saying that I have a slight inclination to dis allowing internal h considering that they're not compatible as is. But I'm very interested in any feedback that people wanna provide here. The remaining changes are mostly editorial. There's going to be There's an issue to add a summary of all the changes from six two six five. I'll do that once everything else is closed. And then there's a couple things that changed in the Html spec around browser context. So there's an open p to fix that. And then there's also an open P r to define a term top level navigation, which we use, but never actually defined Let's see. Once all these open issues are closed. I think six two six five this will be ready for working group group last call. Coming back to same site cookies and redirects. This issue is a little bit of context. So previously on same site if you navigated, across the redirect chain. We only considered the the very first ini and the final landing site completely skipping everything in between. That was a problem and it was fixed in the spec. We tried we Chrome, tried fixing it in the browser. Turned it on and almost immediately got complaints from websites that we are breaking their workflow. Firefox echoed similar problems. So I'm looking into how we can fix this without breaking these these sites. I added some metrics recently, but they weren't as useful as I hoped. Turns out it's really difficult to know. Whether our missing cookie isn't important or not. So if anybody is aware of any specific examples of breakage in this context. I'm very interested. Next slide, please? You're fine. Good. We got that. Alright."
  },
  {
    "startTime": "00:16:01",
    "text": "Next slide? It takes going it's gone Okay. Not to rush you. Alright. So we've already got work lined up for the next revision of the cook spec. I won't go into too much detail here, but there's two major pieces of work that sort of waiting on on us to get sixty six five this out the door. One of which is partition cookies, cookies having independent partition state, also known as chips. As well as the cookie spec layering for anyone familiar with the Cookie spec layering. Right now, the cookie spec is touches a lot of different aspects that are covered by other specs and it's pretty hand waving on it. So we wanna dis discontinue it from other specs let them do what they're good at and cookies will handle cookies. That's it for me. Are there any questions? Any questions, please get in the queue. Alright. Sounds good. So guess timeline we're thinking here these updates. The big question Mark here is how same site redirect change gets solved or don't get solved. Mh. At minimum I'm thinking a quarter. K. So hopefully, not too much longer. So by nine t f, hopefully. Fingers here. New sailing. Yeah. crossed gonna be we're gonna be done Ready to go out the door. Looking forward to that. Six years later, we all are. Yep. Thank you. Thanks, everyone. Alright So next up, we've got Tommy. With the Next alias proxy status draft, which we adopted relatively recently still? No. Is this the"
  },
  {
    "startTime": "00:18:01",
    "text": "first time out. Possibly. Alright. Hello everyone. Is an interesting medical thing where you can't be on your phone and a computer at the same time. And so I can't join... I can't share my slides for my phone without kicking myself out and then I can't approve myself. To show the slides. So Here's my remote control. Alright. So this is a very small little drop that we adopted recently for adding a extra proxy status parameter specifically about next hop aliases. So I'm gonna start with just some recap of what we're doing here and why we're doing it? So proxy status is a header that we already have that can communicate a ton of different information from a proxy back to the clients about how things are going on the proxy. How how how did this go? And one of the things that already to communicates is the next top info. And as that was originally defined, that is a single item in the structured field terms and that item is a name, an alias or an Ip address. It's very open ended, which is great for many different use cases. However, when it doesn't let us do is have multiple things in here and there's a specific use case when we would like to know a full c name chain that is associated with this next hop. Specifically around cases where servers may be doing cna cloak to ob escape the fact that when you're going to particular, host either directly or through a proxy it is c you and redirecting you over to some known tracker or some server that you want to apply specific policy to. And clients may have specific policy they want to enforce"
  },
  {
    "startTime": "00:20:00",
    "text": "to certain names or Ip addresses and currently just having a single item about the next talk means that you this server would have proxy would have to know which name Ip address is interesting and you don't get full view of the chain. So to look at this visually, let's say you have a client connecting to a proxy, in this case, it's a forward proxy, but this would work just as well for reverse proxy. You're trying to connect to example dot com. The proxy will resolve example dot com. Maybe it has a cna name record. It's actually host example. That has an Ip address. And with proxy status as it's defined, you could have a next top and maybe you put Vip address in compare. But it's also possible that example dot com here on the Dns resolve is actually being c named to track example or something that's more sensitive. And in this case, with the new... Next hop aliases parameter you can have alongside your next top. You could have a list in which case this is a list of just one string, which is tracker out example so now you know both the cna records as well as the actual address that was used. So it's pretty straightforward. I think, you know, most of the document is just explaining kind of the little details around getting this particular field right. The actual parameter definition is... So the name is the next hop aliases. It is defined as a structured field string. Oh, and these are These are old besides I fixed that typo of it's structured field. But I have to re it. And this is a common separated list of alias and Yes. Canonical names that come from the Cd records we do define how you do present"
  },
  {
    "startTime": "00:22:00",
    "text": "including escaping in case you have weird characters in your c, which doesn't really happen too much in practice, but it good, so we need to handle the case. And we also recently mentioned that the server could include the empty string in this case to indicate as a hint to the client that there were no seating records or aliases found along the way. So as a status, there are only two open issues as of today. And right before this, I know, finally got down to writing some pull requests for these. So if you go to these issues, please approve the pull request if they look okay. One is just that we're missing a reference to structured fields where we're talking about they feel them being a string. And the other one is longer term discussion of something that ben sc had brought up originally has a suggestion to refer to get out her info Canon name, it turns out that that is not something we want to suggest because that only gives you the last item in the c name chain. So the P I've put up is adding a of kind implementation consideration section, noting that oftentimes if you're just running with standard Dns library, get out of info, or similar Apis. You may not have access to the full c chain. So you know, be aware of that, don't assume that Ai canon name is going to give you everything that is there and mentioning that. If you don't have access to the whole thing you can, of course, include just the one you do have access to. But it's better to have the full thing. So essentially, next steps here, Wow. Hello"
  },
  {
    "startTime": "00:24:04",
    "text": "We'll I'll revise the document to include those and once we get some reviews on it. Like to hear if there are any other changes that people think should be made here Otherwise, we could probably just wrap it up pretty soon. I'd also love to hear from And if he's on the line. If that code. Proposed change for the canon name is appropriate these other things we want to say, Then I have someone. Okay. Ben? Hey. That's where... Yeah. That seemed like a fine resolution to me. I think this graph is in good shape. I'm I'll just write you up an issue right now because the skipping rules I think are still not totally right? Thank you. Great. That's that's the type of review I want. Under your at Cloudflare. So we are using this. We we've implemented it. I've about the quick review seems perfectly fine. So I'd be after, you know, open change the open issues are fixed then it should be fine to go. To the next page. Yeah. That's actually a good point. We do Now I I'm aware of four independent implementations of this. So tested it. Lucas. And and as a reminder if you're in the room, we'd like you to use the on tool and data tracker. So we can manage the queue with remote and local if possible. Good lucas. Hey Lucas party clyde. Just the P for the Ai kinda name, I had a quick review, like, before the session that you put in no caveat that you you may not put the full trade in if you can't get it. The comment I made on that is Is that like, generally applicable though? Like, that the you may not put the full chain in for other reasons"
  },
  {
    "startTime": "00:26:01",
    "text": "Is that something we wanna think about and address in any other way? I can see the reason you wouldn't want to to just arbitrarily not put the full training in, but it's Maybe there are some. I don't know. Yeah. That's a good point. We could go as far as saying you should include the full chain if you can get it and, you know, the reason that you wouldn't fulfill that is that you can't get it for some reason I'm not... I can't think of any other good reason you would just choose to omit things from this that Feels like it's only going to be kind of hostile to the client. And which point you just wouldn't include this option at all. Yep. I think saying you should do it and then painting out the precise reason that we have in the P about an example wide. But the Yeah. If you probably don't wanna go to too if far done it. But if you were to start dropping stuff is there certain things that you could and still achieve the aims of this this header at all or is that just a complete no go? Like what what would be the problems of doing that kind of thing? I think, I mean, I think it would still be useful. So Okay. Fifth. Thank you. Marcus next. Chris, why don't you go ahead? Sorry. I Yeah. I How do you deal with scene in cooking right now if you're not going through a proxy? What is the threat model that you consider? I mean, so, you know, today, for example, our libraries when they do Dns, They are able to look at the full c chain. So the clients will do Dns and then inspect it and then, like, make their determination based on that. Right. So in the process of loading a page when we to Dns will get the full chain Ip address and if any of the names on the chain or the Ip address, for example, matches some known list, then we apply cookie policy or we'll"
  },
  {
    "startTime": "00:28:00",
    "text": "send it through a relay and say, oh, this is a tracker, etcetera. So if, like, for whatever reason, like that that that Dns like resolution process was like or I don't I don't know like, some entries in the chamber were modified then, like, whatever implementation you have right now. But like, that that check would not work. Right. So There definitely It... It's a moving target And so in general, c cloak is something that we see evolve as a way to, you know, hide from being in the name. There are other techniques that you can do Yep. What once people realize that we're able to look into. See names. Then you can get rid of the c names entirely and you just send everything directly to ip addresses, which is harder to manage and that's why matching against Ip addresses, is also important. So That's why I... The goal here is when we're going through we want to see the full chain in the Ip address because then you have the full set of information. There's a separate overall challenges know. How do you manage and understand kind of the list of things that you want to match against? For sure. So the reason of asking these questions, I took a quick look at the security it says like, very rightly so that, like, this information is only valid as far as like, you trust the proxy that's giving you the. I think you might need to say a little bit more about like how that proxy is doing Dns and like, what are the implications of, like, actually that particular step. You know the that it is doing that. People example. for No problem? Yeah. So, like, a slight extension there and otherwise could go. Could you file an issue? Yeah sure. Thank you. I I was just wondering you have a syntax there that's a succumb delimited list of of items in Desktop f strength. Correct? Correct. Did you consider using an list instead? I think I think so Was that is that possible in the parameter here? It is."
  },
  {
    "startTime": "00:30:00",
    "text": "Just because that would mean you would be doing less parsing on your own Yeah. some. But... Yeah. Yeah. Let's talk about it after I I think we looked at it and there were some Just looking for. Whole idea of S f is to try and make it so you to to define your advisor. Okay. Alright. I think that's anyone else? Sounds great. So I think, yes. Work through those few issues, have a few more discussions and then I'd say it sounds like we'd be... We should be able to do work group last call before the next meeting. I would I That would I'm thinking yeah. Yeah. Yeah. A month unless something really pops up. It's it's a small one. You. There we go. Okay. David, please. You wanna drive slides? See I click the request button. Take a look on. How you got there around. Alright. Good afternoon everyone. Happy Tuesday. Right? So my name is David Sk, and I'm here to talk about un impromptu authentication, which I'm quite pleased to give this talk room four zero one. You're welcome. Alright. So no problem back. Quick quick summary and recap. From previously on on property authentication."
  },
  {
    "startTime": "00:32:03",
    "text": "The idea is to have the client to authenticate itself to the server. Have the ability to use these asymmetric crypto photography. In a way that allows the server to hide the fact that it is offering some resources by authentication. So we presented this at a while back, and we adopted it in the Working group last month. And... Yeah. So how how do we do this? Roughly the the core idea is to use a Tls key exporter to... But instead of generating a key and using, like a key, we just use it as a. And then you sign her you reach back that nonsense, and that gives you the nice property that you don't need to ask the server for first. Alright. So this... This is something that did change since since last Atf. In the past, we were using So there's still a new header, but we were using a concept of un off schemes. Ben pointed out that why not just uses Schemes and find new ones. Because that way, you could in theory reuse the existing ones. So we decided to do that. So the the new header is un pun authentication and now the draft defines two new Http off schemes. And then you have a key identifier signature hash identifier and then the signature, which is much longer than that, but it didn't fit on the slide. Alright. So that's where we're at. And we have a few ish use from the discussion that we had during the adoption call and that the last meeting. So we want we we took did some work to resolve the issues that we thought were completely on. Between last week you open now and we kept the ones that would be either"
  },
  {
    "startTime": "00:34:00",
    "text": "virtual or just fun to chat around with friends, and we have them here. So twenty four forty. One thing we realized as I was mentioning, there's an identifier in there that the s equals or the h equals where the goal is to for the client to tell the server. By the way, this is the algorithm that I am using. Know, either I'm signing with you e d two five five one nine or I'm each benchmarking with five five twelve. And we need a way to convey that. So the server knows how how to verify the signature of the hash. But we also need to have a way for this to be accessible, let's say if we define a new hash function or new signature function later later on. So initially, when we first did this in the first version of the draft, we just put a no Id in there. And then a few people p all over the floor, so we clean that up and we remove that. And we decided to use reuse Tls sign regis for signature scheme and hash algorithms rhythms, but people rightfully pointed out that R c eight four four seven made these orphan. So that doesn't really preclude them for us from using them, but it kinda means that they're not great to use. So we don't have a clean solution there. Something that Martin was using a registry that's for Json Web algorithms. But it's not like a simple number then you have like a string all with a bunch of details and it felt kinda heavy weight and not great. So I was thinking, maybe we just by the bullet define a new in registry, regis are cheap. Thoughts comments, Alright I'm seeing one thing thumbs up. Jonathan you. So Jonathan Highlands one the c of this I think we should buy to put it and create a new registry."
  },
  {
    "startTime": "00:36:03",
    "text": "Cool. So this a sean turner on we've got, like, three hash function already. There's one called hash function architectural names. Can't you just take it over and add a column and call it quits? Where is this one? It's in. To be specific provide R c eight one two two, other ones as well. So I think you could just pick on and... Because that was done by somebody who's not really participating you took it over. It everyone. I'll send you a link. Right. But is it under, like Tls which Gpu, is it somewhere much further away? Standalone alone. Oh, I'm also... If you don't like that one, I'm also okay with you just using your own, but if we can take one and use it, then let's do that because then I'll save you step Schwartz. Okay. Sometimes it takes a little while. Yeah. He's all the way that. It's. Hi. I'm not at you because you're on this side. Yeah? Okay. If this is is being reopened, I wanna we're using string values instead of trying to create Numerical values thing that is going into a free form string anyway. Alright. Thanks. Martin, Yeah. Martin thompson. What did we do in Justin's signatures draft for signatures. Because there's two things here. Right? There's there's the that that the hash version of this one. Which if you identify a hash algorithm, your implicitly binding yourself to using I Hvac. Which might not be for what you want."
  },
  {
    "startTime": "00:38:00",
    "text": "Maybe want a generic mac or the mount registry, which would sort of put the car boss on what. Sean and suggested despite the fact that I can't unlock that idea. So this that which is to say that perhaps there's another Mac algorithm you you potentially wanna use, does not hvac or like like Mac for instance. Which would be used with Ie for instance. And then is the signature stuff. Justin's got a a signature registry that's perfectly good. And very well specified, then why make a new one? So on signatures, we're actually in good shape Tls has one. I know that's the other thing. No. All. We have too many. So let's create another standard. But so that that was one idea. And on on signatures we were fine on hash. We weren't that one got our. And so one thing I I was considering was just doing one new that does combined signatures and max and then... But that is specific on prompted authentication. Can you put none in there as well? Just to be maximally bike Jason. Well j w, whatever it is? That's a joke. But I That might actually be a sensible approach because I was gonna ask you the obvious question is what happens if you have an s and an. In in here. Yeah. So what I was thinking and this will we'll dig into it a bit more in the next slide is if we put them together under one registry, then we can rig get rid of signature and mac and only we have one new it should be authentication thing, and that feels kinda cleaner. Joanne? Justin. Sorry about that. That's actually the second time today I've been called Julien. So not sure what that means. These all jet lagged. Yeah. That is true."
  },
  {
    "startTime": "00:40:01",
    "text": "So the registry that just got out up that's in the... That's for h s signatures is is well specified, but it's also very specific to what the inputs and outputs and stuff are... I have not read this draft to know whether or not it would actually be applicable in this case. That said, it does have both digital signatures and Mac based key based mac type stuff in it. One of the benefits from this and this is based on input that we got from Cf g. Was that the algorithms as they are need to be fully specified with all parameters specified. So it's not just Rsa. It's Rsa with this M with this bubble Mdf whatever it is. It like, all the math needs to, like, actually line up in order for this to actually show up in the registry. We also very explicit we did not use the J registry. From Jose. There are lots of reasons why we didn't. But the main one actually, Echoes is kind of what you were saying is that those algorithms as they are, were defined for sort of a specific other context and sort of the parameters and and assumptions around those contacts. That said, one of the things that we have in Message signatures is we have a section that says if you want to use a G algorithm, here's how to map the inputs and outputs of those those defined algorithms to Sorry. To what we need in the on the Http side. It's basically a functional mapping of take these inputs map them to these outputs. And this is this is how you plug it together. But we very explicitly do not allow the"
  },
  {
    "startTime": "00:42:00",
    "text": "values of the algorithm names in the registry to like, So there is no a equals rs s two five six correlate. in the Http message signature side. That registry exists separate and that is a deliberate choice. So not having. I don't know if a separate registry makes sense there or not. I'd be happy to talk with you about how the wiring works in signatures in in h Gp signatures and if we can reuse that, that might that might be good here. I don't know. Awesome. Thanks. I'll I'll take an action item to read your her draft. Haven't read it either, and then we can realize And if anyone in the room has read both drafts, come and tell us what you think. Yeah. Yeah. And one last point, if you do go down the road of defining something. There actually is an I registry hash algorithms. Which is buried and I had to discover independently for a different draft. In order to reference the values there. But there is a list of things that says S two five six means this very specific thing from this Rf in this section. So that that does exist for for those hash. Thanks. Can I ask you to drop a link to that in in the issue? Or is it linked from your document? Linked from a different document, so I will I will find it for you. Awesome. Thank you. Where where's the github investigation Extensions. Is is it extensions? Okay. is we do not have two two thousand four hundred and forty issues just for this draft Yes thank God. I've been there. I would be no judgment. Okay. Awesome. Thank you. Alex. Hi. Alex Ko. I have a very silly question, because I feel like I missed something. I understand why asymmetric key signatures exist here. I am a little bit lost as to why we're adding Hvac."
  },
  {
    "startTime": "00:44:04",
    "text": "And given the very lengthy conversation that we just had about regis for those things, I am wondering if there's a specific use case, or can we just kill this feature into simplify our problem? The original version of the draft didn't have that and no feedback. I got if I remember correctly from Like Oh, why don't you add hvac might need it. I think that is a terrible idea. I think H max requires metric key, and I think on the web, we very rarely have non ep symmetric key, and I think that this is a huge podcast gun. I think we should not be exposing H hvac for this. That's not unreasonable. Because if you have a shared key you could be just passing it in regular basic off. Yeah. And it I I don't really see the value of this shared secret between the server and the client because you also this primitive usually intended for authenticating a shared channel and if it's like pre known, here, like I I don't think it gives you the right properties. Fair well, I see ben in the queue. So let's let's see what his thoughts are. Hey. Yeah. I don't have any objections that. I think that that might point I was trying to make... There is now moved because we've moved to this system where un prompt off can take arbitrary So if you wanna use like, digest authentication. You can do this. We don't need to define this case. So so would it be okay as a compromise for now to say, we don't have to specify us now someone else can do it in the future. I'm totally fine with that. Does anyone think that's a bad idea Thank you. Because at that point, I would say we just use the I forget which one because the signature scheme was all. But there's a chia one that's not often that has the signature with the right hash for it."
  },
  {
    "startTime": "00:46:01",
    "text": "Alright. Right. So then we could use Tls signature schemes. I think that ones that the nice clean fit. Know. So I guess the the solution is you just do signature and you used the existing registering and then if someone does Mark, they defined their own registry. Or figure out a different... Or or they write a new draft that... Yeah. Yeah. Yeah. In a new. Yeah. Okay. Just just a time check. You've got about fifteen minutes left. Alright thanks. Fourteen now. Okay. Alright. So let's just Oh. do that, then everyone okay with dropping hash and then just using Tls signature scheme, Alright. I'm getting thumbs up. Let's do that. Alright. So little tiny bike shed between the other issues. Chris wood mentioned now that we've kind of redesigned it to use regular Http authentication schemes Do we actually need to define a new prompted authentication header? So pulling up the spec in Semantics document about the authorization header. It says you it doesn't need to be prompted. So we could just reuse that and then focus on justifying and scheme. authentication Thoughts. Alright. I'm seeing some thumbs up. A lot of not caring. Let's do that then. Oh, yep. I I I... I mean, formally from from"
  },
  {
    "startTime": "00:48:01",
    "text": "the specs standpoint. Yeah. That... That's up to the the the the use of the tools. You it's a framework. Mh. You know four one and and the headers and so forth. And so it's up to you as the scheme designer to decide how you compose them. What I would probably wanna double check is are there any user agents out there when they see a four zero one with a scheme that they don't recognize, Do they do something that's not desirable? Well, in this case, we would never send a four zero one with this. Because the whole point is if you don't have it. Oh, sorry. I have no idea what you're talking about four zero four. Then then you're probably fine. Yeah. Awesome. That that that this doesn't cause the concern from an Standpoint point then. Alright. I jumped in... So I This is more question to the room actually, because I don't know some of the history on this, but because we have authorization and proxy authorization I imagine some of the time, you may want to use uncomfortable authentication to a proxy. That's actually an argument for doing that and reusing both those actually right. In case maybe you want to mention you know, this is call out they this can be used both of those. history of why those think about it. And I just said in the I'll I'll have to were fundamentally different. I think it was mainly so like, they don't one the proxy one is by hop and and all that... Okay. Yeah. So potentially, potentially, you know, not waiting into that by just saying Here are the existing ones I'm just working with those, maybe clear. But that makes sense. Next, we have, I believe Ben. Hi. So my one in concern with this is that if we if we go back to using the existing authorization header, I want some very clear techs here. That essentially by prior arrangement. Clients are permitted to use"
  },
  {
    "startTime": "00:50:01",
    "text": "any scheme in an impromptu fashion. Essentially, you can since the deliver the four zero one out of band. In my view. That's what what this whole this whole draft is all about I You know, I don't want us to be saying oh, you know, we have some... We're defining two new special schemes of these special schemes. Are are especially allowed to be used un prompted via if if it's known via a prior arrangement, you know, if if there's a prior arrangement, we just sure that can use any scheme. So I see what you're getting at, but no. And so there are some odd schemes take h, for example that like, go back and forth multi times, and I have a whole thing. And just sending that like un prompt doesn't really make sense. I I'm I happy you to take an action item to look at the simpler ones like basic like digest. I don't think we have any text saying that those require four zero one So I think we're good. And as long as the new scheme or defining can be sent on prompt, it's the whole point. And as long as the few ones that you were considering, like basic and digest can. I think we're good. Now. I just want some text to to make that clear. I don't want us to end up in sort of an Us state. Where it is not clear that you're allowed to use Basic. Un prompted. I I I don't think it's in this documents purview to say anything about basic with the authorization header. Well, this is this is why Concerned about the channel because if we have an exist... If you have a separate header,"
  },
  {
    "startTime": "00:52:02",
    "text": "then it's clearly within this documents purview to say, this header can be used un prompted with any aux scheme for which that is technically feasible. I think I don't wanna lose that if we are moving to existing header name. As a shouldn't be a problem. This is just kind of a policy question. Okay. Well, how about this? I'll double check that there is no tax banning un prompted for basic and digest. And if there isn't or good. And if they are then, then that puts us more in me having a separate header we can do that. But I think that's the dichotomy. If it's already okay to send digest un prompted with authorization saying in this document, Actually, maybe I can quote that text if you want, but I don't think it would be appropriate for this document and to norma on those things. So I... To to go one more step on this If we're not defining an nonprofit authorization header and we're not sent clarifying that some existing schemes can be sent on prompted then I don't even think that draft is titled correctly anymore. Because instead, what it's defining is like channel bound authentication schemes. Those schemes happen to be usable on prompted so are many existing schemes. So so just a check, we've got six probably some... Some of a minute left in the meeting. You have a pretty substantial queue right now. And I think you have another issue that you thought this was the small bike in between. Yep. How do you wanna proceed? How about we clear the people who are in the queue, but if we can keep it short and than we move on. I mean, I did put a bike shit on the slide. That's my fault. I knew this was gonna happen. So go ahead empty. What, yeah. It should be read. Sorry. Couldn't resist. Of the the point that asking for I think is it is not a reasonable request to my"
  },
  {
    "startTime": "00:54:02",
    "text": "of you in this document, I think the direction to move to using authorization. Terrible ninth. And proxy authorization for this one is a good one. And you should do that. Should you should very much. Name the draft, the way the Ben suggests right. In his last comment. Because that's what it is. It's channel bound. Signature authentication, and you can maybe make prompted as well if you wanna keep that word in the title. But to say anything about how four o one works. Would essentially be an update to ninety one ten that's unnecessary because that document already says exactly what it needs to say for all of those things. And the idea that you may in some circumstances be able to take what is effective four zero one from some other context, like room four zero one over there I'm moving into four zero two over here. That's fine. But people can do that sort of stuff on there on on their own without any help from us. And you don't wanna get to broader scope in this document. You've already got enough. Yep. That makes sense. Thanks. Jonathan? As mentioned, this is Channel Barn. I'm not sure how proxy authentication would be checked if you are doing town biden bound earth because the proxy doesn't have right key. The service and not the right key. We have a section in the document about that. Doing we? Jonathan, have you read the draft? This isn't a pearl. It's not right only. Sorry. Sure. Too. Yeah. Thanks. Oh, Mike, as quickly as you can. I will plus one martin suggestion that this does not need duct update ninety one ten, the text that we need is already there. So maybe just quote that and observe that authentication can be sent without a four zero one and you're using it in this case. Awesome. Thanks."
  },
  {
    "startTime": "00:56:00",
    "text": "Is that the whole queue? Yes. Alright. Great. Sorry, this thing takes a while to reconnect. Alright. So we have two issues when you do the Tls key exporter, okay I know I needed found something very cyber security online. When you use the Tls exporter, you pass in a label. And a context. The context right now in the draft is empty. And folks have point out that we can and should use that to, like, kinda tighten what the application of these are. So For example, adding which algorithm we're using to that feels like it's the kind of thing just put everything in the digest in Tls like it avoids some class hypothetical attacks and it has, like, no cost. So I'm absolutely. I think that's a good idea. Bring the key identifier well. Why not? Sounds great. Putting the origin, I think makes a lot of sense. Because if you're, like, have multiple that you're talking to over the Same Connection, you might not want fate sharing on the authentication. Putting the full Url though, I don't love because then that means that when you have multiple requests to the same origin on the same connection it would create a separate authorization header, and so it wouldn't be compressed by each back or q anymore. So my proposal is to put in the first three bullets, but not the fourth one. Do people feel about that? See some thumbs up. Hi, Alex. I thought I asked this before and I don't remember the answer, but, like, one of the problems we had with exporters is that it binds the connection and off the streets."
  },
  {
    "startTime": "00:58:01",
    "text": "And I'm not convinced particularly for large cdn front services that we necessarily want streams to all get the same key material. So that's exactly what this is about. Why not include stream Id? Stream id idea the layers gross. But I I don't see any value in that separation. I think king separating it by Origin gives you like, a nice web security model property, but separating it by path by stream Id is effectively the same. Don't see any value. I means you're gonna do a lot more word. I'm sending it. I'm nervous about that because it's it feels really weird that you could have, like, know for example, a system proxy. That say using envoy and allows multiple things to connect to it that then be multiplex onto some back end connection that would all get the same identifier for the same origin. I really don't like that. Okay. But not liking it. What's what's the what's the problem with it? What The problem is that you have a thing, which is semantic, an H one one would have been different connections and would have gotten different identifier us here but behaves differently friendly under h. And that doesn't feel right to me. Because this behavior difference exists, I worry that it's a artifact that we eventually have a security vulnerability against and therefore my inclination is guard against it. Okay. Thanks. the queue. So I just negotiated a jump because I wanted to I can't see was next in Alex. It's a nice idea, but it's impossible. Because a lot of times we construct requests without knowing what the stream id is So too bad. So you're you were saying that, like, the whatever choice you happen to make your might have like, interesting implications on like what the ideal of security properties for this thing are."
  },
  {
    "startTime": "01:00:01",
    "text": "And so I I was wondering as you're saying this like, what are the ideal security properties for this thing and has there been like analysis done to demonstrate that. Whatever is in the draft. You know, satisfies those particular properties. The security person asking what my threat model is. And if I've done formal analysis, side. You get a cookie. So anyway. By thinking of this was like, meaning to be deployed on, like, origins with on servers, that only have an origin, like this the main use case I'm interested in is for mask where your origin would be proxy dot mask dot example dot org. And then it would be a bunch of connects and the path would be different. Or connect udp where the path would be different. But the origin would always be the same. So that's kind of my mental model. In terms of analysis, could you help me with that? I was actually gonna relay to your c author. Who's sitting in the back, Jonathan it's is something that we could potentially do. Jonathan says this is the plan. Great. To do the analysis. So we're at time. So you how can you very quickly? Sure. I think this might be a dumb question, but I was just wondering now that we I'm moving using the authorization you header. It make sense to use realm me instead of you url? To use? Real. It's already defining for basic It's actually idea. But then, it this become different? From all those authorization headed. Alright. I'll take thirty seconds to talk about the next time but one questions here I'll. We can also give you time on Friday. I have to go to C. Okay. Alright. Alright. So I'm gonna take ten seconds to go over this one, but we can then talk about it later or on the list because we don't have time."
  },
  {
    "startTime": "01:02:03",
    "text": "Right now, we just signed the arms with the signature, there was a proposal to add context string next to the knobs to avoid people reusing the reusing the key across protocols. There was a response that, like, we're using the key across calls is already a terrible idea. So we should just say don't do that. I'm inclined to do that at the end of the day. It's kind of a bike shed, I think that doesn't change the system much, but if you care comment on the issue. That's it. Thanks everyone for your time. And see you on the list and the issues. Right. Thank you, David. So that's we're done for today. And hopefully, we'll see everyone on Friday. Thank you. you. We should always leave more time for security Thank we should just learn our lives in work. Yeah. We used to more. Yeah. Yep. On friday, We only have ten minutes gap. So let's."
  }
]
