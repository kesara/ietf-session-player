[
  {
    "startTime": "00:00:18",
    "text": "[Music] [Music] [Laughter] not a bar I got here but 400 Montreal 70 beers and then wherever we did it before I just met a bartender [Music] [Music] [Music] "
  },
  {
    "startTime": "00:03:31",
    "text": "[Music] okay so let\u0027s get going we have a short slot today so we shouldn\u0027t waste any time at ninety minutes but at least you get Friday off those of you who are here so my name is Aaron Falk this is Sarkar I\u0027m going to do the Internet besides and then probably stayed largely quiet because I can barely hear so if you say something to me and I don\u0027t respond in a reasonable way it\u0027s probably because I didn\u0027t hear what you said but anyways so this is the taps working group Oh Kyle is the jabber Skype Mike Bishop is taking minutes Thank You Kyle thank you Michael please try to make sure that Mike knows who you are so you can get down on the notes here\u0027s the note well this is an IETF activity anything you say or put in the jabber room or put up on the screen should be contribute considered an ikea contribution here\u0027s today\u0027s agenda so we are going to talk about much drafts some interesting API convergence menopause for implementation updates I don\u0027t know if we actually have intend to say on that but maybe yeah folks can go up to the microphone if they\u0027re working on implementation like Eva just a quick update on what\u0027s going on Phil whose remote is going to talk about the taps registry have to decide whether we want one or not and if so what it might look like and then if we have time at the end a few minutes to talk about our usage github so some of you should be aware that we had a virtual interim in September talked about a number of topics from the the interface architecture implementation document not going to go through these you can see the topics here there was actually quite a bit of activity and major revisions of the drafts as an outcome of that we haven\u0027t published any RFC since the last meeting min set has passed ITF and is G review and it\u0027s now in the editor queue so thank you everybody for your contributions on that Thank You Teresa for being the Shepherd so that\u0027s another one of our documents that is basically on the finish line "
  },
  {
    "startTime": "00:06:32",
    "text": "it\u0027s got a it\u0027s in this rough state I think it\u0027s gonna it\u0027s at least waiting for the security document I don\u0027t think it\u0027s waiting for the other documents in order to get published not that you know people have to have the RFC number because they want a site inset but but it\u0027ll be good to have have them come out as a coherent side document the transport security protocols survey Chris is going to talk about that in a second I click the appropriate button on the data tracker to request security Directorate early review I think you know it\u0027s this is a good time for us to find out if folks in the security area are going to have any serious heartburn with that so we can try to get those changes in before it moves forward and and sort of the the core Docs that will meet of what the group is doing have all like I said been revised substantially if you haven\u0027t read them recently pick him up beat them they\u0027re really kind of nice worth reading this is our current set of milestones that are on the data tracker you\u0027ll see that security I was supposed to be submitted in July we didn\u0027t do that that min set was supposed to be submitted EIC by November we did do that other things are happening way off in the distant future which is sometime after in March so anyways I\u0027m going to just push everything ahead a little bit and so we\u0027re going to push security out to March we can claim the min set is done and then push the March documents down in November so we have a chance to finish them they\u0027re looking you know mostly complete but so I don\u0027t think we need to add a whole lot of time yes gory gory fairs I could speak a little bit for arch I think it probably is nearly finished I did a very detailed review and worked through it with Tommy and it\u0027s probably going to be finished very soon for people to read and really digest and probably I could suggest we could freeze this almost until we get around to publishing the API which it has to match do you think we should last now or do you want to wait until the all three documents are done before you last call do you want to do two lost calls okay because the first wouldn\u0027t be a last call exactly it cannot be finalized until API okay so I go searching that code yeah so we should do a working group review of it I mean if you think it\u0027s settled we should you know encourage people to read it send comments and yeah and I think then just sort of sit on it maybe we have to refresh it to keep it alive and repositories I think that\u0027s a great idea Carlin Tommy\u0027s anything but that would be my recommendation next left not this one Brian Phillips Oh Brian did you push okay that the ghost is jumping back and forth is that anyway um so yeah more or "
  },
  {
    "startTime": "00:09:35",
    "text": "less what Ori said I would actually say that we should do a sort of a call for review and we can even milestone it we can say architecture approved by the working group because I would like to actually have you know something you know some milestone that actually gets us to read it and say yes we are happy with the the architecture in and of itself where the reason to hold it is that we might discover something in the final refinement of the of the interface and the implementation and looking at sort of implementation experience might feedback in and say oh we missed something in the architecture but like conceptually I wonder I really think it makes sense to have a review on the working group that says yes this is the architecture that we want and I\u0027d like to do that for Prague and I think that\u0027s that\u0027s perfectly reasonable so it\u0027s like two last calls but one is is even a milestone which is working group approval of I mean there doesn\u0027t have to the milestone doesn\u0027t necessarily have to be a get sent up to some other body yeah yeah so I really want to create milestones between adding milestones to the Charter is tedious and doesn\u0027t add any value but I think we should get a working group consensus that the decking is done and correct and we should and I think that\u0027s the real substance of it are you alright with that yeah so let\u0027s put that on the let\u0027s me let\u0027s just go ahead and say now that we\u0027re gonna put that on the agenda for Prague yeah okay so if you even call it at last call you don\u0027t have to do another one if you don\u0027t change anything yeah true I think that\u0027s unlikely though we could whatever look let\u0027s not bike shed the milestone name I think we all are grieving on what we want right okay and but so I just I guess a test of realism since I\u0027m not the person who\u0027s actually holding the pen on any of these documents does does having the documents ready for last call by November right a year from now does that seem achievable okay Tommy\u0027s nodding his head and the other head nodding okay michael says yes Colin Perkins I think having the documents ready for last call work in a year is it\u0027s perfectly reasonable how much implementation and deployment experience whatever event is a different question fair enough and I think that when the time comes you know we can we can ask the question whether we want to sit on the documents awhile and let them let implementations catch up or not Mia could have been again so I\u0027m not the main editor for any of those documents but I was actually hoping that we\u0027d be finished earlier so do we already know that we need to push the milestone are we totally sure about this yeah so there is a concern that some of the projects that are putting in all the energies or for this are running out of money and so that you know people may "
  },
  {
    "startTime": "00:12:36",
    "text": "just not be available to show up in November that\u0027s a concern Gouri and now I\u0027ve done the architecture I plan to read API very very carefully I mean implementation will follow I mean maybe we\u0027re done earlier perhaps I think earliest possible July I mean let\u0027s be specific right let\u0027s talk about a changes this July seem March guys gonna be done three months ok Tommy says no from March John Bryan yeah right yeah I think four four interface March is aggressive and we\u0027ve also said that we want to have at least initial implementation experience before we push interface out the door um given the how the milestone is phrased and I think that\u0027s correct I know at least that our initial implementation at ETH will be done at more in March because that\u0027s when the student graduates um so and he has like like he starts his job on the 4th of March so he has to be done by the 23rd the first I guess is a Friday um so yeah I think that like if we wanted to stick with the March milestone for interphase we could do it but it would be aggressive I think July is easily doable and I think implementation um yeah I\u0027ll defer to Allen on that one but that one might take a bit longer right like so we\u0027re actually kind of doing this in order we\u0027re doing the architecture first thing we\u0027re doing that the interface definition then we\u0027re doing the implementation so we could actually stagger those out they\u0027ll all be done if we all want them to go out at the same time then yeah it\u0027s probably November but for interface for itself um July is perfectly doable in my opinion is anybody are there any authors from the implementation draft care right me so that Mike guys want to speak to that yeah so Tommy Polly right so speaking as editor of architecture and implementation I think architecture for March is great I think staggering them such that implement interface is July is good and I do think we should wait until November for implementation I think we\u0027ll have good reps of it by July but going really deep into how the mappings play out for different protocols giving guidance on how things like quick are going and they\u0027re like we will do a better job of implementation if we have more time for it and I think we could didn\u0027t essentially dedicate each of the meetings to kind of like the different documents and have a way to really focus and close on them okay Mike did you get that for the notes those days my coat you wanna sing it yeah okay so as a contributor to the implementation draft I mean my own experience has been that I\u0027ve been wanting to contribute stuff and then is that delaying it "
  },
  {
    "startTime": "00:15:36",
    "text": "because we\u0027ve been changing weddings in the API and it\u0027s annoying to change it and as they know actually this property is called that and it\u0027s in a different section and you know because they point to each other but much of the implementation stuff I think is known and can be written quite easily which at least stuff that I think I could write and I haven\u0027t written yet and then there are some things that I think makes sense to delay a bit so I agree with it or I plan for the API and I agree with what tommy said it would be nice to have a bit more time for implementation but it\u0027s not gonna take forever it\u0027s not like we don\u0027t know what to do so other than other than Apple where where people presumably will continue it to get money is it is there anybody else who\u0027s gonna have any funding between July and November I mean what I haven\u0027t lost much all press and I know how neat works I mean I can describe over half it\u0027s not okay there are people maybe paying you to do something else I\u0027m asking the question some of us have as much funding as we had before worth of us okay I sense that I\u0027ve tread into a very bad place conversation so let\u0027s move on I think that I think so the authors I think we\u0027ve got a consensus I haven\u0027t heard anybody object to this syndrome so I think let\u0027s just move on from that that is it for my talk so now Chris is going to talk about let\u0027s just work know how do you do oh it\u0027s control theory yeah that\u0027s right yes all right hello everyone my name is Chris wood so this is just a quick update on the security survey draft which is basically nearly complete now the latest changes since draft two were basically going through and clarifying some of the features set the features that we had added at the beginning glossary and then we\u0027re referencing throughout the document including in the interface in the mandatory and optional feature section there was just some sort of consistencies between what we defined up front and what was used throughout with respect to terminology Thank You Teresa for pointing that out we added an early data optional feature now which is used by any protocol or some protocols you might have heard TLS 1.3 being one of them we added or updated some protocol specific details specifically around quick and the latest stream zero changes this might end up getting ripped out of the document at the end one could argue that the internal protocol details are not really relevant for the interfaces that we\u0027re describing here but that\u0027s up to I guess the sector review and others to tell us whether or not we actually need it and then there\u0027s other editorial cleanup changes that we made just due to our discretion so there are a couple outstanding issues that were raised based on three tsa\u0027s feedback the first of which was said sort of unclear language between in the "
  },
  {
    "startTime": "00:18:40",
    "text": "feature description section we listed some application dependencies and transport dependencies for some of these features and more often than not the transport dependencies are sort of irrelevant simply because many of the security features that we describe like authentication appears requires an application requires some input in the application unless you kind of kick it off to the operating system for example to handle that for you so we ended up just ripping out the transport dependencies altogether and listing only the application dependencies simply because that\u0027s made things much more clear another issue was whether or not we should touch or elaborate on privacy and privacy considerations of the various protocols it\u0027s my view that this is sort of a rathole and that simply acknowledging that there may be privacy sensitive things exposed or exacerbated by particular features that you may or may not enable is a thing and we don\u0027t attempt to survey in this particular document could be done elsewhere but it\u0027s not done here happy to hear other opinions if they if there are people who finally object to that particular change and as I said we have not yet removed the extra protocol details which I think will likely end up getting ripped out at the end so the next steps Aaron Ari said you kicked off the secretary review so thank you we will hopefully get some feedback from them regarding things like correctness and bugs and that may be in the draft and various general issues around what we consider mentorian optional features assuming that those changes are incorporated we will then proceed to organ group that\u0027s called yessiree sir today thank so just for a little context on the comments about application dependency when I shall put admin said we got asked about security all the time and we say no we don\u0027t do security and min said we do it in the security survey and sort of minimal set of security features to expose to applications and that\u0027s why I read draft with this mindset of trying to sort them into optional and mandatory security features which is in the draft but then also what do we need to expose to applications in order to be able to make use of those security properties or can it all just be like only optimizing features and min set language interface M so you know in what form is it exposed to the application or what kinds of knobs does the application have no we don\u0027t have to make the security draft like exactly parallel to means that in that regard but yeah I might suggest some text in that regard so the intent of the features is to simply just enumerate all the knobs that we desire a taps implementation to expose and I think that the text is sort of clear in that respect is there something more specific oh there\u0027s the features and then there\u0027s the application dependency in my understanding application dependency means we need input from the application "
  },
  {
    "startTime": "00:21:40",
    "text": "for this to actually work and you away that\u0027s how I understood it so far yes still not really clear to me and no for and that\u0027s why it\u0027s just a tool so this out but yeah it can also maybe happen in the last call it\u0027s the need for the dependency sort of unclear the actual dependency itself at the actual dependency right what form does it have we have a dependency that your plate application can verify the identity of the peer for example otherwise it doesn\u0027t make any sense right and then there\u0027s some obvious interface needed from this security implementation to the application we have we have things in the interface draft but I my understanding was that we wanted to have this baseline of the minimum thing that needs to be exposed to the application so these features actually make sense and that\u0027s what I was getting at okay like I think I\u0027m parsing what you\u0027re saying however I\u0027m not sure how I would act on it actually make changes so perhaps we could just talk offline yeah me accrued even I didn\u0027t read the latest version just asking so is that basically saying that the min set is empty in this case I don\u0027t believe so okay what\u0027s in the minute the mandatory features are the nin sense okay okay good yeah so just to clarify you don\u0027t there are no content force right looks like you\u0027ve got some refinement to do but basically you think you\u0027re mostly done with respect to how this kind of ties into the existing the three taps are new interface and architecture draft yes I think we\u0027re basically complete in that respect some of the guts may be reworked or just completely removed yeah thank you [Music] yes thank you yep all right hello everyone I\u0027m Tommy poly and I\u0027m gonna this is essentially a deviation from our main look at our drafts for the architecture and the API and the implementation to look at some practical use cases about how we take the concepts that we\u0027re putting into the API for a generic Transport API and how do those play out in reality when we\u0027re trying to deploy any protocols like quick or when application use cases like WebRTC are trying to adopt quick and move to new transport protocols this is a good exercise for us to make sure that we have the right model the right architecture in the right interface and then hopefully we can also use these mappings to actually create api\u0027s that applications can use to adopt quick and get new great transport features out of that so I\u0027m going to start with looking at a draft that we put out it\u0027s actually published just as an individual document into the quick working group as quick "
  },
  {
    "startTime": "00:24:40",
    "text": "interface I think there\u0027s there could be discussion of whether that type of work belongs here or belongs there but I think we want the expertise of both groups to be able to chime in so first what are the goals that we would have for a quick API that as like a transport level quick API so the first thing I think that\u0027s very important especially from taps perspective is that we want to make it very easy for a client to transition too quick and that means both in terms of how much they would have to rewrite their code Andry architecture the way that they interact with their transport as well as dynamically do they have a way to have a piece of code that can dynamically fallback from quick to something over TLS in the same way that HTTP is set up to do and so what we want to define is what is that common API surface between quick and then other tc4 tcp style solutions and the goal of this also then is to be able to expose some novel transport features being able to support 0tt being able to support multi streaming so the applications can actually take advantage of that so just to look at this a bit graphically the model that I think most applications are going to be approaching quick with is that you have some HP application there\u0027s going to be some HTTP API layer that\u0027s actually handling what the applications doing and then within that there will be some logic that translates into either HP to TLS stack or what we\u0027re probably calling HP 3 over quick and UDP and that\u0027s kind of all baked into one piece so that\u0027s great for HTTP applications but then what do we do with the kind of foo protocol that\u0027s not necessarily running HTTP essentially we\u0027re gonna see the pattern of reinventing this wheel if they need to handle two different transports and how they\u0027re going to upgrade to things so this is where of course we can say hey a taps API comes in perfectly here we can describe yes you\u0027re allowed to use quick and something else here are my parameters for how I want to interact with the transport and if we can have sufficient equivalence between the two different protocol stacks we could actually migrate to quick but if quic is blocked on a certain network it\u0027s not going to be a total impairment for the application and then if we look at this we essentially see that the tabs layer of API can be the implementation deal detail the name for how the HTTP implementation does this balancing of the two different transports so that\u0027s just kind of the architectural mindset I\u0027m coming from so what I want to look at when we actually get into the details of how we do a quick API for Transport I think there are different ways that applications are going to come to think of quick as a transport and how they can use it and so this first one is actually "
  },
  {
    "startTime": "00:27:41",
    "text": "going to be very simple essentially using the whole quick connection really just as a replacement for a TCP stream that\u0027s encrypted and you could you essentially have a degenerate case here and they actually are a lot of benefits to an application they get a secure handshake that\u0027s faster than what they can do otherwise they have zero RTT support that we believe will actually work across the internet they will have path migration which you could only otherwise get with MP TCP you have extensible Transport parameters and you have much more complete privacy authentication of your transport headers so even in the case in which we\u0027re just kind of comparing a quick stream to a TCP stream there are definitely benefits there\u0027s also the model of using the quick transport as a we have a question hi Sean Turner can you go back one slide yeah there um so there are dragons with zero RTT so is there some way that you\u0027re gonna like put in the API like hey on the application I\u0027m picking the go fast button and then there\u0027s there go really fast button with zero RTT right so at least this is you know something that we\u0027re still discussing because there are different models for doing idempotent data yeah I think all the models do include a strict requirement that you are marking as an application this is idempotent I expect this will be replayed we\u0027re gonna be probably racing that data so yes you have to check all the boxes and sign your life away ok great thing I can bring that up yeah Erik Kinnear just to add to what tommy said it\u0027s not just that you have to mark it as idempotent but you actually have to say I explicitly want this behavior and it\u0027s idempotent so you need both things to happen right I think the marginal benefit of quick over TLS 1/3 and TFO is that TFO has some issues and impediments that hopefully quick will not inherit smooth simple hangar could you go back one slide with this API a clarification question this API for example when you talk about HTTP over quick and each HTTP it should be do over to us and HTV over quick which is h3 now they have different semantics of like you know the queue back encoder and stuff like that when you have HTTP over the taps API with the expectation be likes there would be some feedback given back to the HTTP layer saying that they have for reading code their messages right right so one of the concepts that we have in the taps API is the notion so everything\u0027s kind of trying to be message based and there\u0027s a notion of like a framing layer that describes how you actually encode your messages so ideally you could have like high level HTTP state machines saying here are the messages I\u0027m writing and reading and then you essentially just load here\u0027s my encoder and decoder if I\u0027m gonna put on whatever protocol stack comes up and you load H 3 and H 2 hmm Andie\u0027s well right "
  },
  {
    "startTime": "00:30:46",
    "text": "I mean you can separately enumerate the options but I want to get to stuck here yes man yeah I mean I would have answered the question a little bit different because what I see it is that you can also change the two boxes and put HTTP underneath of taps if you just use it as a pseudo transport for example and then the mapping is absolutely clear then it\u0027s h3 here and h2 or whatever there but you can also define and HTTP is a little bit an urgent thing because h2 includes some transport semantics which maybe never should have been there but or whatever and it\u0027s a different session and you can also provide a separate mapping for each version of HTTP 2 tabs in theory yeah so I think one thing maybe just to clarify on this is that specifically the point of saying the HB API is that the application is just talking to whatever was talking to how we build that beneath can be whatever layering we need yeah Kyle Rose I mean it\u0027s I would say that this is the diagram is not quite to scale right that there will be some changes made yeah so I mean you might even say something replace HTTP API which I think comes loaded with some baggage about the about the wire image maybe you know I mean I don\u0027t know REST API or something yep great so getting back to the models of how we use it there\u0027s the basic degenerate tcp style stream there\u0027s using quick as a message channel I think this is how I\u0027m referring to how HTTP 3 is going to be using quick you are consuming a stream for each application message and so you\u0027re benefiting from all the things we mentioned before but you have this added benefit of removing head-of-line blocking between your messages that you would have otherwise had and now you have these explicit unidirectional and bi-directional stream semantics which if you think of these as messages that essentially just turns into reliable and non reliable messages getting baked into your transport and then the last model I summarized is essentially treating the quick connection as a tunnel for several streams and thinking of streams is more long-lived big things these to be independent file transfers and things or even VPN flows that are going next to each other and the benefit here is that you have this shared security and authentication context and kind of overall connection lifetime fate sharing yes Ted its authority would you mind going back to the slide that showed the knot HTTP application for a second Thanks um so this is actually when I saw this I was like let\u0027s put DNS up there because I I think there are there cases we\u0027re running the DNS on top of quick will turn out to be giving you privacy considerations similar to D TLS or TLS but with all of the other advantages you just you just mentioned however because of the fact that DNS already has this am "
  },
  {
    "startTime": "00:33:47",
    "text": "i running it over UDP am i running it over TCP and now D TLS or or TLS in addition to this this gets a little bit more complicated when we get to your models question because when you\u0027re talking to the API you need to know what of the available transports are in order to figure out what modeled you as a DNS client send down to it that is can I count on the the transport underneath me handling the head-of-line blocking as it would if it were sending request responses on the individual streams which was like I guess your option three or do I have to treat it as if it\u0027s a a single stream response thing where I then need to exercise the API multiple times in order to get the behavior equivalence of what I would get with UDP so I think from an kiai perspective or the systems which already have multiple different transport layer protocols and where they are inheriting some of the limitations of those transport protocols you may need a little bit more complexity in the API to allow the application to know which set of these models is available below it or order essentially have intermediary intermediary layers above some of the other protocols to do the translation of the kind of API contract of what happens to the that data okay if you want if you want to segment it out like that I still think you need the the functionality whether it\u0027s in the API or in one of these shims absolutely thank you yep Eric near just to kind of address a little bit of that I think one of the things that\u0027s come up that I\u0027m not sure is totally expressed by this diagram is either you need to communicate the information out the top of the API that the application needs to know in order to do the right thing whether in this example it\u0027s going over to LS GCP or going over quick and UDP but extends to DTLS and UDP and everything else right especially for the DNS example or you need to define a common abstraction layer like a DNS message that would be sent into the taps API which you would then like Tommy just mentioned load something in on top of quick in this picture and on top of TLS in this picture they would know how to translate that generic message that doesn\u0027t care what\u0027s underneath into the right thing for each one which is essentially the model that HTTP often ends up having because location at the top can think of it just as HTTP per say all right I would like to get through the rest of this at some point but so can I just suggest maybe that you and Greg and I sit down and talk a little bit about the DNS case offline then that would be great thanks please let\u0027s do that all right so these are the various models for using quick out of that the document essentially describes two high-level ways that we can actually map the taps "
  },
  {
    "startTime": "00:36:49",
    "text": "pieces of functionality on to quick connections depending on which model your application is thinking of things in so this is an interesting little conundrum if you think of your taps level connection the thing that used to be your TCP stream as a quick stream I think it essentially Maps like this you if you call initiate on your connection it implicitly opens up a quick connection and does a handshake if it needs to or just joins an existing one opens up a new stream on that or allocates just a new stream when you send a receive data that all maps pretty clearly if you close your stream that\u0027s essentially resetting the stream probably sending a stop sending as well the man there matter of like actually cleaning up underlying connections may be deferred if specially if you\u0027re reusing these in using connection groups the other possible mapping is to treat your entire quick connection as a transport connection when you initiate it all it does is do a quick handshake when you send a message that implicitly opens up a new stream and then the message completing closest that stream and you can essentially receive or reply to that as the bi-directional part of the stream and then when you close your connection it closes the quick connection so these are just two different models of how we can do it both of them are described in the document the latter can sometimes fit better if you\u0027re thinking of things more like HTTP the former is more flexible so when I when we go through just the considerations here I think a couple things we want to point out even if you could possibly expose both I think we want as far as like the implementation documents we want one way of actually handling how it happen too quick the stream mode if we look at I believe has more complete expressivity which would lead to saying that you should probably if you\u0027d have like this message type mode it would be something that you just build on top of a stream a fully stream controlled mode the one caveat that comes up by looking at the diagram of how we do the mapping is that in the stream mode we kind of have this implicit opening of the first stream which animates the layering a little bit odd and we actually going to get into kind of the WebRTC mappings that will come up as one of the concerns anyway so that\u0027s generally that document you\u0027d be good to have feedback from quick folks and other people about which way we think applications will actually want to interact with quic is a transport [Music] "
  },
  {
    "startTime": "00:39:57",
    "text": "putting those other taps into something like a connection pool that also offers the features of the multiple HTTP connections over HTTP to give the appropriate framers so I think this could be a way to have both without compromising yeah yep make sense yeah cool even on the previous slide always having to go one back no that one before this one yeah why do you have to embrace Italy open the new stream on engineer 8 or not on cent so if you look at how we currently diagram doing multi-streaming you\u0027re adding a new stream is kind of cloning a connection off so the act of cloning the connection doesn\u0027t need to do a new handshake but it essentially just allocates a new stream and that in quick that\u0027s not actually doing anything on the wire right it\u0027s just like reserving a number for you but that means implicitly if you open a first connection that\u0027s not a clone of something you\u0027re doing both operations at once but clone could also do just nothing right who you that would be like clone could do any quick case it could just do nothing and then when you send on the clone you open the screen short end for the tcp case if you do a clone it actually opens a new clinic yes yes I think allocating the new stream is equivalent to saying the first operation that involves data transfer allocates the new stream yeah great so I think in the interest of time I\u0027m going to move on to the next one is that I think in a different yeah different PDF so this is looking at one of the Foo / quick models specifically using WebRTC proposals over quick as an example so for background using WebRTC over quick and that was a proposal that we notice it was sent out to the taps list and it inspired some discussion around how do we apply transport independent API is like taps to use cases like WebRTC included here a link so you can see one of the document proposals for this of how web RTC would have a quick specific API so where where TC has other low-level transport API is that also are quite cific about what it exposes it has a SCTP transport a DTLS transport ice transport so it seems to be very kind of raw and what it exposes and so it\u0027s adding a quick transport that\u0027s one of the proposals here so when we went through this I there are just a couple questions that was never raised for me and so I wanted to pose these to the group and see if there\u0027s any feedback or "
  },
  {
    "startTime": "00:42:58",
    "text": "interest here so the first one when we\u0027re looking at stuff like WebRTC this is actually something that could potentially use our rendezvous mechanisms which is something that I don\u0027t think a lot of our implementations have fully explored yet so we want to see is that sufficiently specified another thing that came up is there are a lot of different states and state transitions between how taps does things and other transports do things and do these actually map up and correspond to one another then do we have any gaps in our API in taps and are the data models for what whoever is he wants to do compatible with what we\u0027re trying to offer with a taps type model so first when we look at rendezvous the step that we have for rendezvous and currently in the taps document are you do if pre connection that you do resolve upon you get an array of pre connections back which seems to be equivalent to the resolving candidates RTC is transport phase and then you have to establish your various connections and this is done in taps as doing the rendezvous on the pre connection which then gives you an event of rendezvous done and delivers you that connection so this is one of the actually the areas when we\u0027re talking about multi streaming that at least it seemed to me that there was a bit of a weird gap because when you get delivered that rendezvous connection if you\u0027re treating connections as streams of a multi stream transport essentially is that stream already established or up for you like what is kind of the state of that underneath : Perkins sir I thank you you\u0027re missing at least one step okay which is that after you have resolved the pre connection to get a set of candidates you need to pass that to the far end I have a signaling channel mm-hmm and then that is that set from the pier is fed into the later run difficult and I think once you add that in this makes a lot more sense okay what I think we haven\u0027t well specified is war what set of candidates are returned by the resolve operation and whether we need a rendezvous specific results and because suddenly the that the webrtc folks ran into the issue where some candidates shouldn\u0027t be returned because of privacy reasons whereas if you\u0027re resolving a pre connection for other reasons you may want to see those candidates so we need to specify when you get the various candidates and which ones result in which case okay news all Maya agreeing with what the previous comment I think "
  },
  {
    "startTime": "00:46:00",
    "text": "the it\u0027s not resolved candidates its candidate pairs which comes basically after you exchange the candidates with the other side and then you only know or are you going to be a potential connections right and they the pre connection object here includes this Feliz person the fully specified pair right no assume with which pre connection objects the one sorry the ones that we\u0027re returning out of the results that will give you a set of local end points which you can to to which the pair can connect okay yep yes some of which may be several exit candidates like ice the u.s. direction and ice and stud and so on so which is why I think resolve is perhaps not necessarily the right thing because resolve kind of implies things like DNS lookups whereas this is like what we want this to do is also do things like the the stun exchanges and the certain things and all of that so I think this would be a good thing to dig in on the documents just to make sure it\u0027s clear for that yeah something we forgot to take it yes ok good : Jenni\u0027s um one other thing that might complicate this a little bit when I\u0027m thinking about it is in the web we often want to be able to do things when we\u0027re trying to resolve and we\u0027re in the process of finding the best connection we still want to use one of the connections early and be able to start sending over data over something that did work even though we haven\u0027t fully done what I think you\u0027re thinking is a resolution step here so there\u0027s sort of this weird timing thing in in that we don\u0027t want to lockstep stuff in a certain way so I I don\u0027t know one of my questions as we work yet at this Morris hey does that all work right okay that\u0027s a great point thank you great so I think that\u0027s definitely great so just a couple other observations who made looking through this so that was just kind of comparing the various states that we have one of the things I noticed interestingly is that we have the tap States which are all of these establishing established closing closed and there\u0027s a closed with error doesn\u0027t quite line up to the events that we deliver for States already closed and connection error so we may want to reconcile that and then we look at what the WebRTC mappings have most of their objects have States for connecting connected closed and failed to generally isn\u0027t something like closing mapped over into that so I think we just want to make sure that we\u0027re a little bit more consistent within our own document here as far as API gaps one of the things that the web RTC quick proposal has explicitly is an abort reading call that can be done and so this is mapping on to "
  },
  {
    "startTime": "00:49:02",
    "text": "the just sending a stop sending frame within quick and so this is something that currently our tap surface does not directly let you expose I think in some cases when you\u0027ve fully closed the stream you want to implicitly both reset this stream as well as say stop sending too close both sides of it and that works perfectly fine but if we do need to support use cases that are just shutting down explicitly the read side of the connection we would need to add that that\u0027s an interesting case because it doesn\u0027t actually map into essentially any of the protocols that we have what\u0027s the last thing a question on your side this yeah I have that question Susan I\u0027ve been asking around to various people so I think as far as I can tell from the client side of quick you pretty much only would ever do the reset stream and stop sending at the same time if you\u0027re going to do stop sending although I\u0027ve heard that you could on essentially on the server side want to just do a stop sending to indicate that you have received everything you need in order to give you response but if you\u0027re generating a request closing this side to read the response it doesn\u0027t make a lot of sense the the other case to consider is when you\u0027re at the recipient of unidirectional stream mm-hmm this basically says I\u0027ve seen enough of the stream to know I don\u0027t care about the rest right now when and you can\u0027t reset stream that because you only reset stream on the right direction right so when we think of how this maps into like a transfer to a P I though if we have a stream we just say closed the stream I would assume that the mapping if you knew it was a unidirectional stream in the inbound direction would just send stop sending the question is do you need the distinction to a transport API except say on a bi-directional stream to just do that read closed and then the last little bit I\u0027ll just quickly jump through this looking at the data transfer mappings they actually end up being pretty similar the WebRTC proposals have a lot more introspection into these a little bit more socket style looking at how much data has been buffered currently but they actually both are writing and reading have the same concepts of amount of data and whether or not the data is finished which Maps very well on to what taps has for its complete and partial messages all right may I cook the other command about the previous question that you just yeah I think I mean there\u0027s a to me that may depend on the mapping you know you presented these two possible matting mappings on two streams another hundred percent sure about the first case but the case where you really have a connection being the same as one stream "
  },
  {
    "startTime": "00:52:02",
    "text": "I think that\u0027s equivalent to just aborting the connection in the API so I didn\u0027t if you were just doing stop sending you would actually still it could possibly let you continue to write on this connection that\u0027s the distinction do you need to be able to say okay I will reject everything you ever send to me but I\u0027m going to continue to write to you that\u0027s something that we don\u0027t occur these nice right w3c yeah I can give you a couple minutes but sure as a part of here yep I so yeah I love to go on so yeah we do have another slide deck that is posted from the w3c folks of their analysis of looking at the taps API I think just from looking at the document and trying to see how it would work into their model maybe we can just just toss up one of the slides very briefly because I think it\u0027s interesting to see how kind of fresh eyes from the outside looks at this so essentially here\u0027s a kind of complete model of all the things that we had exposed in taps trying to write that out into the same language format that the WebRTC layered uses and essentially it goes through and tries to distill out the various bits that seemed unnecessary for this use case and then comparing it to what the existing quick API proposal had and showing that they\u0027re essentially pretty equivalent so these are up there I think as authors and people who are working on the taps API I think we should go through and kind of look at this and treat it as kind of feedback of how this plays out in the real world I think that\u0027s good are there any other questions sorry I absolutely think it\u0027s great to go through this and see if if you can make taps do this as a thought exercise but I will point out that work that\u0027s been going on in the w3c over the quick transport for WebRTC has run considerably ahead of the work in the ITF completion of some of the poor concepts that they actually need like partial reliability so I I strongly suspect that once we get into the resolution phase between the API they have created and the protocols that we were actually going to give them to work with they\u0027re going to be changes absolutely and speaking perfectly frankly I I kind of hate the current proposal with "
  },
  {
    "startTime": "00:55:03",
    "text": "the fire of a thousand suns so I I don\u0027t wish to make that anything other than my personal prejudice but you can assume that there probably will be some other people who will suggest pretty serious changes to the protocol stack when they are considering more than just quick using these facilities sorry more than just WebRTC using these facilities so I I think it\u0027s a great idea to do as an example yes but I just wanted to signal to the rest of people in the room who may not be quite so versed in the state of WebRTC politics that there might be a substantial revision thank you yeah I totally agree I think at this point this is treated as a ademma qeq sir sighs for us to learn from this mapping of how we should improve taps and hopefully give some models back mr. Jorkins responseware for every director for transport on quick we we have a pretty good liaison relationship with w3c the West I heard although I don\u0027t know any details but I don\u0027t know who that is until call it Intel this is a question okay excellent excellent yes I understand I understand is there anything that we need to be talking to them about and I think they\u0027re the only model that I that I really know about on this is RTC way up in WebRTC turn Hardy as IAB person I will tell you that the current liaison from the ITF to the w3c is Martin Thompson the current liaison from the w3c to the ITF is Wendy seltzer Martin is certainly very familiar with the RTC web state I\u0027m not I don\u0027t he\u0027s very happy we\u0027re talking familiarity here I don\u0027t think he\u0027s missing that and of course Harold all this runs is one of the working group chairs on the w3c side and he was in this room and Tuli fled possibly at a phone call to make so I think that there is informal coordination going on now but I would not say that the current state is one that I would call well coordinated I\u0027d like to move on I\u0027m not sure this is a good use of cook time I think you have to say that it\u0027s not an issue it\u0027s only a similar similar to the previous discussion the whole concept of putting an ITF standard on top of an API which was designed for browser specific seems rather odd to me I mean you you "
  },
  {
    "startTime": "00:58:06",
    "text": "basically inherit like lots of problems which you could avoid by just using the protocols directly I mean there are like basically implementations of the of WebRTC which don\u0027t care about the w3c API is just as a right thought yeah I think this should be used as a tap should be used in this context as an example of how to design the correct set of transport features as an interface that we can have designed in a transport independent way so it\u0027s more of a guidance for how you guys can be if I recall it the history correctly so Tommy popped up and said hey we\u0027ve been looking at an API to do web RTC over taps and somebody said oh you know I think there already is one of those coming out at w3c so we contacted them sent them an email and they\u0027re like you know what are you guys doing and then they tried to match them together which is the result is what you see on the screen so this is not the product of a lot of engineering but I think it\u0027s a this is actually kind of a outreach that they now know what we\u0027re doing and I think we know something about what they\u0027re doing : James with my hat is on one day of RTC web document authors and somewhat responsible for a little bit of not the quick API but the API it was based off of which was an awful design based off trying to be compatible with the previous awful design and when you understand the motivation for why whatever happened w3c moral disagree with you is not worth time here you will hate this as much as Ted so don\u0027t take this as a as a design that you really need to love or doing it I mean great it\u0027s an example of what some people are doing but don\u0027t be over rotated on it I am waving them the idea there that the quick WGC api needs to find a sweet spot between being low and high and it\u0027s currently under discussion and clearly the work of taps might help a lot in defining the right level there currently I don\u0027t think it\u0027s the right level but it it can sort of evolve to something but that would be good thank you okay hi everyone so this is 20 minutes lot and I have questions worth of more time I guess you should just stop me when the time comes we should just use this lot to discuss as long as we can and when we run out of time stop discussing and take it to list and I think the sequence of things here also is okay so you know if we manage to go with the first one to "
  },
  {
    "startTime": "01:01:07",
    "text": "things and get them solved good all right so to begin with first of all we have a number of connection and message properties that are to be discussed not yet completely agreed so there is an appendix that contains experimental transfer properties I think it makes sense for the appendix to eventually have a list of some of some that we consider final as experimental as optional to implement right now there is text saying these are not part of the interface maybe we boo removed a percentage here to support discussion which is what we\u0027re having here so the question is what what do people think about those which ones do we keep there is direction of communication which doesn\u0027t map to anything from any of the protocols that were analyzed in min set but I believe it Maps too quick and it just adds something on top of what we have I believe they\u0027re good reasons to keep it but if anybody says that this is something that should go out or should be discussed further and yes the point yeah right all right yeah points in favor ago I\u0027d be happy to keep this I think several of us are I\u0027m starting with the easy one right yes direction of communication is mentioned a lot in the maintaining connections section of the draft so I was I was actually surprised to not see it somewhere up there in like the body of the text keep it and then if I may come to another I would suggest we move cause preferences to the I\u0027m not sure path selection probably I\u0027m not sure if it\u0027s really at that parity or if you just want boolean like is additional cost okay or not perhaps but that would at least be my suggestion I\u0027m not sure I follow you on the hop from direction of communication to cost preference so that that\u0027s an unrelated separate thing you\u0027re bringing up so let\u0027s let\u0027s do this in sequence I think let\u0027s see if we can get agreement on the direction of communication staying and moving it to the main text do we have agreement on that should be hum or anything I think as long as people don\u0027t speak against it we can probably just do it yes yes yes so direction of communication seems perfectly reasonable I think yeah that that makes sense to move up the rest of these still seem to me to be something that\u0027s a layer on top of taps right like so it\u0027s it\u0027s higher level as opposed to lower level discussion of the properties like so for example that the cost preferences those are like the cost preference is generally going to be linked to the PVD or the interface which you can already "
  },
  {
    "startTime": "01:04:08",
    "text": "specified so these would be sort of like some properties that the interface is to handle so I don\u0027t I don\u0027t really know how to like so bringing cost preferences up while you still have properties attached to the interfaces in the main document seems like there\u0027s a potential for conflict there that we need to - to handle but yeah I definitely definitely move up the direction for communication I think it was up there um and it might have been yeah I would have to take a look at the diffs from the from the reorg that I did but it makes sense to have up there by the way is my audio okay now or did I turn my game down to you oh it\u0027s fine yeah yeah I could have been I would like to propose a different strategy to come to a conclusion here which would be I would like to see further analysis of this mappings for quick and DNS and maybe also WebRTC and if we do those mappings and we don\u0027t need any of those features we don\u0027t take them okay oh I would agree except for a second I\u0027ll tell you why but we come to that yes so gory I would like to shoot at some of them but um if we\u0027re doing that I thin eliminate some of these from the list do you want me to go through what I don\u0027t like or do you want to take a different strategy sir I mean yeah I think I think it\u0027s I think it\u0027s good to get you know what we want to have is input and we want to have stuff in the minutes and then your inputs are good so yeah bring it on we don\u0027t need to decide not ok bitrate is some sort of capacity request which to me is linked to the traffic category so this is question whether you want to do insert detail or enter serve big things like diffserv type think I would suggest don\u0027t do bit rates to define categories that are associated with the sort bit rates you\u0027re wanting like conversational or something which means this but instead of saying a number because I don\u0027t want to do with the number and RSVP never did either all right so that\u0027s hitting a bit right and duration I say we don\u0027t know so I say durations exactly the same bulk probably means long control thing I mean you could have forever so duration is another number I don\u0027t want to do with it we have it in RSVP and it was cool I don\u0027t think it was useful and size to be sent or received is a promise in the future okay so I\u0027m going to end up minute something though though I think you may simply know about implications on what size you want yeah I don\u0027t know I think I I I mean I would like for Theresa maybe to try and pop in on this "
  },
  {
    "startTime": "01:07:14",
    "text": "cause preferences I\u0027m much more enthusiastic by the way about because I think it\u0027s something the system can really utilize so I\u0027m not awkward about everything right you so I just know time management here that so we ran long on the earlier sessions right you lost a little bit of time on your session and so I think that we\u0027re going to maybe try I don\u0027t know how many slides a couple of what I mean it\u0027s so it\u0027s not a big deal if we if we cut I think yeah we would just want to go ahead with the with the agreements and things I think I don\u0027t think okay I\u0027d love to hear something and then a light turns on and then other people agree but maybe we should just keep it short and give people a chance yeah tell my last understanding was that this intense like size to be sent duration betrayed could be a layer on top of taps and not part of steps and like that was my last right yeah I would agree with that as well I would agree with that as well because it\u0027s some higher layer and high layer I don\u0027t have a problem so the point is we don\u0027t have in specific mapping in the implementation what should happen under wire for that like necessarily yes right he never was a war over it also Phillip wants to say something - okay - a separate layer I\u0027m not sure we really need this in the base draft but as the property as an add-on but I think it should be specified at the same namespace but I think we\u0027ll come to this this will become a little bit clearer if we talk about the registry stuff I will present later on so I really would like to have discussion after we decided on the format of the property namespace I think this might help and sure the discussion okay Cohen Perkins so I think we are used to building congestion control schemes for elastic flows I think if we start building in just in control students for flows which have upper or lower bounds on the accessible sending rate we may "
  },
  {
    "startTime": "01:10:15",
    "text": "need to specify send and receive bit rates for example if you\u0027re sending video and you know that you know it has a minimum rate if you can\u0027t guess at least one megabit through you have to stop because the video or the plate but it can\u0027t use more than four megabits then you may want to specify those bounds so to give hint to the congestion controller for what\u0027s needed that may argue in favor of some way of stress so limit I remember that I was actually a little surprised at Gauri is simply dismissing the send/receive because I think there was some discussion between you to have between yourself are you saying that this is an ambition to work at a particular bitrate are you are you in that frame of mind I\u0027m so if you\u0027re something like live video you may have a video source which if if your congestion controller cannot sustain one megabit per second this cannot be used so you guys what just stop sending an equally it may only be able to use a certain upper bound I answer your congestion tour may need to know these limits this is a different interpretation of bit rect which is much clearer much more precise that I\u0027m happy with that if a games you get this or you don\u0027t get this is a maximum minimum number I\u0027m okay if it\u0027s a target bitrate that\u0027s kind of okay I want to do it two megabits or 2 gigabits I\u0027m not interested but for the video codec yeah so maybe we need to be very precise if we\u0027re doing this about what the semantics are of the transport service you know if you get that so I was a skull importer I mean Miriah you wanted to say something I do agree on that point actually and do you know if there\u0027s any document in our MCAT that is talking about interface questions we have something somewhere right yeah we used to house we certainly used to have such a document I think yeah there so we had this this kind of discussion when it is coding interaction kind of thing but not in this this form like what betrayed you need what betrayed maximum/minimum betrayed yeah but we have some discussion but that discussion is going into ephemeral document that\u0027s currently he and uncle is not dealing with and and my personal appearance is very hard to actually have a range on some "
  },
  {
    "startTime": "01:13:15",
    "text": "application and it will be depending on like how many how many recipients are there how many people froze in the call and all this thing so so I am actually I think my personal opinion is a send receive max main thing should be fine here and you vary in between that one and basically application when it doesn\u0027t get anything through it just turn off videos I don\u0027t think make tough to handle that like stopping the video I don\u0027t think things like definitely that should never stop sending it stop sending like stop sending something it should be the application decision to make it like whether it\u0027s gonna stop a video or keep it yeah depends on how you want to build a thing so I do see the use case for min and Max but I\u0027m not sure if that\u0027s maybe rather a protocol specific feature you want to put in somewhere so actually that that was my original point I wanted to make on traffic class and I was discussing with Gauri early on I\u0027m not I\u0027m not happy it was classic traffic category that\u0027s how it\u0027s called because like this has been an academic exercise forever to try to squeeze in applications into these categories and and Gauri said it depends on you know that we describe exactly what the implications are of this choice and what we do with it so I think here the past forward is so I mean I don\u0027t I\u0027m not sure if we needed at all if we can like rather request more specific information that get take input or that are taking us input to a specific mechanism but I think the way forward is actually to do more work on the implementation document and then see if we have mechanisms in the implementation document that need these kind of information is worth editor hat off that\u0027s just my personal opinion I very much agree with that I agree that several of these things are you know you want to check the implementation first and see if they map onto something rule and don\u0027t have them I completely agree with that preferences and I I see that this is something we can use somewhere but I\u0027m not convinced that this is on the right level here okay we going up like to clarify what I meant too much what ice and in previous times I stood up at the ITF about this traffic categories there should be ways in which the network carries this traffic not application developers trying to characterize what sort of operation they\u0027ve got in other words of you ask the query that means you\u0027re going to send a few packets per second are you want a law interactive delay if you ask for book then you\u0027re going to send many packets around you want maximum throughput and I think if you do it that way application developers may be able to choose have you tapped application developers to classify "
  },
  {
    "startTime": "01:16:15",
    "text": "themselves it\u0027s rubbish it never worked yes you keep saying that and I keep agreeing so I think that we really sort of converge by now actually yes right okay let\u0027s make that maybe short because there\u0027s at least one other item on the same slide that we didn\u0027t discuss and you really want to get to I mean we have diffserv traffic categories of various sorts which I have certainly never understood I\u0027ve never understood which one to use which application even if I\u0027m building applications which supposedly match under those categories so if we do do this we need to be very clear all right we are not going to solve that problem in this working order okay yes so Philip wanted me to repeat at the mic going under the minimum can raise a soft error oh okay all right so let me just it I want to do a time management here I think this is actually a really good discussion to have as a large group so we have three other topics on the agenda yeah I have one let you get to your other side so just look at it let me just sort of work out what I think is the rest of the agenda just so to give people a chance to scream if they don\u0027t like it since we didn\u0027t have anything specific for implementation reports I think we should just cut that Philip says that he can cut his talk down to just three to five minutes I think we should give him a chance to do that the github stuff is actually the ITF recommendations are very much in flux and and I we can either do that on the list or just or defer to the next meeting that it doesn\u0027t seem like it\u0027s that pressing so I think that this is a good topic to actually have a discussion about and so I\u0027d like to kind of keep going on this okay do you are you disagreeing Myriah no I agree but I think even the the registry question is not important yeah we can do that one as well sorry okay so Kay helps willing to go anyway so let\u0027s just let\u0027s keep going if you have any time at the end we\u0027ll it felt talked and the rest of stuff we\u0027ll just push okay one item on that list that we haven\u0027t yet discussed but it is on the list and I think it\u0027s important to go through is should suggest a time out to the remote endpoint now the reason that exists is we have a to do everything that\u0027s in min set and we have pretty much everything from inset cupboard saw them in statistics analysis of all these protocols and the reason we have to suggest the timer to the remote end point is that it is losses option is to use a timeout option that\u0027s on it allows this option use a timeout option in TCP it\u0027s what\u0027s a bit awkward is that last time we discussed it nobody knew if there\u0027s any implementation that really does it right so you know if you want to use it we have to have it in in this and I mean it\u0027s a selection option and that you would say I want to use that and I would make the system underneath well it will tell the system underneath that you have "
  },
  {
    "startTime": "01:19:15",
    "text": "a wish to use TCP essentially and then you would be able to configure it so that\u0027s that\u0027s what we have on the table so I would have to check the transport draft again but I think that there is an equivalent but not identically phrased own teacher for this and quick I\u0027m seeing URI up look it makes on Marianne she has yeah oh yeah that\u0027s the idle time out correct it\u0027s not wipe the same okay yeah so this old law laws did anybody use the util when we did it do we need to continue to do it it\u0027s used now Linux implements it and nothing free was the other two just a minute you keep doing this to me you mean Linux implements didn\u0027t done such a huge it\u0027s it net death was and it\u0027s in the shipping kernels how would I know somebody else implemented it and so I\u0027m guessing they had a reason for it and given that Linux you know rip stuff out that isn\u0027t used I\u0027m guessing it\u0027s used tonight I don\u0027t know okay so ecn is a given what\u0027s perfectly so know what events me email about it so large can we talk with actually checking the head colonel and seeing if it\u0027s by default in the head girl I think it is but I can take it if it is not come back at hundreds as far as I know and it\u0027s in previously and Netflix use it so given this is not the same feature we have in quick I think this is actually a protocol specific feature I mean not by the definition of what we have in the document now it\u0027s yeah it\u0027s a mean set but it\u0027s in means that in the same way like all the other things so you can use it and fall back it\u0027s not a problem you terminate the connection occasion it\u0027s about it\u0027s about having the ability to tell so I think as far as I understand the point of this option is that you may use a larger timeout but then the other the other side may close right and then and then you\u0027re in trouble if you really want to use a large timeout before terminating the connection right if you need that ability to have a large time or do you want to negotiate with the other side to tell the other side about this timeout and that\u0027s what that option is so it\u0027s a functional thing because if you really want to use it you really "
  },
  {
    "startTime": "01:22:15",
    "text": "need to expose it in the API and it is awful participe and this is how it ended up being on things I mean set that are necessary to keep if you want to use that functionality implement this in TCP and the fact that there is an implementation of a transport parameter that is in the same space but has different semantics in quick and one could you know one could say we could add something like this to the Unity options as well right like so that I don\u0027t timeout for you know some endpoint knows as a certain thing right they\u0027re just up in this space this really seems to me like we should implement the easiest transport specific parameters for now that we actually talk about in a document that is what I got to the mic to say why don\u0027t we just give it an example of a transport specific option for TCP to do this can do it like that I mean now it\u0027s not written like that we can do that seems locators that I need keeps people who actually need it the possibility of doing it and yeah because in the end it\u0027s only TCP doing it in that form so the interface document is silent on how you do transport specific options is it yes so far yes so I think the transport specific options are specified they\u0027re just none of them are enumerated they are left currently as exercise so I think I\u0027m going to enumerate in there as one of the standard ones we can make that one the first okay sounds like a plan cool I got to my next slide yeah no I didn\u0027t say what experiment you say Appendix A experimental oh no no no this was not a reference to the state of G RFC this is AB this is where the now listed as things that you know we consider there\u0027s an experiment this is exactly why we\u0027re discussing that they maybe shouldn\u0027t be de in that list okay a couple of other issues that we had in the github pom pom pom right this should I hope this is an easy one so the the well there was a restructuring I don\u0027t know how many of you folks have looked at that restructuring or care about it I think Brian has done a fantastic job had updating some things and Philip has done quite an effort like there were a lot of people you know mangling that document quite a bit there was once this classification there\u0027s something being selection property or configuration or whatever we was called and that was youthful exercise but now it\u0027s implicit "
  },
  {
    "startTime": "01:25:15",
    "text": "in the document structure just by moving it to the right place which was quite nice I think was awesome suggestion from Miriah at some point the question is is to anybody having an issue with the current structure is it all fine and dandy are we happy with it I hope I like the structure cool next is 243 several of us believe that wizard should suggest option action and event names all the property names we should have a proper you know the right way to phrase these names right now there are basically sentences like two like you\u0027ve seen right suggest a timeout or the remote end point is not really a name of a property and sold as a question on what these names should look like I said see also registry discussion because I thought it would happen but anyway on these slides there were also some things about so it became ok should it be whatnot any opinions sounds very much like an editorial decision yes well okay right you can make that easy we can go ahead and do it like that it\u0027s fine I don\u0027t but I can go ahead and do stuff it\u0027s fine I think that Ryan tends to care about names [Laughter] yeah I can take the action item to do that\u0027s right I will I will suggest some things that are designed to annoy people so that will at least get some you know so well people who claim to have no opinions will be called out so yeah but we can sit down and do this relatively quickly I think I\u0027m cool with edible good Hey so tours this question just take a look at this slides for the registry discussion because most of the starts are exactly targeting this question we could but we could also discuss this offline and make it joint proposal if you like so let me let\u0027s cut things here I think this is a bad place to stop and can I just see a like a quick show of hands of folks who are willing to be available for an intern before the end of the years try to do something in the next few weeks are you gonna raise your hands but chillin Sergey your virtual hand yeah roughly yeah yeah okay let me ask ok Bryan\u0027s raising his hand that\u0027s that was my questions whether he was going to be offline for an extended period okay so let\u0027s just plan to do that well we can revisit this list will do Phillips talk on registries we should talk a little bit about github been trying to "
  },
  {
    "startTime": "01:28:15",
    "text": "adopt the ITF best practices and maybe we\u0027ll even have some feedback on the security document to talk about so let\u0027s cut things here thank you everybody and we\u0027ll see you online and then in Prague okay Oh blue sheets did everybody see the blue sheets did they even go round yeah so and when you say anything to me it\u0027s like I can\u0027t I can\u0027t hear I can hear everything that they\u0027re saying because this years [Music] "
  }
]