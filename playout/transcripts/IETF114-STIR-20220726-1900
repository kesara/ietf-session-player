[
  {
    "startTime": "00:00:04",
    "text": "we're in for a fun time i said i see robert over here but i hear robert over there that's very confusing yeah robert um you know you're supposed to wear masks for these these meetings please i got i've got one big one it's between me and all the other participants it's called texas [Music] output and actually it's time to start okay so we've got it looks like we have our authors we've got who we've got so uh i guess we should get going you okay welcome to stir at ietf 114 next slide please this is the note well by this point you probably have already read it but please make sure you follow it uh if you're going to contribute the next slide just remind everybody about uh respectful engagement here please make sure you follow the ietf code of conduct next slide before i go through this just to remind everybody keep your masks on in the meeting and only the person presenting on the pink square should be maskless thank you next slide this is the agenda that we posted um several uh i don't believe this is the agenda"
  },
  {
    "startTime": "00:02:01",
    "text": "i think that we're missing yes that looks more like the agenda that we posted yeah did we include a second slide oh that's a status light yes they're right sorry this is just to say uh the documents that had reached some uh milestone and remind people that uh error handling closes today in terms of its last call i had not seen any comments on the list this week but we were hoping to deal with any uh comments that came out during the session today that there were and uh on the last one the the oob document we had said when the next one's updated we will start uh working group last call we're still waiting to see that document so that's nudge next i let the notes say that john raised the thumb yeah this is chris um there was some comments from paul that i think i included that in my slides to talk about okay so okay thank you been a little uh distracted from my emails one comment here i think the uh version numbers have all updated since we made this slide at least the first two no the first two have next and this is the agenda the one that was posted um a couple weeks ago any agenda bashing then let's proceed with this yeah you close it and this is"
  },
  {
    "startTime": "00:04:01",
    "text": "okay yay okay so um as noted uh there's 19 which was recently released um i believe mostly editorial but i'm not going to go to the next slide as i just said most of the changes between 17 and 19 have been mostly editorial and discussed on the list between meetings uh do appreciate all the editorial cleanup that happened especially in the abstract and intro there's it's been the document's been obviously changing uh for a while now and um mostly there were changes to bring things up to date with some of the changes um and i added some examples and some other things like that there was one normative language change uh that was actually i think ben's comment uh i changed a must to a should in the security considerations section and i have the exact quote down there um ben you have a comment i was just going to say i think my comment was about the normativity not necessarily the must versus being must versus being should it was along the lines of trying to make normative requirements on the ecosystem um and kind of dodgy to me but i don't have a strong feeling they won't wear the other so i don't know why are you saying that even with should as being a normative thing you know i guess i'm okay with should it's still normative but uh i guess i i just my intention is to make it i don't hate it enough to push another revision unless another reason to"
  },
  {
    "startTime": "00:06:00",
    "text": "any comments about that i mean i guess i think the statement we want to make sure people are thinking about appropriate policies uh along with this but um and i think that was sort of the spirit that those normative comments were implied but i'm i'm okay either way i don't see anybody objecting so john peterson so i mean look the part of it is that we're not going to bless any such entity right or a set of policies here in the itf right i mean i can imagine use cases for an rcd passport that you know are much more informal outside of shaken like contexts and so i don't think an itf specification should you know stipulate anything too strongly there i agree the wording here is kind of tortuous right it's got the varsity passport lowercase must follow some form of vetting in which and then should follow and it's like a policy of an ecosystem um i just i don't think we want to require that an ecosystem have such an applicable policy that's really what it comes down to everything we have remote we have remote people please no mister linux i mean i guess and technically we should be using the cube but yeah sorry go ahead i guess everything follows you know follows the null policies trivially but i guess maybe that's you know not interesting to say also there's something wrong grammatically with that sentence yeah i'll admit i missed the first must no no it's more whether it's identity but what are what is the is is that meant to be id apostrophe s or there's also a list with no and i'm confused by the grammar of that sentence but anyway"
  },
  {
    "startTime": "00:08:02",
    "text": "okay there there will be hopefully before even the artist rc editor is left with the daunting task of like turning this into english we probably should do like an englishing pass at some point well there will be a 20 no matter what but i guess the question is does that happen before working goose last call or not we're in working through last call or getting out of working with nascar sorry i apologize so the question to me is whether you want a 20 that gets sent to the area director or you want to send 19 to the area directory i mean i i would be okay sending 19 to an area director making it their problem i'm sure there will be some editorial feedback that will come back in addition everything else this is rich shockey i agree with jonathan with mr peterson i would certainly support sending my team forward as soon as practically possible there is a queue of implementers ready to use this uh sooner rather than i fully agree with that so what i heard is we're going to leave this grammatical error in there to see if the ad notices okay [Laughter] i will comment then again uh the clearer it is the quicker it will get through the initial ada review um i don't think this is necessary a clarity problem but"
  },
  {
    "startTime": "00:10:01",
    "text": "just something to keep in mind all right all right we're going to send it today you already have the all right i think the next page is did that jump too far no it's good so can the authors please send me a statement about the ipr so that i'm not waiting on that when i do the write-up yes okay thank you okay close that i think i do have already started next is what's next for the agenda i don't want the agenda okay next is message okay welcome to reality this is billy in reality it's not just online um although many are on next slide please we're about to talk about messaging and i'm going to try to talk through a mask because i think it's the first time i've ever given a talk through a mask we'll see how it goes um so as you can see at the top of the slide there was a draft itf stir messaging zero three and i immediately replaced it with a zero four uh like yesterday which i'm sure no one in here has read but for those that have not been following this work just you know like a page turner novel um what this draft basically is suggesting is that the systems we built for stir especially the certification systems that are now widely deployed and are being more worldly widely deployed worldwide you know probably could be repurposed to handle text and multimedia messaging instead of just setting up telephone calls and of course the systems we have set up"
  },
  {
    "startTime": "00:12:01",
    "text": "for this in certification are limited to telephone numbers so we're not talking about you know messaging that has nothing to do with telephone numbers and there's a ton of that and it's super interesting messaging but for the moment the restriction of the scope of this draft is to that i will remind people however that is not a restriction inherent to passports or to their transmission in stir just to the certification systems we have specified here in the itf so far why are we doing this well you know robocalling is like super annoying but message bam is becoming a problem that's equally annoying in a lot of places and so you know you can kind of you have some different tools you can bring to bear on trying to prevent spam and messaging but especially as encrypted messaging rises these kind of bayesian tools we use for email analysis to figure out is this about some sort of pharmaceutical that perhaps is being widely advertised or something like that can't really do that for encrypted messaging so uh we think this could help next slide we had a working group last call much like with rcd a shorter one um we did get in a bunch of comments some of which i addressed in zero three but a lot of which i did not address in zero three and so we are trying to clean all that up thank you to christopher russ ben brian rosen jack for reviewing that next slide i don't think there's like a ton more to talk about about this um you know there's a couple of topics that i think we can go through that maybe are still open issues we were just talking about on the list one for example would be allowing the message i parameter in other passport types than the message passport type what is message i this is basically like a hash that's over the content of the message in particular the mind body so whether that is you know multimedia it could be multi-part it could have text and all this other stuff but just take the entire mind scope put hash over it that's what gets embedded into the passport itself"
  },
  {
    "startTime": "00:14:01",
    "text": "the question naturally arose could there be other passports than message in which we'd want to include message on following the great tradition where for example we allow rcd which is just an element that appears in the passport to also appear like in a shaky passport if people want to do that are there similar cases or it might make sense to have this like message integrity parameter in some other passport type my argument is i don't think so and like i think the opportunity for confusion around this is too great and that moreover um getting into this polymorphism as we discussed on the list where how do you mix and match between these different passport types this is like all this aggravation and complexity and household i see there so i'm not super psyched about that but i thought i'd give an opportunity if anybody here would like to talk about go to bat for the notion there could be other passport types where message i could appear anybody care so i'm in the queue and i'll say first for the record i did not propose polymorphism yes i just kind of wish sometimes we headed but i'm glad we don't um my main thoughts here was not to make it hard for someone else in the future who wants to specify another use for this and you know if we say must not then any if if we come up with another kind of message passport in the future this is where the polymorphism came in maybe some kind of combination of rcd with message eye or you know just throwing something off we have to come back and update this draft to allow something else to do it uh but that's i'm willing to pay personally okay and that's you know if if everyone else is okay with that i'm okay with that too it's a low cost it's a low bar you need to have a spec anyway and you're just adding like updates rfc this uh whatever that spec is right low cost and it looks like we've got robert thank you mr sparks what's up man i'm not trying not to waste too much"
  },
  {
    "startTime": "00:16:01",
    "text": "time on this but you're really how quiet now a little better so part of the reticence i think to just letting other passport types pick this up is based on confusion and i think that we should spend just a few seconds wondering if our nice little short name um msgi the msg part in particular is really going to be future proof enough for us given how generic a name it is and how easy it is to confuse what you might mean by message if the context isn't just dead freaking obvious that you're talking about an instant message kind of thing i am going to i'm willing to entertain and contemplate that for a moment um we called the draft stir from messaging we're using message pretty generically we have a pretty generic definition of message in the sense it's not limited merely textual messages but also incorporates multimedia messaging i mean i guess i look at it like you know we define two streams for these things that could effectively appear in the message by should say three things could appear in the message method things that could be negotiated as part of a session by set like msrp or whatever and then finally out of to agree on how to ban message can be taken pretty broadly when you're no longer talking about like sith is a transport so i don't know i think message has enough of a kind of stable understanding i think people understand that a message isn't an email right um you can say email message it's true"
  },
  {
    "startTime": "00:18:02",
    "text": "um and then again i mean frankly a lot of like smpp and protocols that are used to transport these things like are often smtp adjacent and mms as well um i don't know i think it's okay i mean we could call it like a mime thing like but then you lose the session part it's like what else do you call it i don't know yeah i know a better one naming is one of the three hard computer science problems and i'm willing to leave it alone i just wanted to kick it around for a minute so you know the the kind of potential confusion i can see at an implementer's layer especially if your implementers aren't um native english speakers is is this thing some sort of you know integrity check over at the datagram that the passport appears in kind of thing so you know um but i'm i'm perfectly willing to leave it alone and i don't think it's any worse than rcd and rcdi like what is rcd right and like that's also pretty open-ended and pretty pretty gnarly really jack what do you think man i'm [Music] i kind of don't care from a message point of view but the i'm slightly more worried about the fact that it's not like this could end up with some slightly odd side effects like verifiers that understand this message spec will mark these as invalid but those that don't will treat it as valid because they'll just ignore the message i and assuming it's not like a ppt like sorry if there's a passport that's not a message possible with a message eye on it so it could just have slightly weird side effects that i'm kind of slightly nervous about yeah i mean that's that's why i don't"
  },
  {
    "startTime": "00:20:00",
    "text": "want to allow it right i said this on the list like i'm totally worried about those side effects i i want this to be scoped to message passports for that reason but i think robert was like poking at something else like is is message really the best description for this or is there a crisper thing that is closer to capturing like what we mean other thoughts chairs can run the queue i can barely see the queue over there uh jack and what's the beer i was just gonna say i feel like you kind of missed the point of what i was trying to say which was that like you can't if you like there's a question of enforcement on the verifier side like a verifier that enforces this will look very different to one that doesn't and that might cause problems like admittedly like designer should have never done this in the first place the air should have never done this but like from a vs that's just accepting random things from the internet like you kind of have to worry about that i am not following you it's true who does what be more be elaborate a little bit because i'm not getting you um if a future or weird uh a s creates a passport with a message eye on it that's not a not that that's not a that's like ppt chicken or rcd or whatever a verifier that does not implement this bag will carry on just fine we'll go yeah everything's fine there's this there's this weird message i but i don't understand it so i'm going to ignore it and ppt rcd lets me do that right but a mirrorfile that does understand this will go ha that's message eye that's not meant to appear on rcds and then drop it yeah"
  },
  {
    "startTime": "00:22:00",
    "text": "and that that feels like odd behavior where someone who doesn't understand this will verify call like we'll just mark this figures verified but one that doesn't won't but what is it going to do with an rcd passport as a message eye in it what's the message well that doesn't matter like oh i think it does i think it's very similar to the question it oh yeah the ais has done something really funky here but like from the vs's point of view like which it's disallowed from doing if it's compliant with the special oh yeah yeah yeah but like this is the internet we're talking about yeah the so like yeah i'm not i'm not convinced this is definitely a problem but it just seems very strange to me that verifiers will verify these passports correctly or incorrectly depending on whether or not they implement this spec so i'd be willing to trade the language for as may not include in pbts that are non-message and vs's must ignore if in ppts that are known message that help that would make me much more comfortable okay i can do that wait what's that last part so it was a s's are disallowed from including message eye in non-message passwords and vs's that receive message i and non-message passports should it must ignore it just i mean it's kind of what's implied but it's not stipulated directly by the text that's there now i can do that severe okay thanks uh so john i think that first blood point um sorry i need to review the document you must confess that but when you mention that in other ppts right uh for example we define other dvds for example"
  },
  {
    "startTime": "00:24:00",
    "text": "rph right yeah we defined right so do we need to do anything for those ppts or yeah are you suggesting that's uh because none of those ppts stipulate using message i at this point right like rph rph is already in rfc it doesn't say anything about using messaging right so this is this is basically again it's a way to prevent there's a particular confusion that is like the inverse of what jack was just discussing that i'm worried about okay which is a case where somebody intends to be saying there's a message i want integrity over they send it in a non-message passport type and the semantics of the fact that suppose we had a message are lost if the verification service doesn't recognize message eye at all and so a passport was intended to be securing a message could be viewed as being valid for like a telephone call right and i'm concerned that there's like a little bit of security weakness in that if we don't clamp this down the language i was discussing with jack i mean it's a you know it's a much crisper and you know more specific version of the language it's in the draft today i think that gets at what i'm trying to prevent okay so i think key is the non-passport types right that's non-message not a message yes okay i just don't want again it's gonna be really wonky and polymorphic in ways i don't want okay thanks thank god chris yeah i um for me i i wasn't sure where we were going but where we landed i i like so thumbs up okay the other thing that really came up if there's nothing more than this is anybody else in queue on this no okay the only other thing that came up that i thought was like worth mentioning from last call is really what we're opening the door to without a band for this and just to make sure you know we all here understand and are comfortable with the notion that much like with stir out of band you know what we mean by out of band is non-sip we mean that"
  },
  {
    "startTime": "00:26:01",
    "text": "you know there's something like an http service that like is carrying these passports and it's adjacent to the telephone call in some fashion the way it's stipulated in 8816 there's a call placement service this is a web service due to upload passports in which they can be accessed by verification services like you know this could apply to basically any kind of messaging right um that you could build a web service to be adjacent to from vanilla sms to very complex you could do this for like facebook messages right there i mean that would be in scope of this um i guess they don't use telephone numbers so probably not we use it for whatsapp let's say whatsapp yeah yeah so like i just want to make sure people get it that there's nobody who's present at this meeting that really feels like this is too broad a scope to allow what that will be for doing message i think it's fine i think it's potentially useful i think we get some actual like leverage out of it ben thoughts um i i would like to keep it um one thing one thought i do have and now i'm trying to remember what the text actually says is that we the draft contemplates that other messaging types might use oob but it doesn't specify you know a particular binding to any particular kind of messaging i mean it alludes to like smpp right so it might be worth having some disclaimer language saying but someone else has to go specify how to do that this that problem is not solved by this draft it's merely hinting at a uh at a uh solution direction that someone might take but in general the idea that uh we could conceivably use this for messaging types that do not have some way to carry a passport in band i think is like is a road that we should not close yet yeah i mean again pointing to 8816 it's not like out of band"
  },
  {
    "startTime": "00:28:00",
    "text": "says you know and he puts any stipulations like that right i mean it's very much just like hey whatever communication system is you're using it doesn't happen to be safe like you know cps can help you out with that and i think we're saying the same thing here and i i don't really know that we need uh any additional kind of hazard tape around that to get that across uh john max i mean the one concern i'd raise is that once you know since you're doing a cryptographic hash over the message you better make sure that whatever you're doing is a 100 percent unambiguous way of concluding itself as a mind body and not you know anything like you know oh hey we did unicode normalization or something weird like that so yeah i mean it's a requirement in the draft now that you know whatever it is turn this into mime and like that times we're signing over and has to be unambiguous but like yeah i mean just it seems to be harder for oob when it's not when you have to translate it out of mind and then back in so but that's not your problem here i guess i hope it's not all right i just want to make sure we aired those two issues other than that i don't think there's much by way of open issues remaining here i think we got it and i think we should uh declare working last call has occurred and that we did this and we should ship it unless does anybody here think this requires more before we ship it hearing no sentiments i will leave that matter to the chairs to result and you know did anyone put anything in chat no no not a few seconds okay just making sure so john just one question this version is the one you think is ready to go uh zero four yes right so uh it's just a matter of i'll be the shepherd on this one so it's a matter of me getting the proto right up done and then we'll ship it i heard i heard an agreement to add a little bit of text that you probably"
  },
  {
    "startTime": "00:30:01",
    "text": "don't want to add i did just agree to that and i'm totally going back on it well like so jack would you be cool if we did that insertion after itf last call that would be a typical way to resolve this we just make sure we won't lose that it's what a 10 minute cycle to add that [Music] just as long as it's close to the top of your new stuff cue and next is error handling we're not done no he said the comments came in yes i've included so next slide uh just to go over the changes from the last version i did change ppt to ppi which maybe is better like passport identifier and i did miss uh adding a request for that um parameter name so i added that as well and then probably the most substantive thing that i have here is that i made the compact form the recommended form uh given the security issues that have all been brought up and i think we sort of discussed that at the last meeting and i think had talent of agreement on that um i have not removed support for full form but you know have all the caveats in the document for potential uh you know giving up of information if it goes past the you know for diversion uh use cases where"
  },
  {
    "startTime": "00:32:00",
    "text": "the full passport could go upstream from the authentication service that created that passport next slide so um there there have been some um list discussions that i wanted to highlight uh paul's came in um very recently um but i think are relevant to talk about christopher did have a comment um from a little while ago that i was trying to figure out that he asked about announcing support for the reason header specific to the specification or the stirrer protocol i'm not really aware of a precedent for doing that so i was hesitant to include that but certainly up for discussion whether and there's any thoughts that this might be a good idea i see roberts in queue robert i'm sorry i put myself into anticipating moving on to the next point so i'll remove myself and add myself again in a moment okay yeah i was just going to say i mean and correct me this is a good rubber question and then question and other sit mafia people here there's no like supported required whatever for a reason is there in any i i went glanced back at whatever that is 33 28 or wherever we specified reason i didn't see anything like that so so this is robert the you're very quiet again remember um it's it's been a constant churn though on the maps of having this implied support signaling thing and had it did come up the last time we were seriously punching through reason um and kind of remembering it coming in through"
  },
  {
    "startTime": "00:34:00",
    "text": "history info and every time we've driven our way through the conversation in the past we've ended up on that that kind of implicit signaling is not helpful and that we wouldn't do it okay i mean we do re a lot of the purpose of this draft was to align some of the things we did in 1074. um we had we did not put that in there that's not necessarily a good or bad reason to to not do it but i'd certainly prefer the path forward to not have to define that jonathan the next does anything go wrong you just blindly insert it i mean if somebody ignores it okay they don't know why you didn't know what went wrong but they wouldn't have done it wrong or wrong if you didn't insert it in the first place so yeah i agree yeah like if you don't understand stir um reason headers then stir protocol reason hitters then you just ignore them well this is rich shocking there are obviously presidents here which is 608 you know 608 reason codes 607 and the soon to be finalized 603 reason code for blocking of blocking of calls in the network which is shall we say aggravated certain elements of industry so i mean there is ample president for reasons reason codes yeah reason hitters in general it's just announcing specifically when when you send the invite that you're you're you support that and whether or not the far side should put in a reason center so i think slightly different topic but um"
  },
  {
    "startTime": "00:36:00",
    "text": "so technical apology here i've just lost a network connection and i'm the one who's running the slides so oh it's coming back let's see if i can get it back up there nope okay here we go yes thank you um okay next comment uh this is from paul um [Music] and i guess robert's probably the most relevant person to talk about this whether or not we should uh finish multiple reasons or i think paul specifically was saying have it at least get to working group last call before we move on with this uh going to working group groups well yeah this is robert i think that's silly um i wish paul were here um we've already got mechanisms for normative dependencies um making the right thing happen before things moved to rfc and i don't think this is going to be a high controversy thing that would cause this particular draft to have to change um as that one is is moving through if it turns out to not be true you know things going to be part waiting for it anyhow so you know it can always be a yank so i think we should just go ahead and let the um process move forward for this draft while the the other one proceeds now i'll apologize on multiple reasons i missed brian's call for the zip core working group zero zero at the beginning of june i didn't see it until i was preparing for this minute um that's in now i'll have a zero one in shortly that actually addresses all the feedback so far and i fully expect that we'll um i'll be pushing subcore to working group last call multiple reasons um"
  },
  {
    "startTime": "00:38:02",
    "text": "before august is over so this it's not like this is going to be a big blocking thing that we have to wait for a long time on okay yeah this is richard i just want to add and chris i don't know whether you want to incorporate it or not but remember reason codes may or may not have privacy implications and i've already seen this in 607 608 and 603 is whether or not you want to add there may well be some considerations here or just skip it but these do these kinds of issues do come up with verbose explanations of why you're doing a particular activity yeah i think the identified privacy issue was that we included the full passport that had you know uh [Music] you know the call the originating number and destination number um we've addressed that by recommending compact form so i think that's the only thing that could potentially be an issue there or at least that's come up as an issue so i think we're okay with that one uh next one is being more explicit about the use case for multiple errors or maybe even having an explicit constraint on only having a single cause code for each ppi um i think the rules for that and the guidance in 8224 is to only really there can only be one cause code for an error from an identity header so i guess the question is would there ever be a case"
  },
  {
    "startTime": "00:40:01",
    "text": "that there is multiple cause codes [Music] or or if there is do we want to restrict that in the future yeah i mean this john peterson sorry and i'm not using the q thing at all i should be better um yeah i mean the the constraint that's in rfc 224 really we intended that cause codes sip cause codes sent in backwards direction hopefully indicate repairable conditions right it's giving you information you could use to reoriginate this request and this time use a trust anchor that's supported by the other side or you know fix whatever your syntactical problem is or something like that um [Music] i mean prima facie there could be a ton of things that are wrong with any given like you know passport and invite that you get that would you know potentially necessitate multiple such cause codes being applicable i i guess i viewed it like you would do it onesie twozy but you know so i mean i mean i would be fine because this is the decision we made in 824 was effectively you know you're gonna have a single um expression of something that's wrong that needs to be fixed that you're sending back that's a reason for rejecting it it's also important to note there can be like cascading conditions like okay this is what i thought was wrong and so i rejected it at this vs for this reason then you send it through and it's going to go to some further element that will have some different problem with it that'll result in a different cause code being sent so i'm not even sure that it's possible to try to consolidate what all the multiple potential errors are associated with these things simply because it's an orchestrated service right yeah um so i'd be fine with with having that constraint but i also think it would it would probably be okay if you want to have multiple ones if you are aware of multiple ones there's no you know there's no no particular reason not to communicate all them so like yeah i was sort of taking the tact of like it's sort of already constrained based on the cause codes"
  },
  {
    "startTime": "00:42:00",
    "text": "that i already defined but um so no change is necessary and we don't know what's going to happen in the future to your point of cascading things or other things like that orchestrated services so i i mean i guess for the sake of simplicity which is usually the right decision to make i would do single so make that change is what you're suggesting okay i mean like i said if this one can go either way if you'd rather not change it i'm i'm just saying like that's this is what we made in issue 24. okay yeah i can make that change um next one should we not remove the reason header but only remove ppi um and this is only for the case of full form so at um i understand the request [Music] it allows for full form i guess maybe that gets back to the question of whether or not we think full form will or should be used i guess i'm curious about precedent for this one as well i'm removing a parameter versus a header and this is this is on the backwards direction from the ais to just to be clear well i mean again it makes sense to remove it for uh ppi and only for full form not for compact form right so ppi is the"
  },
  {
    "startTime": "00:44:01",
    "text": "parameter that holds the yeah the passport so i think what paul is saying is instead of removing the entire reason header let the reason header with the cause code go but remove the identifying information if it's fulfilled only if it's full form yeah that makes sense i don't mind putting that guidance in especially if i'm making changes uh jack um i guess my question is why what's the benefit of only removing ppi and only for full form is there any harmon just removing the whole thing all the time i mean the the point is just you can get away with it for compact form because you're not licking the information but you are liking it in full form i i i would have the same question you know is it useful information for upstream from the as that signed it to know that there was an error that happened you know without the identifying information but like i guess that could be if you if we want to flush out the logic of that you know do we need to describe why that happened and and all that good stuff so there are other dialogue matching indicators and a safe transaction then presence of the password but yeah now roman seems to be in queue what's up herman i'm just thinking probably better to remove it because that way if you have a feature implemented somewhere down the line from like some device like there is a there is something which is signing and then it's getting back to reason to move the reason passes this thing through and essentially whatever is the device upstream is not going to see any of the store reasons or any of the new features"
  },
  {
    "startTime": "00:46:01",
    "text": "so it's kind of like makes it nice and contained to the device which actually is implementing store versus we're just passing some reasons with the new uh reason pro with a new reason protocol somewhere upstream to a device which otherwise had uh doesn't know and you care about any of that so that's why my reason for removing it completely versus just removing the ppi yeah yeah i think that's actually a really good point like you know if you get the reason header with stir and you don't have a ppi you don't know what to do so i guess back to my comment of like um do we do we is that even a use case that we care about and want to give the details of um i i sort of yeah maybe might have a stronger opinion about just removing the reason matter i mean the whole point of compact performance you can always match that against the original passport you generated right so that's always but theoretically that you know if you remove it at the as that generated the passport the upstream as that might interpret the reason header won't even know about that leg of the call well yeah okay again if in orchestration you have multiple layers of vases and like one prior removes it and then you leave the recent header in that doesn't make sense but like i assume yeah i assume you should remove the entire reason header if you're the a.s that's consuming it right i think i think right that's that's i think that's complementary with what roman said um you can come back on if not but uh i certainly agree with that point any other comments there are we okay with where we landed okay um last one uh should we be more specific to only"
  },
  {
    "startTime": "00:48:01",
    "text": "allow stir specific cause codes and not other sip and the parenthetical is my statement i think yes um what about future proofing for nuster cause codes is 603 a stir specific cause code well i mean maybe it is now but it's certainly in rc30 g61 right um [Music] and so 607 and 608 i think we agree or we formally think what are the cause codes well six or three divine right and now it sucks up like plus well yeah well but well like you're asked a little bit shockey yeah you're asking about extensibility here uh in terms of cause codes and sure i mean that's what we always do and you know 608 and that abomination 607. i'll go we don't need to go there but uh yeah sure maybe how extensive and how extensive do you want extensibility yeah well i think for 603 plus that's defined as either sip or q850 so i think that doesn't isn't applicable here as long as that's you know it doesn't change so i think for stir going forward um you know any future start we we want it to continue to uh support those new stir cause codes if they get created right and hopefully they'll have this as a reference to make sure that there's no issues i guess i would enumerate the cost codes we mean so i assume you mean by stir specific cause codes are the"
  },
  {
    "startTime": "00:50:02",
    "text": "ones identified the h24 plus ones that are identified in subsequent specifications that are aligned with stir yeah plus 603 maybe plus 403 [Music] i think what i have in there and i would need to verify that but i believe i do reference 8224 as the and i think i do say in future stir related um hopefully i'm saying that correctly but i think for sip that should just follow sip and q850 rules of the specification so i think that's a different context i mean i know it's related to things you know does that mean that if a new response code is defined that it thinks it should be easter related it should say hey i'm still related so i apply here that says in that future specification well i don't know maybe this specification is establishing that i mean it establishes stir as a protocol i just mean that if a future response code wants to be in this category it can specify when it's defined because yes i'm also in this category so it's the same thing as all the other ones that's what i'm playing here does that make sense for everyone yeah that would be good um well john's reading that so i think what the action item is um yeah so on bullet uh three"
  },
  {
    "startTime": "00:52:00",
    "text": "um being explicit about only allowing a single cause code and for bullet four no change i guess right we decided to keep reason header removal yes i mean this john again the way i read section four i would i think we're gonna need to name at least a couple like other status codes that are in the scope of this like 603. but do we want them to use switch to stir as a protocol i don't think so yeah i mean i see i think i see what the use case is for it but um i mean again i mean because effectively the use case is i know that this number is supposed to be signed and this number is not signed how do i know it it's a metascope way right is is another way to think about it and maybe clarification that these are reason headers that are intended for consumption by the authentication service specifically uh yeah yeah i think i think that would probably work again with that that are both consumable by and presumably repairable by or at least the only thing the only thing that would help is if the authentication service repaired it right right that's the kind of things we're trying to express yes i can clarify that um i can make some fairly quick changes for those items and maybe we can discuss on the list i"
  },
  {
    "startTime": "00:54:00",
    "text": "guess just to make sure we get good feedback on those items i forget what i had on the last slide i think it was just uh generic yeah i was figuring i was figuring we'd need another round but i but again i could i could do that fairly quickly you'll at least want another round and then we can give people a chance to see it there right comment the results yeah think it can be settled on the list hopefully i think we had general agreement in the room here at least so thank you okay ocsp we are totally going to finish early today which is awesome we can go we asked for two hours for like the first time in several meetings and we kept running over and now we're not going to make it this is different entirely laziness part and chris's part for not upping other specs that should have been up for this um oh yeah let's talk about ocsp wow this is so exciting and this goes back to the heavy days of the development of rfc 8226 the place where you defined how to do certificates firster slide please and like you know at the time we had this notion probably we need some kind of real-time freshness check for these certificates and that the check would be a little different than what you're used to in ordinary like web pki or something why is that it's because the certificates that we defined in a226 have this new field that's called a tn"
  },
  {
    "startTime": "00:56:01",
    "text": "off list and the tn office can be it can contain a couple different kinds of identifiers one of the things we call service provider codes which are basically in north america these fancy codes that like identify who carriers are another thing they could take could contain are telephone numbers or lists of telephone numbers and these are like baked into the search themselves so that when you're signing for a call with the cert you have some sense of like what the scope of authority is of the signing entity and so there's an issue with that though when you start doing telephone numbers and baking them in desserts the problem is people's ownership of telephone numbers it's kind of dynamic there's all these factors like local number portability or you know we can make up like a million other reasons why um the a list that at one point in time was accurate is like a little different at a later point in time and so of course you could just issue new certs like all the time um you know we like the cachability properties of certificates at verification services in stir so we don't exactly want to put that burden entirely on relying parties and so instead we thought wouldn't it be great if there was some way we could build something into these certs where you could kind of ask hey is this particular telephone number because if you're a verification service you just got a call right call comes from some particular calling party number and the only thing you really want to know at that moment is should the entity that sign for this call be able to vouch for this number and so i asked ross and sean turner who i don't believe could join us today what's the right way to do that we talked about a whole bunch of ways to do that today we're going to talk a little bit about one of them which is ocsp we added this ocsp extension to the original uh draft version of 8226 that basically contained a url in it that you know you could you know ocsp extension in it you could use that would then let you be able to inquire with ocsp just pass fail this particular"
  },
  {
    "startTime": "00:58:01",
    "text": "tn is it in scope of the cert or not get back a yes or a no answer ultimately we decided when we were doing rfc 2082-26 we didn't like have enough uh incentive frankly to include that mechanism or initially in the scope of this work a lot of people are using crls because a lot of people are using uh service provider codes these spcs the great thing about having what speaking to your search be just like i'm etnt or i'm orange or i'm joyce telecom is that you're not worrying about that like individual level number stuff and so you know basically whether they assign port or nods whether you trust att or orange or who whoever but now we're actually starting to get into certificate delegation into the idea you might have an entity like an enterprise that owns like a couple thousand blocks or that owns like specific number ranges they're not a carrier they don't have these fancy identifiers that carriers have and you know as we've looked at the security model of this both in the iitf and in addis and in other adjacent places we've decided maybe it's time to revisit this ocsp idea next slide so like i had a draft about this that we broke off from 8226 back in the day and that could be next slide sorry and that draft uh kind of languished um you know as 8226 went forward but was originally a working group item because it was a child draft of uh what became 8226 but it basically showed like a model where yeah you're going to have like some ability to do certificate validation that will query back to the logical authority typically to the ca that issued the serp to get that real time check on the verification service side for both standard ocn sign calls like you see on the lower left hand side of the slide but most interesting in the middle of this like enterprise delegation case"
  },
  {
    "startTime": "01:00:02",
    "text": "excellent now you know there is one open issue i want to talk about today and this is the major thing you will see that is different from the current draft of this from the last one we've talked about two ways of approaching this and these ways model how tls has utilized ocsp in the past to either have this query by the relying party on the terminating side in our case the verification service or to staple it and what is stapling entails stapling entails that on the originating side and the signing side somebody would go and get or maybe have pushed to them beforehand um you know a little piece of cryptography that basically assures you the ca that issued the cert believes you know basically what the osp response ocsp response would have been if you went and asked on the terminating side you're just going to pre-generate that and ship it along with the passport to reach the termination side and this is really cool and there are some trade-offs around it that are beneficial for privacy and a bunch of other things but my proposal here today is let's not do that yet let's just define the way to do the terminating side query the standard modality of ocsp and worrying about the stapling later the main reason being otherwise we can kind of bolt ocsp on to what we're already doing pretty easily it's like just something on the terminating side that incrementally some people can decide to do or not if they have the capability to go and do this step get it to the ca get back their answer but like actually getting authentication services to acquire these staples building in the protocol machinery for those staples to be sent across it seems like a heavy lift out of the gate and i'd rather kick the tires and whether people are actually going to use this at all especially in like north american stir shaken before we start looking at optimizations like doing this for um for stapling and like"
  },
  {
    "startTime": "01:02:00",
    "text": "i'd also add we're separately exploring using short-lived search for this purpose that will build on like acme and stuff like that the properties of stapling and short-lived certs start to look real real similar right and it may be you know we'll say that if you want to push this to the originating side it might be better to do that with short-lived certs than to do it with stapling so i want to talk about that though does anybody have any feelings about this if we punted on doing stapling for now would anybody here or on the virtual world barf or that any thoughts yeah what's the point of this without stapling as in you you said the like kind of one of the benefits of politics at the moment is that they're very cachable um which speeds up verification but if you have to do an os ocsp dig every time then that kind of negates the point of that and you might as well just download a certificate yeah well i mean so there's a difference between ocsp and downloading assert especially if what's in the cert is really complicated i mean as as you probably aware jack a lot of this discussion on the out attic side is about people who don't want to do tn by reference right where the aia field contains url to a potentially massive list of numbers that are supported in the cert and this is being offered up as a sacrificial lamb to prevent that from happening right where instead of having like a massive list that's insert of the tns that are associated with some enterprise that owns half a million numbers or something um both for the sake of not revealing those numbers like the whole set of them to relying parties and for the sake of just making the actual cost of doing this rtt lower why not just use scsp do the single query saying like is this number in scope and get back up pass fail it's really about is this more optimal"
  },
  {
    "startTime": "01:04:00",
    "text": "than the other paths that we're considering for this because like i was happy to do tn by ref right i mean that's all in 8226 already and if your telephone number list is very simple and you aren't concerned about you know a relying party learning what the total set of numbers are that the certificate has a scope of authority for like you know tn bireftist works then largely people in addis pushing back on that and saying like no that's completely unacceptable that has like led us to want to do this with ocsp that that discussion actually ended up in an interesting place well the last time i was involved was actually ended up with everyone going byref probably isn't what we want we probably want something that looks more like ocsp or short-lived certs and the discussion actually went towards like ocsp is basically identical to short-lived certs and we already know how to do trouble assets so we should probably go think about that not that any thinking then happened as far as i'm aware yeah i mean on the bottom of the slide you'll see me saying we're to continue to explore the shirt live path separately and again i think as i said the the properties of stapling and doing short-lived search look real real similar i mean i think the issue is doing short-lived circuits the best way we needed we know to do that is acme and like that's an even heavier lift than any other development thing that we're entertaining to this yeah um i i guess um the main thing i was going to say was that i would be surprised if anyone used this without stapling because it doesn't give any obvious benefits when you have stapling it something gives you an obvious benefit but without stapling i would be surprised if anyone used it okay this is chris so can i ask jack"
  },
  {
    "startTime": "01:06:02",
    "text": "is your point about round trips i assume about cash abilities yeah yeah round trips cash ability that stuff yeah okay i mean you can still cash the cert right yeah this isn't a cert caching problem there's just you eating the rtt of ocsp on on everything but again like getting a short you know stapling requires the same thing on the authentication service side right it's just a matter of like which side pays the cost well and my comment was going to be um you brought up tn by ref is your point that inserting and removing tns from uh tm by ref is like uh revoking the ability for that tn to be covered by that cert that's the equivalence that you're making yeah yeah because i was going to say that they were for two different use cases but i but i think maybe that's what you're implying that we could use those properties to cover those things yeah i mean i think i think that the short strands for me there's no such thing as a free lunch right like there's there's really so many moving pieces between these alternatives between doing tn by ref doing ocsp and doing short-lived certs and like ocsb has the further issue of you know do you do it stapled or not and like my point is just we kind of know how to do this i think we have a better idea of how to do this without stapling than with it in the sense of what does it look like with stapling so this is every authentication service has a connection to a ca it's going to issue them these staples right there's a push or pull i assume that it's paul right in the sense of asses are going to dip the ca get the staple and then send it to the vs unless they can anticipate what those staples are gonna need are in advance this is exactly the same hit to call processing as it is to do it on the"
  },
  {
    "startTime": "01:08:01",
    "text": "verification service side it's just a question of like you know who does it and so i mean i i i'm correct is there some like benefit to doing it on the aside versus the vsi that i'm missing or like the staples need to come from the same place right as the vs responses to csp do and i just want to clarify on the short term sir you're looking at that as mutually exclusive in other words with those csp you have a long term cert and you're using ocsp as the mechanism to revoke it in freshness yeah okay and i'm not saying let's not do service i'm just saying as far as i know that means doing acme and like that you know or at least that is the best way we know to do that and we've tried to get acme down people's throats in this forever and it's been like a real a real problem i mean russ can you is there anything you can fill in for me am i am i adequately describing the trade-off for ocsp versus stapled and not in terms of how the rtt costs are paid except for one thing um and that is ocsp includes a next update field and so you can cache between uses of if you're validating the same cert on the verification side correct yeah i'm pretty sad yeah i guess that's true too so you can think about like staples have an expiry and so they can be at least briefly correct yes but i mean the fundamental point i'm making is the rtt cost is paid on one side or the other and unless you can anticipate on the asi the numbers you're going to need to get staples for there there is no rtt gain from stapling versus not it that will have exactly the same like call processing impact so um i think it's you mentioned about that short-lived chart"
  },
  {
    "startTime": "01:10:00",
    "text": "can be achieved the acme drops right which is tn authority token right am i correct so the short lift sir is achieved by manufacturing the certs on the as side this is not done in real time call processing right this is something you do offline like once a day or once an hour once a minute once a call i guess if you wanted but let's pretend you're gonna do it once a day right and so you only pay that cost for generating the short-lived cert once a day and so it does not impact call processing where you do pay the cost for that is in cash ability of the cert on the verification service side because the more frequently you update it the more frequently the vs is going to have to execute you know dereference the x5u and actually get a new server to validate passports and so the overall cost of that or less like and there's certainly less for call processing but like the what you know the cost you're paying there is doing acme star or like whatever it is you're going to do that's actually going to get you those short-lived certs okay so one other point i was thinking that how often these numbers are actually revoked or not valid for an enterprise right so that is also and maybe an important factor right to consider but there's a ton of entropy i mean again it's it's any given number could be revoked at any given time or leave the scope of certificate of something at any given time i mean my company new stars had a bunch of telephone numbers and uh the plus one five seven one four three four like 20 years right no nothing ever goes in or out of that they're just our numbers so sometimes these things are super static but then there are some enterprises for which it's actually quite dynamic especially when you look at things like um non-carrier entities that are cpas providers you know people that have very complex number allocations that involve lots of porting in and out and things like that but they aren't quite carriers like that stuff is just brutal and it's really those kinds of use cases that motivate us for this okay and the last one is that say for example if this is"
  },
  {
    "startTime": "01:12:02",
    "text": "in place right then do we still need that the short-lived mechanisms which acne can provide or we can solve this with this one so i i at this point i'm not counseling that we abandon that path i say let's keep looking at it let's look at this i think this is kind of easier to do which is why i'm presenting this today and not short-lived there is a short-lived draft it you know at least lays out what the major parts of this are this the fruit of this looks more low-hanging to me than any others and we need something i think to cover the delegation cases that are now more and more in the wild uh firster shaken okay i think uh jonathan i mean i just i'll say first to reply someone comment on that and then something i actually have to say i think the question important question is not how often does it change but how quickly does it change how soon do you know how soon you need to say yes this is dead after you know it's done you know which is basically what you're it's the you know dns uh ttl problem um but what i was going to say is if you're not doing no if you're doing the terminating side doesn't this and you're putting the tns and the oscp queries doesn't mean the ca or the ocg verifier gets to know every number that's telephone number that's calling that uh vbs that seems privacy probably yeah so i i uh i don't know if i have this on this slide in particular but yes it i'm not sure it's a privacy issue but it's definitely a is leaking information about the scope of certificates between corporations so stapling does uh largely mitigate that in the sense of because it's the authentication side that's actually one interacting with the ca for this you're no longer going to get the ip address of the verification service that is sending you the ocsp"
  },
  {
    "startTime": "01:14:01",
    "text": "query that's definitely a part of this uh nonetheless i think it's it's an easier path and it's something can like be bolted on to this again because when you look at it like changing the as side you know for this then what happens if some ases implement stapling and some don't versus what happens in the vs side of this if some vs's implement this and some don't right it's really a question of you know is the relying party in the driver's seat to this or is the a.s in the driver's seat of this i i you know my analysis of this and it's an incredibly complicated thing across the three options with all their sub options or how they can all be done is that this this is the easiest thing for us to bolt on is oscsp on the verification server side i don't know is this like where you need a hum or something are people okay with punting stapling is what i'm interested in hearing from the room group etc shall we do a raise of hands and medico i guess the question would be is it worth doing ocsp without stapling raise your hand if you think it is okay it's okay for us to initially specify ocsp without stapling john john so all you people think it's not okay well wait a minute he's still typing okay so either raise hand or don't or click the raise or click the um don't raise or do neither in which case you're abstaining so if we're only six people care okay"
  },
  {
    "startTime": "01:16:02",
    "text": "and you know yeah remember i'm saying initially i'm not saying we're not going to specify the state plan i'm just saying that is a lift and it's going to take war we need the game show [Music] stuff music that all right we're gonna wrap this up in 10 9 8 7 6 5 4 3 2 1 dismiss okay so eight people think that it's fine to do that and two think it's not anyone want to anyone want to speak for the those two that haven't already yeah who who still thinks we should not do this unless we do stapling please speak okay that seems pretty lopsided so next slide i promise i promise we will get the stapling part of it again i just think it's it's a lift um but i will say that if we're agreed about that i think this is probably pretty close actually like i i asked sean turner to take a look he sent me a mail earlier saying he'd taken a look at it he thought because we did this like five years ago or something is when we respect this out you still thought it was cool really russ i would love you to take a look at it as well and make sure you think it's cool i think you did the module or something at the end of it i do um you know but we could use more eyeballs you know make sure that this uh doesn't nothing has changed in the last like five years that we should have been thinking about um but not this this could be close to"
  },
  {
    "startTime": "01:18:02",
    "text": "impression so i i would ask the chairs to identify some reviewers who can take a look at this and explain to me why my previous statement about that was incorrect all right so we'll we'll give this uh a little time to for people to look at post comments and then we're not hearing anything we'll do a working group last call okay all right thank you that's all i got this is all we got for today that's all we've got that's all we have on the agenda except aob is there any other business people would like to discuss today oh hi jack i just want to sneak in a question that i asked on the list and didn't get any response to which might be because no one knows the answer um in the certificate rfc the tn orth list is uh only non-critical which seems like a massive problem because anyone ignoring the tyr northlist um does not correctly understand um the scope of that certificate and i will almost certainly be wrong russ i'm looking at you man i know which extension oh yeah it's that's interesting and none of it's critical right none of those no stir specific extensions are critical because we felt at the time anybody who got one of these would totally be part of the system and understand the ones in the base rfc we didn't think but if that's true you might as well mark them as critical right i don't think it really matters for exactly that point but it just seemed very odd to me yeah i mean well that was the thinking"
  },
  {
    "startTime": "01:20:01",
    "text": "yeah thus far we've imagined that these are very specialized you know cas right that are responsible for this that anybody's getting anything issued from them or indeed anybody who is seeing anything signed by them like you know has to be part of some closed or at least curated ecosystem are you asking to open the rfc oh okay just to be clear i will say that a focused update is an option but my second question is who wants it bad enough to write it yeah because if you want it you volunteer yeah that's that's not revised 8226. that's why it's just hearing it'll happen eventually this will all go away eventually but thank you jack any other other business there's like a lot more stuff we need to do we really need to get some energy behind connected identity it's something that um you know i i think you know chris actually gave connected identity a read uh this is the rfc 4916 update draft and i think he came away with a lot of the same kind of dispiriting sentiment which i have about it which is that we really need it but it's really clunky like and you know this is because original 4916 was clunky um because it's like hard to solve the problem of how you provide you know something cryptographic in sip responses that like can have any meaningful impact on sip transaction processing there are some very technical like stupid sip reasons why that's true but it basically means"
  },
  {
    "startTime": "01:22:01",
    "text": "we're restricted to you know putting passports only into sip requests not just responses and like that means we need pracs and like all this other stuff and i just don't know if people are going to do it and like i don't you know so looking at it i'm wondering do we need to figure out something weirder right that is weirder than john elway was thinking when we did 4916 that we think people would actually implement yeah do we want to discuss so i think part of the reasoning there was also thinking about the whole messaging space as well which is a different interaction model than you know telephone calls and usually that relationship is established pre so like can we think more about that in terms there is a section in that document that talks about um i think non-media invites or something like that where you essentially establish a relationship we need to make sure that you can correlate that from the actual call itself and some other issues like that so i think there's some things to think about but i think that's the perspective i was thinking about like that we might actually want to use these in different contexts uh as a maybe separate mechanism yeah because i mean if you if you know sip and you look at this rfc 4916 update i mean it is full of like medialis dialogues that were then gonna update and upgrade into like media dialogues and because this is our best story for like how to actually make identity in the reverse direction and um i don't know how much appetite is there to go off the sip reservation on this because this will end up going to support whatever it is that we do like because it's really about you know"
  },
  {
    "startTime": "01:24:00",
    "text": "all the same transaction mapping stuff that we got into post turf p and like you know all that stuff that like led us down this like crack path to get like um yeah well i mean effectively you are the question is do you want to do a before call setup right that's the problem you want to do this in an early media phase because you know you you want this ideally to be pre-alerting and that's how you end up with menialist dialogues and you have to make assumptions about your ways pressing things and like it's really really clunky i blame john elway who is not here and for that reason i'm going to blame him entirely well i mean it's not like we actually have to solve for a fetus office it's just like you know it's really just the simple fact the problem is if you get back you get back a sith response that tells you like this is the identity of the other side and the response is broken in some way there's no way to reject a response right that's the fundamental problem like if you get back 200 okay or 183 with early media okay you know and like what what is actually in it is a passport and that passport does not support you don't support a trust anchor or there's something like wrong with the number that's being asserted and like that then and of course you need the identity track of getting the from header field to correspond to who you actually reached instead of the original transaction mapping identifiers that's how you end up with like prac and it sucks i mean it's just like this is like such a horrible awkward way to do this and like we need to go back to like a sip level drawing board to fix it but i don't know where to fix it"
  },
  {
    "startTime": "01:26:03",
    "text": "so i think we're effectively into what would normally count as offline discussion it's true so we can just clear this aoe let's just turn this into offline discussion thank you so much for coming and anytime you mention her fp then beer is required yes okay then thank you very much and enjoy the rest of the idea thank you yes is so robert said that mary was poking around and changed it to 80 and watching it that somehow committed the wrong email unless"
  }
]
