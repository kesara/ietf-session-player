[
  {
    "startTime": "00:00:04",
    "text": "questions alrighty good afternoon everyone it is time we have a packed agenda so welcome to the trusted execution environment and provisioning and for the first time in a while you have both of the chairs here present and live so thank you hello everyone so David my colleague myself named again um you are attending the tip working group um by now you should be well aware of the note well which speaks to the intellectual property um and the ietf processes I will let you read the slide in the interest of time um meeting tips the only thing I'll call out but I think everybody here is following protocol for those in person please make sure that you are wearing your masks keep your audio and video off um we are running questions through the online Echo queue so for those in person to respect those who are remote please get on the Queue before um coming up to the mic okay code of conduct I think we're a pretty chill group so again just keep the discussions professional um okay so I think we've already gone through this thank you Peter and Chris for being volunteered to take notes um very much appreciated so agenda bash and uh"
  },
  {
    "startTime": "00:02:03",
    "text": "will apologize to the presenters we had only requested 90 minutes as that was all that was needed in the past so oh so while um you all do get to present we had to cut your times a little bit short just to accommodate everybody who's presenting so as you can see we have a fairly packed agenda um we cannot take any new items for presentations but hopefully this is a time to bash the order and the time is that okay going once going twice okay so with that we can go ahead and get started and we'll have Ming I presume you want me to you uh yes hi foreign quicker summary here is a last item so we have a draft update from uh draft version 18 to 19 and this also has been in last call for several sessions right for Thomas and separate itfs and then for this update I would say um they are multiple review reviewers comments I try to address we have addressed all the comments and I will receive the many feedback one for the um things here I need to mention is uh I didn't know um some of the comments because they"
  },
  {
    "startTime": "00:04:00",
    "text": "were not in a cheap email thread that there was a tracking and I found out from a teamwork group page I find several comments and you can see the um from 80 from a circuit directory from Ben and Schwartz and uh from Paul they are uh they give comments over old version 16 but still a lot of applies so we took those uh comments and uh all replied so they have it and then we have uh Bob Hollis and honest uh comments over uh version 18. we also have a comment from Roman at the Robert uh Walton so totally about seven people's comments and this adds up there's a quite some comments there's a uh many ones I would say highlight it's a one is a Security review because it's got two from a Security review that was from old version but there's some still the sum and we um we find still applicable and we made some updates uh majority of them are um minor updates so we'll go with some of them so I have about that um 18 slides next let's try to run fast in 20 minutes and we'll see mostly the main ones will talk yeah the next one all right so this one from Ben's comments uh is from old version 16. uh the main question about the name and terminology about uh trusted application uh the code toss application and we use ta everywhere and his suggestion we should call The Trusted component and the second one is about the question he has but um contrasted it doesn't look right uh objective to maybe it's isolated so this"
  },
  {
    "startTime": "00:06:00",
    "text": "is the old one now we had some email uh conversation and uh also a discussion on the first one about the code Choice application at TA in a documentary said uh uh three things first one is uh protocol spec already using traffic component and the second one is the TA the definitely I could talk with our definition conversation we already said this Choice application May means application or in some application application component so we already space for that third one said ta is also common industrial terminology in terms of term um we uh what's changed we are at is we add the reference uh in the spec so when we said application um component running inside T refer that to for example a global platform or open source te they are all called ta and as a trans application so so we still keep that way and we better with definition we cover the post so that's a part of the the terminology aspect uh with regard to word trust the application words oscillator application or actually component um we discussed decent goes that one it's a still uh right uh modifier to set because you trust the um components at the time in stores right still is trusted um so that's for this one any questions I'll just move to next slide all right then if you use this minor uh clarification questions uh maybe you got a nice area"
  },
  {
    "startTime": "00:08:01",
    "text": "first one I've been asking for some clarification maybe some discussion about what the device owner can do but I would say this one is was an older version 16 in uh 17 18 later and we added definition but device administrator for a while and in the device administrator which is clearly specifies what the the Privileges or rules are the ones the demonstrator has and the owner has right then with specify already is that the decision maker is the master demonstrator and secondly trust applications uh installation delegate to the time right time has a privilege to install or we have a demonstrator so that clarified then uh bing has several uh suggestions about the reward change uh for example here the right of uh verified rights of developers working from rights as to permissions for rights to Broad right it's a kind of a loaded eye term uh next one I have some incomplete sentence it's a that they um the installation talk about key installation says it's uh needed so that uh untrusted app can continue so it's instead should say installation of untrust app can continue I can complete um then there's a one sentence where it's considered confidential then we didn't specify by whom and from who that uh he said we add some more information so we took a suggestion and making a modification in a below the number four or I said for example by whom right for example when developer who want to provide ta without revealing is equal to others as a case uh he then I"
  },
  {
    "startTime": "00:10:01",
    "text": "by the way I would say this uh um comments below I don't go through by person I go through sections Section 1 to section 9. so section one is also common from a romance about uh about the wording says danger of attacks or the consuming tax and we change your word from danger to risk of tax some just some of that criminology change there so making them more readable or excellent and next slide so now we're just think just wanted to doesn't have much of a comments section three uh sorry for the formats uh since there is a use case examples this one is being asked say for trusted user interface and the question is anything um example in a mobile device it's a smaller mobile device you have trusted feral that is not actually performing The Trusted anode from normal uh OS it looks like uh it's a theoretical there's no example and then then uh David you know sex David here the seller has comments yet so we know you for Point of Sales point of sale devices payment devices then it's extensive to use that uh need to trust the UI right over the top p and so on so we uh the changes we expand the description says trusted usage interface maybe using mobile device or point of a cell device we added that point of sales device there so he uh for that because this is a permanent use case anyway so we should add that so that was added and next please iot use the case again about the examples several classifications actually"
  },
  {
    "startTime": "00:12:00",
    "text": "well one is uh Ben commented what kind of give example right which is iot devices that um cannot allow ieos to run a certain accurators and uh Inez Robles um asked as a different one says what kind of artistic devices fit to run deeper protocol that way so what's a capable he was suggesting whether we can specify particular classes for example use IFC 7228 um and more uh other discussions therefore I just want what classes of iot devices say that RFC 7228 don't really Define the capacities about whatever fit the protocol what it says in general we don't specify that we just leave that to adopters right they can decide and they could check oh the code right the code capacity could resource need that the device will capacitor face to that one now with regard example uh being asked and there's a multiple discussion from uh Dave and he has a demo some devices which can provide that brand has replies in a mailing list so what do we end up is a you know as a update in the draft we added the global platform t as a reference and we add that example as it was sitting in a paragraph you can read here for example glow plug for T use the term transferred for all to refer to such things which can be accessible only from T and the concepts used uh in some complex devices today too so"
  },
  {
    "startTime": "00:14:01",
    "text": "that's as of this comments and next slide this is the most of the controversial I would say most important one is update um being as part of Security review you said well we managed the trust anchors we inspired to trust right what uh whatever time is hostile time right and Brandon also um has comments from last ITF about the straight description we already have in section 9.5 I talk about a compromise time right earlier was pretty brief one line the third we felt that we need any more but the potential mitigations what uh uh administrator what a system can do to mitigate this right um as a part of a threat so there'll be a long revision here as I quoted here it's pretty long I guess I don't need a rhythm through um the first line is the original one then remaining we added moreover say potentially uh candidates as few ideas to mitigate stress what a tip agent a device owner Dimension can do so what we added a largely below is that to mitigate the threat tip agents and device owners have several options they included but not a limit to this we have just a few kinds of that because we cannotic it's also list also implementation specific um and everyone will say oh you can apply an echo right to the camera key so in the right side so I can limit the uh threat or damage from compromise attack right Echo can control that um or use a transparent lock that's more of a company compromise time right and"
  },
  {
    "startTime": "00:16:02",
    "text": "transparator log can um expose um what that ts are using and versus what a Time published whether they well legitimate time they will publish or what do they will support if you compromise the ts are not in the list it discovers that there's a mismatch this case a compromise case time case um also I could use a method for example remove the excitation of the time right reverse other side So today we're going to remote acceptation of device two time now you can do time to device as well in other ways um there are other ways whether we just list several Fields possible at a likely feasible a regular Hospital time that we're a Time provider intentionally abuse the devices right abuse digital devices not a compromised in such a way but hacker but I would consider is we have multiple discussions with um within the authors also uh like Brandon so we felt that uh there's a hostile time is equivalent to a computer time it's a special case of a comfortable compromise tab in this case the people and team are the executives in terms or management is compromised right so so we consider it's a um it's equivalent and we use it why this is the same um category come from times right to cover both foreign"
  },
  {
    "startTime": "00:18:43",
    "text": "just to make it completely explicit I think this is just straightforward uh next slide please um this was about the classification uh for that who contacted food first uh this was from Bob Haley comment uh we said Pam cannot contact team the device right time cannot contact a tip agent either for the firewall for my reasons with a usually TV broker initiative contact or we have a device tip agent talk with time and a few questions uh says that uh where the tip agent must ask the broker to initiate time or broke condition only when trigger that right we can trigger that so we revised we revised this uh paragraph as it is largely David made a change Dave do you want to say you know what tuck this one or I can read here he says he's good I've just read that so I guess you need to speak otherwise okay"
  },
  {
    "startTime": "00:20:00",
    "text": "uh so we just says um explain a little bit more it says it's a protocol um architecture is a particular highlighted architecture in figure one a communist case well uh as other less strict restricted by leaving details of this appropriate team to the uh deeper transport protocol for example one defined um that David is back right people over HTTP um that's the main one and it would describe uh to explain says that patient um Rusty when it is running in a user devices inside devices one uh firewalls will normally uh does not allow external access to it so then we usually um we need a kind of a tip broker to initiate right to initiate that contact or we have a tip agent so that's a I don't need to read a little word by word um so this is just for clarification is no no different major material change I would say next side next slide please uh this one is also uh it's an editorial change uh thanks to Bob Holly um and notice that uh notations as an early I didn't put the early one only one called app dashing one app dash 2 ta without Dash ta1 tier two whether Dash he said online let's make it consistent I will use a SIM format right app we already called the untrusted app let's call it UA right so then Everywhere You stash Time Dash on time Dash two so this is this is Kernel one we I made a minor changes everything just uses that format ta Dash UA dash time Dash and I want to so that's the update"
  },
  {
    "startTime": "00:22:02",
    "text": "notation change uh next slide please uh this one I do need a cloud um Bank commented on the use of a must in multiple places it would save examples say implementation must support encryption now the algorithm must support the integrated protection that must we use a low test a lowercase I highlight this from here we you know actually documented we do not use uh uppercase must rather than some spec or some well we do use in some respect too but for the acute document which is not intentionally um there's a debit card it's a uh comments uh you know very less online and we quoted here um I guess some part of ieta which is some people will have some feedback they don't always like to use that uh uppercase and we took that feedback so it's just to use just a normal word regular case so that explains I think that the main one the others are uh just a tutorial change I'll just uh let's skip this one let's continue next slide please uh clever supported in quick goodness that uh this is from Roman uh Roman um comment support encryption his question about encryption for data address or data in motion we we make it explicit we add one says this in question purpose is to uh used to ensure and no personalization is sending it clear it's a data in motion protection uh mm-hmm next slide please uh section 4.5 is good catch by two people a poor and a robber will both"
  },
  {
    "startTime": "00:24:01",
    "text": "said is a sequence and I don't know really right and a really nice that a good catch here but he said we will adjust it it's a it really says when the installation normal app happens it felt uh from there and then that uh trust application usually happens that one after normal app is installed it may come with a long ways together maybe bundled but step is just yet I have normal app happens names start to install The Trusted application so that in step one we have an enp two-step we just make it after a then a user can already download the app and install and at that time if you need tats already supplied to time right so that timeline here just to make is a installer sequence this way it's a it'd be more natural than the origin background so you can see difference already step one three four here then two a two B is a it's a three is in mid of two and two B so that's the change instead of the Three Can Happen must happen after B uh it's about right but you know this one's also um maybe more natural foreign next slide ah this kind of major change so the current paragraph says a in section 6.1 but rule of a TV Brokers the first line says a cheaper broker abstracts the imaginative change after makes change uh Ben and Roman both the commented well it's a rule Minister for defense email what that means program what does object"
  },
  {
    "startTime": "00:26:02",
    "text": "mean so we uh David referred to this paragraph So we just remove word app track to explain it in plain language so we just said tip broker interacts now so just what what an abstract means there's really explaining intact with cheap agent inside T and the job is relay and message between tip agent attack the remaining follows right I would say this uh no um material changes somewhere more a little more explanations and what the abstract means it's really just a defined uh flow and it's a role and next slide please hey man you're running over so we'll give you one more command if you can wrap up okay okay yeah yeah and skip the ones which you think we can review it offline right can you focus on the slides which you think the working group needs to hear right now skip to the slide which you think is a very critical comment hello someone speak I was saying uh can you skip can you move to the slides which you think are quite critical yes yes next slide just roll it and next slide uh next slide because those are all the you can share uh sliding next slide because others are just a minor update um so class okay or just a class of devices we add a reference to the middle one means the class of the class of devices refer to it in adaptation next slide I want to go to the next slide next slide yeah this one's uh already covered this one I just said we did a made update inclusive language this is from multiple production Lars and"
  },
  {
    "startTime": "00:28:01",
    "text": "romance and we change many in the middle to manipulate in the middle okay so I just said that one is a maybe a little new terminology and a new but uh they will look up uh in some different uh specs it's like a manipulator in Middle it's a well accepted one retain the same uh acronym mitn right so still started with f uh that's about it yeah next slide of a niche I think we'll skip it so you can go to the next slide but it's at the top yeah this is a minor so it's just for reference purpose that's all I have thank you okay thanks yeah okay [Music] go ahead Brendan I I just had a quick comment on that last one the most common terminology I've seen has been on path attacker okay is it okay yes um yes so this is and I'm going to talk about the hackathon and next next please foreign hackathon unfortunately I'm only wrote something I was able to pick up and many of the early pages is a more about the"
  },
  {
    "startTime": "00:30:02",
    "text": "clarification we had to talk and doing the hackathon yes next page please and yeah these are pictures and we're running out of time so next please yes um wait yes I I have some of the points um planned for the hackathon and we're going through of them in the from the next slides yeah next page please yes um yes um this was uh something we did talk at the iet114 and heavily after the one one four we wanted to have a way whether 10 have to read contents of the attestation payload with without opening or verifying the signature and we have to revisit this again um uh for this this hackathon and this is the detail of the conclusion so we do not have to revisit again so we um the time will read attestation payload format and then if the matches with the uh attestation result string described in the slide then Tamil have interest and going to open it and process it other than that we'll pass the contents of the attestation payroll to the um verifier um it yes yes and next page please um there's a hand Muhammad Muhammad you're in the Q"
  },
  {
    "startTime": "00:32:01",
    "text": "yeah so do you hear me yes okay so so what exactly do you mean by if you go back to last slide please uh what exactly do you mean by payload it's an undefined term I don't see it anywhere does it mean the in the in the context of t s c x does it mean let's say the code or does it mean the report or what exactly does it mean because you go back to the uh yes um it's a b string so it's it's a binary um it depends on the implementation if it's Opti or sgx or yes um yes yeah for scx what exactly would it mean excuse me so so for sgx software guard Extensions by Intel what exactly would it mean is it Dave is coming up to the mick to help sure this is Dave Taylor um the word payload just by itself just means uh in the middle of the slide there you see the two lines of the question mark in front of them it's the name of the field in the teeth message um that doesn't answer Muhammad's question but that's what that the first question was what does payload mean okay and so uh there's two Fields right there's the payload that's a byte string you know a bike blob and then there's a text it's a format that tells you what the format of that fight Club is so the second question is well what if you're using sgx okay if you were using sgx this document doesn't tell you the answer to that but what does say is that if you were using say an sgx quote then you would Define a text value for attestation payload format that says this is an sgx quote and then you'd put the quote into the b-ster this document doesn't tell you what the text values are and the B Star values are it provides a way for people to register them and so if you are using sgx you could do that and then use these two values where text would be you know sgx"
  },
  {
    "startTime": "00:34:00",
    "text": "quote or whatever the registered value is and then you put the quote into the bistro field in the attestation payload hi this is Hannis um I wonder whether we should use this newly sort of published draft in the rat smoking group on the message wrapper which allows you to kind of do exactly what um what is described on the slide to wrap um these rats conceptual messages which evidence and attestation result uh certainly are so maybe worthwhile to look at that I would send a it just occurred to me now as as you are presenting it it uh missed it previously which was for what it was also discussed uh with net and in the context of sgx in the in the CCC yes and yes after the hackathon yesterday and the day before yesterday we talked with the um Ken and isobasan and probably the the implementer of the time will be reading the payload the format whether the Tam is interested for the really the opening signature of the of payload or not probably is the right way of the interpretation of this um issue yes okay and and next page please yes um yeah I mean I'm not I have I need to go forward so this is uh originated for a very long time from IIT 105 and it's about how um started the implementation of the background check model so um what will happen in the combination of passport model and uh"
  },
  {
    "startTime": "00:36:01",
    "text": "and we did discuss in the IIT 114 that um if we could have a passport background check model and passport model combination implementation in the tip then we will uh we we have we had to add another uh message to send the attestation result to the radaring party then we we decided to put it in the update message and we did add a format for the putting the payload in that update message but we didn't really talk about the in the draft so yeah this is the this um explanation again and we might able we might it's a based on why or somebody else might have had a little bit of description in the um draft later with the pull request okay and next page please yes yes yeah this was this is also something um we've been talking between the 114 and 115. we decided not to use Seaboard Tech on the uh tip message and uh and but how about the suit envelope initially the draft was using tagged suit envelope and the conclusion is not to use this suit envelope and yes yeah okay let's go to the next page and this is what almost the date was doing in his implementation so at the last it we decided to have um what uh decided what is will be Monday to Monday three in um authentication algorithm we're going to use and es256 and eddsa was decided and we just uh and that was a little bit uh related"
  },
  {
    "startTime": "00:38:04",
    "text": "with the query requests having needed to have multiple um signature on it and we decided to use course assign which supports the multiple signature instead of course assign one which was which only uh have one signature on it and yes and then we need to uh and many of the people is relying on the girlfriend um Lawrence implementation and yes we're just going to proceed uh supporting it next page please and this is fixed and see details syntax error which I was talking a little bit in 104. and we did finally fix it it took me a little about three or three days and had to talk with the Brandon and many people in the Carson and to tackle it and made and uh and also I wrote the description how to go through to check the tip protocol cddl syntax check on the readme so probably it's okay now but but it however it does depends on the suit uh suit message has need to be also uh requires City to syntax error error so probably in the future where you will go split the make file command just going through the syntax check on the tip message itself or uh with or only with the suit uh related message foreign yes next page please yes um yes this is go back for me it's more uh going back from otrp age when the tip was using um it had a feature to delete the trusted component and we decided to have"
  },
  {
    "startTime": "00:40:03",
    "text": "a way to delete with using suit manifest for The Trusted component then what do you how to specify the the target of the Twisted component what kind of ID we use and and the suitizes the benefit of the suit digest is it's a hash value inside so if it's any of the value it changes with the in the binary and then it's easy to spot spot it but we yes at the conclusion we're going to use suit component identifier identifier okay and the next page please and there's many implementations are going on the table so miyaza song came attended the eitf for the first time so he was implementing passport model on the protocol which is very beneficial my implementation not doing that and any other people so and it's uh yes and it has a so four sequences he didn't seems like to finish all the fourth sequence but um it's uh it's making a progress for making the draft complete and it can is uh yes he was he he was I think it was yesterday or the day yesterday he made a huge among us a lot of uh the pull requests um yes and and yeah yeah yes and the isobasa was yes adding remote attestation and was also clarifying many of the features of the on the tip combination with um rat's activity yes and uh yeah the summary implementation many of the implementations link is here and the solved topics it's not only these"
  },
  {
    "startTime": "00:42:00",
    "text": "because it's already something I was able to pick up and so far I was I I was uh known well by watching the GitHub with five pull requests and updating the draft and also a new issue was uh yeah filed like three I think yeah it's four now [Music] and this next page and next page there's two more additional page for the who wants to go through um by yourself um the next page is probably the order links yes um any question please that was actually great progress that's good thank you all right a couple of these slides will overlap with uh Akira so we'll try to go through those uh extra fast and leave the time for the other ones here all right so T protocol a bunch of co-authors next slide all right so there's three sections General things things specific to suit and things specific to rats so here's the first section which is the shortest one General deep protocol issues all right so there was a discussion in the past or an issue was which tape messages are protected with which Cipher Suites okay and so uh after the first exchange it's really easy because once you've done negotiation you use the negotiated one right but how do you do the negotiation that's where this one comes up okay we do specify the same Cipher Suite is used"
  },
  {
    "startTime": "00:44:00",
    "text": "in both directions okay so one the one that you're using for signing is the one that you're using for for checking and so on um we don't preclude if you ever needed to be um different in the two directions then an extension could do that okay um but we didn't need to do that now in the base spec S as um Akira mentioned The Courier request which is the very first request right since you don't know what the other side has then you need to try both um so the Tam must support both algorithms both es-256 and edgsa and the device gets to pick one okay it can choose either one of them but it has to do one of those two okay so the first message that comes from the Tam has to try both because it doesn't necessarily know what the device has and so this is where it switched to say cos a sign which allows you to sign the same message with both algorithms okay there was four other Alternatives that were considered and discussed but that was the one that um out of the people that were commenting on it before multiple people like that one the best and so that's the one we put into the spec and then started implementing and the only implementation issue we saw as Shakira mentioned was that t cosay doesn't yet support the ability to do eddsa with uh cause a sine it only has es256 and and so on so that but that will be coming we said we're not going to change the spec waiting for a single implementation where the implementation is in progress so we'll just do that and encourage implementations okay and also clarify this is before that the first response from the a from the device itself uses the same uh mechanism as as later messages before the spec was ambiguous as to is it actually signed or not and now it says it is it's the only weird Corner case is if for some reason the uh Tam sends a message and doesn't put the mandatory ones in its list of signatures um then of course the the device is going to say well I don't support either of those I support the mandatory one and so we allow this case that says if you end up having to send an error unsupported Cipher Suites which would typically happen if the T if the Tam"
  },
  {
    "startTime": "00:46:01",
    "text": "supports the mandatory ones but then it really wants to upgrade to a much later one right that the third one the new the the new and fancy thing and it says I only support that one can you support that one it says no I support this one and so that's for that corner case it's not disallowed so it's it's just there okay next okay unrecognized heat messages okay so let's say you have something that uh sends a teep message but the message number isn't one of the regular six query request corresponds update error success what if it's an other random number what do you do okay or anything else it does that violates the spec what do you do if you violate the spec well there's the iup uh document that argues that um anything that says you just drop invalid messages that that's actually harmful because it lets the bugs propagate and stay in the wild and instead you should really reply with an error so to put the pressure on the people that are doing their own thing the implementation is doing the right thing and so uh two sides the first part is what happens when a TP agent includes an illegal message receives an illegal message from a town well we've got an error message so we just change it say you said an error in that case Okay so that's what the that's what the device does if the Tams has some that some something that's like a bug okay next slide so what do you do if the tip agents in something that's bad so what does the Tam do right because the The Tam everything is initiated from The Tam and then responded to by the agent right and so the Tam doesn't have a I'm going to send you an error right it can send a query request or an update um but that's pretty much it and so previously it said it just drops the message if it's not valid uh and you can't send an error message uh but the Tam can actually update software so if there's a bug in the type agent the Tim can fix that by setting a fixed version right and so what the document says now or the proposed text ad because this is not fixed in the last one that's posted uh this text is I think in the GitHub repository pull request says it may also do additional"
  },
  {
    "startTime": "00:48:00",
    "text": "implementation specific actions such as logging the results like if you don't yet have a newer version to install um or attempting to update the tpage into a version that does not send invalid messages okay so my login says please get a new implementation whatever if you've got one then you initiate the update to go and fix the thing right now to stop sending you the bad messages okay so that's that issue all right there's a bunch of editorial things that I'm not going to go through here because I believe the person that brought them up so Michael Richardson Thomas fasady and so on I think have already act all the responses and there tend to be editorial so if you want to talk about one of those ask me at the end otherwise I'm going to go on all right so let's talk about things that are specific to suit okay and so now I'm going to call talk go through a couple of issues about the relationship to suit yes you wanted oh yeah questions or somebody yes please uh Mike hello Michael um I just want to say ticosi does support eddsa since September uh edgsa yes and in fact during the hackathon I was actually using edgsa obviously um but I can't use it with cos I sign and so um yeah a sign is currently only in the dead branch and eddsa is currently only in the main branch where it actually exists no branch that you can use eddsa with cos a sign yes I know that he was going to add so yeah we actually did get I I did get EDSA working during the hackathon I just couldn't use it with the query request message all the other messages after that eddsa was working great I actually did that was one of my main tests on Saturday was to get EDSA working with all of their messages and my test passing and they all worked great so thank you for the EDSA support in t Jose all right use of suit next slide okay so uh for those of you that were in the uh suit meeting and our hour and a half ago uh Brennan actually talked about this one and so this is the more details as to where it came from so Ian uh teep"
  },
  {
    "startTime": "00:50:02",
    "text": "you want to be able to uninstall things that were previously installed so I've got some trusted applications that I want to uninstall and so uh the unneeded Manifest list is what does that and whether it's a suit digest or not a cure mentioned this I'll come to this on the later slide so ignore that for the point but you can specify here's some manifests to clean up okay and so this works as long as the installation manifest already includes the unlinked directives right otherwise you have to go off and get a newer version of the Manifest that has the unlinked directives okay and so what if that hasn't happened yet or do you pre-cache it so there's all these weird things it says what if I don't have a newer version um I can't create it myself because that was created by the software developer that created that manifest maybe okay and so although there could be ways to do that this is the most natural way to do it is to say to encourage the Manifest to install stuff to also have the uninstall commands so that I can just reference that same manifest and say that manifest that you installed before just go and uh follow the unlinked directives and clean it up because you've already got it okay this also solves the local admin case that says okay I put something down on a particular machine and and now not with the teak protocol but if an admin walks up to the machine let's say he can get to a command line or some other variation of of remote you know um remote login um and then you can initiate a local uninstall without using the T protocol because the Manifest is already there right so 10 tends to be most useful there and so we put this into suit trust domains and that's what Brendan presented in the T in this you working group earlier so this just says this takes a dependency on that and this is this is in draft 11. so next slide ask you some questions okay Akira mentioned this one we stuck with the suit envelope untagged I'm not going to go through this one because Akira already did unless there's questions oh but the one question that's don't go on the next slide because there's a follow-up question on here which is um as part of that it came up it says well the only case that you"
  },
  {
    "startTime": "00:52:00",
    "text": "might want the thought was the only case you might want to tag there is what if you had other C board-based manifest formats you ever want to allow in the future okay and you want to do that without waiting for an extension and still use the Manifest list to reuse the Manifest list and the discussion was to uh not do that because you can always do it in an extension but if you're going to eventually allow other manifest formats then you might want to do things that aren't just seabor so for example if you wanted to be able to pass an MSI your APK or something like that as your manifest right and then you'd want something that wasn't c word based and so you would need something else anyway and so the the suit envelope tag doesn't help you with those right and so we said that's that's why we're not using suit manifest tags and so for other manifest formats we'll leave that to an extension um and then that could allow you to use other manifest formats if you wanted to use it with you know apks and sis whatever else so but not in the base document okay so next so that's that's the proposal here if anybody has an immediate demand speak up but that's the resolution right now is to say uh the things that people need right now is in the base spec anything else is an extension document uh by the way Sue took the same approach or the suit manifest so that okay um all right the suit digest okay so I said I was going to come back to this one suit digest or suit component identifier is where we ended up but cure did mention this and uh the more details there is that we ran into in the hackathon was the suit digest if you have a case say a device with multiple tees okay so let's say you have a te in a network interface card or something like that and you got two cards or you have two different processors or you have two different areas in the same processor and you want to take the same component and install it in multiple places like I want in this line card and in that line card you can't do that by just saying delete the one with this manifest with this that manifest uh hash okay because it's in multiple places right so you need the more granularity and that's what the suit component identifier gives you is it's a path that says which place it is and so now you can be more granular and say I want to"
  },
  {
    "startTime": "00:54:01",
    "text": "delete the one in this location instead of just the one with this hash which which is not necessarily just one so that's why we did that and so during the hackathon this is not in the draft yet this is one of the things we ran into an implementation and so everybody around the table that had implementations there uh we kind of brought this up and unless there's any objections then this is what would appear in the next version of the document to address that okay and then the last part here is um uh deletion by a component identifier requires that you have a component identifier for every manifest and this brought up the discussion that in suit we only had component IDs and Brennan mentioned this in the suit meeting uh we only had component IDs when you are a manifest it depends on another manifest and the other one has a component ID but the root one doesn't which is fine if you're a constrained device but if you're a device with a bunch of trusted applications installed every trusted application is its own root manifest and there was no component identifier for that okay and so that's what Brandon proposed that we added into trust domains for this case it was I think the word oversight uh came up not by intent and so this is the what motivated the discussion that Brennan had in the Sue working group before so again another case for the teat protocol actually requires this in order to do install and uninstall multiple trusted applications all right all right this one we also did mention briefly and you'll notice my slide that I already had prepared points out what somebody else said that the mic and the suit manifest and the suit working group so the T protocol does not do encryption at the message layer okay it does encryption at the payload layer so for example you can pass an encrypted payload in it in a unencrypted message okay it only does signing and so uh the current teep protocol spec says nothing about the privacy of suit reports um and by the way neither does superpowers today and so that means that um we don't actually say anything and we need to say something someplace and so teep isn't"
  },
  {
    "startTime": "00:56:01",
    "text": "the only place reports are likely to be used so this is somebody else made this point in the suit working group meeting and so this says since suit reports can be used in other mechanisms then suit reports is the right place to specify how to encrypt and protect suit reports okay and so the proposal is to um mention it in security considerations and point to the suit reports for the actual details okay uh and I see maybe some head shaking if you think that that's not right come to if I said it wrong um Russ or Brennan come in and weigh in so I'll forgive that you're not in the queue yeah that's not what I heard okay but can you summarize okay suit working group chair at the mic so so uh what I heard was gee there's lots of places where we want these uh plain and that when they're put inside for example an eat it'll be the eat profile that specifies how uh to encrypt it but the the security considerations need to say what aspects such a rapper needs is what I heard okay then let's have that discussion now since we kind of deferred people here um if you are storing it in a file for transmission via sneakernet whose job is it to true that I would say whoever writes it to a file you need a file format and so that's why you might need to say an arbitrary way of seeing a suit report uh can be encrypted right I think that's probably the case and that's my argument for why I should be in the suit reports document okay Brendan I mean that's why it's Brendan's job in that mine to clarify you're asking for a security consideration in the suit reports document that says if there's sensitive information in here you should probably encrypt it and I'm just making sure I understand what you're asking for because that's what it sounds like to me that would be minimum I think there's an interesting question which I do not know the answer"
  },
  {
    "startTime": "00:58:01",
    "text": "to right now which is um does it make sense to say more details about that in terms of uh so let's let's reference your MTI document if you're going to encrypt it whose job is to decide uh constraints on the algorithm should you say you should encrypt it with one of the things in the MPI document so from a practical perspective and remembering that that MTI document is explicitly for constrained node firmware update and no other uses of suit yeah that it's already taken care of because your device only has that algorithm anyway Fair yep uh so do I take it as your view is that uh suit report should say that you should do it but not specify algorithm details and leave that to you whatever the container is whether it's a eat profile or somebody doing a file or whatever else gets inside that yeah because I I don't think it makes sense for me to specify in suit report for example that you should put it in a zip file and make sure there's a password on it okay all right that doesn't make sense but maybe there's a use case where you need to do that okay so if you're gonna you know cozy wrap it an encrypted thing that wouldn't be in the suit document right and because that would preclude you from putting it in a zip file and writing a password on it okay anybody else that that sounds like where we're going so anybody else have a view on that one okay if not we'll take that as the the proposed consensus okay thank you I'm sorry I was checking on the notes to make sure we're capturing that yeah I don't see anybody else on the on the queue all right thank you Russ and Brennan next all right that's the end of my discussion of suit although suit does come up on one later slide so if you're from don't lose don't leave the room which has to do with the relationship you're in suit and rats and teeth so now we'll get into the details of attestation and the relationship to eat tokens and the rat's working group so and these I think this is the longest section of slides so you'll have to track my time"
  },
  {
    "startTime": "01:00:00",
    "text": "and tell me how I'm doing so okay eat tokens okay we just had a discussion about suit reports can contain sensitive information by the way eat tokens can contain sensitive information what draft 11 said um is uh it should use encryption as discussed in eat okay as opposed to some other type of encryption right uh the problem is the eat profile section in uh draft 11 has a bug in it where it says under cosine and Jose protection in this case just cosay protection that's the field name out of the out of the each specification it says you got to have a field that says this we only use cosay um it says see the cipher Suite section the problem is the safer Suite section is the one for cheap messages and T messages are not encrypted and so right now you can't file that the the cipher Suite actually is is false because this would tell you no encryption you got to do encryption right so that's the bug okay and so the question is when you're sending in each token that has sensitive information and you should use encryption as discussed in eat then what Cipher Suite should you use okay um and you know for example do you sign and then encrypt eat do you encrypt it and then sign probably sign and then encrypt um but which Cipher suite for encryption do we specify in the eat profile okay because we don't specify for the T message we specify for the eat profile we got to specify something there and so this is where I mentioned suit here is you could make an argument that a good Cipher Suite to use is the one that you're already implementing for your suit reports if you care about sensitive information in both eat and Sue reports okay it sure would be nice to do have these same things that are mandatory to implement in constrained devices okay so that's a good argument there um the a possible argument on the other side is that the um uh destination of the suit report and the destination of the eat are different"
  },
  {
    "startTime": "01:02:01",
    "text": "entities who might have different requirements right one goes to a um uh a verifier and one might go to uh The Tam who might be processing the suit report and so maybe there's cases we want them to be different but I guess right now my preference would be to recommend them be the same and leave it to extensions to if you ever had a case you wanted to be different and if they're the same that means that um we still need to pick something okay if you go back to the discussion that Brennan and Russ and I were just having whatever the encryption mechanism is for suit reports is something that the suit report itself document would not say we do that in the eat profile and we would also say the same thing in uh for for suit reports as well as uh the eats themselves because the point that I made the suit working group is it's not just the suit report and the eat there's a bunch of other claims in the eat that's not right since we want some generic statement some generic algorithm in crypto so far we've only talked about in this working group signature albums we've talked about eddsa and es-256 we've not talked about the crypto algorithms or sorry the the encryption algorithms and so um I guess I would like uh maybe Brendan's opinion uh since Brandon had the mandatory to implement document and suit for constrained devices should we just take the cipher Suites or some portion of Cipher Suites there as the default one for this working group in the eat profile or is there any reason to use different ones than what you put into the uh uh and again we're talking about those encryption algorithms in the MTI document in suit I gather that some of the implementers already have a hard requirement in tip for using RSA in signature use cases that being the case I would be inclined to ask them what they require because those are not"
  },
  {
    "startTime": "01:04:01",
    "text": "in the suit MTI draft okay anybody here have an opinion otherwise we'll ask the question on the list anybody here have an opinion on uh encryption algorithms for use in encrypting suit reports and or eat tokens if not we'll just ask it on the list sorry Brendan Warren back at the mic maybe I misunderstood the question this isn't about key exchange at all is that you're just talking about the symmetric encryption okay my apologies um right there's been a massive discussion going on on this and given the kind of environment that you're in I strikes me that you do not need to deal with out of order arrival of uh data correct you do not need to deal with a situation where you haven't got enough space to store the ciphertext instead of the plain text correct uh because here it's the sender it's the one that's likely to be constrained not the receiver so this should not be an issue for you and on that basis I wouldn't try to use any of the constrained stuff you probably want to use one of the aeads just because it provides less room for error yeah that there might be uh requirements that says the Gen the the encrypter side needs to be as as small as possible in terms of the implementation of space and so on but the decryption side is probably unconstrained yeah so if you can afford aesj GCM or AES CCM then okay that's the direction you want to go okay thank you for the recommendation all right plus one okay plus two that's the the harness also thumbs up okay uh next slide"
  },
  {
    "startTime": "01:06:00",
    "text": "okay um Thomas fasady asked raise this one uh in draft 11 it said that in the eat profile all claims were listed as optional and he observed that that's probably wrong um and so uh there's an open pull request here ready to be merged if there's consensus that has this that has um one two three those five so this there was six claims already talked about in the document okay and these match to what the architecture document says that uh Tam would need to know in order to do remediation right and so those are the five and then the fifth one is just for freshness so the five ones it's actually information that they need to make a decision as to what binaries are appropriate on the device and whether they're up to date and so on is those five right a unique identifier of the device and you can identifier of the OEM or Hardware vendor what the model the version is and the manifests that are already installed on the device that's the list okay so the proposal is to take all five of them and then make those be mandatory instead of optional and then the sixth one is the nonce and that one will be mandatory if you're using the nonce freshness scheme and if you're using the timestamp freshness scheme then the timestamp is mandatory instead okay and so that's the proposed resolution uh to that one so uh because I think the only way to implement a tam is to have all the information so okay It's News comments next slide okay so the each spec says this so this is one that we talked about at the hackathon and we talked about it between the suit rats and people that were uh at the tables and things uh the eat spec says a suit manifest can be used as a manifest and then the eat spec has Fields there for a content type which is a co-op content format and a con and then a the body which is in this case like a Json or Seaboard blob and so he says well exactly how do I put a suit manifest in there okay um if I'm going to use Seaboard which seaboar production is it okay is it the suit envelope or is it a suit reference"
  },
  {
    "startTime": "01:08:02",
    "text": "or what and so uh between Brendan and me and uh I think Lawrence uh he said well the proposal is to say what you put in here is a suit reference okay you know it's the the ID and the URL from where you can get it and so on but not not the whole thing right and so that means that uh someplace we would need to write this down and get a co-op content format for the suit reference okay so that is the proposal is to get a new value allocated for Co-Op content format that means that specifically a suit reference object um and then write down and where would we write that down probably in draft ietf suit reports which is what defines the student the suit reference cddl okay I saw a couple nods so okay so that means that's work for Brendan that I would uh in in the suit reports document that we will then reference in this document so no no not again okay next okay uh we did update this goes back to the the the spec used to have a very old uh sample eat token that needed to be updated with the latest claims and stuff as they appear and eat and so this has been updated now and so this fills in what we just talked about here and of course since there isn't a co-op content format yet it temporarily has 60 app which is application seaboor with a to be replaced you dude that says as soon as they get a value change to 60 to be whatever the new one is right but it means you could actually code this right now and use it in the meantime in in hackathon tests and stuff and so and you can see here's an example suit manifest which has a sample URI and the digest and so on and so this is just in the pull request which unless is the objections will merge the pull request and that'll be what's in the dashed well yeah next okay um this is the intro to the next one this is not the open issue but as a reminder uh way back when in 105 we talked about how you could use this in the following orientation where the Tam is kind of in the middle"
  },
  {
    "startTime": "01:10:01",
    "text": "um where uh when a tester wants to get attestation results that can present to some other relying party they do so by sending it through the Tam as if the Tam was a verifier so it's like you have chained verifiers in each case so you send it to who you think is the verifier which is after the Tam the tan sends it on another verifier gets back the optimization result if it's a failure The Tam kicks off remediation and starts doing updates as necessary it would say success in their hand that passes it back to the tester which can then present it okay so that's the example flow here the example composition you don't have to do it this way but this would be one way that might be popular okay and so way back in I in the earlier ITF we said so what message is it that passes the attestation result downward from The Tam to the tee and in iitf 114 we said that was the T update message where we updated it just before 114 to have that as the answer okay so that's the pre you got to understand this to understand the next slide okay so now we've got the context next slide okay so the discussion we had at the hackathon is out of the teep profile or the eat profiles for ETC station results okay there's two profiles that have been defined so far one is the one that's the keep profile in the teep document that's for use by consumption by The Tam attestation results is going to be consumed by The Tam the other one is ar4si is the acronym for the draft and the in the rats working group and that one is designed for other relying parties which was that other box in the slide so the attestation results line that comes down there's one profile for the thing that comes to The Tam and a different profile for the things that comes to their lying party so what's the relationship between those two things okay this is what we had the discussion with hackathon about uh and it turned out that those two things could even be encoded differently because it is say both Json and C bar whichever one that you want and so it could be that the Tam requires it in seabor and the other lying party requires it in Json"
  },
  {
    "startTime": "01:12:01",
    "text": "uh so that means and similar your freshness mechanisms might be different one might be using time stamps for freshness the other one only supports nonsense refreshness okay so it means you might have disjoint requirements here and so does that mean that you need a to like encapsulate them and you did a media type for all the combinations of A and B and things and so that just seemed um problematic and so there was uh five options we discussed the first three of them have all those above issues and so we kind of included maybe that's not the right way to go even though that's kind of what the draft previously would have implied um but we didn't like any of those first three um actually there's downsides to all five of these and that's why there's not a proposed one here um I might have my own preference on here so option number four is to say this one actually requires uh since we don't say anything about the protocol between the Tam and the verifier okay and neither does rats by the way right you can use whatever protocol that you want it just has so here's some message formats but you got to put them in some protocol you know it could be a HTTP rest API or whatever this one does have an option four has a constraint on that protocol which says when I'm going to have send off the evidence and I'm going to say hey please give me attestation results in the form of you know seabor or give me it in here's the profile I want the Deep profile or whatever is not number four in that request you'd say I need it back in two different formats please give me two blobs okay not just one okay so I can't just do like a regular accept header right it's probably constraining the protocol I need it in this one and in this one one request two blobs in the response okay that's what number four is and then I can get it back one is opaque to The Tam and you can just pass it on and one is consumed by The Tam okay and so that one is like having two parallel accept headers and two separate responses one that you parse and one that you just pass on on that one's kind of weird but you could do it and it's the fewest number of messages maybe um and but it does work with all the different previous constraints option number five"
  },
  {
    "startTime": "01:14:01",
    "text": "is to say well this flow that puts the Tam in the middle well just don't do that instead make the tester go all the way around to get the air for our size this line that comes here ar4si would not actually come through the dam nor with the evidence the evidence would come to The Tam in a separate evidence would come to the verifier and each of them would respond separately okay meaning evidence comes to the town this one comes back here other evidence comes all the way around the verifier and comes all the way around back to the tester or the other relying party depending where they're talking about uh background check or passport model okay so that one means double the messages from the uh a test or the other relying party I say or because it depends on background check versus passport model both cases are there but they collapse into this and so if that was a constrained device that means hey two messages perhaps more power consumed and so on so that's the disadvantage of number five is more a little bit more complexity because you can't hide all the complexity behind a tam if you have a tiny constrained device okay so those are the five things that we know of right now um anybody have an opinion on uh which if there are some of those they would like to vote off of the island or they think would be the most appropriate for their favorite use case Okay um otherwise um since number four actually constrains the protocol um somewhere between four and five is my preference unless somebody has another magic idea and I would prefer to not try to do the you know media type parameters allowing each combination which all three of one two and three would have that problem so so I kind of we kind of scratched our head during the hackathon said we'll bring it up here see if anybody has any magic advice for us so um otherwise the authors will try to figure out what to do in the next version of the draft so okay pigling you're in the queue I mean this one is the hardest issue so if I get cut off on time or whatever this is"
  },
  {
    "startTime": "01:16:00",
    "text": "the one that I really wanted feedback on so you got five minutes okay cool hello can you hear me yep I wonder if it's possible that the time is the verifier that there can be a case where you take the 10 roll and the verifier role and you collapse them into the same node yes that is possible uh and then uh option number four becomes much easier in that case right because there's no protocol between those it's your internal implementation yeah because I think if we use the time as a verifier and this model will be more simple to use I think um we never want to force people to use the same uh Tam and verifier combined but allow it yes force it no um and there are people doing verifiers that want verifier implementations to be usable with many different relying parties including a tam for that matter um I think Verizon was one of the implementations that's Thomas facades and folks that was there at the hackathon that's doing exactly that and so we had some people at the table they had the time implementation some people at the table that had a verifier implementation and we wanted them to be able to interoperate without precluding the fact that you could combine them into the same implementation okay thank you yeah between the um option four four and five probably I will prefer four just because it's more easier to revise the current draft but um not the technical um view um but I have another question um with the some the question I had in my hackathon is uh what what is the by reading the current draft what is how to"
  },
  {
    "startTime": "01:18:00",
    "text": "implement with the um other than um sgx or TDX or something it's it's really neat to yeah ask somebody who really knows the implementation or the history of the draft so um eat profile explanation probably we need to um yes we make it more informative in the in the draft yeah um I was actually wondering whether we need to cover post the the background check and the passport model um together like it would be possible to just stick with one specifically if this one is more exotic or is like um like nobody is forcing us to cover covered a whole um topological flows from the rights architecture so here so far the working group has been concentrating what's shown here with the Tam and then same in the previous slide right is that the Tam is acting in the um uh background check mode right in other words it's the not the tester that talked to the verifier The Tam is a specific relying party for mediation and so this is a background check picture here but you saw at the in Curious hackathon report that one of the implementations was trying to do passport with this so we actually do have our first implementation it's using not this picture right it's using something that's much closer to option five okay and accurate is not in here the other implementation is using option five in turn because it's using passport right so this issue here the relationship tends to be more complicated in the background check model which is actually more common uh but not very ubiquitous right so I think my opinion is especially after hearing the hackathon stuff since we had both passport and background check implementations at the table in the hackathon as we probably need to accommodate both was my takeaway so uh before this hackathon I might have said let's just use background check for the Tam uh but now that we have an"
  },
  {
    "startTime": "01:20:00",
    "text": "implementation that I'm now kind of convinced that that's not necessarily what everybody's going to do so um the last thing that I will mention here is this uh bullet right here before we run out of time is that um uh that Tam could in theory send two different queries after the verifier right if it just uses like a rest API with an accept headers and stuff it could send the evidence twice okay but the only problem there is if it's using the nonce mechanism it would need two different nonses or or the ability for the verifier the receiver to accept the same nonce twice right and so it tends to have problems in the nonce mechanism if you were using the timestamp freshness mechanism here you could actually do that just fine okay so all right if I still have time we'll do another slide so yeah that was the last slide no I got another okay um the last one this one is done in draft 11 so I just want to confirm this is fine um I think uh I forget who raised this one um the each profile is it when we talked about before that content format and we said how how it looked if it was an sgx code or whatever and there's the value that Akira showed that said it was a an eat profile eat and say well that's kind of a long string um and so um what happens if in the future you rev that okay because what it says right now is if your value you're going to send is equal to that string you can he lied and they'll MIT leaving that long string because the absence implies it's that strings the question was well as soon as you're rev doesn't that mean that you've lost encryption and the encryption it's not going to not encryption compression you're going to need that to be in all future messages anyway so why bother with the Elijah now right and so I think it was Michael Richards and Estes and so what it says now is it says well whatever the absence means is defined by the T protocol version which is a single integer out so we're on the same header okay and so if you ever wanted to rev it then you can easily bump the Steep protocol version which then specifies a different default so every time you can"
  },
  {
    "startTime": "01:22:02",
    "text": "get a new default and you can always you know omit the thing as long as you're sending the exact thing that that version says okay so provides a mechanism to rev that's already in the spec which is the the version number identifier and you say well if we had deep version 2 or the keep version a t extension or whatever would you say we'll put the value 2 in there and set the value 1 and then it has a different number in it and you can easily do that so you can always get the and he said ACK on that being done so it's just reporting that out next hi hello uh this is very brief full presentation of the tip use case for computational computing network uh next to that side please there are some issues I collect from last meeting and I also upload in the tip for GitHub so the first issue is a cloud scenario should be included included and the response is that we change the abstract and this and the text is the documented is a use case and extension of tip and could provide guidance for cloud computing MSC and other scenarios to use computational Computing in network uh so next time please yeah he's a center issue it's the security of competition container should be clarified and since the CTC uh comes to a computer Consortium have defined that the the conversation container so I changed the I will follow the terminology definition and here's the example if a CVS and pcpo maintains a container in your virtual machine then this is a computer VM rather a computational container so here is a"
  },
  {
    "startTime": "01:24:02",
    "text": "fixed next slide please uh this is the specified or refer to secure channel in other document I think I haven't found a definition of secure channel in ITF or maybe use the using attestation in transport layer and the data transporter layer security dropped as a secure Channel maybe I can use a loosen definition for example some some transformation from some transformation a method that could protect the data in in transfer maybe this has haven't been determined and I think I will fix it in the next Edition uh so next slide please uh your fourth issue is the typo and the form the correction and I think I have fixed all the typos uh next slide please this is a operations type in 4.1 where a u8 and PDR bundled as a package and the comment is that the network user could use a transfer encrypt package before a testation for efficiency and as a response I we delete the encryption package under the decryption key because if we already have a secure Channel there is no need to encrypt the package and I also change the draft as that in the in the below step three is the time request remote attention to the tip agent and the team agent is instance evidence time uh here's the point the time works as verifying in red architecture and according to the conversation just before if we don't force people to use use the time as a verifier maybe I need"
  },
  {
    "startTime": "01:26:03",
    "text": "to lose this established another type so uh [Music] yeah maybe I need to loosen these steps and try to provide just the guidance in order to enforce people to use this network management management and orchestration Center as the verifier so next slide please and here's a provision style 4. 4.2 where PD is a separate package and the TA and the uar separated or Integrity the comments here is that clarify deploy and low load in this case so in the step three the network user will transfer your NTA to the computer Computing device via a TM Time and Time Zone deploy these two applications in re and the T respectively and in sdx the UA must be deployed first then lets the UA to load the TA in the sdx so uh next slide please it has Issue 7 here the comment here is the time is not in the path of UA distribution so we just fix the steps as the network user deploys you and read and how it deploys I think it's out of scope of this document so next slide please here here is a introduction Improvement I think it's uh I try to solve this issue by using multiple multiparty Computing and the factory Federated machine learning to explain these use cases because both MEC and the Federate ability will use T as a measure to"
  },
  {
    "startTime": "01:28:00",
    "text": "protect the their private data I'm not sure if I should add this text in the main body text or in the appendix and I think I will fix data in next Russian next slide please okay the specified data owner and in the document the data owner has been replaced by the network user because the network user possesses a personalization data and applications that need to be deployed on computer Force so next slide please yeah here's the losing deployment options I think it relates to the issue 5 6 and 7 and next slide please and here is the one question that the UA may be tempered and this may cause those attack or even the dorsal attack and I think that the UAE is defined as untrusted so the team architecture cannot make sure that the UA is secure and the trustworthness so in some some meaning I think that the toss attack cannot be totally denied but if we could create a screw Shadow between the T and the network user all the time for example if we use course and to encode the network data the server side of the t equal to discard this malicious Network flow as 2D broker since the team broker is a transport transparent forwarding and is also not trusted so the network network flow filter may be not reliable to block Malaysia's traffic by the team broker so next slide please yeah and the scope"
  },
  {
    "startTime": "01:30:01",
    "text": "of the document I think the scope of the document should not only include Edge Computing scenario a scope could be any computational Computing environment which need to be configured by Network I think that's the reporter yes yes okay so all these were updated on the last revision thing yes yes okay so yeah yeah so do you hear me yeah I can't hear you okay so so in one of the issues you mentioned the definition that you use from CCC confidential computer Consortium and we had analyzed some of their definitions and there is no scientific evidence for any of the definitions somebody has just put them around and there is no scientific kind of justification for these and I wonder why do you pick up these and uh so CCC is not a standardization body I mean because I think there's no uh standard definition about confidential uh commercial container and from my perspective uh in my opinion I think that a container is confidential it must be totally confidential it cannot be a virtual machine that is we say the word permission is a confidential so the container is confidential if we say a container is foundational then only the container is confidential any components out of the container don't have to be translated that my personal opinion and I think this is a reasonable explanation of this competent container definition"
  },
  {
    "startTime": "01:32:03",
    "text": "yeah I mean that's that's fine that if you have your own perception but having CCC does not justify anything because I will put a link in the chat so we analyze some of their definitions and there was no justification whatsoever for them so if you have your personal opinion that's fine but having the point was that having CCC definition or as a reference does not justify anything hey guys let's take it on the list yeah this is a good discussion but let's continue on the rest okay okay yeah Muhammad can you post the link and information that you were speaking on the list yes sure so I will put it in the so should I put it in the list or in the chat list please okay sure sure I will send it in the list thanks okay thank you thanks everyone for the session and I think we're making good progress so hopefully we will see the Deep protocol drive for Advance very soon and we are hoping we will initiate early set directorate and iot directorate reviews on the T protocol so um Dave once you have an updated protocol the question will be are we ready to do early reviews to get the working request home so we can take that up on the list Akita both protocol specification once you get the next revision do you feel that it's mature enough that we can trigger an early review well you don't have to answer now but you know it's it's something that we can pick up on the list appeared yes okay let's take it offline and [Music]"
  },
  {
    "startTime": "01:34:17",
    "text": "yeah finding time"
  }
]
