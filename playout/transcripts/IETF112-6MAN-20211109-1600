[
  {
    "startTime": "00:00:08",
    "text": "good morning afternoon or evening welcome the six-man session bob hinden this is louis tron the chairs of six man i think we have enough people to get started um next slide holy so please note the note well i'm sure you've all memorized this by now but need to follow all of the itf processes and policies and procedures and it's almost as much stuff as all the technical work uh next slide uh mistrivia the jabber room i just use the meat echo one here's the links in the minutes many thanks to shuping and barbara for taking minutes they've done it in several past meetings do a great job thank you very much we don't have an official jabra scribe sort of doesn't seem that it's necessary and this is the link to find the presentations and i think there's also a link in mideco next slide and uh we have uploaded all the slides so if you are a speaker you can choose your slide deck from the prepared slides as it shows here we will try doing this if this fails then we can um we can share them but it's easier this way you can um advance the slide"
  },
  {
    "startTime": "00:02:02",
    "text": "yourself this is the agenda for today um introductions what you're doing now document status i'm going to talk about the joint friday session we're having with v6 ops in a minute um then eric and shiresh are going to talk about sids and ipv6 addressing the output of the spring adoption call on the compression drafts um we have one working group draft we're going to do an update on giuseppe is going to do that this is been in the isg for a while but there's been a lot of updates based on this discusses from the isg that we thought it would be good for him to go over the changes and then there are four new internet drafts that will be presented next slide there we go should we ask if there are any comments to the agenda before we we want any agenda comments not seeing any so this is the agenda for the joint session with v6 ops on friday morning or at least my time friday morning bright and early um but the general idea that generated this is that both working groups have drafts that are talking about top by hop options you know the processing of them the need for supporting them or not um and so after some discussion with the ads of you know the internet ads and the ops"
  },
  {
    "startTime": "00:04:00",
    "text": "ids sort of came up with this idea of having a joint session thinking it might bring more people to the discussion maybe particularly outside of v6 ops and six-man um so the agenda is roughly talking about the requirements and solution drafts um and then some short talks on some current proposals for hot new hop options you know what problem they're solving and then uh just a discussion about you know what people think about um the hop option you know can we make it work better uh is there some other way of doing it um what to do with the existing options etcetera so it hopefully will be an interesting session on friday any questions okay next slide okay yes so that's the document status so we have published one rfc since the last itf that's 9131 on gratuitous neighbor discovery we currently have no documents in the rfc editor queue but we had three documents submitted to the iesg to start from the bottom the minimum path mtu option um that's with with eric in ada evaluation but the two other two the two other drafts have gone through the esg and have quite a few discusses and iterations um the alternate marking method we will talk about later so guys that we will go through the issues he's had in the iterations and the changes that has happened through because of isg review the"
  },
  {
    "startTime": "00:06:00",
    "text": "sroam draft has essentially been in revised id since june 2nd it has three discusses and it's awaiting an update from the authors bob and i have have been speaking to the authors and they promised us to to make an update uh very soon now so we'll see how that goes we have nothing else in the queue and also eric please go ahead i wanted to say also that rfc 9131 was the uh was our first document to go through the rfc editors do github based review process where all the diffs are sent by github and it was an interesting experience i think i found it helpful but they're still running other experiments to see how they can improve that process so if you're you're an author uh on a document uh beware that uh you might be able to opt into this experiment and it might be worthwhile perhaps that jane and and perhaps you eric give a little update on that at some point if it's just an email to the list if there's anything not worthy or or is the process still in in flux and improving along the way or is this all authors will go through this now or what's the status i don't know what their intent is i think they're still experimenting um but uh and i guess uh it kind of depends on the number of of authors because you need to get all the authors sort of set up to use the github review flow but i found the um ability to review individual diffs in github much easier than reviewing lots of multi-indented text uh in an endless email chain with uh different people's email editors putting"
  },
  {
    "startTime": "00:08:01",
    "text": "things to different fonts and different indent levels and so on and so forth so it looked very clean from my perspective as an observer as well and we could probably point people to the to the repository that was used so people could go through and see the history as well but go on jen we cannot really you can't hear me now we can hear you ah delay so yeah just in a few words i really liked it it was easiest most much easiest uh then yeah going through these emails and trying to find out if i missed any comments so yeah i really liked it strongly recommended and it was i don't know it was an experiment experiment but it was quite simple easy no issues to report three lessons cool excellent so so we'll make sure that we recommend that the authors as uh as they get to the last stage of the process thanks um let's see so document stages two we have no documents uh waiting for working group adoption we have no working group documents and we have no documents are waiting right up that's not quite true we have the hope i hope behavior document that bob and gory has that is awaiting awaiting being called for adoption so i guess that's the pre-state from what we've registered here but we'll talk about that on friday i think that's all so um suresh and eric you're up do you want to share your own slides or do you want us to share them for you i think eric is going to start let him decide"
  },
  {
    "startTime": "00:10:01",
    "text": "uh oh okay i was going to defer to you i have not tried this presentation okay there's a paper says the rock coming up here now spock how do i choose a slide to present if not how to do this you you press the share preloaded slides button and then you pick from the list and yours is called seeds and addresses i think i'm happy to share eric with you uh oh no that just opened it in another window hang on a minute do you want me as your sheriff i can cheer um sure there's only three sides anyway just say next uh okay so um i suppose uh this is a summary of what we uh what has transpired in the last i guess maybe three to three and a half weeks of uh some back and forth with some uh with the spring on some compressed discussion next slide please uh so if you download the slides you can click on these highlighted things there are some links there there is inquiry from spring to six man about uh compressed sid behavior and some sort of seed behavior in general uh and uh there was two primary questions both of which were sort of quite lengthy and detailed our reply was uh lengthy and detailed um and uh we raised a couple of issues uh one was that there was some lack of clarity around uh sids and what their semantic requirements are in certain circumstances and we can uh we can talk about that on"
  },
  {
    "startTime": "00:12:01",
    "text": "the next slide there's also a an issue uh oh sorry i'm not i said yeah can you go back one um and the meaning the semantic meaning of segments left in the srh uh looks like it might need to be updated or something will have to be uh done to sort of update the definition because it doesn't exactly match anymore it's not a strict index into the uh sorry it is treated as a strict index into the srh but um the semantic definition is actually uh the list of the list of uh segments left so where the list of segments left is uh one to one mapped to 12856 addresses that's that's fine but that that definition is now drifting there were several other operational concerns um about whether or not sorry about having srh-less packets and the possibility for maybe helping sr v6 domain fail closed if you're interested in this uh i think much of this discussion will be happening on spring there is a way that uh six man can help srv6 domains to fail close and we can talk about that and suresh has volunteered to be the the lead on the draft for us thank you very much sresh um and we're uh talking with with other potential co-authors so i think next slide and over to sresh yeah thanks eric thank you and uh yeah so thank you very much for putting your trust in me i know this is not an easy topic and somebody explained to me like this is like falling on a grenade so like i do know what i'm getting myself into in this one and i really would appreciate like enough people in the working group like helping out with a bunch of things so um what i've done is like kind of gone through all the documents i've read like pretty much all the uh documents that are relevant to this like already so either like uh during my id term or"
  },
  {
    "startTime": "00:14:01",
    "text": "after like out of interest and uh and also i managed to go through like all the mails on the six-man mailing list um i'm not sure if there's other stuff on the spring list that is not copied under six man so that's kind of my next step to do and like some really really interesting comments so thanks to everyone who commented on the mailing list um and like very specifically like you know to call out like you know eric's mail was very useful and and joel's mail um starting off this whole thing right like you know with some thoughts on it as well as brian's mails i found them like extremely uh useful to um kind of clarify the issues in there so i just started putting together a grab bag of things that i think should be in this draft again this is like a straw man proposal um it's an individual wrap right so i'm just like throwing this up at this point and if you feel and there's something that shouldn't be in this draft or something that should be there that i'm missing uh please like you know send a note to me and absolutely like either on list or off list either way is fine um and we can talk about like you know what goes in there so the the key things i want to cover is like you know how do uh sits deviate from classic uh 40 to 91 addresses right because they don't like you know it kind of doesn't walk like a duck or talk like a dog but it looks similarly similar to a duck and so how do we deviate them so try to describe like you know how they act differently and and like some of these have like in a pretty clear answer some of them don't so i'm just throwing them all up like because the idea is to put them in the draft and to describe like you know where the sits are assigned are they assigned to an interface are they assigned to a node because it makes a big difference um like other addresses that shows up uh in sids are they going to be used for neighbor discovery or not again big difference like in how and they should be treated and how do they appear to know that our s are unaware because i think one of the key uh differences for srv6 is like you know"
  },
  {
    "startTime": "00:16:00",
    "text": "the if somebody's unaware they treat us like regular v6 packets right and like is there like you know any issues like lurking in there that we need to do uh and this is another thing that came up i think this is like a lot of these things have been kind of like knocking around for a while and this like said can it appear in the source address field that's like something that like is kind of newer that appeared um in the picture and how do we do error handling um this is like something a topic that we kind of addressed like earlier right when we had like um header insertion as an option for srh and one of the issues was that if somebody is doing header insertion in the middle of the network how would like a node that doesn't know about it be able to correlate like an error packet to something it sent so like vc says like is there like a similar issue that we need to handle right like how would it work for a node to um identify a packet that caused an error that came from the network right let's try to document that and and like this last one is like kind of pretty important that like eric brought up right like would this require some separate v6 space right like in a separate adder space and like you know a few options floating around like you know i'm not going to presuppose any numbers but i've seen like a lot of cool names like coming up there like for a separate address space so so if like we decide to go and do some kind of separation in the other space like you know where it's not like the first uh three bits uh like zero kind of thing right like you know to see if we can like separate out these things on another space where the the semantics are expected to be different so this is again uh something to explore so this is very very early like you know this like happened to me last week right like you know for like like a lack of a better verb to describe it so the idea is like you know these are the kind of grab bag of topics um that i'm expecting to cover so if you have uh any questions about these or you think like i'm barking up the wrong trees or anything just like send send us a note and we'll go from there and like um i started getting a few um um"
  },
  {
    "startTime": "00:18:00",
    "text": "requests to co-author two like you know i'll keep you updated that my goal is to kind of have uh draft out like before like end of this year like you know some sometime like second half of december to have like a zero zero version of the draft out and put it up for comment uh from the working group so um again thank you very much uh for um being patient with me i'm asking for it in advance so please um feel free to send your comments thank you thank you suresh and also thank you to everyone who um helped all of us understand uh what it was that we needed to understand in such a speedy time there were lots of meetings with lots of people explaining things and uh handling uh questions there were lots of documents circulating and uh people making comments and generally helping helping us get to some clarity on uh what the core issues were so thank you to everyone who helped participate in that process thanks any comments from the group ron please go ahead six-man list the spring list privately sorry repeat that i think the first part clipped ah would you like comments on the six man list uh privately on spring list on both um uh personally the first two run but like um i'll also start like you know following string more closer because i i do follow six man all the time and spring like kind of on a item-based thing but i think that's gonna change but i do prefer like you know six man um and personally first but like no worries like if you send it on spring too that's fine okay thanks a lot thanks thank you and and then up to people joining in the microphone queue it looks like mitiko has a little problem with a"
  },
  {
    "startTime": "00:20:01",
    "text": "delay when so unmute yourself wait counsel only two three and then you can speak um thanks a lot guys um thanks eric and suresh and now giuseppe you're up do you want to try sharing the slides yourself then you have full control hello yes can you hear me we can hear that seems to be working okay there we are please go ahead okay yeah as also bob and all uh anticipate that this is an update about the this graph that is in isg evaluation phase but we did some changes in the last month so it's better to give an update to the group it's about the pv6 application of the alternate marking method so in this slide we just summarize um for who is not familiar with this graph so uh this is a definition basically the definition of a new tlv to be encoded in the options adder so it can be bought and up by up options or distribution options um the format the pattern of the tlv is in the figure so the first three bits of the type field are all zero this means skip if you don't recognize and data do not change in root based on the rfc8200 and then uh regarding the value here we have the two marking fields that are the relevant bits for the alternate marking so loss and delay bits and then the flow monitor identification field"
  },
  {
    "startTime": "00:22:01",
    "text": "the the operation of this option is quite simple so the source node is the only one that writes this option later to mark the flow in both cases in bottle by open destination option in case of the hobbyop option either it can only be read by the intermediate nodes if they are configured to do so and the measurement is a hub biop otherwise if in case of destination option either it is processed only by this national then the measurement is end-to-end so this is just to recap the the draft regarding the isg evaluation we we got several uh comments and uh we addressed most of them and yeah this is just to summarize the most important changes the most relevant changes um first of all um i would like to mention a news that the section on controller domain has been improved in order to explain better the precondition for alternate marking application in a controller domain then a new subsection to clarify the usage scenarios for the measurement domain so we call it ultimate marking measurement domain also we further specify the flow monitoring identification field that must be used in combination with source and destination address in order to to avoid this amigo to solve this ambiguity and then we also revised and improved the security section that now i think is quite complete so now i'm going to describe each of these changes so regarding the controller domain we clarify with a must condition that the"
  },
  {
    "startTime": "00:24:03",
    "text": "alternate marking method must be deployed in a controller domain this means that it's recommended that an implementation need to filter packets entering or leaving the controller domain with the ultimate marking data this also solved many uh security concerns that were raised uh we also added as i said um a new section on measurement domain in order to clarify the user scenarios of this methodology this means that the measurement domain of course can overlap with the controller domain or maybe a subset of the controller domain this is general the typical scenario that we identified are two the first one is when the user equipment is the starting or ending node but this means that the user equipment is fully managed and it belongs to the controller domain but this is not common of course so the most the most likely use case that we we mentioned is that the cp is the starting or ending node since it connects the user premises with the operator controller domain it can encapsulate the received packets in an outer epv6 adder which contains the alternate marking data and also the cp is also able to ensure the relevant security rules at the domain boundaries in order to filter the packets another um clarification that we have done in the latest version is about the the flow monitoring identification field um we clarified that this must only be used for floyd intimidification purpose for the measurement domain of course"
  },
  {
    "startTime": "00:26:01",
    "text": "and also it is recommended considering the chance of collision of this field it is recommended that this identification field is is used in combination with source and destination address to identify flow the reason for that is because if the these two and these 20 bits are set server randomly by a node there is a 50 chance of collision for 1200 fluid and if we consider one percent chance of collision we can monitor only 145 flows per stairs so this is this can be acceptable but only if we consider source destination address in combination with the flow monitor identification in case of centralized control of course the things are much better because with 20 bits the number of combinations is more than one million and in this case if you use it in combination with source and destination address you can monitor one million flows per space but i think this can cover most of the use cases of course in this regard the the draft clarified that all the nodes along the path should use the same mode of for identification of course in order to have the same the same identification field yeah the last part is about the improvement on the security considerations as i said the precondition for the alternate marking application to a controller domain is the main point that helped to mitigate and confined in containing the the security concerns and this the potential security issues we added few new consideration that i"
  },
  {
    "startTime": "00:28:01",
    "text": "have included here but of course the security consideration now i think cover most of the all the concerns that were raised and this quite a section quite complete now the new considerations that were added were about some cases that were raised during the disg comments in particular the case where the network nodes for example can intentionally alter the alternate marking option for denial of service but if the implementation is done on managed nodes this can be mitigated at least also if packets are generated outside the controller domain may consume the resources but this can be solved by filtering those packets at domain boundaries leakages also may happen such as in case of failure or fault but nodes outside the domain must ignore these packets the packets with alternate marking options since they don't have to process it in addition we also clarify that for specific deployment scenarios multiple administrative domains may be traversed but in this case if we want to to have a world controller domain we have to use ipsec or some vpns to secure the inter domain links in order to build the world controller domain this is also another point that has been specified in addition it may be possible to use the marking field or the flow monitor identification field as a cover channel but also the controller domain application helps in this case as well"
  },
  {
    "startTime": "00:30:00",
    "text": "of course the flow monitor identification is a sensitive information if it goes outside the controller domain but the controller domain application of course helped to solve or at least mitigate this issue as well yeah the summary so i think that most of the [Music] the concerns um are addressed in the latest version so maybe some needs is still missing i don't know um the the latest spending point that is relevant is about the informative reference to experimental rfc 321 and 8889 as you as you may recall we had the discussion on these in six months many lists and we say that downgrade in this case can work if we include in in our draft the detailed description of the methodologies the current version include the detailed description of the methodology but we still have some discussed positions about the the proposal to elevate rfc8321 and rfc889 to standard track since they are now experimental so let's see if this is is a blocking a blocking issue to progress this document so we are waiting for the next sg review in order to understand if some discussed positions can be solved or not or if we really need to this this document to to overcome this issue so that's all for me so if you have questions comments and thank you thank you guys happy um it sounds like we there's enough hurdles but at least we're making progress and and we'll uh we'll follow up on the uh on the discussions uh let's hope we can we can sort those out"
  },
  {
    "startTime": "00:32:01",
    "text": "any comments no we'll work with eric our id as well on these discussions and let's hope we it probably won't be this year but hopefully next year we'll have well hopefully well hopefully it won't take too long thanks a lot okay thank you again let's see so where are we now so now we have a set of new individual internet drafts um [Music] the first one is carrying vtn identifier g dong please go ahead grant you access the floor is yours yeah can you see my slides now yes see and hear you well okay slide uh hello everyone and this is judo and i'm going to give an update about this draft on the carrying rating identifier in the ipv6 extension header okay here are some background information i will go through it briefly basically we are proposing to produce an enhanced vaping service to meet the customers requirements in the 5g and other network scenarios which require connectivity services with advanced characteristics and for this we introduced the concept called vtn which is a virtual underlying network consisting of a set of dedicated or shared net resources and is associated with a customized topology it can be used as a virtual underlay to deliver our group of weapon plus services further we need an identifier of the vtn in the"
  },
  {
    "startTime": "00:34:01",
    "text": "package so that it can be passed by each hub around the forwarding path to steer the package to use the set of resources allocated to the vtm for the packet processing in this document we propose the mechanism to carry the vtn information in the ipv6 hub hub extension header here is the proposed new option type to carry the vtn item identifier and information in the hubba hub extension header basically it contains a for octet identifier which is used to uniquely identify the set of network resources allocated to the vtn and its lens is to match with the network slice identifier defined in the 3gbp for 5g here are the procedures to process this uh information on the a edge node and the transient nodes on the ingress node it is based on the classification and mapping policy of the operator it will determine uh how the mac packet should be mapped to a vtn and to encapsulate outer ipv6 header to get rid of the waiting option in the hubba hub header which contains the identifier of the vtn resource and the package is mapped to then on each node along the packet path the ipv6 destination address is used to determine the desktop and outgoing interface the waiting resource id in the option in the beta option is used to further determine the set of resources allocated on article interface for packet processing with this the traffic class may be used to further provide difficult treatment for packets in the same vtn at ash node of this uh ipv6 domain it should encapsulate the outer ib basics header and the waiting option in the hubba hub header uh in this version we resolve some"
  },
  {
    "startTime": "00:36:02",
    "text": "received comments after last item meeting and also offline and the first comment is is waiting id used to determine the path or the resource the resolution in the draft is the term has been changed to the waiting resource id to avoid the confusion and we clarify that its function is to determine the set of local resources the second comment was received is to suggest to add some text about the relationship between the vtn and the topology control mechanisms so that we have this drought with some text uh to describe the mechanisms used to specify the writing topology the third comment is to suggest to add brief introduction about the background vpn between plus btn so that we add an introduction about these concepts in the abstract also in the introduction so for the next steps uh because we think this document uh proposed to you the hardware hub as a extension header to carry a new option type for the hub forwarding treatment and which is uh i believe is a suitable approach for this applica application scenario and based on recent discussion and revisions the content of the document has been stable so the authors would like to request the working group adoption on this document that's all thank you thank you in the comments um so g has asked us uh if we should put this uh draft out for an adoption call um i was a little unsure of um the interest in the working group"
  },
  {
    "startTime": "00:38:01",
    "text": "so i wonder if we should run a quick quick pull on this one so if you're interested in working on this draft could you please raise your hand and if you're not interested press the do not raise hand button just give that a few more seconds and the next one up is xiaomi with icpv6 extensions for iom capabilities so about 37 hands there is or 38 hands there are 27 hands down and 11 people who raised her hand so in that 140 hands and there's 30 in the in the who keeping their hands well in their pockets the 11 seems to be stable yes i think the at least i can see the results i'll copy those for minutes i don't know if everyone else can see them okay excellent thank you jay um thank you okay child the floor is yours"
  },
  {
    "startTime": "00:40:02",
    "text": "do you want to share the slides yourself excellent thank you please go ahead okay okay thank you uh hello everyone uh it's xiaomi speaking this presentation is on icmp v6 echo request reply for enabled nc to oem capabilities this is a zero zero version individual draft this is the background of this draft draft ietf ippm iom comp state defines a general method of iom capabilities discovery including iom capabilities formats in that job the echo request reply is used for iom capabilities discovery through which the iom encapsulating node can discover the iom capabilities of each iom transit and decapsulating node along the transport path of data package excuse me is there anything your audio is clipping quite a lot uh is there anything you could do to remedy that you think oh i don't know what uh well what's what's the issue but it breaks off every three four seconds"
  },
  {
    "startTime": "00:42:01",
    "text": "if if you like we could put you at the end and let the other percentage go and see if you could figure it out because it was it was very disturbing for the presentation i think uh okay that's fine uh that's fine okay okay yeah yeah let's let's uh retry and then we'll jump to the next and come back to you um thank you um okay okay so um what's the link go do you have uh your slides ready and then we can uh so probably yes do you hear me we can hear you fine okay i'll grant you access to the floor yeah thank you i need to find my slide deck yeah here excellent go ahead okay okay fine uh we have a middle size update from from the last presentation but the last presentation was extremely short because it was late for the reason uh probably this time i will speak like its first time because it's it's really probably really the case okay uh the background is probably very similar which was already discussed many times since explain it's about flash numbering because the primarily the use cases are taken from flash numbering which is already rfc from v6 ops to solve the problem but there is one big difference there big difference that we did try to address here not just uh the cases which has been discussed in flash genomic but additionally multi-hop multi-prefix because in the situation that we have multi-hop multi prefix uh we have uh even bigger challenge for for a situation when flash numbering will happen then some prefix will change and if we have a problem"
  },
  {
    "startTime": "00:44:00",
    "text": "even for the case then the prefix will not change but even in in the stable uh multi-hope multi-prefix environment we have we have a problem and we have found ways how to address just maybe one disclaimer that uh we did not drive to solve uh anything after first hope i mean here we discuss only navy discovery protocol of course for proper operation of multi-hop multi prefix you need you need more you need next step within the routers probably on the side you need something like source routing uh which we didn't discuss here we are concentrated only on the on the first hop problem okay uh this slide i will tell i will tell very short because uh it's original problem which has been brought to this exops to six men initially uh and uh each which is discussed in 89 78 uh it's the situation then uh the router will reload or the uplink will uh will be established to telco and after this if it would be new prefix and if the router will coincide with this will be different from the switch separate device then it may be that the previous uh prefix will not properly will not be properly deprecated but the new one will be announced and of course host could use both and if host will use old one which is not available anymore of course it will create a problem it's it's well known problem which i probably don't need to stress too much maybe a little bit uh new thing we have here three cases one two three because the case number three is really new one uh only uh whatever loba has told us that uh it's it's a new one case uh from our third author uh it's a situation when for example the box will be disconnected power disconnected and would be replaced physically replaced and after reload because it will have different flash memory different mac address and uh it will look like different router it's a little bit more complicated problem but but it's okay could be"
  },
  {
    "startTime": "00:46:00",
    "text": "very similar to flash numbering the second case again a little bit discussed maybe not as as much as in this particular draft but it's discussed already in uh 89 78 that could be the situation that uh if some particular management system will change something up abruptly without proper duplication uh especially hard situation if vlan will be changed on the switch then the host will be connected to different elan effectively different subnet and if it's different subnet of course prefix would be different and the previous one would not be deprecated its router in this situation could do nothing because if vlan will change very fast it's not possible to react the situation then um some configuration maybe even prefix would be changed on the router is possible too but it's if nms or sdn or whatever uh not developed properly if it's a really abrupt change then again it could change and then the host will have two prefixes and of course cost host could not could choose the wrong one this is a really new slide uh compared to rfc 8978 because here is a discussion that could be the situation then then particular uh site has connection maybe by different routers connected connection maybe couple of connections maybe one connection to different carriers uh typical multi-hope multiplex and in this situation two things should happen properly one thing initially the host should choose proper source address because if the host will not choose proper source address and then uh it wouldn't not possible to reach for example wallet garden in one particular telco and then after service address properly chosen then should be forwarded to to proper destination uh to put to proper next uh initially next scope should be proper one on the first hop link and then of course it should be uh proper one between routers if site has many routers but this one with one"
  },
  {
    "startTime": "00:48:01",
    "text": "discussion about how to do service routing between within routers is out of the scope here is only the first hop in the scope these two two stages to choose proper source addition to choose proper next hope uh for the host is discussed in the uh in this particular draft in the two situation in a normal situation and in this situation then particular uplink for example is down uh it's it's a more or less complicated discussion it's a big section a big section in this particular draft okay effectively we have here about seven problems and for seven problems we have um some number of solutions uh nine overall because some particular solutions is the solutions for uh for a few uh for a few cases uh effectively it's uh multi-hop support basic multi-hop support uh for from the first hop point of view uh a situation when in multi-hop environment one particular link one particular router is downed uh abrupt configuration change is something that change change not not gracefully if the previous prefix is not deprecated for any reason then some number of reasons is discussed what it could be why why it could not graceful could be of course a power outage uh could be abrupt router outage because you know in in home environment people typically try to fix any problem by disconnect power reconnect power it's it's a typical behavior of every subscriber for that reason it's more or less typical situation than home gateway cp home gateway is power power recycle is more or less normal situation a little bit maybe small discussion on the situation then link local address of the router itself is change it it may be by configuration and there is discussion what to do and there are uh some number of more or less simple more or less simple modifications uh which is proposed to standard but okay every modification is by itself is maybe simple but because overall is nine"
  },
  {
    "startTime": "00:50:00",
    "text": "modifications it overall may be complex because uh maybe some permutation maybe some uh influence from one particular modification to another almost all modifications related to nd protocol to both drafts to both rfc uh ndn slack and only only one is related to cpu requirements uh where we have recommendation uh to change current practice because current practice which is not suitable for multi-hop multi multi-perfect environment current practice if some particular uplink or some particular prefix route to the carrier is is lost some particular prefix is lost then the current recommendation is uh to have uh to to cancel default routers to duplicate default routers status but it's not it's not possible it does not work properly for multi-hop multi-prefix environment for that reason we change changed to recommendation to duplicate prefixes it's not just us we we have seen it for example from home net for example they have the same same modification uh in reality draft is more or less big because uh nine nine nine solutions and for seven problems seven technical problems nine nine technical solutions is more or less big big document as a result we invite everybody for for participation in discussion about this draft or about we believe we have found all situations not just flash remembering which is uh already discussed in rfc but we have found all other situations then some particular nd protocol information could become stale effectively it's like we stated in the name it's indeed robustness it's uh how to fix all stale situation when information is stale in ng protocol that's it questions thank you quite a look a new a lot of comments on the chat so if someone want"
  },
  {
    "startTime": "00:52:00",
    "text": "to represent the view from there up to the microphone q you're welcome jen please go ahead oh so i'm a bit confused here because we just discussed it on the chat hosts which supports rule 55 of default address collections which is rfc 1828 right will be basically not really affected by like sudden router replacement right so i'm not sure we really need to tweet indeed too much we already have a solution for most of those problems it's just cost implementations do not care so maybe we need to like focus on this part uh we believe no uh that it's not the case yes really uh 1828 rfc 1828 has a good recommendation but uh it's uh general without details how to properly achieve this uh for that reason yes this particular fc uh formally should resolve multi-hope multi-practice situation should uh but in reality it is not resolved because no no not enough utilization what should be really changed in nd protocol it's just a good guidance good direction not not the detailed explanation what to do no sorry i think it's not about changing indeed protocol it's about cost i use a binding next hope with the source address right and it's already basically it's basically rule 55 of default address selection unfortunately as there are not so many implementations of the hostile host side here but again the chicken and egg problem uh hosts there is no probably use cases yet for multi-home ipv6 networks"
  },
  {
    "startTime": "00:54:02",
    "text": "so that's why we do not see it in like real life so i don't think it's indeed problem i think it's a host implementation problem from address selection perspective but this host selection is anyway related to indeed because uh you should have you should do two things you should to properly choose source address and properly choose next scope to two stages uh rfc 8028 gives a general recommendation how to prop co it's really good recommendation we follow it by the way uh we don't contradict to this recommendation just we have more details but in reality we follow this particular recommendation how to properly choose source address uh how much is it enough we believe is not because probably some more details is needed but maybe it's discussable maybe i'm wrong here anyway in the room if not it sounds like something we need to continue to discuss on the on the mailing list yeah and i'll add that my take is i think there needs to be some agreement on the problems uh before spending a lot of time on the possible solutions and see if you can build a consensus in the on the list for that there's some problems that need to be solved that we don't currently solve in other mechanisms well thank you uh edward um then we have uh fred templin on physics fragment retransmission do you want to kill white"
  },
  {
    "startTime": "00:56:01",
    "text": "i can hear you french okay i'm going to try to share the slides give me a moment okay there you are we have the slides that's right um i'll even get video okay good go ahead okay ipv6 fragment retransmission this is a new draft it's a new draft but it's a very very very old subject and it's something that's been uh known for about 35 years and the motivation which is the big picture for this whole talk is that some applications see greater performance by sending ipv6 packets that are larger than the path mtu some examples are nfs over udp which has been known since the 1980s ltp which is the dtm look lighter transmission protocol over udp i have a question mark after quick because i really haven't had time to investigate quick but since quick uses udp it also could potentially see better performance by using ipv6 fragmentation and then also finally ipv6 tunnels now this is readily demonstrated with iperf 3. if you were to put together two ubuntu laptops over an arbitrary network and use iperf3 you'll see better performance by sending packets that are larger than the path mtu than you'll see by sending smaller packets now when a source fragments an ipv6 packet that's larger than the path mtu we have the problem that the loss unit which is an individual fragment is smaller than the re-transmission unit the entire packet so for example if a 64k byte packet was sent in fragments of 12 1280 bytes and one of those fragments was lost you'd have a re-transmission storm of 64 1280 byte fragments when when you would really"
  },
  {
    "startTime": "00:58:01",
    "text": "only prefer to retransmit just the one that was lost so the objective is to when possible re-transmit individual fragments to make the loss unit to be equal to the re-transmission unit so how does ipv6 fragmentation work well there's a fragment header that includes an 8-bit reserve field which is set to zero on transmission and ignored on reception um the source is now going to be using this reserve field to encode a fragment ordinal value plus a re-transmission supported indication bit the destination is going to maintain a per packet ordinal checklist and it will request retransmission of any missing ordinals that don't arrive by doing so the destination sends a new icmp v6 fragmentation report message frag rep the source retransmits any missing fragments if possible now this model is modeled after the link layer automatic repeat request facility that's described in rse 3366. it's fast and efficient and it often but not always often avoids slow and expensive end-to-end re-transmissions so how does the rrc 8200 ipv6 fragment header currently look it's as you see here it has the reserve field uh the fragment offset identification and so forth what this document is asking is to update rfc 8200 to remove the reserve field in its place put an ordinal field which is a six bit ordinal number a reserved bit and an a bit for arq supported and when a is set to one the ordinal is going to include code of value between 0 and 63 which is the ordinal fragment number"
  },
  {
    "startTime": "01:00:00",
    "text": "so then we have now this this this new icmp v6 fragmentation report message uh the new message is going to include n identification comma ordinal bitmap list entries each one of these entries being 12 octets one so the number of entries is limited by the minimum ip6 path empty of 1280 meaning you can get actually the numbers 103 list entries maximum per icmpv6 message and if you need to send more you just simply send more fragrance messages the destination includes n frag rep list entries with 32-bit identification followed by a 64-bit ordinal bitmap so for each identification the well the the receiver is going to examine the ordinal bitmap bit i if i is one it means the fragment with ordinal value i was received if i was zero it means no fragment with ordinal fragment value i was received so that when the source receives the frag rep it can retransmit either uh each per identification fragment where the order bit bet nap of i is zero if the fragment is still in its cache and then the source finally discards the frag graph after all those entries have been processed so um some additional considerations the the six bit ordinal bitmap plus the 64-bit bitmap limits the irq to only the first 64 fragments that means that if there were any additional fragments beyond the first 64 that would be sent best effort the same as the current practice the largest ipv6 packet that can undergo fragmentation 64k and the minimum mtu is 1280 bytes so normally 64 fragments would be more than enough to accommodate even the largest ipv6"
  },
  {
    "startTime": "01:02:00",
    "text": "fragmented packet however ipv6 fragments sometimes traverse ipv4 networks for example by tunneling them over a five pv4 network where the small there may be a smaller minimum mtu in that case there may be more than 64 fragments needed to traverse ipv4 networks so that means that the source is going to need some form of soft packet too big message to be sent back to the originator so that the original reduce the size of future packets and this is especially important when the sources in ipv6 tunnel ingress so an icmp v6 packet to big soft error is indicated by setting the code field of the message to a non-zero value the ipv6 tunnel ingress would both forward the packet using ipv6 fragmentation and at the same time return an icmp v6 soft error the original source would receive the soft error and reduce the size of future packets while the original packet will likely arrive at the final destination so that this is a lossless path mtu discovery uh so the icmpb6 packet to big softwares provide dynamic feedback so the original source can tune the packet sizes it's sending to ensure optimum performance with little or no loss lossless path mt discovery so since we're going to be now embracing fragmentation we have to ask the question of whether an additional integrity check is necessary well each ipv6 fragment will undergo link layer crcs on the path as well as transport layer checksums at the final destination following reassembly um so for for pure ipv6 paths this is already probably enough because ipv6 fragmentation includes a 32-bit"
  },
  {
    "startTime": "01:04:00",
    "text": "identification number and it also includes other reassembly safeguards such as non-overlapping fragments but for ipv4 paths or mixed ipv6 ipv4 paths ipv4 fragmentation only includes a 16 bit identification and it has no safeguards against reassembly errors so that reassembly errors are possible so for this reason ipv6 fragments that might be transported over an ipv4 network require an additional integrity check inserted by the ipv6 tunnel ingress and verified by the ipv6 tunnel egress very important point integrity is important and that's really the end of the presentation this is the name of the draft and i think i'd like to seek whether we can bring this in as a six-man working group item comments from the working group please not everyone at once we could do a poll of the room to see uh if there is any interest in working on this uh in six man if you think that's a good idea i'd just like to reiterate uh the most important chart is chart number two in"
  },
  {
    "startTime": "01:06:01",
    "text": "this deck which gives the big picture and that big picture is the fact that we're missing something internet today and that's the fact that we could be leveraging ip fragmentation to get better performance than we can get without it so fred do you see that as an inherent quality of the ip fragmentation or is it a an artifact of implementation or the particular segmentation reassembly that is done on upper layers for these particular applications um what's uh what makes it faster is that when you send a large packet from the application you make a single system call and when that packet hits the operating system kernel the kernel then calls ip fragmentation which sends the packet as a as a series of as a burst of fragments and when that burst occurs you get very high network utilization so it's that bursty nature of sending one large packet and getting potentially as many as 64 fragments in a rapid fire burst that causes you to get greater network utilization for that time period so it's a savings in systems calls it's a savings and interrupts and it's uh it's it's making greater network utilization by leveraging these fragmentation bursts so these bursts have a tendency to be capped by network devices in the in in the network too but but yes okay so uh this sort of some of the problems that tso1 hosts have tried to solve i suppose um yeah i mean there's a well there's a lot of discussion in the chat room but i mean there's also i think a bunch of hard interactions with transport protocols"
  },
  {
    "startTime": "01:08:01",
    "text": "um which are also doing re-transmissions and it gets really messy when you get if you had the ip layer doing fragment re-transmissions and you know the transport protocol doing its own re-transmissions and i think this is bob let me let me stop you for just a second if i could that's that's not really correct the the model is rfc 3366 which is link layer irq which is an imperfect but timely retransmission to not interfere with the perfect and the end retransmissions that might be necessary if the fragments can't be replaced and well the way yeah let me just and then we'll go to eric i mean of course in ipv6 since it's the source who's doing the fragmentation not an intermediate node it's very close to end to end but not necessarily if the source is a tunnel if the source is a tunnel endpoint the the the uh the uh the the original source could be far away from it that that is true so eric let me wait my customary 17 seconds for video for audio sync up um as an individual computer um sorry individual uh speaking as an individual rather are are some of these things um separable for example specifically the uh the ptb software is there something useful or valuable in just the ptp soft in the softwares and possibly using that to update say a higher layer tcp mss or something uh in advance of it discovering that it needs to do mechanization layers mtv or something there's there's definitely more there when it comes to the packets of big software than what i'm just given in"
  },
  {
    "startTime": "01:10:00",
    "text": "this presentation and it's probably worthy of another draft of its own but this is all discussed in detail in the arrow in omnidrafts how packet2big softwares are used and in this case the tunnel endpoint source can send the packet to big soft errors but the tunnel endpoint uh egress could also send packet to big softwares for example if it's having reassembly problems so there's more there yes you're right eric yeah i'm wondering if it's um it's separable into into smaller yet still useful chunks basically thank you i think that's a good point any other comments okay thank you fred thank you thank you and we had 12 people raising their hand and 24 people who kept their hands in their pockets um [Music] okay so for the last presentation we'll um try again with the xiao if you have fixed your audio now smpv6 extensions for iom capabilities please go ahead okay uh can you hear me now we can hear you now my audio it sounds much better thank you i changed to a new laptop and i i'm sorry for the inconvenience that's okay do you want to share the slides yes yeah i can try okay hello everyone uh it's xiaomi again this presentation is on icmp v6 echo request reply"
  },
  {
    "startTime": "01:12:00",
    "text": "for enabled in-situ om capabilities this is a 0-0 version individual draft this is the background of this draft draft ietf ippm iom count state defines a general method of iom capabilities discovery including iom capabilities formats in that job the echo request reply is used for iom capabilities discovery through which the iom encapsulating node can discover the iom capabilities of each iom transit and decapsulating node along the transport path of data packet this draft is a campaigning document of that ippm document specifically this draft defines icmp v6 extensions to achieve iom capabilities discovery in ipv6 networks this slide shows the newly defined icmp basics iom echo request reply messages taking example by rfc 8335 this chapter requests two new icmp v6 type numbers from iona one for iom echo request another for iom echo reply the upper figure is the format of icmp v6 iom echo request message"
  },
  {
    "startTime": "01:14:04",
    "text": "the two fields in the red ellipses are defined in this draft the other number of iom namespace ids and a list of namespace ids a number of namespace ids is a 8-bit field that means at most 256 namespace ids can be carried 256 is treated as a big enough number each namespace id carried within the list of namespace ids is a 16 bit field at least one namespace id would be carried the lower figure is the format of the icmpv6 iom echo reply message the field of number of name space ids in accurate reply message would be no bigger than the same field in the echo request message a list of objects is carried in the accur reply message each object represents one type of iom capabilities in one namespace id this is the first type of icmpv6 object defined in this draft it's called icmpv6 iom pre-allocated tracing capabilities"
  },
  {
    "startTime": "01:16:01",
    "text": "object this figure is the format of this type of object each icmpv6 object is composed of the object header and the object payload the object header includes three fields they are length class number and c type the combination of class number and the c type indicates type of this object among them a new class number indicates iom change tracing capabilities object and the c type 1 indicates that pre-allocated tracing another type of i am tracing is incremental tracing the object payload includes iom trace type namespace id egress mtu and the egress interface id and one more w bit is used to indicate short format or wide format of egress interface id among them the iom trace type is a bitmap that indicates what kinds of tracing data are supported by the echo reply sending node note that the whole object payload is not defined in this six-man document but defined in that campaigning ibpm document the reason is to avoid the repeated definition of the same object payload for all different kinds of ping such like icmp v6 mpls spping"
  },
  {
    "startTime": "01:18:00",
    "text": "sfc ping and bl ping this is the second type of icmp basics object to defined in this draft it's called icmpv6 ilam incremental tracing capabilities object this figure is the format of this object it's also composed for the object header and the object payload the combination of class number and the c type in the object header indicates type of this object among them a new class number indicates iom tracing capabilities object and the c type 2 indicates that it's incremental tracing the object payload of this object is also defined in that ippm document this is the third type of icmp basics object defined in this draft it's called icmpv6 iom proof of transit capabilities object this figure is the format of this object the combination of class number and c type in the object header indicates type of this object among them a new class number indicates iom approval transit capabilities object and the c type is set to zero at transmission and ignored at the reception the object payload is also defined in that ippm document"
  },
  {
    "startTime": "01:20:02",
    "text": "this is the fourth type of icmp object smpv6 object defined in this draft it's called icmpv6 iomh2h capabilities object this figure is the format of this object the combination of class number and the c type in the object header indicates type of this object among them a new class number indicates iom hth capabilities object and the c type is set to zero as a transmission and ignored as at a reception the object payload is also defined in that ippm document this is the fifth fifth type of smp v6 object defined in this draft is called xmpv6 ilam dx direct export capabilities object this figure is a format of this object the combination of class number and c type in this object header indicates type of this object among them a new class number indicates iomdex capabilities object and the c type is set to zero at transmission and ignored at reception the object payload is also defined in that ippm document and this is the last one the sixth type of smp b6 object defined in this draft it's called icmp v6 iom end of the main object this figure is the format of this"
  },
  {
    "startTime": "01:22:00",
    "text": "object and the combination of class number and c type is used to indicate type of this object among them a new class number indicates i am n end of the main object c type is set to zero at transmission and ignored at the reception and the objective payload is also defined in that companion ippm document this slide demonstrates the security issues mitigation methods described in this draft first one is suggested to use ip authentication header or ip encapsulating security payload header to provide integrated protection for iom capabilities information second one is suggested to use ip encapsulating security payload header to provide the privacy privacy protection for iom capabilities information third one the network operators are suggested to establish policies that restrict access to icmp v6 iom echo functionality the policies include enable disable icmp v6 iom echo functionality define enabled namespace ids and for each enable the namespace id define the prefixes from which icmpv6 iom echo request passage are permitted the fourth one is suggested to write limiter"
  },
  {
    "startTime": "01:24:01",
    "text": "incoming i cmp v6 iom echo request message next steps for this chapter we authors ask for more reviews and comments we revise this job to to improve it and then let me ask for working group adoption thank you chang lee you are the head of the queue please go ahead some questions about this extension like i proposed before in ibpm working group first of all is that can a host outside the domain to send an icmp property packet to trigger the i'll say uh iom capability information can we yo do you mean the host the iom yeah absolutely note as a host yes if the host is the iom encapsulating node then the host can send smpv6 echo request to query the iom capabilities from the iom transit node and the capsulating node yeah like uh what if i'm a i am a attacker right i'm a hacker and i send a lot of like ddos packets probably packets to uh how say to get the iom information and from your network so i can send thousands of packets to the node and you are seeing that you we can use like ipsec for example ah or esp for uh"
  },
  {
    "startTime": "01:26:02",
    "text": "i'll say uh security but the thing is that if you want to provide this kind of uh protection you have provide a full mesh ip spec ipsec connection in your network is it possible because you need to ping any node in your domain right uh this job to provide some security issues mitigation methods you can see in the slide not just yeah not just use ip authentication header ip encapsulating security payload header you can also ask network operators establish policies that restrict to access to this functionality you can also rate limit incoming smd basics iom echo request so you have some methods to mitigate the security issues yeah sure and but as you know that in the real network the ipsec is really heavy or it's really i'll say half for uh implementation and usage right it's very hard for deployment and in order to protect the iom capability we need to build up full mesh any to any ipsec connection in the network i don't believe that would be the real deployment so that that is my comment and yes you can uh like use some rich limiting limitation uh method for uh protection for protecting uh deducts uh attack uh i'll go step yep"
  },
  {
    "startTime": "01:28:01",
    "text": "happy sec is not must okay we have a number of other people in the queue okay that's it thank you thank you good word i have a question i have not understood is it hope i hope or end to end because i i om typically is useful when it's implemented hope i hope then you could understand which particular hope is is a problem but it looks like if it's icmp then the packet could go only end to end and in this situation how much it would be useful if it's not hoped by hope do you understand something wrong or what okay let me explain uh in this job to icmp icmpv6 echo request is not just for end to end it can be sent to the iom transit node along the path so every transiting node can receive an icmpv6 like request and the sender reply to the iom encapsulating node so that's also for by hub separate prop for separate hope okay understood thank you okay eric we'll see about this draft it relies basically on ippm draft can you tell us a few words about the status of those drafts are they adopted are they working with last goal or"
  },
  {
    "startTime": "01:30:00",
    "text": "it's adopted this year in july july this year it's now a zero one working group draft okay thank you thank you and eric i'm curious to know uh how large do you think these messages are going to be and whether or not um you think they might exceed the mtu of the operator network i don't know how much information is the complete list of namespaces is going to be yes uh for the echo request i think the message is it will not be too too big and for the accurate reply uh the message the size of the message may uh exceed the mtu limit so in this chapter we have a code for the uh big message big mac i could reply i could i could reply message that exceeds the ipv6 mto limit oh yeah like you have like a like a truncation flag kind of thing or you just go ahead and send it it's a super large reply i can see uh this one uh for the iom echo reply message there is a field code field and if the message is too big exceed the limit of the ipv6 mtu limit one code field my code value can be set to tell the i am encapsulating node that this message is too big"
  },
  {
    "startTime": "01:32:01",
    "text": "and all the objects will be stripped interesting interesting thank you curious thank you okay thank you i at least my take is i think this needs more discussion and i think we would like to also hear from the ippm working group as to how this fits into what they're doing or not um i don't have personally don't have any objections to more icmp messages but it needs to fit into a larger use case i think but let's continue discussing on the list thank you thank you bob well good so i think we are done for today um i'll see you all on friday or hear you or something see you in the queue on the friday session so have a good itf week i think we are done you"
  }
]
