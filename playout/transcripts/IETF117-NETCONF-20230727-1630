[
  {
    "startTime": "00:00:00",
    "text": "Yeah. Yeah. So I should then why don't I see it online. Oh, I need to Good morning. So Welcome to netcon working group meeting for ITS 117. If this is not the working group, you were looking for this would be a good time to exit. Alright. Thank you, and good morning. Good afternoon. Good evening. to focus online. Let's get started. next slide. Our Aditi. Alright. This is the note well. for the for IETF. please make sure you're following all the best current practices that are documented on the slide and on the web. Basically, by participating in this meeting and online on the mailing list. You agree to follow the IETF processes and policies. And if you're not aware, to go to these that are listed below. Next slide. We do follow a code of conduct At IETF, These rely on initial respect, and cooperation between participants And up and If we need to the chase, we'll intervene to enforce these guidelines."
  },
  {
    "startTime": "00:02:00",
    "text": "Next week. Nothing that you should not be already familiar with, but just for folks who are new, to ITFO and this working group. we are following the meeting in mid echo. Obviously, you're here, so you know that. You should be logged into me, Deco. At this point, and make sure that If you haven't Kent is walking by using the scanning tool, use that to log in to make sure these are your our virtual blue sheets with that I used to track attendance. There is a chat now. There's a chat window that you can make as as a separate window for people for to carry on the conversation. and also a Zeolyp link that you can use to provide comments We do have a to our slot with plenty of time to for discussion. And I don't think so. We will need a countdown timer, but we do, of course, have to finish it to ours. Please do use the queue mechanism in Meteco to Get on the mic, And to q, use the icon with the hand symbol to speak make sure that you've unmuted your microphone, And, of course, remember to remove yourself from the queue. We'll do that, of course, if we still see someone lingering. There is a notes page that we have would appreciate People contributing. to that note section for the meeting."
  },
  {
    "startTime": "00:04:02",
    "text": "right click and make it a separate tab if you don't want to be stuck. Just taking notes. Next slide. k. So where are we with the the charted workgroup items? It's CTP node of draft. is still in IAC review. The authors are working with the area director, to clear some of the items that were brought up as part of the interview. that Client service suite of drafts is working through 80 reviews and comments. And I Kent the author here is working to providing are fixing some of those Adjusting some of those comments. The TLS 1.3 Draft is in Shepard Review. And the rest of the drafts are work in progress Some of them being discussed in this meeting. the first three The final the list pagination draft is something that is not this meeting agenda. Anything you wanted to add for Client server. I mean, specifically, the client server, switch drafts, I think there's one else any issue that we might warrant discussion we don't have an an item on the agenda to discuss it. So would now be an appropriate time to discuss it or So Roblton, Cisco, Yes. I'm I'm still slightly behind with your latest comments. I haven't a 100 of those. But in terms of discussion we had today, The two aspects we we discussed was about effectively If you have I've managed to set up on particular fields, or requirements that's true on the leaf refs, then you either optimize the solution for the case where it's either setting the running data store or if you have a system data store. Now"
  },
  {
    "startTime": "00:06:02",
    "text": "We have that system data sort of draft in in net mod that sort of progressive, but we don't quite know where that solution is going to end up with. And the one thing I do not want to do is to, in any way, block these draft on the outcome of that solution. I I want to get them finished. So I think the one question I had really was I agreed with you that taking the mandatory of sorry. Keep the monetary on notes. was the right answer. requirements it's maybe is exactly the same concern, but that was the one I think that came up in other discussions I had. So don't know if anyone in this room has any opinions on that or understands the question well enough to answer. account as a contributor. I I think this dovetails with the with system discussion of if running must be validatable. So the mandatory true if you're trying to validate running document in isolation, then it would fail. But if you're merging the system where, in fact, those beliefs are defined. then intended would be valid from the perspective of those leaves existing and the mandatory would succeed. Yes. I think I don't know if anyone has any views in the room I'll send what I meant for Mike. night. So so I'll follow-up on the list on that and see if there's any other comments on there, and then if if there's not, I think we should proceed with with this in a way, which always most flexible change in the future if you need to. Okay. and to the feedback to the room, I'm still replying to Rob's 80 comments and I only stopped. I stopped at SSH to still have TLS the Netcon And Rescoms to reply to? Alright. Thanks for that update. So here's the agenda for the meeting. we have about 4 Items on the chartered list. We do have one a combination of non shredded items at the bottom, which will flow into the non chartered item list. But"
  },
  {
    "startTime": "00:08:01",
    "text": "That's what it is. Next slide. Okay. And that's the final slide the list of non chartered items on the agenda. k. We're done. We should be able to move to the next first presentation. Alex. want So hello. I am Hello. I am Alex from Incellion on behalf of the authors. and we wanted to give an update to the working group on UDP notice draft. this Okay. I'm not sure if it works. Oh, done. or Okay. So since the last ATF no big changes on the draft. We have published a dash 10 iteration of the draft. addressing some of the feedback from Mahesh and Kent. on the generic UDP client grouping. We added implementation status of this draft and did some editorial changes, and the authors would like to request more feedback on on comments through the mic or a full for a mailing list. Oh. Cancel the contributor. And, actually, I thought I'll just echo what I thought Mahesh had written to the list already But I think the request is to create a -- There is a slight product. Yeah. standalone UDP client server Yeah. So We have implemented it at in the same draft"
  },
  {
    "startTime": "00:10:01",
    "text": "the ATF UDP client are generating grouping for UDD clients. And we were asked also if there were plans to implement the UDP server grouping. The authors believe this UDP server, it not does not make sense to implement it in the same draft since it is not used. what the EP is used for for NetComm. And and therefore, we would like more feedback, opinions, what should how should we implement all this? basically. Right. So one is question. Yes. So yes to the fact that it probably it's good to have both a client and a server grouping 5th keeping in mind that you know, we have quick That is also something that they're planning to use for Net future. We don't know as yet, but Comp something good to have. Same for DTLS container. it would be helpful to keep it separate. from the server plan grouping. and this camp is a contributor to add to that. Not only do I think UDP Server is a good idea to have if you think about my own work with the client service with the drafts, It started off with just wanting to have a NetComm server. The and then be like, oh, you have to do the client also. And then I can't be just back up, needs rest up, and It just went on and on. I I I mean, the it was a difficult effort. I mean, there's a lot of work, but the result is great. and it's being used throughout the IETF now. I think the same is true here. So this is the opportunity to create both the client and the server even though your work only needs the client. I've even taken a step further in suggesting that should be isolated to its own document. And so there'd be one document called the UDP client server document. and then another, which is the work enabled to import or use that document. Okay. And would you be open to work together on on that?"
  },
  {
    "startTime": "00:12:01",
    "text": "Okay. Sure. Robleton Cisco. Yeah. I'd to echo Kent's suggestions, it sounds like a good idea to me. The one thing I'd say and also Mesh or Heather's point, I think, actually, reaching out to the quick folks at the same time, saying, we're doing this, are you interested? think it's a good idea. My slight concern is that thing and I slowed everything down again. But But I do think trying to generalize this out would be a good idea. Yeah. I totally agree with you. The my only concern was slowing than the process of the draft, but I'm okay with that. but there there's still an option of especially these actual separate drafts, the starting point, do the client service stuff and say say for quick, look, this will this work for you from from a starting point? If you wanna come along and write stuff quickly, we could do that. Otherwise, we can best that that document in the future and let this to store. So So I I think you can still try and get a middle ground, I hope. getting some of this stuff move your stuff forward, but still make it general enough that we can extend it well in the future. This makes sense. Next slide. So if there is no feedback, I think that's the end. Yeah. Right? Sorry. Just one second. So here, the same, Alex Wang from Insaleon on behalf of the authors presenting an update on the distributed. Notive. Left. Left. Left. Left. next slide. Please. Okay. So since the last I gave, we just published a new iteration, adding implementation status and some editorial changes,"
  },
  {
    "startTime": "00:14:02",
    "text": "and we got feedback about the observation domain ID that it's a bit confusing for the developers because the same term is used in ipfix. and the authors will rework this term in the next iterations. And like the last draft, we are requesting morphic back on on comments on Under this student, not if. Next. Yeah. That's it. any counts. No comments. Alright. Thank you. Thanks. Hello, everybody, on behalf of the Otters. some updates on the versioning in the Yang notification subscription. Next slide, please. So the the document was adopted in Netcon with the 3 version. We got during the adoption calls, some updates from Andy Beerman. regarding that one XPAS can actually refer to multiple yang models and also some inconsistency between 2 and section 4.1. Both of them were addressed in the latest revision and also some comments on where the additional leaf is being augmented, which I'm describing in the"
  },
  {
    "startTime": "00:16:00",
    "text": "the next slide. Slide, please. So this is currently the the the the the yang model, which we are describing, and then at the bottom, all So then an example on the subs on the subscribe notification message itself. That's all. if you wanna walk us through the change? Sure. So in so, basically, on the opens itself, we are now on the augmenting essence treatment IEP DataStore, there we are having in addition to revision and the revision label, we are adding now also module name. Alex. So Alex Wang in this draft. the main changes on this draft were addressing the XPAs that could be linked to multiple modules And therefore, we are changing the revi the module revision label and revi and revision in the same grouping. But instead of only one doing it by a list. Exactly. Thanks, Alex. Okay. So contributor. I'm just wondering to what extent you've interacted with the original authors of as a the young push drafts and Are they you know, are are they familiar with this work? Are they supportive of this work? So basically, everything was over the the the mailing list doing the the auto call, and also we had in the last IETF we some discussions in the Okay."
  },
  {
    "startTime": "00:18:00",
    "text": "But, I mean, they'd our our our they've interacted in strong support or do a member. Yeah. This is what they commented. I haven't gotten any feedback on the meeting. They Okay. Okay. K. To a phone from Huawei, I I read through this document, I think it might be some error handling? What if declined to a module revealing that the server do not support that doesn't supported. I think what if will the server return an error or a failed subscription results will return. I think might not have any of that. if I understood you correctly, are you asking if the So are you referring to the notification message or do in the subscription if the server is not supporting Yeah. During the subscription, the client subscribed and specify a model name and revision, but the server doesn't support that trigger. So so we supporting the the the current way of subscribing. So this is optional. So you can subscribe either to a specific revision, or you can subscribe to a revision label or you you can describe. It needs to be backlog compatible to a specific revision label. yet. But my my question is, what if the client specify the resilient, that the server does not support it. Will the server return an error? I see. So that that we need to add on the draft. Absolutely. Yeah. Yeah. Thank Thank you. Thank you. And I think the comment is more general in saying that she what she's referring to is any error handling. Exactly. So, yeah, this is Alex Tim. Lot of response again is one of the authors of 64139. I I I Okay. I I need to"
  },
  {
    "startTime": "00:20:00",
    "text": "review this, and I will respond on the list as about I'll I'll engage with this. Excellent. Thanks, Alex. It's a Roblton Cisco as a participant. So I I think this is great. In terms of adding this in, it's all fine. One thought is we've had some discussion on our email about Yang packages as an alternative way to to describe the schema. I'm not regulated to draft. I'm not saying that I think we had some discussion about it's the product ready to include direct references to it. but knowing what the answer would be for yang packages would be interesting. Would that just be extra augmented fields to give a, like, a young package? schema reference instead of or in addition to this, or would it be would it be wise to make this a choice statement to give that a choice between which you return. So the clarity I think, awesome thoughts about whether you would be expected to return both the module list and also yank is referenced. So we could do one or the either. It might be an interesting for 1. So that that's definitely an an interesting question. What would be interesting also for me as an author is would you like to have it in the subscription itself that you can choose the package. Should that be an option? Or do you think it should be only on the subscribe state change notification messages we are describing basically to which package that So I think when you make the subscription young model belongs to. that would also be useful to basically say to subscribe and use this this package or maybe it might again, it might be a set of packages. as the reference because I see aim of the amp packages is that comes like an alternative to Yang Library or extra metadata, and that becomes this defines the scheme of the device. Yeah. And hence, if you want to lock your subscription down to making sure the device is using the same schema I'm expecting. would be the would be the reference to put in your subscription that binds it. and then back to Chalfering's point, you would then fail a subscription if it differs. and give it an an explanation. And then if I understood correctly, it will be in the subscription that instead of"
  },
  {
    "startTime": "00:22:02",
    "text": "actually selecting a certain revision or a vision label. it will be then just the package and with that itself, basically, you Yeah. Very fine. The the package of the package revision or revision label. Exactly. Yes. It's like Good. Thanks. So Benoit, it took me some time to find a button. Sorry. So, Rob, what is the action for this draft. Right? Is this to think about how we could augment in the future? Is this enough or we have to wait for package because of the it's it's like, you know, a long time. Right? Yes. I'm definitely saying don't delay this draft for packages. that's not my intent. It's just to think about and maybe you have some text to say, is how we think this would fit in and make sure that there's not Hi, Jan. I passed flight control to you. Thank you. So I am John Indore, and Rokie Ingvion, my colleague would like to talk about transactionally and the related trace I'll start with the transaction ID developments. So control actually works great. And So The latest version now is draft ITSnetcommonsactionid01. There was This was adopted in the last meeting. So the major changes here is that When the implementation team started working on this on our side, we know the"
  },
  {
    "startTime": "00:24:03",
    "text": "a few things that were not quite optimal. So we changed the way the dynamic push was mapped with the transaction IDs so that instead of relying on external attributes. We have separate leaves in the yankush header. that conveying transaction ID information. because then yeah, and putting updates over REST conflict would also work without any sort of special attribute handling or something. same already, we got some really good feedback. And from James Cumming at Nokia. suggesting. One of the things he suggested was to add support for transaction ID in datastorecomparation. 144. So we added that and did it similar to list, but it doesn't depend on XML it's And, also, many other clarifications and questions are thanks to maintain Thank you. The implementation team also found some errors in that example. So they have been fixed too. And one of the things this implementation team suggested was that we can actually make this making this even more lean so that less redundant information is returned. if we can assume that server knows a little bit. remembers a little bit more about transaction IDs from the past. So by keeping a history, we can know more about what the client knows. and make sure that we only send the few things that are really relevant. So there are some potential future further savings to do in this mechanism that is trying to reduce the amount of traffic we sent. to clients that already have some sort of sync It adds a little bit or complexity to the server implementations. But what I think maybe more contentious here is that this is beyond what's the RESTCon solution, 8040, f provides today."
  },
  {
    "startTime": "00:26:02",
    "text": "So the there's a question I will ask the chairs for a poll about this in a minute. other thing that Good. the implementation team came up with was that You could when you do a get and getting transaction IDs and various in the data tree, in the config tree, You will notice there which nodes a particular server considers had it is tracking transaction IDs 4. But you can see this from the yang mode itself only. So if you're offline or trying to develop towards the device that you don't have to do right now. you don't know where those transaction of these are going to sit So they suggested, what about we add an extension for that so that can we allow people to mark. Here, it's gonna be an transaction ID on this node here and this other node here. So that's interesting. open possibility for us to add. The the implementation team is all also asking if we shouldn't be using defining and using metadata we're getting, that's RFC 7950 to to And that's actually something that was considered early on by me. But I think that the behavior in that draft is not not consistent, but with RC80 40 REST count specifies for the behavior. that's why I decided not to use that because it would be confusing to have Even if we write this does not apply for responses or whatnot, it's it's would be confused So I decided to knock it down on that at all. So just to explain this savings a little bit in a little bit more detail here. Let's say that we have configuration 3, with a few notes. and some of those notes have a chance an ID associated with them. That's the one with small dots around there."
  },
  {
    "startTime": "00:28:00",
    "text": "And then the client comes in and changes with the node at the bottom, and then the transaction addit trickles up all the way to the top, top, top, And then on the next slide, I'll show you what happens with some different mechanism assist. So we in this document, we describe something called the last modified transaction ID mechanism. And we have the e tag, transaction ID mechanism And what is now proposed by the development team was this etagplus memory of the sequence transaction by the mechanism. sucking like that. it had to accept. where remember in which sequence various transaction IDs have been executed on the server. Then if we have a client with no transaction ID support at all, that's the is find 0 on the left here. you have the 2 data tree being like this. Somebody updates as we saw on the previous slide. one of the elements, the middle element on the bottom, and that trickles all the way up. So if you do a sort of get config with transaction ID awareness at the bottom. Or in in the client 0 case, there's no transaction ID at you get the whole subtree. change nodes and unchanged node. like, like, a like, a like, With e tag mechanism, you would, as a client, specify the transaction ID for a few notes that you know about as a client. say, hey. I know the transaction ID of the top node and these 2 left or right notes. And then the server would reply with the notes that have been changed or that you don't know and think about. So then you get the 3 yellow changed ones, and you will get one bonus unchanged elements because you didn't the server the sorry. The client didn't speak about the transaction ID on the lowest node there, so it the server couldn't know if he knew that or not. In the restconefegcase The only thing you can communicate to the transaction ID for in task is the top node. So there's no way to do anything else. A rest can't. It's a limitation of the rest can't"
  },
  {
    "startTime": "00:30:05",
    "text": "transaction ID or whatever mechanism that you have there. You can only do that as a header in the message, which means you can only speak about the top level. So you can only specify the top level nodes since the top level node has change transaction ID when you do a get count for the rest counts, or a get or a response, you will get the whole subtree anyway. So the savings is not so great in this particular API. And in the third case, this this is this is what the development team was proposing here that okay. Let's say that's we keep history servers. So we know all the the sequence of all the transaction IDs that have been and this client is is applying a later transaction that you know. we will know that he already knows the right most down bottom notes. So we can return only the actual exact notes that have and teach. So that's minimizing the communication even a bit more. But this is something that is not possible over REST Comp, really. So It's only for NetComm. And my question to you now, is oh, this this check mark and and checking experience, this question mark, there should be a check mark. But my question to you, and I would I would hope that chairs bring out the poll is if we should try to define this additional mechanism that even more conservative when it comes to communications. on and then deviating or adding things that are not available in rest of. Or if it's better that we stay true to exactly the same functionality as a response I don't know what the room thinks. So Kent is a contributor. I know you spent a few slides there trying to describe as new mechanism, but I feel like don't understand it completely. So the"
  },
  {
    "startTime": "00:32:01",
    "text": "So do I understand the proposal to be that the server would then be stateful. that it would have to remember the history of the request from the client? Not from a particular client, but you would have to remember the history of all transactions. for a bit. the more the better the more savings can be done. if it's an if if it keeps a record of the last 100 transactions than for most purposes. you you would be able to give all clients an exact list. These nodes have changed since you last did the check. And -- Because -- leaving it -- The server The server has a history of the transactions. And then in the client's request, it and it it provides the last transaction it was aware of. Yes. Exactly. And then the server is able to to deliver the diff towards that. transaction because all the nodes are marked with the transaction ID. deliver all the ones that are newer than that one. see. And then just the final point is that the ability for client to specify the last transaction I was aware of. it's possible in neck cuff, but not so much in breast comps. Yeah. I mean, if you look at rpc8040, that mechanism is is not there. So we could define this graph also, but the current definition that exists in 8040 does not include this. Is it actually 8040, or is it the HTTP specification that 8040 depends on. Now, I mean, you would you would need to have some tech in 8040 for this to work. and the date's not there now. We could add that also if if if So but so far, I've tried to make sure that we get more or better functionality in NetComp than Rev Comp, but it should be really easy to do both at the same time. It's very compatible, but this would go one step beyond that. But maybe it's actually worthwhile to do this also, press But the question is, really, do we want to straight to if if they stay true to net to rest comp as much as possible, or can we add more functionality for rest for net cost, that makes it"
  },
  {
    "startTime": "00:34:01",
    "text": "even more. saving. or more efficient. I suppose that could be a poll question as well. Okay. I see Rob is in the queue. So -- Robleson. So It's like a clarifying question as a participant. Is I don't really understand the mechanisms exactly. Is the e tag plus sequence and optimization? So you said if you store more history, you can give a more accurate answer. So my question is, Is it possible that you can have you have service that support e type per sequence, and it gives you the more they the store that would, like, reduce set of information you were returns you, but if they store less, it might still give you effectively the answer of client 1 if it is, like, us on the history. So if they have a solution, So so you could effectively say, if you were to support e tag per sequence, that sequence is effectively like an optional thing I'm a a could generate that to saying I have a sequence length of 0, and, hence, I affect for than the case of client 1. Exactly like that. Okay. Thank you. We're preparing a show of hands. ball, sequence. Probably start off. Shouldn't that open restaurant support p percent. Yeah. We're trying to come up with a decision tree of the various pull, quite basis. Just one question is whether we should stay true to Comp, or we should have something that's more efficient. the only one. That's Okay. Let's stick with that. again as a as a participant. Originally, when you were first presenting this, I was thinking, oh, you're adding too much complexity in here and driving too to more complex solution. But given it's entirely optional to implement then as long as a client"
  },
  {
    "startTime": "00:36:02",
    "text": "might try being return to exams and might I don't even return the error, but you can't return Or you where you can just return less data. Actually, it seems like just an optional enhancement effectively be implemented. In which case, that sounds reasonable to me. Yes. I mean, that's exactly the thing. Do we things to be very similar in Investecompandnetcom, or do we want this added see that we can have and then come on low. earnings. Okay. Just when you're ready. we have Oh, Rishad? Prashad, you're in queue. Did you wanna say something while people are filling up the pole? Sorry for the delay. I was The poll was distracting me. Just in one of the previous slides, John, I think you said One of the next steps is to tag individual nodes with an extension to show whether they're being versioned? that's part of the And optimize it This is an orthogonal question. It's just if you want to mark in Yang, which nodes in your implementation that will have this or not. Okay. I'm having audio issues up on my side. I'll sync up. Alright. Okay. Thanks. Okay. So now can we change it in the poll now? So we can go ahead and close it. out So overwhelming"
  },
  {
    "startTime": "00:38:00",
    "text": "yes to allowing variants for support of discount, I guess. majority, majority, Yeah. Yeah. Vegas. Thank This just tells me you. it's worthwhile to go ahead and try to specify a maker. We will have a second chance to say yes or no to that result. In the end, that's not the problem. But this it's good enough support for me to think I should spend some time on. that's that's all I wanted. Thank you. And for the next steps here okay. So I'm also interested in people if people wanna make comments about having this extension in the Yangtree to mark this or not. If you wanna say that on the list or right here in the room, that's that's interesting too. we should do. But it's probably easy to define. And the our next step after that is further implementation experience. So Rob Wilson's suit, Cisco, as a participant. So, yes, I wanted to come to the Yang extension because that that might be helpful. I don't know. then you have the limitation effectively in Yang or by being extension, and you can only to modules that you're also defining. And hence, whereas this is an example where of you actually probably want to add the extension onto an existing Yangmodule. And so there's that piece of work that we've talked about many times that might be interested to find is is like a yangannotate extension that allows you to modify existing nodes. I know you have an implementation of doing something for that. for MF. And so and I know that we have an implementation to do that for other places. It might be a time that which we we got together and defined one standard way of doing it, so that'd be quite I think this is the no tags work that's in that box. Yes. I think that exists already. Okay. Well, Balaji, Angel, I don't fully understand Rob's comment because it's possible to add a extension with the deviation. So you can push it into, I don't know, the IETF model if Eric on or whoever wants to implement it that way."
  },
  {
    "startTime": "00:40:03",
    "text": "thing I think this extension is rather important. We sometimes have Another unbalanced trees where one side is very big, and others is small. and they're knowing that I can version demos. check the transaction ID separately is very important. as a contributor, I'd also like to offer support Kent for the extension. Thank you. I think we can move over to trace. Okay. It's yours. No. No. Don't there's a few store more slides in this one. So don't take it Sorry. try to bring back you have a back? It looks back Okay. last time. Hello. Hi. This is Rote. Can you hear me? Yes. Oh, okay. So I I'm gonna be talking about the next two draft. These are as we were mentioned, was still individual contribution draft. And one of the key things that you'll see here is that we're talking about 2 drafts this time and not one. That's because we submitted the version 00 of the ResCon sibling, for the NetComm draft, Both of them touching the same extension for for trace context. Correct? So Hold on next. Next. Okay. So the changes that you see from in the case of the net contract, from the the previous version to this 3 version. First, we completed the error handling and the"
  },
  {
    "startTime": "00:42:00",
    "text": "we define an s x structure with an example. We also received we improved the introduction for the feedback we had in the last IT, everybody, the idea of adding comments on how all the different draft in this area work together. And finally, we did receive initial feedback from Mariana. on the submissions we were gonna be doing. We also incorporate that. Regarding the RESCon's draft, it's it's a new draft. we were just you know, there is the same concepts, and of the key things is that it's much simpler because in the case of Reskov, We are basically requesting the adoption of the w c the w 3c, headers already defined there as a as as a working as an approved standard. Sorry. So in particular, talking about the risk of draft, It is basically 22 sentence. to adopt, associate these these headers. And One of the other point is because in the NetComm graph we adopted versioning, and which is not part of the of the 30 3 c, intimitation, We we wanna make, you know, advantage of that. So a risk of client can also understand which versions of the headers are supported in the server by looking at the at the at the Yang Library. So what about next steps? And here again, we we have the the icon issue. But yeah. basically, we completed our to do list for the netconf draft. with the error handling, We published the rest of Civilian document with the CDC headers, Another thing we've done, we work with the w 2 c that the, you know, the how what was the process to submit the registration of the they're keeping a"
  },
  {
    "startTime": "00:44:00",
    "text": "of all the different protocols that are implementing trace ID, trace context manipulish, handling, and there's a simple process to do that. We already know how it is. But, probably, we'll need to know, get the chairman's comment once hopefully, the next steps happens. which is regarding the working group adoption. We think We are now in in good shape for that. ready for starting some implementation experience, getting more feedback from the working group. The last point is not related to this draft, but it could be some future work. WPC is working on some some draft also in their side headers, that's called baggage. that that could also be interested to adopt for restconfirm netconf. So just to remember, at the end of the day, the end goal of this draft, is when we have clients and servers talking either NetComm or RESTCon, So we're gonna have trace context exchange and that will allow the export of the data to for example, using the OTLP or the open telemetry protocol, which is the newest, you know, cool thing to do for cloud based application. and that will allow us in when as a monitoring element to have all the traces from different client and servers all connected with the same context with the same trace ID. Just to give you an example of pre draft implementation We have work in in our slide. So that's about it. And we do have that questions regarding the working group adaption. that we think we could take to the to the working group either here or in the mailing list. a half year rent. k. Sorry. We're preparing a show of hand pulls, show of hand pulls, both. I guess, either. So Okay."
  },
  {
    "startTime": "00:46:01",
    "text": "At first, we'd like to get a poll for who's read these transcripts. 6 Okay. We have forty four people in the session and only 22 responses. It's a fairly binary answer. and anonymous. should we proceed. One moment there. credit. think it'd be fair to assume if somebody has read the draft, they participate in the poll and say they have, and you can assume that if they've not happened. Okay. So it seemed like not too many people have read these drafts just yet. do you think it's even appropriate to poll for adoption? think but Okay. So maybe we should allow a little more time to go at least read to the drafts before we call for adoption. which we can always do on the mailing list. also."
  },
  {
    "startTime": "00:48:06",
    "text": "Fine. Thank you. Hello, everybody. So I'm going present the status of the configuration tracing drafts. Oh, I have control of the slides. So the the motivation to recall quickly is to understand how to find whenever we see that something is wrong with a configuration, let's say, on a network element to be able to goes through the hierarchies of controller and artist retails, and find out what is the what is the the the original query that resulted in this configuration, And so that's the the program you're trying to solve here. And so what we did is we aligned to what hopefully just presented, which is the w3ctraceparent. So Before we had some we were using the concept of transaction ID and now in this version, we're using the concept of trace trace ID, which is the same along the way. So you see here that trace ID on the left is a tier 1, and it's the same for the whole configuration, Chen, let's say, And so we model this and to be a little bit complete, we model the w three c trace parent in In in young, And so this new version simplifies a lot, let's say, some of the issues that we had before because, no, we don't have too much. the transaction,"
  },
  {
    "startTime": "00:50:03",
    "text": "On the Northbound side, let's say, of the controller to the transactions, on the southbound side, they all have the same trace ID. So it's it's much simpler. And as you to place a little bit this work with respect to what okay, presented before. It's like the device view. Let's say if we don't have the the the the trace recorded in the in the RTP collector. It's the device view of the the same thing and we can do that just by hoping from device to device So this is our we model the w three c trace balance. So it's basically just some sequences of x digits with various lengths. and the this is the new version of the algorithm. So as I was saying, as long as we are able to get the client IDs for a given trace ID, we can go back up the shelf. So, basically, we start from the any. We say, okay. I see that I have this change in the configuration. I'm able to match it to trace ID and the client ID that I could go to the controller, following the client ID, which will tell me which controller to go to. And then I will again try to match the trace ID and if there is again, the client ID, and and and and then I can go to that client ID, which would be the orchestrator. and then maybe I reach the end, and I will have the let's say, the local commit ID under our case reader, which means I know what is the, for instance, service request that created the the configuration. So we still have something a little bit on this unspecified in the draft. where to get the client IDs."
  },
  {
    "startTime": "00:52:03",
    "text": "The client ID is what is the client ID is out of scope for the draft is kind of the inventory issue and each basically, each clients which are orchestrator and controllers in the in a network should have their own unique ID There is a question about whether we should do a more general solution Instead of presenting, let's say, the device view, that maps the local changes to a transaction to a to a trace ID. Sorry. Should we Actually, take the module the the the same format as what is exported. by the the existing software that to the export of the trace. And and add what is missing, which which which would be the client ID and the local commit ID. So that's a possibility. 88 That's an idea. I think the the the model that we have is is is it simcoe. And there are some question that that we have closed. So, basically, let's move is solved because, no, We have the draft that ROCE just presented. and the collision between the self bond IDs it's solved because now we have a trace ID, and it should be unique. So Yeah. Basically, this is this is all for me. So are there any any question? No question. The charge of preparing a show of Henkel."
  },
  {
    "startTime": "00:54:21",
    "text": "Okay. Same as last Paul, have you read the drafts. Red the drafts. Red the drafts. Red the drafts. Okay. That's probably good enough. So the same results as the last poll, actually. which was, you know, about, you know, 9 or so, same they've read. about 20 saying they haven't read another 20 that didn't vote at all. And it makes me wonder. I it's probably the same group of people that are read the the last thing in this. And but or in or not red. Right? And so the general interest level. I mean, I and and I do believe the working group has interest in this work. and and and tracing. Right? Both the at Lab Previous and and this are about tracing. I do believe there's general interests. but the results aren't really indicating that. So Maybe they need more time. So"
  },
  {
    "startTime": "00:56:01",
    "text": "and that might just get more people to comment on. the draft itself. So Wilton's just go I'm sorry. I've not had a chance to read the draft do think it's an interesting problem. The one question I have in my head is what level of complexity is just adding on to the service. So that's the thing I want to understand. in terms of what the actual implementation impact would be to do this. And is that worth the cost of doing this? So I I you know, also, are there alternative solutions that reduce that complexity? So that's the thing I don't no because I haven't read the draft. So and So, basically, we would still let's the implementation that Jan is doing Jan and Ruker are doing for the for the netconf trace bound trace context either. So we would it would be the same complexity as that. The only thing is then we need to populate this these fields from the on the server when you receive the let's say, the the readers, you need to populate the the young module. based on these others and whatever local system you use, to track your your configuration changes. So that's I think that's not a huge implementation effort on the on the seller side Benoit, So there are 4 different documents on transfer ID, are the last IETF, Jan Lingblatt, did the what I thought was a good presentation to give the overview of the 4 different drafts and how they were complementary. Jean in the last session was saying a couple of sentences like, well, this is the view of ROCE, but from the device. And this one is solved because"
  },
  {
    "startTime": "00:58:01",
    "text": "solved by the Turkish draft. So maybe if we want to get this well understood by everybody, it might be beneficial to redo this and say, We have 4 different pieces and they work together. So on the ad adoption call, for me, it's not just one tiny solution. It's like, all of these together. So that's something that the the author discussed privately, and maybe that's a thing to do. agree. I agree. sounds helpful to me. Young. Pretty good. Actually, I asked the the chair, see if I should make overview here as well, but they didn't come back on that. So I did didn't wanna repeat myself. Anyway, I think when it comes to the implementation effort, I think one important aspect is how much reuse there is in existing technology. And this one, the proposed solution here is depending on the w three c, the for the web consortium's definitions. So there's already a lot of tools out there that use these headers. So I think it from that standpoint, this is a very inexpensive solution. It's already reusing a lot of the out open source and commercial tools out there. So, Rob Wilson, Cisco, I think it was I think it was more thinking in terms of not in terms of what code and libraries already exist there, but the actual what estate is being stored. again, I don't have a feel for what the solution looks like. Is is this being state stored in a separate table? is this that you annotate extra metadata through your YAN configuration tree? And if so, How much metadata is that? And, again, you have different views on how costly that metadata is depending on whether can share it efficiently or not. So that was the questions I had. I mean, comes down to it. Don't understand. 100 of jobs, don't understand what the solution is. And then I have attachment, let me quickly comment. I'll say that compared to all the rest of the configuration and that's things that are happening."
  },
  {
    "startTime": "01:00:01",
    "text": "is very lightweight. So I think Benoit had a a proposal for their overview, to be presented again so the working group can understand how they all fit together. And, also, I think there's a proposal to adopt them altogether. So as as a joint adaption, which I agree with as well. Yeah. I would agree that I think having that overview again be presented. May and the next two IETF. would enable, enable, I think people here do not only understand, but the adoption process. Well, maybe not even the next IETF. I I'm not sure if we're prepared for right now, but if the slides are the same as from last meeting, then maybe we could bring them up again. Is would that be possible? John? Yeah. I can bring up the same flights again, of course. I can. if you want. Okay. So how about we move to the last presentation and then the chairs can reload slides from the previous IETF. We do have time on the schedule to do this. So Okay. Okay. Okay. Hi there. So James talking on behalf of the authors myself and Rob Wills. Cisco? Just wanted to do a couple of things. Firstly, recap NetCon for private candidate solutions for next slide. some Give a quick reminder of what it is. So the idea here being that Every session can have its own candidate configuration"
  },
  {
    "startTime": "01:02:00",
    "text": "and for both NMDA and non NDA capable servers. and and maybe that's an open question for the working group later. You can store and stage all of your changes, do multiple edit configs, managers and men formally usual operations on your candidate. completely independently from another sessions candidate. and the document describes how to do that. on their conth and in the 2 version. We've added rescom for as well. And follows feedback from the working group It also details what is a conflict when you make commit changes or update changes between the different candidates, whether it's the the shared candidate or the running configuration. and how you can resolve those conflicts as well. within the system. So next slide, Just graphically to kind of explain this, so it's probably a bit easier in some respects. We have our running configuration in the middle, and a number of private candidates shown. So in a kind of timeline way, you left to right Your first session creates a private candidate. doesn't edit config. then does a commit, and it kind of treats it like a and source code type of bridge. basically merges it back into the running configuration. and then performs an automatic update at that point. So commit triggers an update. which means that your private candidate is now back in sync with the running candidate, the running configuration. but it does not close that private candidate. would close it when you when you close down your session. So you can carry on making more con edit configs and do a commit again and so on. the meantime, you'll notice down the bottom that In it. Kinda 2 was opened it is baselines against the running configuration at the time it opens it."
  },
  {
    "startTime": "01:04:01",
    "text": "It can do its own edit configs completely separately from private candidates 1. You'll notice there's an update here. The draft specifies 2 methods, an automatic update method, So it's called continuous rebase mode. or a manual rebase mode. So, basically, this could be either the system or the user inputting an update saying, right, go resync back in with the the running configuration. or depending on the server's implementation, which we we detail how to signal the draft as well. It could be that at this point that private candidate 1 commits to the running. the running automatically updates all private candidates. So that's the continuous rebase mode. So now your private candidate too is synced with running, and you can array on making your changes here. But they discard it at the end. So And then the sessions are destroyed you close that session down. or lose your connectivity. So just from a kind of graphical perspective, it's been easier to explain it. using that. Next slide. Thank you. So in 2, we've added Rescomp, as we mentioned, This works pretty similarly to the shared candidate. which is also very similar to the non NMDA approach. So, basically, once your session is in private candidates. It's it's private candidates for for the duration. we spent some time defining the semantics of compare. and how to extend the compare operation. and we added a reference point parameter that I'll talk about in the next slide as well. for that one. And then we'd mentioned that you should signal what resolution message you have and what you use that you're using private candidates, but we didn't mention in detail how. So we've done that as well in So next slide."
  },
  {
    "startTime": "01:06:01",
    "text": "Next slide. guest. So this one in the the PowerPoint version is slightly animated, so it makes a bit more sense. So we'll we'll go go with the red version. So there's as we build it up, there's There's various points. So you've got your yellow creation point. So this is all about compare. Your yellow creation point is the point your private candidate is created. So your your branches started. We have the the red now point where you are in time at this moment in time. And then the last update point just see you. So compare would work in that you compare your private candidate to store with one of the other data source. So by default, it would be compare my private candidate with running, for example, So that's red to red down here. It's also beneficial particularly given that there are 2 methods, the automatic rebase, and the manual rebase, to be able to compare your own private candidate now with where it was at the last updates, updates, peace. So we added an extension, a reference point extension to the compare operations as well. So the draft proposes changing that And likewise, also from where you are, within your private candidate, to the creation point of your private candidate. And these two could be different because as you see this update point last update point moves with updates. And if that's manual, that's quite obvious. But if you're in the a continuous rebase mode, maybe that move is less as to the fact that it's actually happened. So that's why the last update and the creation point ones are are both there. So that's the extensions we're proposing to compare. I think There's one more slide, I think. There is And"
  },
  {
    "startTime": "01:08:01",
    "text": "So this is the the third time of presenting this, I think, in the 3rd iteration. So and we've had some some feedback. but we'd like to look at the working group adopting the work We did a show of hands a while back where People said it was beneficial work, and we we should do it. And we'd also like to ask for some kind of specific attention from the working group on the conflict resolution and detection piece because that, we think, is kind of vital to get bright. I think we're We're pretty close for that piece. I'm thing we did come across when we were looking This, in particularly, the non NMDA approach, where we send teacher signal that we're in private candidate mode. is none of the drafts that we could find, and maybe we missed them. detail how you deal with A secondary hello. being sent. And we've we've seen in kind of in the industry, there's multiple different inconsistent implementations across the board on on how this happens, So for example, if you send the private candidate capability. Hello? Oh, sorry. You send a hello without the private candidate capability, and then subsequently, you send 1. with another hello with a private candidate equity. Should we Ignore it, close the session, or somehow elevate ourselves to a private candidate. So this just came up as kind of one of the discussion points we'd noticed. There was some some inconsistency and and the drafts weren't specific. So whether it's dealt with as part of this or whether we should deal with it, just subsequently as a working group that which should be specific what you do with a another hello that maybe conflicts We should probably clarify that anyway. Japanese. That's it."
  },
  {
    "startTime": "01:10:01",
    "text": "Okay. So, yep, as a contributor. I think the reason why we don't have much discussion about how do we deal with conflicts if there's multiple hellos because there isn't support for multiple hellos. The hello is only supposed supposed to happen at the beginning of the neck of I yes. Absolutely. It's supposed to happen, but none of the draft say that specifically that it should be happening only at the beginning and if you send another one, it should be ignored or dropped or Okay. They're just I don't mention it. That's interesting. I agree. I think the intent is that there's only the one at the beginning, but that it wasn't as stated as a problem. Yeah. No. I I I think that's that's my belief as well. But, you know, we found some con inconsistent implementations across the industry. So -- Right. Right. -- it's not clear. But but also taking a step back when NetComm was first defined, it was prior to Reskoff being defined. And since then, I think we've moved as a working group away from the idea of doing the capabilities exchange in the Hello, more towards the Yang Library, and and specifically that there can be Yang Library notifications that can alert clients to the fact that new capabilities open made available. And so the problems still exist that where where the possibly the capability, wasn't it? existing initially, and then it becomes available later. Yes. So so Yeah. And and it's actually visible even in that kind of base capability. So if you start with base 1.0 and then you send base 1.1. what do you do? And and there's the definition complete inconsistencies there. Sorry. considering Kent, I think the protocol capabilities are not included in ITFTN Library So this case is outside that. Maybe we should put them or they're in the net con of monitoring. which doesn't have a notification Yeah. But this is a new problem."
  },
  {
    "startTime": "01:12:01",
    "text": "and it may be an entirely separate problem from the product candidate system. And we noticed that was very unclear in all of the the previous work that's gone before us. we should tighten out properly. so separately. can't find my hand tool to put it in the Q Can. I Yeah. Shuford Wells, of course. Okay. From 1st. You didn't hit the queue button up. Gail. go back to the previous slide. Yeah. I just noticed that the private candidate is destroyed on the session close. Right? Correct. Yeah. But Why does distro edge when a commit operation is finished, Yeah. So that you don't have to adapt Why doesn't it destroy? the private candidate if next time you want to edit it. Because your session might still be open and you might still be wanting to do additional edits to it So you have 2 options. You could we could, destroy and immediately recreate it. but that seems kinda more work. If we already have it open, it's it It is up to date. And the reason that we didn't do that was also because the update mechanism has a default and that default could be changed on a particular server implementation. And when that automatic update happens, it could follow those resolution rules as well. So there would be some consistency between When I always run an update, whether it's manual or automatic, it always has the the resolution rules that I've decided for my implementation. And there's 33 options given for how you deal with those resolutions. that's the reason we did it. But you're right. As an alternative could be to completely destroy it every time and then recreate it. yeah, recreate it. If next time you still want to add a config, to write that."
  },
  {
    "startTime": "01:14:00",
    "text": "Yeah. Absolutely. And that would be the same as closing your session and reconnecting with a new session exactly the same hated the Okay. So will a client have an some other extra implementation complexity to support this private candidate? I think no. No to We've specified ways of doing it for NMDA capable and non MDA service. So in a NMDA capable server, the client needs to know do nothing different We would address the private candidate as a new private candidate configuration data store, saying there's any others. So there's updates on the server side. from a and from a data that you might send from the client, but the client's doesn't code changes, And on the non NMDA capable 1. the client is required to send a client capability. But pretty much all of the times out there. do that today. So There's either no or very minimal code changes required for clients. Certainly, we have implementations of that piece already from a client side. Okay. So My last question, do you allow the private candidate that store to be coexist with a shared candidate? do we allow the private candidate to be the shared candidate? To be coexist with the shared candidate? Yes. we are not restricting that from happening. Now an implementation may choose to restrict that from happening. But the draft, we're not prescripting those two Okay. But if you already have the private candidate, why Just the client right to the private candidate. Why should we require a shared candidate. We don't require a a shared candidate. So an individual session will choose whether it wants to edit a shared candidate. a private candidate as part of that. either capability exchange at the beginning or as part of targeting the relevant data store in the operation."
  },
  {
    "startTime": "01:16:01",
    "text": "So the client makes a choice, I I want to work in a private candidate. or I want to work in the shared candidate, and different clients may choose to work in different ways. So you may have a one client over here editing a private candidate. other client here is still using the traditional chaired candidate model. There should be nothing from that. in an hour opinion from a draft perspective that precludes those 2 things from happening. it's it's fair that there might be implementations made used to Now Yeah. Yeah. lock one over the other or only allow one at a time or however. But I think that's an implementation specific thing that we didn't want to mandate Okay. So is there any I think the a backward compatible consideration because I thought the lexic lines might do not understand the private candidate and it's still trying to ratchet to the shared candidate so that settlement still maintain a shared candidate for that lexicons. yeah, no. There should be no backwards compatibility issues because in the NMDA where you're specifically targeting a private candidate configuration data store. And in the non NDA way, you you turn your session into a private candidate session at the beginning of the session, and it remains the duration of that session. And And, actually, it was one of the reasons that that the support is immediately there for you know, 99% of clients is because in that non owned VA way, you target candidate like you did before, it just it happens to be the private candidate rather than the shared candidate. Okay. Thank you. Thank you. No problem. Robles on the next slide of just a minor comment on the hello handling to just to say that there's the net comp issued tracker. so I would suggest trying to decouple the hello issue from this draft Yeah. Raise please raise an issue there to track it. have the conversation on the list to try and see and get a resolution to what that should be. I'm not sure we can fix it now, but it'd be good to at least have the discussion and have it documented. So that'd be great."
  },
  {
    "startTime": "01:18:03",
    "text": "don't I wouldn't take this to that. Yeah. Yep. Right. Kent is a contributor. I am looking at the Yang Library. You're correct. It's doesn't doing the it's not doing protocol capabilities because change. but I'm now looking at 8040 and how it handles it. I think it's in the monitoring state monitoring. Mhmm. module. So maybe we need I I agree. We can't solve it now, but we should track it and look for a way to track -- -- decoupled. It's just it was It was relevant when we were trying to work out However, non NBA capable 1. should work We had some some people who thought that Asian. be able to send another capability and elevate it and And even Maybe that shouldn't be the case. also, in response to Shafang's question, I think you said that it might be possible for an implementation to disable the shared candidate. it I don't know how that could be done. No. I said there might be possible for an implementation to say that should be using one at a time, like, either private candidates or you kind of by, say, locking, for example, but we are not mandating anything to do with that. So we're not saying that should be the case. We're not saying that should happen. that's an entirely separate implementation thing that we wouldn't we wouldn't do for Right. Well, I guess my my observation is that currently the shared candidate is the default. It's implicit. There's no way to indicate that it's active And so the presumption is that it is always active. with these protocols. But it can be locked. So an implementation could lock it. Okay. And Okay. So just echoing sort of Kent's concerned there, I think, actually, maybe in the capability exchange do, maybe it's worth having a capability to make it clear whether you can do both or not or something like that. I don't know if that's an option."
  },
  {
    "startTime": "01:20:00",
    "text": "Yeah. I mean, if the working group feels like that. is a concern, and we should specify and our view is that we would leave it as it is today, not not change the behavior for share candidate whatsoever. Product Canada is just the nation. if a particular implementation wants to do something that that restricts the use of these approaches and would be up to them, but I don't think that's something should put in a draft. You know? Well, I guess, when I was thinking of it, maybe you just say client search. We're gonna move forward with a private candidate. That's what everyone's gonna get, and, actually, that's best behavior anyway. So we don't support the shared candidate going forward. is there a way of communicating that to a client so it knows? It's the thing I obviously was wanted to get to it. Sure. there. Yeah. I mean, on a per session basis and on NDA 1, and everybody doesn't stop it. that session, it would essentially stop using share candidate. anyway. because whenever you say candidate, it means private candidate. Because the capability flanks -- Yeah. -- you're you're specifying as a client. is a client you say, hey, I'm going to use private candidates, and this is what gives you that kind of backwards compatibility for all patients that are out there right now. And then when you reference candidate, means a private candidate. So you sort of have that or they're not explicitly as you meet. in the non and MBA capable of reach. And so in that case, if if you try to connect without the client specifying the private candidate flag, and naturally, it would get the shared candidates, maybe having an error just to say this isn't supported. Maybe it's already covered, but effectively having a way to communicate that You you the search is not gonna support that. Yeah. I I don't know that this draft would be the right place for writing something that says that netcomm implementations can disable shared candidate entirely. that. many seems I think, Kate, I think, candidate's an optional"
  },
  {
    "startTime": "01:22:02",
    "text": "bunch of that means require the implement of -- Candidate is. Yes. Indeed. Yeah. And at but what we have said is that to use private candidates, you must emphasize the candidate capability and the private candidate capability. So maybe that is the bit that we would want to rework or need to rework if that were the case. and we were to say, hey. You could disable check under this entire Just worth thinking about. Sure. Yeah. That's definitely good. discussion point and certainly something we should There's a word you need to talk about a bit more length Can you bend the microphone? I did you encounter Olga Hubbell Huawei participant. I'm just foundering, have you encountered any scenarios use cases where you may have to keep the it between the sessions. Like if there is a backup scenario resilience or you know, some problems with the session and you have to reconnect and things like that. So the shared candidate will in in many who can do that. The private candidates, we had explicitly said that we wanted to destroy any changes, discard any changes the session closed, So we haven't looked at a persistent candidate as part of his work. currently I mean, if it's if we fail as a group that it's something we we should look at and then we we can. But our our feeling was that it was not something that we we needed to target. Okay. So I believe that shares have prepared some show shove hand pull. Again, if you've read the draft, Bye. Good. pieces."
  },
  {
    "startTime": "01:24:14",
    "text": "focus on basis. Do we think we should adopt it 5050? Okay. The numbers are still coming in, but it's fairly split. Oops. Changing a little bit. I think it's fair to say those who haven't raised the hand at all. haven't read the draft. but I'm a little bit concerned about this pull the the reading of the draft pulls not having much participation. And and yet, I think I hear a lot of interest in the work grop And I'm afraid that we're gonna get into the situation where we're not moving forward. And so I'd like to move anyway to next show hand pull, of you know, do we think we should do we think this draft is a good basis? for moving forward for the working group adoption. Of course, we can adjust the details as we after adoption. So we'll prepare that poll. And I think you also had some other questions that you wanted to have poles on your last slide? I'm the last slide. No. They weren't so much specific questions more of an ask for people when they when they do read the graph, the next time around or or those who haven't read it to and focus their attention on It's really the the very specific areas that form the basis of this draft that final we get right. tick your own what is a conflict and how do you resolve"
  },
  {
    "startTime": "01:26:07",
    "text": "Okay. Good. Thank you. While the results are coming in, it's far unanimous that People believe this is oh, okay. I spoke to soon. Almost unanimous that people think that this is a good basis for adoption. And this is what I thought. I I do perceive a lot of interest in the working group Maybe the question of if you've read this draft is, like, too specific but the general interest is there. And I I also believe this sentiment is for the previous drafts with tracing and and the and the transaction IDs. So that's why I I I want to do this So the normal question I ask, when I see lots of support for this. There's two people raising concerns. If you bring your question to the mic or on the list, that would be really helped to understand. why don't think this is a good basis because it's good to see what it's you visa of So I think the most difficult question on this draft is not capabilities that we'll solve, but how to merge, how to notify the user of a private candidate that up an update happened I see those as the most risky ones. Yep. And, actually, in the manual rebase mode. That's that's less of an issue. The auto rebase mode absolutely. That's that's a an issue. And then so assuming that you've won people who voted against. I don't know. So can I ask a different question that says, think the worker should be working on this as in adopting a document on this to get the work going?"
  },
  {
    "startTime": "01:28:00",
    "text": "that something you would be okay with, or do you have slight objections to think more work needs to happen gets adopted, I would like to see more work on the merch and and rebase notification before we adopted. Actually, the problem is interesting. But yeah, I see that as a risky that we can solve this properly. there's a notification section that you feel is missing, Yeah. Okay. Okay. good feedback. Yes. That's that would be one. and So I'm thinking about you have an operator, let's say, or an expert that knows one part of big configuration. Will he be able to understand that, okay, someone else is working on another part, and but that is a distinct part, and I don't have problems, and I don't have I don't know, cross references, Yeah. mean, actually, the system will tell you that. so that the system is designed to or that the draft is designed on the basis a conflict is where you're touching things that are either identically the same things you're touching or referenced by the same things So if you're editing I don't know if the the user list, for example, and someone else is editing a PGP root policy. and you both commit. Those two things are not in conflict, and the system would not raise a conflict and say you need to resolve this. However, if you were both editing the same policy, for example, and you tried to commit it. the system would stop and say there is a there is a collision here. and you need to update. And then you have your update resolution methods available to use to choose to resolve that situation. am a bit still worried because if you are editing the I same data nodes, then, yes, that could be clear. complicated but clear. But if you have references let's say, in a mass statement, maybe a 2 step reference, I reference we both referenced something common. that can be tricky. Sure. Sure."
  },
  {
    "startTime": "01:30:11",
    "text": "And I would say that I think the poll can and kind of indicates that I think there is lack of understanding or maybe Not enough show of hands. to say that they agree with the what the comfort resolution and It should be like So maybe that's a question we should retake take it to the a mailing list, with some explanation. I'm not sure the question specifically there, but yeah. Yes. I mean, there's some work to do on notification piece that's that's some good feedback. Absolutely. Yeah. I didn't know that there's Question in the resolution. Well, a couple folks. did not raise the hand or did not agree with the way that the conflict resolution is proposed. would either of them like to describe or explain? by the Which is a different call. Sorry. Hi. This is Severin from Austin University. I just, like, question this pause, to be honest, because first, The first poll was about how many people write draft, and we have found out that at least fifteen people haven't read it. And, like, 10 people have read it or maybe 12. And then in the second poll, you ask about do you agree or not? And then, like, twenty one people agree with it, but A lot of them haven't read the draft. So I really question this poles. Because how do you want to agree with it if you haven't read it? So I don't I don't know. Maybe this is how the IT works, but it it probably makes more sense to give this to the mailing list and discuss it there. everything is revalidated on the mailing list anyway. I think the the folks that were agreeing with the sentiment to the draft, we're doing so primarily"
  },
  {
    "startTime": "01:32:03",
    "text": "from history of having, you know, been participating in these presentations. in the general sense. So, again, they they support the solution, but the did they really reread this specific draft? Maybe they didn't Okay. Okay. Thanks. Okay. So it sound like you had a couple very specific comments that you could update the draft first and then we can bring it to the list and then hopefully do an option on the list. Sure. Mhmm. Right. And then we have a we're gonna go back to the overview of tracing mechanisms. slides. Thank you. And I would say on this tracing mechanisms 1, this formed part of that original one. But I think Over time, I think I've seen it, it maybe isn't. an exact part of the same set. So we're considering adopting them all together. maybe the private candidate's one should step out of that. That's a good point. I was thinking that that as well because the transaction ID Right? So, you know, it if it's conflict or not conflict, the mechanism for detecting the conflict is through this transaction ID. which is not currently active. Right. It could be. it could be. It could be. Yeah. Yeah. But then that requires that would require changes to both clients and servers to be supportive that actually today would just work. Okay. I guess they Young, thank you for stepping into the queue. I've made past slide control to you. Okay. Thanks. Let's see if I can quickly go from here. So just to give you a brief background on what is tracing and IDs about transactions and traces are all about So here's a picture of the HERical orchestration system with controllers and network elements. And this is showing how an order from an EFS system is"
  },
  {
    "startTime": "01:34:00",
    "text": "tagged, which, in this case, order 4711 and how that trickles down to all the elements that rollers that are involved in this so that when there are log messages or metrics, KPIs LAN and sort, those are also tagged with this thing. So that's the the melt system, which is usually called, that's collecting all of these can correlate all the messages from different sources And this one is saying order for its 911, meaning sort of a transaction, but this could just as well be an RTC or even an notification that's coming out of one of these controllers and network elements saying that, hey. If something happens with something that corresponds or has something to do with with the order for this m and lemon ore. whichever RPC or something that happened earlier in the for part of it. So the the thing is the gets an ID that is reusable and in the collector. this And the the way to do that is those AIDs. have to have some sort of format, and the the Webex Consortium has already defined an ID is format for this. So we thought that we would just reuse the trace and trace date for this. that's defined in those in the spec that you see on the page there. It's very, like, right in the sense. I mean, it's just a single header here in the REST Comp case, and we provided a net cons XML mapping for that as well, which is basically just put the namespace in front of it and have the same thing again. be able to trace this data. So it's not very innovative in that sense, but it is very useful in this in the in the sense that there are already tools that are using these headers in these formats, both open source and commercial. So it's well worth reusing that functionality so that we don't have to write our own notes consumers. And if we move down a little bit further, let's see if I can find the right slide. when it comes to these"
  },
  {
    "startTime": "01:36:01",
    "text": "I can slide for you. -- drafts. Yep. Yeah. Here it is. So Here, it was the list of drafts that we had in the 116 meeting. and now there's one more. for the headers. So, basically, the w three c trace there has run more with wc3 dash headers. It's also adding some basically just two sentences, as Rocket said, pointing to the relevant consortium. So for RESTcomff, we are reusing the word of a consortium documents straight off And for NetComm, we had to add an XML of mapping. but that is not needed for rest completely. And then then why we involved the the private candidate in this whole solution for a bit was that if you look at this use case map there were some little overlaps here and there with the pre scan column. And this the 2 maybes here have now in the the most recent version in my opinion, changes to overlap. So they are there are three areas where there are some open happened. So there are some touch points, but I agree with James, that's it's not really strong I mean, they can be developed independently But there are some things that are have some overlap here. And the way I described it in that meeting was that, okay. Let's say we have this We have orchestrators. We have controllers. We have network elements. And the first thing we are adding to the puzzle here is this private candidate that functionality that controllers may use, and there are some functional input I mean, some overlap in this tracing for that. Then we have the transaction IDs, which are important to see how the configuration is trickling down and much of the work of a device or a controller has to do with configuration. So I think it's"
  },
  {
    "startTime": "01:38:01",
    "text": "important to trace that separately. But the trace IDs will also flow into these transaction IDs. So the transaction IDs are good for many use cases, they will also need to be mapped to the trace IDs in the first version of the transaction ID documents. that contains a mechanism for for combining Transact IDs with trade IDs. but that was not so much light. So we separated that out, and now it separate, and we found this worldwide consortium specification, it's doing exactly that. So that's how that maps into transaction IDs. there's a a link between them. And then we have this the The the tray the trace mechanism that Rocket talked about. with the headers and how these messages are going to do processor and how the mapping is done there, it's very, very thin because we are depending in completely on the relevant consortium specs there for that. And then, finally, we have the piece where we can have Yang interface this. but Jean talked about is providing a way for a different if you don't want to use this, the OTLP Mechanist. for shooting data to the MELT processor. You can use YANG and the normal YANG. They can to get this information. So that's really different angles of the same problem, and they fit very well together, I would say. there are some overlaps between the use cases. it's because they are providing different functionalities for it. So I think at least there's the trace mechanism we talk about the green and the gray here, they should be treated together. They have strong connections with transaction ID and some some touch points with the probe can. I don't know if that gave you any I already presented this last time over. If you have any questions, I'd be happy to comment or answer."
  },
  {
    "startTime": "01:40:07",
    "text": "So just to clarify, you said you felt that the green integration should be combined. Yeah. Yeah. I mean, into a single effort? they are progressing together. The gray one is referencing the green one So as it is right now, the gray one cannot proceed unless the green one does too. I think they are talking about the same concept and they are working through the same spirit. They're providing slightly different functionality for the for the and solution. So I think they it makes sense to work with them together. and the green one is now 2 different graphs. So it's the green one and the other green one. and the gray one. that should be treated together. I think that makes sense. And, of course, the yellow one is already adopted. So it does not need to be adopted the same time in green agree. But it also has the strong connections to this. I think it makes sense to think about it in the same context. Right. Strong connections, but and then as you rate, mostly complementary. But these would remain a separate graphs. I like, a server could support just private candidate, for instance, and not the others. Or, likewise, only support ID and not the others. Yes. I think that's what I said the last time that's need so I can find that slide. So my professor also at that time in the 160 meeting was to create framework of 4 separate documents or now 5 of them. and where each one would be optional to implement and optional to use for clients. they they would stand alone when when using them or when implementing them. but they form a hold together. example, use cases and terminology and behavior should be aligned. Okay. Can you go back to the previous slide, the matrix or the with the green and the gray or the or maybe the previous one from that. But so before we had asked if"
  },
  {
    "startTime": "01:42:02",
    "text": "the members had read the draft, and the results were tepid. the and yet We did that on the last one with the private candidate, and then we asked do we think it's a good basis? for adoption, which was a a rough thing to do because as was pointed out, How can you feel like there's a good basis when you haven't read it? I I feel like the same is true here. Again, where this work has been going on for some time. there's obviously interest in the working group. and yet we're not able to get the ball over the line, so to speak. So I think I'd like to or maybe we should do the poll again for if we think that this set of drafts as a basis for something the working group should try to move forward and adopting the other 2 remaining or or the other drafts that are currently individual drafts, So one other thing I could I was thinking of proposing is that the 4 drafts, we combine together in a design team. and that a common team be formed so that the photograph authors can work together maybe. Would that help? I think, more or less, we are doing that already. Okay. At least I mean, we are syncing between meetings and discussing and sharing ID. So And so, Rob, I'll just say, yes, if you did that, I would agree. but it sounds like some of these drafts cancel act quite independently like the private candidate store. So that one seems to be sort of tangentially rates rather directly related. Is that fair, Yan? for for the for the prep count, I think so. Yes. Yes. Yes. And then just one other clarifying question. You'd said about treating green and the gray and the gray the green and the green and the gray together, Do you mean that that they shine, they will be adopted as a set, or they should be said it as a set that they're also solvency"
  },
  {
    "startTime": "01:44:02",
    "text": "same space. So I think one of the questions was, are we trying to adopt we already adopted 1 of them, 5 drafts together, or we're trying to adopt a subset of those drafts. That's the bit that's not clear to me. I'm not the political expert here, but I think it at least makes sense to to adopt them together, the the green and the green and the gray. But if if that slows things down, then we can do that individually as well. And and then on that so was it clear to me whether the yang TXID mapping and the melt processor stuff if those are complementary or somewhat 2 different solutions the same problem. It's netconf and restconf. Okay. Okay. It's Rob. I'm actually still at the mic. So one of the dots is an ops area. draft, would that then I guess, we moved here for adoption. Well, it sounds like they should all be if they're related in any way, should I perform, I think they should all be here. because I think definitely the The first 2 are obviously one's already been adopted, and this is the right place to private account based. So I think all of this work should be done here. Your question. Okay. I'll note to the author then. dose. Okay. So and then"
  },
  {
    "startTime": "01:46:03",
    "text": "unanimous so far, maybe nearly unanimous in the moment. This is what I suspected that the working group does wish to move forward with this this work, the suite of drafts to adopt it as working group documents, And the the details of whether or not this most recent draft was read and maybe was getting in the way, and we will rerun these adoption polls on the list. And but I suspect that we'll be successful at that time. Thank you, Yan, for going over the the overview slides again. Sorry to make you repeat yourself. If you want me to, another problem. Thank you. Right. So we still have Hope on the queue Did you wanna say something? Yeah. maybe not. Alright. If there are no other questions or comments, this then ends the net concession. for ITS One Seventy. Thank you. Hope do we have Yeah. Go ahead. Can't that conflate with mic time? So I did not make it to the cutoff date. I just published a draft to implement the chunk of structure in a young module to developed it in young push, but using encoding as Incotting's such as the JSON and CBOR. I would like to request more feedback on this draft. and I would love also to trigger the discussions on"
  },
  {
    "startTime": "01:48:03",
    "text": "if the seat range for Siebel should be managed by the working group. Shouldn't be managed by core. what are the guidelines on on that aspect because today, there is no guidelines. So Yeah. So I'm trying to remember the seed range. I think was gonna happen was that Iyana, who demands all the retreats and things, was going to get allocated a mega block. That's right term. meaning Sidides for IETF. And then I was I was thinking as any working group in the IETF publishes any young modules that they would then to allocate it at subset that block for that Yang module. I think it'd be managed by Ayna, effectively, that's about part of the process. I don't think we would be source of management here. Does that answer your question? Kind of, but that means also that we should ask them in through the drafts, or do you think that they be generated directly on Jana. How are the standardization part would work in a way. So I need to take that one. So I need to reread the the sit draft is it's been to the ISG. I I sent it back again. So it's back in court. The call has already happened and discussed week. Could you send an email? Have a look at the Sid draft and send an email to the whole list. and raise that question in terms of the process question and copy me in pretty handy. The process question of how the sits get get assigned. My understanding was during development, you can sort of redo the sit and things like that. but I would have thought to the point that gets standardized because RRC said to be allocated, but I don't know if it specifies that and puts burden on the authors to do that or or if there's some process"
  },
  {
    "startTime": "01:50:01",
    "text": "in the machinery. Like, the i n i n a machinery is the as it as it gets adopted, it'd be done. But I know that we do have some sort of tooling, you know, using Yang catalog to actually allocate some of these. So it's not like a a large manual step that people have to do. So, hopefully, we do it automatically. Yeah. I will send out an email to the core 1 k drop and control so that I was gonna have the same comment that know, any question about Sid's really it should be taking the core working group. not an account for provider. anymore open mic items? You got 10 more minutes? Alright. Well, Thank you very much, everybody. I'm and see you in Prague. Yep. And thank you to Per our sec Jerry for helping to take meeting minutes and others, I think Shifang was taking some minutes as well. Right? so so so Thank you. Thank you. Can you unplug me? Yeah. I'm not in. Yeah. Yes. Yes. So process. just to get the agenda. Yeah."
  }
]
