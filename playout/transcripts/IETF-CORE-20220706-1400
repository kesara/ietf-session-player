[
  {
    "startTime": "00:00:13",
    "text": "good afternoon hi captain it takes a little bit to to actually a mute yeah i always stay unmuted on the top left and use the mute on the bottom right this is a bit confusing because the other people can no longer see whether i actually intend to speak but it avoids this this weird latency when when trying to get right they do that smart smart"
  },
  {
    "startTime": "00:02:18",
    "text": "hello is there anyone yes hello oh hi carsten hello couldn't hear anything hi erica hi thomas hi francesca sorry i was confused by the absolute silence in the room [Laughter] i think we're waiting for a couple more people maybe okay okay yeah it's really hard to see the the actual participants between all these jabber users so you have to get rid of that clutter so i've just tried the approach you mentioned carson for muting and muting myself and i managed to confuse myself so i just stick to the latency yeah so my theory is that the itf meetings always start four minutes after the hour because everybody has to wrangle the conferencing system and log into data tracker and all those other weird things that gives a bit less than one minute more a beat"
  },
  {
    "startTime": "00:04:05",
    "text": "and i'll try to take notes during the meeting but of course any help is welcome sure i have them open thank you so let's get started then uh welcome everyone to this interim meeting of the co-working group i'm marketiloka my coaches are jaime jimenez and carson bormann and as usual the usual not well applies get familiar with that if you're not already um it's about ipr patterns and so on but it's also especially about our color conducts so be nice polite and professional to each other and the agenda for today has two items uh a new document that thomas and hank proposed on parameterized content format for co-op and then hopefully the wrap-up around the problem details document based on the latest discussions we had uh last week any more topics to propose or any bashing no and i know from thomas he has to leave at 15 utc sharp for another meeting so we should manage to close at least the first item before then okay then thomas the floor is yours you can request the sharing if you want thank you marco for food slotting me in the in the first half of the meeting um asked to share slides like that yes slice says this one i hope it's the right version because i i saw three or four coming but it should really yeah"
  },
  {
    "startTime": "00:06:00",
    "text": "sorry zero three should be the latest yeah what happens if i move okay cool cool thank you very much okay so um um so right so this is for this parameterized content format drafted and can i push through the data tracker a couple of weeks ago i think um but uh yeah so it's about you know extending content formats and um uh yeah of course uh you know co-op uh what it does is it compresses aggressively uh across the board and and uh you know in particular in the case of representation formats it takes these uh three-dimensional objects and replaces them with uh uh sort of hologram that we call the content format right and um and the content formats build on on the on the observation that um in a lot of cases uh the the three-dimensional space is really a single point so we can we can squash it into into a p right and um and on top of that what we um what we do is that we take that single point and alias it to an integer to to further compress it um to squeeze out all the juice possible and and and we have asked ayanna to maintain this content format registries as a compression compression dictionary for that so that we can have a very efficient wire image um and uh and this excellent wire efficiency as this um paraphrased uncle ben says comes with a a cost because uh in exchange we get a sort of you know bad flexibility because we've basically glued together uh inextricably um these three potential potentially moving parts um so while this may work may work well for media types that have constrained degrees of freedom um that's not optimal in in the case once dealing with parametrized media types of which we have one or two example"
  },
  {
    "startTime": "00:08:00",
    "text": "examples that are emerging in rats and and that's where uh basically i'm coming from so yeah uh we have these two uh slightly different spellings so parameterize and parameterized i don't know which one is the the right one so uh i will call it pcf for short so we avoid any holy wars on naming which could hamper progress and and while while the spelling of this thing may be maybe somewhat tricky the the idea is is is pretty straightforward and um and the idea is that we extend the usual uni-16 t with a list of key val pairs that carry this um any any extra media type parameters and i know i'd like to stress extra here because you know content form may uh already encode media type parameters but what we want to say with the with the uh key vault pairs and the id the joint key for pairs is that you know uh there are further things that we want to say about the media type um and this translates to cddl very simply in this way where we have uh you know at the core we have an array with the core the content format with usual two bytes and then we have a list of zero or more um kevin pairs name value pairs where the name could be either textual that is you know the one that has been registered with the media type originally or a numeric alias to to provide a competitive representation of that and noting that this would require a new registry um and uh and the long format of that is is done according to um 6838 restricted name syntax um"
  },
  {
    "startTime": "00:10:01",
    "text": "yeah so a couple of a couple of uh excerpts from 6838 which is the which is the media type rfc right so this is the authority the overall authority of this uh meta um and what it says is that names are case insensitive and the order is not important and then also that is an error for uh if we get duplicated keys and as far as parameters are concerned uh says that there's no defined syntax so there's no priority syntax we could say that's why there's a reason to have the dna here right in the cddl uh because we don't know what that is and the registrations must specify the the syntax for for each of the parameters that they define so and also it says it's going it goes on and say you know some transports impose restriction on parameters parameter values syntax which means when registering one should look for the least problematic encoding which which usually means you know avoiding binary um [Music] okay applications so okay so we have defined a pcf uh and uh you know the the natural thing that one does next is to try and use it for content negotiation um um and and therefore we we need to define a parameterized version of of accept and content format and um and the idea is that we want to retain the semantics in particular 406 and 415 want them to apply aziz and and the thing is that by using pcf as the option value one gets you know supposedly increased flexibility uh so i'll go forward and look at the and show you the the tables for for the p content format and and p accept options which basically mirror"
  },
  {
    "startTime": "00:12:00",
    "text": "their um their non-parameterized pair uh in a sense that they have you know the same layout in terms of cu and our bits um and the only the only difference basically being you know apart from the number uh the the the value um in the case of the content format you have a binary value which is the seabor encoding of the pcf uh very simple and in case of the psept which is you know multi-valued and that's that's the thing you um the extra thing on top and the cherry on top you have you know uh the critical bit asserted and but you also have the ability to express one or more of these parameterized content format um and uh a cast in an offline conversation um was pointing out that maybe this instead of having the the dot zebra we should have the dot zebra siku to to encode it's a sebor sequence uh and and i think the the if i think that's right that's right um uh so compared to the to the normal accept you can have uh multiple things squashed into into a single option um yeah so so uh what does it mean moving to this multivalued p accept um since we wanted to retain um the the the exact semantics has accept uh the critical bit is up and and because the critical bit is up um the implication is that a request which is not understood by the server will fail with 402. um and and so there's no way to soft fail this and maybe that's okay um uh because you know you fail and you retry with plain accept and you know maybe maybe maybe the server side implements problem details with the the unprocessed option that christian"
  },
  {
    "startTime": "00:14:03",
    "text": "proposed that you know could help the client to take the right decision instead of replying blindly um [Music] yeah that's it okay so um yeah prior art custom suggested to go through some prior art and gave me a couple of pointers um then this morning chris mentioned he's accept any um draft that managed to fall through the cracks of my inbox unfortunately but except any also his prior art here and should be you know just below ocf so you can see that invisible link there but um you know uh the the other priorities effectively cinema cinema data value content format and and ocf content format version which i will you know go through uh quickly um so uh 19193 um uh defines this content form a spec which is a string representation of the content formats either as a as a string a content form a string so you know media type and parameters and whatnot or the uh or another string which is the decimal representation of the content format number and in a way roughly very roughly speaking pcf is a third type of this content format spec which is a sort of binary version of the string um so how that the two compare well this is something missing in this slide but anyway you know obviously uh the pcf based is is more compact because and but but on the other side um pcf depends on the existence of a content format that has been registered uh in the ayana right because uh you know you need you need the"
  },
  {
    "startTime": "00:16:01",
    "text": "integer value to put into into the into the array uh and this is quite quite a significant um difference because it's not that once you have defined a media type you're done uh you're said and done you you also need to round trip to i through ryana to get the the code point that you can stash into into the pcf um so that's the con so this light is a bit misleading because there seems to be only you know good things about pcf compared to this but there is no um and uh uh compared to pcf's also um pc ocf seem to have it the same rigidity we are discussing here but they sort of work around it in a different way in a more use case specific way i would say what they do they exchange the the endpoints those ocf endpoints if understand correctly exchange one single um keyboard based content format which is this application vendor ocf cbor and this is fixed but it's versioned um and in and they decided instead of putting the version in the media type uh they they decided to keep the media type cast in stone and and use a couple of options to do version negotiation and these options are as follow 2049 2053 ocf accept and ocf con content format version so basically what they do they pair these options to the usual accept and content format in order to describe the versioning for the for the for the media tie for their media type and they have rules around uh you know uh backwards compatibility and support and version version uh negotiation um of course um"
  },
  {
    "startTime": "00:18:00",
    "text": "um the interesting thing here is that because they you know they solved this problem in a very specific way they did you know they optimized for that of course and uh intelligently they split these 2b two bytes into five five and six bits respectively to encode the uh the core semantic version from format which is major minor and patch and so you have one one zero that encodes to you know that thing which end up in into into a to to to by integer um [Music] so uh looking at how that would translate into uh pcf maybe this is a bit small but uh you know um um in in in pcf this would look like first of all there would be one single option because you you you put together the uh content format and any parameters and um and the way you would do that you know you you take ten thousand which is the application uh vendor ocf plus cbor uh content format and then you decide that version information uh is included as a as a parameter right as a media parameter and so you decide to allocate you know zero to say version for example and then you have the integer value there one one two which is the equivalent to you know this uh 840 in x and what you get is a nine byte um uh wire image um that as i said before fits into one option right instead of two so you can spare one byte there and then so in total you have nine plus one ten bytes there whereas uh they have uh uh two bytes for ten thousand two bytes four uh twenty one twelve uh plus the two option um placeholders so two plus two plus one plus one six and so you know you have this four bytes"
  },
  {
    "startTime": "00:20:01",
    "text": "difference uh which is the price you you pay for sort of generalizing rather than optimizing for this specific use case um [Music] yeah that's it i think right so the questions here are um two uh a is there any interest for per person this feature um which has you know um popped up at various intervals in different ways uh it seems to be um in in the working group history um but it has never been you know tackled in in you know in some definitive way um and secondly if uh uh and subordinate to that if if if the proposal i'm putting forward here is is a good starting point or you know it's defective in some way that you can see so thank you very much hopefully that was clear enough thank you thomas any questions comments carsten has a list of questions yeah so i just just typed why why thomas was um speaking this is probably not the complete list of questions but um i seem to remember that that the the specific idea uh came up like 2013 or so and i i have already forgotten what what the draft was that that in the end we decided not to do um so the the the question here really is um uh this is clearly missing functionality uh the one of the questions you will have to answer is is the fact that this is missing a bug or a feature"
  },
  {
    "startTime": "00:22:00",
    "text": "so i ran into a spec that that essentially says redirects are not used and something else about http uh which is exactly what we decided for for co-op um so that there are other people who want to omit things that that we could have so that that's a very fundamental uh question but i think really the the question is do we have use cases that can guide us um so the the more we know about the use cases we can structure this feature in such a way that it really helps with this um use case and and maybe still keep it general uh while we are doing that so that would be a first thing i'm not asking thomas to to enumerate the use cases here but i think we will need to do this for the further development of this feature to have specific examples that show how how how good a solution is that we have designed the second observation is that the the sibor any that is in in your proposal um still has some some question marks on it so when you define a media type you define media type parameters and these are always text strings these text strings may have some structure in it and typically part of that structure is obtained by simply having several media type parameters that you need to specify at the same time um so if you have a structure of values"
  },
  {
    "startTime": "00:24:00",
    "text": "you need you just define a number of parameters and they all need to be set um but what i'm trying to say is that we cannot just refer to a media type registration and imagine that we have a well-defined uh way to translate the textual nature of the parameters into a sibo any and i think we might be able to do something that that solves that problem for 80 percent of the cases uh but we we need to do this explicitly so we could say something like if the parameter value uh looks like like a decimal number um then you can put the number in binary there so things like that we could say um so again the the use cases uh um will help us uh understanding what is actually useful uh here and of course doing a registry of parameter names also is very interesting um the third question that came up for me was is it actually necessary to have mutual exclusion between the content format that maybe already has defined one parameter so for instance content from a zero defines one parameter which may be a bad example because you never want to change that but imagine that you actually want to change that you would have to register a new content format that does not have the parameter which may be illegal according to the medium type because that's the required parameter uh so uh maybe uh the override semantics for the parameter given is is a better one um okay interesting"
  },
  {
    "startTime": "00:26:02",
    "text": "i always thought this you know okay yeah yeah that's uh that's an interesting one and why we are doing this um another question that came up was um can we or do we maybe want to uh have the existing options and and the new options combine in some way um so generally you have a place in in the pcf uh to to provide the content from it maybe we can put the printed format in its traditional option and just add a pcf option that that provides the parameters so i think we we need to have an opinion on this of course the the if if you want p accept to have multiple alternative media types that doesn't really make the problem yes yeah yeah but i still think it's worth thinking in that direction and finally the the question i have is you can change media type parameters but you can change neither media type nor content coding and i think the use case to actually add a content coding to a defined media type is a very very likely uh use case i thought about this and i couldn't find examples that's why i you know i refrain from adding a content coding optional bit in there but if you say that's possible or even likely and then you know we should really stick an optional thing we have a few um content formats that that are just uh existing content formats plus a content coding slab on them"
  },
  {
    "startTime": "00:28:00",
    "text": "and um so these would be potential use cases uh where you might want to separate out uh the content type and and uh content coding again so i'm just again you you said the right thing i didn't find a use case so having the right use cases will guide us in in making these kinds of decisions yeah okay thanks for the excellent feedback and you know the only thing i can probably answer and very very you know from my from my small corner is we give you a couple of examples which are these um uh media types coming from from rats one for each and one well multiple for it and and and and a couple from for quorum as well which are parameterized and if we want to have uh restful apis based on co-op not just on http that that exchange exchanges these payloads then we probably need to have a way you know a fluid way to to to identify these parametrized things uh without round tripping through ayanna then there was this this question from michael on on list about how many of this profile will will pop up and uh i don't know i can't tell but uh uh in general but from my point of view which is you know in arm we have already three different profiles and we're coming up with a fourth so you know and this comes this is coming from a single vendor so yeah we we might be you know pathologic in this i don't know exactly but uh that seems like you know there's a use case for this and if if we if we managed to produce four profiles in say a couple of years then i suppose the ecosystem is going to be you know even more prolific in this so having having to go through um through ayanna to to get all these good points all the time and uh that might be"
  },
  {
    "startTime": "00:30:00",
    "text": "you know a bit of pressure that we want to push back on but you know i'm not sure i don't read the future i can only tell you what's what we what we have at the moment and and based on that making friends but that might be completely wrong so the draft the the draft is referred in from informationally from from the the draft that i'm talking about one of the two in fact because the other one is not from the from the parameterized cf uh draft and it's called it media types if i remember correctly that's the use case i have to put on the table christian i can't hear you at least but i guess it's about the comment that we put in the minutes already on a possible way to to have multi accept you know you're considering a combination i guess of the old options and and the new ones proposed i i'm not sure i i can't kill you anymore okay i'll just assume that something broke when i tried it i'm sorry christine unfortunately i cannot this you know cannot pass"
  },
  {
    "startTime": "00:32:12",
    "text": "sorry that's it i will do the job describe multi-accept based on existing ops could be array of params and optional group of ctn params but i don't really understand that neither would i think any comments from carsten the the idea is that if you want to combine uh content from it with uh the the traditional except with the multi-accept then you could do it in the way shown here so you take the first content from it out of the accept and then the additional option would provide the parameters for that except and additional pairs of all fantastic this was the thing and we said it was problematic gosh something is wrong with the audio here was it me i don't know i've refreshed the well i'm hearing you i don't care yeah me too thomas i had a few comments on on the actual options as they are defined in section four and five yes um so on the first one maybe it's just worth adding a note because um"
  },
  {
    "startTime": "00:34:01",
    "text": "if it is only about the the original content format with no additional parameters uh to add then it should really be about using the original content format option right yes yes yeah because the new one would be just inefficient so maybe it's even worth should a normative should right because okay yes yes you never know you may you may hit a server that doesn't even support any option well you'd be just fine yeah okay and on the second option instead um as understanding you may want to use it to indicate multiple content formats as they were defined originally with no new parameters right but based on the on the data model then you have um well the outer array including multiple arrays with one element only the content format integer and it'd be better to have instead well a single array in the outer one including the integers and i think you can get there if you extend slightly the the data model uh like as is slash content format yeah you're right absolutely spot on thank you sure and there again in the extreme case where still you want to signal support of one content format only as it was originally you should not just go for for you should use a normal attempt thank you oh christian just running the chat uh with some use cases japanese languages core profile i don't know what germany's languages are unfortunately but thank you christian"
  },
  {
    "startTime": "00:36:12",
    "text": "and i will add my own comments to the minutes so you'll find them later on i've noted them down though okay i think that next step really should be a call for use cases so so could people please uh write short messages to the mailing list with uh one use case each for for how this would be useful i think that should enable us to collect this information in a painless way absolutely thank you very much for the discussion incredible number of very good suggestions here thanks and by the way speaking as an individual i think it is a good starting point cool okay great you can jump too probably details then so i i i'll have to uh take a break in three minutes um sorry about that i was telling mark in the beginning um i don't know if you want to start now or or wait well maybe we can start if you thomas have to drop at top of the hour but um yeah maybe i can do a quick quick summary of i hear a bit of echo i don't know where it's coming from um so i i sent this last call for comments on version 7"
  },
  {
    "startTime": "00:38:00",
    "text": "and what i've heard until now or yeah until today is that there was rough consensus for keeping the appendix and the main body of the document together but there were requests to add this additional clarifying paragraph at the beginning of the appendix about possible future updates and thank you carsten and thomas for for driving that um like that uh additional text and there was some back and forth forward forth and i think that i haven't seen any objection to the last proposal that is in the pr so marco could you maybe share the pr and the change text yes thank you so there was some confusion from martin at some point about uh tag 35 being deprecated and still point like not being deprecated and pointing to an obsolete document um that made me think that maybe we want to no obviously not in this document but to make it even more clear we could think about adding like a note about that tag saying deprecated or something like that in the registry and i think maybe that's that's a job for the notable tags document um that's an aside and custom feel free to jump in and disagree if you don't think that i just thought that because the conversation was a bit unclear so yeah i think we should uh write some text about text 35 for the notable text document um i i already have generated a pr with"
  },
  {
    "startTime": "00:40:02",
    "text": "some text about take38 i i didn't really want to to push this into the internet draft repository yet uh but it's uh on the github github repo uh so if you are interested in internationalization please have a look um at the the notable tags document but i think we can evolve that uh separately from from this document and uh martin actually took a first look at what i wrote and and uh uh seem to think that this was the the right direction forward so um i think we are making some progress there as well and i think we have a more general issue about tag evolution that just comes up in a completely different place again where where somebody is lamenting that the existing multi-dimensional array tag is limited to exactly the arrays that are defined in that spec and he wants to actually add a couple of array types and um do we really need to define a new tag for that or not i think that's a discussion we have to have over in the sibo uh working group so there is work to be done but not for this document yeah i also wanted to underline one comment that has come up a couple of times um that was not really answered in the mailing list but um the fact that this tag tag 38 is the fine with these i mean i think you said it carson but it was never really like agreed um in the middle east i think or i missed it um that there was there was um some comments about this is um sufficient or well-defined enough for for for this application in this document but if other applications"
  },
  {
    "startTime": "00:42:02",
    "text": "this is not going to be the one tag to solve all of the um um like possible applications so i i thought that was clear um and i just wanted to make sure that we all agree on that and um yeah so i think that that's what the notable text document says and it actually tries to be a bit more specific about what the area of application of this tag might be and where you have to switch to something more powerful so i think we can have a good discussion about that um over in this in that document yeah and and uh the only thing is that because this document will be the reference for tag 38 uh we might want like this sort of comment we might want to have a link from diana registry uh i don't know maybe later on we will update the references or something to um uh to make it easy for for implementers to find that text and that those sort of we don't have that document yet but yeah i hope you yeah my secret plan is to to get the sibo working group to actually adopt the the notable tax document when when it's in a slightly better shape than it is now and uh to actually get uh enough agreement for it for ayana to to reference it uh i don't know yet how to do that we have to find out whether it needs to be an rfc first which would be bad because it's actually a living document but i think that that should help with the the current situation where you have all these tags and no idea which of one which of those you actually should use"
  },
  {
    "startTime": "00:44:02",
    "text": "yeah for example when i was reviewing the situation with tag 35 um and looking at you know this deprecated there is text of course about tag 35 in 8949 but that text is not it's not like linked from the ayana registry so kind of to find that text you kind of have to like do a long tour around the documents um uh and so maybe like yeah the notable tags can deal maybe so my suggestion would be the notable task to take a look at the iona registry and possibly possibly update the registry in a way that it adds maybe a column for notes or column for like applicability usability or something like that so it can also have references to other documents not only the one where it was initially defined but yeah so we can take that in the notable tags for this document i think that there was consensus around the paragraph that was added um this last sentence you added when updating these appendix keep in mind that applications be beyond concise problem details may adopt the tag defined here i i agree with this but also uh like from the comments that were in the mailing list it was a bit please do not use this mindlessly kind of don't uh this is not like the solve all type of tag so i hope that's that's that we have agreement on that yeah i actually wrote text that says this and many more words"
  },
  {
    "startTime": "00:46:00",
    "text": "um okay so i'm just just making sure because yeah just because there was comments about that and i i didn't see any reply from you like authors agreeing on that so should we add or already a pointer to notable tags so if carson if you if you push it through the data tracker then we could have this pointer um well i i rather have it adopted by the working group before we do that and we we haven't done that yet true but there's there's already i've looked at the pr and there's already you know a lot of very good text there that says you know the the gist of of the whole thing sorry i need to i need to drop off for 10 minutes now i'll be back sorry about that i mean i'm i'm very happy as he's right i don't i don't want to clatter the space but if that is a concern maybe you know already having an early pointer to there that can be followed throughout maybe you know by the end of before it goes out of the rfc into a queue with you know you could have that adopted already and then you could update it would be easier then yeah i'm just trying to make up my mind with whether it would be good idea to add a pointer to that document um so the the the reason one of the reasons why i wanted to have this in the notepad notable tags uh document is that that text in turn has uh tons of pointers to w3c"
  },
  {
    "startTime": "00:48:02",
    "text": "uh documents that that are snapshots in time that that are useful to consult but that that are not normative in any considerable way so i'm not sure building a chain of wobbly little bridges here is exactly what you want to do yeah i was more uh into uh pointing the text at you that you have provided there you know which is the one that says uh that provides the context for saying um for advising people well whether to use 38 or not and in which case this 38 applies and which is 38 is not good yeah i think the the one interesting observation is that we typically learn about that when the tag has been defined and has been stable for a while and has been used in applications that's actually the point in time when we can write that text now with tag 38 we are a little bit ahead of ourselves because that tag actually has been around for eight years already um so we we know how useful that is um but um yeah the the general principle i think should be that we define a tag don't try to be overly predictive about the correct area of application and then after the the tag has been used for a while write the text in into notable tags that that goes into more detail on what we learned yeah so my plan was to actually merge this pull request and then"
  },
  {
    "startTime": "00:50:00",
    "text": "push dasher 8 and and wait uh for francesca to do something about that and what what i'm now hearing is that maybe we want to add a a very weak pointer in in the c plus plus since uh to do notable thanks here i'm yeah well uh you know if you don't want to i i i'm absolutely fine with what we have at the moment i think it's even more than needed but uh yeah you know okay but we we do have kind of our work defined here that we have to make the noteworth text document better uh for for its purpose and that that's something that we maybe can can take to the sibo working group and tell them that this should be done okay thomas i think you need to go to some other meeting so i i do the submission uh stuff oh excellent so we we are we are in agreement that this can be pushed and um uh and and and and published yes as okay cool thumbs up and bye bye thank you thomas you may really want to check the minutes later on because christian is adding as we speak uh links and the info related to use cases so linda check amazing thank you christian thank you christian thank you all for the excellent conversation as usual and bye-bye thank you"
  },
  {
    "startTime": "00:52:01",
    "text": "so we can wait also for francesca to come back double check with error on these last points but looks good otherwise i think also people from different areas have a better understanding of each other now yes well it can be smoother but it was good i think yeah we definitely got uh lots of stuff that was useful in polishing this sorry i'm back yeah we we just decided we we are not go going to put in the pointer to notable text right now uh we we are creating a uh dasho aid based on that uh pull request and then we wait for you to do whatever you think so i also wanted to just mention that i when i started this one week called for comments i also informed the rest of the asg that there had been updates following isu evaluation just to make sure that the ids had the opportunity of reviewing the changes since yeah the document they have reviewed has changed so they i've gotten feedback and there is no additional raised comments or blocking discuss from the ids so just for your information the issue is fine with the changes and i think this additional paragraph is is minor enough that uh i don't think that would be require any more attention from them so i think i will send this what i just said now about the summary"
  },
  {
    "startTime": "00:54:00",
    "text": "about the consensus and the asg and i will send this as a conclusion mail to the very long last call and art and core thread and once you have submitted version 8 i will move the document forward so thank you so much for all the work and the reactivity casting in thomas it was it has required a bit of back and forth a bit but i think that uh we followed process and that we got everything more or less right yeah and i can only say thank you for for your help this these are waters that are not easy to navigate and if you have an experienced pilot doing that for you that's really great thank you good yeah then we are at the end of the agenda any other business anyone do we have a um overview of the agenda in um philadelphia i have a kind of local sketch but i was hoping to talk to you and hang about that right after the cut off so yeah i'll come back to you we can talk on tuesday wednesday next week great okay we should actually make it in few hours i see that michael has left as well but i had one more comment about because i will be going on leave at the end of next week at the latest um and on my list of documents there is still the core sid document"
  },
  {
    "startTime": "00:56:05",
    "text": "so i know that this was not prioritized more urgent drafts were worked on but uh do you have any tentative update that i can give uh murray or whoever is going to take that over well i'm still optimistic that i can make the internet draft deadline with the changes that we have agreed um but of course these changes then need to be checked by by all the people who were part of the the the agreement around yang catalogue so um we probably will see another version after that discussion has taken place because possibly after atf 114 maybe yes yeah and i as you understand i will not be able to like follow follow up with the ideas and and uh try to get them to to review their comments so or it's only rob that has a blocking discuss but yeah i would suggest to to be uh as insistent as you need to get the answer i actually was wondering whether eric thinker could uh look after the corset draft for for the next couple of months uh because i think he's he is most uh informed about the the mechanics that we have to make work right okay that's good thank you for telling me i can ask him if if he can take it over um yeah normally i mean as this document is uh"
  },
  {
    "startTime": "00:58:01",
    "text": "is in isu evaluation when one discuss i i think it shouldn't require too much shepherding it's just making sure that that rob is like agrees with that with the changes and clears his disgust but i think although i think that it's been a while now so now i'm i'm forgetting how many changes there were but it might need to go back to last call or yeah to agree on the changes yes i i would not be opposed to that yeah it's okay i'll write this down for whoever takes over okay great and otherwise i don't think core has any other document that will be waiting for me um i think the auth 48 documents that we have uh i've approved one today but otherwise i will ping murray that he he will have to do that and that was it for me great thank you for holding the fort while i'm gone yeah and have a wonderful time thank you thank you okay then thanks for today everyone see you talk to you at ipf114 thank you thank you bye-bye"
  }
]
