[
  {
    "startTime": "00:00:14",
    "text": "well the whole problem with this endeavor right what I\u0027m gonna realize yeah there\u0027s no excess or okay so yeah I think so but but let\u0027s both see and we\u0027ve even stand next to each other that\u0027s meet behind you so the other question is how does the but you\u0027re saying to say oh they can do whatever they want that\u0027s problem when you\u0027re doing is the one for David that\u0027s different than ours are ours okay "
  },
  {
    "startTime": "00:03:22",
    "text": "[Music] welcome everybody okay hey y\u0027all we\u0027re calling the meeting to order now okay thank you everybody for coming to the very first ever da over HTTP working group session don\u0027t know T well everything you say is important here I beg to differ one one thing I\u0027d also like to point out is we\u0027re very new as working group chairs despite being at the idea for a while so please go gently on us to the extent that we\u0027re fumbling our way through this and we we thank Tim and Ted for taking minutes and scribing thank you very much well actually Ben\u0027s gonna do the slides and should we here here what here\u0027s the stumbling through a part let\u0027s just go ahead with that okay this is a brief description of the present moment if this looks unfamiliar to you you are in the wrong room yes if this looks unfamiliar to you you are in the wrong room we are here to talk about this here\u0027s the plan we\u0027re gonna briefly tell you the thing that I\u0027m telling you now and then we\u0027re going to hand it over to Patrick and maybe Paul Hoffman who are the co-authors of the one draft that we have on our agenda today we\u0027re going to hear what they have to say about the open issues on that draft we have time to discuss anything you want to discuss about that draft and then we have scheduled block for open discussion on all issues related to the entire concept "
  },
  {
    "startTime": "00:06:24",
    "text": "of what we are doing here so I would ask that if your questions are not directly protocol related that you please hold them for the second half of the session thank you I\u0027m sorry I have to agenda bash this is this is Elliott I I think there\u0027s an open question still as to what lands in what document and I just like to note that and say as we go through the issues in I\u0027m happy to differ anything that I have for the second half of the discussion however where things actually land at the end of the day I\u0027d like that to happen as we identify solutions because I don\u0027t think what I\u0027ve been raising on the list requires a tremendous amount of text and it\u0027ll be really silly to create you know a three to six paragraph internet draft to you know to address something and I think the at least one of the co-authors I haven\u0027t talked to the other about it but at least one of the co-authors understands the you know what I\u0027m talking about so all right okay noted if you think that what you\u0027re discussing is is directly relevant to changes in this draft then by all means but if possible hold conceptual discussions for the second half of the session so that\u0027s not what I understood Elliott asking for he yes that we have a discussion about the protocol and then a discussion about other topics without biasing ourselves to how that will manifest itself in documents which I think is fine okay we can amend the last ten minutes instead of identifying next drafts needed we can say identify if any next drafts are needed or whether we can do everything in this draft so that\u0027s all for the chair slides and I believe we are now over to the draft slides to be clear I had said we could both stand in the pink box that\u0027s not happening all right good afternoon yeah all right regain my footing here um yeah good afternoon I guess we got 15 minutes and I aspire to stay within that time frame okay I think we all know why we\u0027re here so 3ih TFS ago we had a little barb off I arranged the room for 24 people about 85 showed up then we talked about what DNS over HTTP means to you and it turns out it meant something different to everybody so that has informed this work going forward last time around we had a "
  },
  {
    "startTime": "00:09:26",
    "text": "dispatch version of this proposal in Prague and we ended up with this esteemed working group welcome and thank you got appointed at the laptop all right we have a draft I love first working group meetings how many people have read the draft uh yeah that\u0027s got to be around 50% maybe more that\u0027s awesome no one came out to capture some early feedback and I think the most important thing to note is we have essentially six months according to our Charter to submit the specification to the iesg as a proposed standard so I certainly don\u0027t want to spend my whole career on this document so I appreciate everyone\u0027s help in making that happen there\u0027s a github a set up Ben and Dale Dave sorry I\u0027m announced this on the mailing list there\u0027s a little screen shot of this from a few days ago as always substantive discussion should remain on the mailing list you know chatter always bleeds back and forth so I would just have personal recommendation to everyone out there to go to subscribe to the issues notification on the github it will make your life a whole lot easier okay so because we\u0027ve all read the draft we\u0027ve all read the mailing list we won\u0027t go through in detail everything that\u0027s gone on but more or less we have three three distinct categories of issues that have been opened about the protocol draft now if you have a new issue you\u0027d like to make you can either go open it in the github yourself or you can you know make a comment on the mailing list and the editors will go do that for you if they realize you\u0027re raising a new issue instead of just contributing to an existing discussion if you really want that issue open you should either make that clear in your content or open it yourself so that it doesn\u0027t just get incorporated into the discussion about about something else so there are three broad categories of things they are interaction with HGB - interaction with HTTP caching in general and things I have labeled possibly editorial hopefully editorial in my mind so I think we\u0027ve identified two issues that are worth face-to-face time so if I don\u0027t capture in my two issues for my 15 minutes up here what you want to talk about I think that\u0027s fine because the way we\u0027ve structured the agenda here there\u0027s another 35 minutes so please I think this is a wonderful use to make our wonderful use of our face-to-face time together okay so one of the buckets that we\u0027ve heard a lot about yeah so the current draft requires htv-2 or its successors is actually what it says so RFC 7540 or its successors and I\u0027ve "
  },
  {
    "startTime": "00:12:29",
    "text": "tried to lay out sort of the pros and cons for this argument on the pro side is essentially that for to achieve the necessary performance with DNS data being small and highly out of order you need the multiplex priority mechanisms that http/2 provides you specifically the multiplexing mechanisms right so you know Wendy Prive went about similar work they built in an out-of-order response mechanism which is going to be very very similar to what hu hu is going to give you in this situation and the the argument to be made here is that the end result would simply not satisfy the use case if you didn\u0027t have that property ok multiplexing becomes a bigger problem as responses get large so if you want to do things like transfers and things like that or this mechanism the ability to do prioritization as well as multiplexing becomes key something just a mere head-of-line blocking solution doesn\u0027t have and then number 4 the number 4 bullet down there is also really important is that the ACB overhead mitigation the header over again mitigation that goes along with HVAC and the other compression schemes may be necessary as you look at the protocol you\u0027ll find out that perhaps a preponderance of the bytes are actually in HTTP 2 or are in HTTP headers rather control data instead of DNS data but htv-2 will successfully mitigate a lot of that for you the last argument is over there actually bullet number 3 I apparently wrote them in a different order than I had them in my head and that is just the notion that it is ok under some circumstances when doing new features to require best practices for those new features as a carrot and I can think of a number of considerations where this may have made sense in the past they may have helped move some technology forward IRAC martin and mark and q can i go through the columns before you know all right all right so on the con side you know I think perhaps the winning argument at the end of the day is that the scheme is largely impractical that it is hard for say a JavaScript implementation of this or a remotely deployed implementation of this to be aware of the infrastructure between it and the endpoint so you may not even know what the client is running even if you can control the DNS API server much less know what downgrades maybe enforced in the middle on a more positive no argument number two on the con is you know the whole point of you know using HTTP is to rely on the semantics of it to get a widely compatible and deployable benefit this is you know this is why we develop things and layers and you should just put your trust in the layers so rely on those semantics to get the full benefit of HTTP and the third argument is say is sort of a counter-argument to the it\u0027s okay to require best practice is to say that requiring those best practices is then actually an anchor on your neck and you\u0027ll never get dough deployed at the "
  },
  {
    "startTime": "00:15:32",
    "text": "bottom I\u0027ve listed the three obvious options though I\u0027m happy to hear others which is to continue with the requirement to have silence on the issue which is to say we use HTTPS and not say what that means in terms of versioning or to endorse HTTP to with an explanation of why it is a good thing without any normative requirement so that\u0027s my thoughts on the matter let\u0027s let\u0027s do this now and we\u0027ll go to the next one I think as long as you guys are watching time let\u0027s do this one and then we\u0027ll go to the next one you can tell us so mum Thompson poll just said we\u0027ll do this one and then we\u0027ll do the next one when we resolve this is that I can\u0027t hear you so yes let\u0027s do this one and then they will tell us when we have to go to the next one but let\u0027s do this well it\u0027s fresh in our heads right talk about the site Thanks thanks for summarizing all of the the options here I think you\u0027re pretty much covered covered all the ground reasonably well some of these are less important than other ones I think I originally argued for silence but I like the endorsement actually I think there\u0027s plenty of reasons to to recommend this and obviously the performance is going to be less good I will say on HTTP one one but and security benefits and all the other things that HTTP two brings are obviously improvements but I would be opposed to a requirement for the reasons decided before you go away Martin so if we go to endorsement with explanation how would you deal with the out of order question with the responses being out of order would we just say you\u0027re only gonna get what you get with http1 meaning you can\u0027t assume responses out of order you get HTTP is what we you would say um that is just a natural consequence of if you if you choose to do HTTP one-one then naturally you are forced to basically make one request on it on a connection at a time you can\u0027t even really rely on pipelining working so I mean the other the other approach is how we always do multiplexing with HTTP one which is parallel TCP connections right up to some time up to some kind of limit and I mean I would note you know the directions each time we\u0027ve had a revised HTTP whether it was for you know one one or two have been with direct you know charter level language saying you know thou must use fewer connections right that that\u0027s always been a goal of making it happen and so to you know kind of invent a new higher level protocol that\u0027s going to have that implication is what makes me a little you know nervous so we always what I\u0027m asking is would you want words to like that effect if we do the endorsed with explanation no I don\u0027t think so I think you you you would articulate the advantages of HTTP two and leave it there nothing more no I would be happy with us should even to "
  },
  {
    "startTime": "00:18:32",
    "text": "that extent and use these to justify the should I\u0027m opposed to a must mark Nottingham I think it\u0027s fine to say if you do this over HTTP one you might have a bad time and to list out the various ways that that could happen um but you know you say man-in-the-middle up there I mean a lot of reverse proxies and a lot of CD ends talk h2 on the front end and h1 on the back end and so I really don\u0027t think it\u0027s realistic to say that you know it has to be h2 you can\u0027t guarantee that but what was I I missed something I\u0027m sorry what was the discussion about ordering I\u0027m confused by my co-chair is asking that question so I think we\u0027re talking about something different well it is someone assuming that there is an implicit ordering in in http/2 of requests no there is an explicit order in a should be one of requests and responses and that\u0027s not good enough for dns over HTTP which may want out of order responses parallelism is a problem in h1 I think we can agree on that best yeah that that\u0027s the point where me I just please tell me that you\u0027re not assuming that if you\u0027re getting the process of the the property of ordering of requests out of any version of HTTP no we\u0027re absolutely not okay good thank you thank you means what Google would there be any advantage that the spec would have to restricting it to HTTP 2 besides the obvious pros that you\u0027ve laid out there I mean is there like would it somehow make the spec fundamentally like easier to write or easier for MEA mean in practice I think it\u0027s harder to deploy if you look under the calmest right no I mean I think that\u0027s it\u0027s it is a little challenging to deploy if you have to limit it to H to be to only okay yeah that that\u0027s what I was gonna comment is it\u0027s at least for our load balancers it would be quite difficult it would be a very odd policy for us to restrict this to http to only and it would be sufficiently odd that I don\u0027t think we would do it because it probably would violate some rule that you know if that was she speaks HTTP it better work either way or something and same with the load balancer back-end comment is yeah yeah combination of points 1 \u0026 2 in the con side right it\u0027s a little impractical and all those layers there are there semantic layers already and they they\u0027re not expecting that kind of so kind of yeah so I would definitely say this is a this is a should I mean it really is should you will probably get a really crappy experience if you don\u0027t use it so if we agree cast endorsed with explanation as should is this getting is this getting support yeah that is "
  },
  {
    "startTime": "00:21:32",
    "text": "strongly support for me I mean I think we should explain that like we really should use HTTP too but I think forcing it is like totally impractical and probably a bad idea already totally impractical I actually want to cut up in order to suggest that we might want to say different things about clients and servers because there are going to be some servers in the future that have client bases that are h2 only because of the deployment practice that it\u0027s going to be common to them and that if you put it as should you could end up in situations where the mix of what\u0027s available to what\u0027s available on specific servers is unknown to clients and I think that\u0027s a bad situation so what I was going to suggest to say that servers must support h2 and may support versions other than versions below h2 and clients should support h2 with the endorsements that you have there and I think that will get you the the best mix of deployment I I do believe that there are our cases and I certainly understand the cases where you have a front end and back ends that are different and I actually don\u0027t think that those are really captured unless you break out the client and server requirements separately thank you just noting that we\u0027re closing the line after mark so that we can move on to the next hi this is Andrew Sullivan I wonder if maybe part of the reason that we\u0027re foundering on this a little bit is because many of the people are pushing back against this have forgotten that this is a transport for DNS and and this isn\u0027t totally clear in the document but III read this this requirement is basically saying well you want to do this because it matches the operational reality of the DNS traditionally so it could be that that that is the way out of this that if you do this should or something like that in order to make it clear that the reason why this is the case is because DNS operates this way today it\u0027s got lots of stuff in flight and I think that could be you know this is gonna really suck if you try to do it over over 1.1 thanks whoops John Levine me to me that this feels a certain that like refighting refighting the use case arguments by proxy you know if you want to make everything if you want to keep people people from spying on you you need HTTP to if in my case I just want to look up some SRB sorry for for some use cases you need HTTP to like if you want to keep evil people from spying on you HTTP to is much more helpful if you\u0027re in my case I just want to look up some SRV records so I don\u0027t really care what the transport is so I think you know in to us with explanation is bloody mark Nottingham uh I don\u0027t think I should as appropriate here when people read standards for a better or worse they see should and then they use that as a bludgeon to beat people over the head "
  },
  {
    "startTime": "00:24:32",
    "text": "with you know the the prose that you\u0027re listing here about multiplexing and about header size assume a certain deployment scenario the reason that a lot of reverse proxies haven\u0027t done h2 on the origin side is that they don\u0027t feel they need if they\u0027re using other techniques to get multiplexing and to mitigate these effects are seeing that aren\u0027t used commonly by browsers and and so I think if you want broad deployment then then then you need to not cut things off arbitrarily also you know the HTTP working group you might be aware has just adopted a document that talks about how to use HTTP as a substrate protocol revising BCP 56 bits and when andrew says things like HTTP as a transport i bristle and i get concerned about building that double out hourglass and I think Roy fielding just woke up and screamed into the night so you\u0027ll get that feedback too if you go that way so I will take this away as we will come up we will come up with some wording I\u0027m not sure if we\u0027ll say should or not you know we\u0027ll do that but that this is still open but towards endorsed with explanation and maybe that is a good time to slip in the PSA for BCP 56 bits because I think the group should actually know it\u0027s not coincidental that the HIV working group has taken that on at the same time as dough is formed and it is one of my personal objections objectives not objections objectives to have dough be sort of a good poster child for for for that work of a best use of HTP as a substrate that being said we have just adopted that document and it is not a final thing so we have a chance to sort of you know come up with that final final resolution informed from each other okay so the other thing I wanted to make sure we talked about though I\u0027m sure we\u0027ll talk about a lot more is this bucket of issues regarding interaction with HTTP caching which is not extensively defined in the document and this not this is kind of thematic with the last set of questions of whether or not it really needs to be does hgp already define everything we need to know so you can see these go from the concrete to more abstract issue thirteen is the most concrete and I\u0027ve actually already put a tentative resolution into what will be the next iteration of this draft and for that as talking about the HTTP freshness lifetime should be the shortest TTL of the response that so obviously you can have you know multiple resource records come back with various "
  },
  {
    "startTime": "00:27:32",
    "text": "different TTLs but they\u0027re all coming back in one HTTP response so the resolution on this is rather than just saying it should be the shortest of those that it must not be more than the shortest of those so saying it can\u0027t be greater than the min the other issues here are and that\u0027s already I\u0027m committed but as we talked about before you know anything that gets committed off of github is nothing other than an iteration of an internet draft does not necessarily reflect consensus until we get consensus that will be declared by the chairs or through last call all right but that is just you know in this survive in advance just trying to move forward model the other issues are a little more abstract they\u0027re saying you know the document doesn\u0027t specify a particular caching how does the DNS cache interact with the HTTP cache how\u0027s that interact with recursive resolver I think that\u0027s kind of implicit in there but we can talk about that some and finally the draft does discourage HTTP revalidation given that it\u0027s fairly impractical for a bunch of these use cases although I\u0027ve had a conversation with Martin that makes me think we shouldn\u0027t be quite so firm on that topic so that\u0027s my set up welcome mark nodding him Marc Marc Nottingham so issue thirteen I think that\u0027s fine I think I want to get in there and wordsmith exactly how you specify it so you know if you do it in terms of the TTL I want to make sure that if we have further extensions the caching model it will be compatible those for example if we one day define an invalidation protocol it should be able to slot in with us really nicely yeah I think that\u0027s just wording yes yes well I obviously pull requests you know accepted the notion there is a performing around the language of freshness lifetime because that seems to be the most generic way towards yes exactly and because that\u0027s the core concept regarding fourteen I think you\u0027re right I don\u0027t think we need a specific one we just need to describe the interactions where appropriate and put the perfect caveats around you know here be dragons where necessary and the issue 15 is the discouragement a RFC 2119 kind of discouragement it\u0027s just text it\u0027s actually a little stronger than that okay but it\u0027s not normative but it\u0027s I think you know generally maybe we should have a discussion about principles in that you know especially when we\u0027re talking about how we profile these protocols illustrating why you might have problems is great and exploring that space is something we definitely should do but just preemptively saying don\u0027t do that is is perhaps too much the current text uses a non normative should which you know tickles all kinds of buttons and so clearly really wanna we want to tweak that a little bit okay I think that\u0027s probably too strong and we should just explore the space so mountaintops reason that I open issue 14 was because I had some questions about how this worked in practice if I\u0027m going to try "
  },
  {
    "startTime": "00:30:36",
    "text": "to use some of the HTTP caching semantics they basically get swallowed if there\u0027s a cache on either side of them that applying that the strict ETL rules and so there\u0027s no a lot of value that we\u0027re getting from using HTTP caching in in that model do you think that\u0027s true when the HTTP cache is a shared cache between clients well why would the DNS cache not equally be shared is the question is they could be in two different clients okay you\u0027re talking you know I\u0027m not aware of one of those but maybe okay even still it\u0027s you would get the sharing at that point which means that you would get through the first cache because it\u0027s not there and then at the second cache and that one is shared therefore it\u0027s more likely to have a hit so sharing in the second layer yeah that\u0027s my um yeah even still I would like to have a little bit of clarity about that because I had trouble answering the questions that I had regarding this and someone suggested to me that maybe finding ways to to bust that first cache might might actually be a value and then again I\u0027ve I\u0027d like the opinion of folks who you know DNS more is cache busting a thing that we actually want to have because I should it be provides and numerous ways to deal with that and if HTTP is going to be involved in this and we\u0027re going to be relying more on the HTTP cache for these things what are the implications of people using those techniques on things like say server load so in the DNS world we pretty much are in denial about this that is that the server gives some TTLs and those are understandable and what the client does with those is really a local policy many of the local policies are to follow it some of them are to follow it until it looks like it\u0027s going to expire and then preemptively renew some of them are to say I know my number better than theirs I\u0027m just going to stick my number and and those are all very common so in the DNS world we actually just assume that it is advisory and that you\u0027re not it\u0027s not nearly as tight as it is in a yes you do actually so okay I mean we\u0027ve had this discussion Indiana soft many times on many drafts so in fact we are just living with it and Schwartz as individual contributor I I think that the the logic and the draft works for me but it took me a long time to understand that logic as a simple-minded person and and implementer it would be really nice to have a couple of extra sentences explaining things "
  },
  {
    "startTime": "00:33:36",
    "text": "like when you might rewrite the TTL on an HTTP to DNS conversion so if your it seems like if you\u0027re in there are certain models where you you pull an object out of the HTTP cache and and you actually have to sort of rewrite shorten its TTL before handing it downstream right so the HTTP caching language is fairly extensive shall we say met it has you know has it been talking more with folks from from the DNS operations community I\u0027ve had to explain some of the finer nuances like like the age header that a cache actually knows the difference between now and when something was generated how long that\u0027s been and can make that part of its TTL and I think perhaps exploring some of that space could be a useful contribution here yeah so rave Ellis I see yeah I kind of have to take something sure what Paul just said yet TT ELLs are supposed to be sorry I just it sorry most clients should be treating the TTL as an absolute maximum not standing there are some that do but if for example we go an HTTP packet sorry of ENS packet that comes back from the DNS server that says the TTL is 300 seconds and that then has go through into the HTTP caching headers that says we remember the seconds and then 299 seconds later somebody else gets the same response back they\u0027ve essentially doubled the TTL of that record and that is I\u0027m sorry so that\u0027s actually just what I was referring to so that\u0027s the age concept of the cache yeah so when that response is served from the cache then the second iteration it\u0027s served with a say an expires time of 300 seconds but it also has a age of 291 to 99 and it\u0027s in HTTP rules it\u0027s impugn its required by the client to do that subtraction to know that this this response only has a one-second lifetime left so allowing on the HTTP layers to override what\u0027s in when you\u0027re using HTTP caching you are relying on the HTTP and the the whole point of issue 13 is that the HTTP caching semantics are consistent with the DNS TTL yeah yeah we\u0027re not were styling there\u0027s a lot of people treaty tails advisory as a maximum I think it should be very clear that so far as possible we do not extend the t-tail records because the TTL dns records are actually for the zone and mints traitors benefit and not for any downstream user don\u0027t use it free to use something lower but it should never go higher yep this this is consistent with that coming through the HTTP Ralph before you go may I interrupt for one moment I beg your forgiveness the one aspect of this that I want to point out too is that essentially this is blessing unbound unbound it\u0027s a particular DNS implementation of your recursive resolver and it\u0027s caching model is one that uses the DNS message is the fundamental unit of cacheable "
  },
  {
    "startTime": "00:36:36",
    "text": "information and that\u0027s kind of contrary to what the DNS people expect as our our set being the fundamental data unit for caching and so that leads to interesting second-order effects where a lot of things get requireed well before they need to be read for example a cname chain that has to our C names in it and then ends with the twenty-second address record will end up being requireed the entire chain every 20 seconds instead of based on the our sets the C name so yeah and I know you so I mean DNS caches on the left side can be sort of magnitudes of orders of forwarders and I\u0027m not sure if that\u0027s also true in the HTTP world but you you have to make sure that you have the shortest time of all this stuff in to make sure that this stuff is fresh and one more question because I don\u0027t know the HTTP stuff too much what would happen if I give back a TTL of zero because that\u0027s you I mean unfortunate getting more and more common in the answer also so that that response would be useful for the requests that made it but would not be used for any future responses so effectively no caching correct okay so if if what he said is not truth and that should go to the HTP working group yeah so Wow many things I just want to note for people listening online that might not have heard the general groans in the room has followed that assertion yeah there is apparently some disagreement there so Warren Kumari a couple of things when DNS people publish a record with like a 10-minute TTL they generally sort of double it or so for assuming how long it\u0027ll actually be used because of things like forwarders but be careful when you say they when a server publishes with a 10-minute TTL please finish the sentence yep the person who operating the server assumes that the record will stay around for sort of 20 minutes or sometimes 30 because there are forwarders and wrath for it is you just take the TTL and you store it for that and hand it back so if there is a forwarder and an HTTP cache and then another DNS thing behind it yes if it\u0027s been cached for - for sort of supposed to be 300 seconds being cached for two hundred and ninety-nine you know maybe a t-tail should be changed to one if it\u0027s handed back to anything that will ever end up in the dns again but we need to just think about that another thing which needs to be kept in mind is there are various records would actually expire at a time things like DNS keys you know GSK ksk have an actual wall time at which they expire and that needs to be kept in mind as well and I can\u0027t remember what the third thing was so I will assume it wasn\u0027t important and we\u0027ll sit down stay there so you have two things one is that the first one you said it was maybe the HTTP server should change the TTL in the record the second one is we have some wall clock things "
  },
  {
    "startTime": "00:39:38",
    "text": "okay I would like to respond to the first one our model so far in the draft has been that the HTTP server is passing along DNS data if you want something different please suggest text um I would yeah so so that\u0027s you know you\u0027re changing sort of a fundamental thing here which I\u0027m not saying you can\u0027t do I\u0027m just saying that that\u0027s the first we\u0027ve heard of that second one about the wall clock again we are passing things through there\u0027s nothing in here that says if you are passing say a DNS key record that has an absurd wall clock time in it like some in the past or in the future you should do anything again the idea is we\u0027re passing things through so for the first one I\u0027m not saying we should necessarily change it I\u0027m just saying that if it changes operational stuff whoever\u0027s doing this should you know be aware of that may be changing the record the TTL and the record is useful maybe not more discussion right on the wall time thing what I\u0027m concerned about is a record arrives now should it should be okay I was calling a record would end up and the HTTP cache way after it had expired and would continue to live just in the same way that a forwarding chain might have done that we we believe that this is like part of the foreign chain if not we need to be specific yeah Jimmy Doherty FM if we\u0027re going to have to do that second this kind of scenario Paul what would we do about DNS eight validation tape issues and I\u0027m also thinking in the cache issue boats and aggressive insect caching we are going to do whatever if if the authoritative server I\u0027m sorry if the the recursive server who you\u0027re talking to is doing validation it\u0027s doing validation if it\u0027s it\u0027s not I mean it\u0027s no different than the current state okay yeah we\u0027re trying to be not special you leave yourself wide open there mark Nottingham mark you can be special Oh Paul listening to the comments I think it\u0027s safe to say that we\u0027re kind of witnessing a little bit of a collision of cultures in that there are some people in the room who are very fluent in HTTP caching and don\u0027t know a darn thing about DNS and I feel like that I think Patrick probably knows more about DNS than I do he\u0027s squinting and and other people know a lot about DNS and have a lot of contacts there and don\u0027t really understand HTTP and so I think maybe we can look at a couple of different ways of improving that if if the spec were to contain a number of worked examples of the messages on the wire in completely in toto as well as the deployment scenario that would probably help if if yes if the draft were to be extra careful about its "
  },
  {
    "startTime": "00:42:39",
    "text": "terminology because you know I\u0027ve already heard a bit of confusion about caching and different things and and finally if we can do a little bit of Education I mean I\u0027m more than happy to arrange to give people in HTTP caching tutorial I I can do that maybe in London or whatever and if somebody could do it on the DNS and I sure would appreciate that personally I would love to have those happen before London since we are sort of on a short leash if we have a virtual interim before then I think that those two tutorials would be really good I would not give the TTL one in fact I might make ray do it but yeah I think that that would actually help these issues and as for the examples I just a quick Chuck I think worked out examples with x in them would actually be really good because if nothing else that would shock some of the DNS people into understanding what we do ourselves anyways we don\u0027t have worked out examples like that in any of the DNS RFC\u0027s you can as for being care about terminology I\u0027m going to switch hats quickly RFC seven seven one nine seven seven one nine is DNS terminology and that is being revised in the DNS off working group and I\u0027m the author so if any HTTP people are reading either 77 19 or terminology Biss and you say oh I was expecting this to explain this about DNS to me and they don\u0027t please speak up now we\u0027re going to be in working group last call on the bist soon and this is exactly what this document is meant to help okay okay can I make one more request then in the HTTP world we have a home page HTTP WG org that has a listing of all the relevant specifications and current specifications for HTTP and so if you want to understand part of HTTP you can get the correct reference at least I can\u0027t claim that it will make you understand HTTP but at least you can get the correct reference DNS I\u0027m sorry to tell you this is very confusing from the outside so you haven\u0027t read 77 19 obviously because one of the things when I started it eons ago was let\u0027s just define things and everyone\u0027s like which RFC is that coming from it is full of this thing is defined in these two sentences but if you want more here\u0027s where they\u0027re quoted from K so it can we use that as a roadmap to understand modern DNS is that the right place to start that\u0027s one of the intentions okay and it\u0027s seven seven one nine yeah thank you and I\u0027ll send that I\u0027ll send that to the mailing list please do the pointer okay and I\u0027ll send a pointer to the edge or to send a partner to the best great already done well I\u0027ll send a pointer for the HTTP stuff Thanks okay and now Mark Andrews is joining us from the Medeco cube Warren was talking about for to say all camp then are otherwise it broken which means the entire forward a queue will expire the record or the RS it at the same time thank you Mark John "
  },
  {
    "startTime": "00:45:40",
    "text": "Levine I would like to strongly endorse the suggestion that we work out some some examples of how the caching interacts me because I can imagine a way to use the HTTP date header to adjust down the TTL Xin the reason in the received data and an received library which seems too ugly to live but I you know I\u0027d like to make sure we all agree that we either do or don\u0027t want to do something like that yeah I think we\u0027re pro examples but actually the example you cited HDTV prohibits but so mum Thomson I wanted sort of I poured that please send the seventy seven nineteen is linked to the list so that everyone can find it to MIT thank you has already diced him Oh if meta I can send pay us the no I won\u0027t I promise I want yeah this really is one of the reasons we have done that and it you know no no negative on mark about the homepage for ACP this is you know DNS is hard for outsiders to understand and this was one of the reasons we did this and if it\u0027s not fulfilling that you all here you know are on the bleeding edge so we talked about revalidation briefly was the conclusion there that we would save virtually nothing about revalidation because I think there\u0027s some interesting things we could do with things like stairwell revalidate and those sorts of things in this in this space that would be really interesting yeah I think we can express much that sort of explore the space I don\u0027t know there\u0027s anything normative we want to say you know in terms of how you use this I think this is gonna be one of those PCP things where the draft as it is discourages revalidation probably shouldn\u0027t do that HTTP is what it is and three or four is what it is and you know if modified is what it is and you know so we really shouldn\u0027t say anything strong about that but you know exploring the interactions between stay awhile revalidate and exploring the interactions around you know what does a three or four really buy you in terms of light byte guys sighs versus the actual DNS thing and all that I think that\u0027s worth spending some text on yeah so the the point was made about our set caching as opposed to message caching and have either if you put any thought into the splitting of our assets out so using some things like say push which then you could wait splitting them out where what do you mean by splitting them out splitting them out into separate responses yeah so so Martin is suggesting that the DNS API server would extract the minimal are ours from that our set is that kind of wait you\u0027re getting that I on the little fuzzy on the specifics but there\u0027s always the related things and so since that hasn\u0027t really been discussed in the DNS world I don\u0027t think it would be good to start it "
  },
  {
    "startTime": "00:48:41",
    "text": "here okay and but now there\u0027s fine response you you have infected like the DNS people in here and I\u0027m sure we\u0027re gonna get started getting drafts in DNS off next week about this but for now no we haven\u0027t discussed that and boy do I would like to continue not to pressure collects it yeah well anytime you anytime you use push in a clever way I like it I don\u0027t like traditional implications of push but I think this one\u0027s really interesting because it allows you to split and records into the one you want which is your primary response and then n minus one pushes as your additional records you can give that and you can give them individual image visual freshness terms that\u0027s what I was giving that\u0027s really sexy much yeah so I just want to point out visually one of the two co-chairs of DNS opt is sitting here wincing and possibly crying almost i digital visitor I right from the future of the sandstorm that\u0027s coming towards us so no we haven\u0027t done it if the DNS off working group gets ahead of us on this it would be part of this and but no again let\u0027s not let\u0027s not try to change the way DNS is working just for this this this is a fine response I just felt beholden to inflict this upon the working group as part of mocks culture clash yeah same yeah I do find the culture class thing interesting I would have never thought of that here I would have thought you would have thought it was a bad idea and the fact that my co-author got excited about that yeah then yep Ben Schwartz I just want to point out that that probably is not application DNS UDP wire on that right it would it would be wire wires format and now I also want to observe that we\u0027re actually have been well into the time that we just left for general discussion on a draft the mic line is empty at the moment did you have more you want to say before we went into just I think I was right I thought so too yeah so yeah let\u0027s because why I didn\u0027t stop the discussion I we excused no no no he\u0027s I oh you had to stay here to get whatever else now people want to bring up about the draft so are there other issues about what we\u0027ve done you know the protocol draft at this point since there is the other ones are there I mean we just opened up cans of worms but are there other things that people who have been reading the draft are current you know like want to bring up right now because I think there\u0027s plenty more to be discussed in the second half I think you\u0027re free and I\u0027ll follow you okay thank you very much to the authors we don\u0027t exactly have slides "
  },
  {
    "startTime": "00:51:47",
    "text": "this is now this is now an open discussion and the question here is what other technical issues should we be addressing beyond the contents of this protocol so right ballast I see if this is to be implemented using for example a front-end HTTP proxy which is then talking wire format to a downstream server I have a draft in DNS up called draft belliston is up xpf which is for carrying the original clients transport information for example their IP address ports and so forth to the back-end server this just appeals get more review of that draft please as we\u0027re hoping that\u0027s going to have a call option around this ideal to get that adopted and the HTTP proxy is a perfect use case for this it\u0027s intended only for server-side proxies or protocol converters and it just needs more review thank you so this is a follow up to the email discussion we\u0027ve had on list there were basically three issues that I raised on the list the first was that had to do with split DNS and how this work with split DNS as an operational issue the second had to do with global server load balancing the third had to do with device acuity appliances and tools that actually use DNS and enterprises relating to trying to prevent prevent malware or detect malware in discussions on the list what I think we we found at least some common ground on one of those issues think mark had a suggestion at least to point out in terms of how we deal with global server load balances little server load balancers in just private conversations with some of the people around it seems like there\u0027s an easy way around addressing split DNS in terms of at the bare minimum a configuration point in terms of understanding what\u0027s local versus what\u0027s not so you know when you don\u0027t meet when you can\u0027t really use like a DOS server that is outside some proxy boundary for instance and the third issue around cyber security and doing scans of the DNS packets looking for packets I think I\u0027m looking for malware I think that one sort of remains open but the one suggestion I think I saw on the list was well we just don\u0027t use it if this is the thing that you are worried about my point in all of this is I think probably there\u0027s you know if those are the three issues that anybody could think of around this I think there\u0027s probably just you know a paragraph or two at most that we could probably add into the draft and I just suggest a that I create a pull request and people can review it and then just "
  },
  {
    "startTime": "00:54:47",
    "text": "saw whether they really feel the need for a you know for somebody to publish a large internet draft for a one-paragraph issue so that\u0027s that\u0027s what I want to mention if they\u0027re you know I meant to mention these things as issues that they can be resolved in various different ways you know some of them are you know as simple as you know was suggested which is you know have a manual configuration people can explore things like proxy packs or not that was not meant I don\u0027t feel the need like we have to solution engineer absolutely everything here for this but just to you know mention the issue and even if we if we have one simple approach to get around something and then that should be enough from an operational consideration standpoint and if people want to get further you know more elaborate about it that\u0027s fine too but we don\u0027t have to not all that has to go into a draft I the draft is relatively compact it\u0027s relatively well written and rather not you know you know disturb that with lots of operational stuff but if we can keep it if we can keep a paragraph or two small you know to address these things it\u0027s not uncommon to have in our RFC\u0027s you know some operational consideration discussion if it\u0027s if it\u0027s compact if it\u0027s a whole model or a whole new deployment approach then then yeah you fork that off into an internet route so I\u0027ll stop there Patrick are you going to speak to editorial concerns about the the structure of the draft and in relation to this I don\u0027t have to be asked twice to hug the microphone sure I mean I think most of the considerations brought up are probably similar things to what you know deprive how to consider it I mean most of these things are a matter of if your recursive resolver is different than your default recursive resolver what happens right and I was just actually trying to call up the deprive draft and say what did they do and I\u0027m sure I would say my interpretation of my tents I can read of that at the mic but I\u0027m sure other people here actually obably lived through that discussion to know better but it didn\u0027t look like they did very much on that topic and so to the extent that this is just a really a question about you know who your recursive resolver is or who or whether or not your encrypted I\u0027m happy to give a sentence or two like literally I mean if there is a paragraph we can write but you know given how much time is spent at the mic on the topic I\u0027m a little concerned that we\u0027ll be able to get it into two or three sentences right if it goes more than two or three cents I really do believe that\u0027s a distraction in a protocol document if it doesn\u0027t have a lot of implications for how you implement the protocol and we should consider you know doing that doing that separately I\u0027m just gonna say you know just on that point I\u0027m perfectly happy to negotiate with you between two or three sentences and a paragraph and so as kind of half a hat as co-chair I know that one of my own personal concerns from the DNS world "
  },
  {
    "startTime": "00:57:48",
    "text": "perspective has been the greater ecosystem in which this gets used but I see that as a separate document from just how can we describe the protocol and what the protocol should be doing and you know and to the extent that my concerns about the greater ecosystem and its applicability are something that needs to be documented I think it\u0027s going to be quite a bit more than just a couple of paragraphs hello hello oh sorry this is stephen from rockton I\u0027m totally new here so please correct me if I\u0027m wrong anywhere so I was trying to - to think that there\u0027s basic based on the security implementation of DNS over HTTP the underlying protocol HTTP I mean relies on PKI basically in that sense when we want to validate where the certificate is valued so we basically have to put the trust on a certificate that the HTTP server presented in this situation now most of the CAS most of the commercial ca\u0027s basically rely on HTTP or something similar to basically publish the CRL or os using using OCSP in a situation so basically we now have a circular dependency here because unless we are saying okay we\u0027re not totally replacing dns we\u0027re just basically using it as an addition otherwise we have a circle a dependency here in size you need dns to resolve those names in order to be to pin on that trust but now there\u0027s no mechanism for you to validate whether that underlying dns is well of course you could use DNS SEC or you could potentially define a special CA that uses IP address yeah or you staple it in some way but but then how exactly I mean do we are actually looking at solving this issue or is there any other ways because if we staple it I mean and then we go back to whether there\u0027s a new certificate is true for the same thing and the client would have to be updated in some sense so yeah so Mountain Thomson I think there\u0027s a there\u0027s a really easy answer this and the Patrick just said OCSP stapling means that you don\u0027t have to go to another server to get the answer that you need and so if we I it might actually make sense for us in this group to even mandate the use of OCSP stamp stapling in this particular context simply to avoid that that circular dependency otherwise we end up in a situation where you have to use some other form of DNS or you have to not worry about revocation for the period that you\u0027re going off and searching for the CRL zand or OCSP responses OCSP stapling is good practice and so i don\u0027t "
  },
  {
    "startTime": "01:00:49",
    "text": "feel particularly uncomfortable about recommending good practice does that help yeah I - HTTP to you and now I forgotten what I was up here to say that roach had off one of the things that I wanted to point out about the operational considerations that have been brought up is that some of these are likely to have proposed mitigations that actually bear on the implementations so for example if you were to have a recommendation that informations have exceptions for local domains in some way putting that off into a separate document I suspect would probably not get it read by most implementations so I have some sympathy for the prospect that at least some aspect of this is likely to be useful in the protocol document itself so what I but I think I\u0027d like to see is like putting together some text about what this is you know what these considerations will look like and determining whether we need them or some of them in the protocol document before we sort of you know rule them in or out of scope sight unseen mark Nottingham Taylor you mentioned an echo system document could you expand upon that you mentioned having an echo system document no but but you have something in mind or mic so there are a number of questions about you know the data authorization model right that the integrity of the DNS and and different aspects of are we like right now we\u0027re essentially defining a protocol that could be the norm for now h-e-b servers to push down all kinds of DNS data into a client and say oh hi even though I\u0027m example.com server I\u0027m gonna tell you about ad server comm and we\u0027re not defining anything right now about you know pulling in same origin model or whatever else that\u0027s in this current document to talk about how do we know whether the data we\u0027re getting is trustworthy another is the one aspect certainly that if you\u0027re configuring a DNS over HTTP server to just be like a resolver that you\u0027re already trusting blindly in the current system that\u0027s one thing but if the the possibility that this is a mechanism that is going to be used to introduce DNS data to a client I want to see that area fully explored about what all those implications are especially with regard to the way the current DNS operators work and the expectations they have of how their data is getting used sure so I have all I\u0027ve only aware of one use case primarily for this to start with which is user configures manually somehow just like they can configure an alternative resolver they configure a dos server in their software or their OS probably in their software to start if it\u0027s gonna be "
  },
  {
    "startTime": "01:03:49",
    "text": "something that\u0027s you know another was a big discussion in chartering about javascript something\u0027s somehow having some secret mechanism to do this I think that\u0027s a red herring because that would have to go through the w3c and be specified as an API or you know one of the browser vendors would have to actually think was a good idea to do that and I don\u0027t think there\u0027s any evidence at all of that I\u0027d love to be proven wrong so interrupt and say that the conversation that you and I had in Toronto was that there was evidence that browser vendors were interested in bypassing DNS latency times by being able to serve the NSA well your memory is so much better than mine it\u0027s all that drinking no JavaScript good good yeah well sure I mean performances of always of interest to people running web sites for well understood reasons I just wanted to remind us that our Charter says we will coordinate with Dinah\u0027s oppenent area so i\u0027m wondering if there is a joint document or some separate document that might evolve out of that and also part of the part of the charting discussion was a huge sidetrack about discovery mechanisms and I\u0027m wondering if anybody is proposing a discovery mechanism document or whether it makes just sense to write down that initial use case and say that\u0027s how we\u0027re starting so on the Charter I will note that you don\u0027t have the text here but I will note that the the text of the Charter says that we are chartered to define mechanisms for discovery of those servers similar to existing mechanisms for discovery other DNS servers they scroll down a bit more may define mechanisms i-i-i i hope that\u0027s not being interpreted as a requirement to do so i so i don\u0027t think there\u0027s a there\u0027s certainly not a requirement to do so here and i think there\u0027s also some question about whether some of the some of the more far-out mechanisms that we\u0027re talking about are essentially dissimilar to existing mechanisms for discovery right i think my understanding that discussion was maybe somebody of what might one a dhcp option to discover your local dos server which seems really weird to me but somebody wanted to talk about do you have a roving hat comment here we\u0027re looking at relevance of this on the charter i would encourage everyone to read all the way down to the if and what comes after that right this is this is definitely an optional part of what the working group might do some thompson to things so to Elias three points I think we\u0027re blowing that up way out of proportion I think if we see how it Elliott\u0027s proposed text it will make it very very clear however I would caution that taking on the people who want to "
  },
  {
    "startTime": "01:06:50",
    "text": "look at what\u0027s in the packets question is going to blow it up more than we we already have and so we should probably avoid that one the second one was the the concerns about configuration or random servers on the internet sending me DNS responses which sounds kind of scary this is a fear that is grounded in some reality at least in that I now have a client that is going off and talking to servers using the protocol that they can use to make those things appear right so we need to be a little bit careful on this front so I\u0027ve got a web browser I go to a site and it sends me it pushes me the the dot well-known with a request for some something request in it and it provides a what appears to be a legitimate response what am I to do with that well obviously you just don\u0027t do anything with it but there\u0027s questions here about how that how people are expect how people are approaching this particular situation now obviously if you\u0027ve configured a particular server as your DNS API server you\u0027re not gonna have that response that\u0027s come from some random server somehow appear in the cache that\u0027s just not going to happen so I think we\u0027re safe there\u0027s no problem but we we need to may we might maybe sort of make a nod and a wink in the direction of that sort of thing because I do know that there are people who really do want to do things like push those things for their own service so I\u0027m talking to a particular server and says oh by the way here\u0027s an alternative service you can connect to and by the way also here\u0027s the IP address of that thing save you the time and that\u0027s the sort of thing that I want to make sure we\u0027re really crisp about because if we\u0027re not crisp about it people will do those sorts of things and I\u0027m sure many minds were blown in the process of thinking about that and trying to work out the ramifications I\u0027d rather not go go there just just yet maybe eventually not right now hi Sullivan I I\u0027m a little concerned sitting here that we\u0027re putting the cart and the horse in the wrong order particularly worrying about like is it one document or 18 documents or something in between it it became very clear to me in the earlier discussion around for instance how caches are going to interoperate that we have two sets of people in the room neither of whom speak the same language and and I think the best way to work that out probably is to work through a bunch of worked examples "
  },
  {
    "startTime": "01:09:50",
    "text": "whether they go into the document whether they go into another document whether we do them all on the mailing list and then decide this should be on a webpage somewhere I don\u0027t really care but I do think that we\u0027d better work some of those things out in in detail pretty promptly or we\u0027re going to continue to to founder on this this example for instance of of data showing up kind of randomly at a client from some DNS things somewhere and it being accepted maybe sounds really weird if you\u0027re familiar with HTTP but if you\u0027re familiar with the history of the DNS that\u0027s not weird at all it\u0027s all the time we call it poison so I think that that\u0027s something that we want to work out in in a certain amount of detail and and again I think the mechanics of what document this goes into and so on we should put that off until we sort of work out some some concrete things Thanks couple things Pat McManus I\u0027m pop the stack back to certificate revocation we talked about maybe recommending OCSP stapling I think we\u0027ve seen the different clients do revocation checking differently that\u0027s one of the different ways Paul\u0027s not at all but that\u0027s not that\u0027s not my browser in any event and much like other things about HCBS we would not specify you know like what routes you would use or any of those good kinds of things perhaps not go into the details but we could explore the fact that if you do this wrong there there is a loop and hey with not at all you got to admit there\u0027s no loop okay and then to pop this check back to where Taylor was talking about with other operational considerations I had thought during chartering we were pretty close pretty clear on the resolution of like what this would cover and what wouldn\u0027t cover clearly the case for recursive resolver is the primary use case we\u0027re all on board with that this question of you know JavaScript and the thing about the w3c where you don\u0027t really need the w3c if you\u0027re just going to directly you know use the HTTP methods specified in here you can just do it out of fetch or a xhr but as martin said you don\u0027t have to worry about those answers ending up anywhere whether it be mistaken as IP addresses by other parts of the system javascript is just not have those kinds of privileges I would not worry about it we can write a sentence that says that but I would not worry about it and then the third an interesting case that\u0027s always lurking over everyone is what happens if this website pushes me these unrelated addresses right in my view that is clearly not something that doe directly enables it would be you know a spike of IOB an HTTP spec violation because HTTP defines how you decide where you get your information from an origin on and that is generally through DNS we\u0027ve recently added an extension proving that we really do define this called origin frame which is a slight twist on that matter and you could conceive of the group Marx look at me like he doesn\u0027t think origin frame is a "
  },
  {
    "startTime": "01:12:50",
    "text": "twist on the DNS which is interesting okay and you could conceive of you know dough given information becoming something else that that HTTP group would want to consider for routing information but dough does not enable that by itself that would be an HTP decision it\u0027s not been made you know there\u0027s obviously a ton of stuff to consider in making it so I would want to make sure we didn\u0027t write logic that said you know this could never be done but we can certainly say this does not enable it I hope that\u0027s clear yeah I hear a lot of people scared that other people are going to be confused so I think a little bit of clarity and and maybe using the word it words words to the effect of don\u0027t poison yourself might help a lot I would also I would like to point out that when we had the Boff and soul and the 85 people showed up for the room for 24 and as you observed there was a lot of different impressions about what DNS over HTTP would mean and what that implied and so I do think that clarity around that saying no this is not supposed to be a mechanism to poison your cache is useful to pursue what do you think what I\u0027m saying is that appropriate level of clarity or not agreeing I heard you saying that we should probably just have clarity here yeah and it is what I described in editorial question this plane is what I described the kind of texture looking for okay Mike Bishop Akamai so a lot of what I got to say echoes the previous comments that when we\u0027re dealing in the HCP with yeah the idea that\u0027s been floated around of pushing DNS resources well probably if you\u0027re going to do that it would have to be DNS SEC because otherwise it is poisoning your DNS cache but the the origin extension DHCP to also means that we rely less on DNS for that and so the use case where we wanted to push DNS records has largely going away if you implement origin so well you have solved one of the major use cases to some degree but so I I think the Charter fairly clearly rules that out I think we\u0027re we\u0027re mostly done unless we just want to say in this back that it\u0027s not intended for the following use cases Erik coin I wanted to ask an implementation question sort of that maybe too early and also will of course betray my deep and abiding ignorance we\u0027re late last night and some conversations about Dino\u0027s over TLS and DNS over TCP sort of things the question of pipelining many queries to a server yielded a result we\u0027re like what happens when the server sort of has too many of "
  },
  {
    "startTime": "01:15:52",
    "text": "your queries right and in in HTTP we have 429 and too many queries but I don\u0027t know what we really do in DES but but in a persistent persistent connection do you wait for the connection to be dropped then and closed do we vary implementation defendant there\u0027s definitely nothing to find in the protocol to say what should happen there and there\u0027s nothing there\u0027s something that would help here semantic wise on the HTTP side that would make things clearer yeah Simon Thompson HTTP 2 actually has a bunch of mechanisms in it to sort of protect against these this class of attack it limits the number of concurrent requests that you can make it provides very specific control over things like buffers and or compression State and all of the things that a server might have to exhaust in in the process of actually dealing with all those requests so I think that here we have a reasonably good story if we go with the the endorsed version of the protocol and I think other than that were still in the Wild West yeah HTTP 1 1 we probably want to go back to the rules in HTTP 1 1 about the number of connections because that\u0027s really going to limit the number of requests you can have concurrently and I mean the actual number varies but it\u0027s 616 to pick a number it\u0027s not really specified but it there\u0027s this text about it man and anyone who creates a thousand connections to a server gets what they deserve thank you other ones a clue di I have to say I don\u0027t think other people be confused I don\u0027t I don\u0027t know enough to say that but I do know that I\u0027m confused because this text is what like I don\u0027t understand for example you know if I\u0027m the web server for example calm and I\u0027ve certified myself as such you know can I update the quad a record for example.com yes no no okay um so where does it say that I see and where does it say here that that work is out of scope is it out of scope or is it not out of scope it is not out of scope Hoffmann it\u0027s not that it\u0027s out of scope it doesn\u0027t work in HTTP you\u0027re going cross-origin and such if you haven\u0027t asked for it you just don\u0027t get it then that\u0027s we might need to clarify that a bit more it\u0027s not that it\u0027s out of scope that we don\u0027t want you to do it you that\u0027s just not what we\u0027re doing okay so then what does it mean down there that says we can define mechanisms for may defined mechanisms - where is it for discover to discover recursive resolvers those "
  },
  {
    "startTime": "01:18:52",
    "text": "mechanism is gonna be because like today that to discover recursive resolvers that you want to use it\u0027s not just that oh look here\u0027s a recursive resolver in the same way in the DNS right now there\u0027s lots of open recursive resolvers but if somebody was if a DNS stub resolver said oh look here\u0027s an open recurse er I\u0027m gonna start using it now which is you know a completely insane thing to do they could probably view that here and we\u0027re not endorsing it but we can\u0027t prevent somebody from doing and saying things saying look I\u0027ve you know I glass of water on the ground I\u0027m just gonna drink it because I\u0027m thirsty and so and so perhaps perhaps implicit in the words recursive resolver recursive revolver that you want to use for all domains then okay so maybe I just don\u0027t know that that means then so we\u0027re of course inverse over is something that you\u0027re gonna use for everything generally in the DNS world that\u0027s absolutely right your DHCP server gives you an address no I think I know how it works in DNS it\u0027s just it\u0027s as similar so I gotta know what it what is in this what is or is in not in scope where Elliott explodes I think you should yeah can I make a suggestion no let\u0027s have this discussion when there\u0027s actually a proposal of some text in front of us because right now we\u0027re having the Charter discussion we\u0027re already charted and we actually have some issues to close that on the existing text is that okay yeah so I just had a logistical question regarding the the three ones that I mentioned and and and I think Andrew had a point which about you know maybe developing out the the use cases for sorry the and Reata suggestion about developing out use cases and having and having text around you know these use cases I just want to know how you how the chairs want to proceed in terms of doing that because I I\u0027d offer to generate a pull request for you know a paragraph and and if you want to follow through in a different approach I\u0027m okay just tell me what you guys want to do yeah I think that\u0027s a that\u0027s a good approach by all means propose text on the mailing list and and and then pull requests and and if that turns out not to work then we can we can find another way thank you so seeing no more comments I will ask the the last question from our agenda is is there anybody who wants to volunteer to do something like write another draft beyond what we\u0027ve already discussed here in terms of amendments to our current one draft okay seeing no volunteers Alex "
  },
  {
    "startTime": "01:21:52",
    "text": "may over I\u0027m actually not volunteering to write yet another draft but what I can see we are currently facing quite a few different I would say extensions to the DNS way that we operate the DNS actually in DNS op and I suppose that people would probably start to reflect those additions like we put it that way to the DNS protocol back into DNS of HTTP as soon as this protocol gets traction so things like extended response codes yeah that we are discussing in DNS up right now I mean it is essentially an eating a zero option but it has a couple of implications that go actually beyond beyond poor proxying of the DNS contents so I suppose from that direction we\u0027re gonna see like a couple of copies of things that go on and the NS up so Paul Hoffman responding to that um it is our belief currently that it is wire format so anything that comes goes the N the receiver of the wire format should be acting like a stub resolver possibly a newish stub resolver with things like that if you see things that tickle that please send them to the list I think that there might be a short list I hope the list is zero length but if we\u0027re wrong it would be good to see those but our current intention and what it says specifically in the current draft is it\u0027s wire format including a DNS whatever so so but that means just like you\u0027re saying that stale response we have a bunch of things sort of in flight indiana saab but those all expect the receiver to do something different and the receiver of this data would do something different we\u0027re not expecting the server you know the one who\u0027s who\u0027s encapsulating the water format and pushing it down to do anything different including on the TTL stuff that and that comes up in the same way hi i\u0027m andrew sullivan coming back to the question from the chairs about drafts I\u0027m not here to volunteer to write a draft because I I feel like it may be premature I think what I was trying to suggest earlier was that maybe what we need are a bunch of threads on the on the mailing list first to sort of figure out look are there things here that that that could coalesce into something that could be a draft at the moment I think you know if we try to write this down it\u0027s just gonna be incoherent and and we\u0027ve got too many things to work out it was very obvious from this discussion today that there\u0027s a whole bunch of things that are big gaps and if we could if we could narrow this down a little bit in discussion on the list or an interim or anything like that I think that would be more useful than then trying to write a draft that is just full of holes so I just want to agree that I don\u0027t think it "
  },
  {
    "startTime": "01:24:52",
    "text": "should be inferred that if at the end of this session we have nobody saying oh let\u0027s do another draft that doesn\u0027t mean that the working group has concluded just one the one draft is complete it we\u0027re still exploring the area and we\u0027re not likely to come to conclusions about it in this session mark Nottingham could you scroll all the way to the bottom well one of the real charms of this charter when it went around was the very short timeline and I think that sold this working group to a lot of people I would suggest that that maybe we keep the document list very short as short and close to one as possible having said that from what I\u0027m hearing here I\u0027m not certainly not volunteering although I can put some effort in it might be helpful if there were a throw away ID or a wiki page or something describing what people think the use case for this protocol is I know we\u0027ve kind of avoided that till now because we have a lot of different document I would have never agreed to do this with Patrick without a use case yeah it\u0027s right up in front and so if that\u0027s wrong we should fix it but it\u0027s right there up in front okay I\u0027ll take another look at it then okay thanks never mind keep it short my impression is that we are done is that right we still have we still have time the SAG meeting over in the other room is about to get to an agenda in their security dispatch section on OCSP over DNS so people are interested in this multi-layer thing might want to go there yeah we\u0027ll call it I think we are done with discussion for now so if you want to pop over to sack feel free if I synthesize everything I\u0027ve learned at this ITF we could do CSP over DNS over HTTP over TLS over HTTP over TLS over UDP wait quick are we please remember to sign the blue sheets if you haven\u0027t signed them we have them waiting for you here up front [Music] yes "
  },
  {
    "startTime": "01:28:28",
    "text": "you "
  }
]