[
  {
    "startTime": "00:00:06",
    "text": "hello everyone good morning good evening hello everyone [Music] so welcome everyone to the interior working group at ietf112 so let's start with the virtual etiquette and knitting tips so as a reminder please join the queue before participating need your microphone unless you are speaking and preferably turn off your video so we are sharing here wasim and myself hi everyone uh let's start with the note well uh so please remember that by participating to the ietf meeting you agree to follow the ietf process and policies that your contribution is covered by patent applications then you have to please disclose or notify the chairs about it your participation it's written audio and video photographic records will be recorded and you agree to respectfully uh treat other participants so uh note on that a brief reminder of key points from rfc 71 54 from guidelines of conduct"
  },
  {
    "startTime": "00:02:00",
    "text": "please uh extend respect and courtesy to colleagues at all times [Music] you'll remember that the discussions are impersonal and for technical reasons our goal here is to devise solutions for the global internet and that's the main goal of the discussion uh not to attack or criticize personal uh contributions but to advance the the technology together and please make sure that you are prepared to the to the discussion by by reading the the mailing list and the slides beforehand we are short usually in time so we try to be brief with the discussions and to the point [Music] um again uh remember that minutes are taken the meeting is being recorded the person says locked when you log into the data sheet and for this price please contribute online minutes to the kodi md link for that do we have a note taker that can help us advance the meeting uh i can offer the same service like last time so i don't type quick so i will not take notes live right now but i can prepare minutes afterwards with the recordings if for you guys it's okay lovely thank you very much thanks for that uh luigi and everyone else uh please feel free to contribute also to to the notes and if you can help luigi with that all right so we have a quite packed agenda uh we're going to start with a quick update on the working group items"
  },
  {
    "startTime": "00:04:02",
    "text": "moving to set to presentations on the lowest address and formal reserved address space then the challenging in gap analysis from gia [Music] we have then the how you song with the short hierarchical ip addressing the source address validation by dan lee then the cardigan minimalist multicast with beer from turles native minimal protocols from shenyang and an update about thai tripoli 802 1 cq from roger marks are there any comments or changes to the agenda all right so just a quick update uh for the working group status as you probably saw on the mailing list the gui generic udp encapsulation draft was declared dead in october if you have any any questions about the process you can see section 426 of rc 6174 okay so that's uh pretty much it so maybe we can move to the to the next presenter set are you online i'm here good morning good morning so nice to meet we meet you and please feel free to share your your screen your slide um i sent the slides by email"
  },
  {
    "startTime": "00:06:01",
    "text": "so if i click ask to share slides um is it available in the um it says no slides available should i perhaps do the screen share instead you can you can request again and then [Music] yes give us a second we will be there i see thank you [Music] i will say i was looking forward very much to meeting everyone in person in madrid and i'm sorry that that wasn't able to happen but i see that itf has become extraordinarily experienced with virtual mutex yes we're having an issue with the with the screen uh is it possible to you to share your your own screen yes and i will can you see this yes no we can okay well i'll present from here okay thank you thank you very much and good morning to everyone and uh good other times of the day to everyone depending on time zone and part of the world i'm seth schoen i'm here presenting on the ipv4 unicast extensions project and we have submitted two drafts which are up for discussion today as well we've uploaded two drafts in the same series after the deadline for this interior meeting and so i'll just"
  },
  {
    "startTime": "00:08:00",
    "text": "preview the other two very quickly but the um first two on lowest address and 240 are up for discussion in this meeting so our project is interested in making available large amounts of ipv4 address space that no one is using that has been historically reserved or dedicated to special uses and has never been allocated we believe that this can be accomplished with very small very gradual changes in many cases just one line or so of code per address category per operating system providing hundreds of millions of new unicast addresses with billions of dollars of economic value to internet users and i'd like to note that the largest change that we're going to talk about here 240 has been default behavior that is the behavior that we specify has been the default in many widely used operating systems since a similar change was proposed at ietf in 2008 it's actually quite possible that many or most of you are using devices to view this presentation and to interact with this meeting that already implement the behavior that we specify in addition the other changes that we'll talk about are currently default behavior in linux and freebsd systems so we have fairly widespread implementation of the things that we're specifying here so as many of you will know when the internet was first devised when ipv4 was first specified it was impossible for people to foresee what a success the internet would become and how it would grow and for various reasons"
  },
  {
    "startTime": "00:10:00",
    "text": "large numbers of addresses in fact more than eight percent of the ipv4 address space was reserved for various purposes and uses between 1981 and 1986. subsequent experience has shown that many of these address reservations are not being used for anything and are no longer necessary operationally or technically and the associated addresses are still unused despite the enormous and widely discussed shortage of unicast addresses so these addresses have tremendous value and there has been discussion for many years and people may recall prior discussions at ietf about the prospect of opening up these addresses and we've been looking at that researching that doing tests writing code writing specifications and we've found that it appears quite plausible and quite practical to bring addresses into use so the first draft that i want to talk about is our unicast lowest address draft and so in 1983 a famous and important historical tcpip implementation 4.2 bsd at berkeley implemented subnet broadcasting at the lowest address of each subnet before there was an internet standard as to which address should be the the segment broadcast address now subsequently the ietf community created a standard specifying broadcast at the highest address of each subnet and everyone has agreed in all documentation for a long time that the highest address is the"
  },
  {
    "startTime": "00:12:01",
    "text": "lowest address is only meant for backwards compatibility with the 4.2 bsd behavior bsd itself changed over to using the highest address for broadcast in 4.3 bsd just three years later in 1986 and so various rfcs say we want to maintain backwards compatibility with the historic behavior this is maintaining backwards compatibility with a particular system which has not been used for decades therefore our draft reclassifies this address for ordinary unicast use so that it can be used to number hosts now this is default behavior as of the present date in linux and freebsd and this change has large benefits in terms of assignable addressing they're very widely distributed because they're precisely one assignable address per subnet across the entire internet and under long-standing internet standards distant hosts by which i mean hosts that are not on the same subnet with the newly available address or with a host numbered with it require no software changes because distant hosts are not permitted to assume where the subnet boundary occurs therefore the distant hosts are already expected to interoperate with this and indeed they generally do all of this is to say that you get the benefit of the one extra address for subnet just by making changes on your own network our second draft for discussion today is our unicast 240 draft this refers to the former class e back when we spoke of classful addressing or experimental range 240 slash 4 from 240 up to 255 as the first octet"
  },
  {
    "startTime": "00:14:00",
    "text": "this is over 268 million addresses more than six percent of all of the ipv4 address space now these addresses were reserved for future use in the 1980s there were many reasons to think that this would be useful that there would be additional addressing modes other than unicast for example anycast was proposed to use a dedicated address space there have been ipv6 transition mechanisms that have been proposed to use different address space and so on none of the addressing modes that have been proposed have ended up being deployed and none of them have been able to make use of this space so there were two proposals presented in 2008 at itf which did not advance as drafts in the ietf process but were favored by implementers at the time and have been widely supported in operating systems since that time so our draft designates this range as ordinary unicast addresses and that means a request to implementers to implement the behavior that these are ordinary addresses which can be used to number hosts our draft does not say what shall be done with this address space according to our draft it remains unallocated and we save that question for a future day and i'll discuss in just a minute that we envision this being a gradual process which involves more involvement from the internet community in testing and assessing the deployment and compatibility questions now as i mentioned since 2008 most operating systems have supported this addressing range as ordinary unicast or can easily be configured to do so and again many of you are probably watching this very presentation on an"
  },
  {
    "startTime": "00:16:00",
    "text": "operating system that supports this behavior out of the box this includes popular operating systems like linux android and apple's desktop and mobile operating systems this also works so well that we've seen documentation showing that some cloud vendors are unofficially using this address space as private address space because they know that the particular systems that are going to interact with each other are your running operating systems that support it just to preview drafts that we uploaded after the deadline we have a draft on the 0 8 network which was reserved for an icmp based auto configuration protocol for hosts back in 1981 that protocol was not compatible with ethernet and was supplanted by auto configuration protocols like boot p and dhcp and in 1989 the mechanism for which 0 8 was originally reserved was noted to be obsolete nonetheless the space has remained reserved even though it's not being used for anything and modern ic um modern non-icmp ipv4 auto configuration using dhcp uses only one address rather than 16 million addresses uh this behavior that we document in that draft is also current default behavior in linux and we've uploaded the draft on unreserving most of the 127 ipv4 loopback network we note that ipv6 has only one loopback address whereas ipv4 for historical reasons has over 16 million of them and we've seen that very little software ever uses or refers to the great majority of these back addresses and does not typically in fact use them for the back for this behavior we're not aware of any deployed implementations and we look forward to discussing both of those drafts in the future so i want to emphasize that for all of these changes"
  },
  {
    "startTime": "00:18:00",
    "text": "the behavior changes for implementers are very small and we know this because we've prepared and tested changes ourselves for various operating systems that implement these behaviors as i said some of those are already deployed as default behavior typically for each category of addresses in an operating system you have to change about one line of code in the operating system kernel which is typically removing a special case that creates a special case behavior for a particular kind of addresses and we've noted that for all of these changes systems whose software has been updated interoperate with one another when numbered with the historically reserved addresses now the process that we propose and the process that we envision is a gradual one in particular we propose that these behaviors be recognized as standard and that implementers be asked to implement them in their operating systems these changes would then roll out gradually in ordinary software updates and i keep coming back to the proverb that says that the best time to plant a tree is 30 years ago and the second best time is now by which i mean that we will appreciate in the future having the opportunities to assess the compatibility and the usability of the large number of addresses freed up by these changes but if we don't begin the process of making these changes we won't have that choice in the future so we would like to give the internet community that option in the future making these addresses usable and then assessing how and when they can be used so again our drafts don't allocate these ranges and that would require future action and we also note that there have been various cases that the internet community has had experience with"
  },
  {
    "startTime": "00:20:02",
    "text": "where addresses that were historically unallocated that were widely unreachable have been made reachable through community efforts and the internet community has successful experience with this and so a similar process at some point may be undertaken for categories of historically reserved addresses so to conclude if we standardize and get implementers to adopt a small number of small patches we can with a delay in the future create billions of dollars of value in making ipv4 addresses available and alleviating ipv4 address scarcity we've also seen that as many of these behaviors are actually widely deployed around the world and have been for many years there's incredibly low risk to making most of these changes indeed many of you may be running systems with these changes right now and not even notice obviously the achieving interoperability may be an interesting discussion and an interesting thing for the community to study but merely having the addresses enabled as unicast is really very very low risk so we would appreciate your help in discussing these drafts and helping them to progress and we appreciate your time very much these are our email addresses we look forward to discussion here in the meeting or on the interior working group mailing list and i'll just leave up a chart that just shows bit masks for the categories of addresses that we're proposing to unreserve which many of you can certainly envision but we've just highlighted the number of addresses in each category and the bits that are affected and so on in the ipv4 address structure"
  },
  {
    "startTime": "00:22:01",
    "text": "thank you very much thank you very much [Music] are there any questions for said we can take a couple right now the presentation um i think it would be very helpful to you know add information about use cases where you know the the current non-endorsed uh mechanism um of you know people privately using these addresses aren't good enough um and that would be enabled by uh by doing this endorsement because you know um it it feels a little bit like fracking right so i mean we've we've been doing that ipv6 for for a very very long time and would be really good to see why that this investment here um from the ietf side to to to actually adore support that and get involved in and all these you know counteractive changes would be highly beneficial i'm not saying that i'm completely opposed to it i think this discussion had been had several times over the past 10 years um but i'd certainly love to see you know some some really more persuasive evidence of of use cases where you know simply you know going for ipv6 addresses wouldn't be an um equivalently good solution um so i think the fact that there is private use of some of these addresses we've seen as a good indication as i mentioned that the uh addresses can be unreserved and are in fact usable that it's a reality that's achievable"
  },
  {
    "startTime": "00:24:01",
    "text": "no i understand but why would we need to endorse it if it already works um so i think the challenge which has certainly been discussed in the past is that there are different behaviors of different systems and while many operating systems do many operating systems do adopt the behaviors that we propose others don't and in many cases the developers of those operating systems have stated when we've talked to them well we would prefer to make this change if it were recommended as an official internet standard in other words the attitude of implementers to making the changes in advance of the official internet standard varies a lot some are quite happy too and some are quite reluctant to um i think the you know the main use case is numbering hosts in unicast and we continue to see enormous demand for ipv4 addresses for numbering hosts in unicast and i see a lot of people in the chat mentioning ipv6 which is certainly a very fundamental thing right so i think i've seen about seven people in the chat mention the question of why people can't use ipv6 and i think this is this is in a way an empirical observational question right that there are lots and lots of networks that continue to want v4 addresses and one could say those networks are doing the wrong thing you know those networks are improper in some way because they ought to only be using v6"
  },
  {
    "startTime": "00:26:01",
    "text": "from what we've seen from a lot of people's use cases they say we want v4 addresses because if we say our public service is v6 only an enormous portion of the internet can't reach us and we've seen in we've seen in research on ipv6 deployment that many people don't foresee getting rid of dual stack and getting rid of coexistence as something that will happen in the foreseeable future and i say that not to discourage or criticize ipv6 adoption but to say ipv4 is still the majority of the internet and it's still something that enormous numbers of end users continue to use and continue to view as a requirement to use okay so we have three more people on the queue if you can be brief with your questions because we're running out of time please jim right you have a question um jim is probably having issues with his mic maybe we can move to ted for now yeah so let's see if this works um so uh the issue here i think is that um you've you've pretty clearly explained how to do how to solve this problem right and that's great and i think your explanation is fine um but what you haven't explained is why to solve this problem um and what i mean by that is two things one um this is an example uh you've"
  },
  {
    "startTime": "00:28:02",
    "text": "mentioned that the 240 slash whatever it is um is being used in private addressing and so um you know there's a policy question there if we were to make it easy to use the 240 plus address space um what would the allocation strategy be for that would it remain private use would it be public use we don't we don't have an answer to that um secondly uh there's the question of you know whether this is a good idea is actually independent of whether the ietf should be promoting it so so essentially you're asking the ietf to to uh kind of rubber stamp this idea of uh you know prolonging the life of ipv4 through these mechanisms and prolonging the life of ipv4 through these mechanisms might well be a good thing to do but that doesn't mean that it's consistent with the ip with with the ietf's mission so the question is uh not should you do it because clearly as you said people are doing it the question is should the itf do it and um that's what i don't think you've answered here uh you you haven't really made a case for why the ietf should do this what you've made a case for is why uh users of ipv4 in certain circumstances should do this that's not to say that you're wrong i'm just saying that if you wanted to to proceed with this you would really need to make that case i don't think that this stands alone without you making that case um thank you ted so in terms of the private versus public use and so on the 2008 proposals had one proposing public use of 240 and one proposing private use of 240. and each of those was very specific about how this should be used"
  },
  {
    "startTime": "00:30:02",
    "text": "and our position is that this is indeed a complex policy question and that since implementations don't need a different behavior depending on whether the address range is public or private we want to get started with asking the implementations to go ahead without having to resolve that policy question and we would agree that people who are using it for private address space might have an opinion about how it should be used or allocated at some point in the future and i'm certainly seeing an interesting discussion in the comments and i hope that will continue on the list but i see a lot of people engaging with the question of what is ietf's relationship toward we would say fixing and maintaining ipv4 given that ietf does have a consensus which we support that ipv6 ought to be adopted what does that mean for ietf's work on maintaining ipv4 given that there are also enormous numbers of ipv4 users who are getting enormous value from ipv4 and all analysts believe that that will be the case for a long time to come and many implementers continue to look to ietf for advice on what to do with ipv4 so i um to your observation about this might be a good thing and it might not be a good thing for iedf that may be so but if so there's no other entity that has its role an ietf stature to make recommendations that would be widely or nearly universally followed with regard to the maintenance of protocols like ipv4 and that is a reason that we think that ipv that"
  },
  {
    "startTime": "00:32:02",
    "text": "excuse me that itf's statement on this is important right we've talked to implementers we've said to implementers this is a good idea some implementers have said oh it looks neat it looks cool it looks like some people would like it but can we get an ietf standard that says that this is the right behavior so whether or not ietf yeah and this is an interesting question i see that sorry juan carlos you were perhaps saying that we're running low on time yeah very very low so so uh i think uh we get the discussion and definitely this is something that we will need to be uh we'll need to take to the list so um i would just uh if you don't mind set uh let's just uh hear uh buffs uh point and maybe one quick uh reply on ted but uh please take this discussion to the list okay thank you thank you hi should i go ahead yes go ahead well sorry yeah uh just a couple quick things i manage a couple ipv4 networks and i operationally for me it would be um very it just created a mess if i tried to do any of this because it's a mixed it's a mixture of hosts and routers from all different vendors some of which are well known some of which aren't and if i start using these addresses and anything stops working i have sort of an operational support nightmare i just don't see this would only be cost for me and i have no shortage of addresses on any of these networks because i use private v4 addresses and i you know there's no address shortage so i don't really understand who this benefits there there clearly isn't you make a claim that this generates a lot of money well i don't see there's any money here i think many of your claims are"
  },
  {
    "startTime": "00:34:02",
    "text": "using the slide using the words on the slide on the screen is is greatly exaggerated so there may be some value in looking at that class e space but in some specific environments for general use i think this has very little benefit to anyone thank you final remark that or can you take it to the list yeah just very quickly um i just wanted to reiterate that the the ietf essentially what what seth is asking for is for the ietf to uh express a policy and the reason he's asking the itdf to do this is because as he said the ietf is a very influential body in expressing policies of this type and um that's exactly why the ietf needs to decide whether the ietf wants to promote this policy it's not just simply assumed that because the itf is the place that has the most power to affect this change that the itf must therefore affect the change so that's the that's the argument that you need to make seth and i i don't hear you making that argument very much for that presentation set so we need to move on so i think it's dirk yes thanks um send requests to spare the screen if you could okay good slides are up you can see thanks an update on the internet addressing proper statement and gap analysis drafts um two slots i'm combining them into a single presentation and splitting the presentation into two parts first i give a recap and updates on the drafts itself and then feedback from the related site meeting"
  },
  {
    "startTime": "00:36:00",
    "text": "which took place yesterday after the itf sessions and i know that um quite a number of you guys attended the side meeting so on the on the problem statement just to recap we have a number of example scenarios um where the internet addressing uh you know place a potential issue a hindrance for internet service provisioning we have a number of those example categories constraint devices dynamically changing topologies traffic steering and others that you can find in the problem statement draft we then also identify the issues that that you know internet addressing may exhibit in those scenarios with respect to efficiency effectiveness the complexity and and others so i i urge people to have a look through the draft we presented this also at the at the last in the area meeting the gap analysis drafts and takes this the problem statement further and then and and tries to provide the first round of of us as a gap analysis uh it first uh investigates the properties of internet addressing the fixed address length the ambiguous address semantic and the limited ultra-semantic support as and describes those uh investigates the extensions or number of extensions that patch the addressing properties and addresses therefore the challenges we out or some of the challenges that we outlined in the problem draft the extensions themselves we position in our draft as an explicit proof for potential gaps that have been identified by the community with respect to the uh to the identified properties of internet addressing we also identified that the gaps uh uh uh that were filled by the extensions are done according to the various methodologies that we that we are uh that we are describing in the gap analysis draft we then investigate um the gaps that are left by the extensions and some of the issues that are introduced by the extension themselves again with respect"
  },
  {
    "startTime": "00:38:00",
    "text": "to complexity the efficiency extensibility but increases complexity and the fragility for scenarios where multiple extensions may coexist that's that's presented in the last section of the gap analysis draft so what are the updates we made to those two drafts there's no problem statements on version zero two um we changed the the scenario descriptions so that it focused more on the problem of internet addressing some wording changes we were introduced we also simplified the problem statement section uh to be more explicit and more clearly conclude towards the gap analysis that is done uh in the second document so they are they're they're the mainly editorial uh changes that we introduced in in in that draft in the gap analysis itself uh we updated the extensions to properties as we also mentioned in the last ietf meeting and also simplified the conclusion section to make it more straightforward and clear so again um hopefully including increasing the the understandability of the draft mainly and this is the version zero one that we uploaded the key part however that we that we worked was um to get feedback um from the community and and and uh we organized the site reading yesterday evening um yes evening our time uh but the purpose to jumpstart a wider discussion um that can be carried over to the mailing list we've seen and there was an explanation yesterday that luigi gave in the introduction but the problem of running um the ietf online that we see in in some of the discussions i a decrease in the actual engagement and the discussion that happened purely over the mailing list given that the direct social contact during the itf meetings is missing so we try to really run this almost like an as an experiment if you will to describe drafts beyond the"
  },
  {
    "startTime": "00:40:00",
    "text": "actual list to try to jumpstart the discussion um with insights from from panelists and the community at large that we invited uh to join the site meeting um so that's the the the purpose we had um the focus obviously on the drafts on the problem and the gaps and whether an architectural approach may may help which is according to the question that we asked both in the problem statement rather than the gab analysis draft we think that the the the experiment was to an ex to quite an extent um successful we had a huge amount of exchanges we had 142 messages in the chat that were counted which probably can give us you know weeks or even months of email exchange that we can generate out of this which is our intention we're still going through the messages so that we can deflect the discussion back onto the list the site meetings is not meant to be a permanent institution if you will but helps us to generate those discussions and it was a very very rich exchange but we believe can really serve the purpose here so we believe that is successful it may not scale for every zero zero draft so i'm not entirely sure that's a model you can copy for every new work you want to propose but we try to at least you know for hours and kind of we we believe it was a a you know a very good attempt a bit on the on the data um as i said it happened yesterday um at 1800 utc uh we had 64 uh maximum attendance over 61 on webex we also have a we also had a youtube live stream you can also watch the recording now we have three live stream um viewers as well so 64 in total we invited a number of panelists so we we we contacted uh dino robert michael dirk and neymar lauren um basilius unfortunately couldn't make it i removed them from the list but we had exchanges with him as well on the various aspects to bring from their perspective into the discussion um and uh after in 50 minutes in introduction we had an open discussion planned for 45 minutes we ran over 20"
  },
  {
    "startTime": "00:42:00",
    "text": "minutes we kept the discussion going because we felt it was a very good discussion and you know we didn't want to take the steam out of this discussion very early so we had more than an hour in total open discussion the material is uploaded at github we had from some of the panelists we had material that we were showing which is available but then also in our chat participant list and all of that you can get at the at the github under that link and the actual video uh as shown here on youtube if you want to watch the site meeting so what were the the the key insights that we that we found from this side meeting but we had lots of discussion and viewpoints so the topic seems to be of interest um the number you know is you know it's not bad there's about slightly more than half of the people currently in this working group meeting so that's that's a good number um and our intention there is the takeaway is to funnel that discussion in the way forward so utilize the material the discussions behind the discussion points the chat evidences the statements that we took as notes and create discussion from this or discussion threads from this on the actual mailing list that is good so it served that purpose of behalf but i said it also showed that the topic itself seems to be of interest given the rather lively discussion we had the very key point that was made very early on there was a lot of discussion around this key point that there seems to be a larger architectural discussion learning this is not maybe just about addressing so revisiting or addressing may just be the outcome of that and we will continue to drive the address in discussions with the current drafts but we will also attempt to capture these large architectural points in possible future material that was a very key observation we we made from the discussions and from the point that initially it was made by der kutcher and his material what we are looking into is where to have the discussion what other outcomes there could be so stay tuned on that we're trying to"
  },
  {
    "startTime": "00:44:00",
    "text": "make suggestions on that if you have suggestions obviously we're very happy to hear those it was also very good discussion around past concepts and in particular i found it you know um to an extent quite daring but quite interesting that even the ose model was being brought up uh as well as variable length addressing that seemed to have had concepts that made a lot of sense in preventing some of the issues that we have observed also in our drafts and that people also know generally that we see today in internet addressing and i think for us the questions really you know can be which could feed very well into the gap analysis what are these past counts that we may want to look again at can we tease them out what are their impacts what could be their impacts if we would maybe think about some of these past concepts in a in in this new context of revisiting internet addressing ultimately we believe it can enrich the gap analysis draft beyond the currently listed extensions to ip that we currently have so that's something that we took away as a key insight as well another threat quite clearly this is to not aim at the replacement of iap that's not the aim we've also believe we state that in the proper statement draft already but evolve ip in the light of existing deployment so this is not about ripping gear out throwing it away and putting new gear in um there was a quite clear sort of discussion around this uh particular in the chat as well that's uh the fourth key inside that we took away from this as i mentioned the the the chat exchange was quite um intensive um which which was good and that but that was part of the community engagement the exchanges we saw they were trying to group them a little bit and uh this morning when going through in preparation for these talks these are the slides as you can imagine they really happened after uh based on the meeting material on addresses and identifiers just putting you know two steps on here around apps having less to do with the network and having less knowledge about addresses from dino's um and and and and the idea that urls"
  },
  {
    "startTime": "00:46:03",
    "text": "help you to find services um you know and what you want is not wait where to get it so you have to redefine what where really means there was a common denominate and it was quite a number of other statements around address that identifies which was very rich on there was quite a bit of discussion on privacy we put these two against each other they were literally in the chat um connected uh about the ephemeral nature of eid's website culture's response um to to the extent that you may not actually require them um as well as robert's uh um point that while security may be concerned with not taking control of a ui ua you can't actually really hide that the u.s you know is in the sky over you so these kind of privacy aspects were discussed in the mail exchanges well um these only as two examples each security was another one um about uh the the uh you know alicia making the um the point quite clearly that one of the uh number one challenges in the internet today is is probably security rather than speed right and apart from the fact that unfortunately um packets flow to the six big boys as dino pointed out so we are connecting from the security aspect back to an extent to the privacy aspect there again more material can be found in the in the message log on the security aspect but also another thread of discussion around future use cases um particularly you know um what are the features we really would want from from the network as as dino pointed out um and the crutches um uh point on cdn's and and hyper scale is as relevant use cases but we maybe could serve better than we currently do overall um i said the chat messages are available these are just pieces we pulled out this morning after a first"
  },
  {
    "startTime": "00:48:02",
    "text": "skim from our side um it's for all to view in the github uh in in all the detail that you can have from the chat messages we will go through them more thoroughly after uh also this working group meeting to deflect more discussion not necessarily even on those fourth uh threads i i already mentioned but maybe also on others we identify onto the in the area list in relation to the addressing discussion so what's the takeaway we got from all of this well the volume was discussion was very positive um lots of chat messages very lively discussion but when happily over people didn't drop off i think um took the overrunning uh in the stride of the discussion um and and we continue to set it for about 20 minutes we found there's enough content of discussion to create follow-on threads on lists so that was one the purpose of the meeting we had we will go through the midi material to create those threads and and get them on to the list in order to continue the discussion we also identified a rich set of contributors having views on addressing and the larger issues particularly the potential architectural issues we're looking into adding contributors as co-authors so i think there are a number of people should expect emails and outreach to them to to hopefully help us with the discussion as we go forward and then reflect the community and put at large into the revised drafts after this itf so we may also look into adding statements similar to the ones i mentioned before as contribution into the vice draft in order to seed material into the actual drafts most importantly contributors are very welcome to join in this effort so please if you if if you found the discussion interesting if you look through the recording because you couldn't make it and you feel that you have something contribute please reach"
  },
  {
    "startTime": "00:50:00",
    "text": "out to us we're very happy to increase the set of contributors to this discussion in order to push this forward just to reflect on the hot rfc you may have seen the video that my colleague eo uh made on internet addressing worth thinking our takeaway from the from the side meetings yes absolutely it seems to be interested in doing that so so we we take that as a positive to move forward and if you have any questions and comments happy to do them there thank you right uh do we have any questions especially on the on the drafts or any discussion otherwise uh maybe we can take the feedback to the to the mailing list to to make it part of the interior and then move to the next presentation okay so uh next in line is how you you want to share your screen so do you have my slice i upload it um yeah you can you can present okay i can i try to share my screen"
  },
  {
    "startTime": "00:52:06",
    "text": "[Music] can you see it can you see it yes okay so uh hi i i thank you uh for uh joining this session uh i'm going to talk about the short hierarchical ip address at edge networks this work is based on a paper we published last year but we tailored this for uh the edge network and also uh interoperation uh with ipv6 so here's a key of motivation for this work um well for most of the edge networks we're talking about iot networks and we find the iot entities when they communicate they are very sensitive to overhead and energy this is because uh uh mainly they involve the short message exchange and many devices are battery powered they use wireless channel and have a very low storage and the computing power but on the other hand the ipv6 overhead is very large majorly due to the address part and uh since all all these uh iot devices uh in the in the same edge networks they pretty much share the same ipv6 prefix and also most communications uh could happen just between the adjacent and the related entities so the question we will ask is that why does this entity need to know its prefix at all so it puts the presenter mode"
  },
  {
    "startTime": "00:54:01",
    "text": "and so that's why if we observe the address they are using actually for the complete entity uh ipvc address they actually contain uh several parts the first part is a common ipv6 sub subnet prefix is shared and then below it is a we consider that's the ending id but if we can further partition the network into multiple hierarchical levels then we can see the edge network actually contain multiple sections of the address only the last part is actually uh can be considered the entity id um so this gave me the um my idea to improve the header overhead um by uh delegates the network id and the prefix management maintenance and operation to the network gateway routers uh by doing so we allow the entity and a node to only know and use its own entity id so this way we can save a lot of communication overhead um the left side shows a proposal only concerning the addressing part of the package by eliminating using the four complete ipv6 address we just use a variable lens source address and destination address to supporting that we added two actual fields the south address lens and the destination address lens to indicate the length of the address and as for the network we can see um we we have a multiple level of the network within the subnet setup network and there are several uh some special routers we call them uh level gateway routers actually um work hands uh"
  },
  {
    "startTime": "00:56:01",
    "text": "each each level boundary for the ingress and egress communication and in each level network we also have some other normal intra-level router called ilr so they do further for all the routings in the within this uh level network so here is a more tangible uh example uh in this sub network actually uh uh is a just ipv6 subnet uh uh the it which is given a a 16 19 bit uh prefix which means this some network on a 32-bit address space so within it we can directly uh allocate endnote entities so which will use a 32-bit uh network id uh the node id but we can also uh further partition this space into uh some other uh further sub networks with a shorter network id for example on the left side you can see uh we partition this network to uh into two more levels and the first level has a 16-bit uh prefix and the third level have we have further a eight bit prefix and on the right side we partition we have another uh sub level network which uses 24 bits prefix so within this network you can see uh for example uh node x and the y are both uh located in the uh by the same level two network if they want to talk to each other they can directly to use their short address which is only two bytes long"
  },
  {
    "startTime": "00:58:01",
    "text": "and maybe they only involve the inter-level routers for communication uh if uh two notes from different subnets uh want to communicate there are involved some uh address operation as a gateway router for example you can see the bottom right side as example if the node x want to uh talk to node in in another network uh since the they first compare their source and destination address with a different lens so it means they need to go actually the destination address is longer it means that the package should go up to the upper level network so it will be forward to the um gateway router b first so at this gateway router um the router will augment the source address which is the prefix stored in it which is aaa in this case and now the thousand destination address of the steam lens which means that they are in the same level of network that they will forward in this level and eventually it will reach the uh the gateway router and of another network lgre so and this uh this point the another thing will be done by the router gateway router is to prove the prefix off from the destination address because it's no longer needed so now after the address destination address pruning the packet will be will enter this network and eventually forward to its destination so you can see and any page in the network the address will be just kept as as shortage as possible"
  },
  {
    "startTime": "01:00:02",
    "text": "and for interfacing with a ipv6 internet we have basically have two modes to support that the first we maintain a special router it's just a gateway router we call it ip protocol translator because they need to translate the header between the internal format and the ipv6 format the the operation is also very similar uh to the um uh gateway router system if the packet need to enter the internet we will attach the source prefix if the um package enter in uh will go into the azure natural network will prune the destination prefix and another mode is that we support uh uh we can support a net gateway at this point um so uh we can allocate one or more public ip addresses to each edge network uh by doing this advantage is that the internal address could have arbitrary less is a doesn't necessarily to be limited to by the um allocated address space so the benefit of scheme that is first is a totally interoperable with a current internet and it have a significant header overhead saving uh from 60 to up to 70 percent we can further uh based on this we can have some further competition compression on other ipv6 header fields by doing that we can save even even more and this uh actually uh simplified both control plane and the data plane because we enforce a strict hierarchical network architecture at the edge so we can have a better address"
  },
  {
    "startTime": "01:02:00",
    "text": "aggregation and a simpler router design house smaller folding table so we have down the p4 based prototype and evaluate and it show the it's a it's a very promising and another key benefit is incrementally deployable because it's a totally uh transparent to the external internet and they uh you can basically implement this in each uh edge network individually it can still work within to communicate with any entities in the internet another key issues we want to compare this with some other header compression schemes um proposed by six pen and lp1 working groups the first is ship ship we call this our scheme ship is a hierarchical and extending from edge to core also we the scheme is applicable to all kinds of networks but the other proposals may be limited to some specific uh network environment and also shape is applicable to arbitrary network topology unlike the other header compression schemes may only applicable on the point-to-point channel only and also um they need um they need to compress the package decompress package before routing the package because otherwise they won't recognize what it is and also our scheme only considers ip addresses so therefore it's orthogonal to the other compression scheme if you only really want to use those schemes you can still apply them but it's just with some new benefits introduced by the shorter addresses and also uh ship is um"
  },
  {
    "startTime": "01:04:02",
    "text": "that is a you know stateless uh in a sense it doesn't need to maintain any dynamic or static context uh between between the uh the pair uh the peers uh for communication um therefore uh we don't need to do the also don't need to do the compression decreasing and don't need to store the context so which save actually saves the storage and the computing capability of the system um also we allow the communication between any internet addressable nodes which means within networks those can directly contact to talk to each other it's not need to that doesn't need to go to some central point as a proxy so this pretty much is what i have today and uh we uh uh welcome collaboration the any uh future work suggestions also we want to get suggestions uh to find the best working group to adopt this work thank you very much any questions thank you very much uh stuart uh yes uh what you described sounds an awful lot like six slope and header compression or other forms of powder compression which are already in use in millions of products worldwide um you had a slide i don't know what number because you didn't have numbers on the slides but one of the unnumbered slides talked about comparisons between ship and six lopan that was what the title said but it didn't actually have the comparisons it was just a list of claims"
  },
  {
    "startTime": "01:06:00",
    "text": "about ship so i think if you want to make a compelling case for this you need to make that comparison chart that show how this new idea compares with the thing that is already widely deployed and successful yes thank you for the suggestion uh yeah in the next revision i plan to add this comparation yeah thank you [Music] okay thanks uh dave put this into the chat but in terms of uh your last bullet i think was something like find the best place to adopt the work or some phrasing like that and i just wanted to say that i think the best place for this discussion is in the six slow working group right which does more than just the header compression scheme that you're talking about right they do over any particular link type and so there's multiple different link types there not just 802.15 that was on your slide and so i think that's probably where it's their right expertise is because that's the group that reviews you know compression e-lighting fears fields and various formats and short addresses and all that kind of stuff is in scope for that so my recommendation is that this proposal just gets dispatched over the six slow working group to evaluate all right okay okay this is um i was the author looked at uh thread because i think they do something fairly similar in terms of the way they do routing um and it would be worthwhile to make sure that there isn't some you know reinvention of the wheel going on here of course threat is not an itf protocol so there's that whole issue but um but at the very least i think it'd be worth investigating whether there is overlap there"
  },
  {
    "startTime": "01:08:05",
    "text": "[Music] all right uh stuart do you have a question or was that from the previous okay all right thank you very much everyone so we can move to delhi hello can you hear me we can hear you you can try again to share your thing i'm trying to ask you to share slides okay we're approving you just give it a couple of seconds oh i cannot choose to see here just wait wait a second see you can request to share your screen and then just give it a couple of seconds okay i can share my screen yes just wait a second yep can you see my screen okay"
  },
  {
    "startTime": "01:10:00",
    "text": "hello everyone i'm lanchantin from qinghua university i'm going to present our draft source address validation use cases and gap analysis the traditional internet architecture lacks the validation of a package source address a sender can search the source address when sending packets which is also known as source address spoofing with source address spoofing attackers can carry various attacks such as reflective details so source address validation save is necessary mutually agreed not for rotting security manners is calling a network operators to implement save however it's difficult to solve the source address spoofing problem at a single level or through a single save mechanism first it's unrealistic to require a sim c to be accepted by all networks second the feeling of a single save mechanism will completely disable save therefore source address validation architecture server divides save into three checking levels and miners also follows this architecture they are access network save intro asc and intel asc there are many saving mechanisms for different checking levels for the access network sieve savvy was proposed to force each host to use legitimate source address although it provides a host level variation is fully effective only when deployed by all access networks"
  },
  {
    "startTime": "01:12:01",
    "text": "it's difficult to require all net access networks to deploy sally simultaneously so intro asc and inter esc are more encouraged by manners the left figure shows the use cases of intro es and into esc the four aces belong to the same customer code and as1 is the stack es the topology of s2 is presented while other it says inner structures hidden from priority p1 is the source address prefix of router 3. p1 apostrophe is the spoofed p1 by router 2 p1 double apostrophe is the spoofed p1 by routers in af3 intro asc was source address source address spoofing from inneres router 1 and router 4 should drop the package with p1 apostrophe from router 2 while except the packet is p1 from router 3. for inter escape it aims to avoid spoofing from external aces as1 and as4 should drop the package with p1 double apostrophe from es3 while accept the package with p1 from es2 as iso8704 summarizes the recommendations concerning save mechanisms for intra-essay ac air based receive and strict urpf are recommended"
  },
  {
    "startTime": "01:14:00",
    "text": "acr based receive configures matching rules to specify which source prefixes are acceptable but it requires manual configurations to update strict uipf takes the source address as a destination address to look up the field and requires the forwarding interface of the fib matches the incoming interface of the packet for intel es sale efp urps is recommended to be deployed at customer interfaces it maintains a rpf list at each customer interface while loose urpf is recommended to be deployed at provider and peer interfaces it only requires the source address appears in the field however existing intro and inter es save mechanisms have inherent false positive or false negative problems strict urpf xcbs force positive in the case of router asymmetry the left figure shows an example the access network owns a prefix due to traffic policy it splits the prefix into two sub prefixes it advertises one sub prefix to router one and the answer to router 2 when router 3 forwards package to 10.1.0.0.16 [Music] the forwarding path is router 3 router 4 router 2 and access network the reverse path is access network"
  },
  {
    "startTime": "01:16:01",
    "text": "router 1 and router 3. in this case when router 3 runs straight to uipf the same rule is packaged with source addresses of 10.1.0.0.16 must arrive from router 4 therefore the reverse data flow will be dropped in general existing intra-esc mechanism has false positive problems for intel asc mechanisms esp urpf and loose uips have inherent force negative problems we take es4 as an example is is provider and as3 is is peer as1 and s2 are its customers when as4 runs efp uips at customer interfaces the sale rule is packaged with source addresses belonging to as4's customer coin can arrive from every customer so it says in as4 customer coin convert each other when as4 runs moves uips at provider and peer interfaces the received rule is packaged with any source addresses existing in fib can arrive from every provider or peer so it says outside es4's customer coin can force any source address in save in general existing intel es sale mechanisms have forced negative problems an ideal save mechanism should guarantee accuracy"
  },
  {
    "startTime": "01:18:00",
    "text": "because false positives cause traffic disruption while false negatives give attackers the freedom to force source addresses however as a function existing save mechanisms cannot guarantee accuracy intra-assay mechanisms have false positive problems and interact mechanisms have forced negative problems the root cause of their inaccuracy is that they are achieve c based on local fib or rib information which may not match the real data forwarding path from other sources in order to avoid false positives and reduce false negatives as much as possible save should follow the real data forwarding path to this end a path probably method can be taken that is the source router since probing packets carrying source information then each each intermediate router can generate saved rules based on source information and incoming interface more specifically when interfaces cannot learn complete forwarding information a combination of a log list and block list can improve the accuracy besides designing a practical probing method needs to consider many practical issues such as high scalability the design should not induce much much overhead and high deplorability the design should generate save table automatically and support incremental deployment and higher security"
  },
  {
    "startTime": "01:20:00",
    "text": "the design should guarantee the integrity of each problem package so we have to promote our work we have three candle desks one is in the area since sarwa and savvy are adopted by inter area or rtg because intro esp and the intel esl are related to routine or opseg since efp urps is adopted by opseg or others we sincerely solicit comments to refine the draft and seek collaborators thanks any questions or comments uh eric working group uh is the best one i think for this opsec personal security is mostly the best one um i know that jen is in the the participants of this meeting so jen as you are the co-chair of opsec is not mistaken you may want to say a few words on this now jen we cannot hear you upset is not meeting this but yeah please drop the chair said email yeah"
  },
  {
    "startTime": "01:22:00",
    "text": "and we can put you on agenda for the next meeting great thank you very much so if there are no more questions then we can move to 30s you can either share your screen or use the slides okay hi yeah um oh no wait a second that's the wrong slides oops um i don't see my slides uploaded okay do you want to share your screen i think we uploaded it you sent us just before the meeting all right i hope the slides are showing up we can see all right so um a mouthful of a title um so i wanted to present this um i wrote this draft on behalf of a design from a team of colleagues"
  },
  {
    "startTime": "01:24:00",
    "text": "because it is um you know a really great um evolution of um brte in my opinion um why going to end area well so i think um what i wanted like to explain here is is what i think is a great example of a story on um more intelligent variable length addressing helps to solve you know problems that we're currently working on in a better fashion um and uh yeah so i i i hope it area is not for unicast only obviously the target group for this would be beer but i wanted to you know show it from the addressing perspective so um what's wrong with brte that's a great question to ask when you have a draft in isg review but it is you know in my opinion the best multicast forwarding solution for the constraints it was defined against and that is um that we wanted to add path steering to the beer multicast solution which is stateless and we wanted to keep pretty much everything in the forwarding plane that we defined with beer with brte and so try to make only the minimum necessary changes in the forwarding plane to enable the uh the traffic steering um and so in that respect it's a little bit similar from um how you know we did uh traffic engineering um in mpls after we had the non traffic engineering forwarding solution but this comes at you know quite a good amount of undesirable limitation complexities which you know i saw especially working through the brte draft and that is that by representing um the forwarding through a flat fixed size bit string of you know pre-configurable length you're getting yourself into a lot of limitations and the the number of bits is is also split"
  },
  {
    "startTime": "01:26:01",
    "text": "between the receiver notes and the topology notes so to speak so without going into a lot of details of something um about brt that many people here may not know because they haven't looked at it um what what we've pretty much done is we have you know started with you know a fixed forwarding plane design and ended up with a lot of additional controller operational um complexity less traffic efficiency but yeah we we got the forwarding plane simplicity of what we've started uh with beer so now let's see what we can do better if we you know think that we can build a more flexible um forwarding plane functionality the and and the and the goal and that's kind of the the first part of the name is to really come up ultimately with a solution that supports multicast in for example service provider or industrial large-scale networks in a more simple fashion than current ip multicast with all the good traffic engineering what we want um the traffic steering and then of course there is correlated um you know qs and other things so it's a controller-based design um and uh this is just you know i'm going to skip for the details so here is basically the addressing structure that we're calling recursive bit string structure and what it really is is a representation of the desired delivery tree where for every node you have a bit string of pretty much um the the bit string itself is just the sequence of adjacencies meaning neighbors that that particular router has one bit for each and the bit string in the packet has the bits set to the neighbors where packets need to be sent to and then for each of the bits that are going to an adjacent router there is another recursive unit that is"
  },
  {
    "startTime": "01:28:02",
    "text": "starting with a bit string and then again of course with the recursive units to that you know neighbors neighbors again and so the fields that we need for that obviously some starting fields that tell the total length of the address structure and then the length of all the recursive units after the bit string and of course each recursive unit itself has again the same structural elements so here is without trying to walk through it in full and glory detail the uh example that is also in the draft um and that shows how you're starting out with a packet originated by client one which has such a recursive bit string address and when you then see what happens on router r um then you'll see that uh when it's uh being uh sorry on on router b when it's forwarded to router r you already see that uh you're forwarding only the extracted part of the recursive bit string address which is the recursive bit string address for b and b of course does the same thing sorry to r and r does the same thing forwarding to s and e so the further the packet progresses through the delivery tree the smaller the address becomes so what what type of simplification performance enhancement do we get through all of this right so first of all we forego the uh whole forwarding aspect that we needed to do loop prevention because by you know the address becoming shorter and shorter um we're having an equivalent of clearing bits to avoid those loops um there is and that's i think one of the biggest uh problems uh that we have in bte but also in in to a lesser extent in beer there is no need to split up the whole topology into uh subsets of the topology to um fit all the adjacencies and end"
  },
  {
    "startTime": "01:30:00",
    "text": "nodes into a fixed size a bit string of of n bits where you know the whole topology would maybe need uh 20 times n right um and that also means for brte then that the need to optimize minimize the number of bits for the topology to represent it goes away so there are a lot of things like you know lan bits and point to point bits so those are all operational semantics that an operator or a controller could invent to uh to optimize this and this all has to be documented it is documented in brt and so especially for sparse distribution right for trees with a limited number of receivers this is very easy you can always create just a single packet to deliver to any you know subset of receivers which is never possible in you know a large-scale bureau brte network and yeah so even when you do need to send multiple packets because the total size of the address would become too large it's very easy for a controller to do that with a very simple algorithm whereas optimizing upfront for these cases um in beer and brte is much more difficult so obviously i'm not going to walk through the pseudocode maybe i have more time in in the beer working group but uh same type of representation that we have done as a type of you know informal you know normative description of how the forwarding would work but the the forwarding playing complexity here and that's obviously now the interesting part to compare for all the benefits that we get the basic bit string replication is exactly the same as brte with just you know a much simpler subset of different"
  },
  {
    "startTime": "01:32:00",
    "text": "type of adjacency required so the main edit work is really that for each of the replicating adjacencies uh you know you need to have the calculations to find the offset and the length of the recursive unit in the address extract that and make that become the new address so this is also a naturally variable length address right so beer packet format does support you know different lengths but they all have to be pre-configured and operator wise decided upon whereas here in this case you would naturally use just as many bits as you need for a distribution tree and would only need to configure maybe a network-wide maximum that you want to be able to support so of course what needs to be done more is a stochastical analysis and comparison of the efficiencies the number of copies header size and so uh with this solution compared to beer and brte there's obviously wide space to explore based on the interesting use cases the draft like the original beer and bt architecture doesn't discuss packet encoding could equally use the existing packet encoding which obviously would be a waste because it's a fixed length then that needs to be indicated but otherwise it would be perfectly fine it would just be another forwarding mode for of which we would today already have two namely beer and beer tea right and that's it thank you do we have any questions dave you have a question understanding i think i followed your"
  },
  {
    "startTime": "01:34:01",
    "text": "present just to check uh please confirm um that your primary use case is where uh the addresses that you're talking about would be constructed by a router and used to encapsulate multicast addresses over the top because the question i was gonna ask is how do you learn what address you should send to and i'm guessing that's because you're using routing protocols to have all the knowledge necessary to construct that did i follow it right or am i out yeah so the current initial use case of beer is that you put it on the pe routers as a start ingress and egress pe and you do a mapping between the ip multicast overlay and beer and that obviously is a great way for service providers to optimize their network but it eliminates for the application one of the cool core benefits of all the beer solutions which is that an application center can by itself determine which receivers each individual packet goes to as opposed to having to deal with the bloody multicast groups and setting them up so that's why it's simplification would be to extend beer all the way to uh the hosts which isn't architecturally problem but which is a problem of is that something you today can scale and with this solution i think it's it's a lot easier to scale this for applications than it is with the existing vrt thanks uh are there any other questions okay thank you so then we moved to xinjiang can hear me and this can see my screen we can hear you [Music] we can still not see yours"
  },
  {
    "startTime": "01:36:06",
    "text": "did my screen start not yet [Music] sorry my fault here we are i believe can you say it no we can see them can you see okay so here we are this what we call the native minimal protocol is a new proposal for the flag edge network the purpose is to extend the ip wider into many non-ip networks which is widely deployed at this moment such as zigbee bluetooth campus modbus and etc uh there are many networks for nowadays because ip is heavy for energy sensitive devices in this network for they actually need the application layer gateways uh to transfer their connectivity into the ip then connect to the other servers in the ip networks and also they cannot communication between the different non-ip technologies even they are in the same 80 network"
  },
  {
    "startTime": "01:38:03",
    "text": "and there are three main issues for this um it's not supports the end-to-end security ip layer security also the tos and those non-ip terminals are invisible to the to the pip networks and the servers cannot see them either the servers only see the delegate from the gateway and the dynamic drawing and leaving for those devices to net ip network is complicated of course people we would like to burn this sensors devices into ip the answer would obviously be ipv6 consideration first but actually it's not suitable it's cased by the address and header um sorry we are sticking your slide number one i don't know if you are moving i i'm moving to the number two uh so now you'll see the second slice correction okay so uh let me continue i'm at the bottom of this page um the ipv6 is not suitable because the actually this non-addresses and the header for the bytes in total not including the options exchanging headers that consume more energies and times both on terminals and network transmission six nodes and six notepad actually has"
  },
  {
    "startTime": "01:40:00",
    "text": "done great job to compress the header including the address to save the energy for the network transmission but actually it puts the terminals burden even heavier so now we actually has more problem for the resource constraints and devices they are short of both energy and memory so this proposal is for them i move to the third slide can say that okay i continue so um what's the this new proposal native minimum protocol it's a simplest protocol with relatively short short addresses that we particularly designed for the edge network with those resource constrained devices the address lines are many six bits or 8 bits or 6 bits it's extensible but for most of works 1 bytes or 2 bytes that's enough and we have the minimize header with those short addresses and we design very simple second similar messages this pro and protocol supports communication between terminal and gateway also between terminals with the same 80 networks through the gateway transfer the functionalities we have including the header design for both packed data packet as the control message and we also have very simple address allocation and management mechanisms we also provide the dns dedication services once these terminals need to"
  },
  {
    "startTime": "01:42:00",
    "text": "communicate with the ip network it's transferred is fascinated by the network by the gateway gateways actually translates the package into the native ipv4 and ipv6 packet but that's purely layer 3 translation and that's different from the non-ip2 ip the information within the package can be matched this is the data packet header it is designed with the bitmap mechanism we for now we have the most frequently used six fields include encoded in one byte bitmap modules can be supported by extent in a bitmap for now we have only destination source next header payload lens checksum dns indicator um this is an example uh it's typically the header has only five bytes and it can be even shorter to four bytes without the source address because the gateway already know who sends this um this package to it and this is the um address management functions design all nodes in the same network use the same addresses 8 bytes 18 16 bytes is configured on the gateway and and we have the uh address um allocation through the address request and address assignment message um we have the lease reversal challenge at this reversal response message to match the address lifetime this is a design for the control message body"
  },
  {
    "startTime": "01:44:00",
    "text": "format very simple straightforward this is a for now the only service we provide because the most of the staminas may request the dns uh how to do it in the minimal protocol the amp terminals send a dns request package to the gateway when the gateway receives the packet it directly translates the network may your information the dns request and send a regular dns package request package to the dns saver which configured earlier on the gateway then gets the dns return information bike the returned dns message is encoded in the return data package towards the source terminal so dns lookup can be completed um some consideration for security we actually have shorter checksum from 16 bits cut into 8 bits it costs nest bits and computation we do have a little bit loose here it increase the possibility that this hexamines get error during the transmission but nowadays the transmission is more trustable and this purposeful lead and constru consideration we need the user type new user type and we need the registration for the mp control message type and the bitmap table"
  },
  {
    "startTime": "01:46:00",
    "text": "okay that's it this is the first time we uh show this and we think that's very useful so i would like to hear uh response how to improve whether this is useful uh even way whether we need to make it even simpler which we think that's almost impossible this is the simplest one we're out of time so so we will have one question dave do you want to make a comment quick sure i'll just make the same comment that i made on a previous presentation in here which is i think this one is best uh reviewed in the sixth low working group um for example i think the claim that um is on slide two or so that six low requires terminals burdens to get even heavier is something that i think that they should uh address whether they whether that's correct or not i i don't know but if it is correct that something the six little working group should take his feedback but either way i think the types of things that you're evaluating here especially since there's a gateway that does translations translate build those look slow so that's where i would uh review this work and encourage you to go and present this there and i think it'd be a great discussion so thank you all right yes thank you very much yeah great thank you shane um so we are going to move to roger okay let me share my screen um yes let's grant it and we can see it though okay"
  },
  {
    "startTime": "01:48:00",
    "text": "okay thanks uh juan carlos so my name is roger marks and i want to talk about an ieee 802 project standardization project called 802.01cq on address assignment this has been discussed in the ietf 802 coordination activity and recently i was asked to bring this presentation to update interior so this is a project that's been around for a few years but it's gotten a slow start and now it's starting to move more quickly with some drafts it's about multicast and local address assignment of ie802 addresses or what you might call mac addresses it's done in the 802.1 working group in the tsn time sensitive networking task group the project charter for this activity specifies that it's um on local addresses and it should support both peer-to-peer address claiming and address server capabilities and the intention is to consider the fact that global addresses uh could eventually be exhausted in the 802 space and there should be a way to promote the use of the local address space and provide locally unique addresses an additional burden that's placed on this project is to deal with the multicast addresses and the um uh there it's a little it's a little different than what people always expect because and many people are familiar familiar with the idea that a multicast address is assigned to a protocol but in in this project the multicast addresses need to be assigned to end stations this is driven partly by the idea that in some tsn networks streams are addressed to multicast addresses and those are assigned by the sender or the talker and so each stream and its set of addresses is uses a different uh and its"
  },
  {
    "startTime": "01:50:00",
    "text": "destinations is just decided by the uh the sender and it needs a pool of multicast addresses that it can use for that purpose um currently there's an ieee standard a to 1722 that provides a peer-to-peer way for devices to get these multi-cast addresses but this would provide new capability 80201cq would give new capability in addition to providing the local addresses so it's important to understand that half of the 802 addresses are global and those are by by a rule required to be unique among all devices and the intention is to have that uniqueness go over a period of 100 years and um we're well into the hundred years and there's still addresses left but um but we were worried about them being exhausted and uh these are generally burned in by the factory and so these are flight addresses they they're only real purposes and and and uh the only content in the address is its uniqueness along with an indication of whether it's global or local and whether it's unicast or multicast but half of the 802 addresses are local and it's possible to assign those dynamically and there are many many addresses here because the size of the global space and local space are equal so you can assign these addresses very liberally but also because you're doing them dynamically you can assign them thoughtfully to have addressing power where there's content in the address rather than just uniqueness in the address so what happens in 80201c2 is called the block address registration and claiming protocol barc and bark assigns mac addresses and blocks where a block an address block is a set of local addresses that's equally unicast and multicast each contiguous sub box and these are all distinct disjoint"
  },
  {
    "startTime": "01:52:00",
    "text": "address blocks and um there are two types there can be registerable address blocks that are handed out by a registrar which is a kind of a server uh that holds blocks uh inventories of address blocks and then there's also claimable addresses or cas that are in claimable address blocks or cabs that are each identified by acaba which is a claimable address and the kaaba is a mac address that's a multicast address that's used as an identifier and there's a number of temporary unicast addresses that are used for initial discovery by a claimant that doesn't have a burned-in unicast address say from the factory so uh this figure tries to show a little sketch of these addresses so this is showing uh 12 nibbles that's part of an 802 48-bit mac address and up in the header you can see there's this bit m which is the well-known multicast a bit uh one or zero depend on whether it's unicast or multicast and then the the purple the second bit here in n1 is the indicator of a local address and so in barc you always have uh you use a one one one for these three bits and the m is unicast or multicast but we also structure and bark that the first part of the first the first nibble and i want to call your attention to these two green bits j and k because those are the ones that tell you the size of the uh the address block and so it tells you how many addresses that you get in your address block so you get 16 uh the block has 16 to the jk claimable addresses or 16 to the jk register roll addresses depending upon which one you use so here's an example of what the claimable address blocks look like and"
  },
  {
    "startTime": "01:54:01",
    "text": "it shows three sizes 0 1 2 and 3 and the size zero block is um it has this header at the top and the first three nibbles and then it leaves you nine more nibbles to assign an address and because there's an asterisk here that means that you can have a local if you have a unicast address and a multicast so your block is one unit cast and one multicast address but if you go to the larger sizes you can have for example um three three nibbles worth of address space and so now you're giving an address block that has um 4096 unicast addresses equal number of multicast addresses in this cab that's the address block and then this caba is the identifier of the address block and its multicast address itself and so the way you do claiming is here's an example where you have uh five devices that each hold a caba address block one two three four five and here's a new one that wants to claim an address so a block so it picks cabba one and it sends a multicast message addressed to the multitest address cable one well it turns out that because um it's a multicast address the only device that's listening for that address is the one that holds the same claim and so these four of these devices don't even listen to the message but the one that holds exactly that same block that's being claimed here's the message and it responds with a unicast message to the to the claimant saying no you can't have that address i've already got you can't have that block i've already got it so it tries again with a different address six this time nobody responds because nobody hears that message and then it decides to claim kaaba six this can also uh you know the the registration process is such the claimant doesn't have to be worthy aware that there's a registrar"
  },
  {
    "startTime": "01:56:00",
    "text": "available when it begins the claim it sends this thing play a message but if there's a registrar it can respond and provide an address so in this case the claimant sends a discover message and let's say there are two registrars out there that each respond with an offer to the claimant by unicast and then the claimant picks the one that it likes and sends a unicast message to that registrar and it reserves that address one of the things that you can do with this kind of structure it's because it's it's in blocks um you can do a kind of a hierarchical structure and there's some techniques that are that are available within the standard this this structure is an is my example it's not standardized but it's to show that you can um you can have a kind of a semantic structure so an address can have a field that tells you how the address is formatted and then within it you can have a code of the code the address to say okay here's here's the access switch that it's in and then maybe here's the server that it's attached to and then here's a virtual machine that's on the server and the you can have routing methods that are that take advantage of that hierarchy so um what you end up with is a general address assignment method that can eliminate the need for global addresses and reduce the consumption it still maintains uniqueness within the land it's completely backward compatible with the existing 802 addressing and bridging because it's just a for a device that just sees it as a flat address it works the same as a global address it could be used to address privacy concerns because the addresses are dynamically assigned and they don't they don't continue and you can use some semantic structuring including uh you know because a device you can grant a device a whole block of addresses it can use the the free fields to do things like"
  },
  {
    "startTime": "01:58:02",
    "text": "flow identification or identify streams within the core address block that it's been given you could scale this up and you can use it in hyperscale class networks and it's an alternative to completely random assignment like for example in the wireless case you have a dynamic assignment possibility that can give you address privacy and meanwhile we're protecting in the protocol against address duplication and you can code the address blocks there's also it's also possible to use this to consider how you do 48-bit bridge lands to carry 64-bit addresses what needs to be explored is the implications on ip and you could think about arp and how arp applies in this case and the intention is for the next draft of this standard to be circulated to the int area and hopefully that will happen and maybe within the next couple of months a month or two there'll be a new directly great thank you very much roger so we're very much at the end but we can still take a couple of questions if you have for for roger eric but more about uh thank you for coming i'm quite happy to see that ieee uh engineers are coming to present their work and in terraria it's very useful to get this collaboration between ietf and ieee so thank you for coming thanks eric uh tourist yeah i mean uh this this is interesting thank you um um we we obviously have a lot of experience with things like that from multicast at layer 3 as well so i think one of the the big issues"
  },
  {
    "startTime": "02:00:00",
    "text": "of this is how you know you ensure that the applications are going to deal with the unexpected uh loss of an assigned block if you had a network partitioning and then you know partitions merge you have duplicate allocation of the same block which you would need to trigger up to the applications so you know you need a decision mechanism who of the two allocators loses the block and so um yeah i i very much appreciate these fully distributed algorithms but uh be sure that you really walk through all the problems well we do have a lot of that covered in the draft and hopefully when we circulate the draft you'll have a chance to take a look at that yeah but again i think the problem is uh you know the understanding of the implications going up to the application level right so the i think that's that's what you always need to worry will you will you be able to have the enforcement the verification the validation tools that applications really behave benignly under under this circumstance because something that is rare is is for especially if you go into industrial or any other type of you know highly resilient application environments you need to think about you know test suites or other mechanisms all right so thank you very much uh roger so then uh i guess we expect to to see some some feedback from from the ieee and and get the draft circulated in the interior roger sorry what's the question no i'm just saying that then then we will see that the draft been circulated and yeah hopefully within a month or two we'll have it and we're already preparing a draft uh statement to provide to pass it over"
  },
  {
    "startTime": "02:02:00",
    "text": "perfect thank you very much so for those interested i guess we will see a a link on the on the mailing list about this so we're at the end and thanks everyone for attending linkedin uh i hope you have a good uh end of day and follow-up uh meeting so good flight uh take care bye-bye everyone you"
  }
]
