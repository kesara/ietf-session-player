[
  {
    "startTime": "00:00:44",
    "text": "Alright. Let's go ahead and get started. This is the Ace Working Group meeting at IETF 119. So that means if you're interested in authentication and authorization for constrained environments. You are in the right place. This is the IETF Notewell, which hopefully you've seen by now. By being here and participating, you agree to a banking abide by these procedures. So please make sure you're aware with all aware of all And as a special note, It's very important to pay attention to the IETF code of conduct. All participants need to treat each other with respect. It's, of course, okay to disagree with each other about the ideas. But please be very careful to treat each other well. It, has very, big impact on how well the group functions. So it's something that I paid close attention to. And lastly, we have a full agenda where you have the quick, introduction from the chairs. Then, I don't think we will have any changes to the agenda. But if anybody"
  },
  {
    "startTime": "00:02:00",
    "text": "would like to make some comments on the agenda Marco. Yeah. From my point of view, it's just fine to swap the last few items I mean, pops up profiles quite short and really if time allows. Okay. Yeah. That works for me. Alright. So we will swap 78, and we will do EDH OC OS core profile before Ace Pubsub. And that's it for the agenda. So first is OScoregmadmin. I have should have these slides right here, so I can go ahead and put them up. Alright. Marco, are you presenting this one? Yes. Okay. This is an update on the Oscar Jim Mathew. Next slide, please. Yeah. And as a quick recap, this document has been a long, for a while on defining, a second, administrative interface, on the group manager, for a group of score. So allowing an administrator client to physically create debate configure, reconfigure, Oscar groups, that the can support would be, joined by actual group members. So, of course, we are using ace to enforce access control in the interest. So Again, administrators, in this case, and the, the group manager is the resource server. Like, for the other interface document, and as to to to the secure communication between the administrators and the group manager it's really up to, whatever transport, profile of AC want to use. Let's try. Please Hold on, Marco, before you proceed. One second. We, forgot to assign a notetaker. So, getting some volunteers. Yes. Can someone please volunteer in Peru?"
  },
  {
    "startTime": "00:04:01",
    "text": "Thank you, Pearl. And I'll help out one when on presenting. Of course. Thank you, Marco. Go ahead. Sorry about that. Next slide, please. Yeah. And this has table for a while, the group manager has, a single group collection resource that can be, accessed in order to retrieve a list of existing, groups or group configurations or to create any one and then it has a number of child resources, 1 per group. And and each including the current configuration, for that group. The configuration can be a retrieve entirely, partly by filtering, or it can be, entirely overwritten or partially updated or deleted, they're violating the group. Next slide page. Okay. After the, Prague meeting last year, version 10, went in working group plus goal for a couple of weeks. Got completed. We got very very good comments, on the list, from Sigdom and plus, many additional comments from, Carson of List, submit full request. Thank you very much, Olivia. Very good comments and very helpful. Before this cutoff, we submitted an update version 11 that we believe is fully addressing the reviews from, sit down and and the editorial comments plus, some more, from Karsten. But more is left, to be addressed, mostly due to, lack of time. And we also took the opportunity to do, some further little updates that I'll, recap later that we already had the queue for the document. Next slide, please. So URLs had basically, one comment, following Sigm review, it was practically a editorial and"
  },
  {
    "startTime": "00:06:04",
    "text": "pretty simple to address, seek them had few comments instead, ranging from, well, the re naming of a parameter that made a lot of sense. Clarifications and and the tutorial improvements, on no limitations that we are introducing on on the issue, of access tokens and she requested an example that we, added completely showing how, a scope can be can be modeled in terms of, array of scope entries of different kinds. So the example shows how you can include the same scope, scope enters with different level of complexity of grip name button. And then she also requested that we are an additional example of one particular operation, a fetch request to the group collection resource where, That's what she wanted to see. The group name parameter used to filter, expected results of the request, specifically uses, a complex button. So that was never forbidden altogether, but course, we we overlook the details that are now supposed to be, provided And all in this particular, request payload, is it possible to have, that parameter, not only as a simple text string but also as any single data item tagged to indicate some complex semantics which is also now consistently updated Next slide, please. Right. I mentioned a few other things that we had to indicate that we did, it was also for, alignment with keygroupcom, document, that got approved for publication a few months ago, on using some particular parameters some particular messages, a number clarifications, we noted that, one may, unintentionally, make a group"
  },
  {
    "startTime": "00:08:02",
    "text": "inactive, when entirely overwriting is configuration. So you most likely don't want to do that, but still, that's the effect you may get if you are distracted and and you rely too much on some, default value for some of the parameters. Some long story short unless you want to inactivate your group, but you won't still do over radical together, Be sure to include the parameter active with value through in that request. We also, stressed very explicitly that there's only one way. To create a new group and a group configuration. So just in case you send a put or patch, I patch request to a group configuration reasons that doesn't exist yet. Well, an error responses return. No group is created as, in this way is an alternative way. Yeah, more fold on on what happening in kingdom come in terms of, integer numbers to be to be registered for some parameters, and like we did in that document, and it's good practice to start adopting in general not just a matter of alignment here. We made a change to not use anymore the custom, format for sensors that we were using, but instead, problem details, 90 to 90. And again, here it was a matter of strict alignment with HydroCom, but in general, it's a switch that we have started to do. Also somewhere else. Okay. Next slide, please. And then as I said, we we started to address custom comments. Well, we merged, a needs pool request made, some more, editorial fixes, I think covering all the strictly editorial comments, we also introduce the possible use of better CBORTAG for indicating, regular expressions for the complex pattern we stopped using, quotation marks to indicate a super simple value falls to an oath to avoid confusion with, possible text strings. Next slide, please."
  },
  {
    "startTime": "00:10:03",
    "text": "Right. This is a a selective a a list of, points from Karsten that we still have to address, in the next version, The first point, is relatively easy, but still, quite important. And it's about examples that should stop using placeholders that can be confusing, but still were used, as a de facto way to indicate, to be registered abbreviations, as text things while they're intended to be integers instead. Now we have, a new document from Karsten, in the in the civil working group that can be taken a starting point to make the examples, not ambiguous. And and this document is a good starting point to try out, that approach. She also noted the number, of other things about, to be avoided if multiple administrations are responsible. For the same group and and group configuration, and then the expected atomicity of different, possibly concurrent operation on the different, your configuration on their creation, possible, deletion and so on. He noticed, I think he's right that one particular request that we define for, overwriting at once a group configuration is not really following the semantics of the of the metal that it has now put, it's actually a post that that's what it should be. So we plan to make that change. On the topic of using the better super tag number to indicate a complex semantics for group pattern yeah, he suggested on on a comment, in a related comment on the GitHub to just abandoned altogether, the old tag number that we were using unless we want to introduce even more complicated definitions that are not really worth introducing. So we plan to remove possible use of that thirty"
  },
  {
    "startTime": "00:12:01",
    "text": "5 and stick to, 21065 instead. Yeah, I suggest to, eliminate any possible source of confusion with the intermixed use of parameters and properties for the element of configuration, I think we we have really many parameters all along. In a sense, literally, you'd like to to take in, early definition, approach, especially with the concept of have information in order to avoid repeating things, over and over for almost all the handlers, and even introduce some definitions that at least I was taken for granted, but it doesn't hurt to to say up front, especially scope and secure communication, association Next slide, please. So I think that the plan is very clear. At this point, what's left is addressing Carsten's point, for the next version that we plan to submitted I I really hope, way before the cutoff for 120. And if nothing is left, I believe that version be eligible for the Shepard Redeppant and the farther next steps to the ISG. Thank you. Yep. Any questions? I I I agree, Marco. We'll, we'll get the last call finished up in the comments and we'll get it sent up to I use SD as soon as it's ready, and that'll probably be it might even, be in our by the well, man, that'd be a little bit fast, but, maybe we'll even have a chance of making it out the next meeting. Yeah. Listen. Comments and questions? Nobody in the line. So in that case, we'll move on to the next document document which it looks like is workflow and params. Yes. That's me again. Okay. Okay."
  },
  {
    "startTime": "00:14:00",
    "text": "Yes. You introduced the document already. So next slide, please. Okay. To recap this document, aims at updating formally, RFC 9200. So the main is framework document, mostly covering, two points. A new execution workflow or alternative execution workflow where the AS when executing that workflow, uploads the access token to the resource server, on behalf of the client. And the second point is introducing a number of parameters, in some case, facilitating or enabling that new workflow or otherwise, workflow, independent, enabling additional, features or optimizations of the framework. It was recently adopted, actually after the the prog meeting, and this is version 1 for the updating, that starting point. Next slide, please. Okay. Your recap, on the update the where, 1st of all, a number of simple, editorial improvements and fixes, also I'm clarifying the the intention and the meaning of certain parameters, and at least a stub of initial security considerations are taken from other obvious documents. This one builds on, to be, of course, further improved. In the future. Then we have the concept of talking series. It unchanged, but, it was appearing just half hidden in one of the appendices and it's not moved up to the top of the document, in the terminology. It's relevant in this document already. And it's actually already used by, another document in a is presented, later today. So it's good that this concept is very visible, where they find here. And as we are saying, and as it In fact, happens, in the head of endoscope profile. Other profiles can start from that basic definition and further extend and specialize it. Next slide, please. Right. We renamed"
  },
  {
    "startTime": "00:16:01",
    "text": "one of the, already, introduce new parameters, token uploaded to, token upload, upload, it becomes clear why, in the next point. No other changes otherwise in the, other new or the defined parameters, their name and semantics and used, even in the samples, is unchanged. Considering updates to the, alternative workflow until version 0, that could adopted, We used to build on a lot of assumption, especially that the client just supported the new workflow and that the authorization server, knew that and supported, that workflow ends on. And we prefer to start to switch to an approach where, the client explicitly, opts in were requested, we're requesting an access token to indicate that, It does support the, alternative workflow. It fine for DAS to take the direction with the final decision anyway. On the, authorization server. So that also justifies the change of the parameter name to talk and upload And the parameter can now also be used, first of all, in the access token request. So if it's included there with value through the client is telling the AS, I understand this new workflow, would be great if you can go for it. Ultimately, it's up to you. And EVAS received such a request with the parameter present and supports the, new workflow itself, the AS may decide to if I go for that workflow. And after that, things follow, like, they were defined, already already. Yes. Thank you. Then, we consider a number of other things, to update in the framework, one is summarized in this slide, would prefer to"
  },
  {
    "startTime": "00:18:02",
    "text": "act on the text right away to make it, clear we noticed that, an appendix of the ASRFC, defining the requirements on profiles of ACE had 2 requirements that looked like, I believe unintentionally, incomplete, but to be fair, those formulation predates something that is that will define, later in that we've seen 91 75, later in spite of of the numbering, of the RFC. Where it was noted that, basically, when using security protocol would not, well, inherited secure pairing between request and response you may run, into troubles and you need for example, take particular care of the use of, intrinsically not cryptographic information, like, the co op token. So this is an attempt to, improve the formulation of those two requirements from the framework, to stress that yeah, what we have at stake here, is really the binding between requests and responses that was somehow not present. Only one of those requirements and that you really have to take care of the combination of the communication a security protocol while it was not clear exactly what of the 2, or if if if if if if if if if if both of them together, were responsible for that. And interestingly, the, profiles already published as RFC are, just fine. And already complying with the new formulation So this is more in the interest to be, well, providing a clean formulation and be ready for future profiles to not running into troubles. And is there any feedback on on this text out to make it better or revert meaning keep the current formulation instead"
  },
  {
    "startTime": "00:20:02",
    "text": "Okay. So Yeah. I I I thought the the account formulation was pretty good, but I'm I mean, this is This is more wording, I think. It's not it's not critical. My opinion. So when you say combination, it always, you always think about multiple options here. So, That's why I preferred the previous formulation, but it's no no big opinion. No no major change. David. David. Thanks. Okay. Next slide, please. Yeah. Inspired by, what we did in the previous document I presenting aligning with the use of problem details is that we thought of, making that all So on the ace framework as such, altogether. And Ace has always used a custom, format for error responses considering these 3 parameters, error error description and error URI. And then, of course, very much, predated the work done, on problem details. In 1992. So I got some feedback, on hallways discussions, at at the Prague meeting that were positive about, making the switch altogether, NDA's framework. And in this version of the draft, we already have, well, the full proposal compiled basically where, we are, deprecating the use of the, old format, and instead recommending the use of, problem details and it's quite simple and of course, aligned to the format the final together in an RFC it's just about defining a particular element of the"
  },
  {
    "startTime": "00:22:02",
    "text": "problem detail, item map. So to say, there will be the ace error item that is supposed to include only a one element error code And the value of the error code would be taken just from the same a set or code registries that we have, already. So the values to indicate the the specific error are the same from the same unchanged namespace. They'll basically cover the old error parameter while, error description and error URI are in that replaced by already defined, standard entries for the problem detail data item. And I tried to sketch, in short, the mapping also here, this slide. So this should be the new recommended format to use, an if the actors involved, in an execution of the ace framework support is, they must use it for their outgoing messages And, well, it's better if others get aligned with that. But formally, the the old format is intended to be, deprecated. Okay. Next slide, please. Yeah, these are the next steps. The first one I mentioned already in the previous presentation, this is going to come back. In other slides, I have during the study of meeting, but, as I said, the previous document is the guy in a sense, but then it's it's good to do transition for better, placeholders and examples, altogether. At a higher level, I think we have a good roadmap for this document, in its appendix be and it's about, the alternative workflow specifically to be sure that correctly works, also in case we want to, request an access token for updating access rights. Or for reuploading the same access token like some, profiles do, and be sure that you can seamlessly, really work in any"
  },
  {
    "startTime": "00:24:00",
    "text": "file altogether, hopefully future proof. And then we have also some more, parameters in the queue some, specifically in the interest of the new workflow or some instead workflow independent. So that's our plan. Comments are welcome, of course. Urine. Yeah. Yeah, I think this is, good summary. And, I just wanted to raise 1 of the the items that was appearing in the Hackathon a limitation in the current version where you when you do token upload, it's kind of binary. So, So the the client is asking, the, the authorization server to upload the token, to the RS And if the token is uploaded, then it's not provided. To the RS. And, they might be the case that the RSS lost the token. And then, down the line. So the so the or it's deleted the token because of lack of lack of space. So In that case, the client Whereas, An alternative would be that client would actually be able to configure and, Have a copy of the token and to provide it to the RS when when needed. So that was I think was a good good discussion, and I don't know what what you think about, is that something, you like to bring up here? Or, something for future, releases Well, we can definitely include it in version. Too, I believe, I didn't mention here also in the interest of time, but Yeah. That's the plan. Okay. And with Dave in the queue as well, Yes. Well, I'm David McHugh. Big problem. Hey, Marco. This is Dave Robin."
  },
  {
    "startTime": "00:26:00",
    "text": "I have one question. I don't wanna go too long. Dave, can you speak a bit louder, please? Sorry. Can you speak a bit louder and closer to my mic? This It must not be on. It was on when we tested it. You may just have close enough. been Okay. I'll I will eat the mic. Yeah. Okay. Sorry about that. The question is, you're in this new rep. You said you specifically made the client need to be aware of this. You know, you changed it. And I'm wondering, was that a security thing or why In other words, wait, are are you case scenario, we're actually saying that preloaded tokens are for clueless clients that don't even know they need a token. They have the full credentials to meet the CNF in the token. They're strongly credentialed can identify themselves but they're attempting a protected operation They don't even need know that they need to go get a client a token. So the AS pre delivers their token to the RS. Client attempts the operation does the cryptographic stuff says yes, yes, know, the RS knows who he is. He binds to the client bound token. Everything works great. The client didn't even know he had a that a token that was delivered for him. So this is an important use case for us because we have Gajillion clients that are existing today and very and operations. And so the client may not know anything about token. But he can strongly identify himself. So the AS effectively pre delivers the the IRS on behalf of it because its client bound its not a secret. It's not a verat open. So this works great, we think. Because the client doesn't even know that he's using tokens. So I'm I'm just I I like this the alternate workflow really piqued my interest. And so this is great. This is exactly what we need in a standard way."
  },
  {
    "startTime": "00:28:02",
    "text": "The AS knows the about the RS's needs. He pre delivers the token to the RS The client comes along attempts, a protected operation that he would normally need a client, a token for and it just magically succeeds. And it's a a great migration plan to get clients And, anyway, I was was curious to know You said, no. We changed it, so the client must opt in. And I wanna know why Why must the client be aware that this is happening? Is it possible to client is just simply thinking I don't need a token here. Let me go try something. Oh, look. It worked. Yeah. Thanks for the support, and the question. It it wasn't security. We thought that, minimally, the client has to say exactly what you said. The risk is otherwise that the client is totally unaware, and it is in the response coming back if successful to include the token and that's not what is not talking to the AS at all. The client doesn't know token. To AS No. He It Well, it's it it starts with a request to the Yeah. he attempts an operation. And he gets an answer back. Then it works because that operation normally would have needed token to be loaded ahead of time but it's already loaded ahead of time, but it wasn't by the client. Right. Which which is good, but if the client is totally unaware of this possibility. It is expecting a talking back. In the successful response. Answer to a a a protected operation. It's just doing something to an RS and it gets back an answer or something that it wanted to do. It's it's really a property, writing a property. So I I'm I'm taking too much time. I was Dave, I just there's a question from to you. Is the client e even ignorant about the AS And then also from"
  },
  {
    "startTime": "00:30:01",
    "text": "Yes. As a migration strategy, these clients are fully identified strongly cryptographically TLS certificates, everything. They can prove who they are. But they don't actually know anything about tokens. They predate tokens. They predate ace So the RS wants to protect himself. From some clients. Right? So he's gonna deny certain operations. The client just comes along. And if the AS has delivered a token to the RS on behalf of this clueless client, The operation just succeeds. The client reads his property, gets his answer, or he writes turns on the light You know, the client is a dumb light switch. Right? It's a fully credentialed light switch, but it doesn't know about tokens. Again, this is a sort of a migration thing. This is where an existing client So we want to use the ace tokens But they're delivered by 2 people that know about them, the AS and the RS sophisticated devices the client, is dumb. So we don't wanna invent a new, like, local access can role mechanism or something in the RS. We wanna use tokens But the token is simply delivered by instead of being poked in there by the, client using Ace, It's poked in there by the AS ahead of time. The client comes along, doesn't know any difference, operation succeeds. So Okay. Yeah. But I'm I I was it's kind of like your alternate workflow seemed exciting to us because that's But maybe if that's That would you add in mind? Yeah. Question is simply why does the client have to opt in? Was it done for security reasons, and are we missing some? Yeah. Yeah. There there's a bunch of more discussion in the chat. It seems like a lot of people agree with you that this might be a good idea. And so let's take it to the list and then continue. Yeah. Yeah. Alright. Thanks. Thank you, Deb. Thank you."
  },
  {
    "startTime": "00:32:07",
    "text": "Oh, that was the last slide for me, basically. I I'm done. Oh, okay. It looked like Thank you. Alright. So that was where on prem. So we're on to group OS core profile. Yes. Alright. Go ahead. Yep. Thank you. So, yeah, hello, everyone. So my name is Rick sending an update So this group was core ace profile. Drafted, we've been working on. Starting off with the motivation, It's about, application scenarios relying on, group communication where our client can access resources shared by multiple resource servers. Using this group as core protocol, which is call to call for secure end to end. Communication, in groups, built on those core protocol And the point of this draft is to enforce the access console. Within the group. For resources at this service in the group. So our client wants to send our request to the a set of servers in the group. Then we want to enforce access control. Because you could consider a simple use case where you are saying that, okay, it's enough that the, you know, The client is a member of the group and that should grant it specific rights. And that can be maybe finding very basic use cases. But for more advanced use cases, you really want proper access control and, you know, being able to give different try different clients and a more fine grained approach. That's what this draft provides. Next slide, please. So"
  },
  {
    "startTime": "00:34:01",
    "text": "We want to have the separation between the group membership and access control. And, again, like, just being a group member does not info in the access rights. And this also means that the concepts of how do you become authorized to join the group? That's one thing. And another thing is that Okay. Once you've joined the group, how are you authorized to reach resources at the service in the And that second point is what this, draft covers. And we also, kind of employ this 0 trust paradigm where we focus on, resource protection where, yeah, you don't you want you want that not to have this implicit granting of trust, basically. Next slide, please. Yeah. Thank you. So as an overview of the the actual content, to summarize, group of score profile price, it enables access control for the resources at group members. The use group was core as the actual security protocol between the clients and OSS again, enabling secure group communication, the group joining, that's a separate thing, and that has to happen first and that's not covered by this draft. That's covered by other documents. Collect number 3 there. The, STG root combo score. And in this draft, we make sure that access token is bound to the the existing group of score security context, and to the authentication credential of the client. And the number of properties that we enable is proof of possession of the client's private key. Which is achieved when when verifying the first group of requests from the client, and we also support both the pairwise mode and the group mode of the group score protocol. Was a proof of group membership for the client and we're a mutual authentication. So next slide, please."
  },
  {
    "startTime": "00:36:01",
    "text": "This is, as an overview of the protocol flow, I don't need I won't go into this in in too much detail, but basically, you see that basically, the client is requesting access token from there. Yes. It receives a text as token and then it can proceed to post that to resource server 1 and to to server to and after that, you can actually communicate Doosene Group's core. To these resource servers that it has posted tokens too. So it's an old tries to access them. Next slide, please. Yeah. To go into some of the updates we did, in version 1. We clarify that if an access token is to be deleted, for instance, because it has expired that does not mean that actual group of score security context should be deleted. Because that came from a separate entity typically from a group manager and that should that should actually preexisting before you even go to token. So and deleting the token should not be in deleting that context. Because that context is needed for a possible other group of school con communication that can be ongoing in the in the group. We did some renaming of till x illust exporter labor, for computing, proof possession input the client provides today. Yes. And we have changed the name here to, export rates, pop input client AS. Because that's more appropriate as it's focusing on the actual approval session input computation and it's it's irrespective if you actually use signatures or MAC to compute the evidence. That the client provides with AES."
  },
  {
    "startTime": "00:38:01",
    "text": "And whether you're using it or Mac is dependent on the, on the particular, configuration of your group of score context that comes back to the point of with support both the group mode and the pairwise mode of the group was called protocol. So next slide, please. Yeah. Further updates, we differentiate now between how you compute this c2as, proof of session input when you use a DTS, 1.2or1.3. And this is because the key exporters have, slightly different interfaces We also revised the computation of the for input. When the client and ASRUCing OS Core as the communication protocol. So basically, the the group session input is output for an HDF extract step. And previously, we had it. We were thinking that, okay, the HKDF algorithm to use something you have preconfigured on the AS but we thought about that a bit more and we realized, okay, why not just say that the HTTPS algorithm is the same one that is used in the OSCORE security context shared between the client and AS that that's a simple solution. And we also clarified another thing, which is that in the calculation of the PRK you have, assault input which is a concatenation of 2 elements And element 2x2 is the a 0 by stream with fairly low score ID. A standard DFA client that's unchanged, but we clarify that X One is the OScore ID context SSC revised thing. For the simple value If no OScribe the context is used and that was kind of a missing case in the previous code."
  },
  {
    "startTime": "00:40:00",
    "text": "In the previous text So we didn't cover the case where you had non existing oscar ID context then, yeah, we did some various needs and editorial improvements. So next slide, please. Yeah, some other small changes, removing these quotation marks, for the, super simple values. And we did another point that was a little bit more substantial. And that was about updating and defining specific requirements that the AES must fulfill for for verifying this proof of possession evidence that the client provides to it. And basically the the point of this proof of the session is that the client should prove possession of the private key that it's using. For, the of score communication actual group And we realized that, okay, we had a little bit under specified. So we now say that The authorization server must support authentication credential formats, that's used in the group. And if the scope evidence is a signature, Well, they must support the signature algorithm and Cure, sitting a girl, if the popular evidence is a Mac, they as not support the ECDH algorithm. That is used. As part of a ski agreement algorithm in those who because, I mean, the ASR has to be able to verified for evidence fundamentally, so it must support this same Yeah. Add greetings cards or such that the client is actually using. But practically, we think that this is not an issue to have this support because it's expected that the, a client and RS supporting this profile, that they will be register at an AES that actually do support this algorithm. It's a matter of correct configuration Yeah. Next slide, please."
  },
  {
    "startTime": "00:42:03",
    "text": "So summary, next steps, to summarize This is an ace profile, for secure group communication. Enabling find Grain access control within the group. For communication with the Google's core protocol. And overall, the the core of the profile is stable we did some refinements in the last version, but no actual fundamental changes to the functionality. We do have a couple of planned next step. So, number 1 was also mentioned in previous presentation is to avoid these text string placeholders. And go with the approach in this draft ball, man, seabor, eref. We also want to support access tokens that can target resource servers that may be in different post call groups because now we only support tokens. Targeting resource service in a single group. We want to also revise the tech a bit regarding the profile requirements. Also related to the workflow and params, presentation And finally, we want to say that if you want to also use the Oscar profile, after you have all already used the corpus call forward, how may you do that for instance, you may want to use a different audience to indicate that okay, now I want to actually use the Oscar profile. And our point is that Well, the global score profile only supports purple score, but you may want to also run those core profile to be able to communicate using all score. So you can actually use these profiles at the same time, in a sense, Yeah. Next slide, please. Yep. That was it. So thank you all for listening, and if there's any feedback or questions, speak up now or, of course, the mailing list"
  },
  {
    "startTime": "00:44:00",
    "text": "Alright. Thank you. Thank you. And it looks up up next, we have Ace AST OS core. I don't know Oh, actually, we did. Yep. So good morning or good afternoon, everyone. This is Melissa speaking. So I will present the updates to the ESD Oscar draft, which talks about certificate enrollment using Oscar. So the equivalent RFC 9148. But using a score. So the current status yeah, could you go back, please? Yep. Yep. Sorry about that. Yeah. The current status is that we published in the 4 version on 4th March 2024. Which resolved the remaining issues from John Mattson Srimi and then we did some miscellaneous updates to the draft based on the discussions in GitHub, where we are tracking everything, related to the draft. So the goal of my presentation today is to present the resolutions of closed issues and discuss the status. Next So the first closed issue is, the first closed issue is on, is issue number 34 payload formats should explicitly mention seabornecodedobject So this was, seemingly issue which made us go through the, which made us try the updates to the seaborne encoded search draft. As we are reference seeing the, EONA numbers that are registered in that draft for all the seaborne encoded objects that these are our supports. As a reminder, our ESTO score draft is the draft I'm talking about."
  },
  {
    "startTime": "00:46:00",
    "text": "Supports both SN1 encoded, SN 1 object as well as seaborne code object. So now we have two sections, that's, and two tables. Because funding tables in the draft, which, summarize the content format identifiers for the corresponding seaboard and the same one objects. So this is main mainly, as I said, this is mainly editorial, but it made us track all the, all the Eanna numbers and TBTs from the COVID draft. Next slide, please. So the issue number 35 that we close is on normative requirements and content format support. SN 1 or CBAR. So the context here is that, our draft may support the transport of both SN1 or CBOR objects. And, content type negotiations obviously happens through cops co ops accepts options. So we did not invent this. This comes from, from EST. And we needed to specify the normative requirements on what should be supported by the servers. So we discussed this during I TFone 118 in Prague and later on in GitHub. And we settled on the following formulation where we have a must on the server to support both the s and 1 object as well as the c button coded objects. And then to leave it up to the clients to support either only ASN 1 cboard encoding or both. Next slide, please. The following issue on this issue, there is, is a discussion, I think that I would like some feedback all the I've lost some feedback from the working group. So please bear with me. So 38 is on content format support for Darren coded"
  },
  {
    "startTime": "00:48:00",
    "text": "s and one object. So, Escobar brought up an issue in, RFC-9148, that the old the current text in a boat RFC 9148. And then our draft has a May on support of content form at 287, which is the transport of a single certificate. While, the which may lead to interoperability issues where client supports only 280 7 but server supports, only, 228, which is multiples, a different format. Getting multiple certificates. So Esco commented that in animal, they discovered that there are some management problems if the client uses only 2 180 7, and that it's a very limited method of getting only 1 CA certificate. So he pointed us to a draft in the animal working group the animal constrained voucher draft. Which has a text that I quote below on how they handle this. But essentially, and they handle it by requiring the client to, be prepared to support both a single certificates. So 287 but as well, 281 content format. So this has a consequence that client should have the implementation of the 220 228 content format, which collides with the current text in our draft, it is up to the client to support all content for my 228, 22, 127, all both. So this is a little caveat and a little open issue that I will open and, and a little issue that I will open as a follow-up of this meeting but I guess in the interest if there are no comments to this, I guess, in the interest of time, I can move on. Yes, please. We might be running a little bit"
  },
  {
    "startTime": "00:50:00",
    "text": "a little time. Okay. bit of Yeah. Okay. So number 43 is on, stating sufficient conditions for a sign, certificate signing requests to be used to enroll and, the curve, the the film, the film and public key, So this was opened by Yaron on 9th February 2024. And the issue here is that we describe, we scribe how to use static difficulty for enrolling how to enroll strategic development keys. But it turns out that, these keys can also so, they are in different, in other specifications namely those referenced by NIST, these static difficult man, keys are exceptionally used for signing operations when, signing the first time CSR used for the enrollment. So right now we, added the new text in the draft that specifies that we allow the use of static difficultman keys. For signing this, for one time signing of the CSR for enroll. And here, this is the excerpt below from GitHub on the exact that ended up in the draft. There's always the, this is tracking GitHub. So, next slide, please. So this brings me to the open issues there are 3 open issues. 2 of them are editorial, 2019, so it's mostly about the message flow examples and Clap clarifying the scope in the introduction and clarifying the abstract. And then there is one open issue that considers the use of challenge, password, attributes, for signature case when ad hoc is not used. So we are, we are in the next slide, please."
  },
  {
    "startTime": "00:52:03",
    "text": "So we are, almost there. We have three open issues in the GitHub tracker. So we believe this is getting ready, we would request some more reviews from the working group before declaring it. Or declaring it ready for the working group last call. So I I'll let the chairs comment if they could help me out on that one. But that would be all on my update for today. Thank you. Alright. Thank you. And, if you could take a look at this one, that would be great. yeah, We would like to get it up as well as soon. Alright. Let's see. Yep. And so we had the request to reverse the last 2. So I think we're on edhoc less core profile. Right? Alright. Okay, me? can you hear Yes. Yes. Yes. We can hear you. Okay. So I'll I'll try to be quick then since we have another presentation coming up. Yes. Thank you. And So this is the the outline. You can go to the next slide. So I don't think I need to say much about the recap. There is This is a profile of the ace framework, and the authentication proper which you use between client and resource server, in this case, is EDOKEN OSCORE, and that's the two round trips, on the right hand side there. And this is an example in, one of the optimized workflows. So what's the note here is the access token, the location of the access token in flow. We already talked about the alternative workflow And and here, it's indicated in message 3 so you can go to the next slide, please. So that was one of the main"
  },
  {
    "startTime": "00:54:01",
    "text": "changes, in this version We removed the option. We had 3 options before we so What remains now is either transport the option in message 3 as was indicated in previous figure or you use the generic method described in the ace framework, which is using post authorization info. And the reason why we did this was that there is no you cannot essentially make any use of the token or not much use at least until you receive message 3, when you have authenticated the request of the client requesting. So that's that's the point when the resource server, anyway, can do any, Anything useful. And at this time, the the message is is confidentiality and integrity protected. So so that access token will be there would be no privacy issue regarding, contents of the access token So that was motivation. That's done now. We also updated a few other things, So in in we you you can now either transport the access token or an identifier, the session identifier. In case you, you know that the access token is already available at the RS. You don't need to carry all the time. So and, so I'll she can go to the next slide. Just to move on to the discussion points. So there are that's the response here. About one type of optimization, which we are doing. Which might need to be complimented So long long story short, all my video is gone now. Can you hear me still? Yeah. We can hear you. Okay. Good. So Yes. We can hear. Yeah. That's that's the important part. So, what happens is that We are using Key identifiers, for very compact representation"
  },
  {
    "startTime": "00:56:02",
    "text": "of for for very compact identifiers and those can be replaced those can replace the use of a credential. And here here is an explanation how that's used, for for the client, and in slide 2, it's for the for the resource server. But the problem is that these key identifiers are selected by In this case, it's the client selecting the key identifier which means that if you're multiple clients, you might have collisions, And that's not a problem. This is basically intentional, this is for small settings where you where you where you might not have, a large set of clients and then you can settle for a very very, Small identifier space. But what happens if we have a slightly larger set where you have all the clients are selecting a very a one byte or, key identifier. Or even 0 series or something like that. Very simple. And that's the that's actually the case. You can clip, two lines ahead. So stop quickly at the slide Next slide. Yeah. Okay. That's fine. So this this this is the same question for for the client and for the resource server. What we say here is that use of, key identifiers is very it's nice, very short, not unique, though. And for many to one sentence, what we would like to have, in particular, if we're looking at this case, which is the raw public key case where we would like to have, a way of uniquely identifying those. The natural way to do this, we think, is to use hashes. So and it so happens that, We are not aware of this being defined anywhere else. So hash of CCS would be then the natural identifier CCS is the c CWT claims set which is a SEAT CBAR Webtoken without a signature, essentially. And that's the way you identify public keys in ad hoc,"
  },
  {
    "startTime": "00:58:04",
    "text": "that would be the natural, object, but we don't want to carry the whole object. We like to only carry it So that's our, proposal here that maybe this should be the document where we register the COC the keyboard header parameters. And also the confirmation claims which we can do standing in seabor web tokens. For hash of CCS. At the same time, then you start thinking about X Five T, which is sort of a hash of an X509 SINTPU. You'd like to do the same for for for CWT and also for Your RISE. Any comments on that? I hear now. So, yeah, so that's that's the basic proposal. We can mark Marco in the queue. Help. Welcome. Hi. Yeah, regarding the CWT part, there was a presentation today, in cozy. With the document that is trying to do basically that, for CWT. There's a subtle difference. I don't consider specifically a KCWT. Which is a CWT, including a KOSiki. I'm not sure if we if we can build, in that same strong way from that cozy document, if so, or or we can build that sort of implication, CWTs may be covered by the document already. Time. Excellent. This was the purpose of raising this here. If someone is not we can something we can reuse. Yeah. There's there's that to check, though. Thanks, Marco. Great. If I have time, there is a final slide here. Which is another issue we don't have time to talk about. I just want to mention that there's a discussion on how to use the reverse"
  },
  {
    "startTime": "01:00:01",
    "text": "flow. So ad hoc is allowing the reverse flow as well. That you, basically, instead of mapping message 1 to request. You have a trigger as a request and then you map message 1 to response. And in that case, we would use a different message for carrying the token and, how do we handle that? So that was basically the question, and I think it's It's fine to use EAD 2 for that, so the message to there are some different properties in terms of who can read this. So an active attacker would be able to read in message 2 is not the case from SS 3. But on the other hand, using post authorization info, then it's actually, available even to passive attack attack. We have, an issue on this, but let's continue the discussion on on on the issue. Or on members. Yep. That sounds good. And we're out of time, so we won't get to the, last presentation, but thank you for everyone for an excellent meeting. And, Have a great day. Thank you all. Bye bye."
  }
]
