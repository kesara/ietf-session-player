[
  {
    "startTime": "00:00:35",
    "text": "So before we get started, I think we need to make the call for the a notetaker volunteer. Thomas, you wanna Oh, great. Thank you. Appreciate that. So, Thomas, if you use the official tool, someone will help you. Usually. Yeah. If anyone else wants to contribute, feel free to Should we get started? Yeah. Right. You wanna lead it? Do you want me to lead it? Let let me do it for this time and then you can do it next time. Sounds good. So Notewell. It's it's Wednesday. You all have seen this many times. But, this meeting is completely under the note well procedures and all of the reference documents You're you're driving, Chris. So next slide, Let's see Yeah."
  },
  {
    "startTime": "00:02:00",
    "text": "Unfortunately, the ISG did not approve our charter yet. They say they will at the nest next telechat, which will be theendofthismonth so we are officially here as a boss on our charter is available. If you wanna go look at it, and we think it's going to be approved as is. But but, but, but, This is not an official meeting. So we can adopt any documents yet. We can't, do any other official business but but but we can maintain the agenda that we have. We can discuss all the ideas that we have. We can discuss direction. We can dis discuss drafts it's almost everything is okay except making decisions. Yes. Any questions about that? Okay. Next slide. So, here's our agenda. The the typical bash Jonathan is going to present the contact user use case, I'm gonna protect present the emergency call, Incret, use case. Rowan is gonna do message conversation exchange. And then Dan has a proposed Vecon connector container, if we're press for time, Dan's will cut Dan's because it's solutions rather than problems. But hopefully, we will have plenty of time for everyone. And a and a short wrap up. Any issues with the agenda. Alright. Anything else we wanna discuss before we get going? Otherwise, Jonathan,"
  },
  {
    "startTime": "00:04:01",
    "text": "Alright. Yeah. I wanna you'll wanna present his slides. Yeah. You guys so you'll you're driving the slides? I can if you want. I'm not driving. Chris is gonna drive him. Chris is driving slides. Okay. There we go. Oh, you know what? They're not in there. So I think, Jonathan, you're I I wonder if you put them into late or Oh, really? Now it might Hang hang hang on a second. I might be able to cause it. Yeah. They're not there. I did. I did. Didn't you see them? I sent the mean, they're I got a mail that said, they were officially uploaded for I don't see them in the list. In our slide set. I see is the ones that are there. You have to approve it. Did you do the approval? I mean, Yeah. Yeah. Yeah. Alright. Let me get in Hang on. I'll be there in a short Just share them from my desktop. Yeah. Yeah. I understand. Hang on one second. Refresh. I don't C approval Can you can you email them to me? Yeah."
  },
  {
    "startTime": "00:06:01",
    "text": "Let's see if I just go back to data tracker and see if it's asking me for anything. I think they're Isn't there a timing thing? Yeah. There is, but I I can fix that but I don't see them in the queue. Okay. I don't see them uploaded at all. Sorry. There we go. I can add because know, I just did these, like, 20 minutes ago. Yeah. And and and if Rohan's around, I haven't seen anything from him. Hello? He's working on him right now. Yeah. Right. As a typical. You you could try to share them directly, John, if I think. Alright. Hang on. I I I'm getting there. I'm getting there. Okay. You're gonna I found I found It did not. The approval didn't go in. So I I'm back on the approval And let's just see if this is Now here, I'm gonna do this again. No. Not there. An X-ray, at least there. Still not showing up Alright. Email. Do you want me to share them locally? Yeah. Yeah. Let them let them share. Go ahead. The new the next we're we're we're we're getting We're new at this. Sorry. I'm not sure. I'm embarrassed to say I don't know how to share slides I I hit the ask to share button. But it didn't let me pick the app or anything."
  },
  {
    "startTime": "00:08:02",
    "text": "Alright. Yeah. I know. Alright. Oh, goodness. D Are you trying to share it, Brian? Or do you want me to? I am. I am about to try to share it now that I've got them on my my local machine, Let's just see if it'll let me do this. What's that? Choke Okay. Now It's there. Yes. You cannot You can This is an amazing transcript by the way. I just wanna say reading the transcript. Alongside here. Yes. This is like Right. My favorite IDF transcript so far. Alright. So it's available to share now. Oh, yeah. You you Chris, you should be able to share them now. Yes. I see them now. Way. Alright. Up, chair chairs apologize for not. Not getting it together yet. Yeah. Well, or and the and the presenter apologizes for doing the slides, like, 20 minutes before the meeting. So but at least they'd be run. So that's you know, who's still working on his slides. So that's that's good. Yeah. Alright. Let me jump into it. So apologies. I couldn't be there in person. Honestly, the fine dining just isn't good enough in Prague. No, I kid you. Partly. So we're gonna talk about contact center use cases for, for recon. So this is a draft I wrote with"
  },
  {
    "startTime": "00:10:00",
    "text": "my colleague, and this is Leono, who's here in the and the meeting as well. He's, actually, the a lead of a 5 nights portfolio in this area as a deep expert. So to have him here with us. With the next slide. The risk of saving the obvious in case folks aren't as familiar. I think many of us and conferencing telephony contact centers a little bit of a stepchild in the real time communication area. So what does it do? It handles interactions between business and their customers. Most people think of inbound, but there is also outbound where the the, business places, outbound calls, or SMS, or emails, These are not all just robocalls, which is I know unfortunately, a decent chunk of them, but a lot of them are actually desirable things, like when notification reminders to come pick up your prescription or what have you. They usually provide a mix of self-service and live agent handling. So service where you, you know, use the buttons on the phone or speak the system and get things done. The main component is called the ACD, and it's primarily a matching engine that routes the calls to agents, based on things like know, how much time is the agent spent today on calls and what's their skills and doesn't match with the customer needs it's usually not just for these other things like SMS, email, WhatsApp, face Messenger and other social channels. Again, just a brief That's what contact center is. Next slide. Where it starts to intersect Vecon is this. That probably a little bit less well known is there's In the contact center, there's a pretty big set of vendors and products in the market and technologies that roughly call supporting applications in the industry, these are often known as WFO or WEM. Acronyms change every few years. And they're sort of add ons, and there's a few different categories that are pretty relevant for econ. Probably the the primary one in the core of all of it is recording."
  },
  {
    "startTime": "00:12:00",
    "text": "Which is simply the act of taking these calls, chats, and emails, and recording them. Why do you wanna record them? The re the the y is also important for recon here. One is compliance. Which is that, know, later, they legally have to store and say recordings in certain vertical segments. That's the case. Similar archival, just have access to them in case, you know, customer calls or some question about what happened. So he wants to go retrieve and look at them and the historically, the main use case is this thing called quality management, which I'll get to a second. Probably pretty important to note again for a recon use case is that this often includes screen recording. And think of that like screen share, except as a contact center agent, basically you're you're handling calls or transfer customers Like Big Brother is watching like, everything. And your entire screen through the whole day is pretty much being watched and recorded So, there are legit use cases port, which I'll I'll talk about in just a second, but this is part of the recording. Addition to the actual audio and text recording of the session. A major function of these recording products end of the problem at hand is PCI credit card redaction. It's not uncommon. You you speak to someone in the contact center and they ask you to read a credit card out to them and regulations and compliance are pretty clear. You wanna not store that information. How you remove that from the recording is a pretty complicated process. There's there's a bunch of different ways it gets done. I think I talked a little bit more about this. No, I don't. Sorry. So generally, for example, what happens is that someone goes in, like, embeds or scripts in the web page itself where the credit card numbers are by the agent And when the agent like clicks in the field where the credit card number is supposed to be stored. It sends a"
  },
  {
    "startTime": "00:14:01",
    "text": "some kind of signal to the back end application to stop recording at this time. Is one way. Other cases, agents actually have a little widget on the desktop where they can a button. And they can pause the recording manually. There are other use cases where the agent transfers the call to a voice response system to collect the credit card number so that it's never even on the wire where the recording is being done. So there's a bunch of different solutions, out there for this, but a but a key part of it is redacting that information, and, of course, once it's redacted and the recording gets these requirements, you wanna know where it was and then it was credit card. Number without the number itself. So recording and redaction one big thing. And that drives, two main use cases that that are used. 1 is quality management. And the other speech analytics quality management is if you've ever called the contact center and you've heard Thank you for calling. Your call may be recorded for mono for trading and quality purposes. Right? You've probably all heard this stupid announcement. Jimmy called the contact center. Right? That refers to this capability. And what it does is it it takes those call recordings and there was a product called quality management that, allows a a a user usually like a a quality manager or their departments in centers to do this, and and someone goes and listens to some subset of these recordings of these calls, and there is a rubric that they use to score the agent? Did they greet the customer nicely? Did they sell the product? Did they not yell? What have you? And those scores are collected and sent back to the agents for coaching and and training and improvement. So that's basically someone who listens to the recordings, basically. Increasingly that as you would expect that's moving to an automated process using transcription and natural language understanding, technologies, most products out of state. I wrote a mix."
  },
  {
    "startTime": "00:16:00",
    "text": "And a big part of it too, and it's this one's particularly relevant for vcon, is that this case, the the the quality management is the performance of the agent. So if a call bounces between 3 agents, before it's done. There's 3 separate in essence, recordings that are listened to at different times by different people, to rate the agent's performance for their piece of it. And so a big part of what these systems do also is stitching the recordings together presenting different views on the recording show the segment that's relevant for the training. Purposes. So, again, Vecom, we need to make sure we're able to delineate those segments and identify which agents were involved. And the last one is speech analytics, which sort of uses a variety of techniques to produce graphs and reports on know, what was spoken and were was a customer angry and you know, these kind of things. Next slide. Alright. So in terms of, you know, sort of protocols and where Vecom fits in There's actually two places that are relevant for Vecon in this again, I think it's pretty useful to understand that from a use cases perspective. We we're talking about basically transferring of recordings from the contact center on the left and and these self supporting applications on the right. I probably should have said this at the outset. Sorry. Is super common that the vendors and infrastructure for these supporting applications is not the same as the core clinic center. Very, very common. And so that thus I need for an on the wire standard for transferring these things. Today, These things are all done via proprietary file format proprietary APIs, and so the objective would be to use Vecom as an alternative. So that shows up here in these two different places. Place number 1 is the call itself or the chat or the email that needs to include both the recording as well as metadata. I have a slide I'll get you in a moment that lists some of the requirements for this use case on what kind of data we need in there."
  },
  {
    "startTime": "00:18:01",
    "text": "And lots of call events. So especially in the contact center, parks holds transfers conferences are the norm and the recordings are complicated. Beast with lots of different segments and participants all that needs to go over, but it doesn't include the desktop recording, which often said separately, that's unsurprising because the desktop recording is not shared with the cuss the consumer. Whereas the voice recording part is. So, the that's usually transferred separately, but this is another recording transfer. Usually there's a a but but but piece of software that runs on the agent desktop, basically doing the local screen recording and we'll do a post call or batch nighttime upload of these things. And up to the the supporting applications. Next slide. I know this is riveting. Thank you. Thank you, Benjamin. It's real problem, though. So alright. Now to the meet, Here's requirements in this document for what what we would like to use econ for these 2 use cases. Interaction type, you know, audio, screen email, interaction ID, file type. I'll pause on perhaps the non obvious ones, the media metadata, bit wrap channel, bit rate channels, participants for each segment, That's particularly important. Right? We need, like, an a an ID like, a UUID of some sort start time, duration, direction, direction is particularly important not just for the segment, but for the the interaction as a whole, quite different whether it starts with the contact center calling the consumer or the other way around. That is really important to record and then details for the participants participants gonna be a, you know, mostly agents and then 1 or, customer their ID, first and last name, type, which of those they are, did they initiate or receive for the consumer, additional information is desired as well."
  },
  {
    "startTime": "00:20:03",
    "text": "Already talked about PI and PCI redaction, so we do not wanna know when did that start? When did it stop? What type of info was there? And the duration so that there's not this, you know, almost doesn't doesn't look like a gap in the recording that it was a a mistake or a packet loss, we can differentiate that redaction segment. Specific to contact center and common to most of them is this idea of skill, which is a property of the caller. It it is a vector there's usually more than 1 or often can be more than 1 for transfers this is sort of like, think about it. Like, the main reason you're calling. So if you call off and you hear one of these menus, press 1 for sales, 2 for support, sales or support is the skill. And so this is a very key piece of metadata that's often used. In many of these downstream applications. Similarly campaign is another common parameter in these things. Basically most contact centers will take, for example, phone number and map it to a campaign that defines it's like the container for all the configuration. This is a sales campaign or this is a support campaign or This is a, you know, enrollment campaign for signing up for your health plan this year and has its own dedicated number and voice response script instead of agents So every it's a container for pretty much everything. Whether or not the call is transferred, metrics, like, this count of transfers and conferences. These things are often used as search sorting filter parameters, who hung up, disposition is the last of the major contact center pieces of metadata at the end of the call, an agent has this drop down menu of, like, what happened was this call successful? Did we complete a sale? Does the customer have to call back? That's a key, property that's used for a lot of, speech analytics, and downstream processing of the call. So we wanna put that in there too. For outbound calls, they run off these lists of phone numbers"
  },
  {
    "startTime": "00:22:01",
    "text": "and and understanding what list this is on is also pretty useful property. These are all real metrics that that are actually part of the information we 59, my company is a contact center as a service vendor. Transfer all of this information today to are the downstream applications, parents, 59 themselves. We own 1. So these are real stuff sent to real vendors. That's it. Awesome. Questions? Questions? Alright. Alright. that. Yeah. And I knew it would be riveting. Thank you. Thomas does Thomas has a question. Some my question for you, Jonathan, is I understand that the current state of the art in the contact center is to identify the customers loosely, that is their name, their email address, and a and a phone number, What I've been asked recently is is there a, Are there any other higher requirements for identification? So that this is all self certified stuff that you've said, like, from my contact center place, it doesn't really address the identity of the participant from an external viewpoint So as an example, a difference would be that the it'll take 5 nines for an example. To to stay out of the art today, as I understand it, is in your system, you'll say it was Sean Doe, and this is his phone number. Yeah. Tomorrow, what I've been asked about is would it be escalated into a case where it would be 5 nines, it sorts that it was John in this conversation. And so that as you perceive the decon, it would be five nines that was asserting the authenticity of the participants in the conversation."
  },
  {
    "startTime": "00:24:01",
    "text": "Oh, me, like, in the stir shaking sense of the word? Yeah. In the stir shaking sense of what Today, we're not we at least we are not including, like, their attestation information. That's certainly interesting to most contact centers. At the moment, at least it's not a requirement. But, you know, what surprised me if people start to ask for that in the future. Yeah. I'm I'm not I'm not a proponent of of changing the requirements to adding it into the first version of the protocol. I'm just saying that as I hear what people are asking for next, that I hear that quite a bit. And from my perspective, it's been in the, AI stuff that we've been doing and deep fakes, etcetera. How do I know that this is an actual authentic conversation. Yeah. Yeah. That's probably I mean, again, I probably interested not probably not for these examples, like these examples, the consumer on the other side is, like, the purpose of these applications, the quality management, the speech analytics is not about the consumer. So, authenticity, the consumer for these use cases is not that critical. There may be certainly other use cases, you're thinking of where that's important, but but not for these at the moment. Thank you. You got 10? It's Dan Petrie, CPC. I just want to say thank you Jonathan. This is fantastic, input. And, I know we aren't making any decisions, but I think this is you know, dead on where we want to be with with Beacon. And, I hope we will continue in this direction with the with these use cases. Yep. Sounds good. I think the main the main thing to take away is that there's a lot of metadata And so, I mean, it's already there, but, like, you know, extensible metadata properties, ways to group them, you know, so that there's a a contact center list, for example, and we stick in there that everyone else can ignore. If it's not those, those are gonna probably be important in the in the down dream use cases as well as really clear ability to have"
  },
  {
    "startTime": "00:26:03",
    "text": "different segments called out. This is the contact center definitely introduces a bunch of fairly complicated. Use k requirements on the vcom format. K. Thank you. Wonderful. Thank you. You finish your slides, Ron? Just, put them in there he's he's shipped them to me. In time for me to, through my presentation. So we'll fumble at the end of this. That's alright. Alright. So this is the emergency the call or ecrit That ecred is the IETF work group that works on this stuff. Kinda next slide. So emergency calls our citizen to authority. So here we're talking about 911-112. That that kind of thing. Most countries have an organized scheme to do this with a 3 digit dial code. Some countries, they're a single code, and others who have a dial code for each kind of responder this is all regulated. There's laws that apply to it. And they govern how the system works. Calls are made from many forms of public communications. Originally, this was brickly carriers but it's expanding in most areas to cover less regulated carrier, so I would say, calls are answered at a specialized call center, which is called a public safety answering point or PSAP. So that's the, the term you'll hear a lot piece at. Next slide. This is all IETF stuff. We've done this for a while. In in the IETF, and there's a standard the set of standards that came out of Ecrit that form the basis for per country standards. In North America, there is something called next generation 911 and an EU"
  },
  {
    "startTime": "00:28:02",
    "text": "in the, EU. There's next generation 112. That are using common standards. There there's a goal to maintain singles eventually get to a single standard. They aren't yet, but they're we're we're getting there. NT 911 is being deployed in the US Canada now. Some aspects of 112 are being deployed and this discussion is gonna focus on those because they have standards that are much more then what's installed in most countries and in in the rest of the States in North in North America now, I I I don't propose that we try to cover the older systems. I only talk about the newer stumps. Next slide. So the participants in an emergency call you have a caller, a call taker, which is sometimes called a tele communicator, for some calls, you have a dispatcher And occasionally, you've had a responder that is All I'm saying is that the responder doesn't talk to these other people much especially the collar, except under some, on your, rare stances, but it happens. Importantly, for this, all calls are logged for legal purposes in QA by a logging service. I'm going to talk a lot about that in the in the Next slide. And another thing to realize is that in most jurisdictions, private restrictions, otherwise, enforced for calls or other release of data are waived but there's limits on disclosure. That means that you don't have to tell us, give us permission to get your information, your PII, your location, etcetera. But the system is restricted in what it it can do with that data. Next slide for the 3 most important things to know about emergency calls Next slide. Location, location, and location. Next call. Next slide. Location is used in two ways. Most jurisdictions have many peace apps. That's not true at all."
  },
  {
    "startTime": "00:30:01",
    "text": "Countries. There's some countries that literally only have 1 or 2. But the location is used to route the call to the piece up that serves the location of the collar. In the US, there's over 3000 of them. So it's not obvious how to do that. And the important part of location for everybody is that you have to get responder to the right place. You you have to be able to direct the responder to get to the place where the the victim is. And, obviously, location is the most important metadata. I do wanna point out that caller location is not the same instant location in all circumstances. Sometimes if you're in the car truck crash and you call, your car isn't moving. The location of you is the location of the crash, everything is all. But you can we get calls all the time from, my mother's having a heart attack her mother while she's in San Francisco and I'm in Boston. So, we, we have more than one location. Let's that's the other thing to go. Next. At the start of a call we have queues where calls arrives at peace apps. We clearly care about wait time who wants to have any wait time when you call. I can emergency call, but it does happen. So we do have queues We do have IVR and MR for short weights. That track this stuff. You you can get a busy We don't ever wanna hit see that happen, but the system can be overloaded. There might be multiple queues of call takers but unlike Jonathan's case, we don't do skill based routing. We you typically. They're, that's, starting to come in a little bit, but but we don't do that now. Media is negotiated with 6 standard stuff SDP and all of that. We support audio video real time tech incident messaging or any mix of them on any call. Next slide, please."
  },
  {
    "startTime": "00:32:03",
    "text": "So calls always start with a 2 way call between a call taker and a caller. In some circumstances, we just we transfer to a dispatcher The transfer is always attended, meaning a bridge is used to mix from 3 participants, sometimes more when we start this transfer, both the call taker and matter can hear or see the color at all times. But the, after the dispatchers on the call, the call ticker and Patrick can converse without the color knowing. We do this with muting. So we're muting audio and video towards the collar but we're not muting him towards us. Towards the the system. So we have different views. The the the collar has one view the call taker and dispatcher typically have the same view, but they're different from the other ones. Then kind of farther along, we we open up the the the muting and now everybody's now, it really is a true way a true three way call. Then, typically, the primary piece up would drop off. Sorry. Would drop off the call, and now you're down to a two way. Then you get off the bridge. There is a data transfer that happens when we do this. Using a standardized data that gets what we what the call taker knows about the incident, and they transfer that to the dispatcher. With a a data transfer. Sometimes that's all we do. And, increasingly, that's all we do. Sometimes the call taker is the only person who ends up talking to the caller. They create all the data, and then they just ship the data to the dispatcher, then the dispatcher never talks to the caller. Black straps. Everything is logged. Everything. We log everything. Unlike most systems, unlike Jonathan's use case, We have standardized logging and retrieval protocols and data form"
  },
  {
    "startTime": "00:34:00",
    "text": "So in in next generation 911 and in next generation 112, we standardize both the input and the output of the logging service. We use SIPREC if you know what SIPREC is, it's it's the standard SIP recording mechanisms. Then we re we play back with our TSP. You'll you'll see a lot of ITFism in this. Relative to, Vecon We have a globally unique call identifier signed by the first entity then counters the call, and we carry that a call identifier throughout the call and any data associated with the call. Similarly, we have a a global unique incident identifier. Incidents are real world events. A call is a call about a real world event. Every new call is initially assumed to be a separate incident and gets a unique an identifier, but sometimes we discover that this is the 2nd, 3rd, 4th, or even 100th call about the same incident. And so we end up merging incidents down to the original one. To the to the to the real world incident. All log events include the log, the the incident identifier, all log that are attributable to us given call have the call identifier So we have these these, identifiers that are maintained and we've they're they have a specified format. They're used all over the system. As well as the logging service. And so we have to tell you what it is. You tell us what it is. Although, of course, we can have a mapping. See Jonathan in the queue. Do you wanna get in a question here? Yeah. Quick question, Brian. So this incident identifier is that actually changed in the like recording metadata or it's just it's stays it's fixed and and someone later correlates them together in an off When when you When we do a merge, We we we specify which is the surviving incident."
  },
  {
    "startTime": "00:36:01",
    "text": "So we'll say incident 103 merges incident 5 incident 5 survives. That means that the the logger has a bunch of incidents for for the 105 incident but thereafter, all logging is done against incident 5. When you do the retrieve, you can figure out all of that. You you can see the history of the merge. And you can track back and get all the all of the incidents from the logger, but there's a, you know, basically, there's a multi step process to do that. Hi. I guess the question that's clear is, like, if we have this recon format, It has the incident ID in it is there a requirement that there can be an updated incident ID that is modified along with the original one Like, is this is this need to be a list with the carve out been flagged. You know what I'm saying? Yeah. I do I do understand what you're saying. I think they question is when do we generating the Vecon data structure if we're generating it early in a call, then the answer is we're gonna have to deal with this particular merge problem and either have have the incident ID change or have a catalyst or something like that. If if if if we actually only end up using it post processing or later on in the call, then we we'll know what the real incident is by then. Sorry. So it kinda it kinda depends on what the actual use case turns out to be. Yeah. But would you wanna then modify it later. That's what I'm asking. After the call is done, let's say you the incident. Would you wanna update this thing in the Vcons? So if you transferred around the people. Someone downstream knows the new incident number. Well, again, it it I I still haven't quite figured out when we wanna create the beacon. If we create the beacon, before the incident is finished, we may have to deal with this."
  },
  {
    "startTime": "00:38:02",
    "text": "If we create the decon only after the incident is finished and we know what the surviving incident ID is, and we're okay. Okay. Thanks. Yep. Next slide. We track people associated within it's in it and therefore calls. So we have the notion of agents, which are call takers bachelor's responders, and sometimes even tow truck drivers our agents Agents have agent identifiers in the agency they work for has an agency fire. So anybody in the system We have unique IDs for them. We track that that they are assigned to an incident or that they worked a call, and and so we can track who's involved in every in every call and every incident. We track people who are not agents We they have a role. So they're a caller, a victim, a bystander, a parent, whatever. And we have a standardized person object, which has a unique identifier that tracks each person and we update information on people and different agencies that different views, what they know about an incident so you could have say one agency, this guy said, oh, he was wearing a red jacket and another says, no. No. No. It wasn't red. It was orange. And we track all that and we can tie conversation participants through our notion of agents and persons and we, but again, we have identifiers for all these things, which we have to take into account. And and we might end up with different is in a in a in a in an emergency incident, not everything is clear. So in the middle of an incident, you may think you have three people by the end of the incident. You realize you only have 2. So we have problems like that. Next slide. We today, we're have very limited use of automated transcriptions and AI, but that's changing pretty rapidly."
  },
  {
    "startTime": "00:40:03",
    "text": "Logging is primarily used for legal proceedings. We have to log QA use is secondary, but again increasing since Everybody does do listening of of calls for QA purposes, but analyzing them in any way is pretty rare but is starting to get very interesting because we have standardized protocols and data formats, then then earn earlier systems the the ability of of analytics to deal with the data is increasing rapidly. So that's One of the reasons why it's it's starting to be more interesting is we have more correlation of data That might be it. Next slide. That's it. That's it. Right. I haven't tried figuring out all the other things, but I've given you a a a top level view of what kind of metadata we have there there's there is actually quite a lot more I didn't I don't have 20 minutes, I wanted to lock. Questions. So we have a lot more standardized data but, that this is just a hit, a, the top level of the people interactions, the conversations, Plus. First of all, Brian, I want to thank you so much for the this work as well. I think this is a really great use case. When we first started working on Vecon's, Eric Berger, had mentioned this exact use case as something that might be really important for in bringing to services. So thank you for that. One of the the elements of the decon standard they want to point out is the group section of the V Con And this might be a perfect use case for flushing out the group section of the econ. Group section of the decon is roughly intended to relate"
  },
  {
    "startTime": "00:42:01",
    "text": "vcons together. So if you had a block of conversations that in some way related to each other, could put them in and group. Right? Yeah. Up again. How however, I think this is a great use case for identifying how that might be used because you've got cases that that you're dealing with that have multiple recons that maybe orphaned or or brought forward in time. So Right. Right. I mean, I I I I had to choose what I was gonna talk about, but recognize that there's this conversation between a collar, and a call taker, there's another conversation between The call taker and the dispatcher then there might be another conversation between the dispatcher and the collar, but that that depends on the circumstance. But then there's a discussion between the dispatcher and the responder. And then depending on the circumstance, there might be another conversation that that's beyond the emergency call use case that is now getting into all of public safety. Between the responder and the caller or some other person related to it. You know, when the cop arrives on scene, he starts talking to people. Now that's getting way beyond what I know about, but that there's definitely lots of related conversations here. Yeah. Beautiful. Thank you. Jonathan, I guess. Yep. Yeah. Another question, Brian, is as it relates to the standardization activity, you know, we need to create a standard when we're trying to transfer information between system zone, you know, that are provided by different vendors and manufacturers. Right? That's why we standards. It's, it's unclear to me in the in the not emergency services cases, what at what points in time are is there an actual transfer of a recording with what metadata needs to be in it. Is there more than 1? Because like example, if if the entire thing was a completely closed system, where the recordings were stored and accessed to all from equipment made by a single vendor, then"
  },
  {
    "startTime": "00:44:00",
    "text": "the format is a matter of internal consideration only and it's not something you need a standard for. So I'm trying to understand, like, where where where is the standardization need come from inside of the emergency response systems. Well, there's a couple of things. A lot of our standardization is is, an explicit attempt to avoid vendor lock in. If you look at recording systems today, they have to deal with all kinds of proprietary interfaces And, if you have if you've chosen an odd ball, say, call taking system, may only have 1 or 2 choices of logging services because they the only ones that have worked it out. So we a lot of our standardization is based on making sure that the vendors enter change. But but, a bigger a bigger notion is being able we we have this notion. There's a there's kind of a rule that says that our the the main data transfer between our elements It's called an emergency incident data object. It's everything one agency knows about an incident. But it is what the state of the incident is known by a sender at the time it was sent. Has no history in So if you wanna go get history on any incident, you gotta go to the logger to do it. And that's uniformly held. You get only current state when state is transferred in most of the interact the protocol actions between elements and you go over the logger to get anything you you wanna know about history. So that's the other primary reason why we standardize is that Everybody's gonna be hitting the logger more often than in current systems. Current systems, loggers only retrieved for legal purposes or QA purposes well after the call. In in NextGen 911and112. The logger is hit during an incident because It's the only place there's history. Okay. So I think what I'm hearing is"
  },
  {
    "startTime": "00:46:01",
    "text": "that the this this logger component is expected to spit out these Vcons and for some of these downstream purposes that you're talking about, Yes. During the incident. During that. You're correct. Do you see the v con being used between the again, I Conic centers and p steps are a bit different. So that's why I'm asking these questions. Like, in a normal center. The the the voice voice, you know, the the the call processing engine is distinct from the recording 1 SIPREC is also used between them sometimes too. Do you see icons between the call taking system in the recording system, or that's that's all real time and and not in scope for you. Thanks for your feet, Con. I think it's all real time, but we'll see how this all hurts out. I mean, I'm not I'm not really sure how this is all gonna work out. I I can I will say this? Is a notion of something called an incident recall recorder. That's you know, pay pay me back the last thirty seconds of the call. I think I missed something. Yeah. Well, it'd be certainly cool if you could, you know, replay the last 30 seconds of a decon, right? I don't I'm gonna but it depends on what that means and what in there and a bunch of other things. So I'm I'm I don't know yet because I'm not sure how this all recon thing is gonna gonna evolve how useful it's gonna be during an incident. Don't know yet. Got it. Okay. Yeah. It's worth noting for the for the contact center case I pointed out to most of our connections between the the call taking equipment on IE, the contact center core, and the recording some r real time. So it's a mix of SIPREC and then like, a bunch of vendors like us have proprietary protocols that have more stuff in it then then in, SIPREC. But I I think there's a growing need, and that's what's interesting to me to deal with cases when there's like, a disconnect between those things. And someone in in the recording system needs to catch up like, oh, I missed an hour of recordings because there was downtime or an internet"
  },
  {
    "startTime": "00:48:02",
    "text": "you know, cloudflare had another problem or whatever. Right? So there you would wanna post call transfer to ensure that all nothing's been lost. So for me, that's the the use case of econ in that leg in addition to the real time one. I don't know if the same applies in the piece of Yeah. We don't have any batch anything usually. But you know, I, we always worry about failures and so we can invent them. K. K. We're right on schedule. This is great. Now are we doing with the Rahan? Is is there a deck there? Or do I have to do the same thing? So I approved it and moved it in but how did you get it to show show up in the thing. You go to 3 dots. Upload and manage slides, Let's see. Not there. Did he did he email? Presenter. Right. You do. Alright. This is the same problem I had. I approved it, but it didn't show up. Reload a couple times. Where's the need echo? Yeah. I I tried doing that. I'll I'll do it again. Yeah. Is that what you mean? Alright. I don't see it. Positive to our So there is a c there."
  },
  {
    "startTime": "00:50:00",
    "text": "This one angeter. Yep. Yeah. Oh, refresh. Yes. Well, this is all for John further amusements on the, fun in the transcript on how we can't get this ledger working. So what the I mean, you can you can Rohan, did you did you email it to me? No, I didn't, but it is it's showing up on the, meeting materials page separately. I know. So Did you close the browser tab and reload the page? No. That's there. You can share you can share directly from from your computer, from the slides that are on the meeting materials page. Just the k? So, anyway, I I can just talk through the first Yep. Go ahead. Do that while we're working on it. So I'm Rowan May, active in MLS and Mimi. And some top peer to talk about instant messaging use cases. On their two specific use cases that I mentioned during the boss last time. The first one is if I have an instant messaging client and I have several instant messaging client, the devices, like, I have, a phone and a desktop and a laptop. And, and I add a new client. Let's say I gonna replace my phone. I get a new phone. I don't have the key material from my old phone, phone,"
  },
  {
    "startTime": "00:52:02",
    "text": "because we don't wanna do that. That's, like, not good security practices. So I create a new client and I want to synchronize my history with my other clients. So I could do this by, by backing up my, My history, from one of my clients and then sharing between an existing client and or an old client and a new client. So 8 8 8 8 that first use cases securely sharing message history from an existing device to a new device. The second case here is I have, if group chat I think we've all been in this situation. Where we're discussing something with 3 or 4 people, and then like, oh, well, we should bring in such and such. And so we add, you know, 1 or 2 more people. And it's like, okay, let's bring you up to date here, let me copy and paste this, like, big chunk of conversation history that happened. Would be much nicer if you could just go and, like, say, okay. Bring up to date from here And you take that whole history, Granny? It sticks in in some common format. Encrypts it. And puts it somewhere and then sends the keys to that to that person, they can go and download it and decrypt it. Then they get the history. From just, you know, from only the point that the administrator said. Here you go. Okay. So what would that look like? Oh, and then, I mean, I guess you can always just say, what if I want to back up my messages That's another 3rd possible you know, not to, not to look at the sort of stupid obvious case first, but, The next slide, please. Okay. So it's a little small, but I don't know. Who is already familiar with the Vecon syntax, but the idea here was for this to"
  },
  {
    "startTime": "00:54:02",
    "text": "to be vaguely representative of that syntax. So there's a Vecon object and then there is a there's an object called a party's array. And so under that, I can have all of the parties that are represented in this particular Vecon object And I'm gonna I'm gonna flag 3 specific new not claims, new, objects, object names. That would be useful here. So the first one is under the party's list, I have a name And, In this case, you know, we're talking about instant messaging. So maybe what I want to refer to this person by as their sort of handle or their canonical username on the instant messaging system, and I could do that with a URI. And might as well use the I'm URI scheme so I can call it an IM URI. So here, Alice, with the I am URI, I am tolan@alice@example.com. And I presumably would have a list of let's say, I I think in this example, 14, 15, Different parties in this list And then I would go into the dialogue. And then the dialogue object. Would have it is an array of individual messages, and or individual, Or do you call them? Dialogue objects. So inside of the dialogue array, And some of these are standard like the start the type, the list of parties. So here in the the first the first message there. I'm gonna add one new element called the message ID because"
  },
  {
    "startTime": "00:56:01",
    "text": "Mimi says there's a message ID in the content format. And incidentally, if you look at the Mimi content format draft, these are the messages from you know, the examples, the first, 1234. 5. The first six examples in the Mimi content draft. So in this first one here, I've got the message ID. I've got that timestamp is translated into the start time the start It's tech text. Parties is the list of parties who are active in the MLS Groups. That corresponds to that room at that moment. So here I've got 0 through 12 show up in this list. The originator of this message is Party 2. This is a markdown message, and it says, hi, everyone. We just shipped release 2. Good work. And the disposition is render. Then the next message is a reply. It's got its message ID. It's time. It's a text message. The party's here, the party's array is different. So there's no the parties 4, 5, and 6, have been removed. From the group at this point, and parties 1314 have been added. The originator of this message is party number 4. And this is a reply. So we need an additional an additional field to say this is in reply to something. Again, the disposition is render. It's worked on message, and it says, right, right on, congratulations all. I can also have a like as my next message this looks very similar because this is Also, this is, Reactions are, likes are basically a a reply with a disposition of reaction,"
  },
  {
    "startTime": "00:58:01",
    "text": "and here, my MIME type is tech plane instead of text markdown because I don't need a markdown for my reactions. I have a mention, again, this is, like, all very much following the the content format draft in Mimi. These 2 are a little bit interesting. So most instant messaging systems have a concept of editing or deleting messages. And we want to preserve the the old message And when we reply, we could be replying to a specific version of a mess So the in reply the in reply to message ID that corresponds to a particular Message ID, That message could have been edited or deleted, but I'm replying to a given version of that message. In this case, this edit was a typo instead of saying right on, congratulations to y'all. He wrote, congratulations all. And so Bob corrects this. So it says, right on, relations, y'all. And then this other message here, this is actually deleted because what we're doing is we're placing the message with a body that is null. So, you know, this doesn't look like such a stretch to be able to rip set this in the vcon format. I did this in, 15 minutes in the back of the room before the for the presentation before my presentation during Jonathan's presentation, I guess, So, Yeah. What people think? do Does it seem like a reasonable use of a beacon? We got out the mic. John Jonathan. Hey, so, I'm I'm not sure it"
  },
  {
    "startTime": "01:00:00",
    "text": "a good use case for recon. I'm still trying to figure it out. One of the questions to me is like, How come you just didn't include the content format draft. Like, this almost looks like an alternative content format. What did you want for the Mimi cases to just literally send the content format exactly as it was sent in real time. That may be a question more for the for, you know, the authors of the V Con format, but What it sounds like you're proposing is that there would be a body which would have a MIME type of application dash, slash Mimi dash content, And then you would still maybe want to reproduce some of these headers, like, the start, parties originator and type Well, I guess I was coming at a little different which is, like, if you thought the right way to do these catch up and sync use cases in Mimi just forget decon for the second. Like, if you thought the best way to do that was of a sequence of content. Be me content objects, then you would actually conclude that you don't use recon for that. You because it because that's not You don't want a beacon. You want a different object. Which is a sequence of maybe content object. The only reason in my mind, you would say, oh, Vecom is better. Is because you've concluded for some reason that you want a different object format, for the these sync and catch up cases, then you do for real time and that's the part. I don't understand why you would want that. Okay. There so there are two reasons why you wouldn't do that in me. With the content format draft. The first one is administrative, and the second one is technical. The administrative reason is that History, catch up, catch up,"
  },
  {
    "startTime": "01:02:02",
    "text": "sync backups are all out of scope of Mimi. Basically you know, Mimi is supposed to be about the providers talking to the providers, and the providers really don't know, frankly, don't give a crap about happens between the client and the local provider. Which, in this cases is client to client or a client to provider. What what what what And then from a technical perspective, you're missing a little bit of information if you were gonna go store this on disk, for backups, which is the, In the mini content format, we assume that information that you got from the end to end encryption protocol is not repeated in the content format. So the MLS group in which this was sent, the sender and who the parties are, this information, is available from MLS or, you know, if you were using some other and then the encryption protocol, it would be available from that protocol. It's not available for me. The content format just doesn't have those fields. I don't Well, I mean, it know if that changes your opinion of this, but, you know we've had debate about whether some of that MLS information should anyway up in the common in format, but but I understand your point. K? K? Thank you. Damn. Any other comments on this? Yeah. Dan Dan Santline. Yeah. So, the the thing I want to point out is I I think it's it's certainly part of the the use cases that I envision where you know, a conversation may cross small modes. Right? And so I've got a I've got a mini conversation. I've got a video conference. I've got a, you know, whatever. I mean, you just think of, you know, yeah, hit a video conference in Slack, for instance, or something like that. Right. Capturing all that information."
  },
  {
    "startTime": "01:04:04",
    "text": "You know, encompasses, you know, Mimi, basically. As as a as a piece of that. And and so from that perspective, I I I think that's that's useful and it's kind of a, Super set of functionality of the you know, here's a conversation. I wanna wanna reference and catch somebody up on Yep. I'll ask when I have that in in, like, the more enterprise into messaging use cases, for example, you know, financial and health care institutions. They have logging requirements. N. If they if they wanted to go and take information and share it I think, you know, right up your alley, Jonathan, like, the the taking this information and having it in a common format would be you know, an obvious common format which to share that information. Going, going gone. Thank you. Can I ask a quick clarifying? So I'm I'm confused that if you're advocating that the constructs of Beacon should incorporate this or you really do need the formatting of me me to accomplish what you wanna do. Like, are are you saying there's missing constructs that be added or or really Mimi is so different that it needs its own format. So Let let's say know, I presented this particular this particular format with a couple of additional, you know, 1, 2, 3. 4 or 5 new fields for Beacon? If you took the approach where you were including the content,"
  },
  {
    "startTime": "01:06:04",
    "text": "format, where the where the MIME type was application /, Mimi dash content, and then the body was a binary body with that information. Then you wouldn't need the message ID, you wouldn't need the replaces, you wouldn't need the reply to message ID doesn't because you could just ignore That would just be those go away, you would still wanna have probably, like, an IM URI or some kind of identifier for the the party's the handle of the party or the username. Right. Okay. Thank you. Man, Yep. My name's Dan Petrie, from CPC. I wrote a draft, next slide. A little over a year ago, proposing a solution and, I, I'm not gonna talk too much about solution today. But I'm gonna focus on kind of some of the experiences that we've had and, things we've observed and things we've learned by having, an implementation and hack and, hack fan. We've been, at, the last 4 accidents. And we have, you know, I'm aware of this, at least one point in time, there were 4 different, implementations out there, the of the recon Katina proposed And, at least 2 of those, I think, that are still active today on on that sure what the status on the other ones, but,"
  },
  {
    "startTime": "01:08:03",
    "text": "but, just I I think we've learned a few things that I point of this year here. And, I'm not, he said, I'm not gonna talk about the draft too much. Other than just here's some additional different information that we we found learned along the way. Next slide. Longer, we we've added, you know, some additional fields. Right? Created that date updated date you know, in the last we're we're a be kind of been modified after the initial creation you know, date of, for attachment object wasn't in this back originally. Product, label for analysis objects was it was it was something we discovered along the way that was missing. The, we entity, a transfer type dialogue object, you know, and I think John alluded to, you know, their transfer cases in in contact centers. And, So, we had you know, before Johnson's draft out, we hit was out. We actually, we hit and encountered this as a is a problem is in, in, some of the cases we were trying to prototype And, so we added the the concepts of a of a transfer dialogue object to to kind of capture that, that, that information. And then, disposition was another thing that we I think that's that's come up in a couple couple different scenarios. The, The one thing that we we don't have kind of a solution yet, haven't had a chance to think but his come up is, the concept of parties aren't always known upfront. In some scenarios. You know, you know, I think originally hit the thought that I'll, you know, you know, who parties conversation and, you know, maybe you're adding more along the the way, but I hadn't thought of it, the scenario where"
  },
  {
    "startTime": "01:10:04",
    "text": "know, you know, you may have some dialogue or some recordings or whatever, and you don't know who all the parties are. Right? And, that's something you discover over time. And, that's that's what's kind of that's kind of a problem that need to spend some more time thinking about. And, seeing how we can, accommodate accommodate that. Yeah, in going on, but Next slide. Some things that we haven't, you know, that we that I, talked about in the in the draft, but haven't I don't feel had done a lot with in any kind of prototype or real world scenarios enough to to say that we we understand these these these features or or use cases or that they, you know, they they, they solve things that didn't in in the right way. But, you know, I mean, Jose works. Right? I mean, that's that's not the question here. The the the kind of the issue is you know, you know, you know, you know, you know, you know, you know, and and we've we've actually implemented, you know, using Jose for signing in vacation and and, encryption and decryption. What we haven't done is we haven't used these in kind of production environment situations. To know, you know, what are the problems of, you know, do we do we have do some additional labeling outside of that or or, know, are are there, issues the way we're we're actually doing this that may, in network and in real life scenarios. Sing And then, you know, we have these other concepts of these kind of referential of pecans where you can group pecans, you're hearing a pecans that is a parent that groups a bunch of econs or when you have assigned or encrypted be kinda and you wanna modify it, know, the the concept of having an amendment or, a redaction. I think these are, again, these, we've not implemented this in the open source."
  },
  {
    "startTime": "01:12:01",
    "text": "And we've got prototyped or anything like that. And so something I think we don't have a lot of experience yet. And kind of something that we we need to work on to, to get a better feel for for, you know, if if this approach is gonna work enough. Next slide. You know, I think the big to do, you know, for this graph right now is basically gap analysis. Right? John, yeah, they're a great, great draft you know, Brian and and Roland both have, some great use cases we not spend any time to you know, what to what? What we, you know, isn't isn't covered. And, and, to to to see that we can accommodate all that and, so that's that's kind of the the big to do for, for the for the draft. Next slide. Does Brian, do you have a question? Well, Just something that think about. I talked a lot about in our use case that we have this standardized logging service, while the standardized logging service standard standardly signs log entries, and it turns out in the environment that we're in, and we have KKI, so everybody has certs and it all works. So I start worrying about how many variations of signatures of any given object I've got and how that interwork with what's going on here, but We We're already signing lots of things And signing vcons is not a problem. It's just how many variations of the same thing am I signing? Yeah. Yeah. I mean, and then and then it's not required, right, you know, to use to be connected for it to be signed. But but, you know, if if there is a is is armament than Yeah. We need the to to take any Yeah. We always argue. We always argue in emergency services that non repudiation is an actually valuable thing have,"
  },
  {
    "startTime": "01:14:04",
    "text": "Yes. You actually did say that. Next slide. Yeah. Next next slide. And so, I guess, you know, I would love to have people kicked tires on this. Right? Give this stuff a try. You know, there's, we've got, you know, Python packages available. It's you know, a library and and, CLI. We've got a server package coming down the roads very soon. And, you know, there's a repo, but, love to have people, you know, if if there's some place opportunity to to give it a try in your, you know, industry and and your use case I I would love to, love to work with you or hear about, you know, in your experience with with with using this stuff, because it just it helps us helps us with the requirements, helps us with use cases So, It's all I had. Great. Thanks. I guess to follow-up on Brian's question for signing an encryption just to ask I noticed in the draft you you you you do that for a URL reference is that the primary thing, or it could be even things within the beacon So The oh, there there are kind of 3 things. Right? So for things that are externally reference their their their there's just, it's just the hash. Right? And and, if if there's, you know, integrity over the whole whole, becomes, then then the whole vidcon would be signed is is is the is the concept using, using Jose. Okay. Are there questions Alright. Thank you. Cool. Thank you."
  },
  {
    "startTime": "01:16:00",
    "text": "Well, we are Yeah. We're we're right on time. Actually, we're a few minutes early. We have 15 minutes what, is there, something useful we could, accomplish with our 15 minutes or are we done? Yeah. Actually, But That's fine. We're Yeah. Okay. Sorry. Sorry. The attention. It's it's Yeah. Yeah. Go ahead. Go ahead, Dan. Yeah. I guess what I would love is, I mean, I I love all these use cases, right, and So I, you know, I think they're all great. But I would love to other opinions. And, you know, I know we're not making decisions on whether whether these are you know, workgroup items or not, but I would love to hear from for imminent if we could use the last couple of minutes here to get you know, other people to stand up and say, Yeah. This is these these use cases are interesting or they're not or or whatever. I I'd love any kind of feedback that we could get from, the rest of the audience here. On on these use cases and, you know, are are we heading in the right direction? Content. Sir. I'll I'll I'll see the queue to call him. Go ahead. You're in the room. Yeah. I'll get on the queue proper. Go ahead. Alright. Alright. What I was gonna say I mean, I think these use cases are interesting. It also is pretty clear from that from the presentations, there's a a wide swath of metadata that's unique to each of these individual cases, and it would sort of be crazy to be honest to put, like, every contact center metadata field into the core vcon draft. So"
  },
  {
    "startTime": "01:18:02",
    "text": "the way the way this presentation makes you think about it is we should like, the ideal way to proceed would be to have, like, a baseline vcon format that contains the super common stuff. You know, list of segments, participant IDs, tops, you know, timestamps, are. That are, like, no brainer independent of any use case and you must have them And then to have this concept of, like, extension you know, an extensibility framework that allows for our contact center extension that adds collection of attributes you need to contact center and just to make sure the base format, it it supports naming sensibility that allows you to sort of support or not support those as a group and ignore them as a group if you understand the extension and what have then we could build separate extensions for contact center for 911 or what have you, that feels like a way that might make sense to move forward. On on the standardization activities for this. Thank you. Cody. Awesome. Thank you. I'm trying to bring this up. I've been following the standard for only 2 weeks now after Tom Howe you do it. So I operate the engineering firm for a common beer. We're actually looking to implement econ as our minimum unit of truth. Inside our network. And I think kind of following along with The last speaker, it It does make sense to tech that core common Beacon framework, and then your metadata similar to a contact center, but in different format. Wanna attach to the beacon as well. So I'm wondering is the right the right way to look an extension of a vcon format or an"
  },
  {
    "startTime": "01:20:00",
    "text": "a modification of the attached segment. That we can attach that object there instead. Thanks. We'll and we'll have to I don't think we need responses. We don't have others and stuff, but I think continuing the discussion on that particular item is gonna occupy a bunch of Email time, I hope, not meeting time. Cullen. You're up. You're up. So Colin, I I I mean, I continue to think this looks really useful. For a bunch of things. And, it's been a little bit challenging to get more people sort of involved with it, but it's right on that edge of peripheral of many other things that are going on. One thing sort of watching particularly the the Mimi content 1 made me think you know, the more we can think we're trying to bring data into this. This probably coming from existing data record that will get extended in their own way and their own protocols. So let's just Hypothetically and Mimi if there was a content draft. And then over time, it's going to get extended. How can we allow that to get extended without having to replicate all the things over here? I think that that's should be sort of a a litmus test we can use in deciding how to break things up inside of things. So I I'm I'm I'm sure I'm sort of saying same thing other people said here of, like, let's, you know, figure out how to have the the minimal super data and then point at other records of this various things. That will result in the problem of you know, phone calls have one idea of identity. Maybe it's something like a v card in in one context, and other things have the idea of what it might look like in, stir shaken as a source of identity, and I am might have a different source of it. And they're all almost the same and overlapping, but we're gonna have to pick our battles. We can either try and, you know, invent a common format across multiple types of data representing the same semantic information. Or we can choose to have multiple types"
  },
  {
    "startTime": "01:22:03",
    "text": "of the same semantic information given the context it came from. And I think that later one is probably the direction we should go. I mean, I've said that very clearly but that's looking around, see if I made any sense to anyone. So, yeah, you know, I don't know. It it it made sense to me. Yeah. Okay. Good. Okay. And then, I mean, Rowan, the the transferring, I am data from one of my devices that it made me think like that. Maybe the the least exciting application of it, but I still want exactly what you're talking but probably for things like backup, legal, you know, legal compliance. And then obviously for training, data and stuff pulling up. So, I I really like the direction of this. It's great. Thanks. Yeah. I I was try I was this is Chris. I I was thinking in the same context of we need an obstruction layer for the systems that know how process the data and new things that come in, we need that abstraction layer as well. Dan. I it's a little bit where I was gonna gonna comment. Mean, I we've got these different use cases, but I think there is overlap. Right? And not just, you know, you know, what's currently in the, in in the solution, but I think there's other additional overlap of of some of the these use cases that come forward. And but we don't always call them the same thing. Right? And so I think there's there's some work here to to say, oh, well, that's kinda what we call, you know, x is what we kind of what we call y and and and, you know, if we can find these, abstractions know, I think there is a fair amount of overlap here on on some of these things that, that that, makes sense to be in, you know, a core you know, or you know, basis functional layer. Yeah. I'm next in the queue."
  },
  {
    "startTime": "01:24:02",
    "text": "I I I do think that, the notion that we have different use cases that have different pieces of data is really useful. But the notion that we have common things across these use cases, is also useful and perhaps what we want is kind of like a two level thing where we have an extensible list of attributes with with alternate views of those attributes and then groups of attributes that you might have in an application So if if if if we we've had if we have a common notion in 2 applications, we ought to that ought to be the same thing. And even if there are different representations of it even within one application, sometimes we have different representation of the same thing. We we we might wanna have a, you know, this is kind of a multi variant view of it, but you still might wanna have a sing a single thing. If I if I know about a a participant or I might have 3 different ways of representing that participant, but that participant might occur in you know, multiple multiple use cases. So we wanna have an individual list of of of attributes have variations of how we represent that and then have groups of those attributes are common to an application. Thanks. Yeah. I think we're all sort of saying similar things here about, you know, a two layer structuring, to the thing. And it it it says a few things. One is that it becomes super useful to have early on in the process drafts that sort of indicate what are the some of the attributes that they might want even if you don't get them in the main v conspec, you look for these overlaps that Brian just talked about to maybe you decide to promote one of them into the main draft because it turns out, oh, everybody needed thing. Let's just put it in the"
  },
  {
    "startTime": "01:26:01",
    "text": "the common draft the second thing I was gonna say is it also helps you think about the baseline spec as being really focused on What is it that's mandatory to include? Right? Because that's the stuff that has to be in the baseline spec. Don't have to have everything that might be interesting. You just have to have the ones that are mandatory include anything that's not mandatory to include, then that can go on an extension spec for one of these different use cases. The the thing we have to look out for is the you know, the slippery slope for which IETF is infamous, which is, like, great thing about Stearns is we have so many of them which is you know, you end up in this case where any useful usage of econ require some permutation of these extensions and different vendors include different subsets the extensions in different econ formats and you need the econ negotiation protocol indicate which extensions you want and like, you know, we've been there We've done that many times. So we have to counterbalance it with putting enough in the in as as either mandatory to include or in the base spec so that it is pretty standalone useful. So I I think that's gonna be one of the tensions that we and the standardization effort. Anyone else wanna say something? Going once? Going twice. We give you half an hour back. Thank you. Excellent. Nice to see you, Brian. Yeah. Sorry. I couldn't be there. Was there a problem also for you that the food is just not good enough in Prague or, no, I'm kidding. And that's the It was the beer. I just can't take the beer."
  },
  {
    "startTime": "01:28:01",
    "text": "Alright. Alright. Take care, Brian. On accreditation, the first time because that virtual if the rest"
  },
  {
    "startTime": "01:30:00",
    "text": "then just just the same, okay, but good options that you select. And if I That's it. Not exactly."
  }
]
