[
  {
    "startTime": "00:00:08",
    "text": "okay uh here we go yes"
  },
  {
    "startTime": "00:02:22",
    "text": "okay okay hello everyone we're gonna get started with the presentations in just a minute so if i could get everyone to uh find a seat that would be great okay so we're going to get started we covered the note well yesterday but just as a refresher for those of you who showed up today uh everything in the hackathon and in the ietf in general falls under this note well um covers like the presentations that you'll be doing here so if you haven't familiarized yourself with it already maybe before you present um see what you're signing up to but it basically covers the ietf rules and procedures and and when you're sharing something here that that's an ietf contribution the presentation that you're sharing so the agenda we came to this point it's about two o'clock we're going to get started with the presentations"
  },
  {
    "startTime": "00:04:01",
    "text": "and um and some people have been asking about the order and the order is going to be based on the order in which they basically got put into the github repo because they're getting pulled from the github repo being pulled into meet techo and then we're gonna go through them and meet teca so uh the first one is this one because i uploaded it yesterday and they're just so they're not appearing in alphabetical order they're appearing even though they might look that way in github it's basically based on when they came in if you don't have your presentation in yet we'll be looking for it to get uploaded to github and we will try to pull it in so you'll probably be more toward the the end but you know i so i can't tell you exactly when your presentation is going to be if anyone has a a real challenge with time i know one person who does we're going to try to fit that person in at a very specific time otherwise we're going to basically go through them in order if you happen to not be here when we get to yours we'll come back again so so you know don't worry too much about that but just to make it flow smoothly we'll try to go through an order and we can try to give you a heads up too as to which one's next um you will be driving your presentation from up here just like i am now so basically we'll share your slides and then we'll give you control to drive it from this laptop and any questions about that okay i have some questions as to whether it's really going to work but we'll figure it out as we go along so far so good and i think that is it for that stuff oh yeah with your presentation just again one more reminder very quick hitting presentations these are short four minutes at the absolute most if you can do it in less that's fantastic because we have like 20 or more of these to get"
  },
  {
    "startTime": "00:06:01",
    "text": "through and we need to get through them all with the changes over and you know speaker and that within two hours so uh we'll have more time for more in-depth discussion later on and maybe i'll just pull that up now too while i'm thinking about it i think the next slide i have this is a little slow oh so this is the github repo that your slides need to be in and the longer time for presentations will be a hack demo happy hour tomorrow we'll have a whole hour when you can sign up you can be here and you can have you can talk to someone for an hour if you want about all that you did so today just try to get the the main points across okay and with that we are going to go to the um the next the first project presentation let's see so the first one i see is sdn based uh mp tcp aware uh and mp quick aware transmission control model and it keeps going but hopefully that's enough you know it's you anyone here to present that one the next one after that is bmwg but what about the sdn based mp tcp and mp quick no one here for that one okay then we'll go to the bmwg container benchmarking was that the presenter i heard coming in if if if you're remote go ahead and take the audio and let us know you're here"
  },
  {
    "startTime": "00:08:03",
    "text": "now can you get my share i i wanted to share my next hope okay so i'm sorry which person is this okay in this presentation can you guess how much i just hope i can hear you but i didn't are you the presenting the mptcp an mp quick one yeah yeah yeah yeah i i i am the sda okay now okay okay i'll advance the slides for you okay how to next next ppt next piece how to get the next piece yeah yeah yeah my my projector is sda controller help host to select the path for traffic in multi-pass we know the default transmission control mode of mptcp are mp quick in sdn only select one same path every time and not all the paths working so so we wanted to make all the paths working and they are improved with us the the good put so we want to"
  },
  {
    "startTime": "00:10:01",
    "text": "make the controller x equals trick the mpcp or mp quick package to allocate a suitable suitable path by elgo i'm i'm sorry hot forgetting next yeah yeah so yeah yeah yeah so uh so our plan is uh we can we can see the uh user one has a two parts one password is a wi-fi the other one is the firew g the other user two also has to pass wife wifi at the firewood g and the car the sdn controller is is the elgo climate uh they are [Music] so the right picture is the whole uh [Music] structure next page now now so uh we can see from the from the picture they are sdn server at the climate uh that is a quick goo or mp tcp our sdn controller is open the light next page uh we get as a result so the result is just throughout our mp quick or lp tcp using elto is a higher than without a l2 esdn especially in per network"
  },
  {
    "startTime": "00:12:00",
    "text": "why you know we we make all the paths working in sda by elto the default uh the default only y pass so this router is higher after that our test also includes ipv6 environment the surround outer is this router also higher we can get the bottom pictures next piece next what do we learned how how to use the el 2 in sdn and we get the difference between between between i ipv6 and ipv4 and also we get the difference between sdn mp quick and uh mptcp our project supports the boost both a mptcp rmp quicker next so we get the collusion our our project about three times compared to the default transition control method this is my email thank you very much okay well thank you very much for your project and for the presentation [Applause] and if anyone has any questions we do have a mic you'll have to go to the mic that's in the middle of the room if you're here in the room and wanted to ask questions those who are remote"
  },
  {
    "startTime": "00:14:01",
    "text": "you can ask questions that way okay thanks i'm going to go to the next presentation and it looks like that one is the bmwg container benchmarking yeah um i'm just i'm in a present online okay i can advance the slides for you here okay so hello everyone from the vmwg container by in photoshop and marketing so this is our hackathon presentations in itunes 104. let's try this so that was the plan for all our hackathon events the uh providers have been looking to resolve for the different considerations that we have mentioned in our draft so it's all about uh masking container level performance with the various developers acceleration model and different configuration settings next slide please so what we've done so far is that we have a provide the marketing result for sake user space magnetic with srov and a combined model with iov and vdp we also done some we're looking we saw with different configuration with new map hps and cv chains so based on the lead on the right side what's the left is the epf access model so exactly what we focus on this hacker next id so we implement the epf association model using the af hdb and obvs dpdk d switch so for the package transmission between the nic card and display we use af hdp with a new socket available from linux kernel greater than 480 and that uh fsdp allow a touch evpl program in the xdp hook as"
  },
  {
    "startTime": "00:16:02",
    "text": "a canonic driver to transmit packaged user play and by passing the connector stack to associate to accelerate the packet changes in performance and for the packaging mission we can use the spraying container we use ovdk with af hdb supported version so this one allows us to create af hdb port to promote promote the promote driver to point the packet from the atp socket and for champions packet from the restrict to the dpdk port we use a rehost user let's try this so these are mamakin tesla so is the same with our previous hackathon so we use intel the card until twenty point zero four for the newest kernel and the eu mantis uh cni for profile multiple interface for the core and for support of atpk we use a user space cni next cyclist so this is the configuration necessary so about the results so we observed that the oes af adp had a pretty much similar result with osdbtk but uh significantly lower behind sr iov and ddp so we think that's the results like at the v host user and virtual pmd path between the container and the v3 which is the same result that's why obviously decay lower performance than vdp so we think that uh if we can uh sdp with the pvp which is a one that support and mimic interface then the performance will be similar with the necessary so uh in our upcoming hackathon so we want to continue to explore the result of the memory result of ebpf assassin model so we consider three"
  },
  {
    "startTime": "00:18:01",
    "text": "variations the first one is the ax atp with the vpp then the cloud native data plane the cndp which is a new cloud native is a spray framework developer intel just first released in april look into the fctp and bep and uh the third one is a civilian and evc based cni so the difference between the three is at the package jameson rail between hdb socket and containers and how the traffic is handing in eastward direction next slide please so this is a quick summary about the difference between these three open source so with the vp-hdb it uses a memory interface with cnn 3c ndp is you and unique kubernetes plugin for the port to use a network d5 from the nikon and the cdm is using the cm library let's try this the difference between this is traffic so with the v6 and we have the v6 rather traffic with the cndp they develop their own user spray network stack on synapse and with the ceiling the packet from in eastward traffic we provide using the ebpa program in the socket layer let's try this so this is our team members our github drivers history thank you for listening okay thank you very much [Applause] do we have any questions i don't see any in the room okay go to the next one and andrew i see you're here you're okay we may not have it ready then uh let me see if it's in here you'd be probably the last one is it this i don't know that's if you wouldn't know"
  },
  {
    "startTime": "00:20:00",
    "text": "okay yep we're gonna go ahead and uh we'll get it up there and we'll work you in once we can we'll go to the next presentation uh the cozi oh tea cozy sorry i left out an important part there okay sorry go ahead yes hi uh lawrence uh lemblade and this is uh we're working on key cozy tea cozy is a is a an implementation of cozy in c um t is for trusted cozy but we have a little tea cattle too um it's uh uh cos a is you know a format for seaboard-based format for encrypting and signing uh data objects it's used by uh for a number of other things um so t cozy is uh it's a small embedded c library commercial quality so uh i guess about three months ago there was only t cozy 1.0 that supported sign one which is only allows you to sign data with one signer one public key we're in the process of making t cosi 2.0 which lets you sign with multiple signers lets you encrypt with a single encrypter encrypt with multiple encrypters and then it also supports mac with um a single uh single key and uh as you can kind of see we made some progress on it here at the hackathon uh you know we're not finished but we"
  },
  {
    "startTime": "00:22:00",
    "text": "kind of you know made our way down the line a little bit on on that so that's all i have to say it's a it's in github is t thank you [Applause] all right thank you let's see so next up is a p4 implementation and emulation of msg6 is that a presenter in the room or if you're remote just go ahead and unmute yourself yes we can okay okay now let's go good afternoon ladies and gentlemen it's my good pleasure to make a presentation here to share my project with you this slide shows our hackathon plan the plan consists of two parts the people implementation of msr6be and the emulations based on intel tofino switches some related documents are listed below here is a schematic of the msrbe that enables the source indicating the explicit duplication of multicast and functionally implements beer to transport multicast traffic in a scalable manner uh an msrp package implicates the msr hydra with the multicast bit strain in it and each bit in the bit string represents a receiver as shown in the figure so how does a multicast b string works"
  },
  {
    "startTime": "00:24:02",
    "text": "we introduce the principle of rjp which means replication through global between as a new type of activities destination options uh header using the code point of non mpls via header rgb is used to identify the replication endpoint and realize the function of beer we implicate the demos based on p4 and conduct some simulations based on hardware people switches here shows some realized functions as the figures show the rgb option is encapsulated and decapitated according to the ipv6 destination address figure 3 shows the function of eift and the figure 4 educates the forwarding and the copying of these strings the emulation setup consists of two hosts two v4 switches and one ipv6 switch here will distance so our hardware equipment next i will show our results it can be seen from the results that the msr6 pe is valid in explicit of least depletion and forwarding and it is compatible with ipv6 forwarding in processing latency duplication and the encapsulation of rtb often costs 318 and 315 nano 100 seconds respectively well we've learned 2 million works in the next product the one is the implement of msr6te with p4 and the other is definitely deploying the simulation on finally if you have some interest or puzzles about the demo or any others"
  },
  {
    "startTime": "00:26:02",
    "text": "just connect us so that's all thanks for listening and hope to see you again great well thank you very much for your presentation [Applause] i don't see any questions in the room i don't hear any so i'm gonna go ahead and go to the next one which looks like it is alto fts okay great just work the slides using that so hello i'm matthew i'm here on behalf of the also working group uh from yale and in this hypatia we were focused on optimizing large-scale global data transfer for scientific networks uh so also uh working group has started to work with a scientific data transfer stack from the early days of 2022. so in uh hackathon 130 we are focused on uh integrating also with true seo which is a data transfer to a scientific data transfer application but here in 114 we have decided to dig deeper into another level which is fts and schedule the transport uh and we have uh built it as results because after talking with like fda through ceo design teams and also analyzing the behaviors of russia and fts uh uh mainly to give the rationale because"
  },
  {
    "startTime": "00:28:01",
    "text": "uh fts controller architecture is like a robust uh they use lightweight uh but and also universally accessible control and knobs to to control the behavior of scientific data transfer but they have like two uh main problems the first one is efficiency of optimal usage of resources and the second one is resource control and that's mainly because they use uh some semi-gradient algorithm that is only taking into account the uh single local data transfer uh so we have devised another stack a controller stack which we call a transfer control network uh transport control networking and has three main components the first one is three of three also in the picture uh and is a zero zero order optimal gradient algorithm that we have devised and implemented in isekata and the last the latter one is tree control that we were focused on the second one on that too and uh is aggregating the the aggregated information from alto to enable uh global resource control so these are the algorithm and schema of the algorithm that is given in that slide but given the time level uh no talk about them and so or bowling to the in this hackathon were to implement uh a prototype of the three alto and three control components that i previously talked about uh these are the rfcs that are that are involved in this segaton mainly the abstract network element and pass vector behaviors of also are considered in this project so this is the first input of our system one interesting behavior of the system is that uh the three also part is enabled to integrate network information"
  },
  {
    "startTime": "00:30:00",
    "text": "from multi-domains uh namely the network domain one an internet work domain are two in this uh in this slide uh more information are uh given in that slide that is available in the github page but they are basically the implementation of pass vector and cost matrix uh properties of alto protocol given this we were able to implement a universal zero order great algorithm that is enabled to achieve optimality and resource control at the same time so at the top of the page you can see how we were configuring the bandwidth uh usage of each pipe uh in tcn either with absolute bandwidth limits or relative bandwidth limits and on the bottom part you can see that or tcn optimizer can achieve optimality and also can limit the bandwidth usage of single connections at the same time which is unfortunately fts optimizer itself is not capable of uh so to wrap up also we have implemented a prototype of tcn optimizer and integrated that of it fts in this hackathon this is the very beginning of our collaboration with our fts rusio and scientific data transfer transfer group and uh toward itf 10115 we want to integrate this system at larger scale without collaborators at san diego super current computing center and also esnet and finally thank you all for your attention [Applause] okay"
  },
  {
    "startTime": "00:32:02",
    "text": "okay the next one is uh lpwan uh sdhc good afternoon everybody um so the lp1 working group has been um working at igfa caton for about five years now and for the most recent editions we've been developing an open source implementation of the check header compression protocol so lp1 is a working group interested in transporting ipv6 and ib based protocol stacks over very constrained networks such as sig fox larwan and those called low bar wide array networks which have a payload of in the order of tens of bytes and they trades in the order of hundreds of bits per second so we have two rfcs already out 8724 8824 and we are developing an open source implementation trying to help the implementers interested and come to grasp with the technology easily so and we also have continuing drafts which are mentioned here um so what we did is uh doing a few bug fixes in in the code itself and also in the data model the young data model that we're just completing the draft for um and integrating that model checking"
  },
  {
    "startTime": "00:34:01",
    "text": "into the the code and we've also been working on validating the whole protocol the whole suite software suite on the macos environment and the last bullet point is we are writing an easy to read documentation use user manual for the open source code if you will and we've been rewriting that very extensively during this weekend um so what are the outcomes we have running code and we have a manual to help people use that code and i think it's worth mentioning that the laura laura alliance which is an industrial alliance developing the lorawan protocol has committed to use our open source implementation as a reference implementation for device certification for the optional ipv6 or r1 technology which draws on the rfcs that i've mentioned before that's it for me thank you for your attention [Applause] yeah it's been uh been fun to watch the progress of this uh project wiki jack-a-thon okay next up what do we have uh i2nsf this is another one we've had the benefit of seeing from one hackathon to the next and how it develops thank you hello everyone uh this is uh jim porjang from sku"
  },
  {
    "startTime": "00:36:12",
    "text": "okay good so this is the poster for itunes sf so basically uh this time our itunes team demonstrated the feasibility of it nsf data rep especially this time we completed the implementation of a security policy translator or internet based networking so this figure shows the architecture of security policy translator so alternative user is network security of the mutual writer it gives a high-level security policy such as some regulation of access in company or some enterprise so the high level policy you can see uh given to security policy uh security uh police translator so first of all it extract data from high-level policy xml file and then convert a high-level data into loadable data using nsf nsf stands for network security function and then it can generate the policy generator based on p young buying so we can generate the loadable policy so this table shows the mapping between high level young such as consumer phase interface data model attribute map to nsf facing is a low level security"
  },
  {
    "startTime": "00:38:01",
    "text": "policy so basically we can uh matching two data model attributes using uh the zhang cha-cha algorithm basically we can measure the distance to a passes for young tree and that we can match each uh the attribute from young tree so the detail uh part uh can be uh explained in our draft please the protocol draft so basically you can see this is the high level security policy such as during uh work time such as the employee okay cannot access sms websites such as instagram youtube during a work time so the basic idea is uh we want to make high level data into relatable data so basically this left-hand side there is a high-level policy data especially sns employees will be converted into specific ip addresses and then sns website will be converted into specific urls such as pace blue instagram uh something like that in the middle we have a natural security function um we'll provide the specific network sql functions associated fiber and replicator or something like that so using um security provisioning service using decision tree machine learning we can figure out which nsf can be used for this security policy service next um and then uh using this procedure we can translate the high-level skill policy into lower-level security follows xml file like this so the previously we have one xml file for the web access regulation so it turns out that"
  },
  {
    "startTime": "00:40:00",
    "text": "we can generate the two uh parts uh part one is for five words and second one is uh web filter so you can see employee uh converted into ip addresses and also using web filter the website such as facebook instagram can be translated like that so the interesting is that we can um so we provide itunes step we uh highlight the policy as the consumer phase interface low level policies nsfx interface young module so given to this security policy uh gen uh policy translator so we can automatically a map attribute without any invention of the other mutilator and then xml file high-level policy will be translated into reliable policy automatically so i think this is a very uh the interesting feature so we demonstrated automatic translation uh between high-level young data model into low level data model okay so we can take advantage of our work for other area so next step uh we try to enhance our concept for intensive based networking ibm maybe uh ibm can be uh take advantage of nmrg okay nato management research group so they can take advantage of our work and also our itunes staff try to enhance the next step using a closed-loop security uh system for feedback control and then also we implement our itunes system on top of a lightweight cloud native system such as kubernetes okay so that's it and the next next one"
  },
  {
    "startTime": "00:42:00",
    "text": "is ip wave can i present here all right we're having a bit of a network uh difficulty here all right you seem to have dropped the meteco session okay all right i'm gonna try leaving and coming back and see if that uh if that does it no it looks like we've crashed"
  },
  {
    "startTime": "00:44:12",
    "text": "i don't know if the network's working for anyone else but uh it's not working up here anymore i can hear you it's not even coming back up it can't get into meet techo at all but i think it's a network issue we don't have a way to connect ethernet here anyways i think i have one in my bag i'm just trying uh dropping the wi-fi and re-logging in so let's just see if that helps what does the miteko robot still show up as being in that oh wait now it's working came back we had to anyways let's see if this works"
  },
  {
    "startTime": "00:46:13",
    "text": "you okay and i have to remove okay so you have one other one that's it yeah okay okay thank you sorry so uh hello again uh this is a projean from skq so from now on i will explain um ip wave hackathon project so the basically this hackasm project we want to demonstrate the feasibility of a heterogeneous networking such as ieee wave lt 11 ocb mode and 3gpp lte module 4 so it is called the shiv attacks so you can see the middle speakers can communicate with each other using a wave or a c blue text protocol ip wave we i have individual draft it's called the context aware uh navigation protocol cmp so basically cnp uh provides two messages one is uh corporation context message for on a normal driving condition and certain accidents happen over some driving"
  },
  {
    "startTime": "00:48:01",
    "text": "hazard uh in front of a beaker so emergency context message ecm can be generated and disseminated all vehicles to protect the vehicles okay avoid accident so we tested the code using distance of i triple 11 ocv it is called the wave the wireless access in vehicle environment and also the 3gpp v2x protocol such as cgpp lte model 4. so multiple is for a p2x protocol mode so basically we demonstrated our um tech awesome project using omnipres plus for networking uh simulator and sumo is the speaker or mobility monitor we combined using baines architecture so you can see the beakers moving and in highway scenario so we implemented on top of the base for elta 11 ocb we implemented the logical link layer combine the wave i uh to the level ocb and simulatex so the challenge is how to integrate so let me show you the protocol stack here so left hand side is the 3gpp protocol stack so you can see 5z retex over on the lte mode 4 protocol stack and right side we have a web protocol stack so on top of that so we have a logical link layer so we can power the some metal layer packet to tcp ip layer or non ipv layer such as w smp wave source message protocol stack so we implemented"
  },
  {
    "startTime": "00:50:01",
    "text": "the protocol convergence for this hackathon project so we showed the feasibility so i think the wave and the 5g void tracks or lte multiple can be combined together so we can provide the vehicle driving safety so we have open source project so you can access github using this link you can download so this is collaboration work with the sunshield university and the kyongsung university so my students are bien me junhi and thank you for listening [Applause] hey thank you and sorry for those technical difficulties but hopefully smooth sailing now okay don't look and see we got andrews andrew are you still here okay come on up just not fast okay thank you our team was focused on extension header testing and in particular for the doh which was containing pdm information a little brief information about pdm it's got some great information about network management information and session information for ipv6 sessions really valuable to network operators we think but the catch is we use extension headers to transmit that information and there's been some concern and some studies that show that a lot of extension headers are getting dropped in the internet"
  },
  {
    "startTime": "00:52:01",
    "text": "so we've been doing a lot of testing and focused on is that true and where and when and why what we've done is open this up and use actual data real sessions real information in pdm and do testing all around the world and we've used applications such as ftp sites such as toronto to mumbai and we put this through the test and done a lot of tracing and here's some of the tracing results you can see where the blue arrow is that the pdm data is in there and it did make the transition in some cases we had multiple extension headers in this case it's fragmentation and pdm and the bottom line is all this is working and now i'm going to turn it over to subsequent presenters to give you the details on where when and why and how anthony thanks all um yeah so we obviously tested ftp um we obviously we're testing with um vms from a plain old vm provider not your average tier one like your aws ovh rackspace because we wanted to avoid things like overlay networks which could you know hide this and because it's one network and we also did testing from this ietf network this morning just to prove you know what it's not just vm networks it's normal networks as well um and we also in the tracing that was going over multiple providers we had transit networks in clay and we obviously this is all running on vms with bsd11 we've got a kernel patch that does all that pdm injections and we saw it in all the scenarios including in those fragmentation headers and if you look at the vm to the vm top left is the the request the bottom right is the response"
  },
  {
    "startTime": "00:54:01",
    "text": "and if we looked at the itf network we even got it here if you look closely enough you'll see that the response ip is the same subnet as here today and [Music] look it gets over the internet but we're only scratching the surface as we started digging into this and andrew will mention a bit more when we tried to break the rfcs it started suggesting we've got some security issues that we need to investigate so there's a lot more work to be done and this is the wrap up quick because the point is that in order to implement security you don't have to have or well you want to minimize unexpected behavior so we are not saying that it is right to drop the uh the extension error we don't say that it's right to let them pass through unexpectedly but we might we must have some we have some work to do actually in order to define where the problem is and what are the best course of action because as it is the problem is it involves everybody us because well we are not clear the implementation the user and a lot of security issues can erase from that what we are proposing actually to work on a bcp basically outlining uh what are the assumption of extension errors and not all of them but what have to be outlined in rfcs uh how they should be treated how we should actually test them or what are the what we expect from them actually because they can be extremely valuable for not"
  },
  {
    "startTime": "00:56:02",
    "text": "only what we was working on the performance metrics but for everything and but we must make use of them in the right way so basically that we already have some possible mitigations but we don't want to talk about the mitigations before analyzing the problem it will be too early but just saying we can have roughly either let them pass without considering them encrypting authenticating because sometimes it's a matter of being sure that the actual accenture are right and basically andrew floor to you okay i'm gonna i'm gonna skip slides and just give you a very quick overview of what i did to do some testing on this um i wrote some code here so we decided that the destination option stuff as they said we could get that to work pretty much anywhere but what about hop by hop extension headers this was really interesting so what i did was i decided to violate 8200 entirely take our firewall code base and modify it to say that if it's a v6 packet the v6 packet is an mtu of 1200 or less because i didn't want to run into fragment fragmentation issues i would slap a random extension header on there be a hop by hop or destination option and send it out across the internet and see what broken what didn't destination options no problem got everywhere this network and this is from my house in kenya i've i've re-routed that over about six different transit providers absolutely no issues the hop i hop was far more interesting what i found with the hop by hop is not that it was being filtered on the internet in general but that it was actually the routers"
  },
  {
    "startTime": "00:58:01",
    "text": "behind which my test boxes were sitting that were dropping it without even being told to now the question and the problem that arises with that is we don't know what the state of filtering on the internet is because i could have a bug in the router code that i've got or the vendors could have gone well we can't handle this on the slow path so as a result we're going to throw away these packets for now but either situation is subject to change it's not the behavior that was expected in the rfcs that does create a really big security issue because you've got operators out there who are operating on an assumption that stuff is being filtered we can't say that for sure and in every test that we did we found that it's more common that it's actually being dropped without any filters being specified either because of bugs in vendor code or because they've deliberately chosen to drop it because of not being able to handle the slow path we're not sure which and so yeah that was just a little bit of code that we wrote and i'm quite happy to talk to anybody about that i'm around and yeah it was an interesting test but what it does show is don't rely on the fact that your hbh is being filtered do rely on the fact that your destination option stuff probably isn't being faulted plan your security accordingly thanks guys [Applause] i know we don't have any time for questions but come and see us in the back left we need all the help we can get thank you so i have a just a sort of a little announcement the knock was in here we were looking at why the wi-fi is so messed up i guess somebody has like a google nest hotspot or something um just letting you know that maybe the power is too high on it or you know whatever but it's it's what's screwing"
  },
  {
    "startTime": "01:00:00",
    "text": "up the wi-fi in here okay thanks for that detective work and if you think you might be responsible for that maybe uh unplug something or reboot it take it off okay so let me go back up here where are we we are mask mass connect ipv so my name is westerlund i so representing the mask table over there we try to implement connect ip so we have already some running implementations of udp tunneling over quick but we're now focused on the ip parts and the goal was trying to reach interoperability that's we do think both implemented the protocol mechanisms etc but we didn't reach interrupt because we all struggled with actually getting the packets in and out of the tunnels i think that was the primary problems here [Music] so and i think to launch a little bit more preparation at least from my perspective from me and marcus we if we looked into this maybe prepared some of our cloud environment maybe we could have multiple interfaces in the cloud and things like that that our default policies wouldn't allow so there's some preparation stuff that we could have done better um but i also think that's really the lessons here about issues around more the environment than"
  },
  {
    "startTime": "01:02:01",
    "text": "the actual implementation so and the people from ericsson google is on the list here and the draft github if you want to contribute to the draft so yeah thank you [Applause] great thank you for that and next up uh v-con okay hi i'm dan petrie um and uh before i start i'm gonna take a few gratuitous minutes to uh explain what what a v-con is i i apologize we didn't get our draft done in time for uh for this itf but it'll it'll be there in in for london so you may ask what's a v con vcon is a standard container for conversations all right next question is what's a conversation well a conversation could be a a sms chat exchange it could be an email thread it could be a two-way call on the pstn could be a a multi-party call with audio and video on uh zoom or google meet or whatever um and so it may be a combination of those things you may start in one media and move on to another um and so uh what we're proposing here is a standard container for conversational data you know we have things like you know call detail records we have you know standard containers for the media for a conversation but we don't have a container for everything and so we we think of the conversation of econ as having four parts"
  },
  {
    "startTime": "01:04:00",
    "text": "the metadata uh you know who what where when uh things that you might have in a call detail record the dialogue or the actual media that was exchanged in the conversation text audio video and you know you may have real time or post conversational analysis a transcript a translation a sentiment analysis and you may have uh some documents that were exchanged as part of the conversation as well you know maybe a presentation that was it was put on uh in in in your google me conversation or uh an nda that was signed in the context of that conversation or whatever so what we'd like to see is is a conte standard container for all of these things uh which are all components of your conversation and and so then you may ask well why do i want to do that well it really makes integration of services much easier i can provide a a much easier way to to provide translation transcription services sentiment analysis services um a uh a vcon becomes a a nice tool for analysis of of of conversations you know if i'm a call center and i want to analyze um you know how my agents are doing or if maybe one of the agents has got a problematic headset and uh you might be able to detect that you know that the the customers can't can't hear them um you know a v con becomes a an asset for uh you know a uh a call center that is uh you know doing cold call kyle dialing maybe they create a v con and uh sell that v con to a a sales person or a sales uh service to to uh is a hot lead right um it's uh robot food right uh for uh machine learning and analysis so uh having a standard container uh really enables a lot of"
  },
  {
    "startTime": "01:06:00",
    "text": "services and capabilities and so this is this is what kind of we're we're looking to achieve with with uh with econ um so uh we we already uh have a draft that's in progress we didn't get it done in time it's 70 80 percent there um we're we're working on that in parallel we have an open source implementation we uh wanted to implement uh encryption decryption because there's certainly there's privacy concerns over the contents of of a of a v con uh and we had the idea to create a uh a conserver a uh conversation server which is a kind of a uh a wrestling pad for storing decons or whatever so those are our ideas for uh for the the hackathon here um what we actually got done we we used uh jose encryption as a means for encrypting the the kind become is a json container we had the birth of our of our conserver um and uh along the way we were you know using some of these tools we uh uh with the open source we were able to generate some uh encryption examples for the id that we're still still working on um the id is is online the code is online um and uh what'd we learn well we found some bugs you know going through examples you know helps and we found some bugs in our code no issues with the draft yet because it's not done uh other than that we're filling in more of that um kind of um if you're going through in in applying uh jose for both signing and encryption we kind of feel like we want to reduce the the algorithms that need to be supported uh for v con to just kind of reduce the the the the coding requirements"
  },
  {
    "startTime": "01:08:00",
    "text": "um you know we came up with no work group issues we don't have work yet so that's uh stuff in progress um he had we had a couple two remote uh uh people working on on the project and as i said uh we're on github and please contact me if you're if you're interested i want to know more or want to participate thanks [Applause] all right and when you do uh submit that draft make sure you also add the additional information of related implementations so we we have a link to that i want to see more of that uh dns sec bootstrapping yep hi i'm peter from the esec and um at the dns table we've been working on um dnsec bootstrapping stuff um so i'll tell you quickly what it's about so we were working on implementations of the draft that is listed here and the idea is or or the the problem that the draft tackles is if you have dnssec for a dns zone you can sign it but then you also need to put the trust anchor in the parent zone and the protocol proposes how to do that automatically and there is an implementation site for the parent and one for the zone operator itself for the child zone and we were working on automation for the second part so the protocol requires that you publish a copy of the zone's cds and cdnsq records at a subdomain of the nameserver hostname itself so for example if the zone is example.co.uk and"
  },
  {
    "startTime": "01:10:00",
    "text": "the name server is ns1.desec.io you would have to provision this record that's listed here as an example it has an underscore ds boot prefix and then there is an intermediate label underscore signal and also the child zone name and the name several hostname are encoded in this record owner name and then on the right hand side the value of the record is the same one as in the child zone and you can use that to do validation um as long as you don't have a chain of trust to the target zone yet because you can have one to the name server host name if that already does have dnsec but there's no automation so far so the hackathon plan was to automatically generate these records and we were thinking about how to do this one can either write scripts and run ground jobs periodically for example um or synthesize these records dynamically in the authoritative name server software which would require touching code from let's say powerdns or not dns or bind and then whenever that service is queried for such a record it would go and look at the target zone and then you know get it and sign it with the corresponding keys and all that so um what got done so we first agreed on conceptual questions especially what kind of configuration would be needed and we agreed that it would be good to expose only minimal configuration to the administrator of the dns server in particular and we agreed that if a zone like for example here the underscore signal dot ns1 you know that name server zone is tagged in the name server as a bootstrapping signaling zone then the agreement was that this enabled synthesis of these records for all zones managed on this name server so we don't have any particular sub configuration we figured that's easiest and has no harm then we wrote code and we got some code running that's really cool i think very good result for for the hackathon in fact my expectations have been over satisfied so"
  },
  {
    "startTime": "01:12:00",
    "text": "we got some code written for a crown job that's deported sultan.net and it consumes a catalog zone which is another new dns feature and from that it extracts a list of zones that the name server is authoritative for fetches the bootstrapping records and creates the bootstrapping zone so there is a link into the gitlab repo that has this code and also at the esac which is a managed essay hosting platform we were working we were working on synthesizing these records in powerdns um and it's also gone in production today i think around lunchtime when the deployment was done there's the pull request here also in github um we also worked on integrating this natively into not dns but it's going to take a little longer until that's finished so that's in the works the techniques used were for the chrome jobs in python script for powerdns implementation lua records which allow you to run code um while processing a query and for not dns it was a c module for for the server software um we learned that it's pretty straightforward um to implement this um i was more skeptical in the beginning and we learned some things about lua and learned that it's good to have people at the table who know how to use lua um we had an unexpected insight in a protocol detail which is um i guess i'll skip over it here um i guess most people aren't so familiar with it but for us it was very insightful we can discuss later if you want um and overall the protocol seems pretty workable in practice um i have a short video um about 22 seconds um i will allow myself to what is it possible to to start it here okay um so i will try full screen now play okay i will first say what you're seeing and before i start playing okay um i'll let you do that maybe not"
  },
  {
    "startTime": "01:14:01",
    "text": "actually there's probably a way i don't know how to okay it's not very interesting so there's two terminals i mean i can describe it and it's probably more interesting when you see a human describing things and making jokes and mistakes anyway um so there's a terminal at the top which runs an api command at the dsec a dns operator which creates a zone and that automatically also creates the unessec keypair at the bottom we're querying these records that we're looking for um to provision automatically in the beginning there is a dnessic proof of non-existence because it doesn't exist yet then the video would start you would see how the domain is created when we hit this command in the command line you get the output you see confirmation it's confirmed then you wait only about 15 seconds until um on the secondary server you will see that these records have been provisioned automatically thanks to the lua script that is running on the server now so this is roughly what the video has and you can check it out if you go to the itf 114 hackathon look at the source code of this html file and dig out the url um so that's the wrap up um team members were john who's an itf hackathon first timer he worked he wrote the crown job script and deployed it on his servers um also niels is the first timer at the hackathon at least and he worked with jerry on the power dns lua scripting synthesis thing and i've been working on the nuts dns thank you [Applause] okay great thank you and what we have next we have so this one just says ietf hackathon has the date on it july 24th"
  },
  {
    "startTime": "01:16:05",
    "text": "sorry what would you say about i'm just gonna go to the uh one uh one tax api while i figure out what that other one is you come up for the one tax co2 i don't is is it this one i don't see co2 okay that's this one what's this one okay hi so i'm just going to be very short we implemented a few functionalities one of them is um we introduced the the way uh uk is computing co2 for flights according to distance and destinations and um we also dockerize the service it's a student remotely did that and so everything is on the web page you can check everything thank you [Applause] all these are on the github in addition to being in the data tracker now so you'll be able to find them okay uh one tax api do i have a presenter here for that or online can you hear me yes i can now uh just let me know i can uh drive this actually who um who is this presenting uh so this is benson muyte ben"
  },
  {
    "startTime": "01:18:03",
    "text": "i guess i put my name at the end rather than at the beginning sorry um okay i'll just drive the slides for you great thank you so next slide please okay so aim was to look at a slightly new programming language here and this is being implemented as a systems programming language that's supposed to be relatively stable uh once it's finished and uh there's efforts to add encryption to it and many of these encryption protocols are described in rfcs so next slide um so basically looked at what issues were there uh two things that look like should be added are restrato which is currently in the last call and asgcm siv um which has been published but not being implemented in here and guess what got done is adding conformance tests for ed25519 um so next slide um so there's a guest paper from about two years ago where they suggested some further tests that are needed and they examined a number of different implementations of ed25519 and they found that for these corner cases the library implementation basically don't agree um they made some other suggestions that would improve it as well but at this point i just looked at the tests and the line at the top is the new one looking at the hair implementation so i guess it also doesn't seem to agree even though it was based on tweet nacl um so next slide uh"
  },
  {
    "startTime": "01:20:01",
    "text": "so what i kind of learned um so there's some curves that have been partly implemented in here they need more testing and validation um the tests came from this paper by chalkies gary lowe and nikolineko who also suggest improvements that would allow for applications in contract signing electronic voting and transactions um and their test vectors should i guess my suggestions that probably the chest vectors should be added to rfc or made a supplement um just so that implementations uh [Music] that do comply with the rfc uh can be said to comply in these in these coordinate cases next slide so thank you for your attention um there's a very good javascript implementation which i did not have much time to look at but that also has a restractor which might be a good starting point for the rust version of that thank you okay thank you benson if you have any questions all right the next one uh code sprint presentation so as always the plan with the codesprint is to improve the tools that are used to make the iatf work"
  },
  {
    "startTime": "01:22:01",
    "text": "in particular the data tracker and xml rfc we've been doing this since ietf 70. so um if you find that you there's some little thing that annoys you about how one of these tools works fix it and so we actually got a fair amount of things done we got 24 data tracker pull requests closing 13 tickets seven commits against the xml rc fixing six tickets here's the list of the 18 people who participated some local long table on the side some remote [Music] there's the links where you can find the code if you're interested you can of course continue to work at any time and there's a mail list for tools discussions if uh if you want to discuss anything the way anything works and why so that's really all there was to it thanks [Applause] great thank you that's exciting all the functionality that's and stuff that's been done with the data tracker lately including the related implementations i'll mention that about 10 times okay ipwave we did that one drip interrupt"
  },
  {
    "startTime": "01:24:06",
    "text": "hi i'm tim messer this is adam whitaker and we are here on behalf of the drone remote id protocol working group we're gonna do a lot of swapping here um so the drip working group's main objective is to bring safety and security into unmanned aircraft specifically for remote identification um but also kind of tie a little bit into uh utm which is on uas traffic management the drip protocol accomplishes this by generating cryptographically verifiable remote ids registering them into the dns and enabling correlation of these remote ids with operator with operator and aircraft data in a privacy preserving manner so for the hackathon we have the challenge of a lot of uas is closed source and we have a closed source broadcaster implementation and a structure of a dns and registry system so we wanted to bring the two of them together during the hackathon and for the two days we accomplished actually doing a live registration of a session id through a puck public information lookups using that session id using dns authenticated looks ups of non-um public information using that session id and then we found a lot of shortcomings in our proposal in the rfcs and we have plans to go forward that we're going to be proposing to the working group tomorrow monday a second session on how to improve and if this video works we were able to film a live demo it does not look like it's going to work all right so what the demo would have demonstrated is we have a"
  },
  {
    "startTime": "01:26:02",
    "text": "drone simulation running in microsoft air sim we have that plugged into a software in the loop version of px4 and we have that plugged into cue ground control and we have those mavlink packets from q ground control routing to a puck implementation which allows for backwards compatibility with existing drone hardware that poc is broadcasting using the drip protocol it is being picked up by the two phones that you see one of the phones is unauthenticated and is able to obtain relevant public session information the other phone is authenticated that enables it to obtain serial number information associated with that session thank you and we'll be at the hack demo happy hour where i'll be doing this live for the whole hour i'll keep generating session ids and registering them over and over and over again and hopefully it doesn't break thank you [Applause] all right and a good reminder to other people too to sign up for hack demo happy hour all right l4s all right good afternoon everyone so i'm greg white with cablelabs and joined by a number of the other champions uh for this project i hear vidi and well from apple be presenting part of this as well um so this project is taking up the front five tables in the corner here as well as uh with racks of equipment in the in hidden"
  },
  {
    "startTime": "01:28:01",
    "text": "in the back there and to some degree this is a hackathon project there is some hacking going on but it's also the first interoperability event for l4s that has taken place in the world um l4s if you're not familiar is the way advance low latency low loss scalable throughput architecture for congestion control and congestion signaling in the internet it's defined by three drafts which just finished ietf last call so hopefully we'll be seeing those published as rfcs fairly soon as well as one draft that describes how the congestion feedback works for tcp implementations and that's that one is still in progress there are three components to the l4s architecture and make it work you have got the congestion control of the sender you've got congestion marking in the bottleneck link along the path and then you've got marking feedback that's coming from the receiver back to the sender and we've got implementations of all of those here today and actually um our plan is not um to uh to finish today um we're actually um planning going all the way through the end of the day on tuesday um there's a fair amount of setup involved in getting all this networking gear here we actually started yesterday afternoon or friday afternoon uh getting things set up um and yesterday most of that was really debugging the network getting everything going uh we've got some initial results to share with you guys today tomorrow at the tsb working group session we'll have an update with uh additional things that we found and then again continuing through tuesday with additional testing in terms of the implementations that we have here um so on the congestion control side on the sender side we've got five different implementations uh"
  },
  {
    "startTime": "01:30:00",
    "text": "from different uh companies and organizations um on the receiver side the marking feedback piece again we have five different implementations there these are quick as well as tcp as well as some proprietary udp implementations on the bottleneck link piece we have seven different implementations that we're testing uh four of them are what we call low latency docsis which is a version of the docsis protocol which supports the l4s functionality for that we have two cable modem implementations and two cmts implementations um we also have a couple of wi-fi access points that implement l4s and then a network emulator from nokia that can emulate a 5g ran six of those seven bottlenecks implement the dual queue coupled aqm draft that that i had on the earlier slide one of them implements an l4s aware fq scheduler and aqm in terms of what we've tested so far in terms of interoperability this is a list i possibly complete maybe not complete uh a set of things have been tested so far but different congestion controllers different bottleneck links different uh receivers um trying to work our way through to the full list and in terms of results i'll hand over to a video talk about these thank you craig so we did some testing using the docsis implementation from casa as well as comscope and we did some testing for upstream as well as downstream traffic this one shows the classic results for the classic uh traffic for upstream i remember if i remember"
  },
  {
    "startTime": "01:32:00",
    "text": "correctly this is done with casa and it shows um it shows basically what we see with the classic condition control which is cubic and you can see the highlighted uh box where we show the pdv stats where p99 is 30 millisecond and p99.9 is 125 milliseconds so there's a lot of delay variation which means there's a lot of jitter as well for the classic and if you look at the l4s upstream uh this is again with casa and but this uses our l4s conduction controller and the low latency queue instead of the classic queue and the pdb stats again if you look at p99 it's 9 millisecond and p99.9 is 10.3 milliseconds so there is a huge improvement or i should say a huge reduction in the latency for l4s as compared to classic uh please note that for for the sorry for the docsis implementation there's you know there's this request grand delay which is basically the minimum delay that some packets always see so it's not that the p99 being nine millisecond not all of it is queuing delay some of it is the base delay or the request grain delay moving on to the downstream testing uh this one i think we did with comm scope we did with casa as well but this result is with comscope and if you look at the classic again the p99 is 55 and 99.9 is 96 for classic traffic there's a huge delay variation for for classic and if you look at l4s the variation is much smaller it's under 2 milliseconds for p99"
  },
  {
    "startTime": "01:34:02",
    "text": "so these are our results for l4s downstream and upstream traffic comparing the classic queue um and i just want to thank everyone helping with the testing a lot of people sitting on those five tables that greg mentioned have helped with testing and setting up the network doing metrics and measurements these are our the participating organizations and these are all the members who have been working really hard to to make this possible during the itf hackathon thank you [Applause] okay great thank you and a good example of how projects can uh continue and you continue to work here over the week as part of the code lounge which this will turn into and so we did this one so i think we are done is there is there anyone with a presentation that we skipped over anyone online who was expecting to present and we didn't get to you okay great so thanks to everyone for for keeping your presentations not only uh super informative but uh but also relatively short so that we were able to get through them all mentioned a few times we have a you know"
  },
  {
    "startTime": "01:36:01",
    "text": "a couple more things after this we have the hack demo happy hour a few of you have have already signed up um if you look on the the wiki the hackathon wiki you'll see um right underneath the agenda it mentions the hack demo happy hour and there's a link to you know reserve space for for your table uh please do that as soon as possible if you plan on joining us there and uh the deadline to sign up is by noon because we need time to set up the room and make sure we have enough space enough tables and and that time of stuff that type of stuff kind of typical happy hour there'll be a little bit of uh things to nibble on and then there'll be a cash bar there if you're interested in getting drinks and i think there will be some free sodas and water and that type of thing too and that will be in this same room any questions about that okay and then i also mentioned the code lounge so uh hack demo happy hours just for that one hour but this area will essentially turn into the lounge for the iatf meeting and there's a portion of it that will be kind of um signed off as being for the code lounge it'll probably be up here so that it'll be close to the equipment i would imagine but in any case you can also there's a sign up sheet there and that's just for your own reference and to let other people know as to when you plan to be here so i saw the l4s they already signed up at the times they planned to be here and that's great others are free to be here there can be more than one team here at any one time that's actually a good thing because then you have multiple teams that can work together so feel free to take advantage of that too and uh just one more shout out to our our sponsor cnn nick there's various sponsorship levels for the hackathon and so we're always"
  },
  {
    "startTime": "01:38:01",
    "text": "looking for and hoping to get more more sponsors so if you have uh if you can consider doing that that would be great and thanks to cnn nick for for sponsoring us again [Applause] and then uh you know thanks thanks to uh thanks to all of you for um participating in the hackathon for working with us uh through some of the glitches too um you know this is every time i think there's something new that that we try this time the integration the slides with me techo had some really nice benefits to it um those many of you may have interacted with barry he's he's in the back there kind of silently making sure that uh thank you barry that [Applause] he's my co-chair at the hackathon and making sure that you know everyone got added to the github organization that your slides got uploaded there and that they then got into meet techo and then the muteco team was of course great and the knock team working with us on the network so realize that all this happens the the weekend before the ietf meetings really starting so a lot of stuff not only your projects but really the whole ietf network everything's getting set up and the fact that we're able to pull this off and have things be as stable and work as well as they are is really a phenomenal and a tribute to the noc team and meet techo and the whole ams staff so it's a really fantastic um and then we're always looking for people to help us make the hackathon better so you can share your ideas with me and barry if you have more than just ideas but you actually want to help us join our team so that we can work on the hackathon together and maybe you can be up here doing the presentations running the presentations next time uh that'd be great too so uh talk to me talk to barry"
  },
  {
    "startTime": "01:40:01",
    "text": "about that we'd love to hear from you we'd love your help and with that we we are done the next uh hackathon uh will be in london and um we'll try to make sure we have plenty of uh space and a good setup for all you there so start planning now i hope it's possible for you to join us in person again and uh in any case save the date it'll be the weekend at the start of the ietf meeting so mark that in your calendars and and start making your plans now well thank you all please uh have a a great and safe iatf week [Applause] by the way there is a mask up here that uh just uh that someone may have left so if you're missing a mask come up here and grab it okay stop"
  },
  {
    "startTime": "01:43:12",
    "text": "foreign you"
  }
]
