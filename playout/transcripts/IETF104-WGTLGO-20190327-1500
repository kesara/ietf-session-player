[
  {
    "startTime": "00:00:10",
    "text": "it\u0027s not the contouring so it\u0027s actually a good time [Music] so we\u0027re gonna start in couple minutes we have a contest who can say that better how many ways can you say that I\u0027m gonna try and say we got Lego you can still talk for another minute then and if this turns out to be we got Lego blame very Levi III put the I put this "
  },
  {
    "startTime": "00:03:13",
    "text": "slide up talking to him about it and he said he said he pronounced it that way within seconds he has a gift man think I as a gift okay we\u0027re going to get started welcome you to the technology deep dive on spherical rubbers 40 plane realities and implications for protocol designers and we are at least for now working on whether we have consensus to pronounce it as we got Lego I\u0027m Spencer dawkins this is the lovely alvaro available Karen to my left and we will be your host for the next what hour and 55 minutes or something like that oh I already said hi and everyone shut up so I\u0027m not going to say I\u0027ll say hello as well and so this is a IETF activity so we put the note well slide and trust that people have read it and then they will make the choices so we had this as our agenda and bashing it is okay just to do administrivia and like we said so the pronunciation is we got Lego for until we come up with a better one it stands for we got the last good one because Warren said all the good ones are taken with Cindy asking for an acronym and I said oh no we got the last "
  },
  {
    "startTime": "00:06:15",
    "text": "good one it\u0027s gonna be like this the whole afternoon guys have fun so we did the know well we\u0027re willing to bash the agenda you know wouldn\u0027t talk for a few minutes about what we do at a technology deep dive I\u0027m gonna talk for a few minutes about spherical routers smart people about 40 playing realities we\u0027re going to talk about forwarding plane realities could be frank john and taurus we\u0027re going to be summarizing implications for protocol designers and this is the part that i want everybody to go into this with the right mindset this is a working session it\u0027s not tutorial it\u0027s a working session so we we hope to all come out of here smarter than we came in not just not just some of us and we want to talk a little bit about the next steps for the summary of implications for this topic and we want to talk about next steps for technology if you dives on other topics and we\u0027ll be bringing up our sponsor URI director the lovely warrant for that though we got Lego etherpad and jabber room or in the usual places and you can find those most easily probably from the ITF agenda in the data tracker for links where are we yeah so when we start talking about doing this we were saying first assume a spherical router with it zero gravity in zero degrees temperature this is basically the you know these simplifying assumptions that people make that help them do math we\u0027ve hit spherical cows at the ITF for a very long time this is actually Heather\u0027s company and and group you can see the spherical calendar business cards saying Moo but this is now spherical rubbers some routers really are spherical thing we made one at least one and if you\u0027re going to be encountering spherical routers and everything that you do on the internet your problems are solved and you can go to have more unstructured time but if yours isn\u0027t we\u0027re hoping that what we do today may be a view sport to you so how we got here in the first place so Jon\u0027s gutter gave a well-received talk or not a router design at the Internet engineering planning group to a small audience in 2015 on Sunday mornings is when that group meets and the other thing that\u0027s been going on is people assuming a spherical router they we say they exist but most routers are spherical and what that really means is the too many working groups encounter a contentious cross area or late IETF last call issues most recently if you\u0027ve been involved in less called and balloting discussions about draft that was using ipv6 "
  },
  {
    "startTime": "00:09:17",
    "text": "extension hitters in a kind of an interesting way but there\u0027s others and you know these are late surprises for too many working groups so we were hoping to do better one and I thought a technology team that I might be useful like I said in another tutorial people understand how routers work in general what we\u0027re talking about is a cross area working session on a complex topic so I started recruiting people to help with a deep dive on mother router sign and that morphed of course it always does at the IETF and here we are now what we\u0027re hoping for a technology deep dives we to complain about unstructured time the working group chairs complained about unstructured time during the working group chair session on Tuesday the community will complain of the IHG about construction time at the whiz day plenary open mic in just a couple of hours and you are here somewhere in the middle so I would encourage you to aim those comments where they are most likely to be received well so if we\u0027re not doing a tutorial what are we doing and you know we are doing and Lauren maybe used the word information-sharing but he was the one that actually said oh great could speak on a complex cause area topic do they have open discussions to understand the world from each other\u0027s viewpoints and to clear the air about some things that a lot of people may be confused about and not particularly from one community together this is the part where you\u0027re doing work figure out what the implications are for protocol designers together figure out what if anything we should do is to follow on to the second to the activity that we\u0027re going to be doing for the next little bit here this is the classic picture what I think we\u0027re talking about we\u0027re a bunch of blindfolded people are grabbing pieces of an elephant and they know very clearly what they\u0027ve got ahold of but they don\u0027t know that they\u0027ve got ahold of an elephant and so I say this is the classic picture and it kind of see it kind of does a better description of what we\u0027re talking about here then I could possibly do in words I think we\u0027re to the forwarding plane realities and Frank JAMA and tourists to come on up and take the field if that\u0027s okay and thank you all for for serving the community in this way "
  },
  {
    "startTime": "00:12:33",
    "text": "apparently I I walked up too fast so I get to be the Stuckey so so this used to have a more grandiose title sorry better [Music] alright so those of you who who looked at your agendas early in the week might have made the mistake of coming in here thinking that we were going to talk about you know some kind of vision for the future and you know what what routers for the 22nd century are going to be and actually because I think the title was modern router architectures or something like that but but it turns out that that title was more in the sense of my undergraduate class on modern literature which meant 19th century literature so so what this is really like it is really about is what what routers are when they aren\u0027t general-purpose computers so if that\u0027s not what you were here for you can quietly make your way to the back now and if you don\u0027t then I\u0027ll assume that this is what you\u0027re here for this is yeah this sort of came out of that IEP G deck that I gave five years ago sort of updated by the three of us and I think a lot of it turned out to still be relevant to today but you\u0027ll see seems that in places and that\u0027s because of course it\u0027s a design by committee so we you know start out by talking a little bit about what\u0027s a what\u0027s a taxonomy of how we build routers oh and one sort of disclaimer I want to throw in right at the beginning and by the way if you guys yeah you got a mic too so whatever but at various points in the in the deck I think we talk about things like you know high performance routers large routers and so on it turns out that most routers now are high performance routers you know according to this definition because of you know economic realities and and that kind of thing we dive into focusing on one particular flavor affording architecture which is a very relevant for affording architecture and end up kind of spitballing on what are some things that protocol designers should know and at various points in the past evidently happened because oh and I should also add one more thing which is that I do not design chips I am a software guy and I you know you can think of me as like a sock puppet operated by a remote guy who actually does design chips and helped craft the "
  },
  {
    "startTime": "00:15:34",
    "text": "original slide deck and his his name is in the fine print there it\u0027s only in fine print because we took his deck and butchered it but and I\u0027m sure there are people in this room right now who know more about designing router hardware than I do and I hope that you\u0027ll come up to the mic at will and I think we\u0027re you know there\u0027s no requests to hold questions for the end necessarily you know we\u0027re big boys and if you bring up a topic and we want you to hold it for later we\u0027ll ask you to but otherwise please if we can have it be interactive that would be nice so we\u0027ve all we all know this we\u0027ve all heard this but it only applies you know good fast cheap pick to it only applies on my stuff right on on your stuff I want you to have all of it and this is you know kind of if we can come away with just one understanding from from the next hour or whatever it is it\u0027s that yeah this this applies to you to your router hardware also there is an so I wanted to maybe start before getting into you know the the details we want to talk about for most of the presentation to give a little bit an overview of you know what we may consider to be the landscape of the different realities of router platforms that we have today primarily also to you know make sure that is understood that we can\u0027t talk about everything so if we start in this picture traditional new you know the original routers maybe in the 70s or so were starting to be just general-purpose CPUs that has survived over the decades has expanded itself very much maybe starting in the 90s by you know having additional CPUs not only one CPU that does everything you like you know you design your next generation network service let\u0027s call it multicast on a Sun workstation the beginning of the 90s but you basically started to have CPUs that we\u0027re doing forwarding plane separately from those two in control plane and then every line card getting CPU rights CPU was staying there then you know later on it became less favorable and you know in the last ten years I think we\u0027ve seen a lot of revival of CPU forwarding through a lot of x86 virtualization nfe in data centers associated with a lot of even open source packages that allow you to accelerate this and leverage you know the capabilities of them these systems have a lot of interesting properties primarily they\u0027re normally an ideal world for protocol designers because they are pretty much you know the more general they are you know the less you know constraints you have by oh they have different line cards and so on they "
  },
  {
    "startTime": "00:18:36",
    "text": "become fairly spherical and that\u0027s very often what in the past protocol designers expected all routers to be and obviously you know the more you look through the landscape the less that\u0027s true the main issue I think for them is you have all the flexibility but you have really no way to predict performance so whenever we\u0027ve been trying to you know predict for particularly deployment the performance of a combination of all type of features and the forwarding plane well you know it just gotta measure it right because it\u0027s so flexible specifically for the aisle for for the IETF I think what\u0027s interesting is that in the low end like let\u0027s say in the IOT space CPU forwarding routers are pretty much the only game in town 8-bit 16-bit 32-bit CPUs that\u0027s kind of the range to which they go embedded devices small memory routers there are a lot of you know IETF working groups that work with routers in that space and also because they have the flexibility of this almost spherical router they\u0027re they basically can design protocol solutions that we have really a hard time you know to scale up to a higher platform so my typical example is the wonderful source routing header that was done in the role working group for Ripple low-end you know took us a long time to get to that point as well let\u0027s say with SRP 6 in you know higher end routers and that\u0027s because you know CPU lot more flexible faster to get to the protocol stage that you want so then actually you know the next step that happened in the 90s was really heart we\u0027re switching the most cost optimized you know chips that you can build for a purpose no flexibility but rather you put the RFP that says it must do this protocol let\u0027s call it ipv4 Ethernet switching please basically for the following speed built a chip that is as cheap as possible obviously that\u0027s a very good reason to not have flexibility and in many networks right you\u0027re basically designed upfront mission specific networks and you know never going to be extended never going to change control plane very simple and that\u0027s basically been you know still truth until today and I think that\u0027s not going to go away and I think that part of the equation is still the most difficult one for us in the ITF to build new protocols for primarily you know it\u0027s a matter of you know business case right if basically what you\u0027re trying to achieve and solve as the use case with your new solution in the ITF is if it\u0027s big enough somebody will build you a dedicated device to do this example of this actually you know I Triple E and friends kind of these you know layer to type of standards bodies they\u0027re much more centric to that approach insofar as that when they\u0027re designing protocols they very much have exactly that centric type of switches mostly even if it\u0027s a router in mind and they basically in many cases they\u0027ll dedicated Asics for that right if if you need some form of flexibility maybe you add an FPGA that gives you some degree of you know programmability "
  },
  {
    "startTime": "00:21:36",
    "text": "but that\u0027s very hard very hard to extend and and only done in exception cases but so that\u0027s basically the opposite end of the spectrum and then basically we have what we want to concentrate on for today\u0027s session and that\u0027s what you know as the common term maybe multi stage programmable forwarding there are a lot of varieties that\u0027s what John and as are going to talk more about for the rest of the presentation that basically you know from very long instruction word to basically you know execution elements that almost look like a small CPUs over to a lot of hardware acceleration coupled them and that\u0027s the type of hardware that we\u0027re seeing now all the way through the network distribution core data center a lot of differences in the different spaces still right because you\u0027re still these market segments are all large enough to validate you know individual chip designs we\u0027ll see how that is more going forward in the future one I think very interesting aspect that came out of the data center was kind of the idea to make the consumption model of the chip in the forwarding plane somewhat more open right because if you look at it CPU forwarding yes everybody could program routing a nice dual program routing on CPUs almost nobody can do that you know on the fixed forwarding Asics in layer 2 layer 3 switching on the right-hand side and in the middle it\u0027s also very hard been traditionally to get access to any type of program ability of the forwarding plane other than maybe you know establishing 5 type of forwarding entries as the best thing of something like open floor so but that\u0027s not what I would consider programmability and so the question was always you know how can people outside of the core vendors get into programming of these multistage programming forwarding entries and so P 4 was one of those you know today probably as a programming most successful ways to attempt opening up that programming to other players I think it has certainly been very successful in the research world because you know a lot of researchers have started that are doing you know networking to consider you know trying to prototype their forwarding play notes and before and therefore be more exposed to the limitations of what an actual forwarding plane has not ideally but a lot better if you as if you were just starting to build forwarding plane let\u0027s say for Linux kernel or something like that or DP DK right so that\u0027s basically I think a very interesting aspect for the future maybe even when you\u0027re doing things on the protocol side that\u0027s associated with certain things in the forwarding plane you know how do you want a prototype that forwarding plane if you\u0027re not one of the vendors so what else do we have there in this bucket so beside what existing details they were doing I think at the end of the presentation I\u0027m going "
  },
  {
    "startTime": "00:24:36",
    "text": "to talk a little bit more about that I think in this space there is a lot of good work that could be done for more intelligent forwarding planes and I think you know two of these areas that are very important in my opinion but that are you know even at the at the edge of what the the forwarding plane into you could do is programmable qsr I think that\u0027s very hard and then the telemetry as well that Frank has done a lot for and in general you know chip building has become a lot easier in the last ten years right so I mean if you just look at the total number of startups that are building dedicated chips and they\u0027re throwing just all the possible execution elements together right whether it is you know oh let\u0027s put some CPU cores some you know accelerators some NPU some oh oh a is also important let\u0027s put an inference accelerator to do some more logic in there DSP to even do more statistics for IOM and what you have and so I think it\u0027s very hard to predict in which market segment we\u0027re going to see which evolution of you know the current four-wheeling scheme so always keep eyes open so then the other part that I wanted to mention is that beside the forwarding plane that we\u0027re going to take talk for the rest of the presentation about there also is the port forward it the the poor control plane right so the I wanted to call this the reference router from hell and everything you could do wrong on this space here but a little bit too afraid to write that down but I think most people won\u0027t understand high-level you have your control plane and you have your memory in there there\u0027s some CPUs there then you basically have these magic forwarding chips that are doing things and they\u0027ll also have a lot of or maybe not memory T commentry on and off chip that\u0027s going to be talked about in the presentation a lot more but a lot of my experience in the past with protocol designs weren\u0027t necessarily only the oh we just designed the next forward in shape what did you want to do oh no sorry it just came two weeks too late please wait another four years for the next ship revision we\u0027re doing I\u0027m talking purely about the thing like Oh only had five watts left in our one kilowatt box so the CPU is going to be extremely slow and by the way it\u0027s going to be eight core so if you haven\u0027t multi-threaded it it\u0027s only going to be an eighth of the performance that you get in your control planes if you but don\u0027t worry that you can\u0027t calculate routing tables fast enough because you won\u0027t be able to install them fast into the router right because we\u0027ve basically used the serial port down into the forwarding plane and oh by the way it has ten line cards so if you want to send to ten line cards it\u0027s even ten times slower right so the router from hell obviously I haven\u0027t luckily found a single router that has all of these problems but trust me you know each of okay notice your report admittedly but something similarly slow um so that\u0027s the problem over all right that "
  },
  {
    "startTime": "00:27:37",
    "text": "basically trying to for example have more money in a router spent on the control plane when you build the box is something very hard to argue because at the gist of it the real metrics and I had that on the previous slide is really what data plane throughput do you need and then basically you know how much does it cost per bit as far as buying the box the size of the box and how much power goes through the box right and so that\u0027s that\u0027s why always in in the majority of box designs the poor control plane part of the solution is a way on the back end burner and in many cases it might actually better to you know start buying routers that don\u0027t have the control plane and basically could connect a fast PC with a hundred gigabit port to it and use that as a high-performing control plane router just from past experiences so um what\u0027s anything else I wanted to say from this I think this was good enough so let me pass back here to John so now I\u0027ll say all the same things only I\u0027ll say them way slower and with more slides so exactly so yeah sure let\u0027s just showed his his router from hell and that\u0027s pretty much the the reference model and you know again everybody you know builds routers with more or less the same functional blocks you\u0027ve got you know a functional block for your control plane you\u0027ve got to have a way to get the packets from the gazette a--\u0027s and get them over to the COS outa\u0027s and that\u0027s your fabric and you know sometimes it\u0027s a real fabric and sometimes it\u0027s shared memory but there\u0027s there has to be some way to move the packets around and then you know there\u0027s the packet forwarding logic itself so you know call it a packet forwarding engine or whatever you like which is actually the the thing that does the does the lookups does the queuing does the buffering and so on and you know it as we already you know lead with it you know that sort of spans the whole range of flexibility from completely programmable to completely set in silicon a slightly different picture of the same thing and I think you know the thing to emphasize here is that yeah you\u0027ve got all the functions in the box which makes it kind of attractive to think okay look I\u0027ve got a nice you know general purpose CPU over there on the left and I\u0027ve even got another one over there on the right and so I can really do everything and it\u0027s true you really can do everything as long as you don\u0027t mind taking you know something like a two order of magnitude hit in performance every time you cross one of "
  },
  {
    "startTime": "00:30:37",
    "text": "those domain boundaries or maybe worse I don\u0027t think I\u0027m to say a whole lot about the fabric based architectures there\u0027s an interconnect so yeah packet forwarding engines like I said are the the things that do the the work to figure out what to do with your packets right they they you know do they analyze the packet they do the lookups they take care of the buffering they take care of you know they be simple or complicated queuing that you want to do and they you know again the the programming model can can run the gamut and really you know a lot of what\u0027s coming up here is there is no new thing under the Sun we only know a certain number of ways to build computers and a certain number of ways to make them fast and you know it\u0027s sort of clock scores you know how fast you get to your memory maybe you only have a certain amount of space on your die I guess final bullet right do we I I\u0027m not going to focus we\u0027re not going to focus on like is this all one chip is this multiple chips you know again there\u0027s this is sort of general computer system design and and not unique to routers it\u0027s attractive for all kinds of reasons to put everything on one chip if you can and sometimes you can and sometimes you can\u0027t so there\u0027s you know our cartoony reference model of of what these things are same thing you know put on two axes also cartoon acts is not to scale where your general-purpose compute engine is you know all the way off the top on flexibility but it\u0027s you know jack of all trades master of none and by the way why did you want a floating-point unit in your router anyway why are you buying those gates and probably never using them and you know all the way over on the other side is you know the thing that\u0027s completely set in silicon or you know more likely is the the multi-stage thing that\u0027s somewhat programmable but the stages are you know really separate Hardware units and god help you if you forget that that\u0027s still okay um right I I we\u0027ve we\u0027ve we sorted these several times so um yeah right so I think the first bullet has been sufficiently belaboured but you know so what are the kinds of trade-offs that that we\u0027re making when we when we put these things together this is an example "
  },
  {
    "startTime": "00:33:39",
    "text": "trade-off but in my mind anyway is maybe the most critical one because it\u0027s a thing that gets baked in and then you really can\u0027t change it once you\u0027ve taped out the router and then you know if you and that this will be repeated with with more pictures in a few slides but typically when you\u0027re forwarding a packet you\u0027ve got you know some number of bytes of key data that go you know up towards the forwarding chip and everything else that was in the packet ends up in RAM and it\u0027s really really expensive to get to in terms of of clocks on that forwarding chip if you can get to it at all and of course as with all system designs the the trick is to be as inflexible as you can while still being able to do everything you have to do and the problem is that when when you\u0027re building hardware if you guess wrong your guesses lasts a long time I\u0027m sure there are people in this room that can you know tell us horror stories about you know just how old the oldest router in their network is it\u0027s probably very old now because routers you know the high-end router of today gets moved into the you know some other application tomorrow and they just keep living and living so why do that tour was spoke to that earlier because of power efficiency because of volumetric efficiency the the you know 500 million to a billion is probably now this was originally presented four years ago and hasn\u0027t been that number hasn\u0027t been updated but the sort of two orders of magnitude thing I alluded to earlier is probably still about right okay well I care and that gets back to the you know what motivated this both to begin with well just because of the the economics of building these things these architectures are you know not only in use they\u0027re from for my keyhole at least their use is becoming more not less ubiquitous because you can buy a you know $200 box or whatever that has quite a capable forwarding chip in it but it\u0027s the reason it\u0027s capable is because exactly because it\u0027s not a you know it\u0027s it\u0027s it\u0027s making the trade-off of getting higher density or more forwarding speed at the cost of being less flexible and less programmable and experience has demonstrated that certain protocol characteristics even though they look great on a white board and look even great in a C compiler or virtual machine they don\u0027t look so great "
  },
  {
    "startTime": "00:36:41",
    "text": "at all running on a on a forwarding chip all right I think I\u0027d like to go on baseline the thing even a little further so some really motherhood and apple pie trade-offs so we have a piece of real estate as our chip right our dye and it up it is up to us how we want to go and utilize that piece of real estate so you have a set of gates you can use these gates to do forwarding you can use these gates to count what you\u0027re doing you can use these gates to store stuff but you can\u0027t use one gate for all of that so we have to go and choose and you can say well I want more that means you need to go and draw your real estate but if you grow your real estate you yield because well there is a waiver and there\u0027s defects on the waiver so that drives costs like crazy which is why chips have a certain size and one of the the fundamental things that well we need to go and care about is power right and you can say well there is dynamic power and dynamic power is the product of say frequency capacitation and well your voltage to the square plus some activation or time some activation factor that\u0027s the dynamic part of that but as we kind of started to hit the limits of Dennard scaling but also men people started to go and package things so you can\u0027t shrink the gate anymore so you started to go and pile things on top of each other and you\u0027re just going denser and that means also that static power is a significant concern these days right so the the denser we pack the more static power ie leakage we have that we have to go and deal with and that\u0027s just the tip the stuff that you push into the system also needs to go out of the system again and that is cooling and I remember one of our routers a little while back I think we spent more power on the fans than on actually driving bits in the system just because we had to bend the air three times as it passed through the system now that you have the air outside the system you need big yellow well cool it down again and that\u0027s okay if you may have a single router it\u0027s not so okay if you have many routers in a relatively constrained environment like if you\u0027re a data center so against something to take care of unless we always want to go and put a power plant next to a datacenter which is what people do right so if I am a data center person my my design constraints from an "
  },
  {
    "startTime": "00:39:41",
    "text": "optimization perspective will be very different than I\u0027m just operating one corridor despite the fact that I have this recurring cost off-off-off power that and you spend anyways the other thing is as I said earlier on like is memory and where do I spend my money on if I want to go and well spend space on on the die if I\u0027m a service provider Percy I want fast convergence and a large routing tables so I want really rapid updates that\u0027s what what tourist was referring to earlier on and so I want the memory on chip if I put the memory on chip I can\u0027t put other gates for forwarding on ships so it might gonna go and compromise on the bandwidth side or packet processing side but I have all the memory I\u0027m ship you can argue then maybe I don\u0027t want that then I go off chip and put the memory off chip but then I\u0027m spending connectors that I could use for customer interfaces to go and go off chip to the memory again a trade off and well if somebody\u0027s asking me for well i ideally I want memory at the speed of l1 cache for everything but that doesn\u0027t exist right and so the further you go away the more you pay for going away problem and then also I think can we it\u0027s 2019 by now do we really need hierarchical queuing all the way we needed a twenty years ago because if my broadband home connection is one gig I don\u0027t really care about that qsr configuration on my router anymore it\u0027s just works right do we need to go and built that really into the system against spent gates on hierarchical settling well maybe we can go design around that the other thing is stats and there\u0027s earlier right so a couple of key guys around back to packet processing and that\u0027s just 8 X 86 set together and set we want better stats on VPP and then Allah chimed in and Dave Barak out of the key guy for VPP you invented the whole chimed in and said what should I go do should I go and collect stats or do you want me to forward packets I want both know so I can either spend a cycle on collecting something or I\u0027m spending cycles on forwarding something and so yeah I think they came up with an architecture that allows for rapid collection of stats but well there is a price that you pay and the question is also how often do you want to go and collect that and in many systems yeah you can poll the system every say one to three seconds but it\u0027s all the same because heart were only updates the "
  },
  {
    "startTime": "00:42:42",
    "text": "counter every 30 seconds and that\u0027s the trade-off and what you see in core routing is we\u0027re doing that right off of you go fast you have shitloads of table and and memory but you might compromise on the statistics that you gather because again you can\u0027t have it all if you want ultimate stats then you might want to go and compromise somewhere else and people build dedicated machinery to go and do top talkers and whatever but again we pay for that with either less memory on chip or less 14 tacit e so there is trade-offs and I just put some examples from classic SP where we\u0027ve been optimizing around fit table sizes stats flexibility qsr buffering so there is a shitload of memory on the chip arranged in eventually hire a case but we said well we don\u0027t deploy to many of these systems so we\u0027re okay to go and maybe not go that optimal on power whereas in the data center environment on the right hand side it\u0027s all around power and bandwidth and speed and these guys eventually don\u0027t even want large buffers because large buffers mean delay do they have large routing tables eventually not and what we see right now is kind of more people trying to play in the center of that so that you can go and sell the same box to multiple people all at the same time and kind of yeah deal with our trade off but at earlier conversation today which was exact and can we have it all yeah would be nice but that\u0027s the spherical thing that we might not get maybe from Spencer John I think you\u0027re gonna go take us a little bit through why pipelines yeah so yeah here\u0027s the cartoon that I promised earlier about a pipeline forwarding architecture and it\u0027s you know like I said it\u0027s a cartoon and the important piece of takeaway here is that when a packet comes in some of it goes north and some of it goes south and you know the two really only meet when you get to the the output port so so you\u0027ve got your your first end bites they go up towards the forwarding complex you\u0027ve got the rest of you know your your whole thing goes into your you know large pile of cheap ram you know you you buffer it towards your egress and maybe you do another look up on the egress and it goes back out onto the wire the header you\u0027re those those first end bites get processed you have oh you know some large number of stages and potentially a large number of cores each one of which "
  },
  {
    "startTime": "00:45:42",
    "text": "has a large number of stages when you\u0027re scheduling all these cores it\u0027s really nice to be able to to complete you know the forwarding tasks in deterministic time which means that doing looping and and things like that is undesirable and notably when your headers get too big that it drives real cost because you know then you know you you really are that that all is l1 cache and you know if you tell me that I need to have twice as much l1 cache well Frank just talked about that on the other hand the data goes through Ram which looks a lot like commodity Ram and acts a lot like it too and is slow like it too so I think compared to four years ago when this was written probably a lot more people are used to thinking about pipelines because you can\u0027t turn around without I mean everybody all of you have like you know 16 cores that you\u0027re reading your email on right now and you can\u0027t do anything unless you think about how to break a task down so you know very much so in packet forwarding what you want to do is you you want to break down the forwarding tasks into a bunch of pipeline stages each one of which ideally provides its output to the next one and you know moves on to the next packet and you know of course you can make these things arbitrarily complex but see previous discussion and yeah basically anywhere anytime that you have to make a decision in one of these pipeline stages or you don\u0027t know how many times you\u0027re going to have to recur that has some again real cost of forwarding time come to your point writes the last one if you have one label that can have multiple meanings so you need to do another lookup if you do that reconsider that right so that\u0027s I think one of these these things where you give these guys a really hard time yeah exactly right um Thanks okay so yeah things that are things that are fully programmed are slow things that are fully set in silicon are fast but yeah this may pretty much reiterate previous slides Frank well I "
  },
  {
    "startTime": "00:48:42",
    "text": "think it\u0027s an iteration of what we had before right so do we have to go and drill into that again I think I know when don\u0027t let go past at times yeah so I think this is worth spending a few minutes on though which is that typically there\u0027s a fixed header vocabulary so you know at some point early on in the pipeline you\u0027ve got a thing that that knows how to crack the header up into you know it\u0027s fields and you know so and they\u0027re they\u0027re you know built to existing protocols of course so as protocols that that you know look like existing protocols are great as long as they sort of have semantics like existing protocols and I think we come back to this again a little bit later yeah so yeah I think the only point I want to make to this one is that it\u0027s it\u0027s frustrating sometimes too and and I\u0027ve been frustrated by being on the other end of this conversation to say oh I\u0027ve got this great idea of you know something that I can do in the forwarding plane and and to hear oh well that will work because your router fubar you know won\u0027t do it and sometimes the answer is right it\u0027s like you know take you know if if we\u0027re out of food were I can\u0027t do that maybe it\u0027s time to take all those drag them to the dumpster and replace um you know you idiot but there\u0027s also this this this large category of things where it\u0027s like no that\u0027s the wrong answer because either you know that wasn\u0027t a design error that was a you know informed trade-off and you\u0027re gonna find a lot more characteristics just like that in the market and by the way they\u0027re not going to go away because if you want that you know limitation to go away you want to be able to access you know infinitely deep into the packet you\u0027re gonna have to pay more than or not you but everybody else in the whole entire world is going to have to pay more than they turn out to be willing to pay you know that\u0027s again in and when I say pay I mean in terms of currency of course but I also mean in terms of you know power heat etc etc etc okay so so that\u0027s this sort of setup and this is again before we go there oh boy this was a big dumb Danberg language by the way and to be honest I was thinking and to say where we where should we start it\u0027s one of the promise that we have is that our control plane are coming with restrictions because of our system "
  },
  {
    "startTime": "00:51:43",
    "text": "architecture if we could solve some stuff in the control plane we would not need some of the characteristics in the hardware for example if you would have a good control plane that we\u0027ll be doing you know good traffic engineering you don\u0027t need as the buffers you can save that space you know for other functionalities instead of the buffers so then the other part is how the vendors are organizing the packet forwarding in fixed ways where there are some flexibility because it ties to their business models that is another problem where they are not willing to reuse the same trips that give it to the developers that they can organize the tables dynamically based on the applications that you want to run so you have the capability to size the memory in different you know in tables but in inside the ASIC in in different sizes that you need but none of the vendors are really willing to expose that unless you\u0027re working directly with the ACF render and you have the access to those api so that would be also in those some of the things that could help you I bet that sounds more like a business problem than an architectural problem well so it\u0027s a little bit of both because there they are restricting you because of the business problem but you you have a hard time pushing it for speaking from first experience working for a major vendor so that\u0027s you know that in in the past sewed so that it\u0027s a little bit that also has to be locked into it I think some of the constraints still apply right so I agree there somehow apply but because you have an end stage pipeline and your processing requires n plus-1 stages there is no way in hell we can fit that and equally well if you want to have unless you Lisa Ritter yeah that we we pass along with the instruction through the purloined I agree we do there are some trade-offs you need more memory to best pass through the pipeline I can\u0027t pass it through then what do you do right it\u0027s a hard constraint I agree that there are some certain where you cannot do more but we could do more with what we have today when we didn\u0027t have some of those which are mainly business restrictions imposed on to us so on some of those Airport yeah so that\u0027s and so I think you\u0027re saying that like not all smart people are the ones who are sitting inside the vendors and have access to which is B people don\u0027t really shut you down and saying no because we cannot sell this it will lower our revenue it will literally come to that whisker menu quantify forever you\u0027re coming with the new protocol designs may heavily impact the cost as a heart good I do agree use "
  },
  {
    "startTime": "00:54:46",
    "text": "the context of the pipeline architecture design however for various our mothers in restrict your forwarding that your forwarding plane it\u0027s a network not a processor based to give away some other elements around it that may not be the case yeah I I mean part of what I\u0027ve been trying to motivate here though is that the those pipeline architectures are probably not going to go away because they\u0027re very cost-effective I mean this is kind of the you\u0027re being cheap no I\u0027m being realistic kind of argument and I can only sell what people want to buy and they buy what they need and what they need in certain cases is you know if you go back to two francs you know cool circles you know is sometimes you know density speed and and BTUs but I think to a point so the pipelines are just one example of multistage and there are certain constraints that apply to pipelines that might not apply to other multistage architectures like if you have multi stage with run to completion you don\u0027t necessarily need a past memory around for the individual steps so there is trade-offs among that I think we pick one example forward in architecture because it\u0027s quite well used across the industry and maybe I think from a considerations perspective most of them still apply maybe we\u0027d go through the the considerations and then yeah Marianne would that make sense because I think there are some stuff that you you want to go and implicitly race here or what I\u0027m feeling that is in the next slides that\u0027s on yeah that\u0027s that sounds fine I mean I guess the we\u0027ll take your thing also of course but I want to just jump in and say you know to some extent what I\u0027m trying to you know at least from my point of view or trying to describe is like a bottleneck and you know it\u0027s it\u0027s useful to analyze bottlenecks and you guys can fight over who talks next actually what they wanted to get to is that despite a multitude of protocols that may be needed to be implemented onto the forwarding plane the basic elements that need to be executed are quite clear and I based on my experience on at least three different designs that three different major network equipment vendors so from his perspective I mean you\u0027re basically gonna have a such an election and I always search it is basically how the Terry mystic you may be able to do it in a certain memory bounce it\u0027s important if you go further to more fancy type of searches when when several issues are coming and the discussion it\u0027s also very particular per "
  },
  {
    "startTime": "00:57:46",
    "text": "architecture type design right now I think they were in violent agreement I wanted to get back to the point from then about you know exposing lower layers of the platform so so I mean the lower layer of the platform you\u0027re exposing the more expensive it becomes to support that right so that\u0027s basically I think one of the reasons why you know there have been various attempts of API is another in the past you know the how do you consume it right most most customers really come with requirements or functionality at a higher layer and you know that\u0027s why also thinking that the programmability like you know some programming language before whatever it would be ultimately gives you another way as a customer to approach the vendors right it\u0027s not specific to particular vendors chip itself but you can go and say this is what I want to run show me that it does I don\u0027t know 400 million packets you know what whatever performance you need and that goes across the vendors and that\u0027s at least you know in another stage of engaging with the vendor by being able to do that if you go back to your to Frank\u0027s it was back this one so you have the SP style and the DC style and what I\u0027m trying to say is that in the ASIC you have memory and it\u0027s being laid out in fixed tables you know that are using that memory on the ASIC if you would have better control of those table layouts that you can dynamically change it you know based on the application you would have you know like less of a trade-offs in there and I would even say that you could remove some of the buffers if you had a better control pane which would when you remove the restrictions of the router system architecture that you have you know described at the very beginning so some of the you know some of the vendors basic vendors are trying to give you more flexibility in that way how you can lay out in order to get some of you know better the trade-offs where some of the you know but it\u0027s very hard to get to that layer and when you are talking as a protocol designer what you\u0027re trying to do you are seeing you\u0027re getting hit by those restrictions I mean in the existing model where you\u0027re only coming you know with and you know solution requirements it\u0027s basically that the product already has to be in the different market spaces and then you know the vendor will figure out how to reconfigure it accordingly but other than that I think it\u0027s very going to be very hard so if I could just do a cheering rod for a second so so basically we are to slide number 30 and we\u0027re kind of hoping to talk about things to keep in mind when designing a new protocol I think we are kind of assuming that people will continue to approve routing and continue to improve routers but we also wanted to talk about what people are supposed to be doing in the meantime and then includes people that are not working or routers so like I say I\u0027d "
  },
  {
    "startTime": "01:00:48",
    "text": "like to let you folks finish up your presentation probably in the next 20 or 30 minutes does it seem about right and then the other thing worse of course this is a working session on a watching session so that\u0027s our opportunity to go crazy when that\u0027s over Thanks yeah we\u0027re kind of in the homestretch of this deck so this is hopefully okay first of all this is you know I am 100% sure not a complete list but it\u0027s trying to take actually some of the you know one of the earlier questions or comments rather was there there are a certain you know universal truths that people who have done this a bunch of times have have observed and this is kind of trying to distill them down and present them as a is a set of almost aphorisms and I\u0027m John I think this is a very valid discussion that we have right now with extension headers and and using them extensively like what we do with say for instance I um so depending on what you have how come how deep here can you parse what information goes where can my header go first please so that I can parse it because I don\u0027t care about your header so I think that\u0027s a very valid discussion the other thing is that\u0027s the parsing part right and we\u0027re very aware of that that there\u0027s limits and people have been pushing these limits pretty far out so there\u0027s been if we go a couple of years back people were able to parse a couple of hundred bytes into the packet people are not been using that capacity at that point because extension headers didn\u0027t take off the way the way we were thinking they were taken off and then people were suddenly pulling back again from a possibility perspective so that also happens if certain things don\u0027t get where they get that it get implemented but they don\u0027t get used I think that\u0027s also something that we see as a dynamic because vendors react to what\u0027s been built and what\u0027s been used and the other field is like 128 bits are really a challenge so if we would be able to do lookups unless if you design new things that use less bits that would be good right yeah and I think sort of also a high order point that is kind of what you were saying as well is overall the one is way easier than a row of an I to some extent don\u0027t care what the constant factor is but levan is really a pain so let\u0027s say is this largely what we said already I think it is yep I think this is you know again this is just saying headers that can be composed in arbitrary order is quite painful as especially for certain architectures that have a fixed order of axiom you know of units so don\u0027t do that "
  },
  {
    "startTime": "01:03:55",
    "text": "inventing new kinds of headers if you if you invent a key that looks just like a key in a different kind of header and kind of sort of similar semantics so I can you know rejigger my lookup unit to do a slightly different kind of lookout but it still look up on a thing that looks about the same that\u0027s probably fine taking a header layout and you know saying oh I can abuse this into it in a new way because it has the right number of bits and but I\u0027m by the way going to you know change the semantics in some non-trivial way is you\u0027re not necessarily going to be able to reuse your existing hardware also recycling packets sucks it\u0027s the last bullet there this is Floyd edification so don\u0027t panic what we\u0027re talking about there is entropy identification and unfortunately we have done a terrible job at this and continue to not do a terrific job but it would be really nice to do a better job at this in the future and to put entropy at a fixed offset from the beginning of the header I don\u0027t really care what the offset is but if it could be fixed please and if I wouldn\u0027t have to go and like look at some you know field and then it says keep looking down and I keep looking down and anyway you get the point moso design something that doesn\u0027t require flows much better if you can go deal with packet reordering and all that stuff at application level then well nobody would need to go and deal with flow identification in the hardware applications and transports please fix this for us and makes it much simpler right we don\u0027t need all that crazy stuff that we do for ECB today we could sue do packet by packet can run round robin easy that makes it really hard because it requires us to go and do all kinds of shitty parsing right if we had one thing to go back and and do differently from you know starting from the 70s it would Tom Robert so flow leap one ipv6 is not sufficient what do you use the flow label for again could you tell me so identify flows for ecmp we have it it\u0027s there was expressly designed for this purpose as far as I know it\u0027s not it\u0027s being set on the internet now is it being used by these routers and it gives you exactly the properties you want it\u0027s at a fixed location easy to process it\u0027s always in the Iceni pv6 header most OS is that I know of Windows Linux iOS will set it well so so see you in the comments - if you could come to the mic if you want to join the conversation I\u0027d you know that would be great so the question was is it always said and I would point out even if it\u0027s not set you still have the IP "
  },
  {
    "startTime": "01:06:55",
    "text": "addresses so it\u0027s ecmp is an optimization not a requirement from that point you did you just say you CMP is an optimization not a requirement that\u0027s not what we hear okay yeah no that\u0027s that\u0027s really not true you can\u0027t use it for something as important as this okay but you can\u0027t trust any fields by definition other than the IP header if you\u0027re going trying to go down into transport layer you can\u0027t trust those either well you know what they like p-type is you know what the follow-on type is and you know where the ports are and that\u0027s what people have been using for many many years and it\u0027s an ongoing problem I mean it\u0027s not perfect but but well we\u0027re highly motivated to get as close to perfect as we can so we just talked about header size so now if I have to go down and find transport headers that\u0027s gonna so something has to give here you like Frank said you can\u0027t have everything so I can\u0027t have an easier way to identify flows and yet short parsing buffer so there\u0027s got to be a trade-off somewhere right but but ecmp is not a is not a nice to have okay part Visia gandhi are we a great background and the history of the routing and there is a paradigm shift in industry I\u0027m not clear if you guys you can really spend a few minutes to see how that would really impact the future of IETF and the protocol machinery of IETF it seems to me okay you know what so III would like to encourage you to hold that question for a few more slides III am NOT going to talk about you know sort of future vision for the next few slides because I\u0027d like to wrap this as Spencer requested once that discussion at the end this is the discussion I think that Spencer is asking for but we\u0027re trying to get there well convict with regard to packet reordering it\u0027s not that long ago that I had a heated discussion with the vendor who thought as a carrier great system where you had to choose between selective acknowledgment in TCP and the ability to process reorder packets so and just just to make sure that I\u0027m doing the right thing for everybody in the room I\u0027m hoping that the discussion starts at the end of the session if this sounds if we can solve all the problems of router routers and the way in forwarding and furcal interactions in this room by five o\u0027clock that would be awesome but just in case we don\u0027t I also want to be talking with you all about how we can continue their discussion element Kirchner just on the last point ideally yes fluid identification and packet three or fragment reordering from a chip perspective would be ideal however there "
  },
  {
    "startTime": "01:09:55",
    "text": "are if you look at the real end-to-end thing I mean there are security considerations and you know stateful firewalls and so on so if chips drop that feature others will have problems so we can\u0027t optimize for chip level and forget that you know we are trying to do entrain stuff remember at the beginning I said that everybody else has to do cheap fast and good it\u0027s a very good we would have everything for us it would just defeat the purpose it\u0027s a great point a huge elephant haven\u0027t got to which I hope you\u0027re gonna getcha which is pure packet state is that in your slide deck you know I don\u0027t think I do have something on that let let me just fly through the next things and then I we can sort of open it up for you know be sure that we\u0027ve we\u0027ve checked off all our boxes no pun intended so yeah check sums are expensive don\u0027t use them just for fun don\u0027t invent new ones just for fun this is not actually what Stuart was asking about I don\u0027t think I think Stuart was I believe that you\u0027re ringing up the point of you can have stayed in the forwarding plane or you can have stayed in the header yeah I mean the thing that\u0027s really that was really really a problem with people coming to detonate expecting we could do per packet count our sequence number checking and those sorts of things and you discover that actually it\u0027s really really hard ok that is kind of what this is is going on about then which is that you know sort of traffic driven state is this wonderful contentious right up there so this one yeah okay so up there and well I think one one again I hate to say that because I love multicast but from a hardware perspective it\u0027s a load of effort and people put dedicated replication engines it makes the chip much more complex and so I think how much replication you need consider that how much application we want at a particular point in time consider that so it is a a real trade-off that people have to go and make which is why if you look back loads of people were blaming certain devices not to do proper multicast yeah it was a design decision right and they traded unicast capability or maybe sometimes cost plus unicast for the multicast thing so I think that\u0027s some of the background that happens there and if you feel forward to one more I think that\u0027s a wrap-up thing right that we want to go to jointly so this one cannot just two more sentences and then I think it\u0027s free format anyway so and we can\u0027t do everything at no cost the "
  },
  {
    "startTime": "01:12:57",
    "text": "other thing is and I think that\u0027s something that we might want to go inspire as a discussion topic is should we when writing a draft and completing the draft have some of these considerations that people think what their protocol should go do and what some of the assumptions is are should that be documented in the document and written down so that not some of these things are not implicit but explicit so I assume that I can parse packets up to say 200 300 bytes Steve I can do this I can do that should we go and document that I think there is a problem with certain things are designed for a particular domain and it might well be that today this domain exists tomorrow we don\u0027t know the future so it could well be that this domain becomes something else it could become the bigeye internet or did it come just kind of fall flat on its face but I think what is niche today doesn\u0027t need to be niche tomorrow but at least I think articulating the requirements that you have in mind for certain things from my perspective would make sense so that loads of these implicit assumptions are put on the table especially when it comes to what the forwarding capacity should be be all about and I think that\u0027s one of the discussions that when we did the prep calls with Spencer or our own team that they wanted to go see surface which is why we put it here and now it\u0027s all yours sorry so thank you I\u0027m lucky to be the first one now insecure going back to your previous slide regarding with keeping state information but again it is a matter of Archie and it is architecture dependent there are certain architecture already out for more than 10 years for which this is not an issue I would have been happy to see other elements being included like search types that you may have it these are directly in impending regular design no matter what type of architecture you do have so something like Brickley favor hashing or favor exact match favor prefix matching versus generic packet classification and so and so on unfortunately after staying in this presentation is like I slept for 15 years and I could have come up with the same type of discussion 15 years ago that is not rushed and the deck was started in 2015 I think yeah well loads of business motherhood and apple pie and they just wanted to go and cook us I was cooked that up as a game so I think that\u0027s a good point what we can\u0027t do could do as a follow-up is maybe just focus something just on look up in the next go-around David black is fluent in an entire kind of discussion the sliding hares and tunnels flew back way too flew by way too fast we have increasing amounts of tunneling cap protocols in the IETF increasing "
  },
  {
    "startTime": "01:15:57",
    "text": "design expectations that end cap D cap and cross header processing on D cap will occur at line speed would you care to comment on what to do and what not to do in this space you last up with what\u0027s Dido I think it\u0027s very generic right I mean I think where we\u0027re looking in the cases where we feel it\u0027s it\u0027s it\u0027s its worst and how much we can optimize it and if we think we can live with the optimization right so if you have an ongoing chain of you know D cap an end cap with the same thing obviously you can optimize that quite well but because even the links doesn\u0027t change you just need to figure out if you can flatten the processing to actually recognize that situation so but yeah in general you know all these encapsulations are typically very expensive and in you know typically they either cost more gates or they cost a performance because you\u0027re doing things like recirculation they are mode on which one thing which I find would be useful in general for the protocol designers is to put in a document with do\u0027s and dont\u0027s what is you know beneficial what is not beneficial when you\u0027re doing a protocol design we can talk about in system architectures you know what we have the problems but if you would have lay out whether your restrictions and what will be recommendations from the hardware perspective for certain protocol adoption to be faster that would be very helpful because the we can try to optimize one thing that we have as much as possible but if you\u0027re adding a new header that requires new parsing and you want to do it fast as you mentioned you have to wait a couple of years and they\u0027ve get being put into the you know silence right so I\u0027d rather have spelled out what do you want or the assumptions that you have as opposed to there is some generic rules from our perspective I think you learn on you can design the hardware around your needs and then your additional adder I can slap on without any effort it just depends on what the underlying system is built towards and I think that\u0027s why I do believe that something that spells out the assumptions or requirements it\u0027s much better than having something that well talks to spherical routers but what about you are you knowing what is possible today versus what will be in three years so so I should probably say something just for a second here so I think that we\u0027re talking about yeah I think you had a perfect question for the next little section which is where I\u0027m hoping we\u0027re going to talk about is not how a some specific problems like that so issues it stupid specific problems that have been named here but how we solve you know how we solve those "
  },
  {
    "startTime": "01:18:57",
    "text": "problems or keep them from happening going forward you know you\u0027re right you know when you\u0027re asking about is there are there recommendations that we can make so that people will quit tripping over their own shoelaces I think that\u0027s a conversation I really want to have with the room so I\u0027d like to let you know we could bring the queue and everything if you guys talk fast but I\u0027d like to avoid to you give these guys a chance to finish up their section and then turn over to the room for us to figure out what the next steps look like I think we are focusing on a box called the router we want to make this box look really nice air bigger faster that\u0027s not the point the point is you have to look at the bigger picture like Frank already mentioned that telemetry the partner is not only if a packet forwarding my drone is only a small piece of it ok so that is where Spencer when we have time I guess John you said we are going to talk about that we are making this box which is a router look better faster or John you put it very nicely more efficient that\u0027s not that\u0027s only a small piece of the puzzle I have a few points on the slice we just went through should I wait or should I go through him okay Magus Allen says good agreement alright so in the slide 31 this is Rajee by the way so slide 31 said parsing 48 or 32 or 64 that\u0027s great but 128-bit did we forget to send a memo to the chase ik folks that ipv6 addresses are actually 128 bits that has been so for last 20 years so so but wait a second just because the ITF has decided that the Internet should do this doesn\u0027t mean that a chip designer has to like it right there no of course not but that it\u0027s it\u0027s that mean parsing 128 bits and I feel so it seems like we still rooted in ipv4 lingo from 32 64 bits so it is there still a merit in having to restrict I mean granted I get that the you know we can\u0027t just keep parsing hundreds and hundreds and hundreds of bytes in a packet for obvious reasons but there has to be at least a guideline what\u0027s optimally minimal right as we go along the timeline okay so second point now I\u0027m thinking about this and then slide 37 we\u0027re saying wait heaping state or not keeping state on slide 37 in the forwarding node is better well but that means keeping states somewhere else so mostly now it "
  },
  {
    "startTime": "01:21:57",
    "text": "is that\u0027s in the packet but if you are keeping state in the packet that means you\u0027re putting more information or highlighting the need to parse that packet a bit more intelligently which takes us back to the problem of parsing some scratching my head on that and the last one and I\u0027ll pause is degrading multicast unicast I think what we\u0027re really saying degrading the ability to be replicating that has the world that is part of Martha cos but nowadays we also do that with unique ask so am I correct to understand that when you\u0027re saying degrading Moloch has we really saying well degrade having to replicate the packets on the boss maybe I\u0027m not getting that right but at least the sent the statement is making a scratch my head this this is all from the perspective of keeping heart we\u0027re simple right obviously that\u0027s that\u0027s one end of the side and obviously I think we would all agree we don\u0027t want a network where we don\u0027t have ipv6 so sorry chip designer you have the pain there right but basically ongoing we should still consider this you know poor chip design effects into account right so before we before we keep going just a tight check we have this room from five we all need to go to the plenary at least lariat five ten so after the discussion we still want to go through a couple more slides so we can talk about what are the next steps I did there they\u0027re also three more slides that I wanted to present okay so we want to leave enough time for that it\u0027s 4:23 on my watch so I would like to finish the extra slides so we can have the discussion about what are the next steps maybe starting in 25 minutes before 5:00 so they can have time for that the bathroom and all this okay so I should just make a small announcement we\u0027ve just published our FCAT 5 or 7 which gives you 64-bit addresses for that protocol okay it\u0027s meant as a joke though if you didn\u0027t get it but but go and read or see a table oh seven I would load - that was the intention all right you guys or someone we got two real benkei dark so there are a couple of people talking about your whether it is a good idea to try and document some of these things I think the answer is clearly yes whether that ends up being an RFC or BCP or just you know a wiki page I don\u0027t know that I have a strong preference on but I think it\u0027s really great if we can be clear about what your behavior is good for router and also what behavior protocols are sort of expecting from their routers so if we if we talk about what we do and what we expect then we can figure out if those match up and if "
  },
  {
    "startTime": "01:24:57",
    "text": "not what we could change and maybe that\u0027s a discussion for the end in terms of how and what could we do as a follow-up from this as Spencer said well yeah definitely I have another point so there\u0027s a slide that was talking about how avoiding flow identification and your being able to accept packet and fragment reordering would help the hardware and I guess my sort of question Michael my question was sort of who would need to coordinate to make a reality and we have people that are designing quick and they\u0027re saying you know we don\u0027t need are your packets to arrive in order and we can build into quick what you know we do we order that but then we have people coming up and say oh well I have my stateful firewall and you know that would not be so good if the stateful firewall is seeing things out of order like other everything is on path that need to look at this I don\u0027t have a great picture of of who would need to like how many people would need to change in order to make that happen that we can tolerate the reordering hi Tony Lee some router vendor one of many I\u0027d like to respond to the comment about 128 bits have after being there we did take the comment about 128 bits to the ASIC folks and they came back with a different comment which was no 128 bits are bad and the IETF chose not to listen okay we specifically asked for variable length addresses and the IETF said no blank blank okay if you\u0027re not gonna listen to the ASIC folks then don\u0027t expect the ASIC folks to listen to you a lot of us have been doing this stuff for 20 plus years so we should learn that kind of rule of thumb you want to build it well you want to design it well you respect clear boundaries you do a polish ability from policies and the we are going like a pendulum it it reminds discussion about fully centralized versus fully distributed we decide let\u0027s put all the state in the consult and we built our CPT and then hey soft state heals our contra plane plus remove all the state and then we build number of technology building now right and suddenly our gosh anything that required state natural doesn\u0027t work multicast doesn\u0027t work let\u0027s go back and can we find something in the middle by Carter rating that actually does work they\u0027re very good examples of things that work really well LG VPNs beautiful right so they did work they do work and so there are good precedents of finding right "
  },
  {
    "startTime": "01:27:59",
    "text": "balance between what goes into control plane versus what\u0027s going into forwarding and we should learn on our mistakes and think that we did well can i maybe cut the line after dino so then just throw show three more slides and maybe that expands the got a bit more and then we came back sure Brian various people have suggested that we write down basically a forwarding specification or a specification for how this works well my first IETF was I 80s 16 in 1990 and I went there because we were just starting to work on and the rewrite of Rooter requirements no one has ever successfully written that down the world is orders of magnitude more complex the optimizations and the economics are orders of magnitude more complex all we can do is to do some tutorial but never more than tutorial I have a draw or comment which is a little bit beyond just about the packet forwarding one thing that\u0027s very kind of strange to me coming to this meeting was I was expecting something to tell me how we\u0027re going to do forwarding in the future and how we\u0027re going to get things better I understand that we want to have simplicity and I understand we want to have performance but it seemed strange to me that we are asked to bend over backwards to fit the hardware I think the hardware should go where we want it to go not the other way around so the whole point of this talk so to repeat Stewart\u0027s comment it\u0027s not only that we\u0027ve been talking about trade-offs but then we\u0027re airing over over simplicity about what we should be done Stewart could we first and get that later thank you Tony Lee arista we one of you care to comment about SR v6 this is Dino kind of an idealistic comment the original internet architecture was supposed to make hosts robust and more complex than the inner network routers we\u0027re supposed to move packets fast and do nothing else that\u0027s the way we started building router companies but turns out router companies didn\u0027t want to be commoditized so they had to put additional features in do you realize most the real estate on any die on any router is a huge tee comp for access lists the access list table is larger than the FIB table what the hell are we doing why in the middle of the network we have to check if a package to be dropped or forward based on policy shouldn\u0027t it be done in the control plane shouldn\u0027t that be done in the edge so the the problem is if you guys want to build fast routers and make these hard trade-offs you have to can\u0027t keep changing the problem set if you want to keep changing the problem set build a general-purpose programmable forwarding "
  },
  {
    "startTime": "01:30:59",
    "text": "engine but if you want to build a super high ASIC you can\u0027t keep changing or predicting what the future is going to be because then it\u0027s going to take five years to build this new functionality sorry I was just cutting the line just to throw in three more slides to hopefully actually also relate a little bit more to what the discussion started to be about and I think we learned life as a chip design as miserable and what fronting the last part was reflecting back a little bit to you know please take a little bit of that pain as the protocol designer now I wanted to basically try to create some more insight into that connection between the forwarding plane and what we\u0027re doing at the IETF one interpretation of the next slide I\u0027m going to give one example the simple interpretation obviously it couldn\u0027t work and it had to be painful it because it was multicast like what said on the last slide my perspective is actually a little bit different it was basically perfect combination of you know bad code and bad IETF specs that basically was not taking into account you know the need to document forwarding pain problems in a way that really they you know must be implemented correctly and and this is basically my story from the beginning of 2000s when we were using the router alert mechanism anybody who doesn\u0027t know what router alert is please leave the room No okay fine so what we did was a reliable multicast protocol called PGM and basically that was using router assist in message and signaling packets to basically let the router help the end-to-end communication of the transport protocol by imploding necks or caching and retransmitting packets you could say it\u0027s similar to ICN just a decade earlier but be that as it may that was a you know in our opinion a perfectly well working solution unfortunately when we started to deploy it in customer networks what happened was that this router alert packets were perfectly preceded by the routers in the network that understood PGM as they should and they were designed to have the performance needed unfortunately also a lot of other routers that had never heard the word PGM in their code at all we\u0027re also punting these packets because well it\u0027s obviously a router alert packet so let me punt this to the you know aforementioned remember my first slide at M CPU you know that can just may be software forward let\u0027s say 1,000 packets as opposed to 500,000 as the ASIC at that point in time and yeah obviously they got completely overloaded and killed because the only thing they were doing is looking the packet and saying what router alert next protocol PGM what the heck is that I have no idea simply let\u0027s forward it in in software and so what happened was that the specifications that we have in the ITF "
  },
  {
    "startTime": "01:34:00",
    "text": "were basically not making it clear that you really you know to get workable router alert you must only punt the packets that are of interest to you and that\u0027s not just any router alert packet but it\u0027s basically the packets of protocols next protocol there is also a particular value field that it could have different content you know the combinations that you know you\u0027re going to do something with it you know in your software control plane forwarding plane however you want to call it and everything else just continue to forward in Hardware would that additional differentiator to you know send packets from the hardware forwarding plane to the software forwarding plane being possible on all platforms in 2000 I don\u0027t know definitely on a lot of platforms where it failed to do so but today obviously it\u0027s a total no-go but still we don\u0027t have RFC\u0027s that mandate this level of requirement against the behavior of a functionality because in general my perception is Oh were not about to specifies internal of the notes so we\u0027re always trying to wriggle our way around it I was giving here an italic one way on how I could try to wiggle my self around but obviously it would be a lot easier if we had more freedom in even normative rfcs to make specific you know requirements that today we might consider to be internal only even though you know I think it\u0027s very nicely externally be visible that you know oh your packet throughput went from 500 thousand per second to 1,000 per second right that is externally visible right so this is basically my example slide of you know it\u0027s not only a problem of the hardware but there is also the problem of bad code and that ITF specification jump in produced a second tour list and say that I think what I hear you saying is that we have for a long time had a religion of like we\u0027re not going to mandate architecture it\u0027s not our business right so and you know sort of we earlier had dancing almost the opposite of saying you know just give me the cookbook and tell me how to fit into your you know architecture and I\u0027ll do it yeah but a normative protocols that we and and I and I think that you know and and Frank said something a little bit different again and I think what I\u0027m hearing is we sort of need to you know lose a little bit over the religion and we don\u0027t we still should not be mandating architecture but maybe it\u0027s okay to acknowledge that architecture exists let me let me go to two most lights because you know elbow was just giving me a time limit so that were at least through the slides from oh well so basically you know I wanted to give to counter points right the one counter point is exactly through the need for speed in the forwarding plane that we see a trend of simpler fast path and control plane right so basically slow path all these difficult packets and then we\u0027re going forward saying please let us have less difficult packets that we can\u0027t process in the fast path because you know the slow path something panting it up to "
  },
  {
    "startTime": "01:37:01",
    "text": "control planes if you\u0027re processing it is evermore so useless like it\u0027s completely useless let\u0027s say in data center switches and you know I think in our evolution we\u0027ve seen you know hope I hope headers fragmentation reassembly we\u0027ve been trying to push back on that it\u0027s actually not only packets that by themselves need to be software forwarded if the hardware can\u0027t do it but it\u0027s also what you know at least in the IP multicast work we\u0027ve come to call data triggered events which is basically things happening in the forwarding plane like special packets that I don\u0027t need to see in the control plane but where I need to get event notifications to do control plane actions and so which basically you know I\u0027ve given some more example there in multicast we work something like 15 years on evolving from something that you know as I initially said was implemented on a Sun workstation of a researcher built the mbone up to basically you know our last protocols like by your pin that wasn\u0027t having any data triggered events anymore just to fit the protocol evolution perfectly with the requirements of hardware and you know allowing us to work in the smallest possible CPU but quite frankly we\u0027re glad that we did it from the you know business perspective but definitely it didn\u0027t necessarily result in the best user operable protocols right so we basically were doing compromises for what we ultimately set out to achieve initially obviously way beyond what we can talk about here so how about intelligent fast path right because I think as people who built this hardware we don\u0027t only want to basically give you the fastest you know least intelligent Artois but we\u0027re always looking for things where the hardware intelligence can add value to the solutions and you know I think there\u0027s a lot more things we can do with the latest generations of NP use and so what I mentioned these two topics of you know the IOM I think that\u0027s fairly well known we also have a draft for where we basically put into NP you in our prototypes for basically a lightweight equivalent of RSVP to basically establish forwarding state at the speed of NP U as opposed to at the speed of control plane and that actually is a totally different protocol design because when you look at it you need to change the called to be lightweight enough to be processed by the NP you similar to the I to the IOM stuff where you can\u0027t have a lot of you know acknowledgement exchanges or so so you know protocols might actually start running you know in accelerated forwarding plane maybe takes a decade or so we don\u0027t know right so how do we deal with the conflict of you know on the one hand side we heard ninety minutes about you know make it simpler so that it can be cheap and fast on the other hand how do we open up the opportunity to you know explore more intelligent forwarding planes and leverage you know their speed and and flexibility the the last point may be you know there was a really nice you know research project that I solve from Berkeley two years ago and they were actually looking at exactly what we "
  },
  {
    "startTime": "01:40:01",
    "text": "always fear to be really bad so let\u0027s say make learning in 802 dot one in bridging right totally always data triggered events data packets come along you\u0027ll learn a dressing from it right and there we\u0027re taking it forward and saying hey we can do this in NP you know they program prototype in P for right basically if you can do it now in hardware and it works at line rate speed it\u0027s really a great simplification of things so we\u0027ll really need to find to counter you know these two sides of the equation of how we deal with forwarding thing so line is open again for everything so we\u0027re going back to other presentation so so this is where we were when we came into though when we came into the room this morning this afternoon which is basically the chairs and and warrant okie with people around here that we had you know kind of here\u0027s here\u0027s here\u0027s problems that we know we\u0027ve tripped on and then from thank and Charlotte or less we oh he said oh here\u0027s more gaiden ears guidance that we we are giving we did their spill Federal Work where he thought the problems were and he said basically anything we did in the 1990s is going to be a problem which I thought was hilarious enough to throw inside by itself but you can kind of see where this is sitting right now my next slide please so if we\u0027re looking at kind of the silver you know implications were here for and mix my place we could do a lot of things I guess I should ask first does anybody in here want to work on this more could you come so like you know my question my question was basically we could publish minutes from this secession and thank everyone because we\u0027ve solved all the problems we could publish informational report from this session we could request a mailing list to continue discussion we could shorter work on recommendations or BCPs what Benjamin mentioned looking for this kind of thing can we talk to approval and expectations and I\u0027m very interested in hearing other suggestions from you all this is Dina I just want to make two points about multicast in going in reverse order the data driven events thing toilets you were there ever so you know the history it turns out we wanted to signal sources in the network by using a control plane and this is the Tony Lee\u0027s point we asked the IETF to have a request to send message and it was not in the current way that multicast service model was defined so it was said no but we actually did get something out of it that we could have "
  },
  {
    "startTime": "01:43:01",
    "text": "used we could have hacked-up because there was this thing called the RSVP path message because we needed to signal from the source to do reservations but not to do multicast state so interesting change of events there and then the one slide there was a reference the multicast needs to be degraded to unicast it turns out if you\u0027re a fit programmer the hardest thing to do is to program 18 line cards and make them in sync in the shortest amount of time you need multicast on your your switch fabric or there\u0027s no way you can scale that now I know that\u0027s different than multicast replication on the network but if you\u0027re going to put it in your switch fabric you already have most of the hard work done on your internal switch fabric then I agree with Dino\u0027s comment on multicast and one other thing is also it\u0027s a replication to Dino\u0027s many mentioning that today we have more space on an ASIC for Ackles than we have for forwarding and this is coming from our bad network management practices many of the network management issues that could be solved in a different way we are trying to solve in protocols which are then impacting you know essentially our basic designs there is really no need for the operator to say oh if alcohol is in there it should be never deleted and it just grows and grows and grows and they just put it indiscriminately across the network and many therefore note because they said it\u0027s better that it\u0027s there then it\u0027s not that is there and there is a lack of network management tools I mean this is so ridiculous I don\u0027t want Dean to talk to me so we have to install an ACL in a router in Japan and by the way we\u0027re doing that because Dean might roam to Japan so that router needs it just in case how well do we do roaming on the Internet ok I guess Parvez Kayani my earlier question it\u0027s the vision of IETF and if the life goes on in ITF using the old mindset today if you really look at the application layer or networking infrastructure the framework is widely known and deployed it\u0027s being deployed so there there is a vision there that the actual function which reflects the reality of a business value in this case for IETF the business value is how fast you can move package yeah how fast you can move packets so that\u0027s when you move from a PMF PMF user like a physical box today or we enough there an effete he\u0027ll be enough and now we have C enough we she\u0027s containerized natural function in the world of CNF you don\u0027t have to deal "
  },
  {
    "startTime": "01:46:01",
    "text": "with PMF issues this is this is my maybe you learning from the routing switching coming to n Fe and now we are talking about CNS my question for IETF is okay if the application layer networking infrastructure is well designed well established and it\u0027s been deployed we can basically use the same concept and apply it to layer two and three a layer one the networking why not we can indeed take the core function which is packet forwarding and then we take everything else is not packet forwarding it doesn\u0027t have to be Sdn like centralized controller you can have that distributed well distributed functionality of something like envoy in a context of like service mesh as a matter of fact I don\u0027t know if Eddie\u0027s here or not there is a an effort going on in industry that how you take the IETF protocols as tools and apply to this new concept I want the people that were talking like Frank and John and Hollis to talk about this how that would impact the future or IETF not necessarily from a rafting perspective the overall IETF political machinery and how does connect go today to the next perhaps this serve this purpose of the industry for the next decade or so so another elephants and I think it may be a reference to that in the previous comments the co-prime is people want to do virtualization down at these sorts of layers and do the sort of things that we do in the sort of virtual moving applications around where I\u0027ll remind people that holographic networking is currently expected to need a terabit per second per user and if you don\u0027t get the latency way way way down the user feels sick so you know we can\u0027t do some of the future applications unless we have simple cheap fast effective highly optimized forwarding and that cannot be done with some of the features that people sometimes think are easy to add I should mention that we have about two more minutes in this session so if you the last two guys if the line could be quick that would be awesome David black sure I got to try to say some of the questions on your side on the slide Spencer so I\u0027m I\u0027m from Transport I don\u0027t work directly on routing but I use it I\u0027d like to believe that the protocol design work I do has some cognizance of what it takes to make her out make routing effective so I\u0027m very interested in the output of this session and I\u0027d encourage to go beyond the beyond the what was said minutes to an informational report summing up "
  },
  {
    "startTime": "01:49:02",
    "text": "things the rest of us can use BCPs would be wonderful I\u0027m not holding my breath if you want a mailing list that\u0027s nice I can expect to sign up because I want to see the output I don\u0027t care I don\u0027t care to be one of those who make who who makes the sausage so there\u0027s there\u0027s there\u0027s some quick stuff that you want Tom Robert so on one of the earlier slides there was a really nice taxonomy of various routers and they were everything from IOT devices to too high on I think somewhere in the later slides we were more secured towards high-end when we start talking about header length even checksum the problem that we face and David might have alluded to this as a like a transport protocol designer if we want something to work in the general-purpose Internet we have to design for the least common denominator so what is the least common denominator of all those and that really pushed us down to how much functionality and evolution we can have so a way forward really has to be that least common denominator problem has to be attacked I would say the middle its micro package the tiniest packet you can have the fewest fields zero state and that\u0027s what you have to design for everything else we put in there because people didn\u0027t allow us to do that well but that that achieves at least common denominator and that does not get us forward motion on on in the internet we would be would be stuck with ipv4 stuff we didn\u0027t have the ability so just maybe to get back to David stuff right I mean we were very centric on forwarding and basically you know the qsr things in the hardware that you know relate to the transport functions you just add a zero to any time that you have how long it takes to get things done it over in the forwarding plane because that\u0027s our experience how long it takes to get a QAM or ezn or any of these other qsr things into a network as soon as you get out of CPU space okay I\u0027d like to thank you everybody for coming and I\u0027d like to thank especially Frank and John and tourists for putting together their work the information they put together for this and thank my co-chairs we do have a we are going to have a survey on this and we need to adjust a couple of questions on it so it will be right tomorrow they\u0027re just you know we\u0027ll hook up the note to the IEEE IETF 104 attendee list and and we will let you know when it\u0027s time to jump on that but but thank you thank you all for being here and I\u0027m going to turn over to our area director and you know one quick question just as people are leaving so this was sort of the first in a deep dive series or proposed sort of deep dive series of topics and when people are filling in the survey I think it would be useful for people to sort of keep in mind if this format or the sort "
  },
  {
    "startTime": "01:52:02",
    "text": "of take a topic and investigated in depth is something that\u0027s useful and when you\u0027re filling in the survey sort of try and answer that and figure out if more things like this would be useful and we\u0027re gonna ask me what topics they might be can I request it scheduled in open time so that all areas can attend and that was one of the really good things about today yeah there\u0027s gonna be much discussion on scheduling I suspect thanks everyone [Music] "
  }
]