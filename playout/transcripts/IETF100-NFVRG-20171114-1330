[
  {
    "startTime": "00:00:05",
    "text": "you know yeah you\u0027re displeased well it\u0027s a little meet change because it\u0027s not what well let\u0027s write let\u0027s drag with the slide some beautiful yeah work let\u0027s see yeah well the aspect is not to be sassy and the colors are not precisely what they should yeah but there is not good anyway hey take a sit squat please whatever you feel like but close okay it\u0027s about time to start welcome this is any veerji and we today have a meeting which we have basically three presentations from different research activities as usual this is a reminder of the IPR policy and the equivalent to what is a note well in the ATF and as usual is a request for you to be active reviewing documents though we have not very many documents active right now and this is as well a reminder it\u0027s not saying not said here but these are remanded to you to be a little bit more active in their in the list that is becoming to quite lately just the list of the what you are the different links that you have for the for accessing the slides access remote participation and information regarding the collaboration tools that we have in the group and now is the moment in which I have to ask for anyone that is willing to help us in taking notes this is that as active 40 "
  },
  {
    "startTime": "00:03:08",
    "text": "as they\u0027ve made a list okay at least the lady to my left that is Sarah banks that is normally this is our secretary in his over perfect note taken and is acting as a co-chair today and well again this is something that is a notice that we always show precisely about the research related events you know that we you can use the list to to make announcements and well the areas that you have somewhat to accept to some self control on what you announce and this is something that in case of doubt we\u0027re really happy to we will be happy to help and well that\u0027s a few news and a few updates on what how things are going on inside the NEPA G first of all is that the gaps raft is close to go for for irst Paul we found actually we found four reviewers we needed and we found four reviewers that review the documents almost before coming here I have been acting as a shepherd of the of the documents and almost all comments but to that we are more worth a little bit of discussion with the reviewer having addressed very likely the moment we are back from the from this meeting I hope Carlos the gaps document will be ready right when we\u0027re back yes we are just working on the very last comment that we have left and then we will submit a version like maybe this week maybe next week but no later than that okay thank so and then we I think that we should start thinking about future documents we have a couple of them that could be could evolve one is the the one that started as an analysis of of the application of containerization 220v that then we have had contributions from if you remember from Buenos Aires we have a discussion on the application of my mini kernels a micro kernels for an Eevee today we\u0027ll have a presentation on this as well and I think that we have a good opportunity precisely to make us significant contribution in the in an aspect that is about precisely rear connecting and a fear that is one of the goals that we have in the in the in the group but we need our editors and an "
  },
  {
    "startTime": "00:06:13",
    "text": "additional contributions and you are most welcome to come to us and tell us what do you think and whether you are feeling to volunteers editors on that particular thing I will be interested in contributing in any way that you think may help okay so sure your name is written down thinking you\u0027re on the list another another that I think could be is a reasonable majors as a contribution bad side I doubt that it could be a contribution of the retcon tuition too and if he had GES it is because it has a very focused on limited scope its own service validation and service verification validation were talking about service verification I think that my own keys here oh yeah so this is something I would like to discuss with you later on is that I think there is a there are potential places in which we can bring this even to the ITF and this is something that we have to explore a little bit and discuss because SFC h1s fre when there is a coming welcoming there is a something that we are trying to start on on that the station at the station in general and probably would be there would be reasonably good places to contribute this this is something that we had to discuss finally well this is a list of other activities that I consider that are interesting in the happening the ietf 199 sorry and well do you have the list there is a Jew know about well ideas is about identity networking tip is on at the station precisely an emoji network management it says there was a interesting session this morning Tanner G on Pat aware networking the activity on star and shortly certificates that I believe will be essential for security in nav there is a sad meeting on niche computing or whatever other idea you have it will be welcome and finally this is the again just one question on the edge computing a sign meeting do you know when it is on Thursday if I remember well let me check a little and I\u0027ll announce it during one of the well the speakers are are changing and well finally this is the agenda as I said before the idea is to have a three introduction to research activities that are related to the goals that we agreed to have in the last "
  },
  {
    "startTime": "00:09:14",
    "text": "meeting in Prague so first one is precisely on these real cute acting which is a new view of the reality every architect in task of the of anafi second is very much connected the two others are more connected with new orchestration stacks one is about the inclusion of some mechanisms for for self adapting the systems and the second is on slicing and how you can dynamically create the slicing by doing fancy things with with the virtual infrastructure managers time permitting we have at the end not a Mick period for whatever idea of discussion you want hope so let\u0027s start with the first of the presentation is a check up from the university of the basque country now wait a second because I had to open the nope doesn\u0027t work no no no that\u0027s what doesn\u0027t work it\u0027s that telling me that it doesn\u0027t it won\u0027t go leave its amicus actly good evening well I am going to present some ideas we have been working with this is the Jenna I will take a look and how we understand an FB and how we have how we have arrived to to this new view on what NLP with new thing machines would be we will take a look at the evolution of the technology proof of concept we remain inert see some limitations we have found in the actual definition of nfe and some pointers to to a solution just go this is just if you ever wondered were the university of the basque country is located spain but it\u0027s in there so just go ahead if you want some information next well if we take a look at NAB as a "
  },
  {
    "startTime": "00:12:19",
    "text": "technology we always remind that it was the idea was replacing dedicated women with community computing power and switching elements which in fact meant that we had a common hardware based mainly computing nodes and switches and on top of them we deployed other pieces of solar that budahas brass or whatever we needed this meant in a certain way going to cloud technologies and meant if we take a look at the networking aspects of manipulating them in in the user space or at least the virtual machine when originally the the network was clearly a static as has happened in in the cloud world I mean this meant that in a certain way he was pre-configured for all even if later we had as the end as a way to configure more or less on demand at the throw enough of a network service to be configured on on demand with a loop this is the Dead Sea nav architectural framework and we can see NFP log like it was really fat visceral network was to be deployed on over network Hardware Delta less storage was to D be deployed over the network the storage server it was quite easy because in fact it was always speaking about blocks or battalions in this world quite easy crystallizing computing was also quite evident and ventilation network was not so easy but when we had some tools for for doing it well this had some implications the implications were that if we were willing to process packets they needed to be done on a computing node at a certain point we need to take out the the packet from the network throw them to the virtual machine or whatever we have here and send them back this has one important implication is that we are not able to treat the packets outside of a data center outside of our computing node is is located well so we we start to thinking about how it would be possible to get a more efficient packing process processing and here we we found what what really happens we have computing nodes we have switches but the switches are only used to regulate packets to vnf with a future in which the process that the sub process here manages the packets are sent them modified or not of discarded as as the need of the the vnf I\u0027m not going into details of we have ear what vnf is its for now just some kind of cpu-based general purpose CPU base "
  },
  {
    "startTime": "00:15:19",
    "text": "processing okay well there are two competing approaches to to process the packets more efficiently one of them is using general purpose CPU processes which is the original way in which energy was was thought but we could also speak about and has a data planes to make things even more spicy we can also implement data planes in general purposes CPU so we have some kind of mixed approach here if we take a look at so of the hardware evolving in a plane enemy we have some ideas regarding a computing boxes and switches perhaps we could say that the price for for port is much higher in computing boxes that that\u0027s true you cannot think about implemented general-purpose switch with multi nikkor computers will because that will be expensive we also have the idea that the switches don\u0027t need very special in many cases place to live in that\u0027s something the environment our properties are are more tolerant for switches we also have the idea that changing the the process inside the switch is much more difficult that in the process also these are more or less this could be where I depending on which kind of technology you deduce well we are going to take a look at a very high view this is not a full review I mean there are things that are missing I could not put every link so I have only left some ones I think that could be more interesting if we take a look at the processing capabilities on the data plain here we have I choose open flow because on a certain plane I think that at least for now processing in the data plane in a general point of view is more or less bounded to open flow and we have different approaches we can start with a sick manufacturer 40 departs which man factor Broadcom trillion to this kind of basic that you can found in many switches and you can find more or less the equivalent set of properties or features in all the factory you have vendor specific Asics this means that you can have different features for example custom pipelines or whatever you can find the numerical procedure process based switches no be flow with one of those manufacturer you can have FPGA and you can even have a practice is based at our end at the DPD open this we typically switch whatever this also gives you some some ideas for example in terms of once you get the list you have one property that it\u0027s important it\u0027s one a limitation there is not only way "
  },
  {
    "startTime": "00:18:22",
    "text": "to describe the processing with you need with the packet those approaches are not using the same language I\u0027m not using the same model they are totally disjoint in many of the cases also in a certain way adding features is more and more difficulty more and more easier you get is a well here it\u0027s more easier to add features that if you are here well if we go to the last of these of these architectures we can say that there are many activities regarding giving the property of a stateful processing having a stainless processing and we don\u0027t consider matters we don\u0027t consider groups means in a certain world written in a state open flow switches are many nest atlas and if we want to give them some stateful properties there are several [Music] work in progress the first toward my first one is implemented of a specific e CPP dosage the second one over of a visit and the fourth one has been implemented before there\u0027s a general switch with Tofino Bedford\u0027s tips or even with no beef Louis I think it\u0027s mmpu 5 well one thing that is important is most of them except perhaps before is in experiment very experimental approach these are things that have been treated but not used very much if we take a look at the how the packet processing is done on the computing node we found that very important thing one very important thing it\u0027s done with x86 code I mean we can speak later about the environment we can speculate about many things but we can say that at least there is a lingua franca which is that some kind of code which can mean the body normally we are trying to get an environment that is a smaller that is quicker that allows speed processing and has a reduced food memory footprint that that\u0027s very quick in order to set up an and undo time and we have well developing the you go from my parasol to digital machine to containers to universes perhaps POS terminals are one of more or less known as before this also means some kind of things regarding the the weight of the solution regarding the security there are many things I mean most of this decision about this alternative as not very equivalent well as before all these technologies are able to take profit of low-level packet processing improvements there are "
  },
  {
    "startTime": "00:21:22",
    "text": "several technology that has been that are being developed most of them involves bypassing the tcp/ip stack and many are already being integrated in other solar lights like OpenStack we have internal processing with X DB as DPS explain that up path this just to give an idea of where it gets the packet processing is get the part the packet processing features by integrating the extender very tailored packet filters which is kind of code that can be run at terminal level we have a user space solutions like AdMob the PDK from Inter and Una\u0027s now on all those approaches are more or less integrated in more or less all of these one or the others they could be equivalent in some points but well we can say that there are improvements that are going to benefit this dis approaches so this means that at a certain point both approach we have some also expectations on the cpu evolution it\u0027s more than going for more speed and more course last skylight architectures have 60 of course but also own ability approaches the Hammond experiments with intercourse Ian\u0027s on FPGAs but as far as I can say it\u0027s more targeted to data processing not so much targeting packet processing so there are some conclusions the the boundaries between computers which are no longer equivalent to data and packet management ability the more subtle difference is related to the state traditional switcher are stateless and this is true but some new players involved a stateful solution on both silicon and so wall switches we can say that there are sub units on its specialty class ivenna for the king of state processing while switches are the kinds of stateless processing well so the conclusion is is there any place for an evening built on evolution in which we can process the information in both the compute node and a switch we think that gesture is that there is a place for improving current architectures and at let\u0027s take a look at the the proof-of-concept were running in in se this idea is 30-some some time ago we published the paper and we take a look at how the things were running at a certain point we call as the agnostic "
  },
  {
    "startTime": "00:24:23",
    "text": "MFP that kind of vnf in here which was deployed without taking into account the underlying network later we had an SDN aware and NLP in which the network service could ask for some kind of network configuration and could get come get it and finally what we begin a spoken with about Sdn enabled nav in which part of the processing was passed to the VLF which is the stateful processing and the stainless processing was in the street well the new space for for this it\u0027s a proof of concept was flow a world network access control in the two first approaches the all the traffic needs to go to the switch along the authentication data this was paralyzed at 1x you get to the vnf and depending on the result part of the traffic is recent and sent to the network this means that at a certain time all the traffic is processed in the in the VLF if we go to the Sdn enabled an LP we send to a residence which both the traffic and authentication data the Ithaca the authentication data is studied and maintained in the forcing block there is some configuration sent to the SDS which and only part of the data is sent to the network we take a look at how this was implemented you know we run the the POC with Telefonica HP kinetic and upv and we demonstrated improve s we could be that this was demonstrated in two places and we were in Paris and if you have a representation of the the name service we were using the network service we were using we have a test user which is the vnf that generates the traffic the vnf the test service it is the the VLF that receives the traffic that is going from here and you have here the flow not vnf we have an enforcement the for event is the part of the vnf that decides to pass or not to pass the traffic and we have an control which is also part of the Vienna we deploy this in two different servers and on a switch three scenarios this is the first one in the first one we have in this one server this is another server we have the two V\u0026F the user under test we have here the traffic that is blowing out goes to the this virtual machine along with the "
  },
  {
    "startTime": "00:27:25",
    "text": "authentication traffic and here we decide which kind of traffic must past and the remaining traffic is sent back to the user ok so we see this is the first approach the second approach we did use some enhanced placement awareness that meant that we were able to put the realtor machines on top of specific places to do a specific placement and we could use for example personal features unless our iov to improve the the benefits and we got very good results but we they need to pass all the traffic to the vector machine and the third one what we used was you see now the traffic only goes to the OpenFlow street and the authentication traffic goes to the controller and the contrary figures the switch to let pass only the traffic that is involved the conclusions you can tell here these were bad numbers we are now very much improved we also also almost get the same numbers regarding the the the speed of the links but the important thing is not only the speed of the links but is the number of ports you use underneath or the the number of edges in the service scenario you don\u0027t use any bandwidth communicating the two elements one in the other you need it to communicate both elements by links there is also one important thing here you needed a core almost time reduced for doing the forwarding and now this chorus is no longer used because this is done by the by the by the switch there is one important thing the authentication traffic just to get an idea is around five kilobytes per real application authentication and there is one important thing is that the control function can be topologically the coupler for the important scene point this means that we have an split 3lf in which we have a controller here and we have the enforcer here this means that we are going from to this architecture and we have one component in the compute node and another one is done in another in another part well this is our experiment and now I would like to highlight some conclusions we get the limitations we understand that when we speak about Navitus at the end I think that NLP is usually in written in bigger letters than the nest the end that\u0027s it\u0027s perhaps because the N was "
  },
  {
    "startTime": "00:30:26",
    "text": "incorporated later and the network not was not considered to be part of what the user could define this is these tools to several reason many times delegate in the control of part of the network is not an easy task he not only from the technical point of view but also so the from the administrative point of view if we take a look at what this really means this really means that at the sole point time the as a certain point the danvers service which is running in this component is part of the usual definition of the product but we have an infrastructure we could be the logical switch instant 0 and lower instance all over with several logic instance of higher-level are running another limitations is that we normally understand that the networks tend to reorganize itself if we begin placing packet processing elements on top of the the network we enter the placement game which is quite difficult we if we are using a network because there\u0027s some delays that you should take into account and the service would be impacted another of the things other things that the BNF d-- unless the descriptors do not contemplate processing outside the computing node and this is also as I already pointed out there is no problem with packet processing there is no lingua franca for defining packet processors over the full set of possibilities we have and well the pointers to the solution I think this is not a closed list but what I really think is that we should try to to rewrite the question trying to give to Sdn the same importance were already giving to the the computing party smart is more than an every proof Atlas Sdn is trying to really think about both part of the of the question in fact that could mean considering the the network really becoming part of the the software involved in the network service provisioning just imagine that you could get for example ciphering as part of the link description you get on a name service you say I\u0027m going to I need to have this link Seifer and that involves deploying that functionality on the various specific part of the level you want you could also implement advanced as lessee metallic more easily because you could "
  },
  {
    "startTime": "00:33:27",
    "text": "really a splice you could really as lies at the point you want just imagine that you could ask for a link for example to have villain conversion that could have also tunneling suffering or even providing resiliency just in the definition of the on the network service have a descent to an Orchestrator and Orchestrator configure this not only but wooden floor rules but also deploying deploying code things well the network equipment should be able to build allies it the sources nowadays i you have found that is more easy to is easier to to visualize on so wall switches that to visualize on basic features is not so easy to a stack open flow switches or open flow switches on on on real silicon i think that reconceive it is something we have already studied in the past and it\u0027s it\u0027s important we really think that we should not think that this is an answer platform awareness problem is more than that and we really think that well it\u0027s not an easy energy term dissolution please that\u0027s what doing result I said that some something with tend to two-seat about research in that way when I hopefully think it is thank you very much okay thank you all so now is the moment in which you should be lining up on the banks thank you for paying attention to me did I understood correctly from your slides that using containers or virtual machines is irrelevant for your purposes excuse me containers virtual machines there was a statement that it\u0027s at the format of the distribution of code is not relevant are you saying that you don\u0027t see any differences between using containers and virtual machines no so no no no no that was not my if I if I saw that it was really limited my idea what I wasn\u0027t what I was trying to say is if you consider filter machines or you consider containers or you consider unit errors at a certain point there is some similarities in the code you can use I mean you can use C whatever and this you\u0027re pretty sure that this C would compile more or less the same because you\u0027re using the same GCC compiler on any of the approaches but of course the the core placement is critical of course I think if you are dealing with the the "
  },
  {
    "startTime": "00:36:30",
    "text": "network interfaces okay good related question what is your feeling about isolation when you when we are talking about for instance network slicing does this approach impact isolation of flows in which terms in when I speak into over the feature or as witches yeah I mean finally it depends much on the on the switch feature you have you have for example switch that offers meters you can isolate at least from the performance point of view as less as between them but that\u0027s kinda as I tell you again this depends very dependent depends very much on the underlying technology as well at least I mean we don\u0027t have the university we don\u0027t have every brand of switches but we have the problem because it\u0027s difficult to share that pointer for example of different open flow instances you it\u0027s not so easy so I think that at the point there are some times that at least our experience that you are bounded by the implementation of the of the switch but I really think that in the near future for example you have elements that would give you some for example performance isolation media you can through the one part of the switch not affecting the other that kind of isolation could could happen thank you welcome back dr. telecom we\u0027ve been doing such things for some time now and the conclusion is generally Intel CPUs are nice and get decent speed not great speed but decent speed but they use pretty much power we have much power requirements which might be a problem for us you get better metrics for power consumption and speed with proprietary hardware but then you have always proprietary variants of those protocols like open flow or even p4 we had high hopes in p4 but we did some implementation and turn out for P fear P for equipment a we had to use completely different code and for before equipment from vendor B because they have just different kind of resources which get exhausted how you are coding your code so so you can\u0027t really do vendor-independent stuff today this is obviously I think that\u0027s one of the of the the problems you have you don\u0027t have the I mean you are never comparing oranges to oranges "
  },
  {
    "startTime": "00:39:32",
    "text": "that\u0027s that\u0027s the problem they\u0027re moving different things on I mean if you are running things over the same server platform 866 I\u0027d say on whatever with to intermix the power consumption the CPU occupation is something that you can really compare more or less easily for a given solution but is not easy because it happens it could happen what you say that perhaps one a specific piece of software gives a better result that another one or some specific configuration so I I really think that well I really think that from the point of power consumption perhaps some activities could be improved if your users using switch elements if this happens to be before in the future something that they really would like to see because that could be a lingua franca that could be also such a more general architecture that could be easier that will be easier but the language alone both vendors implement people perfectly but yes but yes but it\u0027s a problem with before you compiler you do it and you do I mean you can\u0027t have before over toughen and you can\u0027t have before I understand also over know be flow and bu5 so these are different I mean it\u0027s more or less like see what they see what is the the death life doing C programming for an 8-bit CPU or 64-bit CPU totally agree yes thank you Kairos and mine to be talking about I think towards the end about decoupling sort of control plane from the data plane and doing infrequent decisions in the slow path so to speak and then processing every single packet in the in the actual open flows which are the ASIC or whatever that is kind of what you\u0027ve got at with the last bit of the presentation correct you\u0027re trying to present a strategy for doing NFV where portions of the hard decision making is done infrequently on on the actual commitment general purpose computer hardware and then the high-speed every packet processing happens and the more special purpose hardware crisis do you see any value in researching what is possible to do in that special purpose hardware like you know impairment I mean I\u0027m a set of functionality that should be provided in order to meet certain news cases well I think that for example I think it\u0027s something I tried to mention I think "
  },
  {
    "startTime": "00:42:32",
    "text": "that the facilities you have nowadays to visualize general purpose operating system of a general purpose hardware are not available in switching I mean you have a bunch of limitations if you want to do that at a certain point I will not name the brand but way we wanted to to run open flow instances over the switch there were no there was not the possibility to put logically a switch on top of our switch we had to run a cable outside the switch for entering the other instance this is a pain disease this breaks the programmability of the approach so that was something that could be done at the research level was to think also the switching platforms be able to be able to be realized to be able to learn classical instances several overflow instances to be able to start with all the other over the other to start the control they have been research done about that and I think that\u0027s something that is promised Thanks thank you okay thank you next one let\u0027s talk oh by the way two things don\u0027t forget to feel the blue sheets and second the edge computing thing is on on Thursday a date where I don\u0027t know something that\u0027s header oh I don\u0027t know what happened with the video no it was it was my computer sorry now I have to open the air so in the spite of his name his aspect better always Japanese in practice no no no no I know I know I\u0027m gonna and changing it you can start introducing yourself okay okay you probably know from this life no my name is Pedro Martinez I come from an ICT Japan and I will present some efforts we are doing in terms of exploiting a set of measurements from different places not just not just network resources in order to actually perform the last iteration of this be more flexible systems no too dynamic service demands well I will first start with a brief description of the motivation or rich topic of this work and our proposal of course and I will then align that proposal with what I suppose more most of you are more "
  },
  {
    "startTime": "00:45:33",
    "text": "interested at least align that with the NAB management and operation structures and finally I will conclude and give some hints on the fit work next piece first this is a bit obvious but as you you know we we are in in a world where research the man is not continuous we have a high variation on it and but normally in general in the past especially not today but in general we are more happy having fixed versus allocation they are easier to manage they are easier to decide etcetera but but it is not optimal so that we have to answer it with some kind of elastic resuscitation as we have phone in cloud computing in other in many many many environments we have this kind of elasticity concept but we are trying to even go further in that sense because normally they are not meeting the actual demands of networking in terms of autonomic autonomously etc this so in this use case I will show how do how can we deal with a different no sorry not different well how to deal with a problem in the network that is happening after one incident in axon terminal incident happens like for example an earthquake and how to actually react to that problem before actually the users of the network increasing the use in this case we have one helpdesk that is waiting for four users that can attend when something happens but in that sense that that element not elements should be enlarged in order to avoid some service disruption okay please next so in this case we propose to build a domains with some solution based on their B so we can easily increase or decrease the resources assigned to the to every every part of the system in order to react to us as I have mentioned to changes in dynamic changes in the buyer especially when it was the the the race was required now the number of uses that are ten in one service is increasing or decreasing that\u0027s peaceful so then we propose to introduce one engine then that is interacting with every part of the every controller of the network or network controllers on also built on machines controllers and especially in this case that engine will also interact with some detectors that we can call "
  },
  {
    "startTime": "00:48:34",
    "text": "sensors like for example a seismograph that is MA meter sorry that will report that something is happening outside this can also be fed by big data information but what we have a target that right now it\u0027s just one kind of external detector that is included so and we have called this the autonomic vs. control catheter and it will collect the that kind of information from multiple places like say have mention controllers and also detectors and then it will analyze it in order to find out what is happening in the system after that it will adapt the resources on the system just communicate communicating the new set of resources that should be assigned communicating it to the to the controllers in this case a new function can be deployed you know in a new place in order to to balance know for example the demand of users and things at that so and after that were intention is to achieve that in less than one second that means that to adapt the system the whole system not not just over controller or things like that but the whole system unless what that one second but it is it is difficult so we have found that some problems like for example we have too much of situations they had no real lot of information to analyze in a real short time so we have to to filter or apply different techniques to to decide which information is interesting and which information is not and also we have to apply a high-performance controller in both in our side and also in the in the underlaying control side because we have also to reduce the delay and especially we have we are now researching how to apply learning techniques to anticipate that they actually anticipate the the ratios demanded to the situation is actually happening and finally it requires some real ability to to ensure that that is working as the administrator wants it to work because this would be an autonomous series so administrators must rely on it so it should be reliable so this is the review of the system please continue it will exploit some automation techniques like to minimize human involvement and in this case administrators will set up the operational boundaries of the system by providing some some set of "
  },
  {
    "startTime": "00:51:36",
    "text": "statements that the the mind the amount of resources that can be used by the the control system to assign to the service and all like for example the lower and upper low of thresholds like in a basic threshold based controller please come and it will also separate the every every component will be separated in a major series so it can be pluggable and of course it can scale up or down as needed and it will also remark the closed-loop effect that means that after one decision is taken that this controller will check that that they decide objective of the of that decision are being applied to the network please so finally it is it really supported as many other system black with some knowledge base and supported and reinforced with the common ontology please and now I will go to the to the most interesting part and how this is related to nab and and especially the management and operation defined by H cos theta well what we place our engine in in the in the situation of the beard oil infrastructure management well and we have explored that and we have implemented we have one implementation that is in direct interacting with other elements of the system and like for example we are using the the RBI no interface in order to transport this kind of statements from administrators and in this case the NAB of Orchestrator hood / controller and we are also using we are using on the other hand they in an FBI infrastructure interface that we have adapted to include also the interaction with external elements not just resources that are part of the nav in general and maybe structure but also external elements last like I mentioned the this kind of system o meters this so as I have mentioned this this is the the role played by our engine and also that we have as I have mentioned the interface it but we have left out maybe IBN f FM interface because this is out of the scope of for now from our objective we have experiences with this OpenStack physical deployment and we have seen how mentioning we have standard the the interfaces to enable the interaction with external air elements etc this and as to conclude we "
  },
  {
    "startTime": "00:54:40",
    "text": "have just designed this this infrastructure to provide the functions of this baam and we have standard interfaces and we have achieved good performance in the OpenStack deployment I have just mentioned and we in using that deployment we have a better view at the tail view of the overlain and also and then lay in infrastructure that will be involved in this control process and it allows us to get some production like results so it will be easier to transfer this over over findings would be it would be transferred to the production real production environments and we hope to benefit the set of stakeholders like that are especially interested in the efficient use of resources like for the reduced reduction of the capex and OPEX as many of us are familiar with and also benefit both infrastructure providers are consumers that means that in many many market operations would be interesting to to provide some function in this case like control function that allows providers to exploit their infrastructure but also to allow consumers to optimize the resources they are using so our next steps will be to of course keep reducing the time required for this control to to perform the analysis and also to increased the validation scenario as I have mentioned the basic use case to increase it with other additional use cases and align it with additional requirements from NAB Sdn like for example see figure out how to integrate the missing BIA BNF mmm interface that we have to provide in order to fully integrate our approach within the NAB mano scheme that\u0027s all [Music] so I saw that you Sarah banks net Scout I saw that you just mentioned that one of the things you want to address is the V I V n FM that\u0027s not there I\u0027m just curious it seems like a really large part of a use case that would be useful now d1 why is it out of scope in your initial pass because it\u0027s not out of scope of our objective is the outer scope of our current target that means that why is because we are doing the the we are building name the architecture gradually base it on real implementation and we are leaving some some interfaces that we initially can consider secondary like we are more emphasizing the interface with the orchestrator with we thought it was more interested to have that before having the other interface "
  },
  {
    "startTime": "00:57:42",
    "text": "to the middle layer this elements sorry [Music] any other question I\u0027m curious how do you differentiate this from things like OpenStack on grass and this kind of policy managers that are already available for clouds persuasion systems yeah yeah that we have started working with that kind of solutions but the problem is especially over target to include information from the outside that means like our final target would be to anticipate to some event that means that in some moments we will include also big data information and that is a problem with current fermentations of this control solutions so for now our main target is not actually react to increases in in me the load know of some element know is to react to something that\u0027s happened outside even though we can fail and then nothing happens like for sample thinks that in this case in this use case we have this helpdesk and it will be a and if something like a strong storm earthquake or tsunami here something that happens it is supposed that many people will contact this help desk to get help to inform something wrong has happened something is bad said yeah well in the past we have a we can see some experiences will help this were totally broken after that because we were overloaded etc and it is and we have to two solutions we react and add resources or we just that and what happens in this solution is that some people can be unattended because we are react after the system gets overloaded or citta or we anticipate to the load and we increase the resources before that\u0027s the problem that current solutions are not able to provide even modifications of them cannot be Havel because they have to deal with information they study out outside from it\u0027s not normal to work in domain thus part of the you know ambient sound okay "
  },
  {
    "startTime": "01:00:48",
    "text": "so well this suspense also spends is thank you very so next one is this one then this one in lying is a store claiming sorry Stuart diamond from UCL I\u0027ll be opening your presentation I\u0027ve taken time off from my job as a talk to present some slides one done yeah I\u0027m still claiming from University College London I\u0027m gonna be presenting some slides about some work we\u0027ve done that takes a slightly different view on NFV deployment and the structures in which we can actually deploy these nfe elements so basically what we\u0027ve seen is there\u0027s a lot of stuff you can do a lot of elements involved in NFV but the observations that some of us made in our group is that there\u0027s this quite interesting work going on in the network slicing part but often the architectures presented from the diagrams had all the nf these should we say executing in one data center so they\u0027re a bunch of attributes you could apply to the network part that weren\u0027t always maintained in the elements which actually ran the network functions so in our mind there was some kind of dilemma how do you maintain all these things and stuff presented in these slides tries to address some of these issues and tries to present a symmetric model and also some level of abstractions that provide a level of consistency and control to maintain a web so overall we make this case in the slides and the work that we\u0027ve done for creating VIMS on demand rather than having a single vim for a data center so basically we suggest you should be able to create a data center slice as easily as you can create a network slice and that if you create this data center slice then this new slice should actually have its own VIN not the one that was originally came with the data center and later on we\u0027ll show some of "
  },
  {
    "startTime": "01:03:50",
    "text": "that and some of the architecture elements there are a consequence of doing that so this is the basic model we\u0027re trying to do we have some kind of Orchestrator it has a sum model of what a network slice could look like little green lines there point my fingers not long enough this should be a point you should be a pointer to try to stay as much as you can on the on the pink oh it was people watching on the so the inside the orchestrator you know but have a time representation let me recommend just hold the end they make on your home because if you went to John is so then we have the orchestrator with the representation of the slice and in essence it wants to deploy a service on to that slice whatever that means and we have something where there\u0027s this slight representation of a slice in the orchestrator and we actually have the slice elements there some data center parts there\u0027s some network parts and the little green squares present the vnf star part of this whole representation these run on the physical resources inside the data send to the network okay so what we\u0027ve seen is yeah there\u0027s many slicing models and they sliced the network but like I said earlier the NFV elements happen to be scattered across the data center board we mean by scattered well it could mean a whole bunch of things based on various policies requests to the vim from the orchestrator in essence the data center is one big fat shared resource and it doesn\u0027t maintain the same attributes that you could apply to the network so here\u0027s a nice picture we see from some physical level I\u0027ve got a data center with some staff and they\u0027re connected by networks and yes there are whole bunch of mechanisms for creating sliced parts of the network and part of this is "
  },
  {
    "startTime": "01:06:50",
    "text": "already being done in the ITF and so I Triple E it\u0027s all coming on next one please and then what we\u0027re saying is well we should be had the same capabilities inside the data center we should be able to do slicing with some attributes and once we have these parts I\u0027ve got some networks sliced parts I\u0027ve got some data center sliced parts we have to connect all the bits to represent the single slice end-to-end spanning some geography how this is done it\u0027s not always obvious in all the cases but in essence it needs to be done properly for full network slicing and service delivery to happen well so just want to go through a few ideas definitions of what these elements are so we say a DC slice it\u0027s an abstraction over the data center okay and it represents a collection of resources of the data center and it can be importantly controlled and managed separately from the other slices inside the data center much like the network slice parts are managed independently of the other Network slices okay and this is different from having one big fat data center right okay so we say a DC slice can be managed sorry allocated any data center and this could be big data sense in central the network some medium-sized ones or even at the edge because there are various cases where I might want an independent slice all the way through the network from the mobile edge all the way through to this core network doing a lot of processing and it should be independent of the other parts we also say well once you have this now it becomes a basis for the control in these virtualized elements I now have some underlying system I can now put my own virtualized bits on top of it okay more excitingly we can say well the slice isn\u0027t fixed now it\u0027s soft and dynamic it can also be elastic because I have some control over it I can ask someone please make my slice bigger data center slice bigger please make it smaller to match demands because the data center will be bigger than the slice itself and hopefully the data center will have enough spare resource to allocate a little bit more or take some from us as needed ok next please ok so what next now we\u0027re kind of coming oh this is quite interesting well because the vim is going to be allocated on demand we can actually choose any kind of virtualization we want we\u0027re not "
  },
  {
    "startTime": "01:09:51",
    "text": "fixed by what the guy at the data center chose to deploy when he picked up his favorite bit of software you might go well I want OpenStack and I want this module that module and I want to do it like this well if I\u0027m allocating my own slice and I have my own vim I can actually choose what kind of mechanism I won so we\u0027ve got here you have Xen KVM maybe have containers doesn\u0027t matter but the consequence of this is that it\u0027s now a customer choice I can actually go along and say I would like a slice and I would like you to deploy this vim not that thing because that\u0027s the one I want now that gives you a very different model and use a lot of flexibility and the other thing is that if the system set up in the right kind of way then because it\u0027s your vim for you to use over your slice your hosts you can control some of it obviously not all of it but there\u0027s a whole bunch of stuff you\u0027ll be able to do with the vim for your slice that you can never do at the moment okay so what can you say we\u0027re saying vim needs to be allocated on demand for each slice but we need some kind of management component that can actually allocate the slice and as a consequence the relevant vim the slice owner can manage configure control their own vim and that them could be any kind of technology that\u0027s out there and we see that if this is deployed the actual data center itself can actually have a catalog of ins they can tell you we are able to deploy this kind of vim for you from a pre-existing catalog because the VINs can can themselves just run in virtual machines ready to go to be instantiated okay now the next point is will some of these VIMS are quite big and this is a kind of secondary issue if you allocate a slice on demand and you then allocate vim where\u0027d you put the vim and this is some secondary work that we\u0027ve done that isn\u0027t part of these slides but the vim elements themselves needs to be placed somewhere and there\u0027s a good chance in a commercial setup you\u0027ll be billed for your vim because it\u0027s going to be using some resource next please and you have this lady waiting for you to question no of course can you can you say your name yeah yeah you actually assumed that you needed vim her each slice and I don\u0027t really "
  },
  {
    "startTime": "01:12:52",
    "text": "understand why this is the assumption for example you\u0027re thinking about regular network and we have multiple VPNs so do we have a network per VPN now we have one network which is shared between multiple VPNs right so same here one beam can be shared by multiple slices so why do we need him to be allocated for each slice and in my opinion and again you may get to that later as much as we make the slice awareness at the upper levels we get it much more simplified in the lower levels but ok but maybe you can start just clarify the assumption here oh okay yeah yes there is nothing in this presentation that assumes this is obligatory so if you have a scenario where having some shared data center and using the same vim and same resource as everyone else suits you when we\u0027re not saying don\u0027t do it what we\u0027re saying is there are some scenarios where you want some guaranteed resource and you can ask the network to give you some guaranteed resource in the current setups of data centers with VIMS you have no mechanism for absolute guaranteed resource completely isolated from the other people where you control the hosts then the old days with data centers you\u0027d rent the hosts and you\u0027ve got your hosts that\u0027s it and that\u0027s the one end of the spectrum and now you have these data centers where there\u0027s the vim some of my Amazon provides Google you talk to one entry point you say give me some stuff and that kind of of the spectrum and we\u0027re saying there\u0027s an intermediate point for certain resources some telecoms resources IOT situations certain network services where you want this intermediate model and it suits you so many people it doesn\u0027t if you\u0027re deploying one web server and one database for a small application you just don\u0027t need it and this this kind of scenario isn\u0027t relevant but there\u0027s our others you know speak to a lot the telecoms guys in some of our projects this kind of situations ideal for them where they want the data center they want to have some kind of flexibility but they also want to be isolated from the others yeah some extent yeah okay it\u0027s like please so then we come on to the slice control we call it slice controller this is the element that you talk to to request a new slice you ask the slice of controller I get the end of this answer question would you want ask it now before I go on okay so we ask the slice controller please give me give me a slice of this size and can you please allocate a VIN of a particular type so "
  },
  {
    "startTime": "01:15:54",
    "text": "the slice control the range for that once it\u0027s done you\u0027ll get a handle back on your VIN for your slice the important thing is that in your slice your vim cannot manage hosts that are part of other slices they\u0027re isolated and controlled yeah and the slice controller because it\u0027s the element of control it can also it is the one that has the capabilities to add new hosts on-the-fly add new ones remove hosts from your slice button their slice access control is important kind of another question I guess that you are talking about one beam per slice but that\u0027s nothing prevents to have multiple beams allocated to once in this life right nice yeah nothing prevents it I guess yeah yeah I mean that\u0027s a model was he\u0027d probably want one vim for a slice because the slice could be is as two hosts or you know I mean it\u0027s pretty wouldn\u0027t but if I said please allocate me a very small slice would I allocate to VIMS I don\u0027t know I mean but there\u0027s no I mean that might be outside my head that scenario but in reality there\u0027s nothing to stop there yeah I was thinking of multi technology kind of slices where you may need multiple beams to be able to control because our different type of resources then I think you\u0027d allocate two independent resources with the different things and then rely on the other technologies for the connectivity yeah okay next one please so in the next few slides I\u0027ll show a kind of pictorial structural view of what we\u0027re aiming for actually built gone please yeah so we say currently we got this one vim Purdy see this is kind of snore you have you have them talks to all the hosts and what happens is as we\u0027ve seen over time the vim gets more and more functionality to do more and more stuff and then people go this module doesn\u0027t well they updated that module but that doesn\u0027t work and I don\u0027t need the vim to do this oh you need no first that\u0027s that\u0027s what happens at the moment and then what you have is well I\u0027ve got this one vim people try and deploy services over it and because you mostly have very little control the service elements via Neffs whatever which are colored in yellow and green here they get allocated to wear vim wants to put it so we can see that this this host here has two functions in it and there\u0027s no isolation and these guys might really want it okay next please "
  },
  {
    "startTime": "01:18:54",
    "text": "so one mod lists say well well extend the vim to do some kind of guaranteed staff make it look a bit like a slice interesting model and I think there are elements of OpenStack that will try and do this to isolate the things but of course you\u0027re still stuck with this issue that you\u0027ve got one vim which is fine whether you\u0027ve added even more functionality to a thing that already has a lot of functionality and the person that requests the slice still has no control over any of the policies any of the control it\u0027s still someone else\u0027s issue okay so this is why we say let\u0027s try and go for this model one vim per slice and we have this flexibility of being able to control it as the customer and so here\u0027s a representation from earlier the little blue blob with the yellow slice represents this so you see L we built a proof of concept of this slice controller we use some technologies lightweight technologies virtualization just to demonstrate that actually works are built sliced controller has a rest interface we can make requests the various slices allocates some hosts from a pool of servers and then allocates of vim on demand as needed and passes back the your eye of the allocated them back to the caller and then the caller can then do whatever it wants in terms of placing virtual machines on to those allocated hosts so it kind of looks like this we have this slice controller it actually has a catalog of all the physical resource and when you make request some slice allocates to them as we said yeah and as you keep doing stuff you get more slices more VIMS but of course we can see that the elements are genuinely isolated from each other so now just to finish off I want to give a more of a overall high-level view where do we go with this okay so now we have this slice that encapsulates network parts and DC parts and it\u0027s connected yep next please and we\u0027ve got bins for the data center part no but nothing for the network part this is my observation as my background I used to teach operating systems and compilers I noticed that there\u0027s no element for talking to the network aren\u0027t talk to the data center there\u0027s no equivalent for the network part so we say well maybe we have an "
  },
  {
    "startTime": "01:21:55",
    "text": "equivalent might be quite simple to start with but maybe it\u0027s there because we can do something with it next one please so here I present more of a stack of abstractions of what we can do at the bottom layer we have the resources the data center the network parts we see my slice controller that can allocate new slices and it gives you varies so the slice control the stalks of DC you get a slice partition of the data center we already have some mechanism for taking the network and getting a slice part I don\u0027t know it\u0027s called that but it can be for the data center part we have them for the network part some equivalent element may be some exist at the moment I\u0027m not 100% sure people can correct me if I\u0027m wrong but then we can go okay so I\u0027ve got my network slice part I\u0027ve got my DC slice part I\u0027ve got my vim for talking to my DC slice and I got my little Nimbus and now I can have a full representation as an abstraction of all these parts inside the orchestrator and I have a point of control and interaction with all these elements okay next please and that means the orchestrates can now deploy on this full sly aggregate it slice by talking to these elements to get stuff done these can act as control points and measurement points getting stuff back please yeah okay and then we have once we have deployment we can see the things being deployed okay getting towards the end now next so conclusions so yes there are some scenarios where we believe it\u0027s quite important to have these separate slices presented the case for why we think it\u0027s useful and beneficial and showed some of the elements and as you just saw there\u0027s some kind of layered abstractions you can build up on top of this to give you a more functional system overall and so yeah bigger picture for control and it is appropriate for use where you\u0027re kind of using clouds for networks when things were separate some of these models people thought maybe not so much but now there\u0027s this idea of NFV and isolation and slicing we believe this is a really important way forwards thank you yeah so finally yeah there\u0027s a lot of further "
  },
  {
    "startTime": "01:24:56",
    "text": "work particularly in terms of standardization api\u0027s mechanisms for interaction but what we can say at this stage is it does work because we\u0027ve got it working and if anyone else is interested and coming along when doing things with us we\u0027ll be interested in doing that okay thank you so you have questions over I see a car to echo from and then she swore line and so short question to the model yes the be I am I\u0027ll come out of this slice ago is it the part of the infrastructure that is being sliced so what I\u0027m asking is who is the tenant you\u0027re asking sorry who who is the tenant tenant so I\u0027ll give her an answer we see that if well because I didn\u0027t bring my other slides it\u0027s probably it\u0027s hard to say but in essence we saw that the vim that you allocate for the slice is in essence part of the resource that you\u0027re utilizing so if you\u0027re the customer the data center you ask for the resource for the slice but your vim that gets allocated is yours as well so in essence that\u0027s something your model is it is one part of the slides that they get or is it allocated within let\u0027s say we actually have two models we actually have two models for how this can be done one is the vim elements are deployed into your slice so if it\u0027s a case then I can immediately say you don\u0027t need to do it I can do it myself right as I could be deploying in OpenStack and earth resources what what do you care possibly the other model we had is that we reserved a whole bunch of hosts in the data center only for the deployment of VIMS for other slices so if I asked for 16 machines you really got 16 machines and your vim was outside it in this pool of hosts for Vin\u0027s I didn\u0027t present them here okay then nobody else can use those 16 machines right yes but that\u0027s still true with yeah exactly that was essentially the leading questions is the actual question that I wanted to ask if you have several Vince VI amps which are running in the infrastructure shouldn\u0027t you be somehow tweeting the question of conflicts if two wins can essentially handle the same resource which ultimately will be the case in this model unless you do some kind of hard slicing which you know in our model no no single host can be managed by more than one thing okay but then it\u0027s essentially like making a smaller DC out of addictive exactly yeah absolutely yeah absolutely so you get a kind of virtualized DC yeah exactly that yeah "
  },
  {
    "startTime": "01:27:56",
    "text": "ma clip Shan you see I have a comment and a clarifying question so the clarifying question actually follows address so the comment is more now if we introduce in this picture the user of a slice yes multiple slices which is sorry for using that term that the tenant right yeah so I understand advantage here is that you expose more control to the user of the slice to organize it slice yes so um then I would rather say that one whimper tenant is what you\u0027re looking for not one room for a slice because I think that the tenant can use one single then it doesn\u0027t need to have multiple them so coordinate to manage its licensing I guess it depends who who is requesting the slice if you\u0027re a telecoms company and you\u0027re doing some kind of end-to-end application you might allocate the slice for the telecoms guy on the basis that they may have clients who are the tenants of that slice yeah so that you actually get a different layering of who\u0027s the customer who\u0027s the tenant at the moment when you have one big data sense we one then the tenant is the telecoms guy or even the end user because he\u0027s the one that makes the request in this model we separate out the VINs because now the telecoms guy now owns the VIN temporarily over some long time period and he himself can have separate tenants inside the slice so you get an extra layer of owner tenant whatever so make sense yeah and so in the view of exposing more control as a front-end to the customer you may use brokering systems or something in the past we investigated something similar to this concept which is well non OS is service right so you expose the full energy mono plus of them yes to the customer but as author also said I also assume that the Vienna apps already in apps of multiple tenants are on board on this same shared infrastructure of physical infrastructure so you need some level of coordination so you need a kind of master of in in that case to coordinate with just you a white or a sort of conflicts yeah I mean it depends on the use case that\u0027s what\u0027s a value and the lady asked me a question we\u0027re not saying some of this is obligatory it just gives an extra level of flexibility and mechanisms for control and abstraction and layering that the current model makes rather difficult Peter Ashwin suppose while we I think I\u0027m asking or making the same comment is the first question or a slightly different way but optimisation if you sort of partition into different subsets "
  },
  {
    "startTime": "01:30:58",
    "text": "and individually optimized across those subsets and try to combine the result you don\u0027t get an optimum Rea you need a flat set of resources to to optimize over so I\u0027m just the point being that you could never actually fully optimize all the resources within the entire data center right it\u0027s recursively optimized within each one is that what you\u0027re getting at the more that individual data centers across a large geography could have individual slices so that your slice that we had as the green line with the blobs is not within a single data center yeah but is Penn geography so the point being that your your logical data center could optimize it itself but not with respect to the other isn\u0027t absolute yes I can so there\u0027s no statistical gain across the individual slices yes and in fact someone else asked me a question of a few weeks ago they were like couldn\u0027t this possibly use more resource because you pre allocate and do stuff from the answers yes you\u0027re now trading off a flexibility and control and policies that you pass up to the customer that they never had before versus some potential extra resource usage and that\u0027s a trade-off for the customer because they may go I don\u0027t want to spend more money by having my own boxes and they go that\u0027s fine there\u0027s existing model that already works for you others may go for me the isolation is far more important and the flexibility is more important than spending a few more dollars over the year yeah as long as you\u0027re aware of it yeah yeah exactly yeah yeah so when you see your name Joe Mohammed baqr communication you are you looking at each individual veem separate from each other and you are you going started okay I live album on top or or you just the orchestration to a spin up the different beams for the different slices again nothing obligatory we\u0027re saying that here is I model the extends what\u0027s there if you want to have three slices that happen to have three fins and you want to put stuff on top that\u0027s up to you we\u0027re just saying here\u0027s an extra level here\u0027s some more stuff once you\u0027ve got your handle on your Vin\u0027s your the application guy you\u0027re the custom you do whatever you want and this and that but my point is so we can they say oh you talk about this slicing the data center have two separate games yeah now the question I have here is what is very-- under north are you envisioning if some kind of things is driving or even talking about some kind of orchestration driving that I\u0027m start doing the more VMS slicing because if you think of the orchestration to build those dreams okay fine we can\u0027t be all can do it the the matter is going to "
  },
  {
    "startTime": "01:33:59",
    "text": "became is it easier to have that or hopper beam will that visualization then miss your other games on there - so you actually you know optimization for your hoe datacenter and also create create those slices as an esse to the top layer being this make sense yeah I think there\u0027s different ways of doing it you know I mean it\u0027s a possibility you know yeah yeah just complement what he was asking it was a difficult presentation to me especially well what was seem to be missing from my perspective was that relationship to the monastic and if you are able to show how this relates the monastic I think you are answering his question but what is on top of women how the beam is in in depth monastic in relationship to orchestrate to run and and the relationships authentically doesn\u0027t change in those relationships the only thing it changes which you don\u0027t see in the man Oh specification is this idea that the vim is dynamic in the man oh spec you look at it and there\u0027s one of them and the assumption is it exists in advance there\u0027s no concept of it being dynamic at runtime and being elastic the other stuff stays the same all we\u0027re saying is this vim can be allocated at runtime and you will get the the layers above will get a handle on it at runtime you don\u0027t have to know about it in advance what you do need to know about in advance is the slice controller because you have to have an element to talk to to then allocate the resource and the vim to get a handle on it so so a lot of the stuff in the slides is all these things are dynamic you can\u0027t assume I know the end points in the network I can\u0027t assume I know where the vim is I can\u0027t assume anything at all maybe the slot where the slice controller per data center is you have to build the stuff up from dynamic elements based on the data that comes back to you at runtime yeah okay Peter Ashwin Smith while we again I\u0027m thinking thinking out loud here so hopefully this will come out correctly if you\u0027ve sort of physically isolate a set of logical data centers so the resources are isolated if they if their output and input aggregates into a statistical multiplex how can you how can you trade-off between the two through that pipe if you don\u0027t know what\u0027s going on within those individual data centers doesn\u0027t it imply that you would in order for this model to work and end that you would have to have "
  },
  {
    "startTime": "01:37:00",
    "text": "actual physical boundaries for the bandwidth between the two data centers in other words TDM or DWDM I don\u0027t know the answer I\u0027m just this whole works been predicated on the idea that there\u0027s Network slicing yeah right whatever that then manifestation happens to be we have a DWDM TDM and stat Markson there\u0027s a bunch of others I\u0027ve been told as well and so the actual technology of the network slice is not a feature of raid this way so this is the idea of why do we have this NIM this element to talk to the network because you need an abstraction point for the higher level up to isolate the network slice what we say actual technology I guess my point was that you have these guaranteed bandwidth guaranteed compute pools that are connecting to each other\u0027s yes if you connect them through a shared resource that mucks packet you have to know how much is going from each individual pair and you have to have isolation mechanisms I want from my understanding the network slicing provides that is the purpose of the network slicing to provide the isolation the bit you need at runtime is the endpoint stuff and you need to know the attributes of your slice and you can measure it at runtime yeah the purpose of slicing is not necessarily to guarantee complete isolation across all the resources it\u0027s it\u0027s to create that illusion right so that it things work so they get the right Keowee in the QoS if you have to do that by physically isolating all the resources you may as well just build a multiple parallel networks at n times the cost the idea is to get statistical game through cloud and cloud technologies wherever you can so it\u0027s not just physically isolate everything in a way you go that\u0027s sort of the easy answer the cheap answer is to is to share what you can isolate where you must yeah so I was just asking how that if you know physically isolate in some places but then they aggregate and share that that requires some coordination you know I don\u0027t know what the answer is I mean similar like saying will I run multiple TCP streams across the network right what what do i what does the guy out there have to know about it he doesn\u0027t are are right programs open TCP connections stuff goes the application never sees it right a certain level of layering and abstraction the guy below deals with it and it works or it doesn\u0027t yeah I think it\u0027s only true in this model there\u0027s a certain layer low down through various controllers you\u0027re not gonna see as TCP is probably not a good example it converges to proportional "
  },
  {
    "startTime": "01:40:00",
    "text": "fare at some some approximation proportionate fare which is not necessarily the right ratio for for slices right but it\u0027s interesting point definitely yeah yes Alex Kelly\u0027s I\u0027m from UCL I\u0027m not going to ask you a question from our manager I think we\u0027ve met but the previous point is that one of the needs or the may need for slicing is not to resource to partition resources it is to create an environment well separate services of qualities are ran somehow under control of the tenant that implies partition of resources but that\u0027s to some extent the needed part now in I hope that that answered the previous question at the end of the day the slides are not for full isolation this could be done many away but one of the issue here is that we are moving out from a very large data centers Micro data centers or network data centers or data center at the edge where actually most of the functionality could be put in including Wiltjer functionality in this scenario when you have a lot of each data center interconnected and that\u0027s where you create your slices this type of slice is under some level of control automatically that requires maybe a slightly different model of control and management of it what will be your comment how to move to this large-scale sort of micro data center interconnected scenarios where things will be moved in other words an AV moving edge in practice yeah yeah I mean no I agree and mentioned in the slides we have edge I don\u0027t see it being the edge data center would undermine the conceptual model of what you\u0027re doing the fact that you might deploy a different then have more lightweight virtualization it\u0027s still part of the so it\u0027s a model that\u0027s not a particular implementation or technology for doing it so yes I agree that\u0027s why I said a few times end to end is where it\u0027s at to make it to make the full slice happen yeah well before before you you can consider dismissed a couple of questions Allison no no no it if you want to know "
  },
  {
    "startTime": "01:43:01",
    "text": "it\u0027s not first of all is that site I see this idea of deploying a game fine I mean that\u0027s but turning to count how much an instance of OpenStack for example Waits well that precisely having it up and running is not precisely a treeview tasks which are your experiences with I mean wouldn\u0027t fall for much more lightweight it depends I think on the time scale over which you want your slice if you think everyone says CDN right I want to run CDN to here and there I\u0027m assuming it\u0027s not going to run for a few seconds your time scale over which you want to maintain this bits of slice it\u0027s quite big so if you\u0027re prepared to wait some minutes to have some resource for days or weeks or months it\u0027s a miniscule percentage of the lifetime if you think my Alex said there it\u0027s going to be at the edge and some people are going to be there and we need it for half an hour and we just want to allocate it because some people are learning to go away then yeah opens that starting opens that would be a significant portion of the time at which you have the slices yeah the resources so yes some and this is why I said to Alex it\u0027s this is a model for doing stuff not a particular implementation in different instances in different data centers and different lifetimes you would choose the technology to match the requirement yeah does answer that yeah no I mean I mean the this is one of the things they have had in mind for quite a while that in general cloud managers right now mm-hmm rubber killing in general but very much connected with the reflection that Alex was mentioning it\u0027s if you have a huge data center with millions of nodes for sure it makes sense to have it in those cases somebody had to start thinking about a much more lightweight what we have on each year we\u0027ve been developing a number of years but why do people why\u0027s OpenStack so big because the data center it runs on is big and there\u0027s a and the tank scales are on scales and the functions more functions are we need to do that doesn\u0027t do that well we\u0027ll just write some Python and a bit more Python oh but it doesn\u0027t do this what were add some more and who cares about three more courses right buy another "
  },
  {
    "startTime": "01:46:02",
    "text": "rack of top-of-the-range servers to do a tiny bit of monitoring and all will be done yeah the other thing is that they weren\u0027t trying to mix and match whether the weather was presenting at the beginning I was worried you see here because I mean I see them the both approaches moving in completely opposite directions I mean how do could try to implement something like the rethinking Eduardo was mentioning about pushing functionality down the down to the switching fabric the other one hand because right now if you have separate beams each one of those beams will deter into a Sdn controller there will be a unique Sdn controller in the in the in the data center and then it will be mediating I\u0027m making decisions what if you want to put some processing on day on the switches the switches are going to be shared I don\u0027t know I mean no I have an opinion I\u0027m glad you asked that question because when he presents you these slides are and when you\u0027re saying oh well this bits difficult that\u0027s difficult the OS guy and me was like that\u0027s because you don\u0027t have enough abstractions that\u0027s because you haven\u0027t abstracted away from the device to the app the control element you\u0027re getting this guy to talk directly to the device in the OS level that\u0027s the device driver you need the next level up that does the intelligent stuff to talk to a piece of software that talks to the device so the bit where Eduardo said I\u0027ve got a bit network function in the switch itself fantastic what you don\u0027t have is a software representation of that useful function that\u0027s managed by something else because the bit he bits he presented but really fantastic I mean it\u0027s like yes let\u0027s represent some network function in this device or is that device it\u0027s a device where you send the sequence of instructions and say please do this well this is no different from writing some software on my laptop server and the compiler generates the instructions and the process is the abstraction that manages that runtime instance so that implies that in just slice that would include switches you would theoretically have an abstract an abstraction a software element that could fit in to talk to link and then you he\u0027d the limits he was mentioning about the an ability to stack several switches in and you need more software that\u0027s what made the answer or big a hurry now I mean I joke about more software but I mean but maybe there\u0027s some people is wrong I she gave a talk some years ago to whose ICC "
  },
  {
    "startTime": "01:49:02",
    "text": "about some lessons to be learned from operating system design and some history about how long ago these things happened because there\u0027s a lot of layers in all the boxes that everyone\u0027s using there\u0027s a lot of layers before you get to the hardware and there are some genuinely useful lessons to be learned about bits of software talking to devices and bits of software that multiplex demultiplex schedule control operations down to the device that are genuinely useful yeah it\u0027s not again I have to say that I share a lot of comments that were raised here in the home and also when I heard you guys the same feelings about who knows what say it looks to me very much button may approach and I think networks slicing we should really look at that top-down approach to understand if from even starting even with the business here it understand there what is Isis again there was a comment that they are not in order to make isolation but it has the purpose to create their thirst every stay load network or whatever is the quality of service of course and they we need to understand what is the relationship here between the different entities and then to know who can control what and hopefully in a good design the resource level is not aware of the slice it just provide the resources all of that is handled in much higher level so there was a lot of business to business relationship here whatever so yeah I think how does comment that it was with a complicated for him I think if we could see that much more top-down I think that\u0027s what this tries to do this tries to present a top-down view of on the guy at the top calling an Orchestrator I have some abstract model of the slice and I want to deploy a service that\u0027s that\u0027s the top-level view and it filters down through some stuff yeah what detailed solution it\u0027s not top-down approach because you already decided where the slice management is and where is the orchestrator or whatever you already created the hierarchy unique understand top-down how the function from the functionality point of view and then understand who is doing what for example what I am missing here is the business-to-business gateway for example because network slicing is between different entities so a lot of things are done and the end to end and then what is done into functionality before we decide what is of course this is research but I am thinking general what is then by whom and where that\u0027s what we\u0027re doing it yeah yeah definitely yeah "
  },
  {
    "startTime": "01:52:02",
    "text": "ok ok any more questions whoever eight minutes left I promise to have seven minutes and a half for an open mic if anyone you were doing they don\u0027t stay there oh so know if that\u0027s unless you ever have most questions thank you know we do have more questions for for Stuart we have 7 minutes and a half for any idea that you have any any proposal any conclusion you can want to come whatever it\u0027s now is the moment okay so don\u0027t forget the blue sheets if you have not filled in them and if you have fill them and you have them please give them to us or just raise your hands and tell us where they are where are they blue sheets come on oh okay so yeah we are done yeah thank you thank you [Music] you "
  }
]