[
  {
    "startTime": "00:00:05",
    "text": "there are two more phone satellite ah there we go okay terrific okay well let\u0027s uh just sleep in here and I\u0027ll hand them out people that\u0027d be awesome you probably don\u0027t need to sit by the a microphone since you know most people because there is the the reason that it\u0027s important is because Maddie who\u0027s taking the notes doesn\u0027t know people\u0027s faces so she\u0027ll be relying on the the jabber room for are you taking them in etherpad did anybody point you to the ether pad could somebody point Mattie to the ether pad okay yeah it\u0027s mostly reliable Wow interesting resolution let\u0027s see if we can face this yeah more K\u0027s I\u0027m sorry yes would you uh thank you very much dad okay we\u0027re running a minute late but that\u0027s all right we got lots of time okay blue sheets are going around oh that\u0027s interesting yes that nice no it\u0027s worse is that preview is unhappy [Music] [Laughter] it\u0027s a known vulnerability right should never happen let\u0027s try this again that work all right everybody please note well the note well there are new new notes to note I don\u0027t "
  },
  {
    "startTime": "00:03:07",
    "text": "know I think the RFC numbers changed right there\u0027s eight thousands now the contents of the RFC\u0027s are the contents of this text here okay well then I\u0027m not going to kind of paraphrase it but my formal understanding is if you say something here it\u0027s considered to be an IDF contribution if you say something in the hallway it\u0027s considered to be an IETF contribution if you send something to the Jabbar list of the mailing list it\u0027s 90 F contribution so that\u0027s public disclosure might want to think about that okay that\u0027s interesting well get through them twice as fast that way let\u0027s try this way oh there goes the beach ball again Wow I need to force quit that\u0027s right I\u0027m not gonna say anything about where the source of the problem is it\u0027s probably me awesome not what I expected a single page full screen okay here we go what yeah thank goodness somebody\u0027s got a Windows machine yeah there we go okay let\u0027s see okay that\u0027s a little better great all this for what is basically one slide so let me start out I think everybody knows me I\u0027m Erin Faulk and this is I had who try to frontier so your name yeah the Dylan tripping co-chairs of taps transport services if you\u0027re in this room you\u0027ve probably been involved for a while because this is we\u0027re in our third year this is a little bit of status on what\u0027s going on with the working group we are we\u0027ve published several documents that all contribute to what we\u0027re calling milestone one which is an analysis of transport protocols in an attempt to come up with a standard set of terminology that will allow us to derive an abstract API for transport features and functions that we published one RFC I mean us at the last ITF since then we finalized and held out last call on a set of usage documents that refined this analysis and come up with some nomenclature for how to refer to various transport features those are separated into two documents because they had really two different author sets one for "
  },
  {
    "startTime": "00:06:08",
    "text": "TCP and SCTP and and another one for UDP and UDP light plus the there\u0027s other stuff in there besides those but that\u0027s most of it those documents have completed working group last call as I\u0027d has been working on the the document Sheppard\u0027s right up and we\u0027re going to get those dispenser hopefully this week I think what\u0027s missing is that I need to I need to review it and Spencer will read them and then something good will happen so that\u0027s the that\u0027s the first of the I think that completes the first of the three milestones I think there\u0027s an open question about whether we want to add the some of the security stuff that that we\u0027re gonna be talking about today to that as well I certainly think they want to publish it yeah gory gory first author of the UDP usage we got comments from their head and we\u0027ve just submitted you rev of that to replace those comments oh thank you yeah I saw that come by that\u0027s great yeah I expect that they\u0027ll probably be some some version number increments as as we do some the final polishing on this so the the second miles yes yeah and just remind me did we decide to keep them separately you emerged and finally we decided to keep them separate so they\u0027re gonna be published as separate RFC\u0027s but as a pair why it was just more practical for the authors to manage them at they\u0027re pretty big documents [Music] Gouri Fairhurst again and yeah another reason that I quite like having them separate was because I think the audience of the two documents is different there\u0027s a lot of people in apps use UDP there\u0027s a lot of people takes the other transports just as TCP or SCTP or whatever and just run things over it so I think maybe the audience is different and publishing as a pair seems cool I\u0027m okay I just thought the goal is to get like a common interface at the end okay we have a conversation but yes that\u0027s probably true but there isn\u0027t the documentation for anything to do with UDP dates from the kind with time we built the ark and therefore this is probably the first time I\u0027ve ever gathered this stuff together I think people might well think that\u0027s helpful even if they\u0027re not doing tubs there hasn\u0027t we actually discussed this a couple times it has been a big push to try to combine the documents and it would be you know be significant amount of effort so since nobody\u0027s trying that no one\u0027s asking for it okay so moving on to milestone to milestone to is to take you know somehow what milestone one did "
  },
  {
    "startTime": "00:09:09",
    "text": "was it went through all the transport protocols in ITF standards plus some additional ones that folks wanted to focus on and deliberately excluded security because we didn\u0027t have anybody at the time we wanted to work on it and then come up with a standard set of description of features and systems are you looking for the radio that\u0027s no I think it\u0027s actually as a radio in the hallway or something yeah awesome if you could find it what makes me want to dance so milestone two was about taking that that that long list of description of features and trying to come up with a minimal set of recommended features that a tap subsystem should support and so this the idea was that if you had multiple implementers who are doing taps that they\u0027re at least sort of supporting a common set of useful stuff and so it\u0027s a recommendation doc but it\u0027s a recommendation doctor for implementers of of taps and and so we\u0027re going to hear a discussion today on current version of that draft which is kind of stabilizing now and hasn\u0027t been adopted as a working group that seems like an oversight which is just I think we should make a decision today if we\u0027re gonna adopt it because we don\u0027t have an alternate documented in progress so I was really happy at the last IETF Tommy from Apple and and brought some friends of his and agreed to take a look at the transport security protocols and try to apply the same analysis methodology that we did on the on basically the the data sighted transfer protocols to the security protocols so that we can come up with sort of a add to the the language that we\u0027re building for the abstract API the to talk about different kinds of security services there\u0027s several really useful implementation efforts underway I think we\u0027ve already learned a lot about that we\u0027re going to hear a discussion about a couple of those projects today and now that we\u0027ve gotten you know people are starting to these things and they are talking about the mechanisms for detecting what transport protocols work and and and making decisions about selecting one over the other assuming an application uses these abstractions to describe what kind of behavior it wants we need some some way of expressing preferences and and remembering past behaviors and reasoning about how how one chooses among the options of what\u0027s going to work and and and so we\u0027re really starting a discussion today about policy one of the things that that I would like to start thinking about today as a group is you "
  },
  {
    "startTime": "00:12:09",
    "text": "know what\u0027s the what are the output of this activity going to be now that we\u0027ve sort of got the language to talk about these things you know we\u0027re going to just sort of write some rfcs that describes the various implementation projects do we have enough of a consensus that we make some recommendations for how what someone should do in a tap system you know can we agree on on some aspects of this and so that\u0027s the kind of thing I\u0027m going to be listening for out of this and maybe try to propose some some additional documents as as work items here\u0027s the schedule this is the first time I think that I\u0027ve shown a schedule that I hadn\u0027t had to go back and change the lowest significant digit on the years so I think maybe I\u0027m getting more realistic so I think that we\u0027re going to finish doc one today milestone two I think assuming that we adopt min set and it\u0027s kind of stabilizing that we hopefully will be able to get that last called around the next IETF and then that gives us one more cycle for the thing that comes later and I don\u0027t think we know exactly what that is yet so that\u0027s probably going to push out a little bit now rolling back to the agenda which I kind of skipped over here so this was this is the working group status discussion that we\u0027ve been having next Naima Naima are you thank you I\u0027m just gonna talk about the min set of transport services that the author\u0027s Michael and who\u0027s the other author cited yep aren\u0027t able to make it today so he\u0027s going to give an overview of what\u0027s going on from that team Chris and Tommy are going to talk about transport security protocol analysis and and there\u0027s a bunch of open questions to discuss about how we want to treat that stuff Phil teasel is going to talk about socket intents it\u0027s come up a few times in the past and that\u0027s a that\u0027s a project that\u0027s continuing to mature same thing Ana\u0027s going to talk about happy eyeballs project and then hopefully we\u0027re going to have about roughly an hour to talk about policy I don\u0027t know if we\u0027re going to need all that time but I think that that\u0027s that\u0027s a it\u0027s good to have a little bit of a unstructured area so we can sort of see where that discussions going to go any comments or questions on the agenda is there anything that people want to put on here that that they don\u0027t see any high-level comments about the director and the working group that you want to fire the chairs or something okay well you had your chance right that\u0027s not right there we go inset and do you want to "
  },
  {
    "startTime": "00:15:20",
    "text": "drive or do you want me to drive you can try okay okay great so just this is the draft yes in caps mince it I would like to note that I\u0027m not an author of this drafts I\u0027m a presenting on behalf of Stan yessing and Micah wills yeah yeah so Michael should be online so if any questions regarding discussions around your district it should be primarily addressed to him so hopefully it will be able to answer or I will try to answer so next so basically what is the context of this draft is is basically trying to address the Charter to the item two of the taps Charter which tries to specify the subset of transfer services that are defined in the item one that n system says of that support taps they basically provide them and it gives guidance to them to choosing among these available mechanisms and protocols so the main point here is that we don\u0027t necessarily need to expose all the transport services all the capabilities of all the variety of transfer protocols into this minimum set so it\u0027s basically a minimum set that that needs to require record to provide the services that we think that are important to have so why we why it\u0027s a minimal set is basically because we don\u0027t want to expose everything and why we don\u0027t want to expose everything two main reasons is that first it will create a very complicated API so it will be very difficult for the application programmer to use it and the second is that it basically so basically it ties us to a specific protocol selection so if we have lots of transport features there to expose do you may end up in a situation where you go on selecting a specific transfer protocol all the time so we want to make things as automatable as possible so this draft is basically based on two other drafts so it\u0027s driven based on the methodology data that were defined the three phases that were defined in the in the ITF taps transferred usage drafts the one that covers anything but UDP and then the other one that covers the UDP ones next so this is the the revision 0-5 the main changes since the zero four was that now it before it used to be that that we had all the the mechanism to derive this minimum set at the beginning of the draft right now you have the the textual "
  },
  {
    "startTime": "00:18:21",
    "text": "description of the minimum set and the abstract API at the beginning and then you have the mechanism appearing as an appendix the mechanisms to derive this is basically a tree step or four step mechanism first of all you basically categorize these transport features of transport services you categorize them into three categories there are things that are functional which means that the application basically assumes these things of working for example an application has an assumption that things are going in in order delivery so the application is written for in order delivery and if you have out of order delivery then the application doesn\u0027t understand it so so it\u0027s as a functional thing and the application breaks so this is this this category of functional and then there are things that the application is better to know about it and is also for optimization for example changing the DHCP value and then there are things that you cannot automatic without in a specific now and specific information from the application for example the CTP multi-streaming and then once you have all these categories then you go to another step which is called the reduction and and in the reduction you remove the basically the automatable the automatable asset or or category from the list and the basically the features that they don\u0027t require that the application is specific knowledge or we here we assume that we should always be able to fall back to - tcp that\u0027s the assumption we take we ideally better to be able to file back either to this V or UDP in this case we assume that we always want to fall back to TCP so if anything prohibits falling back to TCP is something that you don\u0027t want to expose that\u0027s the reduction step so to two major basically criteria to reduce the list and then once we have that then we have some cases of peculiarities for example as I will explain later there is a case where you want to send a message but we receive on stream or for example you don\u0027t expose multi-streaming but you want to have the ability to assign a purse string priority next please so once you have all of that then you end up having a means that basically a little bit minimum set of transfer features that you want expose the high-level view of this is that so that certain basically aspects of it it\u0027s that first every time you you you start with the creation of the flow and and also the creation of a flow grouping so the reason we need the groups is mostly in case of for example a CTP there are things that you for example a taps flow can end up being an sctp stream or or at "
  },
  {
    "startTime": "00:21:25",
    "text": "the TCP connection so you want to be able to differentiate between those by having the notion of grouping the flow so all the taps flows that belong to the same group they basically this example they will end up being in sccp association and whereas in the tcp case you could basically configure this in a different way for example if you want to do couple congestion control over them then you could have a flow grouping and that\u0027s something you want to be able to expose an application can assign a flow a flow group number and and that you do that at the beginning of the flow creation for example well one of the things is that you can\u0027t really configure a time out for a specific stream in a CTP association so you want to be able to do that at the flow group level ideally you would like to be able to use this to you like to be able to create the flows before actually you connect and you would like to also be able to send data before you connect so it could be a parameter that you use to be able to send data before the connect or you would be able to basically specify a notion of idempotent so the idempotent once it\u0027s been specified by the application it allows to use the TFO or anything that that resembles TFO in other protocols so you be able to already send data either in the connection establishment in the same package for example or even before that just before you start connecting you just send the data down the stack then you have the limited basically notion of that the connect and listen and close and abort semantics in the draft this is mainly because to support UDP and streams because we don\u0027t have to connect with the notion of connect in the UDP so to be able to have that and also there was one thing that Michael presented in the last ITF and that was the notion of being able to send messages but then receiving streams and the reason for that is that yes so you want to be able to fall back to TCP in any case and if you have a new UDP application what happens is that the UDP application when they send us a message at the receive side it is not able to fall back to TCP so to be able to do that you want to have a notion of being able to send message and and and also received byte stream so that that was basically indeed presented in detail in the previous ITF so if you want to have more details on that you can just refer to the presentation of Michael and then another thing is that you want to be able to have a uniform way at the at the API level to access or specify the tcp low-water mark or SCTP sender dry so these things basically they are slightly "
  },
  {
    "startTime": "00:24:25",
    "text": "different in the way that they are basically operating over the buffer and you want to be able to have a uniform way at the API to do that and also there were some some things about the packet sizes so for example when it comes to path MTU discovery if you\u0027re changing the path the path underneath without the application knowing about it then UDP applications may break down because they don\u0027t know about the path MTU of that specific path so the recommendation here is that if you have the don\u0027t fragment field basically set you either don\u0027t change the path or if you do it let the application know about it next please so based on this high-level view the draft basically has driven a minimum set abstract API so this is a first try to specify an abstract API for the min set basically you start with the creating a flow at the beginning using the flow group ID then you can configure timeouts you can configure urgency and in the urgency you can have a parameter called the capacity profile and also the low-water mark flag so in the capacity profile you you could have different basically capacity profiles for example you have the pool one of the profiles could be that you would have the lowest possible latency at the expense of the overhead for example to be able to disable the nagging like my algorithms you could have another mechanism that is like a scavenger kind of traffic or you could use basically a set of profiles based on a specific dscp values that are taken from the table for example a table that is in the end data in the in the art artistic web QoS draft and then you would be able to configure checksum assign priorities and be able to connect and to listen on the flow ID close an abort and they let the other side know about it and basically everything at the application it\u0027s basically sending and receiving frames when sending frames we should be able to set the reliability this is added as it stands right now so the authors had a feedback from the from the socket intent folks that it\u0027s better to actually be able to set the reliability at the beginning of the flow creation because we already know what kind of reliability we are expecting so it\u0027s kind of a bit late to do it at the at the frame level later so you should be able to also do it at the beginning of the flow creation and also the receiving the frame and next please so that\u0027s basically the the things that you would be able to do and at the API level also you would be able to get "
  },
  {
    "startTime": "00:27:26",
    "text": "notifications from the stack for examples in case if you have excessive retransmissions if you have an e CN and and if there is an application that that leverages the use of e CN then it would be good for our application to know that we have an ACN at the transport then you would be able to set the time house close and aborts and also the low watermark you would be able to know basically when the queue is draining before actually the queue is completely empty so you would have that setting different levels of it or the pass change as I mentioned also you should be able to query properties for example the maximum frame size that can be sent without fragmentation the maximum frame transport frame size that can be sent on maximum transport frame size that can be received and also the maximum amount of the day that can be sent before actually we have the connection establishment so send before before connect next please so in conclusion the tap system can potentially do more than this stuff but what we want to have is that we want to be able to have the minimum set of things that we would like to provide there is a basically important hint here and that is if you expose limiting functional features you\u0027re actually limiting the ability to select these new transfer protocols that we want to use so it\u0027s better to not expose things that that basically limits the choice of transfer protocol so that\u0027s basically a hint here so the what to choose and what not to choose that\u0027s basically what the document is trying to clarify the means that is the thing that we expose everywhere and also we have the notion of high level API is versus low level API sand next so we are ready for questions and we also have one ourselves is that can this document be adopted as a WG item and I believe Michael should be there so and I\u0027m here too before we go to questions Michaels or anything that you want to add no nothing but I\u0027m here okay Mariam Mia who live in say I think it was actually not an oversight to not adopt it because kind of this is a completely talking different document than the previous version rate this is just something completely different and and yeah you\u0027re going one step further "
  },
  {
    "startTime": "00:30:26",
    "text": "which is not wrong but maybe not the wrong the right document to do it I think like talking about the API you should probably be steps here so I was actually I was I was if I remember correctly I was making last time in common that I actually want to see something else then what was in the document previously but I wanted to see the other part I wanted to see more discussion about what can be automated and how and which other things that need direct input from the application and now Michael wants to say something of course I think I\u0027ve probably the right answer so this is just an extension of the work and it hasn\u0027t it hasn\u0027t changed actually it was just that what you saw before is most pretty unfinished we haven\u0027t invented the new API anything is just a different way of writing up to services so this is and you know this final list of services that were that with this process you end up with it wasn\u0027t a grievous version it was just at the end and now we\u0027ve put it in the beginning and move the rest of the appendix to the whole to make the whole document more readable but this API isn\u0027t isn\u0027t inventing anything new it\u0027s just you know summarizing the services the protocols currently offer and for that I agree that this will be good to have but how you will implement it is what I read this chart out and see so you mean you\u0027re just proposing an API that is not the final API that taps wants to deliver it\u0027s it\u0027s it\u0027s not a proposal of one specific API that that taps is gonna deliver it\u0027s it\u0027s a list of services so you can read this you know we have two separate sections there one is kind of like the slide that naima that just talks about it in prose and the other one is listing the same thing as an API but that\u0027s just an abstract it\u0027s just a way of looking at I think I still object to having it as an API because it\u0027s really confusing if we specify an API and then we go on later on and say this is actually not the API we want it we want a different API well it\u0027s a minimum so the point is that these are the functions that at least you know you really have to offer or you or you\u0027re gonna lose some of the functionalities of that the protocols offer it\u0027s fine to have it as a texture description I don\u0027t one is specified as an API okay I will tend to insist yeah okay hi Brian Trammell hi Michael Hayden can we go actually back to the API yeah here um so as as I read it there\u0027s two ways to read this right well there\u0027s three years to read this and I\u0027m gonna choose not to read it in the third way because if I just read it in a third way then I\u0027m gonna be unhappy and I want to be happy cuz it\u0027s early on Tuesday morning it\u0027s not not Friday yet I\u0027m not ready to be unhappy um I am ready to move the mic though so "
  },
  {
    "startTime": "00:33:29",
    "text": "what I see here is basically a I don\u0027t actually see this as an API for the implementation of programs and because I think it\u0027s a bit too low-level I would say that this is a supply-side API this is a after the analysis of the minimal set of things this is this is the shape of the API that any okay I\u0027m overloading API here this is the shape of the interface that taps has to provide to the thing that\u0027s going to implement the API that applications are going to be implemented correct like this is the low level this is the low level API this is the this is the minimal set and the minimal set of things that you have to be able to control yeah in order to make taps work so I agree with that statement it\u0027s just a list of functional it\u0027s called meant to be the API that exposes that home exactly okay so as long as as long as that that\u0027s a clear intent and I think that this is actually pretty sane um if the intent is to is to force me to write my applications in this then I\u0027m not unless happy but I don\u0027t think that\u0027s the end I thought the intent is like the way of presenting it to be you know to make it more readable and clear what it is but wait that\u0027s all it is so perhaps it\u0027s not an application programmers interface so they should replace the name of it with something else that is a little more descriptive yes mark all team instruments that abstract interface and I think this whole conversation just goes away then because this this this is pretty clearly seen um and it also like coincidentally happens too match with sort of the knobs that we\u0027ve thought from the demand side in post sockets have to be there right so this is actually kind of cool because it confirms okay these are the things we want to be able to control from up top these are things we can control from the bottom yeah they match you know there\u0027s a little glue that has to happen yeah if this list were significantly different than that then I would say that one of the two sides has it wrong um but I don\u0027t think we do so this is actually pretty cool I think that this whole conversation just goes away and all the discomfort goes away it\u0027s just the mints that abstract interface yeah yeah I don\u0027t mind the problem so I roll of this document not not in you know presenting an alternative API rather than say post sockets but to be able to nag you people to be able to say you know this functionality if you\u0027re not putting this in post sockets then you\u0027re never going to be able to offer it on just opposite you on how we arrived at the list and so forth that\u0027s that\u0027s all it is though I think a great call then I\u0027m I\u0027m super happy with this with you Tommy probably yes so I agree with that I think as a as essentially the ACL is the Distilled interface right like if we saw the interface that you would create from the full usage document and you tried to make an API out of that that would be really terrible because it has way too many options this is like the distilled version which is like actually think you can think about so I mean to that end I mean we haven\u0027t responded yet but I\u0027ll I think that this should be adopted as the "
  },
  {
    "startTime": "00:36:32",
    "text": "working group document if for no other reason then it\u0027s the right starting point and if we have it in the working group then we can cut out things or edit things properly but it has the right core so it\u0027s good for that reason just a couple specific comments based on the document and based on the presentation here the idea of things falling back to TCP and kind of requiring falling back to TCP I think feels a little bit too specific I don\u0027t know if we could express it as far as saying that things fall back to you know just like a byte stream or is that essentially what I see what the integration falls back to it\u0027s not really tea TP specific it doesn\u0027t have like it\u0027s not like I should be able to expose all the TCP options it\u0027s just kind of receiving a stream of data is the fundamental thing you\u0027re getting at me as opposed to the other ubiquitous stream based reliable transport protocols well I mean to that end like like we\u0027re gonna get the security stuff there\u0027s no reason that that min set couldn\u0027t work like a TLS interface is very very similar in its a byte stream to what you get in TCP right so essentially what we\u0027re falling back to is just a reliable stream of bytes that is a connected thing and so we\u0027re forcing UDP into this connected thing so we\u0027re just saying let\u0027s force things into 5-tuple connected streams of bytes going back and forth as the minimal so you\u0027re not objecting to the mechanism you\u0027re just saying that\u0027s saying TCP as opposed to that there are other options like TLS that could write like this this abstract api is actually more general than just saying it\u0027s a fallback to TCP so Michael Michael can say this himself if he feels that way but it but I think the idea of calling it a the thinking of this as a minimum set is to saying you know a TCP you know but also other things I mean would you suggest that it would be it would be acceptable to have an implementation that only fell back to TLS and did not fall back to TCP sure yeah yeah I think that\u0027s fine I so I think the other part also like when we\u0027re just there\u0027s the parts in the draft that discuss kind of like the you know send message and receive the stream and goes into actually calls outpost sockets and says you know is the other side of taps implementation or not those areas I find a little bit confusing or that they go a little bit too much into the detail of how this is actually going to be deployed and how the interface is used and I\u0027d like to see this potentially removed from the min set I don\u0027t know Michael what do you think about that yeah so there are I mean III I see a point I see that you want you\u0027re gonna "
  },
  {
    "startTime": "00:39:32",
    "text": "have to set up yeah at a higher layer and then somehow move to TLS if you want to some of the stuff that\u0027s there it\u0027s gotta be there just explain how things are gonna work so for instance is I mean I can\u0027t you know allow hiding screenings and I have this abstraction and talk about different varietals know that without deigning how that could potentially work we were thinking of doing another draft that explains you could implement them in set that doesn\u0027t mean that this is the implementation of you know all that taps is gonna do it\u0027s it\u0027s just you want to implement that subset of functionality which is just you know to be able to you see as it is you know the protocols we have is all in this is how you would have to do it so some of these specifics just come from from the necessity of it being implementable yes but III think maybe another way to phrase what I\u0027m saying is that we\u0027re assuming that when we bring up this connection that the application that\u0027s using this min set API doesn\u0027t like it really doesn\u0027t know what ended up do what ended up choosing right right and so maybe that\u0027s something that needs to be added here because I can create this I can maybe not care which protocol ends up being created but at the end of the day it does choose one and connect someone and if the application knew which one it end up ended up choosing you wouldn\u0027t necessarily need this like oh yeah I can receive a byte string because if it ended up doing UDP then great you\u0027re gonna get frames back and we could potentially think about how the mint set API works but that\u0027s what that\u0027s the ways to represent it that\u0027s not the minimum set that you want to add this functionality and make it a bit more dependent on the protocol because the application and makes a decision to say okay it tells me that it\u0027s modified stream and then have to do something differently and you put this in the API edit functionality if you want but so this means let me let me around alright let me interrupt first Michael Tommy a high order bit I do you opposed to making this a working group document I use you said you said yes okay just try and confirm it I\u0027m looking at the time and I don\u0027t want to get too into the details I\u0027m really happy to see substantive discussion on this but I think that at this point what I\u0027d like to do is focus the commentary as to whether you\u0027re supportive or have strong objections to whether this should become a working group document yeah well as it is or identify things that you think would need to change in order for it to do so about Spencer this mr. Dawkins says responsibility director the thing that I would ask the working group is whether it\u0027s going to help this document to be adopted as a working group draft which is basically saying "
  },
  {
    "startTime": "00:42:32",
    "text": "that the document is stable enough for the working group to work on it rather than have an individual make the right choices really quickly from version to version and whether you know whether or not whether people are committing to work on it as opposed to watching the authors continue to type I you know I think that\u0027s the critical question that I would be hoping people would be thinking about is the is there talking about this you know is it stable enough and are people going to actually help or just watch because there\u0027s two big things that\u0027s an excellent point right send text on the bernstrom so I think it\u0027s a good the document is a good starting point so I\u0027m for adopting and I think was a Spencer was hinting to it\u0027s important to have it in the working group because even if we say this is an abstract interface once we build the API on top of it they\u0027re going to have to match so I mean that what we still have choices here in terms of what we include in this minimal set and how interpret it and that interpretation we need to match with what comes on top of it look Feazell I really like the document that Reluctant Alice\u0027s in the panics what I fear is that the kind of minimal set interface is limiting something built on top of that and I think there has been some care taking to be taken to make sure that this don\u0027t happen that this means that doesn\u0027t really limit something like post sockets built on top are extending it so except that except that problem I think we should really work on that and make sure that this doesn\u0027t happen otherwise I\u0027m proud nothing it felt back I mean III would agree it shouldn\u0027t it shouldn\u0027t limit the API on top but how do you think it might limit because you know we happen I mean the procedure that if you\u0027re at the appendix is about avoiding limitations that arise from exposing certain functionality that ties it to one specific protocol and so forth and then you know the automatable features you can you know just because we move them away to be the minimum set doesn\u0027t mean that you can\u0027t expose them so in which way is this limiting I hope you shouldn\u0027t be so where I see the biggest limitation is in having the same frame and receive receive scream abstraction and I think it\u0027s hard to just fix this in something extending it the the question is how to go about that but I think this can be part of a discussion okay off the draft within the working "
  },
  {
    "startTime": "00:45:34",
    "text": "group and not before adoption so I see no problem in putting straight messages over it if you want to add that okay okay sounds like it\u0027s a it\u0027s something that can be worked out after adoption I Colin Perkins so I\u0027m I I definitely agree that this should be adopted coming back to I think the comments Tommy was making earlier and the the questions about fallback and so on it\u0027s not clear to me why things like fall back should be mentioned in this draft at all you know are they not a higher level policy thing you you could use this minimum in sets to build an API that didn\u0027t do any type of fallback so you know I think we should we should maybe separate out the the policy about how you fall back how you automate things from what is the minimal set of features that you may want to implement in in any type of API well if you want to be able to fall back to TCP you end up with that min set if you want to be able to fall back to UDP you end up with a different mindset and so forth you can\u0027t sample so maybe it\u0027s mobile it\u0027s that well you know with the limitation that I put on it on saying you want to be able to fall back on TCP you want to know fall back at all it\u0027s a bigger set certain things go out because you need to be able to fall back to TCP well some applications need to be able to fall back to something that looks like a TCP style byte stream not all applications one that that\u0027s fine but then it\u0027s just it gets bigger Cairo\u0027s yeah I mean I see this as a as a choice that was made in the in in you know coming up with this draft was was we decided that TCP was the was the most widely deployables port and so anything that wants any application that wants to be most widely deployables ET p as a fallback and maybe that\u0027s not true but i think that was the it sounds like that was the assumption that went into this anyway I\u0027m in favor of adoption so I don\u0027t want to deliver it about mascots HD consulting in the security arena sometimes we look at UDP is our fallback because he can\u0027t get anything through and in a DDoS situation you have to do like what dots has to do is singling maybe do a singling just fine on TCP when things are working well and then things go in in a handbasket in the network and then your fallback is UDP not TCP so that\u0027s one thing that I like to comment I\u0027m find it\u0027s "
  },
  {
    "startTime": "00:48:35",
    "text": "interesting to follow new here the other thing is is that looking at this comments earlier I remember a conversation a recent here with John Clemson who lived the OSI funding games and much of the OSI work died because of complexity and the whole thing about what TCP was about was for simplicity so as underlying calls this looks really interesting but if they\u0027re not be with the application sees that you need to somehow get to a more simplistic application API model this is really great well I think the final thing in what you\u0027re trying to do and the final thing I\u0027d like to say is that the other day I work with in highly constrained networks and highly constrained devices more constrained than what I tends to deal with I can\u0027t afford IP and TCP I\u0027m just doing direct messaging like on canvas FB we only have 64 bytes for my MTU so if I had something like this that the application would use and then it just kind of like wrapped it up and send it across to the Gateway which then puts everything on or would that be a win in those environments so just some other thoughts in series as you\u0027re moving forward thank you Bob let\u0027s cut that line off after two folks that are here I Cohen Perkins just just to follow up on that a little I agree we should aim simplicity is in API is a good thing but but we should be realistic about what the current API is this looks like you know if you turn this into suck options and yeah sakis API calls this looks like exactly what you would write a lot of applications today VP Julian creep the broad thank you I\u0027m sorry Mission Control I\u0027m newbie here so my question is a series interface look like a rock-solid synchronous interface and application should call this functions for to get to the tabs no transport services to work so what about a synchronous interface for application it may be a good reason to send some callbacks what you receive and sent for application and the application automatically can receive data not too cool in these functions at all yeah so this is nothing justifying a concrete API it is a list of services I\u0027m sorry for having created the confusion by calling it API I can see that now older people tend to look at it as an API that you\u0027re going to implement and use like that "
  },
  {
    "startTime": "00:51:35",
    "text": "this this document together with its producing document is analyzing TCP UDP UDP light SCTP no MP TCP and figuring out what other service isn\u0027t done having a way of reducing some and then as part of the process as part of how I decided to make it say well if you want to be able to fall back to TCP for example then this is what you end up with it\u0027s just that it\u0027s just this analysis and not more and it has the role of being able to influence API design decisions to say if you want to add all the functionality that for instance isn\u0027t a protocol office but you got to do this if you want to be able to fall back to TCP well you have to do this I could have made a fallback to UDP it would have made document longer it was just a decision to make it like that and well this is not answering your question answering your question we have an implementation for instance that covers the mean set and more it\u0027s it\u0027s using callbacks so you know this is not about the concrete implementation that helps okay let\u0027s close out the discussion here and before we move on to the next thing I\u0027d like to get a hum of the room question is should the working group adopt this document as a working group item yes or no so the first is if you\u0027re in favor working group adopting this item please hum if you\u0027re opposed to the working group adopting this item please hum okay I think I heard one person hum against and maybe a few dozen hum in favor of so that sounds like a rough consensus and those I think a lot of very good feedback that came in the discussion hopefully we\u0027ve got some of that in them in the notes check the ether pad to make sure that your comments are recorded and and I guess the next thing is a you know the author should resubmit a copy of the draft with the right dress string so that it becomes it\u0027s a draft tab stop okay I think so okay next is the cryptography discussion [Music] you guys are doing this in two pieces right yeah we\u0027re gonna split it up alright do you want to drive yourself sure see if it works what\u0027s in do it it doesn\u0027t work I\u0027ll complain about my operating system I wasn\u0027t talking about you I\u0027m just no no no this is a wedding sorry yeah good morning everyone my name is Chris wood I\u0027m from Apple and so we\u0027re "
  },
  {
    "startTime": "00:54:35",
    "text": "gonna be talking about security stuff I was not at the last taps meeting unfortunately in which the concern of a lack of security assessment in the api\u0027s was brought up and so Tommy took an action item to go and look at the landscape and see what different transport security protocols are in use for today what kind of features they provide and how we can kind of abstract them in a taps like way so this is our discussion of that next slide please so the goal is relatively simple we wanted to end up in a place where we have a minimum interface of sorts for any kind of transport security protocol and waving air quotes in which we could slide in different implementations underneath API and to get to that goal we had to go out and look at everything that was in use and try to look at them not from the contexts or not in the lens of just a you know a big transport security protocol but breaking them down into their different constituent parts so I see us for example has both a handshake protocol and a record protocol in it and try to like decoupled protocols based on long those lines and so we did exactly that we looked at a set of popular transport protocol or transport security protocols it\u0027s not exhaustive so I mean if you have suggestions for things that we can include or look at be very happy to see those X Y please so like I was saying there\u0027s this general notion of what a transport security protocol is it\u0027s this thing that provides some security features and these protocols can work alongside transport protocols like TLS is built on top of TCP and so on but ideally we were able to decompose these into you know sub or constituent parts so for the purpose of this work we focus specifically on what we call a handshake protocol and a record protocol borrowing from TLS because it\u0027s common language so a handshake protocol is just a security protocol that performs a handshake and negotiation of sorts and hopefully pops out a shared key between two endpoints and a record protocol is something that uses that share key to encrypt datagrams or messages back and forth between the two endpoints thanks why please and so one interesting task in this particular endeavor was to look at the different components and see how they interact from an interface perspective so for example in TLS you have again a handshake protocol on a record protocol internally and shake protocol will use the record protocol to encrypt both handshake messages and application data and sent over the wire so the handshake uses the record and the record uses the transport send the data in more modern or newer protocols you have like quick you have the handshake which just ask the record protocol to do encryption and then it actually sends the data over to the transport layer which is UDP in this case and it also has some transport "
  },
  {
    "startTime": "00:57:35",
    "text": "logic built into it but regardless of you know what the role or relationship is between these two different or these components in a particular protocol the features in each part are fairly common though there are patterns that exist across all of these so next slide please for example the handshake protocol typically as a variety of very common things it will provide a way to specify private key for example to do signing operations or what have you authenticate the other endpoint with which you\u0027re communicating with potentially do source address validation and of course do the key exchange to pop out some shared secret that both parties can agree on used for communicating and there you know some other things as well I saw I\u0027d record protocol will then take that shared secret use it to encrypt packets and send it to the other end and so if you think of this in the context of IPSec with ICANN ESP that\u0027s fancy ESP just takes a key is input basically encrypts data grants and some of the other side it\u0027s very simple it doesn\u0027t do a whole lot so the set of features provided by this particular module is relatively minimum I would say and then next slide please and the transport features i\u0027ve already been described in our CA o 95 so i won\u0027t go into the details because everyone here should be familiar with those so what we wanted to do was by identifying these three constituent parts again look at the different transport security protocols that are out there and kind of overlay them on top of the protocols in existence so for example if you\u0027re the next slide taking TOS as an example and seeing which parts are responsible for the actual handshake portion of the transport security protocol which parts do the record stuff and which parts actually do the tcp stuff and of course with the TLS is the main example the overlay is really typically straightforward because there already exist a handshake and a record protocol internally so no this should be new to anyone or surprising to anyone the AUSA\u0027s built on top of TCP is its reliable transport underneath there\u0027s inject mechanism that starts a connection sets keys to arts gives the record protocol keys to start encrypting application data and handshake messages depending on which resent to us we\u0027re using and the record protocol will occasionally error out through the handshake protocol if something bad happens like a you know a particular record fails to be decrypted properly and authenticated the handshake protocol well then possibly during the negotiation process provide information up to what I\u0027m calling this connection kind of layer which is essentially the API to the "
  },
  {
    "startTime": "01:00:35",
    "text": "protocol and potentially beyond to the application yeah area I\u0027m just wondering what the connection box actually is so um most TLS implementations will not have like an API directly to the record protocol you just have this generic TLS contexts in which you read it right from so it\u0027s this is not it\u0027s more of an API level thing so perhaps I should just not have that but and you can consider it basically the application in the connection in the same box because the lines in and out are the same so and another feature of this particular variant is that the application will typically configure the handshake protocol with you know for example cipher suite set it supports what signature algorithms it wants to provide and you know whole litany of other kind of features that are wants to enable or disable for the purposes of particular connection so Feiler shape forward slide please and detail us is not far off from this basically it\u0027s TLS with some minor changes particularly the handshake step to ensure reliability of an check messages yeah so from the perspective of the interface that\u0027s provided by each of these different boxes it\u0027s basically the same it\u0027s just internally they see jaws goes to some additional links to ensure that handshake messages are actually received by the other and in the correct order but from the perspective of the API it\u0027s almost identical with the exception like you can\u0027t have messages in datagrams arrived or yeah on the only finger is so low confusing here the reliability layer doesn\u0027t make a distinction between the handshake versus the application data because obviously like the whole purpose is to have the application they are a sent unreliable yeah of course there\u0027s also the Aramis which is typically public in many cases to the application layer so I\u0027m kind of lumping that into the callbacks line yeah so these diagrams can very much be improved I don\u0027t claim perfection on any of this but yes thank you for pointing that out there\u0027s a distinction as Kyle actually pointed out to me yesterday in a conversation that a reliability and order ernest is guaranteed for the handshake packets not necessarily so for the applications again that\u0027s the whole point of Datagram security protocol next slide so quick is a completely different beast with respect to TLS it most people know that it uses TOS internally to actually do the handshake protocol itself and then just pop out a share key they would use to encrypt all the rest of the packets with so the and I guess another interest point interesting point is that the transport part of quick and TLS exists on top of the actual handshake part so "
  },
  {
    "startTime": "01:03:35",
    "text": "in contrast with the OLS where like TCP lives below the actual TLS layer and you have TCP mechanism with state machine existing beneath that quick lives above and as of now kind of not exposed to the network are not much of this the the quick state machine is exposed to a network so the the way these boxes work together so the again quick we\u0027ll use TOS to do some negotiation get a shared secret and pop that out and then once it has that shit secret it will then show up packets into this Packer protector which is basically the record protocol get back and encrypted stream and then send that over its unreliable later UDP and get it to the other end and all of the transport semantics are basically shoved into this quick box which what we have here an applications interface with it by using well I mean there\u0027s no common API right now because the protocol is very much in flux but it\u0027s in theory using a DC OS like API to read and write data grams and potentially do some configuration which was also emitted from this particular slide but the point here is that in contrast to TLS where in the handshake protocol and the record protocol very tightly coupled quick decouples them for the purposes of you know simplifying things from a construction perspective but it also is nice from the kind of analysis perspective because you could in theory run quick with just a PS k that you\u0027ve derived out van doesn\u0027t need to be the one that\u0027s the same exchange through TLS and you\u0027d be just fine next slide so TCP crypt is another one we looked at and it\u0027s great because it\u0027s extremely simple key exchange it\u0027s kind of baked right into the TCP layer itself how long would the encryption so nothing really fancy going on here you offer up support for TCP crypt do a key exchange right after and start encrypting all your TCP packets or segments so mineral tea um not an IETF standard or protocol those an interesting one to say at least again also follows this very common pattern if you\u0027re not familiar with the basic design it it merges and blends many different things it\u0027s a transport a circular transport protocol built on a assumption that there exists a directory service from which to obtain keys so how you actually derive showed secrets and do a handshake is a little bit different from TLS but the the basic going from from the application perspective actually starting to send encrypt the data "
  },
  {
    "startTime": "01:06:35",
    "text": "hopefully though and is very similar to all the other protocol sort so if you wanted to speak to a particular server you would if you don\u0027t already have for example the long or the thermo public key of this particular service to do a key exchange you\u0027d have to go this directory service to get this public key and you open up a tunnel through this directory service get this information use that to open up a tunnel to the other end server that you\u0027re talking about doing key exchange there and then once you have the shared secret you just start basically sending packets back and forth over UDP with some kind of reliability to deliver a layer built on top of UDP to ensure that things get from end to end in any order so again we see the same exact patterns with respect to what the different pieces of the protocol are providing there\u0027s you know a very clear distinction or a it\u0027s very clear that the tunnel specific parts of minimal tea are doing the record protocol behaviors of our you know generic transport security protocols and then this control part of minimal tea is actually driving the handshake that\u0027s to say going to the directory service interacting with that to get public keys and then telling the tunnels who are opening up a tunnel and doing a handshake to actually get the shared secrets to start encrypting data back and forth and then there\u0027s a very distinct transport box that just exists beneath that so we can decouple these and and separate them as needed I will say though that the middle T is also interesting in that the API for applications is not necessarily the same as TLS where you have like this Connie was saying earlier this byte stream like API or TCP like he\u0027d be odd to extract it up if Manila T depends or exposes an RPC like API or clients will just send our pcs over to the server and expect the response back you know I not gonna try to rationalize the use of that particular API I mean it was designed for a very particular purpose but here in taps we\u0027re trying to maintain this TCP like API so I mean you could very well do a minimal T like thing without our pcs like it\u0027s that\u0027s not a hard-and-fast requirements just that\u0027s something interesting to point out as a differentiating factor so Chris I\u0027ve never heard of this before where\u0027s it used it\u0027s a DJB mechanism or djv protocol and it\u0027s I mean they have some I forget the name of the project but they\u0027re using it within the context of this one research our funded research project has not seen widespread deployment I see yeah and next so and then I can ESB for IPSec I can very similar and I would say one of the nicer of the variants and that there is a very clear distinction of the roles of every single this ecosystem you have "
  },
  {
    "startTime": "01:09:36",
    "text": "bike which is a key exchange protocol used to derive secrets that ESP which is a encapsulation protocol for packets to send them over the wire using a specific delivery mechanism which is just IP in this case and so somewhere to TLS and other handshake protocol you configure it a certain way and then I could just shovel off all the secrets that it uses there drives over its ESB to actually handle encrypting and decrypting datagrams and the application would just interact with it much like it would with us so on that note yeah you can go to the next slide um so Tommy\u0027s now we\u0027re going to talk about how we try to distill all these particular features into what we believe is a good common set of interfaces that we can use to abstract away much of the protocol specifics and on that note high competence just before you move into that want one suggested addition for the previous which is that security P is a record protocol which is usually having keyed with DTLS yeah the the issue here is that the record protocol is different in that it does partial encryption of the packets yeah so as IP was one thing that we may do we need to include yes it is kind of so there\u0027s that one feature which is missing from the others that you corrected yeah yeah certainly if there are other candidates as well we can include them yes or to list but yes there are for each of these I think we ran into little tiny details that were not necessarily they were very specific to that particular protocol like a cert to be being one of them with the partial encryption the Nolte providing a different flavor of API and so on it\u0027s just that the AP on it may look different with partial encryption right did that get into the minutes minute taker too into the minutes all right thank you Chris so I\u0027ll try to just go quickly through this I want to first just present kind of what we distilled as the list of interfaces how we grouped them you can look at the full list in the draft but the point is tries to try to see how the shape of these transport security interfaces matches up with the shape that we\u0027ve derived for the usage documents for transport and maybe see how that would apply to things like minimal set some API is going forward excite please all right so there\u0027s a whole category of interfaces that totally fall into the configuration category these are all generally just presumably from the application to the security layer but you really shouldn\u0027t have to care it\u0027s just kind of like application into connection and that\u0027s setting up your keys that\u0027s setting of your algorithm preferences doing session cache explaining how you can get "
  },
  {
    "startTime": "01:12:37",
    "text": "authentic Asian delegation to do trust evaluation from the application level up that\u0027s required so those are pretty simple what the handshake has specifically as its interfaces are more complicated and so here I\u0027ve listed all of the relationships so somebody whether it\u0027s the application or the transport implicitly or the record protocol when it doesn\u0027t have a key needs to kick off a handshake the handshake can talk up to applications to say that I need you to validate this identity or this source address that\u0027s a point that I want to come back to later as something that differs from a lot of the stuff I\u0027ve seen in transport interfaces the handshake can talk to the transport to send and receive that\u0027s very simple and it talks to its record to do the setting of the keys most of those could probably be completely implicit to an implementation and don\u0027t really need to be part of any kind of minimal set exposure all right and finally the record is very simple it receives keys from the handshake it tells the handshake that things have expired that it needs new keys it can interact with the transport to encrypt and decrypt and also get interactions about do I need to migrate my keys to a different set of addresses in case there\u0027s mobility there again most of these should be um hidden generally potentially with the exception of the transport mobility because if you have a mobility interface up from the taps level that may apply all the way down into the record so next alright so I didn\u0027t list these out but this is essentially the boxes that the existing usage documents which are now in going off into their nice crystallized form have so they have connection interfaces and data interfaces and those are individually broken down into establish maintenance and termination for the connection state and sending receiving errors for the data so this all of the transport protocols seem to fall cleanly into this and so the question is when we looked at these security interfaces do they fit into these do we have kind of entirely new categories that we need and how would that change the API and then beyond that because I\u0027ve listed in the interfaces how the security layers and the transport layers interact how useful is that to define that layer or do we really only want to talk about kind of what goes up to the application so that\u0027s a question I\u0027d like to hear your feedback on so here\u0027s one way of overlaying some of the interfaces from security I only did a subset of them that were interesting to give representative ideas so certain things very clearly fall into the establishment "
  },
  {
    "startTime": "01:15:40",
    "text": "phase if I need to set up my identity set my algorithms that\u0027s very similar to setting any other option on a transport connection you just do that from the application down into the protocol there are other parts of establishment that ideally would be implicit to starting your transport if you\u0027re say I want this connection the transport layer can just kind of signal over the security yeah you got to set your handshake once I get TCP up so you can do Els hopefully that the that lighter gray box doesn\u0027t need to be exposed saying goes for all of the record level things that are happening on the data path I believe looking at those interfaces that those should be essentially overlapped with what we already have in the send/receive and error cases today in the usage document in the mid set certain things like I mentioned before handling the mobility of addresses and interfaces it\u0027s very much a maintenance thing that you probably do need explicitly somewhere in in the interface and then the weird ones at least they seemed odd to me looking over this were the things like identity validation or source address validation which are traditionally up calls from the security layer into the application and they can happen during establishment or they can happen later on is essentially a cry for help from the security layer and at least I was looking through the use of document I didn\u0027t see many other cries for help I\u0027m currently in transport um so a clarification question on sourcing cross validation here you really mean the lower layer has either some change in the source address or a source address that you might be doing white listing or black listing at the a player it\u0027s like is this guy okay or what\u0027s the it\u0027s so to verify it\u0027s not about validating that a source address on an incoming packet is actually tied to like actually is where it is right this is nante spoofing this is a higher layer thing than that right Chris what Apple is like the details cooking mechanism that was the intent of it at least okay yeah all right oh yeah sir okay okay so then it\u0027s basically cookie fail yes yeah what do I do what do I do exactly the cookie failed abort retry ignore okay yeah okay that\u0027s all right we just kind of similar to like Ray I have this trust thing what do you want to do with it is it is it good right so it\u0027s a new cat is like yeah your question type of failures there is not a pure error it\u0027s not like err I tear things down it\u0027s like what do you want to do with this right okay so that was a new bit that I\u0027m sure you\u0027re gonna box it I share your perplexity at this I have no idea what to do with it but yes good okay so that was that all right next slide all right so this is "
  },
  {
    "startTime": "01:18:42",
    "text": "the last slide I like to pose some questions here so some of them are more administrative things like do these security interfaces do they belong in a common main interface like would it make sense to have the something like the min set or a draft off of the min set include security in kind of the main interface that we would expose or alternatively you do more like what a lot of api\u0027s do today in which you have your nice transport layer and then presumably the application uses another layer that adds the security as an overlay to it I think with the direction for pro sockets we would like to see those things combined so you have security implicit but certainly one could have it as an overlay come on masks coats I\u0027ve actually been working on this particular area for a couple years Sisu hairs and my drafts about secure session layer services in my secure session envelope and because there\u0027s no more drivers like I said I\u0027m dealing with with with Mac Phi\u0027s where you don\u0027t even talk about running IP on them and I\u0027m Dee I\u0027m also dealing with environments where the the network are totally totally down down down the tubes so one of the things that I see here that you may want to change some of your wording because it changes semantics significally you use your inheriting the word handshake from TLS and others this is the control channel change your wording for handshake to control Channel sure then you can start talking about the control channel it actually does more than just security security may protect other things you need to do in exchanges between the the peers of the communication but there are other functions which then become and inherit them in here into the control channel besides just security or security protects these things that you need to do but you but talk about this as a control channel more off to the side then like underneath the application or however you range your your picture and that\u0027s when the ISO because because not only am i working at this at this I\u0027m also dealing in 802 of the Mac layer security as well and how we do the the control the security control channel I was a chair village about 15.9 of how we do security creative 15-4 and a few other areas like this so I might recommend you do that change in it and and and then then the singling and I\u0027d be very interested in working with you because I\u0027ve been very much looking at no places soon I\u0027ve been working at this for quite some time and we\u0027re not transport people per se but that we\u0027re not totally ignorant either and some of the ways to do this in saying what\u0027s what services do we want to provide in this sort of thing so that oh gee I can do these in "
  },
  {
    "startTime": "01:21:42",
    "text": "these environments I can provide these ApS and in it and the other thing that I finally like being able to say as I\u0027m also working identity or into networking we have the ideas pop on Wednesday I\u0027m the author of hip which is one of the main identity based environments and one again there is I\u0027m working at is moving the identity discussion up into the application not just in the network and how that thing can apply there can you talk about identity in here and this is one the other areas which again we\u0027re looking at and thus the higher layer of decoupling we can then get when we have an identity organization in this way so here\u0027s some some things to think about and be very interested in willing to talk to you about this yeah thank you very much and I I think the the goals of being able to support the use cases you\u0027re talking about in which we are dealing with more identities as endpoints and working on things which we don\u0027t have tcp/ip and that\u0027s very much what I envisioned for the API is built around this - yeah right I\u0027ve done the security stuff that from no I did IPSec I did yeah I did a tattoo 11i I did eight oh two one ie I\u0027ve been up and down our cross on this thing and it would be really nice to trying it yeah we\u0027ve all seen your since high paradigm also if they can paraphrase the very beginning of bolts comment the answer to the first question is yes and bed security in the main interface yes all right so when you start talking about you say you can take go away from handshake and go to a control channel which I actually I like I agree that like that that seems like a good way to go um now you\u0027ve embedded into the main interface because you\u0027re you\u0027re sort of learning that line between control and control right but that\u0027s I think that\u0027s a good thing um from a document standpoint from the documents come out of this working group like if we take this work and um and do it within taps which I think which I don\u0027t see that question up here were you gonna ask that question yes I was gonna ask that question either on this left I was gonna ask that question oh oh wait no sorry job yeah easier right okay welcome to provide input - exactly can I propose quickly now right seems like it might be a good idea um the so the so the issue here is that we we basically kind of pointedly decided to ignore security at the beginning of the whole taps things like ah we have no idea what we\u0027re doing and now um you bring this document does and bring this document in and now it looks like we do kind of know what we\u0027re doing and I really like the framing of this document I think that we need to say something about it but if we talk about embedding security in the main interface that\u0027s not something we can do in the documents that we\u0027ve already published sure well and I don\u0027t see this is parallel yeah so it\u0027s parallel right so it feeds in as another late so I think that yeah so basically the place where it all comes together is then in item 3 which I guess I\u0027m fine with okay yeah that\u0027s magining actually so you could see it coming together and - I could go into the minimum set right yeah "
  },
  {
    "startTime": "01:24:43",
    "text": "okay yep yep you could probably get a separate security abstractions document in the minimum set could say draw some from the main one and some from them we also love our parallel documents that we could have the security min set just like the UDP okay so Michaels online after Kyle Noke I\u0027ll say now Michaels laughter Carla hi : Perkins um so yeah I think this these are great drafts and it\u0027s really good that we we have this coming out in some of the question about main interface or not I think we we should perhaps have a discussion about what the main interface should be and whether we need lower interfaces as well I think I guess referring to min set and whatever API is like post like it\u0027s built on top of that so I so I think for the at the interface to the applications I think this should be part of that interface but I see things like min sets and this as being separate interfaces below that because I think people building new transports will want to know what the interface to the security protocol is okay so if you\u0027re building a new transport protocol a new record layer a new control Athens here\u0027s like we have a pyramid of protocols up to min set transport we have a pyramid of security protocols up to min said an engine or an employ and record and then we put them together into the stage three actually I think the nice bit of the work that\u0027s coming out of this is that we\u0027re we\u0027re digging into and separating out the api\u0027s for the different parts and getting an idea what the inception be of those API sir so I think keeping those separate at a certain level and then layering something above them to say this is how you build a complete system is potentially a good idea I also had two questions about scope which I think and probably hoped the answer is they\u0027re out of scope the first is this is assuming point-to-point security you\u0027re not considering multi-party security considering with multi-party security group communication right this is yes things like Tesla I mean I think there would be interesting as a separate thing if taps wanted to once it\u0027s done with everything look at multi-party transports and security than great yeah but I don\u0027t think this I think is the right answer this out of scope for this yes it\u0027s out of scope for here for sure but but we should perhaps be clear about that okay that\u0027s good point and as soon as we finish quality a service and multicast will get read on the mode Silver\u0027s exactly what it was all the other problems are solved perfect the other thing which again I suspect is out of scope is that we\u0027re meeting in parallel with Park but the perk working like and what perk is doing is is multi levels of encryption so you can have "
  },
  {
    "startTime": "01:27:44",
    "text": "semi trusted middle boxes as part of the transports and again I would assume that type of security model is out of scope for this and we\u0027re just building the base layer of encryption but I could see that potentially as a composition of taps or posts layers that you could build security on top of security and transparent top of transport yeah yeah I mean that that\u0027s my assumption as well but again yeah great they\u0027re gonna be good test of the abstract API is if you can do things like that but only if you understood what you\u0027re trying to do like this is the first I\u0027ve heard perk so a question for you for you authors is are you bringing this to contribute as a working of document right would you like this to become a working group document yes I think Miriah had brought up the question later of earlier of the Charter having a couple words about like we\u0027re not getting the details of security so I\u0027m not sure if that requires this specific tax change there but yes I think we would like this to be a working group document as part of the milestone 2 if I recall the Charter correctly that our restriction is that we aren\u0027t to develop any security protocols I don\u0027t think that we\u0027re restricted from from talking about what exists but here comes an area director this ability mr. Dawkins so responsible area director I\u0027m remembering roughly what Aaron is remembering with the additional thing that basically do people in taps know enough about security to or you know to do to focus on that first and since there seems to be a sea change and you know the ability of taps to focus on security I would be thrilled if it turned out to be necessary to do a charter change I would be thrilled to do that okay so let\u0027s uh I think that will make it easier thing we\u0027re about to miss to make it through the is G all right fine can you quote the Charter yeah one question for me if we just do a survey of this security protocol you still think the Charter changed I mean II what\u0027s what\u0027s what\u0027s let\u0027s go to the charter high for in Toronto taps is not chartered to perform detailed security analysis there\u0027s these security aspects of transport protocols . well security can be a transport service taps is being charted almost simultaneously with TCP Inc which is developing the TCP extensions to provide unauthenticated encryption and integrity protection of TCP streams and taps will work with TCP Inc to ensure the tabs will be able to accommodate the protocol extensions that TCP Inc provides so we have an independent clause vs dependent clause interpretation problem any second amendment fans in the room if you read the first sentence in in of its own then "
  },
  {
    "startTime": "01:30:45",
    "text": "very very clearly this work is completely out of scope and and it\u0027s not on shorter if you read the whole paragraph it\u0027s totally thin it\u0027s completely on charter so literally bringing a tea speaks into race into the exact way so what I want to be very concrete and pragmatic and the tea speaking chair standing behind you but what I want is that when we submit these drafts to the IAS G is for the security area directors not to put a hold on them and say you guys said you aren\u0027t going to do this and so I think that we\u0027ve just in in chairs opinion I think that we\u0027ve got a critical mass of people who\u0027ve got energy and expertise who want to work on this we\u0027re not plowing any new ground it seems to me like it\u0027s low risk but I think that there\u0027s maybe a little socialization task that I would like to ask our area directors to do to just get some confirmation and I\u0027m willing to to proceed on an optimistic path assuming that you know we\u0027re all working in a spirit of goodwill here and trying to do the things so Kyle rose speaking as TCP in working group chair the it sounds like we probably do need to reach Artur because my impression from how this work is involved is that we do not want to limit this to TCP ink so I think that\u0027s pretty clear well let\u0027s all look at it and see what needs to be changed but so speaking as not TCP and working group chair I think that well I think that there that there\u0027s increased scope for security I think and that there\u0027s there are people basically I\u0027m not entirely sure what I\u0027m trying to say but there but we want to we need to include security as a first-class element of taps and I don\u0027t know that it makes sense to I think we we sort of presumed and I wasn\u0027t around during the during the working group chartering but I think it sounds like we presumed that oh we\u0027re just going to make use of the ccpn thing but now since it\u0027s clear that we want to abstract and use all sorts of security protocols that we should go down that route I would not be in favor of a working bit of a charter change that involved say us being able to design our own record protocol let\u0027s not get that and the Charter should specifically say we\u0027re not designing scraper girls we\u0027re not I don\u0027t think I don\u0027t think we want to not doing Emilio water text from that we\u0027re just talking on how they relate yeah so Michaels been waiting then Spencer than Bob I want to and then I\u0027m going to close the line and please in Miria I guess let\u0027s keep comments brief so we can get out of deep politics and get back into the technical piece Michael okay I\u0027ll speak as someone who was there the Charter was made and that was much about getting the whole thing off the ground and avoiding complications with not having it not enough security expertise he\u0027s peeing happening in parallel we can\u0027t get this right and so "
  },
  {
    "startTime": "01:33:46",
    "text": "on and so on my proposal people just removed this paragraph and be done with it I mean okay this is specific I I don\u0027t see anything but like any reason to keep this paragraph at this point I think this was a paragraph that was put in to keep us in what was considered to be a box where we would not do any unintentional harm and so so you\u0027re not the person who I\u0027m concerned about so that was really just to decouple it from security so we can work independently so at this point I think this is useful work and we should actually get to few people into the boat so we just have to make sure we\u0027re kind of a mind here yeah mr. Dawkins again so I would say that the combination of where the working group is now compared to where you were at charter time and nothing has happened in the past three years to make us think that security matters less so the combination of those knots or the combination of those two things say basically that doing this work is the right the right thing to do and I think taps is probably still the right place to do it and then like I said I\u0027m happy to take a charter or update forward that suppose that out if the working group think that thinks that that\u0027s necessary in order for you to be able to do the work but but yeah so like I say I think you know we do the right thing but I think it\u0027s becoming more obvious what the right thing is okay yep I think we\u0027ll take a close look at the Charter text and see if we need my mask was just kind of echoing everybody else that the work that I\u0027ve been doing on this I see a clear delineation which can be achieved in server and things which can be done to make it clear what are the the interface is such that a security service can then work well with whatever the transports does or are so what taps will be doing thus to better enable security and then how then the security works then proceeds along those lines I think would be win for everybody and we can do that delineation separation and we can benefit significantly from it architecture it\u0027s a great idea okay so let\u0027s let\u0027s conclude this discussion with a hum the question is should the working group adopt this work and and if we agree to do that then there\u0027s an implication that we\u0027ll go and we\u0027ll we\u0027ll make sure that the Charter is adjusted accordingly and and in turn make and publicize this to other folks who would be interested krisily am something yeah there are two documents are you it\u0027s the question about both of them or job to me this is "
  },
  {
    "startTime": "01:36:46",
    "text": "this is still a little bit of an undifferentiated Madison in terms of like what what I mean I guess is the this is the problem with asking a question that I the first-order question which is should we add security transport functions to the abstract a PR effort that we\u0027re trying to do in taps I think your question is actually should we change the Charter and add this to the Charter right well okay I mean there seems to be diversity of opinion where the char needs to be changed or not let\u0027s everybody know something go ahead sir Cairo\u0027s so I might propose removing the last paragraph and just changing the litter that\u0027s what sorry that yes the last paragraph of the Charter which which Brian read out and changing the third bullet point right above it to extension modification or creation of transport for security protocols that keeps us from designing our own record protocol isn\u0027t what you know it I am not prepared to have a charter a discussion in real it\u0027s just a proposal we could talk about it on the list okay all right let me let me let me back off let\u0027s just get a home of whether people think the security work is interesting we should continue to have this conversation yes or no all in favor your home yes anybody thinks we just shouldn\u0027t do this it\u0027s a bad idea okay so there\u0027s a clear consensus for that what the interested parties will get together and we\u0027ll come up with a concrete proposal on how to move forward this this doesn\u0027t work in it thank you thank you very much for putting this together Bob thank you for stepping forward and showing an interest this is terrific okay so what happened here my just quit flux okay on to number three I think we\u0027re we\u0027re running a little bit behind but not irrecoverably are you keeping an eye on the clock a little bit we\u0027re pretty behind okay so we have we have an hour and we ended 12:00 right we have fifty minutes and we have uh two presentations in a discussion so let\u0027s try to keep each thing to 15 minutes if you can get through your stuff in 15 minutes we\u0027ll try okay we\u0027ll take the temperature 15 minutes and see if we want to stop it go on how\u0027s that oh you think that\u0027s it okay it\u0027s empty some yeah well yeah next time so today I will talk about three drafts on this a little "
  },
  {
    "startTime": "01:39:47",
    "text": "bit at all in the area of automatic transport selection or transfer option selection collector easier yeah so next lackeys [Music] everything I want to talk is about inputs to transfer option selection so if you want to optima an automatic transfer option selection what do you need as inputs and we came a little bit from the multipath or deciding which multiple interfaces and positive use therefore this might be a little bit pointed towards this direction so first we need to pass characteristics to decide which after use we might need the needs of the application so of the most web and was latency cost traffic characteristic tolerance towards packet data and connection loss and we need a way to decide how to compose transfer protocol stack and probably to debate how to include on pass elements and next slide please the first draft the circuit intense traffic goes into the application needs discussion while the second draft next slide please goes into the discussion on how to compose a transport protocol stack asclad please so what at saw intents so with socket intense applications my express their communication preferences in order to take advantage of the available transferred resistor so sir contains our hints for transport option selection and are not meant as strict rules but just into its little intuitive generic protocol independent hints given from the application on what they\u0027re going to do with the upcoming communication and they should be matched in a best-effort way so if this operating system can match them it should match them if it can\u0027t it will provide the best service it has next slide please and so just give Nick we have a lot of examples and detailed description of the examples within the draft so I will to keep that charged next slide please so what an application programmer can express with circuit intent is rough things like the traffic category are we going to do it ball transfer are we going to control messages are we doing streaming and the various categories of this can be for example the object size I expect to set a receiver communication channel the duration of the existence of the communication channel yeah other constraints or cost preference whether the application thinks this should be if this combination should take place over an expensive link or not next slide please and so we see all of "
  },
  {
    "startTime": "01:42:49",
    "text": "this information as inputs to transport option selection within for example the tab system next slide please so we sync circuit has can be used on a per floor per association for screaming per object level and we try really drop this out on a per stream and per object level and far we have good results with that and socket intents are presumed to be API independence so we haven\u0027t VSD so the based implementation that also supports connection caching and we\u0027ve done FEM thinking about whether this could be included into post sockets and we think yes it can next slide please so having the information from the application the next question is and having the past properties which are all as measurable the next question is where we can decide what the passes of what the endpoints are how to decide to compose a protocol stack and for composing this we have to compare them to find an order on which one to use and therefore this the second draft talks about communication unit granularity and about how to do this decision-making how to reason about protocol stacks next one please the basic idea is to decompose a protocol stack into two orthogonal things so first we look about which communication units are operated on and second which mechanisms operate on this communication units for multi pass and this perspective allows us to compare mechanisms like distributing requests of an application so HTTP requests we have a hundred objects to fetch for our website how to distribute them among two links so just having two for example TCP sessions running at HTTP two and distribute the objects that way or to use just one HTTP session and use amputee CP or that and so we can can compare this kind of approaches against each other and reason with what is the right approach next slide please so what are the communication EWTN\u0027s were thinking and the point is protocols really align badly with the communication units with the semantics communications unit of an application so we see the communication screen units as object or message so for example an HTTP request this dream like a screamin quick or SCTP are rtcp connected for exampie PE an association or we call the flow which bundles some streams and an "
  },
  {
    "startTime": "01:45:53",
    "text": "association set of flow set that bundles streams bundles associations that belong together depending on the protocol stack and the application use this communication your hierarchy elements can just merge as they like and mechanisms can therefore not be sharply assigned to one of these areas if they merge next type is so the next thing we talked about is how this mechanisms work what mechanisms work on this communication units and we see we have as a mechanism destination selection server exam dns resolution and finding out which enter in to talk to with path selection so deciding over which paths to talk to the destination and depending on which kind of communication units you\u0027re applying this this might look quite interesting see draft for details we\u0027ve shanking so how to from an application level split stuff and this can be just naturally like objects of websites already split or can be split by a lower layer like TCP segmenting and scheduling which can also seen as the power of correct or per trunk path selection lets deciding how to distribute the stuff and we see with these mechanisms together with the communication units now transport stack insect selection means just composing a system from protocol stacks instances that implement these mechanisms to come through a whole system this is a fairly abstract and complex view but I think it\u0027s the way you have to go if you want to reason about how to automatically compose stacks in a system so we have a prototype for beastie circuits I already told you this is a wrapper for these D circuits we have three API variants and we have a working code release on github which has done a few years ago just a few days ago with all features we\u0027d mention here yeah so if you have an interest have a look the product had basically it was composed of a library with our API and our they abandoned instance that has a policy was just still being a piece of code I think this is a discussion we will have later on on how to really represent a policy so I think just having a piece of code is not the final answer for what is a policy in an automatic transfer option selection [Music] finally I want to conclude with the lessons learned from this sir first name resolution is quite separate from circuit handling so doing this wasn\u0027t "
  },
  {
    "startTime": "01:48:57",
    "text": "the BST socket API is quite painful and the other one is file descriptors for me are considered harmful because the semantics of file operations really do not match the kind of thing you have to do for network communication and the semantics of file descriptor isn\u0027t much change depending on what kind of transport protocol you use so the TCP socket behaves quite differently than a UDP Soaker for some system codes and therefore I would warn everyone who\u0027s doing this assistant tap system to sticking too much with the bsd socket API it will be a pain so that\u0027s it for the talk and I would like to have a rice a bunch of questions so first how to perceive the socket intense word we now have a draft on that and the questions is the working group interested that I are verbs the working group continued on this work and how it will relate to other draft especially the one named the second bunch of questions for the beastie sockets graph is proceed with this document so we still consider this as background work for the socket intense draft and therefore I will publish most of its contents in my PhD thesis and the tech reporter anyway so if we just need something to side there\u0027s no read there\u0027s no use to work on this as the ITF drove it further if the third one is about the communication units granularity thing what impact does it have on the terminology and I think we can\u0027t discuss this today at challenges on transport option selection this is I think interesting for further discussion so tell me Paulie yeah this is thank you for bringing this this is a very good topic I think a lot of the detail so we should talk about in the policy discussion at the end because I think that really is kind of all about this as far as the documents I can imagine if we want essentially a policy management document to kind of go into those details having something like this would be a very good starting point for doing that I could imagine maybe having just kind of one document around that you brought up the other relationship with the the taps guidelines document I had done one question that I\u0027ve been wondering is like how to proceed with that or kind of split that out into the various places "
  },
  {
    "startTime": "01:51:57",
    "text": "where it should be I think that also ties in well with the happy eyeballs document so I as a proposal I could imagine that we could have no grow the happy eyeballs document because right now it talks about you know how you do the protocol stack racing um I think generalizing that to also potentially include some of the work that I mentioned with the you know there\u0027s endpoint racing there\u0027s protocol stack racing there\u0027s other types of how you build your connection I think that could be its own document of just the details of that establishment which gets into some of the points you brought up in your documents but then there\u0027s also the separate thing of how do we express the policy and that\u0027s what\u0027s driving this racing tree so maybe we end up with two there but I think yeah this this content definitely needs to be brought in in some form although we may want to kind of chop up all of the documents and reassemble them into a Frankenstein yeah bernstrom so I just won\u0027t say I fully agree with Tommy it\u0027s great to see these straps here and I think it\u0027s a bigger question how to then fit the pieces we have a number of systems doing policy and it\u0027s very nice to see that they are quite similar I mean the flow is maybe a different in but the general structure is still quite there\u0027s a lot of commonality I think between the different systems so I think it\u0027s possible to merge into a number of documents that describe these different features that the taps system would need so my view is that you know the the third phase the third milestone for the working group was really bad experimentation you know it\u0027s like we\u0027ve come up with a common language let\u0027s go build some stuff see what works you we can learn out of it if it turns out that there\u0027s rapid agreement and can end convergence towards common elements like you know like the Ella socket intense as a language for as an input to a policy engine or maybe different policy engines that seems desirable I think in terms of like the working groups goals if all we do is come out with an RFC that is a compendium of different approaches to implementing taps that is consistent with what the Charter says I think that actually we\u0027re making better progress than that and we can do better than that and so I would I kind of feel like it\u0027s a matter of the folks who are doing these implementation projects is how you want to work together you know let\u0027s try to find a way to collaborate and and build on the areas where there\u0027s some consensus but I would like to see some description of the of the mechanisms and the lessons learned in the third milestone documentation I think that that\u0027s we don\u0027t I think that this is we want to document that aspect of the IETF work so I\u0027m sorry it\u0027s not a hard answer "
  },
  {
    "startTime": "01:54:58",
    "text": "for for what to do about your document but I think that people are interested in the work and like it and so I hope that you\u0027ll continue to participate and maybe we\u0027ll find a way to fold these things in together okay thank you and you uh you hit your time mark so thanks Phillip okay next is Anna so do you think NIU can do yours in 15 minutes okay mine is actually not that long okay okay so this is an update on the happy eyeballs draft for transport selection and its joint work with a number of colleagues in the neat project so next slide so this relates to the third work item of taps so to how to select and engage an appropriate protocol and how to discover which protocols are available for the selected service so this of course calls for some forum on happy eyeballs mechanism for these transport selections so we want to try multiple protocols in parallel earlier so that to enhance performance but of course in some some intelligent way so that\u0027s the idea of their happy eyeballs mechanism next time and we already of course have happy I was mechanism in RFC 6555 for ipv4 ipv6 so this in some sense generalizes that problem to select the complete transport stack and it relates to what Philip was saying because the idea here of course is with taps also to be able to then dynamically use input poles on the application requirements and our knowledge about network at this particular point and if we configured policies yeah next slide so we\u0027ve had the draft on this Nayeem presented it the last IETF this is a summary of what we have updated so we got feedback from a number of people so thanks for that so we improved the wording related to RFC 6555 which was not not truly accurate we clarified that the draft applies to connection oriented transport or transport that have some notion of connectedness I thought we had clarified that one transport connection only one transport connection is returned to the application and the other connection attempts are used to populate the cache because we\u0027re trying multiple connections in parallel and we want to learn from them actually when I double-check to see if there was something else I should add to this slide I realized that that sentence had fallen out somewhere between the different authors so that will be there in the next time we have some questions about the cache lifetimes and things like that so we for now have indicated this to be system dependent "
  },
  {
    "startTime": "01:58:00",
    "text": "and there this will come back in the discussion points that I brought for for the draft we change the example to use ipv6 and we fix some other clarifications and details in the text that were pointed out in the reviews so next slide so then to go back to to the Moore architecture and maybe the more important and these interesting things to discuss in this context so in our draft the framework we have would have the eyeballs the general framework is to have the application you have the taps API and then we also have this policy management module that is responsible for indicating what the correct the transport candidates are at a given time and then we have the transport probing part you can take the next shit at once so the draft focus is here really on just the transport probing part and it has some requirements on the policy management management for what it provides but it doesn\u0027t give the details of that component next slide so in the draft what we required from the policy management is that this is the piece that creates a list of candidate transport solutions and they also give you some order of priority and in general this of course can be created in many different ways you may have some pre-configured choices or you could have a very complex policy system but idea of course bit taps is that you should have some use of the application requirements used available information about the network and your your configured policies but the only thing that we specify in the document here is that you should use we require the use of cache information so that you don\u0027t try the same things over and over and put unnecessary load on the network and if you don\u0027t have policies that specify otherwise you should comply with the guidelines in RFC 6555 so other than that we don\u0027t really specify the policy management of course in the implementation of this in need we have a complete policy system that that uses this information from the application and from the network and some notations and and rules for how applied policies and derive the candidate solutions but that\u0027s not covered in the document next slide so the transport probing component that is that the part that initiates the different connection attempts for the candidate solutions that have been provided by the policy management and the requirements that we could there is that they should be initiated in priority order based on the information from the policy management and the difference in priority then translates to to a delay in the in the racing of the transport solutions and the first connection is established and returned to the application we also have some requirement that as I said on the use of caching so we the the transport problem component should cache the outcome of "
  },
  {
    "startTime": "02:01:00",
    "text": "the connection attempt back to the policy management and allowing all the connection that has been initiated to complete so those are basically the only requirements that the documents are ok next slide so I think what\u0027s interesting to discuss in this context and which also ties back to the greater policy discussion is what the interface should be between these happy eyeballs algorithm the policy management we separate them do is describe just some as we have done some requirements or or how should we more in general maybe just split up the tap system and have the different interfaces between the pieces do we need some form of architecture document so that we you know when we all talk about the policy management component we have different implementations of that do we talk about the same thing the other issue related to the draft itself is how much details you should you have on the happy eyeballs component so many of the questions that we got back on on the drafts that we submitted was all on someone like the parameterization so what should the cash lifetime be so is that something that you should have guidelines on or should that be left out as a implementation detail and be fully system dependent similarly d ter time between the connection attempts should be like you know regulate what what the delays should be and so on and similarly should we have some rules in terms of how the candidate list is generated how many different transport candidates you try in each you\u0027re allowed to try and so on so those were the general questions that I thought would be interesting to discuss okay Spencer Dawkins is an OSI individual some so since you mentioned the cache lifetime I I don\u0027t know whether this is more on your first page report about architecture or your second major board about to have the iOS implementation but it seems like there\u0027s also an interaction there with mobility so that you know so the answer the the the happiest answer that you can come up with might change as a result of mobility onto a different network path with different characteristics so just you know just having that I I think you know I think this is a great conversation to have and I think that\u0027s something that should probably be on the list yeah that\u0027s a good point and I mean you could certainly have all the cash being flushed because of external events like something moving in Tommy Polly so first yeah I think the model that you\u0027re going with is like a hundred percent right I think it\u0027s a very nice basis for this just a couple things so as I mentioned before I think it\u0027d be good to try to bring in some of the other types of racing other than the protocol just the transport protocol stack racing talk about talk about the "
  },
  {
    "startTime": "02:04:01",
    "text": "derived endpoint racing as you know saying it happy I was having here and if you\u0027re dealing with higher level endpoints like you know we have like bonnet or services going to hosts include those yeah you have the first step is not really there so kind of more of the steps to the first question I think that it would be cleaner to leave them separate because our policy discussion I imagine will evolve and grow and that can be someone independent from how we actually do this so just sensually let\u0027s say you know it takes input from this other policy management system and then we can define them separately as long as so I think yet we should describe what the interface that the happy eyeballs algorithms need as an input similar to how the transport protocols in their interface describe what they need as options to configure them for the second just a comment on that I think you can describe that on on different levels also right because it depends on if you see that these two components in the end should be separate and able to interoperate or if it\u0027s a logical separation so that we know what the interface is so we need transport candidates we need some priority right that\u0027s like on a very high level what you need if you needed independent components to interoperate and you would need to specify exactly how that should be represented and and that\u0027s maybe not necessary if I\u0027m not sure if that is necessary because you could implement that interface in different ways once you go to implement your policy and happy I was racing which would typically be on the same system right so yes yeah so we should get into those details yeah for the second point I would actually like to point to the fact that in v6 ops David\u0027s class II and I are we have a happy eyeballs version to update draft so there\u0027s actually gonna be kind of like abyss happy eyeballs so we a should reference that but B we could kind of follow the style that we\u0027re doing there in which you define you know there is a delay or there\u0027s a lifetime parameter that should or must be configurable one that system and a recommended value is something like this that\u0027s that\u0027s what we\u0027re doing they\u0027re saying you know here\u0027s how one sane way of calculating these values but for your system you could customize it yeah so I think I mean that\u0027s that\u0027s certainly a reasonable approach setting the default may be a bit more if called here because the the cached values could be the problems could be on different levels right but yeah I Colin Perkins so all the comments you\u0027re making about connection probing and candidate transports and so on this this sounds like you are describing the ice algorithm and stun and turn and all of those protocols and I really think you "
  },
  {
    "startTime": "02:07:02",
    "text": "need to look at what\u0027s happening in that space and reference it and bring it into this framework because it\u0027s doing the same sort of thing for connectionless protocols yeah that is true this is this is looking yeah it has many connections to that [Music] Aaron asked me to frame this discussion I read Dremel um so I only have one slide about policy so there are a couple of things that I\u0027ve seen are you\u0027re already coming up with a mic : oh no I disagree with the shade of white I uh I\u0027ve noticed a few things happening and like a lot of the work that we\u0027re doing in taps right now it seems to be converging very nicely and one of the decisions that we seem to have converge very nicely on is two pointedly ignore the details of policy because that\u0027s where all of the fun hard stuff is and I really like that the conclusion of the of the last discussion was okay now we need to actually start getting into details and I think we didn\u0027t you start getting into details and each of the areas of detail that we can get into is kind of dominated by it goes back to men set right it\u0027s which bits of the abstract interface to this component of a tap system are parts of the will be bubbled up to the higher API in which cookies are policies and it turns out that in every case it could be all of them are all of them so I want to actually raise a different problem and say it\u0027s actually worse than that so there\u0027s a sit set of parameters of capabilities of policies of you know all of these terms are kind of overlapping here but they\u0027re all kind of initially based on the system capabilities right you can\u0027t in tap so you can\u0027t raise transport protocols you don\u0027t have implementations of it\u0027s very simple right you cannot race i IP protocols that you don\u0027t have implementations everywhere you don\u0027t have a connection so there\u0027s actually kind of a hard floor on where your policies can be and on top of that you can layer the capability the application right like so I think one of the problems that we\u0027ve had in doing API "
  },
  {
    "startTime": "02:10:02",
    "text": "design for the few of transport is we either say okay well it has to fit in DSD because nobody else is going to implement applications do it otherwise or they say oh well we need one API to rule them all and I think those are both mistakes I think we actually need different api\u0027s for different interaction patterns and therefore into this sort of cascade of policies comes the API that the application was written to this is easier to deal with because you can always put Chim layers in to put any API on top of any other thing but some of the efficiencies are really terrible there\u0027s also application policies there\u0027s developer preferences and constraints um a lot of what we see with sort of driving forward encryption now is actually kind of application policies this levels browser is essentially saying um you know this cipher suite with visi and shaking protocol or go away and the certificate needs to have these properties or go away um and then you have user policies you have things that the user actually wants right um so these would be preferences and constraints these would be things like you know I I like multipath and I like things that go fast but I also have a horrendous data cap so please don\u0027t use my cellular to accelerate Wi-Fi you can do that on Apple devices now but you can\u0027t do quite yet as say um my roaming schedule is such that I pay low enough rate in Germany and in Czech in the Czech Republic that I\u0027d like to boost it here but not in the western US but maybe in parts of the eastern US because I know that there\u0027s a wait so like these policies can actually get arbitrarily complicated um one thing that we that we pointedly ignore in the IETF when we can get away with it is the enterprise environment and a lot of enterprises have organization policies and actually um they would like to see it like this right so organization policies are first and then the user policies are second and there\u0027s another view point which is that that just kind of goes away because well the user is first and we\u0027re going to pointedly ignore the organization policies but there\u0027s another thing that kinda cascades in here so I think when we start having this conversation there\u0027s all of the dimensions that we\u0027re talking about about which variables need to be need to have knobs on them and and do those need to be configured by the application developer do they need to be configured by the user to maybe somehow bubbled up through the API and we need to have sort of detailed conversations on each of them and we also need to have detailed conversations about how we\u0027re going to implement this stack I\u0027m going to start with a really terrible idea in the hope that people will come up to the microphone and give me better ideas these escape so you have system capabilities and application fee abilities and policies and user policies and organization policies and we have a language for taking properties of things "
  },
  {
    "startTime": "02:13:05",
    "text": "and attaching them to elements in a system in a way that they cascade there any web developers in the room please leave now I think we should actually configure the top system using CSS and I make this point for two reasons one it\u0027s not as bad an ideas it sounds like it the first time I really want people come up into tell me that it\u0027s a terrible idea that we\u0027re not gonna do it but it also illustrates how hard this problem is because debugging CSS is maybe the great unsolved problem with the 21st century and we\u0027ve kind of decided that we\u0027re taking it on so with that I\u0027d like to open the floor please tell me I\u0027m wrong oh that\u0027s depressing this is easy that you\u0027re wrong you\u0027re wrong but you may not be insane gory fair okay and yes what Cohen said yes and maybe also yes to some of the things there\u0027s multiple blobs in here that do quite different things so the stuff like to do with which what your providers offering and all the interfaces and capabilities you have up your network there\u0027s transport you\u0027re trying to figure in here unless some other user policy which if you\u0027re live in an organization isn\u0027t your policy it\u0027s their policy so there\u0027s multiple building blocks here and I thinks we don\u0027t actually talk about these together and maybe we should maybe we should kind of M write some documents in this space that bring these things in here did some stuff in the hackathon which might be cool to talk about some other time yeah but but I like the idea but I think maybe we don\u0027t understand the blobs quite here and their interaction is complicated so we need to see them all at the same time so so what what I would like to see what actually what I wanted to draw but um it was too hard was the verticals here right so these are the horizontals these are the layers of how things cascade and the verticals are the different bits of which kind of policy for which part of a running tap system you have and like I pretty much know which fits in this application capabilities but fits in that box I have a little bit of an idea about what\u0027s fits in that box and then like how you find things to these higher boxes gets really fuzzy so I think actually trying to draw this out as a matrix I mean I tried to draw it as a matrix it\u0027s hard I think if we if we actually say okay well let\u0027s start on this is a thing that we\u0027re gonna try and deliver and maybe it turns into a document that comes out of the group maybe it just is we get smarter while we do it and we throw it on the ground because it\u0027s terrifying is you know I think but I think yeah I think that the the next step is to put the verticals in here and and actually think about that well that have heard "
  },
  {
    "startTime": "02:16:06",
    "text": "what made me happy as I have heard that pretty much every palo herb every presentation today that had some sort of policy angle actually talked about what\u0027s in there vertical box right like in detail i think we need to tease it out and and and classify a little bit so i this isn\u0027t part of the of the internet architecture but I know my iPhone does all these things right it just it happens right somebody is somebody\u0027s doing this right yes hopefully hopefully he\u0027s going to get up that microphone and tell us how it how it happened no pressure I wasn\u0027t home at you Cory a very quick jump in on that it\u0027d be really nice to know how it happens because from playing with this stuff you really want to know what is happening as well as it happens magically that\u0027s because you just you want to have your hands on the knobs I don\u0027t know the knobs are doing the right thing so I can design more things for them it\u0027s an engineering problem yeah yeah so so there\u0027s another I mean there\u0027s another problem here is that maybe you have user policies in CSS and maybe you have user policies in the UI and maybe you just have a user policy thing do you load and dump think about it I mean like there are there are different we we can build both Emacs and VI we have the technology [Music] Harrison Perkins um so I think we need to be careful to avoid the boiling the ocean problem yes that\u0027s why I think that that\u0027s why we pointedly avoided this conversation and now we\u0027ve run out of stuff to do so okay clearly all the rest is just a matter of engineering but I mean there are pieces of this I think we can make it a very good snapper rabbit I mean the low-level bits okay and I think we were engineers we can make the engineering choices about oil here on the knobs to adjust that these policy things at these low levels how much of the higher level stuff should be in scope for this group and how much of that should be things which you can see it as an operating system choice or something like that I don\u0027t know so I agree that the higher up this stack you go the further away from our scope we get but at the same time since these stack on top of each other the choices that we make down here define the set of possible languages up at the top level and we need to make sure that if we make any constraints on that that we\u0027re doing it with eyes open yes I agree that the perfect is the enemy of the good and we yeah and we can somewhat we can give you a lot of things without getting a lot oh I\u0027m not I\u0027m not saying bar down I\u0027m saying consider yeah sure "
  },
  {
    "startTime": "02:19:06",
    "text": "hello Tommy I didn\u0027t get say you\u0027re wrong yet so you\u0027re wrong no but am I really you in the details were all wrong so yes I agree that not all of this needs to be specified in taps but I think all of it needs to be acknowledged yep by taps and we need to define have the shape of that so the main point in which I think you\u0027re wrong is actually the ordering of these thank you that was useful can we go I want to put the application boxes on the top so so while Brian\u0027s editing that sure I was well what does top me yeah sure you\u0027re at one end yes they are what is our end the the point of that okay so I think the application capabilities and system capabilities likely can collapse into each other and hopefully aren\u0027t too interesting yep because essentially it\u0027s like if I try to load protocol SCTP I don\u0027t have it it\u0027s just not gonna work right race will fail who cares like it\u0027s good I think the application policies is the main area that taps needs to figure out I think that\u0027s built up a lot of what Phillip was talking about of intense I think there we should break that into yeah did you have them already preface and constraints yeah so there\u0027s intense which go towards designing my socket options and stuff like that I think that\u0027s we need to work on that list and that will be a good piece of work to do but it\u0027s not quite as tied into all the other constraints on the constraint side so I guess the proposal there would be like maybe that part of the same CSS rate as the other layers using the terminology I know so at least we\u0027re talking about our implementation right so Cory I\u0027ll give you your details essentially we do it as like there\u0027s like an Oracle when you\u0027re creating your connection so that application policies are different than user constraints and Enterprise constraints and other things application policies and constraints are things that are the Preferences that you can feed into this Oracle like I\u0027m the application I want here the things I want to do tell me what I can do yep I do think that the user constraints and the organizational constraints should be the same language those are some versions of it I mean internally they fold into the same language for us they are configured "
  },
  {
    "startTime": "02:22:06",
    "text": "by different places your enterprise for example can push you a an XML file right now that describes which applications are allowed to use cellular on roaming or not and that gets overlaid with the user preferences of do they want that application to you cellular or not and then everyone\u0027s happy there so that\u0027s an area that exists that I believe totally fills out the CSS I don\u0027t think we need to get too into the weeds of how that\u0027s done because that\u0027s gonna end up being system specific but I think what we should end up defining is that these are parameters that are fed into some type of Oracle that a tap system must be able to consult to give its application constraints to and receive back an answer of okay I chose this subset of the things you wanted or here are the options you now have based on all of it yep I\u0027m gonna it\u0027s just way more sane than what I did make an observation about time that were under ten minutes let\u0027s encourage people to be brief Spencer Dawkins that\u0027ll drop one of my questions it sounded big deep for the other ones and so this wasn\u0027t speaking as an ad you were talking about you were talking about you know all these things being kind of at different layers and maybe with different people responsible for those you know for those technology for the decision points and stuff like that I just observe you know did the right thing we\u0027re supposed to be able to work across areas in the IETF and if we had to go all the way to w3c you know to work on some of this stuff we\u0027re supposed to be able to do that well yeah we cooperation with them and that\u0027s where the CSS experts are you had on the floor I think I can thank poor Tommy for reading my mind so let me see if I can add to something I mean this this layer that you\u0027re showing I mean it could actually collapse because somehow the system capabilities like says like what kind of application capabilities you can have and some and then you can have efficient policies that actually defines what kind of organization policies and media policies you could have so they can become collapse but there are some other things like like I heard like somebody say like now my device is doing it like if we have a choice between a Wi-Fi and 3G radio you tend to prefer Wi-Fi because it\u0027s supposed to be free and a sub-segment but things are happening in the in the other side as well like you can actually the network or the operators they can actually send a policy say like okay you have like data bucket if you use this application I\u0027m not going to cut your data and stuff like that so that also we could could be one thing that tests my dick want to "
  },
  {
    "startTime": "02:25:07",
    "text": "listen to them because because then that actually decides like how you\u0027re going to do your selections maybe maybe in one network you select okay this this were participe works another network work week works so that actually affects what taps is gonna do so muck so my my thinking is like that all the policies decisions I I think we need to think a bit more I think of it more like robust way of doing it so that we can collapse and come come to this like really minimalistic policy thinking otherwise and we also need to think about like how taps will be used which apps will be used and the underlying network as well so briefly please you asked us to say that you\u0027re wrong you\u0027re wrong um I guess it\u0027s that you have two kinds of that kind of stack so first you have the stack of capabilities of what\u0027s can be done and that\u0027s very below afterwards you have the policies and this is what I consider policy more or less once you have the set of stuff that can be done from a technical standpoint you want to filter out what shouldn\u0027t be done from a policy standpoint so for example I don\u0027t want that application on on cellular and last you have to fill the point of ordering it in a way from what is preferred I think there\u0027s this CSS really really matches well the idea how to do that and afterwards after we have this ordering then your bet back to heavy eyeballs on trying out what of the order you have empty this might be really awesome this might be and up in using always the last thing on this tacky or that\u0027s most oh that\u0027s this desirable but yeah sridhar Cisco I don\u0027t have an opinion about the paid the policy expressed but just to boil the ocean further I don\u0027t know if it is implicit but does system capabilities also Express network capabilities because yeah I was just looking at the slide and I realize no it doesn\u0027t it should there\u0027s an icing like the whole the whole point it\u0027s very very very light gray yeah yes so I think with the multi provisioning domain and and part selection what we want to do I think that should come in here your chance really good instrument just wanted what I think the preferences and constraints are very different yes so those I think we really need to think about biggest implications or so different well I like the way that I actually the "
  },
  {
    "startTime": "02:28:07",
    "text": "way that Philip I think was Philip put it that we basically have you know the supply comes from down here and the filtering comes from the top right so it what you can do bubbles up and then what you don\u0027t want to do pushes down I think that\u0027s a it\u0027s a good way to frame this or constrain this set of solutions that this makes this tractable alright thank you very much oh yeah Michael Michael you yeah the last 20 I\u0027ll be quick I think it\u0027s about who has what knowledge you know you cannot have a system policy giving applications messages out of order if messages contact applications can\u0027t accept that applications may not know about you know me having a preference for Wi-Fi or not so it depends on who has which knowledge really that\u0027s my view on I mean at least helps simplify this discussion I think okay is there anybody who didn\u0027t sign the blue sheets good okay Michael you get the last word thank you everybody if you\u0027ve got comments on this topic feel free to add them in onto the ether pad or take them to the mailing list and I will see you all in Singapore [Music] "
  }
]