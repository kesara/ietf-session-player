[
  {
    "startTime": "00:00:07",
    "text": "we'll need somebody else to take notes for extra i think all right 10 o'clock so i guess we should probably start to be on time uh i'm jim fenton of course this is braun you're in the jmap session uh or of the of the gmap extra joint session extra will be following jmap whoops let me just do okay yep that was the right thing so hopefully by this time of the week you have been well exposed to the note well but we will continue to do it further if you haven't read this in detail and read the reference documents you need to do that because it by participating here uh there are all sorts of uh uh issues with respect to uh to uh intellectual property rights and so forth that you're granting and um uh also uh we expect you to abide by the anti-harassment procedures and so forth and to continue wearing your masks when you're not eating breakfast there is also a note really well which we don't have in this particular slide deck that goes into more detail in particular on uh things like code of conduct uh so uh please use the the the meat echo uh tool um you can scan the qr code at the front if you're not there already it looks like there's a uh yeah we've got pretty pretty good turnout for the uh for the meat echo tool at this point so that's great um and use that when you're going to join the microphone queue"
  },
  {
    "startTime": "00:02:00",
    "text": "uh if you're not doing uh if you're not actively presenting please turn off your audio and video and also your other uh audio noise maker sorts of devices and continue to wear your masks uh unless you're actively speaking at the microphone and actually we found that as i'm doing right now when you're actively speaking in the microphone you can probably be understood even if you keep your mask on if you're remote please use a headset that that really helps cut down on echo and that sort of thing uh and here the places to find agendas and so forth that you have probably already found so let's uh jump to the agenda and this is this is kind of very very top level um we'll be starting with the jmap following with extra and any other business and was there a more detailed one for yeah on next page okay so here are the uh the the different drafts we're going to be basically going through the current drafts uh and we have a couple of uh proposed work items that we're going to discuss following that and then we're going to go back over over our milestones as we usually do and then extra will be following a similar format so are the is there any agenda bashing to be done hearing nothing we will go on to the first item which is jmat blob are the slides there now"
  },
  {
    "startTime": "00:04:03",
    "text": "are there blob slides yet uh you might need to hit refresh in fantastic i did refresh and it worked for mine but you might need to go refresh separately which is i just oh i need to yeah i just did a no no not there unfortunately it's in the data tracker let me just start from mine it's gonna be easy i think oh they're not there again there you go i did refresh and and they were there and now they're not there so let's try that again manage slides it's there refresh text ready to be shared it's not there wow um okay i'm doing great with data tracker so far not only of with the medical thing not only these slides not in there despite the fact that i did hit the refresh there you go now they're there um but apparently if you direct message somebody what you write doesn't show up in the system anymore hey there's really not much to say um since last iatf i added the digest response by request which allows you to the server can say which algorithms it supports and then you can request that item on whatever range you've requested to download and it will calculate the digest over that range which allows you to if you have a partial download to check that it's correct um before requesting additional data so that seems quite a useful thing to do and you can also request a digest of the entire content of a blob which again will be quite handy for checking that you have the right thing downloaded"
  },
  {
    "startTime": "00:06:00",
    "text": "and so i need to add some more text around that um advice to implementers and some examples at which point we'll do the third working group last call and hopefully the final working group last call before shipping this thing i don't think there's anything else we want to add to blob at the moment so let's just get this one done um any comments on that anything i see a thumbs up awesome i think i'm done then let's move on oh yeah i need to unshare you can do that yeah okay so uh quotas is the next one we have here and uh it's already me okay hello everybody [Music] uh okay so regarding zakuta i'm gonna be quite fast as well yeah so i mean i i got a few extra comments from alexay so thank you for that if you are here so the first of all the soft limit just adding a few examples to make it more clear like like you could use the soft limit for example to uh [Music] to stop uh to to block the user to for uh to send outgoing events like uh like outgoing emails outgoing uh"
  },
  {
    "startTime": "00:08:02",
    "text": "but you would still be able to uh get emails even get incoming events like emails and uh calendar events created by somebody else uh the example as well i i missed uh when we changed the result uh from size to octet i i missed changing it in the example so that's that's a good catch i fixed that and i added uh also some more uh content to the security consideration section uh [Music] regarding the alexa's rsc uh what he did as well for kota's on imap and uh so i didn't get some warnings and advice on the implementation and that's pretty much it for me if anybody has questions or i feel good no i guess there's a movement in the room and nobody's joined the queue so i think there aren't any okay thank you just before you disappear uh what do you want to do for the next step so we're ready to work and grip last call list uh the next step yeah sorry can you repeat so do you think this document is ready for a working group last call now oh alexi gave a thumbs up as well so that sounds like yes okay thank you i forgot to to make a slides for that but uh yeah thanks i would appreciate it cool okay great so the next item is oh there's jmap blob it's somewhere in the"
  },
  {
    "startTime": "00:10:00",
    "text": "middle of the list here gmap s mine which is alexi hello next slide how do we share the presenter yeah just a quick reminder so uh this is basically for sending s mime signed and or encrypted messages um the two main attributes uh on email set is s mime sinus my encrypt this hasn't changed next slide um so there were couple of open issues which i addressed uh one is controlling um signing whether it's encapsulated in application pk7 mime container or whether it's multi-part sign because they kind of both implemented and we probably want to give people enough control to generate either uh the default is true which is application pks7 mime which i think is probably uh slightly easier to implement for people and similar header protection this is a feature of s mime uh there is a document in lamps um about how to do this and suggestion was to make the default rule so the address is all the um email header is always protected next slide so neil if you want to comment now that's fine um yeah i i read the draft i think"
  },
  {
    "startTime": "00:12:00",
    "text": "it's looking pretty good i just had one bit of bike shedding was related to the previous thing uh slide which was just the name of that header protect field seems inconsistent with the others could we rename it something like s mind protect headers or something like that like mine sign a page okay that's fine to be honest i kind of struggled with names here so are they i just think sorry send you something just send me a quick email and i'll change yeah i'm not i'm not really married to names so that's fine um so the only thing remaining is i think it would be helpful to be able to also automatically decrypt messages uh for this i probably need to talk to neil to help me out how you know how exactly this is going to work with probably email bars but um i um yeah i ran out of time to to do this this this this round but yeah i think that's only thing outstanding so i'll get to it next time um timing i guess what when do you expect to to have this ready for working group last call um around 1 15 maybe a bit earlier all right okay well i don't see anybody else in the queue so i guess we'll go on to the next item which is i i see a hand in the room did you have a comment on this uh you need to go to the microphone and you should probably join the queue via the tool if you can both the microphone and the queue thing i was actually for some reason i got logged out so i'm sorry for that okay so who are you then please yeah my name is sachin garc i had just a quick question about the last point that alexa mentioned about"
  },
  {
    "startTime": "00:14:01",
    "text": "the uh decryption of part of the s mine thing and uh to be fair i haven't really read the specs i mean i'm coming from something which is zero my only point is the decryption part should it not be handled by the client i mean how would the uh whatever the server would know actually what keys to use to decrypt it that's a sort of a question and how this thing works might be a slightly off topic right and so um basically because that is part of the extension is to be able to sign and encrypt there are already keys so if if it has assumption is there is some kind of directory or storage which is trusted by by the user associated with jmap so if you have the key and you receive a message that can be decrypted it will decrypt okay so the user trusts the source where the keys are stored and then the key difference yes so the idea is yes yes um and i mean in my implementation we actually have keys kind of well csr and certificate author generated so again you know you can extend this to [Music] automatically create and install certificates in your you know store and then use this to sign encrypt any other questions comments on this okay in that case we will move on to gmap tasks and yours hi i'm yours"
  },
  {
    "startTime": "00:16:01",
    "text": "um yeah so in general tasks just a quick reminder what's the goal that we want to have what we want to achieve we want to make a common standard also for kanban boards and issue trackers so not just for groupware next step please oh there's a that's a screen okay so um yeah so basically this is a list of all the things that we discussed at last itf um that should now be hopefully sufficiently worked in so the first thing is was an error of mine i edit related to instead of extending relation which should not be fixed with new values like depend on then the the second one was a suggestion of of braun about how to add colors to categories and keywords i um yeah i added that to the spec then the third one um having estimated work um as so there was a the point raised that estimated work isn't sufficiently specified because i said it's just some value it's in addition to estimated duration because some systems don't use the duration they use some abstract value and i tried to come up with a more a better definition for it and i now chose fibonacci scale that that's like a recommendation to to use fibonacci scale that's a common um common scale people use in agile to estimate their work um yeah that's that's what i came up with i'm not perfectly happy with that but yeah for now i don't know first iteration it should be good"
  },
  {
    "startTime": "00:18:00",
    "text": "i hope um yeah so then another thing mentioned at last itf was that it's a bit un it was a bit unclear why we have impact in addition to priority and now the text mentions that impact is one of the things that can be used to determine the priority later on but it's not necessarily the same thing basically just to make that a bit more clear then yeah i threw i had this i added this source property during the last revision i threw that out because we already have prod id which we can use for exactly the same thing which is something that robert mentioned last itf which is a good thing um yeah and there are two other bigger things that i already bootstrapped during last itf which i'm gonna explain the next in the next two slides next slide please so um the first more or less big thing is progress tracking there was a comment that it's it was a bit unclear that the pro that um it has uh i extended the values of progress um and i created a suggested mapping of progress [Music] and it was a bit unclear about that that there were several values that were not really easily distinguished from each other when is a work item resolved when is it completed when is it confirmed when is it in process and so on and there was also the suggestion that some systems even allow defining custom workflows on a project level um so in the end it doesn't really depend on the system"
  },
  {
    "startTime": "00:20:01",
    "text": "project how people design their own workflows so the thing i came up with for extending progress or like like extending the the spec to have um yeah better tracking of a workflow that that should also be that should reflect what's there in in uh issue trackers or kanban boards is workflow and in two extra properties one for the task list and one for tasks which is workflow statuses and workflow status so in the task list you can define all the allowed values of your workflow basically so like you can already do in jira and there are the workflow status is then defined which must be a value of of those that you defined in the task list and it um yeah it says which of the status which of the work where the workflow currently is basically and if you use the workflow status then obviously progress doesn't make a lot of sense anymore so it must be null that's what's now in the spec how it's written okay is there yeah maybe yeah we can go on um all right and there's uh grouping is the next big thing so here again as a reminder um the idea is that we have different use cases and task systems are more heterogeneous than typical grouper systems so the idea was um that also to to make it interesting for for task systems that don't have calendars that don't have a lot of features to"
  },
  {
    "startTime": "00:22:01",
    "text": "those okay next slide please so i came up now i already triggered from first discussion during last itf i came up now with those groups so it's basically common recurrences assignees alerts localizations custom time zones so they're grouped by the feature set basically the methodology i used um was i i looked at three good reasons for grouping certain properties so first of all they should be uncommon in a certain type of system then they they then they should not belong to the like they should not belong to the common group if they are uncommon in certain types of system then i moved it to out of the common group they should be optional within js calendar so otherwise it doesn't make sense to exclude them from a common group and they should uh require some additional business logic as well so simple key value pairs is not something that necessarily needs to be in a different group than the common group it's yeah it's easily implementable by vendors so um yeah as it is right now each group is a separate capability in the spec last time we discussed about using sub-capabilities i decided against using sub-capabilities because it avoids the additional complexity we talked about having a not supported or set error for example yeah and it was just for me was just more natural and simpler this way of course you can leave some comments on that yeah what i'm a bit unsure about is if"
  },
  {
    "startTime": "00:24:00",
    "text": "it makes some developers unhappy that want to support all the different use cases now because then they need to supply six different capabilities now instead of a single one um yeah so that's basically kind of a trade-off i don't know or something that i don't really like about having six different capabilities yeah it's not just a question in the room do you still like it how it turned out do you have some comments on it um yeah so i'm not sure maybe we can we can go to the next slide this should be the last one for grouping so basically here it's just a list of systems and what kind of groups they would need to implement just as a as a validation that it kind of makes sense that the grouping that that's now there all right robert yeah this is robert stepanek um i have a couple of other points i would like to bring up for but for grouping specifically um so what's the idea of how should systems what should systems do if they get a js task that includes properties that are in a group this they do not support are they i'm supposed to reject that then or are they supposed to let just store it um what's what's the idea here you mean uh like if you if you have um if you have a recurring task um but um that we see in the list but simbra right what should simbra do when they do not support recurrences should they yeah they can just um so um it's just the normal"
  },
  {
    "startTime": "00:26:00",
    "text": "capability definition as it is so if you don't understand the capability as a server um i don't exactly remember what the spanx is i think they would reject it then right so okay so you would so um one would need to send um for the js for the js the js task in chamber for tags along with the capabilities that the data contains so that the server can identify yes if it supports all of that yes yeah robert like i think it's um you know this is a client talking to a server so it's kind of if if you implementing it the capabilities let the client negotiate with the server what it supports and turn on off features if you were importing the data from elsewhere so it had you know you had exported something with recurrences from google workspace you know importing into microsoft planner that didn't support it then it'd be up to the import tool to say sorry this has stuff in it that we don't support you can import it and we'll strip that stuff or maybe don't okay yep yeah um i just want to add a quick question on this there were more groups on the previous page than actually being used on here so do we have stuff that we actually no one uses and if so is it worth actually keeping those right now there are more groups because this one's got the currencies as alerts and signees i think the only ones on this page that are actually being you put next to what people are doing the previous page i think had custom time zones and something else maybe oh yeah uh localizations custom time zones yeah so those two don't appear on that list at all so that's correct should we actually have them at all if no one's using them maybe i should have looked a bit deeper that's a good point uh that might that might have gone lost in my what i looked at yeah the simpler the better in many respects"
  },
  {
    "startTime": "00:28:02",
    "text": "it's it's it's somewhere but it's it's yeah okay yeah i didn't i didn't look at look deeply into those two i'm sorry yeah that's a good point thanks a lot yeah so i had a couple of things one is this particular point about between the client and the server if i remember in the internet world we have this whole concept of be send or be very conservative in what you send and be very broad-minded in what you accept so i think that philosophy about if zimbra doesn't if i'm getting something from zimbra and there are alerts there i don't support it okay fine forget it if i'm sending some i'm i'm not sure whether the other servers actually use that that philosophy are built on that philosophy that if i send them two three different things will they just neglect what they don't know and or how do so that's so but i think if it's going to be for a particular implementation it needs to be pretty broad-minded in what it accepts and if it doesn't implement it fine that's sorry it does not support it the other thing i was at this point was when i was when you mentioned impact versus priority sorry impact and priority yes so my thinking is that impact is what impacts me as a person who's creating a task for you priority is what you decide whether you want to take it up or not if something is an issue with me there's a bug like for example the dhcp v6 bug and goo android which has been pending for a long time yeah it impacts the entire android community which wants to use dhcp v6 but it is not a priority for the google developers to do it yeah i think that is i think the key point that we can possibly somehow make it yes okay you mean you mean i should state that also like to make that a bit"
  },
  {
    "startTime": "00:30:01",
    "text": "more clear in the text yeah but yeah that's that's a good point so that that's the point that it's important to have both in the spec it's not the same yeah wow quite a lot of people robert letting me in um yeah in regards to uh reject rejecting properties you don't understand versus you know just being able to store any extra properties i would rather the server is able to store any extra properties because it doesn't doesn't advertise the capability obviously it cannot do any automation based on them or any you know derived property or anything like that but i think it would be better safer if you can actually store them i agree um is but that's that's the thing in a course back right that isn't it already defined like that i don't remember 100 so okay if it cannot be done that's fine all right robert i'm robert stepanek again um i have two remarks not related to grouping so um i i think we're done with the grouping discussion all right okay um so the first one is just an uneducated remark regarding the estimated work property yeah um so i understood that there are multiple scales of how to estimate work but at the moment there's just a single numeric value to start it would it make sense to define to add an additional value to define the scale it is done in when there are different estimating schemes that that can be used"
  },
  {
    "startTime": "00:32:02",
    "text": "okay yeah the thing is i i didn't really find like typically it's just a value you know it just says how much work is this and this now it doesn't say that there's an actual unit to it but i try to come up with a like the common thing that people do in in the agile world and the common thing that i found was the fibonacci scale yeah but i i would also be happy to just say this is just a value and you know even estimated work as an abstract value it will depend on the team you know to say well this is a six this is a 10. it it's i think it's difficult to to have like a interoperable unit that that you know that different systems will understand i don't know it's yeah that's how i understood um the definition of the property although i then would rather i wouldn't understand why even the fibonacci scale should be mentioned if it's really yeah an internal decision okay um although i would i would assume that if tasks are supposed to get shared between systems then some some common definition must be must be defined at least the direction would be handy knowing which which is larger than the other is the bigger number larger or the smaller number is probably worse all right that's a good point yeah okay um the other remark is organizational and goes more to the chairs uh chairs which is um [Music] now that shame up tasks defines updates to js calendar tasks um but she is kind of the test it but she is calendar is currently"
  },
  {
    "startTime": "00:34:00",
    "text": "getting reworked i don't know how to solve these dependencies we'd probably send them through together um that's fairly normal to cluster documents together when they're related to each other so hopefully these two can go together otherwise we'd need to wait for js calendar to go first okay understood thank you all right this would have to go want to go at the same time as j mccallum as well like german task is kind of okay yeah the last slide is just that we are still working on feedback gathering feedback so we have through the ngi project we have some initial feedback from the weekend developer and the developer from to do also gave some feedback within the chi connect rounds yeah but there's still more to come there's still more work to do yeah there are still some next steps before we can go to a last call definitely cool do you need anything from the working group other than reviews not right now cool and did you capture murray's comment murray do you want to make a comment at the microphone or anything because just in case people didn't see it on the chat yeah it's not a question for the work in particular it's actually more directed to the chairs in the working group as a whole um calex has never been something i know a lot about in depth so as i'm reading the charter the word tasks doesn't appear anywhere in it and i'm starting to think oh no you've strayed from the charter and i didn't catch it in time but then someone said that tasks sort of falls under calendaring generally so like that's fine and then in that case the only thing missing is i just please send me a milestone so i can track it"
  },
  {
    "startTime": "00:36:03",
    "text": "yes um calendaring in general and you already are chartered to do calendaring related work so that's what i was getting at i didn't know how tasks were related to the charter that's all yeah yeah in in the calyx formats tasks are a subset of calendars so okay all right very good um there are other things in the agenda that don't have slides we should talk through them as well right and yeah let's let's hit those before we go to the uh to the new topics so let's bring up the uh the agenda for this sharing specifically which i think are both neil uh well calendars is robert i think right right okay um yeah um so basically calendars is waiting on resolving um the uh js calendar discussion that's happening in calyx at the moment particularly around identifying who participants are corresponding participants with who you are um so hopefully we'll get that resolved soon and then um you know it was been basically done for a while now so hopefully we'll be able to face it off and uh sharing too we'll probably want to publish sharing calendars tasks kind of together they're all related um if it tasks is gonna be nearly ready too and with the js calendar even uh so yeah um sorry there's not been a huge amount of progress but i'm hoping once we have this js calendar thing resolved um we'll be pretty much there"
  },
  {
    "startTime": "00:38:02",
    "text": "cool thanks neil so yeah we'll basically just wait and put them through with tasks when tasks is ready sure cool all right new work new work oh yeah yeah sorry i forgot to see it as well okay it's gonna pop up okay so uh sieve i don't have any slides because there's not much to talk about um the only change since since vienna was uh tracking the changes in the blob spec other than that this has been kind of idling for the last two cycles waiting for implementation experience with the test method which has yet to come so i think what i'd like to do is pull that out of this spec and leave it as an extension uh it's already optional in this particular spec and i think with the process i met draft which will be talked about in the extra session there might be a couple additions needed for the test method anyways so rather than hold this up i think that's probably the best way forward uh we've got this running in production at fast mail it's totally replaced our managed implementation and so far we haven't seen any problems with it so unless there's outlying concerns that haven't been brought to my attention i think we're probably ready for last call after i pull the test method out lexi um yeah i think uh you brown and i had a discussion and maybe just leave it in and"
  },
  {
    "startTime": "00:40:01",
    "text": "do you see a problem pulling it out and well i mean if you want to do the work and split it up split it off i i don't see it it already has its own capability so it's it's basically just moving into a separate draft so this can move forward i kind of feel it's a bit incomplete without it you know the for real world implementations but and it's not a big deal i suppose as a replacement for manage sieve test isn't necessary at all i don't believe okay i don't remember hope we can take we can take it to the list you know if you feel strongly about it we'll leave it in and then no i don't know no i don't feel strongly about it but uh i think maybe what uh we should do is you want to investigate how to extend imp action anyway for this right right so maybe just look at it and see how it will extend and whether you already have genetic um ability to have you know stuff extra options that that the engine can act on which is kind of part of that yep but understood my only fear is that without somebody actually implementing it and using it there may be other missing pieces that we're unaware of and i hate to publish something that's not going to work for people that need it okay all right rick yeah uh this is rick sickness the uh as as for incompleteness with management i can tell you it's definitely there is no capability that matches the civ script jmap testing behavior in manage ziv it's a it's a novel thing designed to replace an internal system at faz mail so uh manage it has check script right it doesn't compile and we've we've built that into the existing civ script behavior and uh i think it's a"
  },
  {
    "startTime": "00:42:00",
    "text": "great idea to split them the basic problem being one of the reasons we don't have an implementation to test with our a user-facing implementation to test at fast mail is we've never figured out the right way to present it to users and if we can't find a way to say here's how to simulate this and present it to users it's unclear that it's technically sound right we might realize that uh the the testing of the input and output can't be made useful as an actual simulation tool but meanwhile is a replacement for managed script manager sieve it's it's done the job we're done we've shut off manchester uh so publishing everything done now seems like it it can replace the old facility and this new thing is still it's just an idea if there's no other comments um i will proceed to remove this out of the current draft and then ask for workinggroup.com cool thank you all right you work okay uh on to uh newark i'll start with migration and portability i think that was the first one on the agenda all right just a quick organizational note if we if we're kind of low on time then we can skip the preferences part but we'll go ahead all right okay so um yeah i pre i prepared two small presentations about our experiences or some ideas that we have with jmap the first one is to use jmap as a protocol for data portability and migration so in our use case we want to use jmap as a generic"
  },
  {
    "startTime": "00:44:01",
    "text": "one time api basically and one time api is kind of a weird word let me try to explain so we in our world we have a lot of legacy systems from which we want to move to a more modern system this legacy system has typically or some of them have no api so what we're looking for is an api to be used for the the task of migrating away from the old system to a new system um and what would be great would be to have to point developers that get this task to an api specification that they can just they can say ah okay we have this legacy system we can just put this api in front of it and be done with it basically so it's it may it makes the job a bit easier for developers for this specific use case and we looked at jmap for this use case you can use jma for a lot of different data types which is great so it's it's powerful enough it has a lot of features um more than enough actually than we need so that's perfect the thing that we a bit we struggle a bit with with is the ease of implementation for server developers so let me go to the next slide um so what we tried to use jmap for this use case is to bend it a bit to make it more rapid to make it easier for for third-party developers to implement the jmap api and so these are just some ideas"
  },
  {
    "startTime": "00:46:01",
    "text": "that we had so um how we change the the the core api so so developers are actually interested in implementing this without too much overhead so the the first idea is that we basically we focus on the key objects and properties from the api from the spec which are necessary for the migration use case so i don't know in some cases you don't even need query of course it's if it's a huge data set you need it but in some cases you don't in some cases you don't need specific properties of even a get request you don't need to implement the whole thing so basically what we right now have is a document stating what's important and what's not important for our for for this particular use case to make it easy to implement so um also what we did is we skipped the session object which is a quite a big one in my opinion um we can do that uh when the username equals the the account uh that you use for login basically so if you only have a single user in a single account you don't need the whole complexity about mapping an account to a lot of different user ids um yeah and this just reduces quite some overhead yeah not such a i don't know easy choice to do that um also we introduced a simplified request for this um can you go to the next slide for this or yeah so um yeah so to make it really easy for people"
  },
  {
    "startTime": "00:48:00",
    "text": "um some people might don't want maybe don't even want to pass json in their api they just want to give us some json that we can parse so we have this way that they can choose either implement the normal way very simplified get request that you can see down there or have a just don't use json at all for the request have it all in the url um yeah so we then call this simplified request um yes so can you go to the next slide okay so that's basically the idea here to have a an api for rapid development with which we reuse existing jmap concepts and libraries which is good because we can reuse parts of jmap other people will be more interested in implementing jmap i we think it can be beneficial for the whole ecosystem because it might spark interests that that's not already there yeah there are some related problems that we ran into like we we could one could also expose certain archives laying around on the system and a file system for example some people have i don't know folders with icalendar files or vcards that you could you could easily expose with this um with this with the wrapper yeah so those are basically some thoughts that we have some some work that we did and i just wanted to put this out there and the idea was that we"
  },
  {
    "startTime": "00:50:01",
    "text": "right now we have some internal document that we point people to but it would be nice to have it to some to put it in some public place uh it's probably not worth an rfc i would say but yeah i want to leave that open for a discussion maybe we we have a document on some website or do you have any thoughts on that um yeah i'll just pop myself in the queue here um one thing i was thinking of way back even was doing more of a rest type api so rather than the the query parameters to actually have a path object type and then id underneath that and if you do a query on on just the object type you get a list of all the ids and then you can request each of them as a single item so making it feel more like a a standard rest api that's a different way of accessing jmob data because jmf is very neatly separated into objects with ids so mapping it to rest might be something that's worthwhile as a general document whether that's an easier way to do it than this it seems like a useful thing to have okay yeah alexi um it looks like you're modifying or extending things you know to make it simple to use for certain cases so this should be a document whether we choose to publish it now it's kind of a separate issue but i think there should be a draft yeah okay um and you know uh bronze idea makes sense as well all right um yeah would they be interested in in having this as a draft idea in this working group is that per charter fine or yeah by the charter it's fine all right"
  },
  {
    "startTime": "00:52:00",
    "text": "yeah then okay sounds good i would say cool um i guess publish a draft first and then we can do a call for adoption maybe publish is informational yeah yeah sounds good great okay so the the next thing i hope it's very quick um yeah it's basically about preferences is some other thing that we did some other ideas that we have um i just wanted to present here just to get some to give you some ideas what one can do with jmap so um grouper preferences are not very well standardized everybody does his own thing um yeah there are um different ways like they're different dimensions even to it so they can be in a certain context the preferences for example in in out of office in a male context or for for calendars there there are specific preferences that one can have but they can also be in a global context as well um and there's the second dimension here is that preferences can be in a dedicated data structure for example you have an extra object like calendar preferences or they can reuse other mechanisms that are already there for example you can have some preferences as sieve filters then there are also the third dimension is that there's a diff it can be a different scope so for example preferences can be in the user scope but there are also some systems where they are an admin scope is what we"
  },
  {
    "startTime": "00:54:02",
    "text": "call it uh for example some civ rules might be there for a certain user but the user actually doesn't see them it's it's somewhere on the system some admin um created those rules or this is preferences and it's there but hidden from the user visible to the admin that's just about the state right now for grouper preferences can you go to the next site yeah so um recently we did a project or we currently do it do it where a vendor wants to expose certain settings um for a big migration um and here they wanna wanna expose allow lists and block lists for this we defined a new jmf preferences object um yeah just a normal i don't know normal jmap way that you do this by having a separate capability the link is down there with which contains some documentation on it and um we did this because having a jammer preferences object is or we we we did this for this isp project because again we can use jmap jmap is something we already support and it's something that that we can point others to to easily implement and yeah maybe there's also it also is also beneficial for the whole ecosystem in general so the way we currently did this just to give you um some some example what we did or some example how you can use jmap is uh oh no can you go back sorry um so we did"
  },
  {
    "startTime": "00:56:00",
    "text": "there's already a kind of preferences object for example we just have a generic preferences object in this case because it's about allows and block lists is a generic kind of thing and yeah because it's it was very easy for our use case right now um we have a separate capability for this generic preferences object that you know that extends the the general object with settings so for example with the general preferences object doesn't have a lot of things but then the the preferences allow list or block list extension gives it additional attributes that yeah that are specific for block lists and allows and with that you could extend the whole preferences object with more and more preferences depending on the way it it's implemented in each system okay can you go to the next slide yeah why do we do this um yeah we want to want to stress the the usefulness of jmap for uh for the data portability use case for the the migration use case you can use it in a lot of different contexts uh contexts uh it's easy to extend uh yeah we are we did this on our own so we're interested in some feedback some opinions on it um yeah and i think it's also good to to have to just to go forward standardize a bit what preferences should look like um to understand them a bit better because it's it's currently not very well standardized and the net the next step is for us is also like similar to the migration use"
  },
  {
    "startTime": "00:58:02",
    "text": "case is to have some kind of document that describes what preferences are yeah how you could standardize them but we're not very confident of having that as an rfc yet but yeah that's open for discussion yeah that's basically it just to share some experiences to yeah get some feedback all right so there are already some questions or some remarks on that and sasha could you put on your mask please so my point as i understood this particular aspect this is largely an implementation issue for the implementation to get to know what certain preferences are as one of your use cases is adding the block list or a reject list it's a particular mail server to at that end to be able to understand either what isps to use what ip addresses to accept mail from and things like that so why should it be part of the j map first say rather than being an apple data that is known to the specific implementation per se it may store it in the database it may store it as a json object it must store whatever for properties it needs to store and however way it wants to do it without actually it being part of a specific part of the jmap which is an access protocol between the client and the servers this doesn't really need to if that's what my thinking is that the jmap server that you are having for example your fast mail server it may have certain contract configuration attributes which are dependent on how your"
  },
  {
    "startTime": "01:00:01",
    "text": "implement server is particularly being implemented rather than being part of a protocol specification i mean based on what i understand is the use case that's what my thought is okay so you're saying it's out of scope for the protocol but it's still nice to have like uh get a deeper understanding and to i don't know describe what's out there how it can be done that's one way of doing it is to do it there but i think that my my limited understanding so excuse me no makes sense i also said it's uh probably more of a best practice document than part of the protocol yeah yeah i i mean i i think just talking about the previous point briefly the you know jmat is the protocol but this is still data and it's still something you want to either synchronize or be able to you know send from the client so whatever else so that's kind of the point of this but as you mentioned earlier i don't think there's any kind of common enough subset that we could choose to be worth kind of publishing a standard on the data type at least i i doubt it um but uh a best practice document of if you're creating a preferences object this is the kind of things you should consider that sounds pretty reasonable to me like we have a bunch of them at fast mail kind of like the calendar preferences one um but the actual data types themselves the specific properties like that's just going to be quite service specific i suspect mostly okay go ahead hans here hello can you hear me hear me well yeah yeah yeah okay great thanks um yeah so um i i uh i agree which was said previously so i think certainly it's the client service"
  },
  {
    "startTime": "01:02:00",
    "text": "thing because this is something that is that some uh uis and clients do manipulate on the server side so it's i think certainly something that fits into the you know client server interaction first of all regarding the second point neil said i mean it's true that this is certainly nothing which is the same with every system but that we see several settings and also allow this blacklist as a property which multiple systems support in a similar way and as of now what we experienced in migration is that this is a very big problem because there's always a big word to do the translation and having something like you know a best practice reference within jmap um would maybe help vendors to adopt a more standardized solution and thus in the future um promotes portability and interoperability with respect to those settings that might not apply to each and every setting but for instance for this particular one we made as an example here this could well be if this needs to be an rc i don't know anyway so it can also be a document i'm i agree with that but i i don't i would not rule out in general that this is something that might be helpful to standardize a little bit just regarding block list um in you know as a specific example i would consider that a separate data type like each you know item is um a block like an email address or a domain and that's certainly how we model it um because that makes it any you know more efficient to add stuff to or to remove stuff and to you know resync it to another client if you've added a you know a blocked address on one client and you want to resync another one rather than being just like a whole blob in your preferences object uh maybe what can i answer it's okay oh are you finished sorry i didn't want to interrupt you sorry i think what we can agree upon are concluded at this point is um it might might make sense maybe it might make"
  },
  {
    "startTime": "01:04:01",
    "text": "sense to um work out some more of these settings and discuss about them in in more detail at a later session maybe and see if there is some common ground for that or not actually i wouldn't go too much into the detail here for that particular discussion yeah because that was not the intent but um i see there might be a good that might be a good opportunity at a later session to think about more deeply and maybe we come with more examples which systems use using which fashion also gives the time right now but thanks for the feedback yeah i also say thank you for the feedback and thank you for listening all right thank you i think that is we're now at the point of uh milestones or any other business for the german working group what's that do you think oh yeah that's extra so i think that might be it for jmap any other business for jmap before we move on to milestones all right here are our existing gem milestones um i figure we may as well just edit them directly here rather than putting it in the notes and having to move it otherwise so starting with blobs we're obviously moving that along to august given that i need to update the draft and send it off to my co-chair for working group last call and then we will hopefully submit this finally in august uh submit civ document i think we agreed likewise it will basically be ready to go straight after this"
  },
  {
    "startTime": "01:06:03",
    "text": "there we go august jmap calendars is certainly going to be later so i think we should probably punt that to do we think we'll get tasks done i guess by next ietf would be the question there because that will if we're going to cluster this together um is it on yeah i don't i don't think the next one is already it will be finished by then maybe the afternoon um it's and regarding tasks it's not not even on the milestone list yet yeah no we'll we'll create one for that in a second okay um here i'm just putting each club together let's see if it's ready and we don't think it's going to be a problem we can publish it but that's him yeah i guess i'll just move it to december for now then yeah uh quotas we think is basically ready to go so that will be august as well s my sender extensions october uh gem up address books we're not we've got that ready to be adopted in november so that was four thousand months calendars is probably done and js contact js contact's the biggest hold up on that robert wins do you think they'll be finished we want to publish cs contact before or the latest at next itf yeah so adjusting it next year yeah cool all right um so let's add some more milestones we say submit js general tasks"
  },
  {
    "startTime": "01:08:00",
    "text": "document asg and we said that is probably going to be early next year well if if addresses are ready before if addresses are ready before um we don't necessarily have to wait for the next ietf to do the call for adoption we can do that on the list so let us know yeah it's nice when it happens all right so tasks i've got one ready for that to go in there what else did we have that we had said so sharing that we don't have a milestone for sharing i'll create a separate milestone for that um and i don't think we had a milestone well yeah we've got sev we've got tasks we've got blob we've got quotas that might be it then um and this other work is going to be do we want a milestone for the migration and portability dock or we just do a call for adoption and then add a milestone for it if at that point yeah i think we let's do a call for adoption first and then cool all right so sg and so to the gmap sharing document as well and that will put in december along with calendars so we've got two changed four change dates two additional milestones done there we go uh for this it is murray"
  },
  {
    "startTime": "01:10:08",
    "text": "all right uh jm milestones completed thank you everybody that's the end of the jmap section of this meeting and we'll move on to the extra section thanks jim i'll unshare my screen go back to the agenda slides so this is our current agenda for the extra section of this meeting any agenda bashing before we move straight on you've already been noteworld keep noting it alexi i've got you first i'm at partial i think i gave you more time than you need yes i rejected doing slides because there is nothing new to report i think you said it it will be sent to like to working through plus call yeah so sharing oh sorry i'm at partial i will send to working group last call straight away straight after this meeting sounds good does anyone have any objections comments etc before we move on anything you want to talk about for imac partial it's the fastest 10 minutes in existence thanks alexi next on this list process i'm it ken not much to say on this one um it's in production at fast mail seems to do do the job um i'm not sure how many people have actually read it but maybe working last call would get some reviews unfortunately with the passing of ned freed we've lost one of our big civ reviewers so we need to pick up"
  },
  {
    "startTime": "01:12:03",
    "text": "should you snooze at the same time sure pretty much the same story with snooze again in production works i think we've had a couple reviews on it but as far as i'm concerned it's fully baked and ready to go to the last call dale yeah just um on the process i'm at draft i read that um it refers to a calendar id but there's no information at all about what the scope of that is or where when we're getting calendar id or what a calendar id is i mean i know what we use for calendar id but i'm saying from the draft i would have absolutely no idea of what this calendar id is i'm trying to get and where to get it yeah it's uh it's a good point it's kind of outside the scope though because it's maybe but like you need something i felt like yeah okay thanks jim that's fine all right i'll uh i'll add some text to that and uh then perhaps we go to last call thank you so it's uh updated draft and then work and grip last call cool and for snooze did anyone have anything to add for snooze otherwise we'll send that to working group last call as well excellent uh next on our agenda where is our agenda just a quick comment i mean it looks like we're going to have like four documents ready for last call almost simultaneously [Music] i think they all should go into last call but if you can stagger them so there is no more than two documents at a time ideally or at least you know give them an extra week you know to"
  },
  {
    "startTime": "01:14:00",
    "text": "start or something yeah this is this is barry i i would say give them extra time but put them all out at the same time don't artificially spread them out just give us more time to get them done what yes thankfully they're all fairly short documents so that will help a bit all right back to the agenda uh civ registry was the other thing that we had on this list alexi i think save register is ready as well right i'm looking at ken who is my creditor now at least we couldn't think of anything that was missing so at this point i think we need reviews all right i guess that's another document for work group last call and in a way i mean this one is slightly weird because it's more mechanical so if somebody can try to double check the data but uh this is kenny i i think we've covered everything uh and just as a point of reference i added in this in this news draft i added an entry for the registry so presumably they will either go together or the registry goes first and then snooze follows cool"
  },
  {
    "startTime": "01:16:00",
    "text": "awesome all right we're on to the new work so rick see if i remember what's on my slides okay yeah so this is uh snoozing the imap i think uh the idea of this feature is probably well understood at this point uh especially since ken was talking about sieve via uh the snooze via sieve this is if you got a message in a mailbox and you want to hide it away until some future time it's present in a bunch of clients and just a few servers next slide so what you see in servers and clients implement this is you take a message and you say i don't want to think about this message for some period of time the message vanishes from your view unless you go looking for it and when that time expires the message comes back and i've seen this implemented in half a dozen clients in two or three major servers next so this is a basic proposed command this command is built on top of the jmap semantics for snooze uh which i realized today we have never brought up but they are implemented by fast mail the idea is this you take a message and you snooze it which moves the message using move semantics into a snooze mailbox this is a new special use mailbox when the message is there it's picked up three new data items on the message and those are the awaken to awaken flags and awaken at this tells you when the message stops snoozing where will it be put how will its flags change and when does that happen if you snooze it uh from any mailbox other than snoozed it will awaken to wherever you snooze it from and if you snooze it from snooze you just leave it awakening to the same place this is these are broad strokes of how i think we can implement this based on what we're already doing at fast mail what i've seen other places but i think if we"
  },
  {
    "startTime": "01:18:00",
    "text": "have significant feedback on how other people need or want this to work that's that's why we're bringing this up next slide right i've covered this this is what we do with it uh if you can't unsnooze it to the uh predefined mailbox it goes to inbox but hopefully that never happens next we also uh yeah cover that too yeah well okay so one thing i'll throw in here we use flags i'll talk about why uh when we snooze and unsnooze these messages you just get a list of flag changes to make when it wakes up this is uh this is supposed to talk about unsnooze i believe i think i've got some typo on my slide here when you unsnooze a message right you're saying cancel the snooze i'm ready to deal with it early what do we want to do with the awaken flags the semantics i put in here are we clear them we don't add the ad flags we don't remove the remove flags we'll have to see what we actually want on this next slide the snoozed mailbox is uh it's read-only you can't put mail in it except via snooze you can't remove mail from it except via unsnooze and we create it as needed this is not the same design we see in every implementation there are implementations that leave the message in the current mailbox and we'll flag the message with the flag or we'll give it some other metadata to indicate that it's been snoozed or implementations that put the message into the snooze mailbox to snooze it and to unsnooze it remove it from the mailbox but if you're using move to implement snoozing you're losing the ability to enforce that the metadata has been set correctly which is why we're proposing a separate verb rick we have some people in the queue do you want to take them now right now yes thanks i can't see them on the screen i'm looking at uh yeah uh neil i think you're up first cool"
  },
  {
    "startTime": "01:20:00",
    "text": "um yeah so it didn't look like you currently have any way of specifying the folder to return to other than like implicitly it's like wherever i snoozed it from um we actually do use both because in labels mode it always snoozes um from the inbox and returns back to the inbox regardless of where you choose from that'd be great now you want to add that here too yeah we can add that the reason it's not there is this started as what's the simplest version of this we could expose privately and as we bring it to this room it's what could everybody else possibly want i'll stick that in the in the notes i think the default you know it should be optional if you don't split back to the mailbox it came from makes perfect sense phillip yeah phil handbaker yeah uh have you considered the interaction of this with tasks and when i'm when i'm using this sort of functionality it's really because i want to create a task for myself later on and my client doesn't support that so it might be worth thinking about the two together uh yeah i mean i think the answer i can give you on that uh thinking about this and with respect to tasks is as a as a individual human i have daydreamed about how i would use that but we haven't done any serious protocol discussion of it and uh we can bring that up on the list how we might do something um yeah uh thanks rick that's interesting but i have couple of questions i'm not sure if some of them might be answered in following slides so interrupt me maybe if i'm asking something stupid which you will explain anyway so a very minor question is so how does it interact with a recent flag so because you know clients use that already as a kind of you know to denote uh some message that's fresh on the server will this reactivate reason until unsnoozed or not um then what's not quite clear for me is the client is who is doing this news"
  },
  {
    "startTime": "01:22:02",
    "text": "interaction so i understand that somehow the server implements that snooze mechanism the moving out of the smooth states when the date has been passed and so on but it's actually the clients that need to be taking action i guess so i wonder a little bit how that kind of it's how it ensured that once the server moves the message back in the unsmooth states you know what is the client's respect expected to do and third question if you can still take one is you say it's not allowed to append messages to that news mailbox so i wonder about what is about migration here so if we migrate a mailbox which has this feature we might need to migrate messages which are the smooth state into a new destination system so this would require append actually properly okay first let me apologize the audio quality in here is not perfect i may have missed some of your question um as regards to what is the client expected to do this does come up a bit later but the short answer is the client is simply expected to show the user that the message has returned to its previous state uh so this means number one the message is back in its awakened to mailbox and number two uh what we do at fast mail with the flags is we use a flag to indicate that a message it has entered that mailbox by awakening from snooze and then it uh it will display differently i think a convention on that would be useful but not necessary i do think it's important to talk about this being a server function to awaken the message because you would like your message to awaken no matter whether no matter which client you are using and you don't you don't want your mail client to have to awaken it if you're using a not snooze capable client to read your mail when you snooze it from one that can um as for migration i don't it's not a question i've thought about i don't have a great answer i think the simple one is you would migrate the message to its awakening target and snooze it then uh it would get the job done even though it's a little silly"
  },
  {
    "startTime": "01:24:05",
    "text": "okay uh barry hi this is barry liba um so i i haven't read the draft yet so this is a question there's no draft there's only slides okay oh okay um the question is about uh the use of the special use mailbox the the user may not move mail out of this mailbox that's as far as i can remember unique at this point the special use mailboxes are like every other mailbox except they're used for certain other things we don't have a case where you're not allowed to put something in there with a move command or a copy command or you're not allowed to take it out with a move or a copy command and that sort of thing how are you planning to write this up is that uh going to be a requirement because i think some servers do not have that capability in them yet that there are mailboxes that you can't put things into or take out of i think we have two options um one is to one is to eliminate the requirement and instead to say that if the message is moved in is that the message is moved in there's some default behavior which i'm not sure what it would be and if the message is moved out it is implicitly awoken another option i i think in my imap might be too poor to uh to be correct here is that we could require that apple support is present and that this mailbox must have access control that restricts you from adding to it but i yeah i see a thumb down yeah i i like the first one better of that yes but alexa is coming to respond to this um i actually i'm not going to fight you on this i agree with you um magic mailboxes ideally not a good idea so um and so the other side of uh another thing i wanted to say is not yet fully sold on the new command"
  },
  {
    "startTime": "01:26:00",
    "text": "but i think it basically we need to review all extensions that affect uag copy and uid move yeah to make sure that this is handled in exactly the same way yeah or you know you know module of the differences obviously so that it kind of uh um i know it's more like if we can manage that it's a to-do item we need to do yeah but yeah um i suspect from the reaction from you know people in the room and remote that there is enough interest in this pete resnick um so as you were describing this i thought what's the use of the snooze mailbox in the first place i understand implementation wise why that makes it easier because now you've got all the messages that you have to deal with later in one place and then you can do the trigger off that but that seems arbitrary why would why wouldn't i be able to say snooze this set of actions on this message wherever it may live which may involve a move which may involve a flag change which may involve any other number of things like for instance you know cue it over to this other process um the move mailbox seems like it could be removed from this and and you could still implement it that way but it seems like you could just do this as a much more generic protocol proposal and then leave to the implementation whether they use a snooze mailbox or whether they have a list of messages you know that are waiting to be snoozed seems perfectly good so to make sure i understand you pete i think what you're suggesting is something like a defer command where you would say here's an action to take at some future time and to implement exactly this you would move the message to snooze and defer its"
  },
  {
    "startTime": "01:28:01",
    "text": "removal from snooze that's right yeah and then it's a normal mailbox um you know you may in your ui say no can't move anything into snooze um that's fine but your ui is dealing with the idea of the snooze mailbox and for all i care that could be a flag not a mailbox and in many implementations probably would be sure so just remove the whole idea of the mailbox and just make it a defer command or a snooze command whatever you like and if it gets expunged then that goes away so a uid move will will wipe the old thing and the defer is lost automatically yeah yeah thanks yeah i will actually second beat on this uh it's probably implementable with flags you you still need to store extra metadata because you want to substitute flags at a later date but you can do it in place by just defining and you keep you know one or two more extra keywords saying this is snoozed so basically clients when they scan for mailbox they will just don't show it or something i don't know we have quite a long queue here at the moment are all these people still waiting in the cure have you just not removed yourself yet all right just yeah pop up when you're when you're ready to talk i think it's all good yeah so yeah this is actually i think my what i was pointing out for has actually been by alex and p was about that instead of doing the concept of the mailbox per se we should actually use the flags things and then let the client decide whether they want to implement it as a mailbox thing or they just want to put tags or flags and work on it that way and that way all your flags that information for the snooze flag would be awakened too and all of that may come up there yeah it was short uh this is ken so um based on pete's feedback i'd like pete to review the sifs news"
  },
  {
    "startTime": "01:30:03",
    "text": "draft which has similar has similar language so you may have an issue with that too and i'm more than happy to change text yeah this the civs news i mean i that's that would be great the civ snooze draft is much less prescriptive about what happens with the message in the interim so it'd be good to get looked at yeah this is pete again and i'm glad to review it i i have no dog in this fight i i you know uh however you guys want to implement this this seems like a cool feature and and that's fine um just architecturally it seems like an easier thing to make it much more generic so yeah i i took a quick glance through the the document because this came up and i thought okay well yeah same ideas so i i disagree about making it more generic i think that kind of the point of this is it's two things it's there's a common paradigm that's implemented in a whole bunch of places and they pretty much all work the same way and so trying to support like extra cases beyond that makes it less likely this will be implemented because like for example you know if it's you can arbitrarily do some defer command later there's a good chance most people won't implement that because that's not what they're back in sports they're back in audi sports snooze and it's pretty they're all pretty similar so i think that's a downside to trying to make it more generic um uh and yeah i actually think that makes it more complicated and i've lost whatever other thought i had on this right now so stop that yeah that's uh for the record that's my tentative feeling also i i defer sounds very neat and i think i want to think about it and write about it more but it it feels to inch a bit towards all things to all people uh which is the very dangerous in a lot of designs yeah yeah"
  },
  {
    "startTime": "01:32:01",
    "text": "other things so i'll just get really bit um it was someone mentioned oh and then the clients could you know implement this however they want it with the server but that loses the point which is that this is synchronized to the clients and they can all provide a consistent view which again is a reason to make it less generic so that you're more likely to see something consistent if you use different clients so this is pete again and neil used the magic words that send my hackles up which is because that's the way the backing does it and this has been the disaster of imap from the get-go is that you know when mark designed it it was because that's the way his file system worked and that's what screwed over a lot of clients because they didn't deal with the world that way and you end up with that semantic you know ugliness between client and server because then the client has to figure out what the backing looked like and if you make the the and and generic may be the wrong word it's that you want to take the essential bits of this irrelevant of what the server is actually doing in the background and say what can the server implement here if the way you do this is move them to a special mailbox well that's one way to do it but i you know i can imagine a zillion different ways that a server might do this depending on its backing and this would make life harder for certain servers yeah yeah i i think so brian i think has been waiting in queue for quite a while uh sorry yeah no i popped myself in the queue here to actually ask a more general question which says yes we've got this in civ we've got this here in imap presumably we also want to publish a jmap version of it do we want to do all these together and then i guess the question is going to come up for our area directors at some"
  },
  {
    "startTime": "01:34:00",
    "text": "point are we going to try and as more things happen in both gmap and extra in parallel what do we want to do there but maybe this maybe it's not time to do that this time maybe we'll wait till we have more area directors in art again uh to respond really briefly to to pete i think that something neil said that is also relevant is putting putting aside what the back end server does if what we want is for different clients to be able to interpret the semantics of what the server plans to do then indicating it as this message is snoozed until such time is easier to interpret than client a has indicated this message should be moved moved or unflagged at some future time and client b must understand that's the common parlance for snooze so being able to apply a name i think has a lot of value to it uh regardless of the back end semantics uh alexi um yeah sorry i think i jumped in just before lexi in the queue again i was just going to reply my approach is not from this is what how back-ends have implemented it my approach was this is how it works as a product in various different services it's it's you know from a user's point of view um there's quite a lot of consistency um i think there are basically two general ways of doing this one is you know extra imap keywords that let the clients hide it from the view or the server you know you know hide it from you or whatever or there is a magic mailbox right well somewhat magic we're discussing what extent ml box yes um i suggest maybe once the draft is written we'll discuss the you know the two approaches and maybe settle on one you know i suggest well i suspect we're probably not going to solve it in this room"
  },
  {
    "startTime": "01:36:03",
    "text": "i also suggest that chairs probably should have a limit on how long we will discuss and then we'll just pick one approach along this um there are benefits to one another and there are well advantages and disadvantages to both of them so um yeah all right just it has to be a mailbox because otherwise it will only work in clients that have explicitly added support for it whereas when it if it's a keyword uh look like you're just not gonna do anything in other clients if it's a mailbox they will sync the stuff and it will have moved out of the inbox it will move back into the appropriate time they don't have to know anything about it so it can't be a keyword has to be in the mailbox this is still a server functionality so server can still hide it from the viewer actually so i mean there are there are variations on you know yes it might be magic keyboards that hide it from you know tell the server not to show it until later on we can talk about yeah yeah let's take it i mean i think i think there are strong reasons i'd argue for one way or the other but let's take it to the list because i think we've taken a lot of time my question is based off on what pete said uh about the backing store and the implementation being true so this is very basically a concept of what really is a mailbox in the mail dire world or the mbox world it's a file it's a file that recites a particular place but if you take this whole concept into a database sort of a bad thing then it becomes basically some table or something in a database hierarchy so me so what i'm going to say is a mailbox as a concept versus a mailbox as a particular place or something so a mailbox has a concept that is implemented using tags or mailbox that is a concept that is implemented using a directory i think we might need to just think a slightly more into how it may actually happen in the real world and excuse me if i'm speaking"
  },
  {
    "startTime": "01:38:00",
    "text": "something which you guys already know because i'm very very new in this area thank you i think we've reached the end of the queue okay let's take a next slide i think i'll try and i think that's about it just about uh yeah okay there's one two more things one is uh it's worth noting that what fast mail does and its implementation is we have a conventional flag that is used to indicate a message recently awoke that lets you see the message isn't just back in your mailbox you didn't forget that you ever snoozed it it is you can see this has been deferred i think a suggestion and a registered uh common flag for that would be useful or we've taken a got a bit off the rails on exactly what happens but this function is useful similarly the save date extension is useful here because you can see when the message returned to the mailbox if in fact it has left and returned to the mailbox as part of being snoozed and awoken next i think that's the last slide on snooze yeah but let's talk about the sieve one well we'll do that next okay uh shall we move on to the next topic yeah i think so i i like to think uh this one is simpler but let's see uh it does call into question what is a mailbox so um right so a number of uh implementations now uh client implementations let you visualize well they let you see mail with labels stuck on it implemented in one of several ways sometimes it is using uh user flags sometimes you're putting the message in multiple mailboxes gmap uh is to some extent built around the idea that you will put an email in multiple mailboxes and these can be treated like labels and because you truck with emails in terms of a single email in multiple emails no special work is required but if we want to expose this in imap for clients that would like to show the various mailboxes in which a message appears which is to say the various labels on the mailbox we need to"
  },
  {
    "startTime": "01:40:00",
    "text": "do some work next so uh if we want to implement what i will call labels mode today um you need the server to implement object id because we're going to want to map from emails found in a mailbox to the mailboxes in which they are found and then to do that mapping we're adding a data item to the messages called mailbox ids mailbox ids is a list of the object ids of the mailboxes in which this email appears and the email here is as per the object id capability it's it's any message with the same email id which i believe is defined as the same uid validity uid and it's all the all the non-changeable content of the message between mailboxes every mailbox that appears in when you fetch its mailbox ids you will be told what the mailboxes are you can't change this property it's computed for you when you copy move delete whatever else these messages that's how you change the mailbox ids next the complication we've been talking about internally and i'm sure there will be many complications is that if you have this computed property on a message in mailbox 1 and that message is also found in mailbox 2 but you delete it from mailbox 2 you'd like the mod seek in mailbox 1 to be updated because its mailbox ids property has been updated through action at a distance this is going to be either complicated or not depending on your implementation unfortunately it's a little complicated for our implementation uh your mileage may vary next uh yep if you want to set the mailbox ids or the labels on a message you just move it around it's all it should all be able to work implicitly uh one thing that does come up is this leads us to want a uh the ability to copy a message into a"
  },
  {
    "startTime": "01:42:00",
    "text": "mailbox only if it does not already exist by email id this should probably be spun off into a separate conversation so i don't want to get too far into it but you can imagine that if you have a message and you say you want to add a label which has already been added you don't want to copy that message and have two versions of that message with distinct uids but the same email id in one mailbox you're going to have a bad time next that could possibly be done with uh mod seek checks but i can't remember whether copy and move allow you to test mod seek store certainly does yeah i don't know yeah yeah great much more prosaic concern any client that's any good that allows you to use labels allows you to color the labels and we'd like to allow that for labels mode of imap so this is registering a piece of metadata for the mailbox where we store the color define the way we do everything these days as a css3 named color or rgb code the thing that's a bit more complicated is that then we need to be able to get the metadata efficiently when we select the mail when we list the mailboxes over imap i believe brian you're going to be talking about that in a minute so i won't uh but if you can't get the metadata in the list and that's where we've put the color you're going to have to select every mailbox to display the labels efficiently and that's no good next you've got to let me yeah sure ah that's a pain okay there we go was that it might be the last slide there was no next there you go so uh those changes are uh in concept straightforward but i think they led us to efficiently bootstrap an imap client to display multi-mailbox uh labels with with color and to keep it in sync efficiently depending on the implementation uh we have one person in queue sir just thinking about this color thing is what makes the jmap preferences object actually become part of the protocol in"
  },
  {
    "startTime": "01:44:00",
    "text": "this particular use case as i understand because we're talking about thunderbird on one machine on my linux box and the thunderbird on the windows box basically i want to have the same interface and the best place to keep that information is in the server so that's where we could put something like a preferences object preferences for the mailbox and the preferences object per se could be actually opaque in terms of whatever information you put it that may be a part of a client specific if you can have something like yeah so so some place like but basically just an object store for at the server level to store some information that the server like outlook does it with across they have this whole concept now of outlook in the cloud where you can actually store your preferences yeah i think it's absolutely it's absolutely plausible to talk about jmap being useful as a sort of a generic key value store for well-known properties but on the other hand um being able to say there's one specific property which is color which we apply to the mailbox uh gets rid of a lot of complexity and thinking about what else people will use a generic key value store for fastmel's already got an extension for the color property on mailboxes we already implement it in terms of metadata on the mailbox and it's dead simple i think that's the least complicated part of this whole suggestion uh that's the end of queue if there's nothing else i will thank you and sit down thank you cool i just need to pop my slides up here because i realize i didn't upload them yet but that will take me 10 seconds and then i will show you very quickly the metadata slides upload nobody saw that yep second 10 seconds don't zoom in on me while i'm shoving my finger up at people thanks remote person okay slides unshare reshare"
  },
  {
    "startTime": "01:46:02",
    "text": "there we go uh list return metadata this is for anyone who's seen list return my rights this will look very familiar to you um it it's very similar basically you say well you're giving me a list for each mailbox call get metadata on that mailbox with the following properties and it looks like this is that readable at that size maybe not thanks we we have plenty of time for that um i should have you i should have removed some more things from it anyway as you can see here if you say list return and you say metadata and you give a list of the metadata items you would like it to return after each list it then returns the get metadata response as you can see looks absolutely identical between the trash line there and the get metadata on the same trash with the same properties and it just says here's the value of these things so it's very simple and it allows you to do a full listing on the server and get the metadata at the same time this is implemented in cyrus imap has been for very many years i can't remember whether i added an x capability for it or not probably not um but it would be very easy to do so i will write a draft and ask my co-chair to do a call for adoption on this and it should be pretty trivial i imagine any comments this is candice one comment so this is really the only way to get all the information as rick was saying in one go since when get metadata was changed from [Music] annotate more i think we removed the ability to wild card the list of mailboxes that you want to fetch that item on so unless we put that back in the wild carding back in i think this is probably the most efficient way to do this and we already have a handful of return options anyway so"
  },
  {
    "startTime": "01:48:01",
    "text": "adding this one makes sense to me cool in that case i think we're at the point where we need to look at our milestones unless there's any other business for the extra working group i don't see any people jumping up let's have a look at our milestones here we go we have adopt a document for ai with sieve and we have submit said document so isg let's have a look at what we're going to do about that i guess is there an option in the dates that you can say when hell freezes over probably not um yeah has anyone even started thinking about this yet oh there is okay yes i'm gonna sit down um i think somebody from open exchange is it was it stefan bosch he actually wrote something uh the difficulty is the last time ned had a look at it and he said oh that needs quite a bit of work so there is a document obviously we're not ready and not anywhere near done with it but um [Music] okay well i do wonder whether we can just"
  },
  {
    "startTime": "01:50:00",
    "text": "kind of start adoption call well ask stefan to refresh it and say we'll adopt it you know but if obviously you know no guarantee that it get done i suppose but um i would rather adopt it and work it in the working group even if we run out of steam at some point and decide it's not tractable i will okay thank you and the december date is obviously yes that one is i'm achievable i might kick that one down the road a bit okay uh this is barry if he's not willing to continue with it i'm happy to take it over but yeah regardless of what state it's in i think we should just adopt it and go from there okay i will request a call for adoption august will bump the delivery date out into next year mid next year we can do other things for that okay extra milestones uh submit what do we want to submit here we've got a bunch of documents don't we that we have agreed are going to go i'm at partial process imip snooze sounds like we may be delaying that a little bit just because we're um all the snow stuff will will happen um but sieve registry oh yeah yeah we're not planning to take all the things that are ready for working group last call and make milestones for them right i was going to yeah there's no need for that i can say it's done all right fine just we just have them ready just put them out for last call and and go for it we don't need milestones for them all right so but i will put in um adopt a list return metadata draft"
  },
  {
    "startTime": "01:52:00",
    "text": "for august adopt a snooze map draft or maybe september that one might have a bit more faffing before we're ready to adopt anything else we need is milestones for extra at the moment no my boxes as labels i think we need to discuss but you know we can discuss on the main list jsp meeting anyway so cool um yeah all right do we have any other business in our last eight minutes thanks everybody look at that we've pretty much landed on time good work enjoy the rest of your isf yeah yeah i'm just wondering the google gmail has these x labels right they use that in lieu of the mailbox labels is that the similar thing that you're talking about yes it works very similarly but it uses labels rather than well it uses the names of the mailboxes rather than the ids right so what google did was it it added its own things with the x dash tag while the my map basic thing has the labels it but it seems outlook there's exchange does not really sometime back when i checked it wasn't a supporting some sort of labels i'm i'm just that's one of the issues the implementation issue that wow all right cool i will unshare my screen all right thanks everybody"
  },
  {
    "startTime": "01:54:43",
    "text": "is um"
  }
]
