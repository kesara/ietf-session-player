[
  {
    "startTime": "00:00:04",
    "text": "oh he\u0027s not actually you know he\u0027s on me deck or we have a few we have a couple of other people in jabber but it looks like some like well Klaus is in both we have matt is in the room yeah we have Jeff yes Jeff PC but I don\u0027t Jeff are you on audio as well let\u0027s see if he responds I occasionally we\u0027re on this slide info would be nice but not required okay so Jeff is hearing the audio so if if the speakers just say what slide were on that should take care of that and I guess I looking at that and I see there are slide numbers at the bottom so that\u0027s good all right and so I babbled long enough that it\u0027s actually 1:30 and it\u0027s time to start the Seaboard meeting hi I\u0027m Barry I\u0027m your new co-chair and this is your old co-chair Francesca and I shouldn\u0027t say old but you know you can see whose hair is gray and this is not let\u0027s see what else welcome very thank you for stepping up you\u0027re welcome and I\u0027ll have to say my famous phrase here now that we have this note the note well well okay great so you\u0027ve seen it a couple of times but if you haven\u0027t please take a moment to read it as a reminder minutes are taking thank you this meeting is recorded and your present it\u0027s logged there are the blue sheets over there you can start putting in your name this is the agenda for today first of all introduction on the status by us and then custom will take on to talk about what is left in CDL and in seaboard and then we have a little bit of flex time you\u0027ll see the times are indicative and then a wrap-up is there anything you would like to add in the agenda or change don\u0027t hear anything okay so a very short status update so there was a new version updated to 4c DDL so we are version 3 and during this meeting we should go over what is left of the review comments that we\u0027re done for the working group last call before last meeting and what are the open issues left in the key table and then for the 1749 this draft it was last updated before IDF 101 so it wasn\u0027t updated for this meeting and I "
  },
  {
    "startTime": "00:03:06",
    "text": "will see what\u0027s the state test and also what\u0027s the status of the discussions in the main list and in the github about it so I think you can take it Gaston while I change the presentation Kirsten just threw the microphone on the floor for the record the reason of course was that the microphone was not positioned for someone of his height okay here we have Auto positioning systems for this hi Stephanie here we have Auto positioning systems for the mics please [Music] we have a we have a nice comment that we should standardize the height of the microphone let\u0027s get serious here because we don\u0027t have that much extra time thank you yeah I totally start with a slide that just reminds people of what the see over here uber was about because we have a pretty specific mandate here and one is taking our sd70 49 which is turning five at the end of the year and take it to the next level in the IGF standardization process so we are not here to invent major new stuff about Seaborg but we\u0027re here to make sure that we have a speck that is even better than what we have right now for essentially the same thing and on the other hand we also have language for specifying Seabourn data items and also JSON data items and that we actually want to move to standards track quickly and milestone date for that was May so we are already late and we don\u0027t want to be infinitely late and a third thing that we are supposed to do but only in a limited way so far we were a tree charter at some point is look at see what tags tags are one of the two extension mechanisms "
  },
  {
    "startTime": "00:06:06",
    "text": "extensibility mechanisms of people there is another one the simple data items that really hasn\u0027t you been exercising yet in the last five year so that\u0027s not where the focuses most people want to define tags and that\u0027s something that we also are looking at so yeah let\u0027s do this in three steps so that the tags part I have fits into the flex time part on the agenda so let\u0027s first talk about CD DL and I need to issue an apology for Hank who is at the trusted execution environments meeting so it\u0027s really hard to get him because he\u0027s usually involved in another work group at the same time so I\u0027m the messenger here today again so at ITF one or two we had a nice idea of what would be done until May and then we would be finished what actually happened is that directly after the ITF I got sick and and that delayed the process why do I so it hasn\u0027t all happened the the - over three that essentially takes the London results is two weeks old and let me quickly go through what we did there and then through what we missed doing unfortunately because of course this was one of ten internet drafts that had to get ready for this meeting so they have been a number of really useful editorial comments and I hope I see a few more editorial comments and in the next couple of weeks and so we clarified the definition of group entry is clarified how their words behave we fixed the inheritance example to actually be legal and had a few typos so that\u0027s really useful we know we noticed that we that the usage of C bar out there had drawn a thicker line between integers and floating point values then we thought we what five years ago so in a few places we made this explicit now also for instance a one doesn\u0027t match a one point zero and a one point zero doesn\u0027t one so we now have explicit text that tells you whether the constant you see in in the CDA spec is an integer or a floating point of aging and I managed to aside my favorite ISIL standard from 1985 so I\u0027m happy there is more text about security considerations it\u0027s always been weird to talk about security "
  },
  {
    "startTime": "00:09:07",
    "text": "considerations of a specification language but yes when you do a specification and you think about how people will make mistakes that then turn into a security issue so it\u0027s really useful and finally I just went ahead and added straumann for a control operator registry for a yenna registry for a control of our operators without trying to also define a policy and that\u0027s one of my next slides whether we actually want to do this and that\u0027s how there is an editor\u0027s copy on the github side github.com /c board - WG I should have put that on the slide and there are a few more things in there we didn\u0027t define what a byte is there are still people out there that think we have to use 20th century world octet because byte is not defined so we just defined what about this and the predefined what the target types are that the size control operator actually can control so it\u0027s for byte strings think for text rings I didn\u0027t remembered right now but it\u0027s written up and for unsigned integer so that\u0027s all there is defined for and if you think it should be defined for something else then we should act quickly unfortunately there was one review that that was so good that we sing at it out and and didn\u0027t put it into issues and you always didn\u0027t do something like that and there was Jen\u0027s video so that there are like 10 things in gems review that we still have to act on and I mean we all have been there not I mean not turning something into issues always fights you okay so there are still a few issues open on github and some of them just aren\u0027t going to be done in the current version of CTD air so there was a request for co-occurrence constraints it actually turns out that many co-occurrence constraints fit naturally with a grammar foundation of obsidian so if you want to say one map key always occurs together with another map here they both don\u0027t occur that\u0027s easy to say but more complicated ones like there need to be two timestamps in there that starts from and the ends by timestamp and the second time stamp has to be larger than the first time step we cannot say that inside yet because it\u0027s a grammar it\u0027s not an executable language where you would be able to put in predicates like "
  },
  {
    "startTime": "00:12:07",
    "text": "that so that\u0027s something I want to get back to later on when we are done with the current spec but that we will cannot do today I think there also was an editorial comment that we should be more explicit about the history of the document and its contributors and I think that that\u0027s a very good to comment but I wanted to do this right so I didn\u0027t do it before the internet draft deadline because I would have gotten it wrong okay now the open issues that we do care about there is one issue about specifying group matching I think the current spec does this in Appendix C but maybe that has to be improved and that\u0027s one of the issues that is tagged as had wanted because somebody has to read this who doesn\u0027t already know how it works because for me it\u0027s it\u0027s perfectly obvious how it works but I happen to know how it works so we want you don\u0027t want to write signage documents as trapdoor functions that you only can understand if you already know what what\u0027s in there so if you have editorial improvements from that that would be useful and there is actually an old thread that we can process maybe with some editorial improvements okay we have a question from Jeffrey can you hear me yes yes I I think this could be handled editorially if everyone agrees that that parse expression grammars are kind of the basis but I think it\u0027s it\u0027s kind of more important more than just out of brush it off for next version because there\u0027s no definition of what parse expression grammars mean in the spec and there\u0027s no reference to them either so if someone doesn\u0027t doesn\u0027t know what they are this there\u0027s no standard definition right so you have an idea where we could get useful reference here I mean there is a Wikipedia article on us but maybe that\u0027s not the best one so hey this room knows what a pulse expression grammars I think no think knows what a pass expression is party you can canal he cannot get me okay so yeah maybe we can take that as one item for the notes that we find a good reference for that there needs to be a "
  },
  {
    "startTime": "00:15:08",
    "text": "textbook somewhere and if we need to recite the dragon book that you recite the dragon book that certainly can be done and and I think the mapping from CD DL syntax to our sixth Russian grammar syntax or or whatever the input to that reference is needs to be defined okay I think that would be very hard information because it essentially is passe expression grammar syntax but we can check that thank you yeah I was hoping that Jeffrey was going to be here and being remote is almost as good thank you so the next item is the extensibility item CDL essentially has one extension point so of course we can always go ahead and do a city 2.0 or something so the languages are extensible by definition but Cydia also has one extension point that is deliberately designed so other people can come in and do their thing extensively without kind of damaging the rest of the language and that\u0027s the control operator the control operator takes one type the target type and the control type and generates type according to the way the control operator has defined and we had a recent discussion on the mailing list and I think one observation was whenever you have these these registered things it\u0027s really hard to collect things together and and know what is the current state so I have this specification here and is this a city a specification yes and it needs this extension and that extension and a third one so that of course is an operational problem in in working with extensions on the other hand the observation is we probably are not going to do all useful control operators of this kind here because there are other SDOs that have very specific things like their own legacy binary syntax and they want to transport this in in SIBO data structure so they might be defining control operators that work just with their binary syntax and we don\u0027t really want to pull all that development into a zero working group until the end of time so it\u0027s probably appropriate to provide this extension watch so there is a little bit of a trade-off we have here make it too rigid make it too "
  },
  {
    "startTime": "00:18:10",
    "text": "free-for-all all the things we want to avoid and I think the the registration policy plays an important role in specifying a regime that actually works for all of us and traditionally people who wrote standards have written registration policies that were on the light side with respect to the guidance that the designated expert who executed on this god so I recently wrote a completely unrelated draft also with an INF policy that essentially says the designated expert can do what they want as long as they stay within this box and that may be one way of handling this giving some some books and giving the designated expert a lot of freedom and then of course Alexei has to find one so in general my understanding their designated expert or specification required is exactly the type when you cannot algorithmically prescribe how you will reject or accept registration so I think defining the box and defining eliminations and what expert is allowed and not allowed explicitly to do I think it\u0027s it\u0027s it\u0027s right right to go about it so one of the questions on Jim shot so one of the questions about specification required that always comes up is public specification required or specification apart I\u0027m sorry do I have you look is it doesn\u0027t does that specification have to be publicly available that\u0027s what specification required or no it does just does has to be a I wrote the BCP it and says it has to be a publicly available a long term specification if you want something that doesn\u0027t have to be that you do expert with you sean leonard so i guess i don\u0027t see the need to define a registry for control operators now i think there\u0027s a lot of issues here that will just delay the release of this specification and i\u0027m not sure actually how much people are using or will use control operators when defining specifications and not regret putting the control operator there in the first place because in a revision of their protocol they may want to change what the restrictions are yeah one problem with specification "
  },
  {
    "startTime": "00:21:12",
    "text": "required is also that many people do not read RFC 681 whatever and and don\u0027t know what it actually means and think if I draw up a piece of paper and tend that to the listing and expert then I\u0027m done and that\u0027s not what is minute so that the the expert actually has the prerogative to do some quality control on that specification so if the specification is not good enough for insurability it\u0027s not a specification is that that\u0027s how I read 81 what\u0027s the number 26 I don\u0027t remember its BCP 26 Oh like but so what what I think we need to do here is if there are two things decide if we\u0027re gonna have a registry what the policy is and I think specification required sounds like that\u0027s already and we\u0027re okay on that question is do we need to put a register to create a registry now and the alternative would be to defer it until we need it but we don\u0027t need it the users okay then then if it can be asserted that the point is it could be a separate document Paul Hoffman terrible idea sir it\u0027s easy to put in this document someone the person who\u0027s first gonna need it is gonna be reading this document and yes it\u0027s close to the end but it\u0027s near the security consideration section so they\u0027ll see it I\u0027m generally a fan of expert review as compared specification required for these things however I will also give the caveat that we are going to choose the wrong way to do this every working group gets it wrong you know the I can\u0027t think of a single instance where someone said oh we\u0027re gonna do the registry this way this way and everyone was happy so and I think we\u0027re within the realm so I\u0027m not saying oh let\u0027s let\u0027s argue about this longer we\u0027re gonna get it wrong but I think let\u0027s get it at least meaning let\u0027s let\u0027s set up the registry in this document so wait don\u0027t don\u0027t go away Paul that\u0027s right okay wait so you\u0027re saying you you think we do not need a specification for each of the thing if we have an I on a registry with an expert reviewer and the expert reviewers not insane then if someone comes to them with a piece of paper where it\u0027s written on the expert reviewer says oh god everyone\u0027s going to understand this we don\u0027t need the piece of paper that\u0027s fine most expert reviewers would say where\u0027s your draft where\u0027s your document and it becomes the the moral equivalent of specification required but not exactly under the exact you know terms or whatever it\u0027s more trusting a human than trusting the process for some "
  },
  {
    "startTime": "00:24:13",
    "text": "registry tsiyon already published its registration templates and they are expert review but the templates it published so it\u0027s almost there is it\u0027s a it\u0027s a small specification yes in practice if it\u0027s logarithm there is no practical difference that\u0027s right especially because it almost always includes the most important piece of information which is the email address of the author of the current email address the author they always change but then somebody who wants to use it if they don\u0027t understand the piece of paper they understand they can call up somebody and often it turns out like no don\u0027t don\u0027t use this make up your own gym so I just sent this mail to the mailing list earlier today which is if we\u0027re going to do a CD DL - I\u0027d rather hold off on this registry until we say we\u0027ve got a lot of these things that we know about and we don\u0027t want to standardize them or we\u0027re not planning to publish another version of the other language Paul Hoffman that\u0027s not the way I read your message so thank you for clarifying I don\u0027t agree well I mean we\u0027re trying to pick the future so that\u0027s bad but from my experience with IPSec Ike v2 I think it is fine to create a registry and then let the working group or if the working group has already dissolved the I you know the remnants and the ietf decide at what point a v2 could be useful and it collects all of the things that are in the registry and at leat it either redefines them or just points to and says my God look at this registry you know without even knowing how you know how much will be in it at the time the person reads it III think us predicted trying to predict when when or why we would do a CDL to is really hard so let\u0027s not let\u0027s not make that a gating factor was it there are some things in the spec you cannot fix with a control operator and one is the reach of cuts and I think that is a pretty strong incentive to actually go ahead during yesteryear to and I also read that bundling up things I have a slide the end of my slide said about bundling up things bundling up things in in RC at some point in time after five years or so it\u0027s always a good idea so that\u0027s another reason to do a 2.0 but either way does what does that say toward having a registry well the point of having a registry is not internally facing its External Affairs right so it\u0027s telling people you can use CV DL even though we don\u0027t have your favorite "
  },
  {
    "startTime": "00:27:13",
    "text": "control operators yet and do you don\u0027t have to wait five years for the IETF to it will standardize it you can do it on your own that\u0027s really the important part of the message in my point of view and that\u0027s also the reason why I like the term specification required because it packages in very few words that they do have to do somewhere so we want them to write it up so that would be since both essentially mean the same thing experience regret that\u0027s for me a reason to go for specification required because it sends a very clear signal you have to write it up and as as Paul pointed out in any case the it\u0027s picking it up as pop went out in any case when you do go to write version two you have a collection of extensions that you can bundle in or not as you as you want hey there\u0027s one minor thing that maybe is interesting to think about and if we do these bundling our C\u0027s of course we run into copyright issues with your journal specification so they don\u0027t think that 8126 things about this problem or has anything that would help with this problem so I mean I\u0027m not going to invent this for this page but in the long run I think it would be nice to actually be able to do these bundling overseas without having to go in to protect their copyright negotiations was the original spec office mm-hmm hi the same half of the things I wanted to say are now gone also just highlighting you have a bunch of clear vision of what is to be included in to that all and then and it is I think sometimes it will be of the same size to that already so there are some interesting problems we want to solve and also regarding specification required I think that I\u0027m not understand alternative of having the expert review and there\u0027s some code of conduct that there\u0027s basically requiring you know educate to have that I\u0027ll explain it so expert review says you have a person or a group of people assigned to earlier requests and they are given some sort of guidance document about what they should consider but know nothing other than a request for registration is required okay specification required adds to that the requirement that you have a publicly available stable specification okay that the reviewer that the reviewer and other people can see but you can have of course and this is basically obvious now but let me just make sure you can have a public available specification properly also from other stos and that\u0027s not a disabled for having that we suggest through I get a control registered of "
  },
  {
    "startTime": "00:30:13",
    "text": "course so correct experts just like that specification and think of saying animation required is actually a review yeah it\u0027s a public specification yeah but it can also be a plus pacifica specification if it\u0027s not required so it\u0027s not expose yeah you can always have we don\u0027t say I mean the expert has to like it yes the expert has to think it\u0027s sufficiently detailed to allow you to develop and interoperate I think that\u0027s enough incentive to do it without specific patient requires it says Chris Comcast the it\u0027s worth noting that people are going to extend it if we don\u0027t give them a registry to share and put their extensions in there ten what we have is a mess not you know so what we\u0027re really talking about it how do we organize the boxes and I hear a lot of support for everybody wants people to write specifications but it\u0027s worth noting that if we don\u0027t give them a easy way to contribute and share and whatnot they\u0027re just gonna extend it anyways and who knows what the result will be so I heard a couple of people against having this registry do you want to take more or you think you have no said everything a couple of people against in a couple of people for and slight preference for having the registry well let\u0027s just say did anyone who does not want to have a registry please say something can I ask a clarifying question Ryan carpenter cousin how much delayed you think this will inject into getting the document - okay thanks I know how to hum can I alter the question slightly who\u0027d be very upset if the registry is edit that\u0027s basically what I\u0027m saying so I\u0027m making you stronger as opposed to you know there would you died on that hill Sean would not die on ya please if you have more than a few words yes please stay alive Sean Leonard so I wouldn\u0027t be "
  },
  {
    "startTime": "00:33:16",
    "text": "very upset if a registry were added I just think that it imposes more trouble than it\u0027s worth at this stage of CD DL in particular I think that control operators if they are successful and people use them could be used for a lot of other things in the registry will impose a very narrow view of what control operators can be namely one operator applies to one variable or one element right of the protocol I still don\u0027t think it helps I guess right right now unless unless the registry is first-come first-serve if the prejudice first-come-first-serve then okay because then it\u0027s just a repository of what everybody else is doing but I don\u0027t think anybody wants first-come first-served you don\u0027t think it\u0027s useful to have somebody do a sanity check on the requests I think that will inhibit innovation in people doing stuff or they\u0027ll just do stuff anyway and not bother registering do that anyway so maybe my experience working with other sto says that they like to cite documents they like to cite documents from the IDF because they think these are high quality documents and and that improves their sending and once they cite them they also don\u0027t want to be caught not probably using them I\u0027m accepting ITU at sea and one interim here because they just start squatting on coop for court points but all the other SEO is I\u0027m working with generally try to actually keep the spirit of the documents they are cycling so if we say we expect people to apply specifications for that that has an effect it really changes what\u0027s going on indeed that other SDI I would like to see this isn\u0027t yeah just along the same lines Dave Walter Meyer I think I think having a registry it doesn\u0027t prevent folks from experimenting and and and you\u0027re playing around with the language but when there are two parties that want to do the same thing it gives them a way to agree on that and that adds value Alexei Melnikov the other comment I\u0027d like to make is that by picking one or more experts you can somewhat control the outcome of this I mean that might be a bit obvious but you can specify actually in a document what kind of restrictions or what kind of encouragement he will make to the experts but you can also select experts with potentially divergent views to help you know allow for wider types of "
  },
  {
    "startTime": "00:36:18",
    "text": "control operators for the UN your sentence was I right you can select that expert we cannot you cannot person one word well you can always you know chairs or the working group can always propose more than one that\u0027s what I\u0027m saying for example so his his comment was a spot on his Chris from Comcast again the when we have when people want to work together they need some way to have I mean that\u0027s the point of the specifications and the point of the registries is so that people aren\u0027t continuously reinventing it all of the arguments for designated expert that I\u0027ve heard and I say all okay most of the arguments for designated expert basically boil down to well designated experts will encourage good specs so I I\u0027m hearing a lot of support for specifications and I think I would support specifications and if there are people who think that we should do designated experts specifically so that we can have control operators that don\u0027t have specs I\u0027ll be really interested in hearing the argument well Paul\u0027s argument if I may save them the trouble of jumping up is that there may be registration requests that really don\u0027t need much of a specification and simplifying that what it would be helpful and the designated expert can always say sorry your request is complicated enough that I\u0027d like you to write up the specification right and to that I would I would respond that if it really is that simple than the specs should be pretty easy Mike Jones Microsoft there\u0027s a clear advantage of specification required in that the registration template includes the reference and therefore when you go to the registry anyone can find it that\u0027s why specification required is the right thing does anyone other than Paul feel that we should use expert review instead of specification of Paul Paul Paul is saying he\u0027s okay with either Jim I don\u0027t actually see a lot of point a specification of you I mean one of the reasons not to have a specification is I\u0027ve got something that is so esoteric to my back which is a company spec and not public that I want to write a control operator now does that make any sense for me to register it if it\u0027s just if it\u0027s really just this once back that did that right in control operator for of course I can also saying why am i "
  },
  {
    "startTime": "00:39:18",
    "text": "bothering to write a control operator but that\u0027s a different question I think that\u0027s a good point actually for the the text in DNA considerations section so some organization might want to write a control operator that uses some information that actually that is actually confidential and well the specification could be pretty short and say this uses confidential specification so and so and then we\u0027re done with it and the text could be explicit that this is something that we do want to allow in cases that make sense yeah I\u0027m Brian carpenter this could become controversial the ITF has a tendency not to like secret protocols declared interoperable so you know I would try to keep that out of your text no no that is a dangerous in memeber yeah I\u0027ll support that I think what generally happens in those cases is that they just used the name without registering it and and they don\u0027t worry about it too much right and that was what I was gonna suggest that there\u0027s there\u0027s no secret i na police that are going to come and kick your company down because you violated the spec and didn\u0027t tell anyone yeah Aleksei absolutely sane yeah III would advise against it but I suppose you know if you have expert at least expert has to have access to the spec to judge whether it\u0027s having you know allowing for secret specification references well-known references to secret specifications but again I\u0027m just comparing this with media types with media types a specification is encouraged is not required and sometimes people will say an expert a sort of almost bound by NDA by but expert has to look at be able to look at the specification to decide whether it\u0027s it\u0027s a good thing so yeah now that the difference is that you would normally don\u0027t write tools that need to understand all the media types that are out there oh yeah yes you did yeah and in many different yeah let\u0027s not yeah sorry yeah this is them okay where I see we are right now is put the registry into this spec it will take 20 minutes which means it will take an hour and a half but that\u0027s okay the factor of pi is already in there and make the registration policy specification required advise the give advice to the designated expert leaning toward leniency and accepting these and that\u0027s it right is there does anyone object to "
  },
  {
    "startTime": "00:42:19",
    "text": "that result can anyone not live with that result okay I see people reading their email good we all will put that in the mints whoever is taking minutes over there yep thank you okay so if you thought the previous Adam was boring I have another one for you it\u0027s of course a control operator and there are a number of control operators that were added pretty late in the process because we when doing real-world specifications we found we had a problem we couldn\u0027t say that something needed to be larger than three but on the other end so we added less than a greater equal greater than less and of course usually you add an equivalent not equal as well the more likely uses less than and greater than and these are defined for numeric types I\u0027m not aware of another type in CDL that really could make useful sense of this I mean we could define the string comparison for this but really nobody needs that so we also have regular expressions for most of the cases where that would be useful so I think it\u0027s very clear that the inequality is less than greater equal and so on that these stay confined to numeric types now I looked at my tool recently and one of the problems of writing tool in high level language is that you sometimes program things that you haven\u0027t thought about and turn out that equal and not equal actually do allow other data types so then we looked out there and in front oops people are using them with strings in particular they\u0027re not equal what the equal one doesn\u0027t really make a lot of sense but they\u0027re not the not equal one is actually useful application so there are actually two variants that you might want to use one is the numeric equality where you have a constant somewhere that happens to be a floating by constant and you still want to constrain some integer values to not take on that particular floating point concern so one two five and not equal 3.0 would be one two four five because not equal is defined on a numeric basis or you could say something like any number that is equal to 3 which is a short way of saying 3 or 3.0 so you "
  },
  {
    "startTime": "00:45:19",
    "text": "don\u0027t have to define a constant twice so I think these are reasonable reasonable applications both I haven\u0027t seen in the in the wire but I can imagine seeing them clarifying what you\u0027re proposing you\u0027re saying that if you use equal or not equal on things that look like numbers they compare as numbers not as strengths well look like is very very tightly defined yeah yes yeah so they\u0027re only integers and that can do that so that\u0027s one potential meaning and let me quickly say the other one the other one is factual equivalent and this would just use the same semantics we use in other places where we match Thanks so that that would allow things like any label except for food Jim and Jim shot I\u0027m having a bit of a problem with one because of the slide you had earlier where you distinguished integer types from floating point types as different types so now you are basically doing equality between different types yes I have a bit of a problem with that well the point we have Amadou you need the rest we have set the base language makes a strict distinction and this control operator is expressly defined not to make it so exactly is it\u0027s exactly the escape hatch you can use when you are unhappy with that the ability of the basic it\u0027s meant to be the other way high the same just saying Jimmy\u0027s is your issue that you\u0027re confused or is your issue that you understand it but don\u0027t like it my issue is I understand and I don\u0027t like it that\u0027s what I thought just checking thank and if you wanted to be more restricted then just use something more specifically the numbers I mean right float yeah it would work and then what just well there is very little definition in saying that in that eq3 because you could work three in the first place yeah yeah but again a good consumer but maybe I don\u0027t I don\u0027t understand my Jim does not like it but I thought that the generic nests of the expression here and this specific example was what you\u0027re not like why Jim doesn\u0027t like it is actually very simple he likes tight he likes languages which are strict on diet yeah well this is strict on times just has a different type system than the ones you\u0027re used to if I define number as "
  },
  {
    "startTime": "00:48:24",
    "text": "being a type which is the range 1.5 and I say number dot equal 3.0 then I\u0027m doing a type conversion no I\u0027m not go to the naik yeah I think I think at some level Jim we\u0027re saying that there are there are 3-3 types here there are integers there are floating points and there are numbers and numbers are both of the others yep so if you\u0027re wanting a way to say I am in a range of numbers between 1 and 5 you need a way to say that that doesn\u0027t look like integers but what you said was if I say 1.5 I\u0027m I would certainly interpret that as integers between in inclusive in the range so so are you asking if really once you say a range of numbers number can I say number dot EQ 3.0 yes yes oh so you\u0027re okay yeah I want to see text yeah I read it I mean this is discussing something for a napkin but I just wanted to open up the choices so we can at the end agree on something so imagine that this says something like we have a solution where we\u0027re any and Q the numeric operators and then of course the question is do we actually need this on the structural side of the general structure inside as well and we also have the default which is essentially dot and E but Ria\u0027s used for a lot of things that are not number so that\u0027s really calling out that we need to do something yeah what is the use case where you have something that\u0027s a number and you don\u0027t know whether it was at floating point or integer don\u0027t you always know the the question is when a specification has a composite construct for a number that does something we protocol types are actually not used to that we don\u0027t deal in numbers we deal in integers but Langley doesn\u0027t even have floating-point imagine that so it\u0027s a little bit unusual for us but if you have a composite construct that already has a useful abstraction in the rest of your specification and then you want to grab into this construct and "
  },
  {
    "startTime": "00:51:25",
    "text": "move one numeric value which may have two representations three and 3.0 that would be okay and I say and my caster is not it so how do we if we actually think we need both branches of this how do we name these branches now first of all the observation is that in years actually in use today so people are using it in specifications that I have seen Donny Q is very rarely used I mean almost always when when you want something to be equal to something you just write the second something so that I had to think a little before I came up with the example there so the the actual case where we have to worry about backward compatible compatibility is not any but of course he want these to be symmetric or we violate the principle of least surprise so what I actually have seen in specifications excuse the thing that looks like a period that that\u0027s just a bullet label dot an e true that\u0027s a very common construct and we probably want to allow something like that but we may have to for specification like writers to use a different control operator yeah so that that we try to avoid that but maybe here it is unavoidable so we want to keep an e for the numeric case you would come up with a new one for the structure case and maybe another reason for that is we already have got ang which is the EQ for the structural case the slightly more general Donoghue but we probably wanted to have the the dot and e variant the structural one with the same generality so we would define something like a Dodge but not you can find a better child but so that would probably be either the most symmetric way to solve this problem so is there anybody in this room who cares what y\u0027all come of this otherwise I could just write something the next version and see in the second group let\u0027s call whether that also okay and below yeah yep Jeff is on the yeah go ahead your suggestion to reserve any and EQ for numeric things makes sense to me I I don\u0027t have a lot of experience using them so I don\u0027t know if it\u0027ll like if it\u0027ll work in the real world but but "
  },
  {
    "startTime": "00:54:26",
    "text": "this this makes sense and then adding anyone maybe later type subtraction that also seems there seems safer to do one and we could extend it in CDL to say once more this is you were by restricting any and EQ to numeric types and possibly extending in two points here at CDL 2.0 for the rest I think yeah yeah do it restricting it in CD do one seems like a safe option and then we can extend it later if we need it I I wouldn\u0027t like to keep the people who using this right now in the dark so I would prefer to have a control operator that does this right in 1.0 this is my advantage I pointed at Labor dot and Eve phone yeah that seems okay to me also to do a subtraction operator yeah but don\u0027t be done and yeah it would be a new operator name that we come up with just for that right yes thank you I think set difference is sufficiently well understood that we do not have to write something very complicated okay so I I pretty much agree with with Jeffrey about the points that he made I think I just want to point out maybe a broader concern I have which is that as we said that EQ is there mostly for symmetry but the actual utility of it is very dubious in specification writing at this point and I think that that raises the question of you know maybe we\u0027re trying to define too much or trying to do too much with control operators in general when they just don\u0027t have a utility I don\u0027t want to pick on dot-ne because it does seem people are actually using it quite a bit but there are a number of I mean at least you know for dot EQ I wonder why do we even put it in there for not sure when it seems like nobody\u0027s actually using it and similar arguments could be made with a couple of the other control operators do you want me to answer that question well I see is there for symmetry but there is no language on earth that has the five other operators and not the six that just doesn\u0027t exist and so this would be a very big a violation of principle of least surprise okay and more generally when designing protocols I always have been bitch when I started to make policy level judgement level decisions is this particularly useful or not people will find users that you have no idea they exist okay and as long as it\u0027s a simple it does "
  },
  {
    "startTime": "00:57:27",
    "text": "here in this case I think having a symmetry is part okay symmetry is always a good argument okay thank you okay given that we have covered this a recent item of discussion on on the mailing list was something that I called representation variance but I think that was carelessly chosen term because it actually means two different things so when you represent something you you take it down one level on the hierarchy of different modeling mechanisms that we have so you represent an information model in a data model represented at your model in the serialization and so on so I think a better term would be serialization variance because that\u0027s really the issue that we were having and I think on the mailing list we discussed about serialization variants in protocol definitions and implementations which are really two two separate issues that just have to work together and a good way so probably we need to be a little bit more specific about serialization variance and we actually want in one place where we talk about consistent encoding the part that used to be called allow to say this verb canonicalization okay and now I need mouthwash so the idea behind consistent encoding is you don\u0027t have serialization variance so for every data model item there\u0027s exactly one way to encode it and this is what the chunk consistent and coning really tries to express and it turns out in a language like a sieve our consistent encoding is expensive because we inherited maps from JSON so we don\u0027t want to impose consistent encoding on everything which otherwise would be exactly what I would normally do in a protocol specification I like consistent and correct don\u0027t like several variants all of which I have to interpret really to test at the end now there are other places where there are series Asian variants and the current document doesn\u0027t quite go so far and say there is a preferred encoding for this case but it it kind of is written with the subtext that there is and maybe we should make this a little bit more explicit and say that\u0027s just the way you\u0027re supposed to encode things and yes if you have an implementation "
  },
  {
    "startTime": "01:00:27",
    "text": "constraint that doesn\u0027t allow you to do that then we will have to deal with that so it\u0027s a little bit little piece of posterior principle here be deliberate what you accept be conservative in what you send and the preferred encoding will essentially be the conservative part and but we would not stop it saying be liberal in what you accept so we would continue to accept the other variants which is fine as us different from utf-8 nucleation was made to not accept them because people found out only after years of using utf-8 that they could be used for fun interesting attacks but this is something that has been around with the variants nicely exposed so somebody who builds this hugely protocol based on this should know that there are theories Asian variants so let\u0027s get a little bit up the stack again and see what what are the actual series Asian choices that are relevant in practice and not just talking about implementation is talking about specifications so the specification for instance might say there are no floating-point numbers in this specification and normally you don\u0027t have to write that because your data model specification already contains no floating-point numbers so you actually don\u0027t have to make this serialization choice and once you say there are no floating-point number of civilizations you cannot have a data model that allows that because you wouldn\u0027t know how to serialize them so that\u0027s that\u0027s a choice that can be handled entirely on the datum level so we actually can express this in CDL not explicitly but by just using for it now one other thing that actually makes a lot of sense in some embedded violence is to say we disallow sixty four-bit for any point numbers because we only have software floating-point and the software protocol and library use only supports 32-bit so in this case you actually make a serialization choice if your data model only uses numbers that can be represented as 32-bit integers and you use preferred encoding then again you can express this at the data modeler so again you don\u0027t need something in CDL to express the serialization choice because CDL is about the data model anyway you can do this by by just saying which numbers you use support that example disallowing 64-bit integer string lengths item counts and tags that\u0027s also "
  },
  {
    "startTime": "01:03:27",
    "text": "a pretty obvious thing you might want to do in an embedded system so that\u0027s also something that you would get probably you want to write something in your specification here because there is it would be very tedious to say for every byte string in your c d---eight specification this cannot be longer than to it with the power of 32 bytes so it\u0027s better to just handle this outside of the in separate sentence now I seem to have picked the interest of you Mike Jones Microsoft the fighter 2 C tab specification which uses C bar for its data representation addresses a number of cases where data in particular for extensions has to be transformed from jason to see more and in the other direction as well from seaboard to Jason because Jason represents all numbers of 64 bit floats that specification minimal scrupulously treason yes sorry excuse me javascript represents all numbers 64-bit floats that specification made the choice that when converting JavaScript values to Seaborn we would always use the 64-bit floods so any thing that disallows the use of the 64-bit floats at least in certain contexts seems to at least make life with javascript compatibility more different than the more difficult than it needs to be Dave Walton I guess speaking is suit chair we\u0027ve been in suit we\u0027ve been working with savour and you know we\u0027re running into problems around there not being enough constraint implementations of of C bore which is really got me thinking about you know the tooling problem in general and this in this space I guess taking my chair hat off I think we want to make decisions around serialization that lead to more tooling and it seems like the more fragmentation that we get in serialization the more fragmentation that we\u0027re going to get around tooling and that just seems like a really bad idea we should probably focus our efforts on on allowing choices that can be included in C GDL directly you know like disallowing floating-point numbers and avoiding as much as we can the kinds of choices that would be bound to the specific serialization format just "
  },
  {
    "startTime": "01:06:28",
    "text": "because again that\u0027s just gonna complicate tooling you know it\u0027s gonna mean you\u0027re gonna have to do a lot of special case handling and that just seems like a really bad idea from you know from a tooling and interoperability perspectives hi this is Hank and this is especially only about civilization not encoding translations well yeah I\u0027m talking about only civilization see well compassion oh okay because I\u0027m calling this encoding civilization isn\u0027t see were specific okay so um talk about a seaboard I think there\u0027s a benefit to disallowing it in a document in the data definition document because in general because first of all it would be noisy to do all the other controls that would disallow each value and again if you have extension points you can still mess it up with your extension so this would inherit into extensions and that\u0027s important for the constraint device not to be I don\u0027t know backstep bias to for the extension and that\u0027s important I think okay so careful what you wish for adding serialization control language to CDL probably add some time to datos okay CDI is the point okay so Lawrence lund late you know on the in constrained the highly constrained environments and the tooling is some comments there I would imagine like 95% of all implementations are going to be fine with 64-bit ants and floating-point and they can use the preferred in serialization variant if I\u0027m using the right term there that seems reasonable to me and that you know a lot of and we can have a lot of good tooling around that and that\u0027s fine but I think we still have to have the option for I really would like to see us be able to you know have good interoperable protocols that run on like 8-bit CPUs that just have no floating-point and you know you know less than a kilobyte of on-board RAM or something like that so those are those to me like seem like special case tooling and it\u0027s it\u0027s only a small market it\u0027s only a small part but and maybe we can construct the document so it\u0027s really clear like okay you\u0027re in the mainstream part where we got nice good tooling and then there\u0027s some cases where you really do need to be used special tools lawrence lund blade okay so what I was trying to say is we kind of have "
  },
  {
    "startTime": "01:09:34",
    "text": "everything 95% of the applications need I agree with what I think somebody said you can still mess up in some control operators or so that\u0027s maybe a problem but for 95% of all situations we have what we need if we make it explicit that a specification of a format might contract contain additional English language that contain constraints the series ation I still think that having a preferred encoding is a good way to reduce the number of variants that actually sprout from that so I know that there are some high speed applications for instance they always want to send all floating-point numbers as 64 bits so that\u0027s a very specific serialization constraint that that\u0027s not compatible with another series that you constraint which says don\u0027t use 64 bit so we are not going to solve that that problem there are these implementations bold it operates but we can make it easy for the default choice or for the default case to actually interoperate and that\u0027s why I think we could should stick with what we have at the city level for now maybe add something like a series 18 control language later and on the seawall side put in something that\u0027s called preferred encoding almost all of them is in canonical encoding or strict encoding at the moment so preferred encoding probably would be a very short section by just saying do everything you would do for distance according except that for maps you don\u0027t have to and then we would be done with it now I wasn\u0027t quite done with with this slide here he has one more civilization choice that the first draft of SIBO didn\u0027t have but people said they needed and I agree that it\u0027s useful in definite lengths and there are some very constrained different mutations that don\u0027t do indefinite length so that that\u0027s another civilization constraint that you would write in English right now and maybe we would later be able to express in a series action control language so what I actually see more often is that people do support in different lengths for arrays and maps but not for Strings because that that\u0027s a little bit more work to do okay yeah so what I essentially wanted to say is series invariants are invisible at the city level originally we had thought city "
  },
  {
    "startTime": "01:12:37",
    "text": "would have all its fingers in the serialization level but it turned out people weren\u0027t using that so we kind of cut back on that and said okay let\u0027s use City therefore the data model level and if we want to do something of this serialization level we do that separately so there are no series agents and city earth left at this point in time okay if we are done with this then I would like to come back to to Jim\u0027s comments because we didn\u0027t tell them so I think some of the editorial stuff we already have done and just didn\u0027t take off one editorial comment was there what could be a much better section numbering unfortunately there are 30 internet drafts out there that reference specific sections of this draft it would be really yeah burden on them to change that and and people not only don\u0027t like changing that they get it wrong or the child so changing section numbers is something I I don\u0027t normally don\u0027t do lightly for something that it already has been referenced in a lot of places so I think that might be a good thing for CDA 2.0 but not much for issue 9 changing section numbers I\u0027d be a surprise of a whole lot of people were referencing that because what I said was I\u0027d like suck Appendix II Section 1 to be basically moved up a level and that\u0027s the only one that I\u0027ve listed oh okay I read a more general comment out of it but if it\u0027s just about a 1 we moved up a level like being its own appendix make it okay we have we actually have a number of appendix numbers that aren\u0027t used because he wanted to keep appendages at the place where there were so there will be a little bit of reshuffling but I think we can do it thank you very good there were several pretty good comments about the ability to write a nonsensical City idea and probably it would be good to have tools that find these things the tool that that I wrote as a proof of concept doesn\u0027t do any of this so it doesn\u0027t "
  },
  {
    "startTime": "01:15:37",
    "text": "help it produces no warnings and so on for me this is mostly to equality issues we should write better truths and I finally need to find a student who writes a letter true and then mine there may be at some point a language issue coming from that because if will start to be helpful you need a way to silence warnings so that may come back to us but probably again not at TDR 1.0 helpful is about the word that Douglas Adams has another term Belgium everywhere outside of Belgium is the worst inside here which you can utter and so helpful is something that people on this read would would have positive connotations but when an implementation of protocols that\u0027s become head for you have to run because it\u0027s going to hurt you and and yeah so that\u0027s why you have to have ways of getting rid of that health and silencing these warnings so at some point we will need some pragmatics okay so I think that\u0027s not actionable at this point in time or we shouldn\u0027t action it at this point in time but of course we should keep in mind that there is some work to be done yeah Jim saw that the unwrapped grammar is broken and not only is the the unwrapped grammar broken but also the precedence table is broken for unary operators so that has to be fixed yes sorry for for missing that and also there was a omission in the section about generics generics apply to groups as well as types that\u0027s actually very very useful [Music] okay so that James comes if there\u0027s anything else I still need to do please speak at some point but when there isn\u0027t it just right yeah so at some point I will alert you and say I think I have covered all your comments and then you can tell me I didn\u0027t good so that ends the open issues there are a number of closed issues that I just want to recap so they don\u0027t necessarily come up in the working the second group all again we know that there is no good answer to the "
  },
  {
    "startTime": "01:18:37",
    "text": "reg reg X issue the XS d-u reg X that we currently are using are definitely weird but they seem to work with the specifications that I have seen at the end of wire so we the change from PCIe to w3c x SD probably has the lowest amount of damage at this point in time to people out there and we can quickly solve it later on by just registering specifications especially education requirement document is not going through down roof checks so it will be easy to define another operator that does it for this yet so that\u0027s similar we also decided to be very conservative with adding this cut stuff and one comment was that we are creating security problems from protocols that use this style of distinguishing different types of data objects so cuts don\u0027t help you your cuts help you win when you have a distinguished key but not when you have a distinguished value and we sure will fix this in the next version of CD and that\u0027s the reasons why things that we want to have 2.0 but we wanted to minimize the impact of cuts at this point in time there\u0027s also a general cognitive dissonance at least if you know a little bit of computer languages we have this weird combination of a grammar that is fundamentally context insensitive okay control operators change this a little bit but fundamentally this is your Chomsky Type 2 engine that but then the grammar I create something that then has to go through the funnel of the civilization mechanism that we are using and maps are definitely extremely context sensitive because you cannot have a duplicate key you have to look at your context to find out whether you can produce something or not unfortunately there is no way around that and I\u0027m surprised by how well this works by having context insensitive foundation and then funneling the results through the context-sensitive Maps and now we are introducing cuts which put in a sequence dependence that funnels through through the map specifications doesn\u0027t make the sequence in the match relevant but it makes the sequence in the "
  },
  {
    "startTime": "01:21:38",
    "text": "specification relevant so that is something that is a little bit against the principle of least surprise normally when you specify a map you would expect that that all the lines in the Maps application can be exchanged and no there are no semantic changes but that doesn\u0027t allow you to have wildcards and since wildcards are pretty important for extensibility it does make sense to use the fact that the grammar already is sequence dependent by definition and used there to manage these five cuts so it\u0027s a bit weird and it\u0027s a little bit like steak with chocolate sauce or something but I think we can get used to the taste and it seems to work but I can say you that it does cause a little bit of concern when you when you think about it for the first time because it\u0027s concepts that normally don\u0027t mix so what Carson just went over is not new information it sees summarizing where we were in discussions if as francesca posted in the jabber room if anyone can\u0027t live with where we are please speak up now or on the list nothing now so so ship it so my plan is to have a dish or fall out there on Monday the 30th so we still have a little bit time to hash out any open details on the menus the next week and yeah if we stop the second dragonglass called in then I\u0027m sorry for the French people because they won\u0027t see it yeah they have one day they can look at it on the 31st and yeah then of course the next question is if the vertebras call finishes August 15 is that anything vis G Lexie first can can handle or is it really not necessary to to speed up as much if this document lands on your desk on August 15 what will happen next well next to lac salé overview it yes I know maybe it\u0027ll go back and forth and then it goes to last call which is two weeks and then it goes to the iesg tell a chat yeah last time I made this kind of regulation and then if you went on vacation Aleksei are you planning to disappear for a while he shakes his head he shakes his head in in non-committal way Bob because I\u0027m "
  },
  {
    "startTime": "01:24:40",
    "text": "figuring say six to eight weeks for it to go through is just one I am planning to take away caught between 18th and country it\u0027s going to be a big deal so yeah I would say if we if we actually do get this to Aleksei by the end of August then we would say by the end of October we would have it through iesg evaluation I think the important step is to have it approved I know that there\u0027s going that there is a cluster bomb head hitting the ROC editor Anthony next couple of weeks so that might be a bit unresponsive at the end of the year so it might have an RFC next we like to talk about Christmas gifts we\u0027ll hope for that good just recalling some past experience don\u0027t ask urgent publication of a document the first we have no intention of December because it\u0027s not going to be published by January 1st yes there is typically no way January 5th we have no enlargement of the requesting expedition okay I think that finishes the CDDA part I have a couple of slides maybe just to pick your your interest a little bit on what may be next and that there are two areas in which we could work on GDL if the isg lets us and one is just making the language better solving the same problem and the other would be adding scope to it and allow it to solve more problems so in the first group we have things like specifications in the LA so people are actually starting to compose pretty complicated stuff out of City debt so you have a the specification of cozy here and then you have a specification that uses coffee how do you use something that that already provides some structure but you mix in your own structure I think we have to examine this a little bit so when I look at the suit spec I found the first place in the IDF where it would be good to have this composition I think it can be handled with 1.0 but we may find things we we want to fix but there are also things like module systems naming if you merge two specifications together somebody might have used the real name foo and in both places and then you have a program at the model and the other thing is controlled adding controls and pretty sure we will have quite a few "
  },
  {
    "startTime": "01:27:40",
    "text": "controls but yeah I think we understand how to do this now the the other group of work might be case insensitive whatever I mentally I think I was trying to set context insensitive the other thing is going beyond structure or interpret II into the lens of semantic interoperability and yeah so we could look at semantic augmentation so most schema languages CTL is not a schema language most schema languages have a way to actually add semantics to something so you can say this is not only in number but this is in heaven or in microkelvin or whatever and this is the calibration data for this information can be found there and there are lots of semantics that that could be added here and once you are able to to argument a specification by semantics it\u0027s also much simpler are much more powerful to do cogeneration from it so right now I\u0027m still discouraging people to do cogeneration from Cydia although there\u0027s one pretty interesting idea for the embedded space so doing cogeneration from CBL right into a parser that has essentially code for every single element that\u0027s pretty interesting but the general idea like people are doing their their Java from from WSDL or something like that that doesn\u0027t work too well with this idea second saying those co-occurrence constraints and more general predicate based extensions so these usually mix nicely to grammar based foundation and we already have an example with schema Tron and relax ng where this has work pretty well so maybe we want to do something similar but we don\u0027t have to redo schema track so the actual solution could be relatively simple by defining a few selectors and ways to add some some semantics to that Dave wall tracker I mean if we already have schema Tron one way and I see you have a bullet maybe against this but one way of handling this is to do some binding of XPath - you know JSON or C bore and then you know using using something like schema Tron would be sort of a natural outcome of doing that I wouldn\u0027t require anything additional and C D DL so I "
  },
  {
    "startTime": "01:30:41",
    "text": "wrote the word C both paths there and one difference between zero path and XPath might be that that we don\u0027t run into the problem that XPath has that you essentially cannot compile it because it kind of has very tight coupling between the characters that are in the XPath and the characters that are so you can write pathological expose statements that cannot be compared remember we can do something that\u0027s a little bit simpler yet maybe only has 80% of the functionality but actually can\u0027t yeah I was thinking maybe some constrained version of XPath that would they use a subset of features or but don\u0027t don\u0027t say XPath outside this room because it would scare people a lot sure sure and I would be interested in helping with this graters yeah this is Hank from my experience speaking from personal experience there are flavors of the scope XPath is used in so typically you\u0027d never use everything XPath is capable of and finding right flavor that is basically a subset of extra functional capabilities for a sea bore path I think that could be an ongoing process this is not a project and maybe from lesson learned we can make multiple path versions some of them more applicable to a vendor devices and some of them may be more at ease to that well really powerful so because there can be a kind of well anti constraint note environment behavior that filter stuff and finding and finding stuff and so we really must suddenly wonder why didn\u0027t want to give people good and this explicit guidance what to use when and where I think Dave water Meyer so I mean I already have a use case for something like this in the a of a draft that\u0027s in in sockem having some pathing language before we try to create multiple pathing languages we should maybe first attempt to try to create one or have user stories so one one interesting question I wrote this there is something like a JSON path the Jason point they are different things because one really is meant to be used in a specification like environment and one is really pointing into an instance so you actually can bind it more closely to what\u0027s in the instance right now and maybe we actually want to "
  },
  {
    "startTime": "01:33:43",
    "text": "do these two yeah I want to understand that these cases a little bit better maybe would be useful to write some drafts talking about some of these like you\u0027re suggesting she was doing it really well sorry this is hanging again shoot is doing really well in the information model the aggregate user storage to write requirements from it and then have a list of measures and things and attributes that address them it\u0027s like awesome maybe we should do that I think the is she doesn\u0027t like to give it but we have only one is remember here so so I I would advocate actually for something simpler maybe just writing a paragraph or two describing you know what we might accomplish with a path versus a pointer so I just might just look at our C 6901 or 69 or 2 which is the JSON pointer and obviously a co-op pointer has to be a bit more complicated because we just have different more more capabilities in the data model but that may be all we need for for those applications that need pointers yeah I mean I know my use case is I need to be able to select a specific data point out of a C bar you know data set and then do some kind of comparison against against that and so what I need a pathing language is the ability to extract that information and support that kind of comparison differently I hate to interrupt useful conversation but this is not for this document so we are we are running way late okay let\u0027s take that to another decision sorry about that but we we are supposed to have 30 minutes for this and we only have 25 minutes total left so can you do this in about 15 and so we can do some wrap-up stuff okay thanks okay so the the other document that we want to do here is the RFC 1749 this and just to remind people so this was not meant to reinvent the language and re-examine all the decisions and do a second system syndrome but really mostly to document interoperability or issues make needed improvements in specification quality and throw out things where it turns out maybe those weren\u0027t such a good idea and yeah so for instance we already have discussed the text about canonicalization or consistent encoding and decided to or found that out and of course this is "
  },
  {
    "startTime": "01:36:44",
    "text": "also a good time to do insurability checks between implementations and there is an hour of c64 10 I already have this slide number 64 in there that defines how to do this so this is the process document that guides us here I still haven\u0027t heard about any patent claim that would apply to 170 49 which is mostly because we are using technologies 170 but actually I found the first RFC that uses BNF is our C 5 so if you ever need to explain why we are using PMF in the ITF it\u0027s our XE 5 the number of implementations are still growing of course some of these implementations are now complete hurt projects to be friendly or abandoned projects so we may want to clean this up at some point but that\u0027s not something like this where does but there is a body of code out there that implements this soul even if you have to write your own code there enough places to look at where you can steer from and there are even things in Haskell and rust and yeah so this has been there is no urgency perceived on 1749 but of course you want to get it done before this burger business closed but by an impatient ad and what happened here in this case particularly was that I got sick after the last ITF and when I got sufficiently recovered there were so many other things pulling on me that happened so we are kind of pretty much where we were when we left London so we we already discussed maybe the most important civil issues around theorization invariants consistent or preferred encoding and yeah there is some discussion on that still happening on the mailing list I think we need to complete that discussion there are some age github issues at the moment I think most of them are won\u0027t fixes but we have to do the write ups for those one fixes and there are a few things in the ITF 101 minutes that are still on the to-do list so for instance one issue that was raised was that the reg eggs tank we are not talking about the reg axis in insidious we are talking about the the ability in a SIBO instance to say this character string is to be interpreted as reg X this tank is not very specific it "
  },
  {
    "startTime": "01:39:47",
    "text": "actually says this is either in PCIe or in ACMA 262 in JavaScript syntax so there is only a limited usefulness of the information this text this tech provides so there was a proposal to add a tag specifically for the ACMA script across scripts and checks and actually maybe for the current one and not for the 1999 other one so yeah we could do that but this is not really an interval issue that needs to be fixed we can just go ahead and define those tags if we need them in an application but it\u0027s not something that that actually requires handling it as an issue on this document at least that\u0027s my point of view we have a little bit of editorial work to do we now have a defined data model and we haven\u0027t really touched all the places in the document that would benefit from that and we actually have taken in some new text recently that makes less use of it then and it could so I think pull request number 11 needs some some tender loving care there\u0027s also a related discussion about the processing behavior on in village input so many other series 8 informants have elaborate rules about handling invalid input and of course the the textbook example years HTML where a browser derives some some market benefit from being able to handle even the most broken HTML and that\u0027s not something we want to prescribe in this specification so on the other hand we are also very careful in imposing validity checks on a decoder so unless the decoder advertises that it implements strict mode it doesn\u0027t really have to look to precisely into what it gets so that that gives you a little bit of ambiguity and this actually gives you some some interesting security implications so if you actually need security in a certain place because you are taking in unchecked stuff then you probably want to go into a strict mode so what\u0027s evil for instance also doesn\u0027t require a decoder to do is to handle well-formed but invalid input so if somebody sends you a tag one with a text string in it that\u0027s Bellefonte but we haven\u0027t defined what it means and and Dakota is not required to hand this to an application and and say oh I gotta take one with a text ring in it so that those are things "
  },
  {
    "startTime": "01:42:49",
    "text": "that we are careful not to require a decoder to do and maybe we have to document this a little bit more also people that don\u0027t don\u0027t make too many suggestions on how short handles all right yeah I would think would be all all implementations should be safe against hostile input you shouldn\u0027t have to go into strict mode just to be safe I mean everybody needs to be safe all the time always right so so strict mode should not be a requirement for security right well it will be there are different kinds of security so in the C language in the definition of the C language they have a specific term called undefined behavior which means if the coder writes this code the compiler is free to make a memory coffee or to explode or whatever that of course is not the undefined behavior that we are talking about so of course it has to say in its box but it doesn\u0027t mean it has to produce a consistent result that there is always the same thing it just has to say it doesn\u0027t work so what\u0027s the relationship between strict mode and security if you have information that will be checked or used in multiple place and you don\u0027t want to get into a time of check time of your situation then you need consistent handling even of errors the easiest way to get that is to you\u0027re strict but not the only way no okay all right that\u0027s okay okay Jeffrey so my my goal 17 was was not really to require all or decoders to handle invalid input in the same way it was to kind of classify invalid input so that we could say precisely in independent specs how that dependence that handles it so one one place that I did require everyone to reject input was what I called fatally ill formed which is things like what additional information of 30 which there\u0027s just no way to recover and and if you if you think that we should allow allow implementations to recover from that I don\u0027t think it\u0027s terrible to turn fatally informed into it just deformed but I do think it\u0027s worth saying like this situation is ill formed or this situation is well formed but invalid so that specifications that "
  },
  {
    "startTime": "01:45:49",
    "text": "that you see border can in turn require things of their own implementations are you aware of place where you would say something is informed but not fatally beautiful yeah looking through the hatch use this so one place is in simple data if this second byte is between 0 \u0026 31 its ill-formed but not fatal because you can easily just skip that additional byte you can turn the simple item into undefined but that was actually a place where we took the utf-8 stand and said don\u0027t do that as a decoder poster checkers do that mean well it\u0027s useful you would classify that as fatal yeah so if there is ever as the SIBO 2.0 which I hope isn\u0027t this could get a computing you mean because it has been illegal right so so if you want to constrain all implementations to simply bail out and not not continue parsing in that case that\u0027s also fine with me like making new things fatally ill-formed is is totally within the spirit of pull request 17 I just want out of some definition of some classification of like the kinds of mistakes encoders could make and what decoders are allowed to do in response right so for me the two classes of affront and fail uniformed are identical and if the text currently is insufficient and making that year we need to fix it do you have other examples beyond simple C so basically scanning my my PR maybe you can put this on the mailing list but I think the objective short beach will not have if home stuff that is then still hand it with the application but the rules for things being uniform should be simple enough that it never happens to that that is working permutation generator I think I think another example is an app with duplicate keys which is more difficult to identify but that is not a fault that is invalid okay then again like review 17 and and let\u0027s let\u0027s get it into a state where it clearly says what what you intend okay great thank you good that was a really useful clarification of the input and I\u0027m at the end of the excellent so we have C D DL will your next revision "
  },
  {
    "startTime": "01:48:50",
    "text": "will come out by the 31st okay sorry the 30th because we need that one day for the French office the what do you think the schedule for an update to see bore to see Morris Beck so the mine stone is October right we\u0027re gonna need some revisions so what is your plan but that of course depends a lot on what other interesting input comes in but given what we know now we have a little bit of surgery to do on the documents but that should be doable within a month so starting from the 31st I think August August or okay and and I see a thumbs up from Paul good from Jessica and I had talked earlier about having conference calls regular conference calls to keep the progress of the working group moving forward what I\u0027m inclined to do we according to the rules we need two weeks notice to schedule a conference call and from there we can schedule multiple ones so we don\u0027t have to have two weeks each time and what I thought we might do is give it three weeks from now which gives us some time to get the Secretariat to make the first announcement so sometimes the week of the 6th of August to have the first conference call and at that point we should that should be about a week after the CD DL spec comes out and we\u0027re in the middle of working group last call so we can just check on our progress and that we\u0027ve made that and we\u0027re all we\u0027re going fine my inclination is to go ahead and schedule conference calls every two weeks from that point and if we decide that we don\u0027t need the conference call then we can cancel it but we have the regular schedule going on point sorry oh oh I would schedule them for a couple of maybe maybe three months going through the end of October - that\u0027s yeah August September October going through the end of October by which point we expect to have the seahorse back finished for the notes when were you gonna have the first meeting again now we will sort it out on the mailing list specifically but it will be the week of August 6th thanks that\u0027s what I\u0027m playing Jim once you get to the middle of September timing is going to be very important for me it\u0027s we understand not everybody is gonna be able to make all of them but you know if we try to set them up on a regular basis we figure most people will make most of them and the deal here is it\u0027s it\u0027s not going to be critical that "
  },
  {
    "startTime": "01:51:52",
    "text": "everybody make every one it\u0027s going to be checkpoints every couple of weeks on where we\u0027re going what the issues are and what the next deadline is and I see Paul nodding and Carsten nodding and so okay I I will set that up with the Secretariat to make that announcement we have a WebEx working group WebEx that we will use for that yeah no but actually we don\u0027t we only need my mock my okay on Francesca\u0027s actually or Francesca\u0027s one or the other we need your okay for a face-to-face meeting but we\u0027re not going to do that and so do you have anything else Francesca okay we rushed Carsten for no reason we are done eight minutes early so yes go ahead and do the tag definition since we have the time in the document see what was meant to be batteries included and we deliberately decided to have a number of things that are not part of the basic machinery but we pushed into tags because we knew people were going to need it but we didn\u0027t want to make the basic notion any more complicated than needed so at one point in the development had floating-point as a tag so I think I fixed that one so yeah there are various things and these things are often a little bit in a prototype stage so for instance the my message that we originally defined was defined to be a text string which is not very bright and then somebody just registered another my message that is binary but in general I think the the basic tanks work out pretty well we will have to fix one of the tag definitions in the SIBO document with respect to padding we discussed this to IETF Sagawa I think I\u0027m not sure that this text is actually in there my to-do list but more importantly it\u0027s very easy to register your own see what he\u0027ll use there\u0027s even a space that is first-come first-served and we have about a little bit more than the same number of tags that are registered for instance Kosir editors register some CWU IDs sets binary mine as I mentioned some pearls have hot their language takes strings and at some corporation support so maybe it\u0027s worth when we are through "
  },
  {
    "startTime": "01:54:54",
    "text": "this thick with the two main documents to examine that landscape a little bit and for Bangkok to have collected something like my favorite egg document that contains all those tags that are not in 1749 but are generally considered useful I mean where they we already have RFC\u0027s we are of course only going to point to them but there are other specs that are generally useful like the binary mime tag and of course people can go to the IANA registry and then follow the link and so on but then they will run into specifications that look very different have very different levels of details and just collecting this stuff in a slightly more consistent form might be useful information the document and of course the target date is October which we won\u0027t make because there\u0027s the fifth anniversary of the RFC Dave waltemeyer why not use a wiki for this because wiki is this thing that never gets finalized and the point here would be to say these are some arrived tags that are stable and that you can use and it just gives a different message we can start with a really definitely yeah yeah that\u0027s the right way to stop this Park and so the question is what is the value of this and much of the value is discoverability by people who are coming in to see Bohr and think oh I need a new tag oh my god and they haven\u0027t bothered to read the Ayana considerations in the base spec so they don\u0027t know about it I\u0027m not convinced we need it I don\u0027t think it would hurt I don\u0027t I\u0027m not aware of any other ITF working group that has had this kind of easy extensibility where this has been done a data point is in DNS we\u0027ve had DNS extensions for well over 10 years and there\u0027s half a dozen like real ones defined and because there\u0027s no such document and people just due to the way that the Ayane registry is it\u0027s sort of hard to find the registry people do reinvent the same extension over and over and so this might help on it I like like even though I\u0027m skeptical of the value of this I also don\u0027t think it\u0027s gonna take a heck of a lot of work for us so it doesn\u0027t have to have a lot of value and I I really do believe that some people will be pleased to read it as in wow this is "
  },
  {
    "startTime": "01:57:54",
    "text": "sort of cool that\u0027s a good thing to have people read when they\u0027re coming in to Seaborg know and this is very supporting that last bit pop for instance has a set of extensions that basically every pop server and client that\u0027s any good has to support and having those collected in one place and saying these are really useful extensions please implement them is is useful yeah Laurance seems like protocol extensions for poppin DNS are things that are rarely done required writing a lot of code and we\u0027re see where we expect people to express all kinds of protocols in it so this is something it would be much more common thing for people that use extensions here so I would be in favor of this reason yeah so one way what would be to do this as a virtual document another way would be to do this as an individual submission so it can be opinionated first personally I\u0027d prefer to see it be a working group okay yeah Aleksei says he\u0027d have a hard time maybe sponsoring it and or even to its ocean re-arose there\u0027s an active working group that might be interested in an ad sponsoring it is kind of a weird thing Dave Walton we\u0027re back on the wiki topic though I mean how how frequently do we see updating this information is it mean do we do we need a formal process in order to update an informal set of information if our goal is really just you know availability of information maybe we do it as a webpage and then sprinkle references to that all over in various places where people commonly seek sea bore information is that enough Paul Hawken we don\u0027t know if it\u0027s enough and so and we do know people fall into RFC you know come to RFC\u0027s and so on that level I think that that would be good it doesn\u0027t need to be up - it doesn\u0027t need to be published right if if the working group does know like we don\u0027t want to publish this document it\u0027s not a big loss but it is a loss so and by the way I\u0027m very much against wikis if I whenever I come across a wiki page that hasn\u0027t been updated in 3 years I feel like I don\u0027t know whether any of the information on this is still good stuff like that an RFC says a bunch of people looked at it I\u0027ll put another one out there is that if we really think this is a relatively informal relatively frequency frequently changing thing it can remain a working group draft that becomes listed on the working group page as an ongoing draft and we never have to "
  },
  {
    "startTime": "02:00:54",
    "text": "publish it I hope this working group closes down well yeah and then those are harder to find it again RFC\u0027s are the easiest thing to find old drafts are next easier yes in the rock group we actually had a document that was kind of roadmap to frequent pitfalls and actual bugs and so on and we kept that alive for 5 years and we published it yeah yeah I fit if it\u0027s my favorite tags or a bunch of interesting tags there before we don\u0027t have to list every one that\u0027s in the current or anything I think it\u0027s fine I mean it\u0027s the ITF but it could be light-hearted and there are reportedly cookies outside as we speak so our time is up Francesca has something to say thank you for the meeting and see you it\u0027s the Working Day we\u0027ll discuss that at the first conference thank you so what would you think about Wednesday the 8th probably around 11:00 11:00 a.m. Eastern on earth means a.m. 6:00 p.m. this necklace would bring up this "
  }
]