[
  {
    "startTime": "00:02:28",
    "text": "welcome Thomas can you hear us okay yes now I can hear you can can you hear me clear yeah oh okay good yep we can hear you fine thank you let's let's kill the Broadband today everybody go on video hey again there's a Microsoft teams link ing yes so my calendar um when I set these all up defaulted all of my meetings to teams meetings and I hadn't realized so um yeah [Music] so if we give it a couple more minutes see if we get any more attendees join us um and then we can move on"
  },
  {
    "startTime": "00:04:16",
    "text": "but um we've given it till nearly five past so I'll kick off we have two items on the agenda today um it's much more of a workshop um type session today which is what I think we're all trying to get towards So today we're going to be looking at the um draft that Thomas has requested as we have a quick review of and then we'll move into the error message workshop um ahead of our next ietf formal meeting so um Thomas I'll give you the floor okay should I okay should I should I share my browser or will you guys just scroll down the um what is it the um I think if it I think just to make sure everyone's got the same copy and is looking at the same section if we could have one controlled view with it on the screen might be useful okay I'm happy to drive if you're struggling but um okay so presentation View yeah and what am I presenting have you got the document open oh it's in a it's in a browse can you guys see that no uh you're not sharing anything at the moment um so actually it's easier if if people just open up the SAT core 01 the one I uploaded yesterday or the day before right there's no uh-huh let me just share there we go so we"
  },
  {
    "startTime": "00:06:02",
    "text": "foreign okay thank you uh yeah 12th of June which is yeah yesterday so um the first thing uh that Rafael and I and and with the help of Martin uh remotely uh did was go through to make sure that uh particularly section six seven and onwards that the flows were cons we're using the same consistent words you know so if we say claims you know claims you know not assertions so um yeah so thank you Claire so if you look at that um the new edition is probably 7.1 so so pre in the previous version which is very messy um uh each one of those uh flows uh request response would carry like the complete will we were very verbose you know uh the the uh publicy of the originator public beneficiary and it just got too long so we said well why don't we make this you know instead of you know put this together in this you know transfer initiation claims which is the set of claims that G1 and G2 have agreed upon in stage um zero and so and this is just a all of a sudden we can we can fix this add this remove this but then it makes the text more readable bearable as we go down because we don't have to repeat the whole thing we just say you know transfer initiation claim so when we say a hash of the claim you know uh is the is is these are the these are the claims the items that G1 and G2 has agreed upon and so uh each of each of the subsequent flows now becomes shorter because we don't have to put all this stuff it's literally you know uh six seven you know components so that that's kind of the sort of first just clean up effort there's nothing new it's just cleaning up making this more uh readable and also I think from a semantics perspective it makes sense"
  },
  {
    "startTime": "00:08:00",
    "text": "because well there's no point proceeding to any of the other flows if you can't even agree on the you know claims that you know between G1 and G2 to begin the um the transfer so now go ahead sorry so the just to give everyone a bit of um a background this is the new uh draft that you're asking for us to adopt and you're talking through the changes so these changes do they replace the terminology glossary that we've been working on or if they now Incorporated this into the text as we sort of said last week we might last time we might want to do just to kind of um frame the changes a bit yeah uh no it's it's it's using the same terminology okay I should put a caveat most terminology we've agreed on a terminology document this is more of a moving text around is bearable because it's it is pretty what it page it is it's like umbrees like oh like wow this is grown and so now I should I should caveat that the digital asset ID and asset profile ID we have not uh put into as yet into the um into the terminology document glossary document uh and also we used to say originator you know entity ID you know and I've added the word verified because part of the whole legal framework is there is that it's the job of G1 or the owner of G1 to verify the identity of the originator and same with G2 and the beneficiary right so I've added the word verified underscore what's the point of sending you know information about a person if you've not verified that it's a true person right that's part of the whole you know whole setup indeed and I think Ram's got a question sorry I'm just trying to go ahead and watching you at the same time oh thanks uh just want to quickly point out that recipient is my spell uh other"
  },
  {
    "startTime": "00:10:02",
    "text": "than that I want to ask if do we want to say it's a Json or do you just want to say it's uh I mean it it ought to be specified in any kind of format right yeah but yeah given given that this is this document is it intended for an implementer a developer we will have to say Json or something else hopefully not XML Json okay it could also be a product so it's pretty popular these days any any other questions okay and I would just to clarify then are we saying that for two gateways to talk to each other they have to use Json uh well they will have to agree on a format and we we as ITF typically and correctly correct me was uh is early over there in California land uh we need to say at least a one default format we have to choose at least one but it's not exclusively one if somebody wants to re-implement the whole thing with XML that's great uh well so two things one I'm actually in Washington DC for the icam conference I am only here for a short period of time because you know other stuff to do but um the the general recommendation is if you can separate the format that you're delivering something in you know from the transport that is a better architectural decision it lets you actually negotiate what what you should absolutely must do is declare one as the mandatory to implement right in order to get interoperability between two different things you should say look you know you're going to communicate the the you know you must implement the Json version of the spec you may Implement an XML version or something like that as well so that's typically what we like to do in the iqf if that makes sense okay"
  },
  {
    "startTime": "00:12:00",
    "text": "good thank you thank you with cheers anyone that's volunteered to take notes I do apologize I didn't check that I started taking some notes in the note-taking tool just based on where I came in but I as I said I need to leave in about 20-ish minutes so somebody else needs to pick up after me can I have a volunteer for that before we go any further please thank you cheers sorry please continue okay uh so so I guess the the other new thing that that is this a placeholder is that if you go to the um well two I'm sorry two more things um there's the whole section 11 uh well section 10 and 11 uh new new text except there's nothing in 10 it's a placeholder for the session resumption uh discussion or text if it keep going down and and um there's a whole discussion about which is the next topic about errors and alerts and then the actual errors and alerts are all way back in the appendix a uh I sort of it's you know and I think that's just for convenience if if people want to one day move it up to the main body of the text that's that's also okay but this is the next agenda agenda item and and I just discovered this morning this is really badly written I I don't know what I was drinking uh maybe it's uh you know uh uh Boston Ale gone wrong but it doesn't read well so hopefully the slides will make up for it so in my slides I have a note ignore the current text in section 11 because it's pretty awful"
  },
  {
    "startTime": "00:14:01",
    "text": "glad you're muted okay um so Thomas you mentioned the slides do we have some slides to move on to in the next agenda item to move into an error messages yes and uh should I email it to you or should I attempt to show it you should be able to share your screen um you should have the option to if you have a go I'll give you the permission to do so okay so should I just try and presentation for you okay yeah does it supposed to be Pub underneath your name at the top of the screen you should have a share screen option oh oh there we go I'm sorry yep sorry guys practice good practice just uh I don't know what finder is that what I'm looking for yeah a list when you press share screen should give you a list of all the windows you've got open and give you the option to share one can you can you see my PDF can you see this no yes no no sorry let me try a different different way here sometimes it does take a second so you may need to okay you can share the desktop too with the other option okay oh if that's easier okay that might be easier you know it often works better as much as I hate that uh yes and then it's going to say select window or screen and it says Adobe okay now it shows Adobe Acrobat can you guys see that now you lost the request for some reason you clicked somewhere that made you lose the request okay let's try again sorry guys do that let's just share the whole um my entire screen select window or screen"
  },
  {
    "startTime": "00:16:00",
    "text": "entire screen yep okay allow okay there we go yep there you go could you see that now we can see your entire screen including the slides right including my face right now this is this is fantastic yeah it's okay no but can you see the PDF um no we can just see the web browser you have two monitors if so drag it to this one no this is just a standalone um yeah you know Claire maybe I should just email it to you sorry guys uh uh clip as we discussed last time this is the standard tool for during ietf meetings so we could switch to zoom or something else but since everybody has to learn how to use this for standard ietf meetings it actually could practice okay exactly I I just emailed it to you Claire hopefully um hopefully you will receive it pretty quick but otherwise um I was I was not going to add this to the agenda item but but some of us will be in San Francisco for the ITF event in person so um you know if there's an interest for people to get together and meet up and go out uh I hear yeah they have beer in San Francisco um as well so uh you know maybe I'll I'll send out a separate thread email and just get everybody um you know on the same email Fred all right I'm still waiting for the email to"
  },
  {
    "startTime": "00:18:01",
    "text": "arrive by the way you could you could blame uh Microsoft Exchange here because uh MIT moved over to exchange and things uh like mailbox limits came in forced [Music] yeah so actually while we're waiting uh another topic that's not on today's thing um agenda is a session resumption so Raphael is Rafael hey Rafael so uh we've been whiteboarding uh you know back at MIT and and the idea is that could we devise just a pair of messages uh that says basically I wanna I wanna resume and the answer is yes yes no uh and and leave the whole you know crash recovery thing as a separate future document but but have it in uh the SAT Core specs so that people understand that that we know that there needs to be you know session resumption and I think we need to address first session session resumption at the satpi protocol level and just assume that TLS is back up and alive again or has never gone away so it's possible that the TLs keeps going but the logic behind G1 and G2 Falls even though the the TLs Handler is still running and so that was kind of the the thought uh for this idea of a session resumption and that's why it is a placeholder in section 10 for the for the doc uh Claire remind me next time to email you ahead of time yeah um apologies it's still not come through um should we try to screenshoting one more time"
  },
  {
    "startTime": "00:20:01",
    "text": "yes let me try that okay let's let's try that uh maybe I could do I do a PowerPoint okay let's try it presentation View yeah can you guys see PowerPoint um and of course the slides have just come through [Laughter] all right I'll have to revoke your screen just to start mine oh there we go um can we see it yep okay great uh so okay so that's the topic uh next slide please Claire so um so this is just the discussion of the proposed model so so I I've I've stolen this out of the the TLs one point two Drive RFC or is it what it's actually 1.2 it's and it's also remains three at 1.3 so this is if you guys are really interested you can dig the section six or section five of of the TL aspect and so the idea is that you want to distinguish between you know uh alerts and you know well there's the alert uh and then there's the a bit of information and a severity level and I think that's kind of the model and so we're thinking that for uh sat B we need to like look at like two possible"
  },
  {
    "startTime": "00:22:01",
    "text": "classes or severity of of messages so the first one is uh is normal uh orderly closure uh so terminate notification meaning okay you know transfer finish our very last um you know very last stage message you could say afterwards you know terminate you know connection so that's orderly there's no error there's no it's not messy the second one is the messy one the second one is something happened I'm terminating and so uh uh the word a board of closure again that's listed uh from the TLs RFC and so um the following question then the following as well okay depending on the severity we might be able to recover it because we don't want to if you're already like in you know the very last you know um what is it uh commit prepare you don't want to go all the way back to you know the first message um in you know stage one uh so we want to be efficient you know in that sense as well next next slide clear so so this is a direct uh lift direct steel from from the TLs RFC and uh I just remove all the all the existing codes closed notify bad certificate TBD tpd and it would be depending on us and so you know an alert would be would include a description and and the level uh you know of uh of the error okay next next slide we could go back by the way folks if people are you know want to think about this so it's this is a preliminary list it's an appendix a so this is um you go first words that's fine well I was just trying to make sure I got the intent of the previous slide I"
  },
  {
    "startTime": "00:24:02",
    "text": "mean you're not gonna you're not using the TLs error frame yeah correct now this is copied this is in um sat core now I modified it a little bit but it's it's structurally it looks very similar is what I'm saying if you're wondering where you know we invented this you know where we kind of stole it okay um so I was trying to figure out how we were going to clearly describe this um and so I would use consistent formatting or you know Styles throughout so you may want to reframe it into a the same style that the rest of the writing is and not use the TLs you know C like structure unless unless you're using that everywhere else is my point okay no good good point I mean we could you know so far we've been saying like Jason as a as a sort of syntax so we could express this also in some kind of a Json you know syntax yeah same same curly brackets it would make sense with defaulting to Jason yeah yeah and I think you know there's a lot of good rfcs that have examples as the documents going along for um you know the different sections so that you'll have a a section header you know that talks about this is what we're talking about and then here's an example here's a message flow example where we actually include real Json and things like that it's a good example of something that doesn't have Jason and it's the IMAP specification is actually very good to read and easy to understand IMAP okay I'll check that out now that's that's this is exactly the kind of input uh that we're needing where's like how do how do we express some of these sort of constructs but yeah so I'll take a look at the IMAP and you're right I mean the idea would be eventually we started doing this and never finished because we we needed to fix the error messages um actually the protocol itself you know semantically but basically this the the"
  },
  {
    "startTime": "00:26:00",
    "text": "ideal scenario would be that every message has an example Json at the at the bottom of it this says example right so if it's we're sending you know a lock claim from G1 to G2 here's an example but you're right that's that's the kind of it's kind of good um obviously guys I know it's um a slightly more formal setup but this is still very much an open Forum Workshop so please do feel free to add any comments ask any questions um I'm sure someone don't mind me saying you know chip in at any time this is this is what we're here for yes folks please uh please jump in you guys are usually very uh active in the morning here oh okay okay next next one yeah so this is just a quick note um so we're trying to focus right now semantics meaning that given a pair of messages whatever Block in a receipt uh what are the obvious ones you know claims are badly formed blah blah blah and what are the edge cases and Dennis is not on Dennis is very good at picking the edge cases because he's got you know the deployment experience and then um the the the difficult one what scenarios will need human intervention so for example at the last episode of mailing list but then the last call I think that Dennis was saying you know at the very last you know commit message if the commitment message doesn't ever reach G2 then it might so asset has been deleted it's been created but not assigned it might need human intervention to go in and actually assign it manually to Bob right so that's kind of you know an example of um it's not worth rolling rolling back because it just needs an I.T guy to say you know allocate allocate to Bob but we'll we'll we'll this is an ask for you guys these three"
  },
  {
    "startTime": "00:28:00",
    "text": "bullets you know to help us figure out um uh you know the obvious ones the educations and the the really sort of bad ones that need you know human intervention um okay uh next slide player yeah so uh so please open if you want message flow diagram version 18 uh it's up there on the GitHub otherwise I've snippeted the cut cut and pasted the the different parts so this is now and we begin in stage uh what is this stage one no this is stage two 2.1 so we're leaving stage one to later because it's a it's a simple request response but uh it's all the the transfer claims that we have to figure out for stage one so this is now stage two so this is transfer commence and then there's an acknowledgment coming back and so this is uh the three sets uh groups of errors that that we think could happen so badly formed a message you know G1 uh intentionally or otherwise replace one of the claims in the transfer claim part that had previously agreed so G1 is trying to cheat right so it's okay that's I don't know what to call it it's a badly formed message um incorrect parameters so the claims are okay but something else is is wrong you know there was a clock timestamp is wrong uh and maybe the signature didn't work out and then thirdly an act in a mismatch so this is more of hey G2 is sending an act for the wrong transfer commands because bear in mind that uh for the same Alice user Bob user the same uh originator address and beneficiary address and the same G1 G2 G1 G2 could in fact be"
  },
  {
    "startTime": "00:30:01",
    "text": "handling multiple of these transfers independent of each other for the same application and for the same people same to people and this is why the whole context ID becomes very important and the whole thing with session ID becomes important so in this case an act mismatch could simply mean that G2 is there's a bad Logic on G2 and it's sending a uh response that has the wrong session ID for example right we said by the way the diagram has got transaction ID I think we have defaulted to saying session ID so question on that um I guess a couple of questions I think um so does the document to date and I apologize I haven't read the latest one and the last one I read was a while ago too um you require all of the transaction messages to occur over a single TLS session well unless resumption happens right so you know if there's two tlf sessions open Aid all of the transactions for a particular one should go over the same session right yes ideally unless there's a better way of doing it but the quick answer is yes okay well I mean you know TCP has a concept of flows and things like that and then so that was my other question is does the document yet talk about should you have one TLS session per transaction or can you interleave transactions over a single TLS section which is where you get into things like you know head offline and blocking and all those types of issues you know any of those approaches are fine very good ways this is yeah I don't know people you know uh we have not really discussed ever whether or not it's we're requiring a single TLS session or could G1 and G to effectively have a big pipe a big tunnel a permanent amount of"
  },
  {
    "startTime": "00:32:01",
    "text": "permanent a long-term TLS session and you're running in a multiple transaction transfers across the same TLS in which case you know error 2.3 is a is a true possibility yeah sorry just on on these acts you know when I when I was talking um about the end points on the email on the mailing list thread um I was considering like maybe we don't need some of these acts or we need more acts but um I know Raphael um addressed all my all my concerns uh but maybe me and raffle can catch up after this meeting just because I'm still I still really strongly feel that we should try to stalinize so maybe if we remove this ack and it's like an implicit response either of that or we add act in all the other places um like uh for for standards HTTP post request for example the the response to that then yeah there can't really be a mismatch here yeah no so so this is now at the semantics level so the three-phase commit requires the act and some of the acts that actually digitally signed so for example one of the acts in this is in fact a receipt it's a it's a Json structure it has to be signed by G2 so it's not uh it's not a HTTP post and then you gotta for every post you you should get a response an okay I'm not not a yes exactly yeah yeah it could be a response with the body as well it could be a 200 okay plus plus any anything that is required in the ack data structure for example yeah but we could use the same representation method"
  },
  {
    "startTime": "00:34:00",
    "text": "right in in the diagram that's kind of what I'm advocating for because in some places we have for example here we have transfer commands and the neck but in other places we don't have the ACT um so yeah yeah so that that's uh all of that is a part of the three-phase commit definition like if you want to say we want to do three-phase commit we actually have to send this message you know back and forth and and the other um you know the others uh cases uh well we've kind of put it aside but it's a possibility that people will someone may not want to use http if I can rephrase Alex's statement in a way anything the way I put it into the notes um you have a sequence of you know commands or messages and in some ways because there that sequence is a defined order an act can be implicit by following along in the sequence where the opposite side sends the next message and because they sent the next message it means that he had to have acknowledged the previous one unless there's a digital signal or something something that is required for uh you know to act the previous one or something like that to a fair summary yes yeah I think so Alex is that good yeah yeah that's uh that's good okay um if there's no more question you'll see this you'll get bored pretty quickly because it's a yeah keep on next slide please Claire you'll see the same types across so this is this gets more complicated so so a lot both lock assertion and receipt are signed messages and this this is because G1 and G2 are now on the hook"
  },
  {
    "startTime": "00:36:00",
    "text": "right legally on the hook the signing is they're saying things to be true and so for example um some of the errors could be badly for message so either the claim is wrong or you know the the something is wrong in the lock assertion claim data structure or you know maybe maybe something else bad signature so the signature part did not work out a G2 could not validate the lock assertion message uh wrong transaction ID we saw that before uh mismatch hash value so this is where uh there's this there's this you know idea that um his message should carry the hash of the previous message so for this one I think it was a 2.4 supposed to carry the hash of 2.3 now it could be that uh G1 is trying to cheat and so it's putting in the wrong hash value and purpose or there's just bad logic implementation um expired signing key certificate so if if G one is signing you know using public key cryptography and there's the next 509 insert G2 tries to fetch that you know using you know walking the keychain going up and then says okay uh one of those certs up the up the chain is um expired or invalid um and now the the fourth one was a was a good one that um actually Raphael suggested the the last one the 2.4.6 which is expired claim so it could be that the lock assertion claim is going to be set to be valid to be like say 60 60 Seconds okay and then um G2 took longer than that took five minutes and so message 2.6 is is you know delayed very much and so it could be that um you know by that stage the claim has you know gone stale basically"
  },
  {
    "startTime": "00:38:01",
    "text": "one uh question on this and several other other the error message you don't seem to have an error that says the operation failed you know in this case what if an attempt to actually do the lock doesn't work yeah yes yes so so this is uh thank you Dave so so do you notice all the arrows going outwards into the network network one network through is not included because technically speaking it's not part of the protocol but yes we would love to have uh we should add the reason you know so it could be that you know uh but the lock on a particular yeah yeah yeah I mean Network one failed yeah yeah for G2 you know G2 or G1 in several cases see the the Pier uh Gateway has has to know that an operation failed on on the other Gateway yeah yeah okay apologies I run for a meeting uh ramek or uh was it wrong that was going to take over no taking uh please make sure that too many continues capturing those things thank you Liz uh good question I've been taking notes do I need to take note the this not taking tool so you don't have to use the notes making tool Runner you uh just anyway and then if you send them over to me and where's we'll combine them all oh yeah so so David thank you very much yes those are those are the hard ones how how do I say this politely these are these are the easy obvious ones but so you know uh you know for example um this step 2.4 took too long okay G2 is waiting and waiting and waiting and that's you know and finally gives up uh"
  },
  {
    "startTime": "00:40:00",
    "text": "because uh Gateway One is unable to actually do the the lock right so that's a that's a so that we we want to do that we want to add the more what I could go say a difficult you know scenarios into the error message because we want to be as informative as possible between G1 and G2 and for this slide lastly so the receipt is the same set of Errors basically there's it it's because it's a sign assertion as well assign claim the receipt so pretty much same things can go wrong okay uh moving on Claire sorry uh this is again commit prepare and commit prepare act so these are pairs badly for a message mismatch hash value I mean I may not be saying it the right way but basically the hash of the you've got the wrong hash it should be the hash of the previous message and and it's not Computing so you might have done something wrong and some incorrect parameter okay so this this needs more discussion and elucidation you know any one of those commit prepare parameters could be um you know an error or mistaken a message out of sequence uh so commit the commit uh prepare um was sent before the the last message so we put it in there not not really being sure if this is even possible 3.1.4 given the fact that there's a the three three phase commit has a very tight set of messages that need to go in sequence okay and the next one please clear"
  },
  {
    "startTime": "00:42:00",
    "text": "[Music] yep commit commit ready and commit prepare so so interesting I think in the email Racha and I sort of discussed this that the original commit prepare and commit act the commit preparer actually has um to to I I've been calling them children the ACT prepared going backward we just saw and then there's a commit ready so so in fact there's this silence between 3.2 3.4 where in fact G2 is trying to create the asset in message 3.3 A and B and and you know if you guys open the full um message Pro you'll see this and then 3.4 I'm ready right so it's pretty much the same set of possible errors and I invite you guys to get print this out on a big sheet you know put it on your wall and and stare at it you know uh plenty of times in a day to figure out like what things can go wrong next um next one please clear uh yep so this is commit commit final so this is this is an assertion this is a a sign claim an assertion and then the receipt coming back is also uh and this is because um you know basically G1 in 3.6 is saying I've done my job I've extinguished the asset or disabled or whatever the network one kind of needs and then in 3.8 um G2 is saying yes okay I've done my bit which is um I've assigned the asset that I created to Bob right and so 3.8 is also interesting because if there's a dispute Bob says I've never received it uh Bob could get the assistance of G1 and say Hey you know G2 but you said to G1 that that you gave me the um the"
  },
  {
    "startTime": "00:44:00",
    "text": "asset but in in reality you have not but so this is pretty much the same set of errors and in next one clear please I think I think we might be at the oh yeah this I think this is the last slide so okay so um Next Step so I want to figure out the set of errors that may happen in stage one this is all the transfer initiation claims this is I think section 7.12 and three uh and some of this by the way the actual actions you know in the real world is outside our scope or we all the G1 and G2 can do is report so you know if G1 says you know benefit G2 says beneficiary address has been validated uh it's a it's a statement it's a legal claim and that's why we call it transfer initiation claims both sides need to sign uh you know these set of claims we want to improve the current set of error messages so if you have any inputs suggestions you know feel free uh and for the for those who though who are developers yeah you know error messages that were like one of the most boring uh parts of engineering but uh you know uh it's desperately needed good good error message that is is you know crucial for deployment and then um finally we will we plan to be putting on some adding on some more text uh for human intervention cases and session resumption uh and I think the plan is uh we want to have a discussion correct me Raphael at the at the San Francisco ietf on session resumption what should it we have a sketch on a whiteboard but we kind of need to think some more about it um we can definitely put that on the agenda obviously the session will be we've put a two hour slot in so we'll"
  },
  {
    "startTime": "00:46:00",
    "text": "definitely have some time to look at that as well if you'd like we need a oh I love that okay that's a great idea yes like uh yeah back out yeah yeah okay okay good idea why does all that have to be human intervention and not be an automated I mean based on a timer like uh yeah g2s timed out listening to G1 so just let's go back yeah so so there are very narrow uh very um what's the word I think I wish Dennis was here there there are cases where where in fact it's it's not a deadlock but but uh this is as I said the the commit uh with 3.6 was set out and but then never got to G2 that oh oh basically the something stuck on G2 and the IT admin guide needs to go in and say release transfer like actual manual override authorized release to Bob right versus okay this thing is sitting here uh because G2 crash uh G2 has come back it doesn't know what to do and so it's sitting there just waiting for the asset to be allocated to Bob so that's an example but but uh Rama the goal is like we need to understand this very tight rare occurrence scenario so that if it does happen it's in the specs that somebody reads this thing in 10 years and believe me having been very close to the Kerberos rfcs there were a lot of these cases they were not in the RSC that had to be put uh and that was that was because people are actually seeing it you know in deployment I don't know if that helps Rama"
  },
  {
    "startTime": "00:48:02",
    "text": "yeah I think we have to think through the possibility I'm just wondering like uh when you say human intervention I mean the gateways have legal liability right so imagine if a human goes and intervenes and draws something back that humor is going to face legal ability yeah yeah yeah we we don't mean somebody I take logging in and saying hey I'm just gonna roll back you know this stuff because I don't like it it's more this thing is sitting it's unresolved it's sitting it's it's not it's not like like deadly so so for example um G network one has already extinct G1 network has already extinguished the asset the asset is is actually now uh is in the possession of G2 but G2 has was not able to give it to Bob right and G2 is honest it's not like G2 is trying to you know take the asset for himself itself uh but it's it's there because G2 crashed wakes up again now a good implementation should be able to clear this very quickly right so there's all these pending yeah but there are bad implementations you need an I.T guy to log in and say okay is this three pending thing is it's supposed to go to Bob you know Doug and you know Rama and so say you know approve approve proof then having having text there just to to convey that we are aware of these very it happens in databases as well so the having text there kind of helps us you know convey that like we yeah we've thought of these very very rare uh scenarios any uh uh I think that's the last slide clear um yeah okay yeah"
  },
  {
    "startTime": "00:50:02",
    "text": "any questions well the next step seemed fairly clear um in terms of capturing the feedback from today making the changes and then of course um looking at the additional uh messages and outliers is that something that we want to put on the agenda for our next meeting the iitf117 or do people have anything else that they would like to have on that agenda um we'll be putting the chairs will be putting a call out um at the end of the session today um or early tomorrow depending when I get around to it there's a call for gender items but is is that something that we want to pick up as part of that working session because they're in the working session that we had in in Japan uh was less of a working group and more of a presentation I think that might have been the time difference because it is our first official one and obviously we want to make sure that we're making the most of these these groups yeah I mean if we have the time I think we should talk about some of these I mean this is it is it is that big core I mean this is this is our these are the the the number one deliverable right this is this is the call absolutely um that's that's the one we need to get that pushed all the way through and then we can start looking at um some of the other things that we've got on um our interest list in terms of uh things that aren't approved right now but um that members of the working group are a really interested in moving forward the agenda will be documents first so anything that would support the document um Readiness anything that will support the document development and would definitely be high up on the agenda list wow well if no one's got any more input on what we covered up today"
  },
  {
    "startTime": "00:52:01",
    "text": "um obviously we'll send around the the minutes and the notes once and we've compiled them and some really good input there thank you everybody and um we'll share that around as well as the call for agenda we will speak to you soon everyone take 10 minutes back have a nice day everybody cheers guys thank you thank you bye-bye nice see you folks bye thank you"
  }
]
