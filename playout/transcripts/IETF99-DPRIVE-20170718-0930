[
  {
    "startTime": "00:00:15",
    "text": "[Music] [Music] but I just walked into the wrong room which I saw for English but then I saw a funk and anyway oh I\u0027m at the end there we only extra like our presentation all right good morning all I guess we\u0027ll slowly get started here I\u0027ve run out of tea to drink so um I guess the day we\u0027ll have to begin for us so welcome to debride it\u0027s Tuesday morning yeah so I\u0027m Tim that\u0027s not Warren as you know warrants and got promoted to management so we lost one so um so Brian here made actually a rant about back in London a few years ago is um stepping into his shoes so treat him as well as you I guess treated worn it myself Terry our ad is back there so complaints criticisms etc you know where to find the man we we asked for like an hour we didn\u0027t think we\u0027d have a lot of stuff but of course you know they gave us two and a half hours so you know I guess we can have stuff to go on so we\u0027ll go through the little the quick agenda sure give you rundown on what\u0027s going on things of that nature we need a java scrub if we can find one "
  },
  {
    "startTime": "00:03:15",
    "text": "I know I asked for one I never heard anything back and I\u0027m gonna take her if I can find one mr. Hoffman thank you for taking minutes though and jabbered dan thank you thank you for that so there another one so that\u0027s the new no well I actually updated the text I didn\u0027t think I was going to do that so you all have to sort of follow with you what the new text I actually didn\u0027t even do a diff to figure out what the tip change was so I was just proud of myself that I managed to do updated so hey it\u0027s tough work um fill in the blue sheets so actually the room filled up a lot more than I thought so at least can tell us you know tell us the Secretariat how many how many microphones we need though so we\u0027ll go through the agenda we\u0027ve got a couple updates on something going on some current working group stuff and some new stuff including something that I guess Warren just can\u0027t quit us I guess he just told mr. Laurin said he\u0027s got some slides he wants to send to us to present even though he\u0027s not here so that\u0027s that\u0027s Warren for us so see what that goes so the big thing we wanted to talk about was the TLS profiles draft which is NIS G review got a lot of feedback from the ICC of course they\u0027re really great at that what we sort of pushed on the list about was there were a lot of changes a lot of editorial stuff but some content stuff and we wanted to make sure that we saw working group folks you know sort of like yes I\u0027ve read this and this is not crazy so perhaps a little show of hands of anybody read the latest version with all the different changes okay so a few I\u0027d say maybe a half dozen or so mm-hmm that makes me a little squeamish I you know we want to go back and talk to the roaring at the 80s to basically lift there discusses but they\u0027re gonna want to see some more folks in the group that basically have read it and say yes you know this is good you know that so if you have a change look at the dips you know sort of pass your eyes over it and give us a little bit of feedback on that so we\u0027re kind of stuck on that one and and you know I think that\u0027s like the last you know bit of things for that okay mr. Hoffman so I did read it I did send it to the list and what I want to emphasize to people is there\u0027s a lot of districts at things and it\u0027s like we want a little bit of clarity here you add a sentence here or you didn\u0027t cover this yet a paragraph here this was bigger than yes it was and so please don\u0027t assume that it\u0027s fine I read it I thought it was fine but a lot of people disagree with me a lot so it\u0027s worth the time to read it - read the diffs and to read the whole thing again because in fact it\u0027s different than what we sent the ISG III agree and I I disagree with "
  },
  {
    "startTime": "00:06:16",
    "text": "you Paul all the time just understand the principles but I agree with Paul that it\u0027s it is a lot and it took me a while to sort of go through and make sure that we\u0027re all on track there I disagree we spoke this time but yeah is our a lot of gems if you take into account the number of different but most of the change are in my opinion detailed most of the iesg me markzware in my opinion mostly a matter of details on when there were more serious it was about side the problems for instance or the old discussion about DHCP was a distraction because even though the left D is not very important it\u0027s something to do in the future etc so the fact that it has been modified a lot is not really important so it\u0027s always good to have reviews but in my opinion the draft didn\u0027t change a lot okay first I can say you should contact review body\u0027s oxygen at review team just to get another reviewer I was a reviewer for China so just has as we are new version so we come back to to get another reviewer so we get more things okay thanks so okay it\u0027s good yeah there\u0027s a lot of disk there\u0027s there it has changed some but as everyone said some of the stuff was basically clarifying that we\u0027re not gonna care about certain things but I do think it\u0027s you know it\u0027s important for us to move that forward and I think you know I know that I before we go back to the 80s to sort of have them push on there discusses we want to feel confident that you know we\u0027ve got some good consensus going on here that people have sort of done that so thanks on that so also we\u0027re talking about is Alexander\u0027s good talk next about the padding profile draft and Brian and I were discussing this yesterday and this is something to think about in sort of the discussions you know we have 7830 which is basically the padding draft the padding RFC you know do we fold these two together to make them one ours you know Jacob is which is just one hour see that has the padding as well as the profiles or do we have two different things right and so that\u0027s just a discussion point something to think about sort of thing right rather than giving implementers two different things to work on and give them one but you know there\u0027s just options for you guys that for your folks to talk about next one what else do we and I know that Christian is going to talk please talk a little bit about the dance or a quick sort of a different way of looking at the sort of the privacy thing and so we want them to sort of come up in chat for a few minutes and and give us that because there\u0027s a lot of DNS over dollar transport stuff going on right now and so it\u0027s good to you know sort of have "
  },
  {
    "startTime": "00:09:17",
    "text": "some folks looking in that and that sort of topic Brian are we\u0027re going to sit down with them some of the 80s and some of the other working group chairs later this week and sort of discuss all the DNS server transport things that are out there and sort of you know how do we juggle all the various pieces and where they all sort of go and play and stuff like that so worth you know there\u0027s there\u0027s there\u0027s a lot of a lot of stuff a lot of stuff happening there I guess it could have put it though and then Dan\u0027s got talk about his little DNS demarks idea so and he can because he gave us slides at 2:00 a.m. so you know he\u0027s allowed to now talk and we may have a final presentation with David Lawrence talking about something that Warren has to do some slides were in another meeting he\u0027s going to send them supposedly but you know and we\u0027ll give him that former chair privilege one time only so and but and then the we had we had left a lot of time for an open session because we want to talk about this step to I know Stefan had worked on this step to you know the first pass of a document and we\u0027ve had some good discussion on it but you know it\u0027s going to take a little bit of sussing out so we\u0027re you know where our next steps and words of groupthink we\u0027re going to go sort of thing so it\u0027ll be sort of good to sort of have a more free-flowing type of discussion in that regard so you know you know yeah and I don\u0027t know if anybody\u0027s been playing with the TLS you know stuff that the that\u0027s on the IETF Network here but I think if anybody should we should be so if not we should be ashamed of ourselves and one of the things that I know from an Operations person like you know it that\u0027s my my fault in life is I think about this is our people deploying this or people trying to use it where they kind of run into problems that kind of thing so you know and what we want to see as we go to the next step re I think the next thing as we start to think about Phase two people are going to easily push back and say also how is it how is it working operationally in phase one you know that kind of you know I think that\u0027s a big thing you know and so really where do we go from here so we only ask for an hour we had two and a half so you know I don\u0027t think we use the whole time you all may think otherwise so surprises or it don\u0027t surprise us you know it\u0027s early so that\u0027s that\u0027s all we sort of had so with that mr. man what\u0027s that I guess that\u0027s the kind of do too many slides it to me so good catch it has I\u0027m sure you\u0027ve got it yes so you\u0027re up sir it\u0027s Danny were just commenting "
  },
  {
    "startTime": "00:12:17",
    "text": "as jaffers cried that there are people who are remote so if you ought to come to the microphone please do make sure to say your name thank you thank you good morning everyone so I\u0027m going to talk about the D prizefighting policy and and i think what i what i went to mention well no let\u0027s do it towards the end of the session so document status actually - 0-0 expired in June it was totally my fault because I should have updated it by the time I left Chicago I actually didn\u0027t so I was a little bit for it that the IDE submission system would not allow my zero one version since the zero zero was expired but well it cuts through so I posted zero one two weeks ago actually there is just one significant change in the which is that the document now contains a recommended strategy yeah I\u0027m gonna talk about that on the next slide and there were some editorial changes the document text is still pretty rough so before we like push that to publication we would still need to to clear the text and like probably reduce some of the text regarding that strategies so I got a little bit of feedback on the mailing list the first one that I said that I got was that we should also mention the strategy to pay it to the maximum message size I can echo net that in the next version Paul said wording seemed fine Shane actually said that packet counts is maybe more important than actual packet size from an operational perspective I can see anything to that because I\u0027m not from the operations stuff and in private feedback I actually got the call equation vitam we do random pairing because the person said that random pairing would actually prevent analysis on block accounts so if you see like a pattern with one block two blocks two blocks yeah is that worse or better than seeing some kind of random pairing so but that cuz I clear back to the strategy and so the major part of text that\u0027s new in the draft is to recommend a strategy that\u0027s based on on Danielle\u0027s great empirical analysis of of the impact of pairing on actual traffic so if you haven\u0027t read it check out the slides below there from the NGSS workshop in I think March yeah or February February so what he did is actually he looked at real packet traces from the surf net resolvers and he applied the simulation of pairing with various strategies to those packets and in the end came out with a recommendation that\u0027s essentially that you should pay at the queries to a block "
  },
  {
    "startTime": "00:15:18",
    "text": "size of 128 bytes yeah and you should pet responses to 468 and also assert recommendation he found out that it doesn\u0027t really make sense to pair the response when the query was not padded because the signature of the queries when unpaired it is so easily distinguishable that it doesn\u0027t make sense to hide the responses anyways um I think still we would probably need to discuss this because from the conservative side I could feel paired on the server side even if the client a little bit anyways so the most important thing is how did actually Daniel select that pair and as I said before what he did he essentially did a shoot out of all the various pairing strategies with with a cost function that he defined to both answer to the attacker and to the defender so and this is sort of like the curve of the optimum strategies in terms of a certain costs ratio between at a current and a defender cost so the cost function as far as I know sent of course that\u0027s critical to the understanding what the actual impact is so the cost function is as far as I understand for the strategy that he recommends which is 128 bytes on the client side and the query side and 468 on the response side is that essentially means that about 93% of all packets have the exact same size yeah if that\u0027s correct so 1.0 would mean that all the packets have the same size and the strategy that he recommends would mean a 93% of all the packets have identical size I\u0027m I\u0027m I\u0027m already waiting for you to walk up to the microphone so that you actually do my work so yeah so the way that I did the follow up cost sorry this is dkg so the way that I measured the follow up cost is slightly more complicated than just what what percentage of packets have the same size it\u0027s actually assuming a an attacker is interested in a random packet what are the if you pick that pack if there\u0027s a set of query response pairs that an attacker might be interested in which is all of the query query response pairs that you get and so if we pick one of those at random how many other queries are likely to be in that same to have the same size signature so it\u0027s not just that 93% are in the same bucket and that all the rest might be totally in different buckets the fact that the other ones are all in roughly two or three other buckets actually increases the score as well um that strategy sort of or that cost function sort of assumes that it\u0027s good to have as many as packets as possible "
  },
  {
    "startTime": "00:18:19",
    "text": "in the same size bucket sort of things right because the private comment that I got on um after posting my draft would say like if you randomize it completely yeah wouldn\u0027t that be better than rather like having a pool of packet sizes so I mean essentially I don\u0027t know yeah yeah well so I can I mean I can speak to that I actually included random padding policies if you there\u0027s a list on the right-hand side of that slide there that\u0027s light it\u0027s I\u0027m happy to do deeper explanation of what of how that was calculated if folks are interested but basically the every hourglass shape on that slide represents a padding policy combination the query padding policy on the bottom and the response padding policy on the top and they\u0027re color-coordinated sorry for those of you who are not able to see colors but some of the padding policies that I experimented with were we\u0027re actually randomized padding policies and perhaps I didn\u0027t choose the random padding policy that your private feedback person said you know was thinking of but I think some that seemed plausible and reasonable to me and I didn\u0027t actually see that randomness gave any benefit for the cost functions that I had defined so I\u0027m doing this work made me think a lot more deeply about what it is that we want from padding and I\u0027m happy to have that conversation with folks who are interested yeah so yeah we\u0027d like to support what Dan said and also implementing when a buddy is excuse me I\u0027m Christian we came up to support what dance there is another issue about random body is that it\u0027s much harder to implement right than the path to the next la banda way and and it\u0027s very easy and try to do random stuff two of them cannot pseudo random and actually leak information okay in the course of looking at the different random padding policies I noted that the DNS crypt work included some random padding and I believe one of those strategies up there was a rough approximation of their work but one of the things that they did with their random padding and this is something that hadn\u0027t even occurred to me until I looked at what their code was doing was that the client sent a nonce with the query okay and the server had a its own secret state upon initialization and it chose its random padding on a basis of a combination of the nonce and the query specifically because they are not protected against replay attack and they observed that an attacker who could do a replay attack with with the DNS crypt query could just if it was random padding see what the random response was from the server by sending it several times and you know yeah you can narrow it down to what\u0027s the the so there\u0027s like surprising things that happen when you do random random padding depending on the the cryptographic protections "
  },
  {
    "startTime": "00:21:20",
    "text": "that you have from the rest of it of the structure okay thanks so in terms of the document yeah I mean of course the basic function the basic question is are we happy with recommendation that we have right now yeah that\u0027s right now in a document do we need to do more research if if we need to do more research does anybody like volunteering to do that I think that what we should actually research would be like the cost function yeah is that the cost function that we need of course to be interesting to hear someone from the attacker side yeah I\u0027m not seeing them volunteering to reveal that kind of information furthermore there is of course a trade-off first we have seen in the previous slide between the bandwidth cost and follow-up cost so is the sweet spot that daniel chose the right one yeah what\u0027s the what\u0027s the what\u0027s the reason for that and of course out of field date that we had data from one reasonably big precursor but might be interesting to look at other data and something that i came up in a hallway discussion yesterday if we feel that that\u0027s the best knowledge that we have at that moment but we could like find out we have a more reasonable strategy in the near future we could actually declare that document is experimental yeah which also would answer your question regarding rolling in the pending policy into the RFC 7h30 because i think essentially III i think it\u0027s not a good idea because the padding strategy could actually change quite quickly if we found out that there are other forms of attacks against the fighting size and I think that the 7h30 is pretty stable so yeah there\u0027s not a lot that actually can go wrong with that well so the other questions with regards to the document is do we want to keep the description of the strategies do we want to like compress that a little bit I can add a little bit of more strategies like as we said that to the maximum size um and we need review is because a lot of to do words in the draft yet and nobody like complained about them yet and of course why four six eight if it\u0027s a trough if it\u0027s a it\u0027s in a document that\u0027s the recommended strategy we need a little bit of background text on that yeah Christian Christian right Emma well first I mean let me support your point about not keep not matching the documents because the second point I\u0027ll make is that the padding Swadeshi are three depends on the transport that you use if you use for example DCP it\u0027s entirely possible to pad several queries in a single set TCP or TLS packet at which point you have to consider the effect of padding on this series of "
  },
  {
    "startTime": "00:24:22",
    "text": "packet other than just wanna and I I am suspicious that basically the budding strategy that you end up with is different in this transport act ECT bacterias or quake for that matter then it would be if you are doing UDP so I would yeah I I think that what we have here is a fine specification when you\u0027re doing UDP but you might want to have a big most studies if you are doing different transports yeah good point are we had yeah and so so I mean that that\u0027s most support for the idea of keeping those pretty separate and but it\u0027s fine work and I would I would like to see published Amin iodide so I don\u0027t want to either I also do not want to debate it on the basis that we might be run better on or we do also transpose minutes it\u0027s a fine strategy for now what what you just said I came to my mind that that Daniel I think we discussed that the case of DCP petting shouldn\u0027t consider the two part TCP message header because in case that falls exactly on a block boundary you would like to be able to reverse engineer whether the original TNS message was like on the edge of a block size yeah but I haven\u0027t added to the draft but but you\u0027re right Christy and I will need to add considerations for well known transports at that time yeah I have no idea about quick so we would probably update that need to update that in the first place anyway as soon as we have more transports we\u0027re at least defined this is DDP yeah yep yeah whatever you eat beets is available so that you and it\u0027s poly applicable for the DTRS without a teacher and it\u0027s applicable it\u0027s a very good start for TLS anyhow and so if you don\u0027t know any better to goddess it\u0027s a good nation with it so let me add another question to the to the questions I have a slide what are the transports that are in scope for that document I would I would think focus on the UDP because that\u0027s what we\u0027re you know you\u0027re probably gonna be pointing on first right but what may be deterministic to you made it budding mostly make sense if you also encrypt right of course yeah okay well yeah TLS is not here to be yeah so essentially that document that we have would apply to DNS over TLS is again not YouTube playlist let\u0027s swing back my previous remark buddy also makes sense for those addiction that\u0027s basically if you can do padding of your query to the expected size of the rest cause then you get some built-in dose protection oh you "
  },
  {
    "startTime": "00:27:25",
    "text": "mean like a proof-of-work analytical because because well like if you have a policy on the server that you will basically send a TC bit if the answer in the if the response is longer than the query but it\u0027s a it\u0027s a whole separate use of padding still can you use some text about that okay so give you what I say is that you have this problem it\u0027s the simplest DNS cookies itself I\u0027m not saying it\u0027s okay you don\u0027t want to have your a UDP response to be larger than the UDP query okay I get I got your pocket because if that provides for amplification so in the absence of a three person check of some kind you may want to use padding of queries to the size of the expected response or to some large values that 100 bytes or something so that yeah so that basically you remove the potential for amplification for those amplification in the responses that\u0027s a use case that would actually be forbidden by seven eight thirty because based on several comments from the work grupe 7/8 early currently says that you must not use petting if the transport is not encrypted so we had a couple of comments around that because it is useful for monitoring and for probing essentially MTU probing for example but based on the feedback of the working group we currently have in the in Graz that you must not use it if transport is not a cryptid which yeah okay I mean yeah the network wouldn\u0027t forbid it to do it that way but technically we would need to describe that and it that technique that you just described would need to update 7s okay yeah so this is dkg I think Christians proposal is an interesting one but totally disjoint from yep the work that\u0027s going on here I support keeping this as a separate draft I do think that it\u0027s relevant for DNS over TLS just because it\u0027s the best that we currently have I am under despite being the person who did the research to come up with this split here I\u0027m under no illusions that this is perfect and in fact that the what is the best padding policy may change as the network changes over time so I think it\u0027s important that we can say here\u0027s the current best policy and one of the things that I observed in implementing this rehab padding and these default padding\u0027s already implemented you didn\u0027t do you have an implementation side that\u0027s like but I think it\u0027s in the north isn\u0027t it yeah we actually have patches in several free software DNS recursive resolver clients and and servers already using this particular recommendation and one of the things that I observed in doing one of the implementations is that this is something that can be done unilaterally and you can just have the default policy "
  },
  {
    "startTime": "00:30:25",
    "text": "and then when you upgrade your library you get the new default policy which you know when someone else does better research than mine which would not be hard I\u0027m happy to share what I\u0027ve got if anybody wants to do it then you can just upgrade your library to get the new best recommendation as the as the recommended policy you know changes so I\u0027m happy to see this as a starting point I support publication and I would also be super happy if somebody wanted to immediately revise it because hey they\u0027ve got better data Thanks hi this is Shane Kurt so I find this topic endlessly fascinating and I basically agree with everything I know just said which we don\u0027t know basically what the right approach is here but this seems like a really good one but we also need to be humble and be ready to change it because one thing I think that a big piece it\u0027s missing is that we haven\u0027t heard from any Crypt analysts about this I think there may be strategies that can be used in terms of getting the end user to do certain kind of behaviors by getting them to make certain patterns of query to make it more easy to identify them like if we can if we can convince the client to send some queries that are on the edge between our block size we might be able to discover them I don\u0027t know what these kind of techniques are and I don\u0027t know how they\u0027re gonna extract signal from the noise so as long as we recognize that there may be attacks like this that we don\u0027t know about that\u0027s why I think experimental is probably good for this as long as it doesn\u0027t get in the way of of implementers actually using it because frankly we are being experimental here where we\u0027re going into areas we don\u0027t have really good recommendations so and that\u0027s it and a final minor thing I also because of the packet count considerations I do think we should tweak tweak the block sizes just a little so we get as much into into the packets as we can I don\u0027t think it I think it can only make it a little bit safer and even if it doesn\u0027t make it safer it\u0027s because getting in which direction or I think we should make the recommendation 500 byte block sizes so we can get three in a single and a single 1500 by Ethernet packet it\u0027s not a big deal of it but we really three had a discussion yesterday because stuff so there\u0027s crypto overhead in each packet and so you need to account for some amount of cryptographic overhead when the thing is encrypted so we\u0027re talking about padding the clear text size up to roughly 1,400 if you get three four sixty eights you get 1402 and that leaves you a little bit of room below the common m to use that people encounter for your crypto overhead cool unfortunately I was looking for a picture yesterday but unfortunately nothing really significant happened in here your year four six eight and also there\u0027s just a bass line in London with that number so Stefan got to be a speaking I think that the document with all its advice and strategies basically "
  },
  {
    "startTime": "00:33:25",
    "text": "okay and we should move forward if we don\u0027t have but if you don\u0027t have a FC there is a risks at implementers will start to design your own adding strategies which is almost certain to fail because it\u0027s not obvious in the document we have data we just have salty code analysis we have data thanks to D K G so we can be reasonably confident on any weight better than the strategies that people take out of the manifest type date so I think we should move for water yes I will send a with you okay that was the next thing I was gonna ask for it so a couple of questions I i we are I believe the experimental idea is probably the best way to go forward because we do have some go ahead great comment to that I think that it\u0027s actually required because if if the kgs work is actually no me if to the draft yeah and I think we would need to go to experimental because it sounds trick talking my goodness exactly for that presentation yeah I think we\u0027re people are going to experiment and see what is the best policy and that kind of thing so unless anybody finally opposes that I believe that\u0027s probably the best way forward on that and you know the the topic of the sort of merger was more of just a you know it wasn\u0027t like oh we think this is the the right answer but we see the difference you know 70/30 is a very simple straightforward document and and this is definitely something at some point down the road as this thing connected may be sort of you know coalesce as you could sort of see that happening where the implementers had like just one draft to basically sort of build and sort of you know and here\u0027s like sort of the best way to sort of attack it but yeah definitely it was more of a discussion point just to make sure people are sort of paying attention this morning sort of thing so and and so I did hear from Stephan he agreed to review it we\u0027d like to get actually a few more folks to review if we can have some show of hands so folks to review so I see Sarah dkg I see mr. Lawrence I see Christian who\u0027s in the back there Shane Paul can you I\u0027m writing these down as well although floor yeah so way in the back okay so I appreciate that well oh it was um Sarah Christian Lawrence dkg Shane and whose way in the back I know Oh fair way in the back so and we can we can hold them to do it sort of thing so but yes we I do like where this is going and so I think with the wisdom clean up and folks sort of addressing some of the to dues yeah we\u0027re looking pretty good so mr. Hartigan yeah Wes vertical us see you know once thought that just occurred to me is that Indiana sup we\u0027re about to try and push forward all bunch of stuff that\u0027s gonna change sort of the possible packet sizes so trying to pick a sweet spot may yet change this time doesn\u0027t so if that\u0027s your point another reason Heskey do you know peanuts out people "
  },
  {
    "startTime": "00:36:29",
    "text": "okay okay actually I have a question for Daniel so the Dracula that is listed here does that include the methodology that you use to generate the graph so what\u0027s linked there is a set of presentation slides which does include in sort of presentation format but not in a textual format I would be interested in having enough time to write this down in sort of like a more sort of la techie formal paper that describes it but it does describe the formula used for the follow up cost the formula used for the bandwidth cost and how the combinations were done in some visualizations of the underlying data so it includes a bunch of that stuff but it is in presentation format and not in like a draft format like what we would be used to seeing given that we can do SVG I hear in RFC\u0027s maybe I could put it into an RFC draft or something but I\u0027m not like I have a lot of other things to work on right now so I\u0027m not about to do that I was just thinking in terms of people who want to try and replicate the measurements yeah if there\u0027s anyone who wants to try to replicate the measurements I have source code I can I\u0027m happy to give you a copy of maybe I\u0027ll even just clean it up and publish it because I think that would be useful if you\u0027ve got data if you run a recursive resolver I can give you a specification for what kind of data I could run the code on and you could just give me the data I only need counts of the packet sizes queries and responses correlated without any other information I don\u0027t want any other information so if you run a recursive resolver and you want me to run these experiments on your data talk to me I\u0027m happy to do that and we can have a second data set if people are interested I\u0027m also happy to have people take the code and run with it and do their own adjustments thank you thank you exam so I believe a Christian I believe we\u0027ve got a few good morning so I have been walking my name is Kavita ma I\u0027ve been working on quick add on DNS privacy for some time and I\u0027d like to present here the work we did on DNS of a quick just a short fan first a minute who are who knows about the quic protocol what it does and how again cool so yeah so the quick "
  },
  {
    "startTime": "00:39:32",
    "text": "transport basically the ATF is summarizing a version of quake which is an evolution of the the work done by Google before the up the difference between quick and transport like TCP or TLS is that quick does pretty much what TCP and Tiras do but it does that in a single implementation which is typically implemented inside the application as a library that allows for a lot of flexibility and arrows a lot of work the two functional difference between say TCP TLS or TCP and quake is the availability of zero oddity transmission in some cases and the availability of parallel transmission so that you can have multiple streams so for example if you are doing a GPIO quick you can use open one stream for one HTTP request and also stream phone also one and the answer can come in parallel visitor being one waiting for the other so basically what you get is is a high-performance transport that incorporates the best of what we know about TCP so far and this business of parallel streams which is pretty handy when you have a transaction based protocol like DNS so big figures zero OTT on resumption that\u0027s useful for a DNS transport because a classic problem with say DNS or TCP is the fact that if you have if you maintain your connection too long you create a lot of overhead on the servers if you make them too short you create a lot of overhead again because you have to reestablish them what you get with availability of zero RTT is that your policy can be much simpler because the cost you pay for a reestablishment is much lower you don\u0027t have this overhead of waiting for the handshake to complete before you can follow the query you can followed it immediately and so it becomes easier to do a policy us as well in something something complex about I have to wait a long time or I have to do some good if you get it a bit wrong and you cut it too soon it still doesn\u0027t matter very much because you can reestablish it very quickly the other feature is head of queue blocking so head of crew blocking is the idea that if you lose one packet say in TCP you will only deliver the packet of are "
  },
  {
    "startTime": "00:42:34",
    "text": "transmitted after that after the packet that you lose lost was corrected because TCP effective is a arise all those transmissions it turns out that when you do dns the DNS traffic is very bursty I mean that the process by which queries are generated is very bursty like cows don\u0027t come one and then one sometime later etc they come in small batches so if you have a small batch and you lose one part of the batch then you are delaying the whole batch while if you have this parallel processing that quick enables you can just repeat the one that was transmitted that one gets delayed because that\u0027s we corrected but the also one can be processed immediately and with an immediate e and that\u0027s a big win that gets you effectively what you get with UDP otherwise you have a retransmission efficiency well that\u0027s the difference between it\u0027s basically on par with TCP as of modern TCP selective acknowledgment etc but it\u0027s better than UDP one thing we notice on UDP is that the retransmission process of UDP is end to end if a query doesn\u0027t get responded to in some time you retransmit it that sometime has to scare with the end-to-end processing of the query so for example if I do measurement on a amazing client I observe that several queries will be answered immediately because I know cache of the resolver but many of them is typically more than half I have to be sent over the network and the answer from the recursive resolver comes after say hard without 200 milliseconds and that means that your UDP timer has to be long enough to allow for retransmission after to a low for these long processing at the resolve of if I get to answer on the other hand if you do something at TCP or quake your retransmission can be as short as your RTT to the resolver so the retransmission with TCP always quick is much more efficient than the retransmission with UDP and the next thing is the long messages if the message is larger than the MTU [Music] with UDP you basically after the strategy of falling back to TCP and that is not a problem is quick because quick like TCP suppose message of arbitrary length in fact we have a problem that "
  },
  {
    "startTime": "00:45:37",
    "text": "the length of quick is too arbitrary because the theoretical length of maximum length of message was quick is something like a 2 2 over 64 which is basically means that you have no limit and that means that we could offer DNS responses which will be say a gigabyte that may not necessarily want to do better security of quake is too basically one quick does a normal handshake for the first connection and as your OTG and check for the resumption so it provides you the same kind of basically proof of origin bye-bye tree we uncheck as TCP does it also provides you the same encryption and authentication processes as TLS in fact the implementation of quakes that we have now the specification relies on theorists 1.3 and a EAD so basically the same as a ste res 1.3 so that that\u0027s the features and those features are interesting if I do a comparison table of the the values transporters that can think of and I look at those figures that I want for my transport ok I see that basically the collection setup time is the best with with UDP because there is no connection whatsoever all the also transport of a handshake is all TCP handshake or the TCP and TLS handshake or in the case of DT as the original handshake to establish there the session keys now quick as that patellas are just once and then you can do the oddity with you so quick is not quite as fast in connection setup that was UDP of course but it will be most of the time as good as UDP you can have also the next video is head of queue blocking which is really a pain for TCP and TLS because of the budget nature of the arrival of processes so that is solved with UDP itself with details it\u0027s always quick it\u0027s not soft with the other one retransmission efficiency I mean basically here the the classic end-to-end retransmission gives you worse performance than something based on an actual organised retransmission and log messages where the UDP bears protocol of to fall back then in terms of security you need to have the three worst handshake and yes you can bring back the to erase and check with UDP you should have a quorum for UDP plus session cookies which will give you this the truest handshake but then "
  },
  {
    "startTime": "00:48:38",
    "text": "in that case if you do if you know session cookies in UDP then you lose the connection setup time issue because I mean it that means that you have to pay for that handshake add encryption so basically if you look at those five columns you see that quick is the only one which is green all the way and that\u0027s that\u0027s nice sales pitch isn\u0027t it yeah now let\u0027s let\u0027s add a caveat to that nice sales pitch okay so that nobody panics hey all of those don\u0027t happen not happen to be useful very often like the connection setup times it happens once every 200 transactions about in the classic TCP saying so it\u0027s largely amortized the head of queue blocking it only happens when you have a consumption of a packet loss and a burst so it\u0027s basically based on on your packet loss sweat which is not very very high on a good internet connection we transition efficiency is servicing it only matters if you are actually losing packets and long messages the best statistics I have on long messages is they happen on once every 1,000 transaction or something like that that you have to actually use the truncation because of the message is too long so if instead of doing that you plot the response curve of the voice transport given the same load there are almost same when those difference are nice difference but they are almost same actually for disturb to recursive because the DePalma taught her battles most there is the latency between the stop and the recursive that latency is typically very small and so all that gets compressed and you don\u0027t see that and the difference are lower than the difference investments time between the chain of processing that happens between recursive and authoritative which means that for example what I conquered there is that of the two scenarios that we have quick is a nice fit for the sturb two recursive scenario but most of the potential gains are in the recursive to authoritative scenarios where all those parameters becomes suddenly much more important because you\u0027re on a wider network with much stronger art et filli might be I propose doing something very similar to quit before quick my big concern there was making the resolver entirely stateless in that the way that you sir the way that you set up "
  },
  {
    "startTime": "00:51:38",
    "text": "a large DNS resolver is that you have a bunch of independent machines and you do not want to have any state in the system whatsoever because every piece of state requires you to switch packets along the same path so the big showstopper for me for TCP and for any TLS system was going to be that if I had to guarantee that all the packets ended up at the same server the cost of my implementation of a very large resolver was going to explode by an order of magnitude so for me the big advantage of doing quick is I can have a completely ident resolver I don\u0027t really care at all about the resolver to authoritative loop because the way that you do that in a really large farm is it\u0027s completely decoupled except in the case that you\u0027re doing a request for something that you don\u0027t have in cache if I don\u0027t wait and you know I have a cache of DNS record requests I go when one of those things timeout I will prefetch before it times out I don\u0027t wait for somebody to ask and then do it on the demand cache load so my entire interest is actually in the client to resolve a loop the resolver to authoritative attack is out-of-band and not in the critical loop yep so I\u0027d like to see on the quick side can I do that ident completely stateless loading I\u0027d be sure you should be able to it might require a bit of trickery and a deeper understanding of quick than I have already but that to me is the real payoff yes in fact that\u0027s that\u0027s a very good question if you look at the feedback from deployments you see that very few people deploy DNS about here is our TCP later on Tara\u0027s and the usual reason for that is because running a server with a large number of tiras of TCP connection tends to be much more expensive than running a server who is just forcing data grams one of the question that as phil says is whether we can have an implementation of quick that reduces that load on the server and the motivation for me is that I believe that will in any case need to do security so we\u0027d have to have some state if only to manage their the encryption and things like that but can we minimize the cost "
  },
  {
    "startTime": "00:54:38",
    "text": "of having that state and the beauty of quick there is that quick is implemented in application processes as a library and that means two things that means that you can experiment with different implementation so that you you can very quickly change your library you don\u0027t have to wait for an update of your underlying operating system to get a change in your stack so it means that you can be much more agile and try new stuff and the other thing is because you do that in a library you don\u0027t necessarily have to have a one-size-fits-all API on your transport so you can study the API TOS transport in such a way that it does minimize the handling of state and the cost of handling state that phil was mentioning so suppose I anger so currently as quick as specified so echoing Phil\u0027s point that I think that the stateless case is very important that resolver should be had able to handle DNS responses in stateless way so the current way that quic is specified is that one UDP packet it corresponds to one quick packet and so encryption is done at the quick packet layer so what that what that means is that the first UDP packet which is the TLS 1/3 client hello so it is the currently specified it\u0027s called the client initial packet has to be in a separate UDP payload from the from the first encrypted packet which is the route is which is a request yes so since it is across multiple UDP packets that necessarily implies that we have to have some state for some amount of time to handle that transition between payloads so there\u0027s a current proposal out there and I\u0027ve also echoed this for having being able to shout multiple quick packets into one you to be payload and that would be really useful for this case and I would really encourage quick yeah take a look at that absolutely and in fact that was one of the big motivation we had to start these DNS of a quick effort was precisely to see what that tells us about the figures we are missing in quick that we should have and what what you described about being able to pass several frames several encryption frames in a singer\u0027 UDP packet is clearly something we might want to explore even sweat Google I was mostly gonna echo the fact that yes I think there\u0027s already an open issue on the github for you know trying to do this and I am fairly certain it\u0027s going to happen partially because it would be beneficial for HTTP applications as well even if it\u0027s a minor optimization and so it seems that seems valuable and then the other thing I was gonna say is I wouldn\u0027t discount the fact that the "
  },
  {
    "startTime": "00:57:39",
    "text": "head-of-line blocking advantage versus TLS over TCP when I just pulled up some tail latency numbers 95th percentile on DNS resolution even today is like not too terrible but like you start getting to like 97 and things go like very very bad yeah III have summation curls and what they say is that basically your curve if you if you take your classic community frequency distribution curves and you see they\u0027re exactly the same up to the 95th percentile for all transports and then you do see differences and if you assume a 1% loss rate for example in both direction you see that the difference happen like in five percent of the case they between 95 and 98 TCP will be slower than UDP because of ahead of queue blocking and then from 98% a 98% part of the curve to a hundred percent UDP will be slower because of inefficiently transmission that makes sense that\u0027s Sam so we get hopefully the benefit of both world and and quick will be on top of both of them is Ben Schwartz jigsaw I my only concern about about this is that what I really want from this is to be able to to multiplex this with other services over quick inside the inside the crypto context inside the ciphertext stream if I have to run this on a separate port for example from from other quick services then then that defeats a lot of the confidentiality advantages in particular it allows network operators who already interfere with DNS to continue interfering with DNS by forcing clients to fall back to insecure DNS so it\u0027s important to me that we do we figure out a way to do this that doesn\u0027t just for example run quick on port UDP 853 know nothing what do you be 52 B but we can discuss that it do you want me to respond first to ban sure and that\u0027s actually one of the question that the there is a use case that says that we should do DNS of our HTTP for various reasons okay and and yes then if you define you it DNS of HTTP you innovate DNS over HTTP over quick whenever I should EP move is about quick and that\u0027s the thing that gives you the maximum stealth because you it\u0027s in differentiable from you your HTTP "
  },
  {
    "startTime": "01:00:39",
    "text": "traffic and you can do that and if you assume that your the a that one of the HCP cells that you are contacting can also be your DNS server then then you get that kind of stealth I have there\u0027s a flipside to data and the flipside is that if you do that then you require DNS server to implement a complete HTTP stack which increases the size of the code the efficiency of the code and the attack surface so that\u0027s a trade-off and we have to experiment and almost end that trade-off I\u0027m not I\u0027m not saying that we should require HTTP implementation I\u0027m saying I want to be able to multiplex this within a quick context in parallel with HTTP optional that that will be basically something that we need to do in the quick walking group if we were to do that the way to do that is to have to set up the quick connection that supports multiple lb ends and to have a mechanism in the quick stack to identify which friends belong to what LPN that\u0027s something we may want to do in the quick walking group I\u0027ll beat that now Alex may offer by the way I like the title of that slide quick over DNS it seems like DNS becomes the new super substrate for yes and for quick to the point of the various proposals that we see floating around here I\u0027m talking about pause and regarding HTTP Dennis or HTTP you a DNS of course yeah so it reminds me a little bit of the RTP encrypted RTP singie we had like ten years ago and Justin I think so so I think we had twelve twelve versions of how to do encrypt it RTP and that was that xkcd comics that said oh we need to do a thirteenth one yeah so I think we should like invest effort into agreeing on to a limited number of transports yeah I know that there\u0027s always market yeah oh yes relevant to the IGF but so I\u0027m a little bit careful about this is a smaller group and if we invest all the effort into a single transport that\u0027s maybe more efficient rather than rolling out three or four transports on the other hand I assume that the implementers of the potential software that would use DNS Oh HTTP or HTTPS of course they have much more resources than we probably have in the "
  },
  {
    "startTime": "01:03:40",
    "text": "working group so yeah I think you\u0027re reading the notes I have here so okay okay so we\u0027re always going to get to that once we got through the line sort of thing so spanger so most existing deployment these seven ARS deployed in stateless mode and it\u0027s like request response immediately and we only deployed and ours the so I mean doesn\u0027t quick seem quite a heavy weight for that purpose like that is we\u0027re trying to solve a were denied a shot of a quick server now into a DNS server and then that seems heavyweight that we\u0027re trying to solve all the problems at once I would actually like to see a solution which kind of is simple and works for the DNS case as well that is like I am a stateless server and I want to not make that many modifications to my DNS server to actually have encrypted transport so in terms of yeah like quick exists it provides the properties that we want but it is like it provides a whole host of additional properties that we might not want not sure what we\u0027re gonna use them for but well and and basically what I the answer to that is implementation experience yeah and at this stage in the game there are a lot of questions of efficiency of servers efficiency of the implementation etc and we can have a theoretical discussion or we can have comparison of implementation and how it was after that oh hi my name is Andrew Sullivan IP so let me just preface this by saying I think that quick is pretty promising for for a use cases and I I\u0027m pleased to see this work but I I\u0027m a little nervous about the way you find this the sort of stub to recursive versus you know recursive Zoar forwarders or whatever to other stuff and the reason I\u0027m I\u0027m nervous about it is she goes back to actually when we made that decision this working group in the first place when we decided to tackle things that way for for privacy considerations it was really a tactical decision that had to do with the kinds of things that we figured we could do and who is going to be private and so on if you think that the purpose of quick is really just to enhance privacy then this would be a reasonable split once again but I don\u0027t think that that\u0027s the only advantage here and I think that that the plain fact is that if we embrace quick what we\u0027re doing is we\u0027re introducing a new transport for DNS yes I\u0027m very very nervous about splitting the DNS protocol kind of permanently into the stub to recursive versus everything else on the protocol doesn\u0027t really work that way and there are a number of ways in which in which the "
  },
  {
    "startTime": "01:06:41",
    "text": "symmetry of the protocol is lost if we start we start making that kind of division yeah so I would be uncomfortable actually with with tackling things in this way and I would really actually much rather just say okay new transport we\u0027re gonna we\u0027re gonna do the whole thing that of course now creates like a whole bureaucratic problem because I don\u0027t think this working group is very well chartered to solve the problem that way but but that\u0027s just you know sort of ITF mechanics and surely we can work around that but I really am quite uncomfortable with this split yep yes and when I do measurements of performances okay because I mean the large part meant down to motivation for Quake security and performance the when I do measurement of performance it appears that if you look at the distribution of your query response time about less than half of your queries of served by your cache of the resolver because of TTL management and all that the other half obviously you see a tail of response time that indicates that obviously it has been going to the internet to find a query recurse at cetera and those have a much longer delay so if we think about performance we have to consider the reference potential performance gain on the wide internet scenario which we\u0027ll be your points basically the transport for DNS and I think that people understood the issues with UDP retransmission because the UDP retransmission is very inefficient it\u0027s typically you have long timers and because if you do this resolution for the internet you end up with a chain of resolutions like like 7 CMS of some CDN providers and things like that Amina look behind you and and that means that you have many opportunity to lose a packet and go into this inefficiency or further Commandments port so there is actually a strong motivation for having something more efficient on the white internet at the same time one of the resistance to that is that you if you do the natural choice today would be to use TCP then your servers become very inefficient so you have this trade-off between efficiency and performance which is really what we want to explore them so there\u0027s a small firm mrs. Andrew "
  },
  {
    "startTime": "01:09:41",
    "text": "again that there\u0027s a small problem in the way you just described that because you\u0027re only talking from the perspective of one side of that of that communication but but the problem is of course on the other side the servers have a different set of trade-offs with respect to efficiency and overhead and all the rest of it yet on the retransmission things are actually non-trivial for the server side as well because of course under conditions and you know given where I work but I\u0027m not allowed to talk about them the the plain fact is is that you know that hurts on the server side as well so I think that there\u0027s a whole bunch of considerations there that are that that really actually need to be analyzed at this at the outset because if you do this only in the first in the in the first hop of this of this potential hop-by-hop protocol you can make decisions in there that are not going to are not going to carry through maybe that\u0027s the right answer but at that point we\u0027re talking really about a new protocol I\u0027m not sure we want to like accidentally create a new you know DNS this now kind of by it you know fall into it no you\u0027re right and as I said I mean the performance issue the performance difference at the at the first hope basically commensurate to the latency of the first hope and to the frequency of errors so that means that the end up to be a very small part of the overall problem Phil Han Baker again so responding to the previous but one speak somebody did actually propose doing a simple UDP transport that was custom to DNS in the original meeting proposal and the reason it was rejected I think it was three years ago now was that this was work that was very important and had to be done in nine months yeah which is one of those you know spec smells whenever I\u0027ve been in an organized standards meeting where somebody has said we\u0027ve got to do this fast so we\u0027ve got to do it sloppy they\u0027ve never ever met their schedule the reason that I prefer quick over what I propose now is twofold one of them is quick exists people are going to do quick over there now so it\u0027s people are going to do dear let\u0027s have a quick yeah yes actually people are going to do quick over DNS sorry as well but yes quick is quick is rapidly becoming the new SSH yep it\u0027s the currently it is going to subsume everything and so that\u0027s one reason the other reason is that there are very few people in IETF who really are going to propose a new cryptographic protocol if you look at the number of proposals that have been accepted in fact the number of proposals "
  },
  {
    "startTime": "01:12:41",
    "text": "has been made there are very few individuals who\u0027ve ever proposed a new cryptographic protocol people are not happy doing that you need an incredibly large ego you know I have to do it has well you know believe it or not you you propose a new crypto protocol you are going to get a huge number of knives in your back because you are the target and very few people want to do that you know you know you\u0027re right yeah say is it there is a high bar for new catalytic protocols there is a lot of analysis going on in the current ers one point we track it\u0027s much better to reuse what we have rather than to guess that you might be better now the thing that the subtle part that original character I think that what you\u0027re going to find following over all Anderson we are going to effectively change the DNS protocol no matter what because the DNS protocol is now what 30 years old the the spec is awful it\u0027s younger than me you know it\u0027s it is written understand yeah it it is worse than you typical draft and there\u0027s a lot of things he doesn\u0027t actually say that nowadays you would have to state and one of the things that is implicit in the protocol that has been imposed as an operational constraint but is not there as a protocol constraint is the length of responses the rent of your requests is effectively bounded because the request format well they blew it so you can only effectively have one request yeah the protocol allows multiple requests but because of the way the protocol is written you can\u0027t actually use that so it\u0027s one request per packet and that limits the size of the request the way that we\u0027ve limited the size of response has been purely that the infrastructure will blow up if you try and create DNS record sets that are too large and one of the things that you\u0027re going to end up doing regardless where you use TLS or quick or whatever you\u0027re going to take away that limit and that limit has to be there because we\u0027re talking about bootstrap for discovery and so you do not want that infrastructure accepting indefinite unbounded length Palos actually to think that the protocol limit is about a megabyte or whatever in quick you know DNS you could in theory have a DNS record set that reaches about a megabyte because you can have 62 to the 16 with response records and then each of those can be about here okay so it\u0027s just something that we are doing that we should be doing different I think that what I want to see in order to "
  },
  {
    "startTime": "01:15:41",
    "text": "understand quicker but it\u0027s IDNs over quick I\u0027d like to see some some documents that actually give me the wire line and what it actually turns out to be I like cities see some traces and then I\u0027d be able to understand it\u0027s a lot better because at the moment I had to read the quick documents which are a moving target and then I have to read the DNS documents if I saw that in a document I think I\u0027d understand it better okay all over go Amazon Thank You Christian this is the second time in this working group that I start questioning this is the existence of reason for DNS and basically what is DNS is it the wire format is it the protocol and actually it is a wire format with two protocols embedded in it it is the question it is the end of the way we select between the two protocols is by use of the Rd bit and what you are exactly pointing out here there is a difference how you communicate with authoritative server versus how you entities communicate with the recursive resolvers and so I think this is perfectly reasonable that we have different solutions on these different hops so I agree with you and I disagree with my friend Andrew ok and did Lawrence I agree with my friend and that\u0027s why I got up but then also that last point the Phil just made I want to speak in support of that would be quite useful to actually demonstrate hey this is what it\u0027s supposed to look like on the wire but the main reason I got up was to say that my own interest in vienna\u0027s over quick always started out right from the beginning even though having responsibility for both very large authoritative server operations and recursive server operations that it was the authority that drove my particular interest and I think that\u0027s starting to you know form people\u0027s ideas around these are separate communication paths even though that there is a conceptual note of truth to that I don\u0027t think is really useful to split that out as being two different ways of looking at the DNS and that okay that we\u0027re gonna we\u0027re going to stop after they step on so I I have some things I want we want to talk about on this side so so anyway I think Andrews right Alex my over we have too much time sitting discussion so interesting well thinking about it again I think that the quick awareness of course is very interesting because what we see in other areas of protocol design it seems like TCP it\u0027s like coming to be I\u0027m nothing towards the n-well to use my degrees in the next "
  },
  {
    "startTime": "01:18:41",
    "text": "coming years so it\u0027s quite natural that we also look at something that\u0027s not TLS so I think it\u0027s an interesting thing and going ten years into the future from now I\u0027m really curious of whether that will be the dominant protocol for DNS or see us I would rather bet on quick or DNS of course thank you Stephanie Australia speaking I won\u0027t go into the details of DNS server quick because I don\u0027t know quickly enough on anyway my remarks are also for DNS other HTTP if we have three possible solutions of DNS encryption DNS server to Adele\u0027s DNS workweek DNS for HTTP which will create two problems one is a practical problem the resolve well the DNS client will have some difficulty making the right choice which one to use in which so we need meta guidance for the client on the other problem would be a marketing or product relations problem what message do we want to distribute outside because we face a big deployment problem I mean it\u0027s not enough to write RFC on implementation we need to have some deployment then we have to tell people okay you care about privacy use this on that and if we have three different solutions from the IETF community manager hater stop unless it\u0027s quick and that\u0027s just quick every quick so it\u0027s very quickly so set everything aside I think whatever we do with regards to a new transport for DNS yeah we\u0027re gonna round the us over UDP on port 53 yeah for about as long as we run that 64 exactly so yeah then there\u0027s yes thank you for all that the part of the read we ask christian is sort of presented but mostly as a different sort of privacy thing our big thing though is my big concerns were you know quick is still a moving target right so we\u0027re sort of trying to hash out a lot of things that they still haven\u0027t kind of hashed out in the protocol itself and I know in reading the draft there\u0027s a lot of questions introduced and things like that that are sort of framed in there so there\u0027s still a lot of work in progress and and I don\u0027t I don\u0027t I feel like we\u0027re trying to get ahead of the quick horse kind of thing I I think you know party you I think it\u0027s a little premature in some ways or but part of the reason for doing that now is to inform the development of the quick yes so yes your your district yeah you\u0027re trying to basically help them if you\u0027re gonna do quick and we want to do DNS over it you know please consider these considerations sort of thing which is I believe what a few "
  },
  {
    "startTime": "01:21:42",
    "text": "things that sort of came up I think you know I heard earlier sort of thing yes I just I I think it\u0027s early for us to sort of sit there and say oh let\u0027s go deploy a bunch of stuff over this oh no yeah I think we basically what I mean success for these in the short term would be to have experimental implementation doing measurements and comparisons and I would expect that to happen in the next six months about okay once we have this measurement and comparison then we would have several iterations of the twelfth yes doing that okay so I was Michael here the presentation here was really to get feedback yep and and get people to cooperate and send us their requirements and in particular a damage like to have cooperation one people running big server yes about what is the cost for them and what are the buttons yes and I think that\u0027s what I was saying and I just didn\u0027t want us to sort of get away from that and sort of go into the minutiae of the various things that you know may or may not actually be you know an issue in you know a couple months as they sort of the quick draft sort of set the discussion about whether we should have one version of quake or one bhismadeva something that\u0027s something I would expect happen by say London yeah yeah yeah yeah okay Alex may over um while it may be tempting to solve other DNS issues while adding confidentiality each wife is not a working group to do this that\u0027s what in the current Charter so if we do something like this we would I suppose require a significant preacher during that yes and I I don\u0027t think we\u0027d actually couldn\u0027t felt that this was something that we would actually bring into the group there was something good to discuss you know as sort of another sort of you know here\u0027s someone out you know here\u0027s another sort of way of attacking the privacy our ad is gonna stand up Oh glorious one yeah Terry Madison responsible ad it\u0027s great to have the discussion the discuss a discussion absolutely does not stay here in here or be siloed here exactly much much broader encompasses some of the things that Andrew mentioned some of the thoughts that I have as well which many may not agree with and it\u0027s from an architectural sense and from the understanding of being a root server operator so there\u0027s an expansion here great to start it here great to have discussion but keep working keep thinking thank you exactly we there\u0027s a there\u0027s a lot of the solid you know minds of people doing privacy and DNS and stuff here it\u0027s a good place to actually have sort of some of that discussion but it\u0027s not that it\u0027s not going to be the end end result right so we figured this will sort of go out into the creek groups into other places and you know you guys will sort of you know sort of seed the seed the IETF with with good ideas hopefully or just quick over DNS yeah okay don\u0027t okay I\u0027ve got these "
  },
  {
    "startTime": "01:24:46",
    "text": "slides from warm so I did get the slides from Warren and we\u0027ll try to figure out how to get those in there and we\u0027ll show those they will free that out after the mr. dkg yep hello I\u0027m DJ G so this is a presentation about some this is sort of informational about something that I\u0027ve got working and would be and it\u0027s functional so I\u0027m looking at demultiplexing DNS server HTTP this is sort of motivated by been Schwartz\u0027s comment at the mic earlier maybe was motivated by the same question that Ben had so currently we had these two different protocols they\u0027re tunnel under TLS there\u0027s HTTPS which has plaintext HTTP gentleman or TLS on port 443 and we have DNS the tcp variant tunneled under port 853 so I want to ask what would the network adversary do if they don\u0027t like protected private DNS the answer of course is that they were just blocked port 853 so I\u0027m looking at that and said how do we defend against that and then the obvious arms race we simply want to squat on port 443 so that the network at adversary can\u0027t distinguish between our traffic however if you have your main server running on a well-known on an easy name but people for configuration people like to type that stuff into the web browser and then you get you know so like this this is a web browser that\u0027s looking at a web service running on port 443 HTTP this is a real thing it\u0027s out there and hey why can\u0027t we do the same thing also on port 443 this is a DNS query over TLS on port 443 I don\u0027t know can you guys see my pointer is there lasers shoot you guys with lasers yeah so port 443 TCP right there so this is the same server running at the same time nothing has changed and it\u0027s simply doing both HTTP and DNS over TLS so how does it do that well the difference is that we look at the clear text packets and we just do multiplex on them turns out there\u0027s a pretty easy proof that for HTTP 1.1 and DNS you can guarantee that the clear text if the initial frames are distinct from one another the proof is in the draft but you\u0027re welcome to read but you can distinguish between them trivially here\u0027s the algorithm look at the first fourteen octet if any of them are in this range then it\u0027s DNS otherwise its HTTP not too hard easy to implement in fact so is in the moment that even I could implement it it\u0027s functional it\u0027s in Debian testing it\u0027s running on that server that I announced so this is just an attempt to get people thinking this is an easy thing to do you might be totally horrified by it but "
  },
  {
    "startTime": "01:27:48",
    "text": "I have some explicit caveats so it\u0027s a demultiplexing port TLS connection not per query so we\u0027re not going to interleave DNS n HTTP on a single query it only works when you\u0027re working with HTTP 1 one fortunately we can distinguish between 1.1 and http2 based on the ALP n on the server side so the server can also offer HTTP to the server that i\u0027ve got up there right now is not offering h2 although I plan to do that and so the AL p.m. will be multiplexed between 1 1 \u0026 2 2 and inside the packet will be multiplex HTTP and DNS by the complicated algorithm I just showed earlier for demultiplexing with eh - I actually recommend draft Hoffmann or something whatever comes out of draft Hoffmann the dope work I think would be the way to go and that also lets you do on a single on a single TLS connection you can do the multiple you can do multiplex separate queries so this is not an in any way an attempt to override that I\u0027m just observing that we can do this right now in fact we are doing it right now or I am doing it right now and if you clear my server you will be - all right one concern is that this kind of inspection might constrain the future development of stream based DNS or of HTTP 1.1 my understanding from the HTTP bist folks is that there is no further development of HTTP 1.1 so that shouldn\u0027t that kind of constraint shouldn\u0027t be a problem I just heard from West today that there may be some changes to the DNS formats and I\u0027d like to hear more about that I want to make sure that if this gets more widely deployed because hey it happens to already be available in Debian that we\u0027re not going to block that if we are I will rip it out of Debbie and I don\u0027t want it to to block DNS server TCP and of course if you try to combine this with some additional multiplexing the approaches are unclear so that\u0027s your horrifying idea for the day it\u0027s functional okay you add me question Reitman dan I was with you until you mention LPN because if you have a different LP N and that means that means that basically you adversaries can use that so right thanks so LP n is for distinguishing between HTTP to and HTTP 1.1 oh sorry I just heard a no shout it out from the audience in the context that I\u0027m talking about here the adversary can look on the wire and they can distinguish the adversary can distinguish between HTTP 2 and HTTP 1.1 it\u0027s the DNS server TLS connections will offer either no a LPN or the same LPN that an HTTP 1.1 client would give and so there is that the point there is that as long as a LPN is in clear-text "
  },
  {
    "startTime": "01:30:50",
    "text": "so it allows them to do some nasty stuff agreed so if you have a difference in the LPN then you can have the same kind of evolution of blocking and upward left I fully agree that\u0027s why I did not explicitly did not ask for a new a LPN choking because that would defeat the purpose of right the LPN will become the the port that the network adversary will block on so my point here my demonstration here is that this makes DNS over TLS indistinguishable from an HTTP 1.1 client it does not prevent the server from also offering HTTP 2 to an h2 client but an h2 client will be distinguishable by the in network adversary from an h1 client yeah I mean I frankly I like poor suppose or better of it ok so my point here is this is not it count the in competition with false proposal at all so this is a demonstration of something that works today that is functional which is not the case for pass through puzzle no offence Paul but this works today it\u0027s out there and it works to make your queries indistinguishable from HTTP 1.1 queries Paul\u0027s proposal is a better proposal it will work better for h2 it\u0027s it\u0027s demultiplexing at the pull request layer rather than perched per connection so there\u0027s all kinds of reasons to prefer Paul\u0027s proposal except for the fact that this is happening and functional today that\u0027s nice but I think you\u0027re overselling it a little bit because when you say on this signal that\u0027s not quite true well those traffic analysis and there\u0027s all kinds of other things I think your traffic pattern is very different and so your traffic pattern it is easy to find out you can find it out but you can\u0027t block it the way you can block based on ports today with the ports you can block it before the connection is even established you can\u0027t block listen liten to unless you\u0027re willing to block the actual endless room to block port 443 no but you could block that on the first packet because you are combining that with your budding requirement that provides a very clean signature that your message is exactly 128 bytes I haven\u0027t combined this with a padding requirement and you could combine it with a padding requirement and then you\u0027re right then there\u0027s a distinguishing characteristic and that\u0027s a concern we should think about our chunko chunko here thank you for your slides no presentation let\u0027s continue the discussion about the indistinguishability of the speakers except for a LPM the TLS which is another concept called server name indication which despite the huge work by Christian is still unencrypted and I can\u0027t think of a possible tokens in the surname "
  },
  {
    "startTime": "01:33:50",
    "text": "indication in this use case that I will not disclose the purpose of client connecting to the service and your draft doesn\u0027t tell me either but that\u0027s the concept of hiding the server name in this case so it doesn\u0027t have the server name if you were to use the server that I have set up you will obviously put a token in the clear text of the TLS connection which is DNS CMR Ginette in that situation obviously a network attacker could filter on that if you are someone who wants to offer this on your own website say a normal website that is not actually dedicated to address specifically this is one that I\u0027ve set up specifically but if you put it you could do this on google.com I\u0027m not saying Google is going to do it I\u0027m sure they won\u0027t do it in fact but my but then you could make it so that the the network adversary would have to block your web connections as well as DNS connections if they wanted to do that which I suspect most network adversaries are not willing to do okay I feel home bacon what\u0027s the proposed final status for this I\u0027ve written it as an informational draft I have not even attempted to get working group adoption although I would be interested if folks have some suggestions for what the next step should be I wrote it down to document what I\u0027m doing and what I found when I investigated the protocols to see whether they were distinguishable and I wrote the code to demonstrate that it\u0027s functional so I\u0027m putting this out there to the community to make it visible that this is something that\u0027s possible and something that can be done on today\u0027s network if you have suggestions for which we should do I\u0027m all ears yeah I was I\u0027m probably going to be saying on Wednesday in the TLS discussion the set of things that people want to do on the internet and the set of things that people can do and the set of things that should be IETF standards are disjoint I understand that this is a horrifying the puzzle which is why I put the background for them the final slide that I put now and I would like to hear specific critiques of why this is wrong okay so what I\u0027m looking what what came to mind looking at this is essentially you\u0027re trying to hide your tree in a forest right yes that\u0027s what and so right now rather than picking an old forest maybe what we could do is to hide it inside quick which is a new forest that is going to be growing quite quickly and one of the things that I\u0027ve been looking at in the web services world is at the moment we layer web services over HTTP and if you look at what HTTP does "
  },
  {
    "startTime": "01:36:50",
    "text": "for the average web service it basically does one thing and that is expand the number of ports because you\u0027ve got instead of a URI you can use URI this is the port number to distinguish between web services are the same so maybe if we were to work out some way of systematically expressing that in quick language we could get two things at once one would be a way of efficiently dealing with these web services so we can get a get rid of this HTTP layer which actually for web service isn\u0027t doing you any real service and then things like this hack would no longer be a hack they\u0027d just be another way of doing it so you\u0027d like to solve lots of problems at once we I appreciate this is an attempt to solve one particular problem and you\u0027re right I\u0027m hoping to hide in an existing forest it\u0027s hard to play hide-and-seek in a bear playground where nothing has been built yet oh well Google\u0027s got a lot of quick traffic already you know Shane Kirk I don\u0027t actually think this is a horrible act I mean okay it\u0027s a hack but it\u0027s not that horrible and there are other protocols which do a similar thing there\u0027s a an SSH and HTTP Luxor which works I don\u0027t know if you\u0027ve seen it but it\u0027s also in Debian I use it on my server for the same reason which is this sometimes you can only get to port 443 right so and I suspect there are other protocols like VPN protocols and things like that which may may do similar things so I think it\u0027s I think it\u0027s a reasonable approach I think it\u0027s a good idea I think it make I think either just for shooting with yours as informational make sense or if you want to maybe looking at a more general approach for this kind of thing for other protocols as well the problem with that is that probably doesn\u0027t belong in this working group then and how many protocols do you do and how general do you make yeah I\u0027m scared of trying to make this general demultiplexing document that that strikes me as work I have other work I would prioritize above that I\u0027ll put it that way this is an attempt to document a specific demultiplexing between two protocols demultiplexers is much easier okay so Martin Thompson I appreciate that you\u0027ve taken the time to do this and we\u0027re having this discussion I have a suggestion for next steps and that would be declare victory I don\u0027t think we need to publish this as an RFC you\u0027ve already got the software running it\u0027s out there it\u0027s available to people with they want to do it as pointed out there are other things that do similar things in this space and they never came to the ITF and published an IRC either it\u0027s great that\u0027s thank you pat McManus yeah thank you but I\u0027m so I am like super excited "
  },
  {
    "startTime": "01:39:55",
    "text": "about these case I think when we\u0027re in a case where you\u0027re talking on an HP port speaking in HD PLA ALP n then the question becomes why can\u0027t you just speak so let me let me answer that question specifically the answer is existing clients do not need to be modified to use this mechanism well sure which is existing DNS server TOS clients do not need to be modified to just to do this in fact that there are client pictures that I\u0027ve shown you here this is an existing if this is not and this is Chrome this is these are unpatched clients site but then you create an incentive to perpetuate the use of those legacy clients if you will right to stay on an h1 version of this in order to move that forward and like I think that\u0027s largely my concern we\u0027re saying this like motivates the other work to specify DNS over HTTP where you can do like a really great sort of mix in kind of application of this I think that\u0027s got more long-term potential I\u0027ve got no real objections to this running but I wouldn\u0027t want to be the one submitting the docket to the document to the people who do the port registration weren\u0027t correct about what\u0027s gonna happen I ever saw so yes interesting observation so on your part that you can you bucks these this way I guess two things one is I think I mentioned yesterday this circuit does depend critical people willing to co-host web services and DNS otherwise like you see the force connection and it\u0027s like obviously DNS and they just block that s and I heard odd so um so you have to have co-hosting unless you disagree in terms of yes in terms of hiding this is the the even if the SSRI is innocuous appearing if they\u0027re if they\u0027re host only does this then this is obvious sure right okay the same thing is on wall I do appreciate this sort of the observation that these are naturally and missed it naturally distinguishable previous times we\u0027ve taken advantage of the fact that two protocols happen to not occupy the same sort of initial cocoa space we were extraordinarily sorry and so it turns out to you know a handcuffs number of them and it seems that given the relatively modest deployment at present of DNS over TLS you know I he before with this it might be nicer to have some prologue that you committed to I\u0027m not saying after like HTTP but that like the first eight bytes be something which is it which is really you\u0027re asking me to modify clients I\u0027m saying that the grams interplay with those clients is not at this place so modest that treating them is a limit as an immutable legacy is really up pretty low value proposition a yes if they were like if everybody\u0027s Universal running Tina\u0027s over TLS and now we had this problem of so you\u0027re asking me to modify DMS clients but not HTTP clients yes so so what modification "
  },
  {
    "startTime": "01:42:57",
    "text": "would HTTP be willing to accept as a prologue that would distinguish the queries from III I was in true suggesting that you registered essentially a single new I\u0027m clearly unused HCP you know like on you know hup-hup method right and then you have one thing instead of having something weird some your coincidence of the of mother robotic but we\u0027re never gonna move this forward so it\u0027s just it\u0027s Daniels half-baked idea right it we\u0027ve ever seen presented in this working group yes no I agree you know I\u0027d assumed it was about that\u0027s how this idea commune forward in some reasonable way I\u0027m saying doing that like other people I want this and two I just sort of say I mean if you really think it\u0027s important to be able to hide stuff under relation kohai with HTTP then to like chew up all that amassing space for like this web protocol is very annoying and these are much simpler in the Box when you say all this D muxing space you\u0027re saying we want to preserve the ability to D mocks other protocols I\u0027m saying to you what you think it\u0027s a good idea to have a MUX here then why is it only ready for the NHS he was good at your table I mean are you aware of other protocols which are attempting to do this exactly this kind of is exactly it\u0027s kind of muxing which is on like over TLS at exactly the same situation and exactly the same stuff about how they had this like Prolog which is distinguishable so it\u0027s like not like the only person to do this my name is Andrew Sullivan and I think I think I agree with that curve no it\u0027s not but but in a particular way and and what\u0027s happening here as nearly as I can tell is that this is III really strongly disagree with Martin that we should just declare victory and go home that\u0027s not declaring victory that\u0027s declaring defeat the ITF is over if what we\u0027re not going to do is write down oh and here\u0027s another piece of like bone that we have now encoded into the middle of of another protocol because what you\u0027re really talking about here is yet another way in which we\u0027re going to move the transport around for for DNS and and therefore the reason that that I agree with with ekor is precisely that what you\u0027ve just done is said okay well we\u0027re not gonna we\u0027re not going to publish an RFC that that documents this thing instead people are just going to do it and now we\u0027re going to debug these things in various ways and you\u0027re using accidents of the internals of the protocol as a mechanism which you determine what the transport is and if we don\u0027t even write that down then we no longer are doing any value of any kind for the Internet we\u0027re just like having meetings in various places and we can probably stay home so that is "
  },
  {
    "startTime": "01:45:59",
    "text": "why I wrote it down right so I actually think it\u0027s great that you wrote it down I\u0027m appalled that this is actually the way the Internet is going because it\u0027s the right answer for a particular use case and yet it\u0027s the wrong answer for the network architecture yes and fundamentally that\u0027s the problem that we\u0027re facing I don\u0027t know what to do about it but I\u0027m terrified at the prospect and this is the reason that I got off that we would declare it as a victory it really is Jenny a terrible defeat so just if I can if I can comment on that one of the reasons that I\u0027ve written this down is to document that this is a functional way of hiding metadata that protects against a network adversary and if we do not continue to hide metadata in our protocols this is what we will end up with so I want to I want people who look at this and think that this is horrifying I want those people to be pushing back in all the other places in the IETF where we are planning to expose metadata in our protocols so I\u0027m like I\u0027m fine with that I think that\u0027s great thing but but I think it\u0027s also then true exactly what Eckert said that at that point this is the direction you\u0027re going to go and and you can\u0027t be just burning it casually right we\u0027ve we\u0027ve actually got to start designing that and maybe I absolutely wrap exactly along the lines of what you just said into the microphone a moment ago would be a you know like a worthwhile prologue in a document that were published it said that the reason this is a bad idea is not the one you think it is um you know don\u0027t hide your metadata yeah I want to cut the line after who\u0027s ever after Phillip oh no - Martin who\u0027s ever after Martin yep Richard okay I think my conclusion was do hide your metadata not don\u0027t hide your metadata yeah okay just clarifying that yeah Ben Schwartz I yesterday we we had a dispatch we had we had DMS over HTTP in in dispatch and there was a lot of debate about whether and how to to move forward with Paulin Patrick\u0027s Draft there I think this this draft can serve as a great reminder to people who were who were concerned about that draft but if we don\u0027t move forward with VMs over HTTP you are not going to like what comes instead fahan baker so to respond to echos rant which I think was entirely justified there is actually amongst mechanism in HTTP in that we invented it when we had to upgrade from HTTP not 0.9 to HTTP 1 point and that is HTTP servers are actually required to check for the string HTTP slash 1 point naught or 1.1 and there is normative language that actually requires them to "
  },
  {
    "startTime": "01:49:00",
    "text": "reject some any request that does not have that string so what you could do in order to make this fully consistent would be to simply put instead of it being get /h be 1.1 if you made it get slash DNS you would actually be compliant with the HTTP one point naught and 1.1 protocols so I deferred the proper DNS HTTP multiplexing to the draft Hoffmann DNS server HTTP draft the christian with Emma and I I\u0027ve been listening to what eco and and who are saying about architecture issues it turns out that we have many points of multiplexing in the current architecture we can multiplex by port number we can multiplex by LP n and we can multiplex inside HTTP using the world own mechanism and also mechanism the advantage of the HDP well-known mechanism is it is fully encrypted it\u0027s also what makes it tied to mean tying a lot of stuff into a single protocol which has issues its own issues involving renditions the we are discovering that multiplexing Besant port doesn\u0027t work very well because the port number is metadata that is exposed to the network and allows for censorship we might be able to multiplex pass on LP n if the help ian was hidden hiding the LP n is exactly the same problem as hiding the SNI it has exactly the same solutions so if you assume that we can hide the lb n using any of the s ni encryption tricks then you get a clean solution there that basically you do have an LPN that says this is TNS and then you you have a much cleaner hockey texture because made structure because it does a high-level point of multiplexing and so and we are thinking here about privacy we are pretty much hitting that point here that\u0027s basically we have to deal with privacy but we also have to deal with censorship and if we tend to ink consideration maybe what we want to do is work on the TLS protocol uses or quake for that matter that says ok we are going to use some encrypted token to do the D mixing and we can do "
  },
  {
    "startTime": "01:52:04",
    "text": "that so so Martin Thompson and you do have to modify the clients unfortunately maybe that\u0027s not what I got to say I got up to renege on my statements previously after listening to Andrew I think I was insufficiently facetious in my original comments I was I meant to say thank you for your contribution but now I\u0027m gonna say something else which is this is perhaps one of the most elaborate threats of violence to the architecture that I\u0027ve ever seen and don\u0027t like so sorry the opposite of thank you please don\u0027t do this ever again please don\u0027t encourage this sort of behavior in others and maybe we shouldn\u0027t be encouraging this sort of thing in general your point is well well made and I think perhaps we should have just made that point rather than shipping software that can actually commit that violent I find people listen to the points when there\u0027s code behind it true you were successful yeah and the note that we put on our chairs things within the agenda was lie again right like what you know and it wasn\u0027t so much like oh this is you know I want to be able to sort of like look at this and yes be like shocked impressed and horrified at the same time right and I think people got too excited about trying to solve the problem rather than realizing there\u0027s like an architectural flaw there right and so I I think there\u0027s some interesting stuff but much like we have a draft Andina software which is DNS over wider format Y format over in HCP where the HCP booking people said this won\u0027t work and I\u0027m like I\u0027ve seen running code that does this this doesn\u0027t work right which is should horrify of course HCP people right that\u0027s why there\u0027s many things going on about trying to resolve these kind of issues that\u0027s the wire format the one that vixy and oh no no they were no I had some pushback that said they didn\u0027t think it would work it would it would you know it David I think it was a little bit of horrified as well yeah so and I think that\u0027s you know and I wasn\u0027t saying this was half-baked in a bad way because I have many half-baked ideas and I I think the things that I am probably flawed for us are working pictures I will accept any sort of crazy idea that comes through because I think you know they should be at least looked at and sort of considered especially if there\u0027s code behind it and it doesn\u0027t mean that I want to adopt it or I think the working group should adopt it but it\u0027s like we you know we should at least you know give it some sort of thought and drive like you say drive future conversations right let\u0027s make sure we don\u0027t make these kind of mistakes moving forward kind of thing yeah yeah so if you are horrified by it and you\u0027re in any working group that has any metadata exposed on the wire think carefully about it and think about how you can move that metadata inside some sort of protective envelope between the peers "
  },
  {
    "startTime": "01:55:09",
    "text": "Daniel I\u0027m gonna add one more thing here is that you know as a researcher I really get tired of hearing about dark data that nobody can get our access to and so if you think that pushing it forward with the health warning on it saying look what I did but don\u0027t ever do it then I think we can work with with someone to get it published just to say don\u0027t do it I\u0027m not willing to publish this with a statement that says don\u0027t do this okay um I am quite serious but and and I don\u0027t like let me also be clear this is not my threat of violence people the threats of violence are the network operators that are shutting down traffic on the network that people need to use to communicate potentially in some cases to survive right and traffic will squeeze through whatever remaining ossified tunnel we allow it or the network operators allow it so this is a document that says if if all else fails fall back to this because you need to get your DNS responses somehow and again you need to be able to get them privately so I\u0027m not willing to say don\u0027t do this as long as the network operators are killing traffic that they don\u0027t understand okay and super-sharp Allah has read it and and as I car said we\u0027re doing the same with Ike over TCP because we have to exact same problem and you can tell us don\u0027t do this but we will going to do it anyway because people first thing let\u0027s do it yes so so and and same with the ICO fatigue speed when we when we talked about that document they also said please do not mention even port four four three even though everybody knows you\u0027re going to do it anyway and and I don\u0027t know how to solve this and ITF because we\u0027re basically writing specifications that say read between the lines and that\u0027s really bad but but yeah I don\u0027t know how to do this better no it\u0027s a good point that is a good point thank you Paul so okay thanks I the you know we\u0027ve had some interesting discussions about stuff that\u0027s sort of not in our Charter but I wanted a lot of the smart minds in the room to sort of you know give some thoughts that stuff like that that Deena\u0027s are quick and you know Daniels idea that you know for better or for worse you know it you know things exist sort of thing and and so this we\u0027re sort of you know and maybe we need at the time because people wanted to sort of like shit about the good stuff but where do we go from here right we we\u0027ve got working implementations Warren sent some slides that I\u0027ve uploaded into the into the meeting material stuff about the DNS usage and I would say the TLS stuff is pretty is pretty low and so it\u0027s sad as I would say and so we should you know I guess here\u0027s your question we should be deploying the TLS and games or each other who\u0027s actually like sort of running running that on the ITF network yeah it\u0027s like gold stars for you guys and okay so so yeah and so it\u0027s sort of sort of sad that you know we you know as our group we don\u0027t have a larger "
  },
  {
    "startTime": "01:58:09",
    "text": "set of people that you know actually deploying something sir people that precede our org which the website which is tracking the deployment of the experimental servers in the wild we have 12 of them okay so there are servers out there that are running this and that site has information about where they are how to authenticate against them we have some monitoring software looking at the status it tells you whether dink you know minimization so there is a set of experimental service out there I think one of the things that stopping people using them is the client-side was still very embryonic in terms of you have stubby people can you use unbound locally those clients need to mature to increase the adoption so I think focus on that yes what will make the change and I think and I\u0027m also aware of plans to do some anycast deployments of dearness over TLS by the end of the year Oh interesting which would then you know overtake things and I think what we need to do is get ourselves in position to have a good client story by the side those deployments by the time those deployments come out and I think getting that stuff to mature is much like being home net and listening to the discussions discussions about you know try and deploy agency P and stuff like that is is the more people that do it the more things we sort of iron out all the sort of the things so become something very simple that you know gets stuck in distributions rather than add-on sort of thing the site we\u0027re just tracking service exists and the next stage is to start picking up data about the traffic levels and usage okay and so that\u0027s that\u0027s a on the plan for that dinner spritzee dog site okay I shamed her so I have two comments about this the first is I I wonder her well it\u0027s important to understand how the protocols are being used and kind of measure our success this isn\u0027t DNS privacy ops right so I think no right you know as we talk about the next the next steps right do we as we do you know recursive to authoritative and you know that opens up a big can of worms I think the first thing that would come back as anybody who had ran any sort of authority have sort of be like so how\u0027s it run right you know you know I\u0027m a very simple man right I live in a world of a lot of operations and stuff and so the first thing I think of is is you know how how\u0027s that stuff you know I guess I wanted to play that how\u0027s it gonna work in my in my giant crazy stack of stuff sort of thing right and having some knowledge on that right what is is always very helpful I agree I\u0027m just not sure that that with the way were currently charted to work here but that actually well no it\u0027s not it\u0027s okay yeah okay and so - so having said that I\u0027ll talk a little bit about the plan so I currently work it at Oracle dying right now yeah Mike that bad our lawyers "
  },
  {
    "startTime": "02:01:11",
    "text": "tell me that I\u0027m not allowed to make any official statements but to be able to fire me them so what we\u0027ve been doing is we run an open resolver right now and we\u0027re currently kind of rebooting the setup for that and I\u0027ve been pushing for us to add DNS over TLS for that which is a relatively large relatively well-known well-used anycast DNS resolver right but we are not willing to change our software choices based on this requirement which i think makes sense we have whole bunch of the licious requirements so the work right now is getting DNS over TLS pushed into the components that we\u0027re using which we\u0027re looking at and we\u0027re going to be doing but getting software changes in open source projects and things like that there\u0027s kind of negotiation that has to occur there these things don\u0027t happen overnight once they\u0027re there even if all the software components supported it we\u0027d still have a month\u0027s law many months long of work to test it and make sure that we have our processes updated and things like that so and I think we\u0027re probably ahead of the curve here so I think looking for other people to do large-scale adoption it\u0027s going to take a long time and I don\u0027t think we should wring our hands too much about saying well no one\u0027s using it and so on and I think having the protocol space be far ahead of the vendor space and then the operator space it\u0027s not weird and that\u0027s okay and it may be and I\u0027m not saying we\u0027re wringing your hands but you know and it may just be that as these as time moves on quick over DNS becomes the you know right you know something that people sort of actually fall into a lot faster because the the the software stack is is more available or something like that right maybe so one thing I thought might be worth bringing up to discuss again is that I remember in previous meetings there was a argument that just said we\u0027re not even gonna think seriously about recursive authoritative until we know what\u0027s going on with this until we have data and I think I want to challenge that as well and say you know this how would you define success or defeat here and how would you really take those input the next step and it wasn\u0027t so much like we\u0027re we wanted serious data but you know and I think we and we felt that we should be able to start moving in that direction knowing and I think when we think about authoritative I think every one two of us I think the general person who\u0027s got you know who\u0027s running second-level domains sort of thing and they\u0027ve got servers running stuff and then you\u0027ve got the those really you know there\u0027s like he you know root zone people right and they\u0027re another reality right and and to actually try to affect change on that level becomes a layer nine type issue right that\u0027s sort of really out of our pay grade sort of thing so you know just one thing but no I think we should be able to start thinking about it but just realizing that I\u0027m sure that will be sort of the discussions that will sort of come up along the way right linear yeah we\u0027re gonna go through stage that moment or experimental and then ability step changes exactly we don\u0027t know how that\u0027s gonna feedback so you "
  },
  {
    "startTime": "02:04:13",
    "text": "know we can\u0027t preempt how no yes I agree Ben Schwartz I\u0027m somebody who cares a lot about the client side of this I\u0027m trying to put work into that but you know there\u0027s a there\u0027s a time delay measured in years from from like approval to do to make some client change even from code is committed to like substantial fraction of users have the code never mind are in a configuration where they can actually use it so yeah I don\u0027t think that we should get too impatient and you know I don\u0027t think that we should be worried that that you know the 78582 years from from publication it doesn\u0027t have you know more than one percent of the internet oh no I don\u0027t know I don\u0027t actually feel it\u0027s a failure at all I think it\u0027s it\u0027s it\u0027s a very I think is a very solid basis for us to sort of move forward and I you know I\u0027m just it\u0027s it\u0027s he said it takes a while right so it\u0027s like how can are there things that we can do to sort of help sort of prime that pump in some ways you know and then you know as we sort of and then and part of that discussion day was seeing Oh what else is out there in the privacy space and you know these were all sort of I think merge together here you know in the coming you know ears kind of thing so Alex me over since you\u0027re not offering any public Els with the necessary creative servers we I don\u0027t have actual measurement data however what I did recently was I took the packet traces from one of our authoritative servers and ran it through a simulation to identify what like the approximate cost of running TLS so I tried - there were a lot of rough estimate in there so what\u0027s the deal s session setup cost and so on and so forth and I came up with the magic number eight yeah which means that running 100% of the DNS traffic and all the authoritative servers that currently reaches us over UDP which require about eight times as much resources as it currently does so that\u0027s like a way it could be like three it might be 25 I have no idea I did a couple of assumptions but it sounds reasonable hi me hi and it\u0027s just a simulation Oh God and since I only had out the radiative server packet traces that was the only data source that I could use I know in a previous life I do I teach a cheapy performance stuff and you know there\u0027s a lot of work in that space right like how to scale TCP you know I think those folks have done you know pretty fantastic work on that so I think you know there\u0027s a lot of places we can sort of you know lead on their expertise in that regard but and I think yeah it\u0027s an interesting number I don\u0027t know if it\u0027s that high but yeah Terry I\u0027m gonna touch on something alex has picked up there and in slightly in response to Sarah you could probably take away that "
  },
  {
    "startTime": "02:07:14",
    "text": "the last half of anyone measuring uptake usage over blah blah blah blah and just say anyone measuring the importance of measuring and doing the experimentation on what is being deployed is for the data points for that next question I don\u0027t want to walk into that next question blind because that would be painful then we\u0027re going to have a world of bad idea fairies in a really long knocking yes come so think it\u0027s this is Shane again Shanker is I think it interesting that there was some estimates of performance cost on the authoritative side I think we saw some earlier estimates of just TCP alone being a factor of six so a factor of eight for open TLS doesn\u0027t surprise me I think we need to be a bit careful about that because we know that current dns authorities infrastructure is heavily over built to handle DDoS attacks and things like that and a lot of that cost comes from UDP so I think we need to be careful when we moist we throw around frankly very scary factors of eight and things like that when we talk about the additional cost of security so the question for you Shane you\u0027re your employer that you can\u0027t talk about as an open recur sir do you have TCP numbers you know just on just you know T versus UDP and you know you guys sort of look at those and we do I don\u0027t know what they are thinking yes those and just not saying you need to share anything but I don\u0027t you know you you probably look at those and and you factored that into your as you build your your your plant your overestimate the rigorousness okay okay I think I can get those numbers okay dan york just as may not as Chaves cried i I would just echo their comments over here I mean whether these have anything to do with the Charter or anything the measurements of this are important because I spent a good chunk of my time in the work of deploying the protocols that are here and this kind of measurements of any form help make the case for those things to be used and at the end of day I think we all want the stuff we do here to be deployed out there in the real world so you know in the regular networks that are out there so this kind of Statistics any kind of information can help with this and I think the work that Sara and the folks are doing that is a great step in that regard and I think if anyone else can duplicate that or or provide not duplicate provide other measurements of that that would be ideal or help fund Sarah and John to keep doing that how\u0027s that that works to all of those kinds of things I think that is critical because I think it does also it\u0027s a Terry\u0027s point it does help with that argument on where do we go next and what do we do with that Alex me over again so if somebody has a couple of PhD students at their hands something that I would suggest them to investigate is whether they can start a project that does replay UDP traffic over TLS against the name server I guess an implementation and see what the "
  },
  {
    "startTime": "02:10:15",
    "text": "actual performance is I know that TCP replay essentially simulating the internet space from a single node is not that easy but might be an interesting project if somebody is looking for a PhD topic or some interesting you know there is good one I just wanted to qualify what I said earlier I completely accept we need the measurements and they\u0027re going to inform what we do my feeling is that there are other problems we can solve that aren\u0027t related to this the measurements and the you know the idea of performance about the recursive to authoritative step and we kind of stopped work on everything yes so questions of how we do or sent occation on that like we\u0027re not looking at them and that\u0027s disjoint from the field exactly and I don\u0027t want to stop that discussion it\u0027s like I was hoping before the deadlines if I would sort of resubmit is step to document just so we have sort of a place to sort of start that conversation and I\u0027m not going to call you out or anything like that I\u0027m sorry you know I know you\u0027re busy so but I thought that was a really good place to sort of start some of that discussion but you\u0027re right there are places in terms of how do we do the authentication how do we do various places like that that I think we should start digging into yeah so how do we you know I wanted to see if there is actually still interesting and people sort of going after that or you know are they just going to take a flag in the ground and say you know let\u0027s do tkg\u0027s ID match the idea and be done with it kind of thing so speaking about the step to do after indeed it expired partly because of other things to do but partly also because I was in my opinion very little discussion about it I expected the discussion was strong opinions and have been very few maybe one of the reasons that step to draft was careful not to mandate or to make specific techniques over it so the listing of other possible solutions with some pros and cons but not so maybe a better solution I\u0027m thinking of doing it is to have a different approach than the step to draft and then to propose a one solution because people may be more eager to discuss when there is one solution which is push behind then when there is a very open set of choices and if I do it my preferred solution would be to use thin ok then publishing the certificate in DNS in Indian as yet oh I would definitely this is dkg I definitely support continued work on it the backhaul links the links between the recursive and the authoritative resolver I\u0027m happy to collaborate on those drives to review them whatever is needed there and if I can help with implementations I will okay so yeah and there was a fair bit of discussion initially Stephan on your "
  },
  {
    "startTime": "02:13:16",
    "text": "draft but maybe you\u0027re right you know maybe if he just picked some outlandish idea and saying this is what we\u0027re gonna do that will really get discussion going right because then people will be like oh this is crazy so but you\u0027re right and I mean and I do think there\u0027s places to go I just what I just wanted to I guess I was sort of cautioning about was you know we want to sort of measure we want to make sure we have you know stuff so we can actually give good data so as we start moving forward and talking to people and convincing people oh we should run this on thora teams and stuff and here\u0027s why right and it\u0027s no it\u0027s not going to be a it\u0027s not going to be a large you know drain and your resources because we\u0027ve done this research and stuff like that right so that was sort of where I was coming from is making sure we actually you know had that kind of media measuring it wasn\u0027t saying we weren\u0027t going to do anything until something happened because you know that seems kind of foolish to don\u0027t and eNOS does have a very long tail in that regard Giovanni said Anna I think this kind of measurement research is also interesting for the map RG group of IR TF mm-hmm I\u0027ll talk to the ITF chair about that we\u0027ll see okay so I know of course I sort of wouldn\u0027t let my co-chair talk so I apologize for that so they know Brian seems very very much at peace right now yeah so okay that\u0027s you know if that\u0027s the thing I think you know it sounds like Stefan is gonna probably think about a step to draft then you\u0027ve got a few people that seem interested in working with you I see Sarah and I see TKG so um that you know if others want to please you know reach out to him you know he\u0027s Stefan you know he\u0027s very easy to work with so have no problems there though okay any last words from anybody oh I have more slides I uploaded them into the meeting materials and mostly they were showing sort of DNS usage of the of the network and also the TLS usage and the TLS usage was very it was very low is very sad as I said you know there\u0027s you know so but not zero so you know at least or some usage and hopefully by the other week we\u0027ll simply get a little bit more going out of it sort of thing though all right thank you all for coming thank you all for listening to all the crazy ideas and so I always appreciate that so the map RPG that\u0027s what he said it was the map [Music] "
  },
  {
    "startTime": "02:16:28",
    "text": "you "
  }
]