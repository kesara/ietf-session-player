[
  {
    "startTime": "00:00:14",
    "text": "I'm I'm watching mobile driver's license plates. Yeah. That's Okay. It could start. I'll hate someone. Okay. Let's get going. Those ones. Myself here. From him? Come? Yeah. You take it from there. Everyone. We're gonna get started, shortly with Sec Dispatch. But, you know, hi. I'm Roman Kennedy. I'm the SEC ID for for dispatch with, Paul Wooders. Just wanted before we start, so you see a new face sitting up there. At the mic. So, Daniel Con Gilmore, thank you so much for stepping up to help us lead and figure out where to take new new sec work. So or appreciate your service. Okay. Thanks. Okay. Let's get going. This is not the not well. The governs everything that we do at the ATF. If you're not familiar with this, please make sure to familiarize with yourself for this. It's important. This tide if, meeting tips. I think you probably already know"
  },
  {
    "startTime": "00:02:01",
    "text": "needs to be done here. So I'm gonna skip those ground rules, seek dispatch, as as you know, doesn't adopt any documents. So we only recommend next steps and there are potential outcomes, we could either direct, the work to an existing work group propose a new working group AD sponsored specific document, maybe decide that additional, discussion is needed or say that IETF should not work on this. So these are the potential outcomes. Before we go to the agenda, just and announcement about Namcom. A Namcom just extended the feedback time until Friday, And if you're not familiar with noncomm is the committee that selects the leaderships, of IETF. So It's critical that you guys provide feedback on the nominees that that you interacted with. So please, if you have a chance this week, provide feedback, to the Hong Kong. Okay. Our agenda. So we switched the order a little bit because we have one name co offer that needs to leave a little bit early. So we will start with expected sign mail with Daniel Studing this discussion After that, we'll talk about on network path validation with the And then the sub document will be Okay. Lindsey will be talking about that, sub document. Okay. And we have enough time this time, like we allocated hour and a half instead of that typical 1 hour. So we have a plenty of time because we ran out out of time multiple, meetings and a storm"
  },
  {
    "startTime": "00:04:03",
    "text": "So that's, what we have on the agenda, any agenda any comments, Yeah. Yeah. Yeah. And the Yeah. And and thanks, too late for taking notes. For us. You, Dave. Anything else. Okay? When it's hung? Okay. So, I am just taking off the hat I just put on. So, this is just a a piece of work that I started with Aaron Whistler and several other people actually but Aaron and I are the ones with the names on the draft. So I'm presenting it here looking for where it should go or maybe no maybe nowhere at the IETF. Which is about, that is the wrong draft. I upload the wrong thing. It's the wrong slides. You did I'm so sorry. That's a that's a different side deck. Got them. Let's see if if you have other Do you know, sign mail they expect that think I uploaded the wrong, the wrong slides. So can fix that, but maybe we can have somebody else go first, Erin. I'm sorry if that screws up your schedule for needing to leave. K. Yeah, sorry about that. That's fine. Okay. 10, 2. Yeah. That's k. Hello, everyone. Welcome. Good afternoon. It's my pleasure to report this, this new work we'll be doing it's actually more of,"
  },
  {
    "startTime": "00:06:00",
    "text": "problem space that, we're kind of exploring. It's a problem that, we're trying to score we're also trying to find a home, like, what would be the best working group or does this, con consists of a self containing, like, a system because it's somehow in between the security area and also the routing area. It's about running security. So, the here is that the general question is that should we, like, add more trustworthiness into the the the the routing path and not just, you know, one routing network device. And, here, we'll discuss the problem statement and, what are the use cases and please next slide. So we'll be, talking about, like, why do we care about path validation what it is. We want to disambiguate it. What are the use cases that, currently we find more and create, And, we will propose a, proof of transit solution based on the vector commitments. There was like an old solution to that, and then we are proposing you more inefficient, more secure way of doing it. And we'll be addressing a few feedbacks from past engagements. We have been discussing this from PopSec, with, from last IETF, and it will be addressing feedbacks. And, next slide, please. So you're actually question is to add more trustworthiness into the routing path. So here, this is a funny story. Here, like, for example, James, he wants to make a phone call from overseas reporting some, you know, very on high security level information. And he wants a really secured line. And for some reason, he kind of maybe he's using voIP. He's maybe he's just sending a message. But encryption, for some degree that he thinks is not sufficient. Because encryption, we can have low, we can have vulnerable and outdated"
  },
  {
    "startTime": "00:08:03",
    "text": "crypto. We can have, cryptanalysis. We can have side channel attacks. Although we cannot, you know, decrypt the information, but still we can have some, extract some pattern out of it and to know, like, for example, like an operation has just to initially not knowing the exact information, but something like that. So, next slide, please. So in this case, he may want to look for a dedicated line just for his information, for his transmission. And here he would like to to request this kind of dedicated line. And the lady was saying that I can prepare this for you. I can plan this kind of routing path for you. But your connection should transit on top of it. So why should? You can have all this kind of a control plane paths planning, and the remote has attestation of those selecting those path. But, we actually don't know. We don't have such mechanism, or it's still, in sanitization phase not mature, that, how can we know the actual forwarding path. Is does that align was what we planned in the control plane. So that's actually we don't know what the actual path that is ticket. We can only plan that So, basically, this is a gap between route integrity and forward integrity. Next slide, please. So this, this, I think this may concern the route started the security error because it is about routing security. It's somewhere between your routing and security. In here, we're not absolutely not fixing right in security ones for all. We're just, you know, giving him one step forward So the three step recipe that we think that for secure routing is that number 1 is that we can select path according to your stressworthiness, and we can securely propagate it. And the outcome is that every router holds a correct routing reference. For example, the rocking table."
  },
  {
    "startTime": "00:10:03",
    "text": "And then you can have the router to be remote add tested. It can be built on top of trusted hardware, to make sure that it will execute correctly. As we expected. But, all those things that we can do is actually in the routing securities. You can you can actually only indirectly imply that the results should be correct. But you don't have mechanisms that can actually verify this. It is correct. So there's a gap in here. Because that we don't have a, like, a proof of trends in mechanism that directly verifies the foreign next slide, please. So what is path validation you may ask? In here, thinking different context, people interprets, path validation very differently. For example, in the security area, I just received the email. It says are you talking about certificate path validation? I say, no. It's far from it. It's routing path validation. So the routing path, there can be like 2 paths, both in the, control plane path or in the forwarding plane path. And, and, mostly in the PHP context, they do bgbsac, they do RPKI is more like a control plane. Path. But in here, like, with more people concerned about the actual foreign integrity and if they want to have some kind of trustworthiness or control, over the path we are taking some implementation is that the patent validation could be to validate that what path that a packet actually traversed. So this later disambiguate into the proof of transit. I think, our understanding is that the path validation in order to receive a desirable outcome, the control plane path and the the data plane, the forwarding plane path should be consistent to each other. Next slide, please. So what are the current works that, to fill this proof of transit gap. So there could be like telemetry. We can have IOM in situation."
  },
  {
    "startTime": "00:12:03",
    "text": "To, record the path of this kind of, packet. But, still this reliance on the reporting of it, routers. So we still re if we want to have some secure telemetry, we will need some kind of secure mechanism that can securely log the trace, alpha path. Oh, sorry, alpha packet. And the proof of transit, works well. It can work more both underlay and the virtual path, but, so still, it has some, the previous solution that we find have some security, drawback and have some, computation overhead. And other other works will be like past reconstruction where, like, the there will be a centralized controller that extract all the routing tables from Alda Rogers and to reconstruct this kind of, routing path, but that's another way to indirectly, verify their following path. So the conclusion is that a common blocker and here's a general proof of transit solution. Or maybe proof of transit solutions to different scenarios. Next slide, please. Generalizing the concept of path. We're using, reusing the draft knife for sorry, the RFC 9473. The how do they define paths from the NRG So, basically, the path could be both a underlying path or, sorry, underlay network path or it could be like a virtual path that consists of virtual network functions. Next slide, please. So the core use case here is that, we can do proof of service function processing. So for example, like some operators, they can operate can host security functions. And, their customers would like to choose like a bundle our package of those security functions. And then how can we how can those operators prove to their customers that"
  },
  {
    "startTime": "00:14:03",
    "text": "your packet, your traffic is actually processed by those security functions. So in this case, every packet when it goes, like, through a firewall or a traffic filtering, function, it'll be best that it can have some proof of transit or proof of processing. In this way, this can be used for path audit or monitoring purposes, but mostly for 3rd party auditing. Next slide, please. There are also other cases. And here, those are some techniques that we find could be having some value add example, SFC, but also we can do perhaps, Quincy, because, like, Quincy's, is a work flow that consists of containers or microservices. In this case, we have proof of transit, we can also prove that, a workflow has been processed correctly, by those containers in the sequence. And also, segment routing, that's definitely because it features the, the, the source routing And also IOM, definitely more accurate and trustworthy telemetry. Also, ingress filtering. I think that's kind of interesting because, when we have ingress filtering, we want to know that if a packet was coming from a right origin. Origin. Is not spoofing some other IP address. Currently when we have your RPF, we actually look for does it have a valid does a packet have a valid path back to his origin. And, this path lookup is only done locally. So in this case, if we can do, present, we actually can you know, when the packet arrives, if it takes a proof of transit, we can just accept it Otherwise, we can see somehow it's, suspicious. Or the ERPF when it does this kind of lookup. There could be like this path is out of date."
  },
  {
    "startTime": "00:16:01",
    "text": "Could have leads to some false negative problems. And if we can do reverse proof of transit then we can have like a very frequent or in time updates of the uropf table. And also multi path, and the policy based routing when we have this kind of policy based or routing still has a policy. We want to see if it complies with the policy that we set up. And multipath, when we have maybe 4 or 5 multipath working all the same time. We want to know which path it is actually using. So maybe when we have some earthquake or some natural disasters, or at a other kind of disturbance, we can locate that which one of the pay path is actually not working. We can switch to other working crickling, next slide, please. So this is a solution that we're we're working on. It's actually using something what we call the vector commitment it's another cryptographic primitive. So for people that, crypto savvy, factor commitment, treat is of after commitment. But in this case, we're using some construction that's more efficient. Then rocco treat. So in here, when you commit to a sequence of values. Those values are attached to their indexes. And here, each value in this, vector is a router. Represents a router, and we can, at, at the very first beginning, we can have the network controller to select this network path and commit it. And that means when we are actually forwarding this packet. Each router would open we'll do this opening proof. We'll prove that he is in the right position of the path that the controller has planned. So this, relies on the position mining property of the vector commitment."
  },
  {
    "startTime": "00:18:02",
    "text": "The transit proof will only successfully pass verification even not only if it was created by the right node, at the right position. And also as committed by the controller. And, advantage also of this work is that the transit proof creation only take constant time. And a verification also take constant time. That's very different from what we do when we use a Merco proof that needs log in of time and auxiliary information. But in here, we'll only need 1. Information to Constant. That is 24 bytes. And, also, we can do batch proof. Next slide, please. So also addressing feedbacks from prior engagements, and we have talked about this in the opsack, and, they have a few questions. Number 1, we are the computing costs. We just, demoed this in the hackathon of this time. Each router that we we do this as a proof of concept demo. But, each, similar, simulated router when they do this computing of transit proof, it takes about 1 to 2 milliseconds. And the extra cost of this transit proof added to the packet is, 24 bytes. And, the other question is, like, maybe you can have some control over the exit, router your yarder to prevent this, you know, sending the packet to the wrong people at the very first beginning. And, yes, that's a little bit out of scope, but, I think that's part of the 3 step recipe for secure routing. And then the other one is that, this Our work is actually approved transit solutions, not a proof of non transit solution. But basically, when we are dealing with the most hard or the hardest routing security problems, we're actually dealing with a noninclusion problems? Is it diverted to somewhere else? Is it copied"
  },
  {
    "startTime": "00:20:01",
    "text": "you know, and sent elsewhere, not going on this path. Right now, we have to clarify that this is a proof of transit, solution and a proof of non transit is if I can guess it's you know, boldly, it's a non deterministic polynomial problem. In non inclusion proof is hard by nature. But also when we do this, like, the proof of transition in a very large quantity, then we can actually probolistically imply proof noun transit. And also in the application, you know, scenario, we think this is most this is, you know, best first using some limited domain. Where we have some some control over the routers instead of absolutely none. I think in that case that we can at least have the trusted domain or semi trusted domain have this kind of proof of, transit. And when you know, other domains things. It's a good idea. They are doing their proof of transit. And we can connect those lines by, you know, the gateway between, you know, the assets. And then we can inter domain solution, but that's basically, next step. Next slide, please. Out of scopes, as we said, illegal data copy, it's data is intangible by nature. If it copies, once you obtain it, plain text you have basically have 100% control. You really can't help, you know, illegal data copy of the router. And the second, so that's why you kind of, assume some kind of control over the trust their routers. Excuse me. And the stealth knows, for example, like, if the data is, transmit it elsewhere using transparent, channels, or if we're using some other old devices are just to forwarding and they are not computing this transit proof, then how do we do? Basically, This is also this is not something that we can do right now, because, like, layer design actually"
  },
  {
    "startTime": "00:22:01",
    "text": "definition, they want us not to perceive those kind of transparent stuff. And I think it does make sense I think it doesn't make sense when we look at this level. And not to look at the next level. For the next level, I think, it needs different solutions. Next slide, please. Oh, also, how does it, actually, I conclude this quickly. So how does this compatible to the current stateless, hop by hop destination based routing. AKA, our Internet right now. So how can we do this in the environment that we don't have control over the router whatsoever. I think the best starting case will be using an unlimited domain. That's that's for truth. And, maybe when this becomes, but, well, some of our clients think this is a good idea we can prove have some kind of proof better than nothing. And then other domains are trying to adopt this kind of you know, way of doing it, we can connect the lines and have inter domain solutions. And also other, control over numbers. That's 5 to 6. And the number 7 is that we keep some you know, traffic inside of a controlled domain for example, like some jurisdictions, they will have, the data sovereignty problem. Don't want their data to be flowed outside of their jurisdictions. It could be like a use case. Basically routing compliance. And number 8 is that SFC process improve is a social problem. Well, it is, but still we can give some kind of proof solution from the technical perspective. And, this can help the audit of the service provider as a way. We're throughput. Well, the stress test is under development. And, think it's best, implemented in those software defined, forwarding. You know, based on general purpose hardware, I think is because it uses elliptic curve, a very special type, hiring friendly led to curve,"
  },
  {
    "startTime": "00:24:04",
    "text": "well, implementing this on the ASAC, chips would be kind of expensive. So using this in SFC or other, you know, software defined forwarding will be better. And I think that's at all. Next slide. Yeah, so this basically means that, if we have no control over this, domain whatsoever, then maybe it's hard. But if we can have those green routers somehow trusted or remotely attested, we can kind of extend the trust and, you know, they don't have this intention of to doing anything bad. We can do this by, you know, monitoring misconfigurations or arrow forwarding for this case. Best starting from limited domain. That's the conclusion. And, next slide, please. Next step, POC is done. It's definitely in the 1 in hackathon, I should have pasted GitHub repository here, but you can find, GitHub pository in the hackathon slide. And the spec document is still writing. We have this, problem statement. Document. And, also, we find few people that are very interested in the same problem, that is to add trustworthiness to the path and extend it from one router to a path. And how can we attest, select and attest to this kind of trustworthy path And how can we verify, if it's forwarded, accordingly. Thank you. Thanks, Peter. Return. Hi, so thank you. Thanks for your presentation, and I I wanna appreciate especially the clarity, you had, I think, about midway through on about what use cases you're trying to in, in particular, that you are not trying to prove that a packet is not transit a certain network. It seems to me that, like, that's intention with"
  },
  {
    "startTime": "00:26:00",
    "text": "your James Bond example at the at the beginning and with your controversial use case, at the end. So it seems like we're gonna do any work here, we should be really clear. That proving that a packet did not transit something undesirable is really out of scope and really all we're trying to prove here that it did require did transit certain things. So that that that's a comment and the question I had for you is, you know, obviously, this is verifying that a packet transited certain points. And not saying anything about what's between those points because the previous points And so there's potential that there could be untrusted parties in between the trusted points. And so what I'm wondering is you didn't talk much about protocol, but presumably there's something that is added to a packet here And so what I'm wondering is what what this protocol would reveal to those untrusted parties that might be lurking in between the trusted parties. Yes. So maybe this is more like a link between, like, the 2 routers. So some people also recommended, using, you know, something like Macsec to protect the links between those routing nodes. I think that's definitely a next step, but, currently, we're talking about like, a general solution for that, and thank you for coming. But but if I could just follow-up on that, though, like, like, I don't think that there's anything you can do cryptographic and prove that the physics of the world have that that the endpoints of the the the 2 trusted things that are, adjacent in this path were physically directly connected. So they're always gonna even if they're physically directly connected, right, as you you point out, you might have maximum or viable attackers. Like, there's always gonna be a possibility that there's untrusted parties between the trusted parties. I think we do need to track, you know, what what's being revealed is by adding stuff to these packets."
  },
  {
    "startTime": "00:28:03",
    "text": "Hi. I'm gonna do AD, kind of override when we're at the mic, and we also make sure talk about the dispatch result we would like in addition to kind of figuring out the solution Yeah. Thanks. Yeah. So let me let me formula that I, I think I don't quite have a hard opinion on that yet. I feel like this needs probably This feels like it needs some inter domain inter area reviews. So I'm kind of inclined. This might need a boss. As opposed to to going along some pasture path. And, you know, I think it needs a little bit more clarity along the lines I mentioned. Was really difficult to get that, last part Richard. What what you're thinking of that dispatch part Right, Chad? So Richard said he's he's doing like BAF just I don't know if it's different in the room from up here on the chairs, but from here, we're hearing a lot of echo from the remote voice. Does does it work clearly for folks in the audience, it's good in the audience. Okay. So it's just up here. Okay. And, yeah, Bob, I think, Bob, if anything, was was my my feedback. This weekend. Okay. Thank you. Thanks. Jeffrey? Hi. Jeffrey has Peter and I had a nice conversation earlier, this week. Thank you for addressing a lot of the comments they had brought up and, when 17. You clearly addressed these inside of the draft. In your presentation, and I think that's, a clear win over what we had before. Richard made many of the points that I would otherwise make about a lot of the cases that are interesting effectively fall under the proof of non transit. Or is the 2 of us have discussed, this mechanism provides no way to a test to transitive trust. So I I find a lot of the"
  },
  {
    "startTime": "00:30:01",
    "text": "use cases that have been put up is, you know, sort of on the week side of things. There is one though that I actually thought stood out reframing one of your points. You were talking about URPF ECP 38 type things. That was the context you put it in. A thing that this can be useful for is preventing spoofing specifically for these packets. This gives you the ability to say that only the routers that are expected to do it if you have that as an n, n vector Those are the only routers that could have actually injected things, and therefore, the injection and attack points as long as they're not allowing a generalized injection and forwarding, the only parties that could have done and for certain types of secured environments where non spoofing is critical that might actually be a use case that, has some teeth to it. Does that help you, think about where to dispatch this to? It, it, it, it, it, it, it, it, it, it, it, it, it, it, it, it, it, it, for my use case or, sorry, is at my use case for the use case and discussion. I think that, there needs to be iteration to refine what this should be used there's an awful lot of what this is not useful for, and I think that that needs to be expanded. I think that eventually where this ends up is probably int specifically because, that's where you would do bcp38 style work. This is a forwarding operation. Very likely has some interaction with a programming protocol to put in all of these necessary bits and elements to do the path, you know, validation, with that signaling, that could be routing, that could be done no, no, somewhere else as well Okay? Thanks. Ben, Hi. Hi. So"
  },
  {
    "startTime": "00:32:02",
    "text": "I, as I think about this, I think that the I don't really buy the security argument here. I think there there may be something valuable here worth you know, worth moving forward with, but I don't think it's a security question. The reason I feel that way is I can see 2 scenarios. One is that I trust the specific path components that I've named. I trust all of them to and specifically what I trust them with is to is to operate according to some local policy. And to secure their link to the next trusted endpoint. So if I have that level of trust, sorry, if I if I don't have that level of trust, then this doesn't work. Doesn't accomplish anything. Because an attacker could just swoop in and know, vacuum of a copy of all the traffic that I'm sending. Or inject new traffic potentially. So so that's that's one angle that Sorry. Let me resend that. No. Can't inject, but they can they can make duplicates of all of this. All of this traffic and analyze it however they like. And if I do have that level of trust in all of these routers, then I don't need the path validation because it's sufficient for me to trust the first router and provide it with the instructions on the rest of the route. Which it can then transitively pass down the down the route. The only way that fails is if I don't trust the routers, in which case, the solution doesn't work. So I don't think it's a security system that meaningfully. I do think that has potential for detecting misconfigurations. In cases where all the parties trust each other and there isn't a threat actor at all. But but There is the potential for just errors and accidental misrouting."
  },
  {
    "startTime": "00:34:01",
    "text": "In that context, it it would be good to have some way to check, and so my dispatch idea based on that would be something like spring. An operational or, routing oriented group that's focused on on path routing. And so the question is how do we confirm that the routing is really working. Just just to just to interrupt, sorry, to add just one explanation for that. So like rats, when we have, this could be like an extension to rats work. Like for for now that we are actually trying to have some trust over, test setting the router or network devices And then maybe, well, this is an immature idea, but I think maybe this could be, like, extending from just one device and then assign it to you a testing or, to a path. So that's could be somehow sec related, but definitely I would, agree that it's, it's more related to our routing or ops. Yeah. Even in a in a remote attestation case, I think it it remains true that the that I can simply pass the past description to the first router verify and verify via remote that station that it is functioning correctly, and it can recursively validate the rest of the path rather than needing to do this data plane marking all the way along the path. So, Richard, I see you're in the queue after we close it. Do you have a dispatch answer? That you wanna you wanna clarify your dispatch answer. So far, we've heard 3 different dispatch answers. We don't seem to be converging. Yeah. Then I think the the the other feedback kind of demonstrated why I thought a BAF was with salient, right, because the we've had cross era assignments, mooted. As, as possible dispatches. So it clearly, it seems like we need folks with"
  },
  {
    "startTime": "00:36:00",
    "text": "expertise from multiple areas with eyes on this. I would have some concerns about putting this purely and say the routing area because there is some nontrivial cryptography here. That needs some folks with, with, some deeper cryptographic expertise but I I I sympathize also there's some routing internals. So it's a tough one. So this is kind of underscores why I well, I think there's there's a boss needed if, like, if we're gonna do anything here. Good. Good. Yeah. Okay. We think there is probably need for more discussion to be able to really make a decision on where to dispatch it because we've heard different ideas and different directions. So Let's So we can we can talk with you more, afterwards. To try to figure this out. I think one of the concerns that white people are routing or are pushing this in different directions is because the stated goal seems to be different from what the deliverables might be. And figuring out what the actual goal is, more clearly know, like, what would happen when this is, when there's a negative result, for example, you get a packet, you find that the packet doesn't have a time path that might clarify what sort of security or routing, goals you actually have the document, which might help us to to land it somewhere more clearly. S. There are certainly some great questions that we don't have great answers currently. Right now. So that's why we are having this path about a data insight meeting tomorrow Tuesday evening, and, 6 30 pm. Now we welcome R2. Have a look. And on the side meeting, Wiki, is there a option for remote access as well? Yes. And I have a github repository for other materials and agenda there. Okay. Thank you."
  },
  {
    "startTime": "00:38:03",
    "text": "Folks have thoughts about this. If you stew on this and you wanna come to the side meeting tomorrow to, recommend new routes, then, hopefully, you can bring that back to sick dispatch too. I was gonna recommend that if there are any results or some consensus around things that come out of that side meeting, feel free to drop those on the sec dispatch mail list because that may also steer steer the way I have I think my slides are fixed now. Can you refresh this? Is the other one? That's silver. It's new on the new thing here. I can I can I can and just No? Just refresh it. Already refreshed it from your work. So Is this in today? Here. I can I can offer them? Down there. Nope. I'm I'm gonna share it here. Can. Yeah. I'll have you Okay. 1st button. It's good to see all the errors. I clicked refresh and it didn't refresh. Okay. I can share a screen. How about that? Just the one? Yes. That's it. I I just put it up. Oh, you put it up. Okay. Yeah. Can just use, Hi, Janet. Okay. Yep. Hi folks. So my chair hat is off now. Apologies for the confusion."
  },
  {
    "startTime": "00:40:01",
    "text": "So this is a draft about end to end encrypted email. And sorry, not encrypted, but cryptographically signed email. So, someone is sending a message to somebody else can sign that message. That works today, and the problem is it's not clear the advantage So next slide, please. I do page down. Okay. So we've been able to do this for, decades not many people actually do end to end signing of their mail. And it's not clear that it is useful. It's not clear what you do. When you get assigned mail that you would do differently if you got an unsigned mail. So next slide. So in theory, we might want to sign our mail because we want to the recipient that the mail came from us. Conversely, we might want to say the to the recipient you get a mail from me, you should look for a signature so that you can avoid being spearfished. You can't nobody can impersonate me and send mail to you. And you might wanna do that in an end to end way, to ensure that that the that the recipient can tell what's going on. Next message. In practice, people don't actually send signed mail, even when they are capable of doing it because, a, it is a pain to do. B, it has ugly failure modes and see, signing message a doesn't actually prevent spearfishing if message b, it comes through unsigned, doesn't give any kind of a warning So there's this sort of collection of use cases that make it that the goal of sending sign mail doesn't actually match up with the fact of sending Sandvale. Next slide, please. These problems result, their user experience problem. And we don't typically do that very well here. But that's also the user experience is terrible because the mechanisms we offer aren't great. There may be some mechanisms we can offer that user experience people could pick up later. Next slide."
  },
  {
    "startTime": "00:42:04",
    "text": "So today, this is an example, a male client today, these are 3 messages. One of them, on the left, has not been signed at all. And we see the message The one in the middle is one that has been that has a broken signature on it, and the one that's on the right has a valid signature on it. And you can see the difference in the little open PGP with the red triangle, and the green check mark. You I see someone trying to zoom in on the screen. It doesn't work from there. I'm sorry. So this is This is Terrible. This actually doesn't actually help people. Right? And you could do different I'm I'm not trying to to bag on this particular mail user agent interface, but This is not uncommon. One argument could be that the size of the security display is not related to its importance. But aside from that, I think the the the most troubling part here is that when you send signed mail and it gets broken in transit, It looks worse than if you had not sent sign mail in the first place. Right? So if an attacker wanted to send a spoof message, they're not gonna boof the signature. They're just gonna send an unsigned mail. And they'll get the less scary thing then if you if you go ahead and you sign every one of your messages and something breaks in transit, of your message are gonna show up with a big hairy warning, And other ones will show up with the green mark. But now the user's gonna get this scary warning just because you had signed the mail. So next slide. This is broken, I think, because, Okay. So we've seen this situation before. Right? So we've all browsed the web and you have a clear text website, an HTTP website, in the past, an HTTP website just showed you in the browser bar, the address of the website you were the name of the the website. And you went and visited a secure website. You got a green mark And if you went to a a TLS you know, an HTTPS website that actually had a configuration problem"
  },
  {
    "startTime": "00:44:00",
    "text": "would be blocked. You can't visit this website. And we actually had in the past, people say, I don't want to turn TLS TLS on for my website because if I do, users will get locked out of it Right? We had that problem in the past. We don't have it anymore. And the browser indicators, this is a from a Chrome blog post from a while back, they went from Initially, when you were connected securely, there would be the the green lock it went to there just being a lock. And the goal is we get it so that the normal state is no indicator. And then the failed state, when you have clear text HTTP, one more slide, please. Problem. Would be a warning indicator. Right? So we're not even there yet with HTTP. So maybe it's little bit premature to be talking about this with other context, but at least today, you get a warning when it's broken HTTPS and you get a warning when it's clear text. So That transition made me think, what can we do for male that would have a similar effect. Now granted this TLS stuff is all about confidentiality. The mail that we're talking about here is just about years. I wanna think through the the same logic about user experience. Next slide. Sorry, to keep on HTTP just for a second, One of the parts of that fix for HTTP was this idea that you could that a website could ratchet itself in and say, hey. If you ever try to visit me in the clear, There's a problem. You should switch to the secured form. And that was secure transport security, strict transport security, and that has been part of the shift to actually protect the web as well as it is today. So, and the client will refuse to make a connection to the server, if the server has previously indicated that it wants to be stripped about it. Right? Because it it used to be the case that you could stick a clear text HTTP proxy in front of the HTTPS website. And as long as the user went to port 80, would just relay that over HTTPS and you'd still read the content. It wouldn't show any warnings."
  },
  {
    "startTime": "00:46:03",
    "text": "That's fixed today because the clients will refuse to load, to load it in the clear. Next slide. So if you look at this draft that's in the working group, the end to end mail guidance. It says it wants to fix one of the pieces at the moment, which says, if you have a broken signature, don't display anything different than you would display for a missing signature. And I think that's a I think that guidance that's in that draft right now that hopefully will be moved out working group last call. I think that's reasonable guidance because that means that at least If you're sending signed mail, you can go ahead and sign all your messages and it won't you won't get scary things as a result of sending signed messages. Still isn't a great distinction between the signed and the unsigned. But at least the fact the act of signing is less likely to get you a warning on the recipient side. This guidance is not universally implemented as you saw in the in the screenshots. Next slide, please. I think we can go one step better modeled on the strict transport security approach. As a user, you should be able to signal that the recipient should expect all mail from you. To be signed. So that now you can reintroduce the warning And the warning happens for all males, whether there's a missing signature or a broken signature. If you look at the end to end mail guidance draft as well, it has an appendix of future work, things don't know how to solve. One section of that, it says, We need to think about how we model the expectations of cryptographic protections for a given email. And so this is one piece of solving that. Right? At the moment, the problem is the user has no expectations. The recipient has no expectations. About what should be displayed. Next slide about whether the incoming message should have been signed or not. So there's this draft. It says it has to make a bunch of decisions about how you if it's you do this. This is a list of the kinds of decisions that a draft like this needs to make."
  },
  {
    "startTime": "00:48:03",
    "text": "This draft makes some decisions, but they could be made other ways. And I wanna figure out where we do this work at the IETF. So should the message be, in the email header? That's what the cur draft currently does. It depends on they're actually being cryptographic protected headers because you wouldn't want someone to be able to signal without cryptographic protection, There's a question about how wide should the scope be Do I send a signed message on a mailing list? Should it look signed, if it goes through a mailing list, what specifically does the user decide whether to turn the signal on? If I have 2 male user agents and 1 consign and 1 can't, If I turn it on on user user agent a, what happens to user agent b? There's a bunch of questions for how we do this in a reliable way. We should think through those questions. I'd also like working group help to think through how we undo this. Right? Maybe you turn it on and you find it it's not working for you. Do you turn it off? How do you turn it off? What happens to the to the users who receive it? And does it say anything about what kind of signature is there? Is it always a signature from a given key? Happens if you change your keys, for example, Next slide. So the question is the dispatch question here. Erin, I don't know if you have anything else that you think I should add in terms of o, talking through the problem space. It seems like lamps because at least lamps was handling the e to email guidance draft through now, but it's also might be considered out of scope of lamps. Folks of other suggestions, I'd be happy to hear it. Go ahead. Phil Hanbaker. Yeah. Actually, Originally, it was worse. When S Mine first started, If you sent an s mime sign message, there was a, a box that would come up on one of the large clients Warning. This message is signed. Right. Okay. And that is one of the reasons that we couldn't use"
  },
  {
    "startTime": "00:50:02",
    "text": "s mine or anything like it. In remediating fishing. Yep. Because, you know, one of the big banks said, well, we can't do that. We've tested it And it's terrible. Yes. 5% of the clients did that. I think it's really good patch it to because You want to have a sufficiently large community that are aware of these issues. And I think the lances are the best place, to find those. That said, I'm really leery about trying to fit SMDP, mail, and graph security onto it. So your theory is we shouldn't fix SMTP? No. I think that we should try but we shouldn't be disappointed when we fail. I think that trying is good because we will get ahold of the real requirements for doing it better, and doing it right next time round. But, on the next Internet, you mean? No. I'm gonna I mean, People are already using slack for messaging inside organizations. They're using Discord they're using signal. They're using wire. SMTP is dying as business commerce. And I think that there's gonna be a real demand for an internal intraenterprise mail system. And if we put one on the table that is interoperable between enterprises, It can do that and then span to be the net replacement for SMTP. a little beyond the dispatch question, I think, but I admire your vision. That's Paul. Talk. Hi, Paolo. Just and and I'm speaking purely as an individual here, which is a little weird"
  },
  {
    "startTime": "00:52:04",
    "text": "my apologies, but I didn't see, a big lineup So I figured I I want to get my voice in. As an individual. There isn't very much security specific protocol designing here. You are mostly talking about how to transport certain signals and how to deal with applications and UIs, And really, that is a quite different area than security. That's really more the art area, Is there a particular working group that within our area who you think could handle this? Is Murray in the room? No. But Yeah. So I asked the R ADs this question, so Romeo, you kind of segregate they unfortunately told me they currently do not have a working group catch email headers assuming this is kind of where we in in the generic case, there are multiple email working verse, but not with kind of this being kind of in scope and it's unlikely it would be in scope. But there is constant talking art that, boy, we really need one because we're AD sponsor in all of those So So I I the the way I was told this is handled is it goes to ARC Dispatch and, you know, there's a conversation Ted, Ted Hardy confirming voice on that because that dispatch earlier today. We had exactly one of these things where people said, gosh, would be we had along with the email working group to catch these things. First, the question, have you talked to Mark about this? I've not talked to Mark. So because Mogg tends to provide security mechanisms at the provider agree. And this is about end to end. This is about, an end to end promise the message will be signed by the by the by the the sender. Okay. I wasn't suggesting dispatching it tomorrow. Trust me. No. I mean, it's an option. I I just hadn't thought about it there."
  },
  {
    "startTime": "00:54:01",
    "text": "But what I do think might be valuable is actually running a bot on this. And explicitly because you would get both security and application folks who who deal with both email and other forms of messaging atabaugh And we would then be able to send over to the bits of mogg that do ue design questions. Notice of the BAF. And I do think that there are some tricky bits to this, right, Although not common, it is still part of the standard to allow somebody to have mailbox plus suffix as a valid way of routing mail within their own reception. And if you wanted to have a different answer. I expect mail from this person to come to tedplusietfexample.com. And for that, I want this and for Ted plus anything else. I want them to be treated some other way is not expecting signed mail. You get into some corner cases very, very quickly. So I think you might actually want a buff to bring together the communities of interest if Lambs isn't willing just to say, We're we're gonna take it and we'll send notes to everybody to turn up. Thanks. Your answer, The one word I didn't hear is encrypted encrypted, encrypted mail. I think people care most like, real people care a lot more about, confidentiality and integrity protection. And and so my comment is mostly about suggesting of how you present this work. It may eventually affect scope a little bit. Probably not. I'm not a 100% sure. But I really urge you to to include it since this is mostly about security usability,"
  },
  {
    "startTime": "00:56:01",
    "text": "I think we need to to think about encryption as well. Okay. I I deliberately kept this away from encryption because I think the semantics of encryption are very different from the semantics of signing. Right? It's not that There are we have separate work about how do we handle encrypted mail. But in this case, the signing originates at the sender, and you would bind it to the sender. And I think it gets very confusing to add the encrypted stuff. If you're interested in questions about expectations of encryption I encourage you to come to lamps, lamps, there is some discussion going on there about certain kinds of expectations of encryption, in particular, the clear text copy work I'd like to revive atlamps, which came up with batch 2 sec dispatches ago, but I think that's distinct, and I think mixing them together would actually muddy the waters rather than clarify them. Okay. I I sort of expected encryption to come for free. Once you have this solution, but may have been naive. Yeah. I think it's more complicated than that, unfortunately. And if that's about dispatching it, your own, above for sure. Okay. So I'm dev Cooley in this ad. I'm not not wearing my badge. I'm sorry. Thanks. So I've Like, I sign all of my messages because I can't. And I do. But the problem is if I sign a message and send to you. Anybody in between me and you that modifies the bits on the wire? Means that you get a broken signature. Right. So it's tricky. Right? So we call that molesting the emails Okay. And we used to get broken signatures all the time because the servers would molest emails. And so we got them to stop doing that. It's kind of fun. But it can occur anytime. Anybody a little clicky button and, whatever, and all of a sudden, you now have a broken signatures everywhere. So it's not really within the control of the sender. Nor of the recipient. So you can talk about UI all day."
  },
  {
    "startTime": "00:58:01",
    "text": "But anybody flipping bits in between can like, means it's broken. And the question is, in that case, do you trust the message? Do you toss the message on the floor, or do you still read it? Well, you don't know what bits have been broken. Right? No. You have no idea. Right. So there are there are there are a few there's actually a an expired Internet draft that tried to document the common ways that messages can be broken. Again, I think this is a different discussion. One approach is to catalog the common molestations And if they are invertible, your recipient client can experiment with inverting them and see whether the message sign is signature is correct. And if it is, you can correct the signature but I think that's out of scope for this. The idea with this is if we can say I I want to encourage people to show broken signatures exactly the way that you show missing signatures. And and people will say, well, I wanna get a warning if my message was tampered with. Well, if you want a warning, The user needs to know that the message should have been signed. And the only way for the user to know that is if there is some sort of signal that says expect a signature from me. And this is proposing that we do this at the at the sender level. Not at the domain level. Maybe there's another argument for how to do it at the domain level. If you can say broken signatures are equivalent to and should be treated as missing signatures, which I think is what we want. Then you do need a way to get to the warning again. The way to get to the warning is to be able to turn on this expectation. That's the rationale for this draft. Okay. So I think you either need to go to lamps. Sorry. Or a boss? I don't know, but I think a boss gonna send you back to lamps anywhere because I don't know if there's anywhere to go. I'm sorry. So I think the easy path is to take you to be done with it, the hard path is to take you to a boss. I think you can do the broken missing signature thing, but using? The broken missing signature thing is already in a document that is art that is"
  },
  {
    "startTime": "01:00:04",
    "text": "hopefully on the way out the door of lamps. I mean, I can do that with a signature block. Right? Add to my signature block, by the way, all my messages should be signed. If you get an unsigned message, you can say, what the hell? But the user agent can't can't interpret that. No. No. You have to have the people Right. So we need the signal. So we need the we need to have the signal for the user be able to make this decision. Right. Because you're Okay. You're everyday people aren't gonna do Sorry. We we need to move on. AJ. Okay. Hi, AJ, work at this, but is more as an individual thing. I'm relatively new to IETF. Dressing me. I had some reactions to what Philip said, I don't disagree, but even if SMTP is on the way out, for commerce. Oftentimes, I have accounts for services, whether I like them to be attached to my email address or not is really not a choice. I to make is something that they live with. I think it's something we all have to live with, and it might not be the exact implied use case for this problem But there are other adjacent use cases where I see there's value to this, at least for me at a personal level. I don't know if it belongs in a re dispatch to be funny about it or going to a boss I'll follow on and I actually find this work interesting. Like, I would be interested in it. That's it. Thanks. K? Thank you. Yeah. Okay. So we've we've had kind of a a buff lamps. So maybe in Roman, even and jump in. Yeah. I I I don't have a mythical answer. I will repeat. At me. I heard a little bit of lamps. I heard kind of boff, and also feel like and I'm injecting myself and kinda Paul here. Feel like this has some overlap with email in general. So would wanna make this decision a little bit in consultation with the the critical mass around email working groups, aka, in art, to to kind of give it, give us some direction here as well. And the other the other piece was liaise with MOG. Because they have the the UI, the folks who are doing some of the major user agent. Right. So, yeah, so bottom line, I don't think we have something kinda clean here. Why don't we talk with art and"
  },
  {
    "startTime": "01:02:04",
    "text": "figure out how we could do this jointly, jointly or, or figure out kind of the next Yep. Thanks, Norman. Good. Yeah. No no worries. No. Hello. I'm Ren. I'm Lynn Joon Lee from Chunghansun Laboratory. The topic of where draft is subway and the DDoS architecture, the short name is subdee. Next slide, please. There here's the online of our presentation, first of all, we would do the problem statement, and then we will introduce the architecture and workflow and the transmission of sub b, and then we will illustrate the the vantages or of our architecture. Next place. So spoofing source address is one of the common talk technique used in did as a talk did did as a tax, All of the reflection were amplification did us attacks. And then part of the flooding, did us attacks use this technique, to defend these 2 types of disaster detection, they're the defense position can be divided into 2 main cans while the position is near the target set, the other is at the middleware of the networks, which indicates the net operators. So, the defense system near the target set will do often do full flow detection to detect that tax and then diversion and diversion, the traffic the attack traffic to the to a certain cleaning device."
  },
  {
    "startTime": "01:04:01",
    "text": "And then, the traffic will the traffic will be re injected to the network so the weaknesses is that the defense, capabilities is limited by the Ben wise in the cleaning, capacity of the of the defense system. For the other position, the middleware networks, because of the larger scale of the flow, then they use Netflow based, the sampling analyzed, to to attack detection, but the sampling mechanism, always frame some weaknesses. One of the weaknesses is the because of the sampling mechanism, the accurate of the the the accuracy of the attack detection is not very high. And, it will always cost several times to do several several minutes to do the attack detection. And also because the continuously sampling, it will cost much. So, the idea came to our man is can can we find the attack packets at the source? So we noticed notice the sub, this is, source address validation techniques that can detect packets with spoof source address. South US is we'll use a table to record the IP passing it in a passing through it. So, if the pattern with the IP is not much the, The table, the device will jab it. So it sounds very useful, but because of the high cost of the deployment. The self devices is not, deploy you very much. That's the place. So from this pay picture, we want to introduce the capability of SAB. If the SAB device is is deployed at the of the host granularity. If it is"
  },
  {
    "startTime": "01:06:03",
    "text": "if the devices are deployed in at the internal man, you can achieve the detecting of IP prefix granularity for inter domain the it can achieve the AS address segment granularity events, So we can see that, if we want to achieve effective, 2000 defense, we need a large we need we need a high rate of self deployment. And, for the reality as the dilemma development rate is now very high today. So when self development skills are limited, the attacks still exist in non deployed areas. Next please. So we also want to introduce the, the package, handling mechanism of Saab, today, nowadays, the Saab device will directly job the packets with the spoofing source address packets. So, this behavior brings some disadvantages as well. The the sound agencies in large scale attacks. The boats are widely distributed. So, if we job the packets directly, the effect or the it will only effective added the network, which employment the employee to the sub. And, you put the sub devices continuously dropping the back packets, there is a possibility this, there is a possibility that the boats will migrate to an ounce of the plumbing area. So, our idea is during the incremental self development, the information uploading should be"
  },
  {
    "startTime": "01:08:01",
    "text": "pre advertise instead of direct dropping it. Next, voice. So this is the architecture we we proposed. The for the soft devices, they can, get some of the information of the spoofing source address pet case and it will send it to the subject controller. The controller can detect can do detect does the did us attack use, use this kind of information and then generate the rows maintain an IP blacklist and then issue the rows to the sub devices or nonstop devices or even the victim's defense systems. Next place. From this, specific Zamjo, we want to introduce our workflow of of subsidy. Here's the red lines in indicates the, attack traffic and the attackers use, the don't be boats, boats 1, but 2, to send, request for, spoke towards address to the reflection server. And then the re reflect server will re reflected the flow to the victim. So, you can order architecture the devices will record the message information books were addressed and then reported to the subject controller. And then the controller can aggregate and analyze the information calculated from the South devices and detect whether, Did us attack occurred? That's a place. In a certain type, the based on the attack detection results, the subject controller can generates the specific future and roles and then you should get them to the sub, device or non sub device where even the baked and, defense systems and the whole, and the the security devices in, how work has"
  },
  {
    "startTime": "01:10:00",
    "text": "get the benefits next, please. Expect, except for the deduction, we also think that the subd architecture architecture can be employment, can be employed as, security intelligence exchange the system. The Sabah routers who do not job, the spoof source IP packets can be considered as a honeypot. And, the network deployed with sub can be seen as a honey night So the Han United can gather in and report, spoke sources address messages to the controller and the controller can generate some security intelligence and then, send it to the security system where, the devices in the whole in the whole network next place. From, in in arc architecture, there are lots of information need to transfer. So in this page, we want to say that from the sub devices to the sub d controller, there are maybe some monitory messages should be transferred, they such as the source for destination, IP, or part numbers, and the message lens were the time spent of the packets, from the subject controller to the to the other devices, there are 2 cancel information should be transferred. 1 of them One is the filtering rules. It can be the ACL rules or the API based. And also, the other can as, the right information, that can be the attack detection results or, other kinds of, security intelligence next place. So they're, we want to emphasize a, I don't want to do so for, architecture for so forth."
  },
  {
    "startTime": "01:12:00",
    "text": "From this architecture, we want to achieve more accurate detection of disaster attack. To and also in, in fields of devices, devices, and scenarios. We want to make you for yourself spoofed sports, dress packets. To leverage and then the advantage of solve and enhance the revenue of subdupliers. Next, we will implement the sub d to show it is effectiveness. Also, we are looking for the cause of this draft. So if anybody interested in, or, if anybody is interested in our work, please count Henry in time. Thank you. So Are you asking a dispatch question here, or is giver Like, Okay. So so do do you have something in mind? Or but but but we noticed dots. DDoS opens, right, signaling, the transmission in this architecture can use but it's It has concluded now. So k. Anybody I don't see anybody in the queue. So any any he has any thoughts about this? Richard. Since nobody else had any thoughts, I'll come on screen and ramble a little bit. I mean, it it seems like there's a few things that need to be the case or this scheme to be useful, it seems like you need to have as you said, it's sufficient density of subdomains out there. But also for this to be useful for the for the savvy permission be useful for a detection and response, you need to have sufficient density of the attack traffic in those"
  },
  {
    "startTime": "01:14:04",
    "text": "domains to, to be able to, to to take action on it. So I'm not sure that either of those is actually true at this point, and so it seems perhaps a little premature to, to do work in this domain. Okay. The sum device is actually not deployed at, attack car targets network. It is deployed at, zombie boats. Network. So you can You can't block the attack at the source of it. So can't you can't attach, it only can share the information to the team's work defenses. Yeah. What what I meant about density is that, seems like the way one tends to respond to this is not so blocked say, individual IP addresses highly attested to the MAB. But it's block prefixes or networks. And so even if you get high quality information that a certain IP address is involved in this DDoS unless there's a vision density of other hosts in that network, not really gonna be able to, to, to, quelched, you know, it's a it's a black traffic on the scale that would affect the dots. Unless you have a, a bunch of participants in that network. Yes. That's true. So So not not only do you need a bunch of subnetworks, you need the especially bad networks out there to be SaaS networks. Okay. We were thinking, Thank you, Deb. Later. Okay. Hey, Ben. Hi. So I think that to move forward with this to me, the the thing that I would really need is a a clear"
  },
  {
    "startTime": "01:16:02",
    "text": "realistic use case where the existing dots, specifications, don't suffice. And, you know, I can sort of understand that value of of for anti DDoS work of having sample, you know, cooperating sampling points across the network that could help you get a better understanding of where traffic is really coming from. Yeah. But but I think we would need to to lay out a pretty clear a tax scenario that you know, represent something that's actually happening and is, And, again, it isn't already covered within the dots framework. The other thing that that I wanna point out here is that if you are building wide you are building a pervasive, passive, You're breaking up, then Oh, this thing? Okay. I see. I'm still here. K. Let's give him a minute. Any anybody else? Busy? Ben, try again. You're on mute. Okay. Hello? Hello? Okay. Yep. Yeah. So, The other thing is, you know, building large scale, passive, Network's Empling systems is useful for preventing DDoS attacks it's also a large scale pervasive passive monitoring system which we've explicitly declared is an attack against the internet. So, before we start building systems like"
  },
  {
    "startTime": "01:18:00",
    "text": "think we need to actually check whether that's essentially permissible. Within our view of security. Yeah. Thank you for commenting. We will propose a clearly use case next time. Okay. It seems that there's a need for more discussion. Like, there is no him, way to dispatch it at this stage. Let's have the those discussions and and then and see if there's interest and and see how we can work on it in the future. K? K. Thank you. Okay. Yep. Okay. Okay. We have about an extra 10 minutes here Any Other business. We'll give you back 10 minutes then. Oh, go ahead. Hold on. Yeah. Dustin. Hi. Sorry. I forgot to jump in the queue. Just because they didn't let me present at the last I ETF. I wanted to let folks know that the, whimsy is having a boss tomorrow morning for, workload identity and multi system environments. Tomorrow morning, and it might actually just be after lunch. I forget. It's tomorrow. So if you are interested in, workload identities, especially the identity training type of stuff that was in the first presentation. Please join us at the Wimsey Buff. It's gonna be a good conversation. Thank you. That's, Wednesday at 10 AM Oh, tomorrow? And it's tomorrow. Tomorrow. This the side meeting? No. No. Oh, sorry. Buff. Buff. Okay. Any other business. Okay. Thank you."
  },
  {
    "startTime": "01:20:10",
    "text": "No no worries. I didn't look at it. Know what you're doing. I should"
  }
]
