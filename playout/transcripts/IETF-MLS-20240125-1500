[
  {
    "startTime": "00:00:51",
    "text": "good morning uh we're at the top of the hour but as usual people straggle in after a couple minutes uh so I apologize if it's really early in your time zone while we wait for a couple more minutes for people to uh appear thanks"
  },
  {
    "startTime": "00:03:19",
    "text": "hey Sean could you say something just to verify the audio testing testing testing awesomeness thank you all right cool we'll give it two more minutes and then we'll jump in MCO is having some problems for both Conrad and I it took a really long time to log in uh sometimes there's a you got to log into the data tracker to get in so it takes the automatic attendance Etc so there might be something with a data tracker"
  },
  {
    "startTime": "00:04:01",
    "text": "but the important thing is you're here now okay it's 5 after it's probably time to start getting this show on the road uh hi I'm Sean Nick is here as well um we're the chairs of the MLS uh working group in the ITF uh this is our first interim in a long long time in the first interim of 2024 um just kind of running through the generic kind of iatf slides um to make sure that everybody remembers them so there's a note well since this is an official meeting of the iatf there's a bunch of rules and things that you need to follow probably important one is that you know we kind of don't harass each other um this working group has been great um if you have any questions about any of those do let me know uh the other really important one is about iprs if you know something say something um we can help you uh submit disclosures Etc um and then there's some additional things about meetings and you know we try to maintain uh you know good behavior as we go as we as we work uh and collaborate um that's really it from the intro slides uh"
  },
  {
    "startTime": "00:06:00",
    "text": "the agenda here is going to be pretty free flowing um there's some things we have to discuss about the recharter uh the isg has some comments on the working on the proposed Charter um we need to uh see what we can say anything about the uh outstanding architecture comments um to get that done because it's kind of blocking the recharter at this point and then we're going to try to talk about extensions uh the extensions Galore as I like to call it because we got a lot to talk about so um I'm unless there's anybody else wants to add anything um let me know when we get to the extension part what I'll try to do is we'll try to frame the whole discussion and then see if anybody wants to say anything about a particular extension because I know that there were some chatter on the list um about some some new ones that might come in uh and others that have been around for a while um and try to figure out how we can get the work going and get get the extension work actually done um all right does that sound good yep awesome thanks vamin all right so let's get on to the uh the uh not the um stop sharing this screen and now I'm G to share this screen which one I'm gonna accept this and then I'm G to pick this one so as you might remember we submitted uh our Charter text and it had a lot of history and basically all we did was change some verb tense well we got two comments from the isg that said hey a lot less of that history uh we don't really need all that so my response back is great we'll just cut all the history so now the document uh the charter is pretty short and all it really says is you know we're going to maintain the protocol you know and then we're going to work on extensions which is really what we're going to do anyways and then it basically just lists all the extensions we had and then one of the other comments was um uh somebody said well you could technically read the last paragraph"
  },
  {
    "startTime": "00:08:01",
    "text": "there that the internet drafts and imply that we were never going to publish any of them and I don't think that's the case so I put separate specifications to kind of answer that um I know that many of you might not really care about the minutia of the process going on is there anybody that objects to this kind of approach where we're just like all right we're going to work on the extensions the the the previous Charter exists it's findable if people want to read the history about what happened it's there um does anybody really object with me just kind of trying to get this done yeah I I don't object to the overall approach I think the one paragraph I would keep is just the first one that says what we're doing here it just kind of sets the context yeah okay I can do that I don't want to do this in real real time that would be embarrassing for me uh anybody else all right I'll take that as uh done um okay so the next thing H to look at is the stuff from Rome so I want to thank Benjamin and everyone else who went through a bunch of the uh comments uh so the first thing I think that we should probably talk about is the big open issue one which is can I just kind of pull that out into another window yep okay cool let me share this one soorry which are we talking about the architecture now yeah moved on to the architecture I think we're pretty"
  },
  {
    "startTime": "00:10:00",
    "text": "much done with it uh the other one I think it's this one so the one open issue I think that we really kind of need to discuss is this um recommended for encrypted group operations so this is where uh there's this recommendation and I think eer is basically kind of saying uh you know that like MiMi is doing one thing and we're suggesting something else and it's kind of not really uh in alignment if you kind of go through the rest of the discussion um Rowan did a good job uh suggesting something but then Acro basically said this sounds like it's kind of wishy-washy so I guess I'm trying to feel what everyone else's uh opinion is on this and if there's some way we can drive this to closure to recap I think that basically we don't have like seems to assume that basically we have like only Mimi as a use case and that uh aend should not not conflict with the only one standard we have I disagree I think that the general way of of doing this is that we I think we all agree that if we can we should actually uh encrypt operations and if there are use cases where you can't you can't and that's fine I don't see I don't see that as a problem to be honest um like we can't foresee all uh use cases of MLS requiring not being encrypted so I would say we just like add the recommendation and maybe we can caveat it a bit say you know add the sentence say in the in the few cases where you actually can't get the functionality you need byting group operations don't uh we but take care take take precautions so I think that's the way out of this because typically if you say if you say like because we're not using 2119 language here because this is an informational document if if you were to make it 2119"
  },
  {
    "startTime": "00:12:00",
    "text": "language and say should usually we'd say why you wouldn't do that so I would think that if you did that that that might address the comment but Richard yeah I mean I'm I'm sympathetic that it feels morally right to recommend doing the confidential thing here um but the thing I think stand's intention is not just Mimi but empirically the other deployments of MLS that are out there so the one I'm obviously most aware of is WebEx which does not use encrypted group operations um I believe some of the others be good to hear from like Rowan here who believe is in the process of deploying are are not encrypting group operations particularly commits so that the server in the middle can cat the tree for performance um so I think the the idea the fact that you know in practice people are not uh encrypting grp operations for reasons of scale kind of argues against a real strong recommendation here but yeah maybe we could split the difference here by saying yes you the morally right thing to do is to to encrypt the group operations but you know there's some compelling reasons not here for example having servers cach information note if I may that we actually can encrypt and get the same functionality right it's just the cost is higher because you know you need to add an additional encryption of to leak special uh public information to the server so we could do that right but it's just costly yeah well there's no specified mechanism for that you would have to invent one so would say just add the add the warning and say like maybe Sean you can help me phrase this uh so that it actually is the right phrasing but um from from my perspective this is is more"
  },
  {
    "startTime": "00:14:01",
    "text": "um it it's it's it's not like you could get away with not doing this it's that like architecturally a lot of people chose to have the to have the intermediaries involved so that they could be involved in an authorization kind of in authorization kinds of decisions uh so that they could be you know they could be examining the examining the commits and saying oh like I like this commit that looks fine or I don't like this commit but the there's also as you describ like there Al there different ways that you can get information up to the you know to one of the one of the providers um uh you could encrypt it directly to them um right but you could there also different ways that you could provide this metadata privacy which is you could have everybody use uh you know pseudonym style identifiers or like temporary or ephemeral identifiers and then only in the group do you share their actual identities so um I think we want to capture what is the actual property that we are protecting and say if you you know if you need this property then you should you you you should protect it by using private message if you don't have this property and you're or you're doing you know and you need some other functionality then you can go do this the other way I don't know exactly how to phrase that but that's what I think we need yeah the the reason I phrased it in that direction is because we don't know we know what doesn't leak if we actually encrypt it we don't know what does leak and how to protect it if we do the thing"
  },
  {
    "startTime": "00:16:03",
    "text": "more than we actually anticipate I don't know um maybe you know based on the signatures people can just like so there is a signature I guess but there there are there is potential um you know uh right now we don't have like extensions to those messages we don't have like custom uh me Ms messages stuff like this um I don't know this is going to evolve oh so I would I would always go back to the safe way the safe hold the one we know um yeah um so in terms of any implementor that's actually doing private message uh I can think of one person that has a non a non you know instant messaging or audio video application that might be doing this if there's anybody on the call that wants to speak speak up about an application that they're an implementation that's actually using private message for commits that's youing the bom proof here you need to prove that no one is going to do it no no I mean it would be very straightforward if there's somebody that's already doing it to just speak up right uh so I'm working with a client that's using um encrypted group operations okay can you can you share any you know any context or like how this how the decision was made or like what the the tradeoffs were uh well the decision is that it's a decentralized network so there is not a centralized provider to enforce that okay yeah makes sense yeah I mean I think the the the paragraph I would probably right here and again I haven't looked at the text is something is just to highlight the trade-off like on the one hand if you use private messaging you get"
  },
  {
    "startTime": "00:18:01",
    "text": "confidentiality in of everything that's in the uh handshake messages against the intermediaries on the other hand you lose the ability for those intermediaries to contribute um and that impacts your ability to do certain scaling uh things and to have intermediaries enforce things like authorization like R mention if you don't have an extension that actually provides that information yeah there's like obviously future engineering can change either of those properties but the way with RFC 9420 stands that's the case so I guess in terms of a concrete outcome here um Benjamin are you getting a sense of how we could try to craft this text and I can work with you to try to figure out how we can come up with a couple words that we think will'll scoot through here I think that's the the right thing to do yeah I mean so my summary is like it's the morally correct thing to do um there's just some trade-offs and we just have to figure out how to make it sound like we're not saying um must really kind of out of sort of like I we definitely don't want to be able to to say you know Mimi is doing is not following that recommendation so it's a bad thing like that's what we want to avoid right if we can just like phrase it so that we avoid that it's fine okay okay cool uh I forgot to ask for a minute taker at the top of the hour so I've taken some notes up to now uh does anybody else want to volunteer to take over I can do that awesome thanks brenon there is a note taking tool somewhere in here where the hell is it I don't know where it went there there used to be a place where you could like I found it it's at top thanks oh it's sorry it's under my stop sharing but cool um all"
  },
  {
    "startTime": "00:20:02",
    "text": "right so the only other thing that's going on is uh the this list of things that I think ran uh very nicely went through and uh because there a lot of there was a lot of comments and kind of ticks tick through these so Benjamin I think we just kind of have to go through and make sure that we uh address all these yeah I went through quickly and the crl light text got dropped so we don't have to have a reference the mixnet thing I'm sure there's a reference out there I was lazy and went to Wikipedia and just grabbed the first reference that looked good uh you you might know more I mean e e actually think it should be dropped and I'm kind of inclined to say so to I mean yeah so that that's one of those specific uh we don't necessarily need it um you know like if you want we split the transport from the rest of the protocol if you need the transport that actually provides you stronger guarant like strong security guarantees or strong privacy guarantees just shoot that one for and I guess the only other thing I want to highlight here is which you may have read I don't know that everybody else did is that um we had some comments and I think there are some changes that we are not going to make even after the question or the comment they made right so Rowan that was your point about answering putting the a colon right yeah so it's like we're not going to make so there's a couple in there where it's like you know uh like use recommendation instead of 20 19 like it was a question and we're like we're it's an informational document we're not trying to make it 2119 because that puts us in a whole another you know problem so um we're just gonna leave this alone so if you can tick through those that' be great um and I don't want to put too much pressure on you but the sooner you can get that done the better uh because then we can actually progress this document because I I'm at the I think we're pinned on doing the charter until we get this done that's addressed to Benjamin or what were you talking to me about I think it's Benjamin but since you"
  },
  {
    "startTime": "00:22:00",
    "text": "volunteered and stuck your nose out there and we're double- checking let's make sure we get it like this this context like I just totally forgot everything that I know that I knew about these this list of things so I I that anyway there there is a full editorial pass to to take on top of it the the the thing to make sure of is that I don't change too much of the content I actually show that um there is a pool request that you can open um Sean because I intro produced a comment like when I went through the entire thing uh so ran actually made a PR to remove a sentence that I added we can probably discuss this um in a sec uh that was related to maintaining encrypted State on the servers I think and I said you know in the future you can actually I know of existing use cases that use the mic encryption to to to re encrypt the the the the the the cipher Text data on the server um you feel to remove ran um I I have use Cas I I know government use cases that actually do this already uh it's just not super cheap but it works and it's like maybe maybe do you have a reference and is this something that you think well actually you can ask your own government maybe they will answer you uh that's do we have a reference that we can put in a document no um but I don't think we need to as long as it's it's it's not false you can already do this um so in other words so what you're what I hear you saying is the people that want to do this they want to keep it a secret and they already know how to do it and they already know they want to do it well listen and fruse in telling them and for everyone else even if they wanted to do it there's no reference for"
  },
  {
    "startTime": "00:24:00",
    "text": "how they would hly I mean it's like it's standard like everyone that knows F actually knows how to do this like there is there is no like you you go to z. or any kind of company that does FH and you you get code to do that there is like no there is no novelty or strangeness I mean I personally don't care if we remove it or not I think it's just like people in my opinion the way the reason why I added that is is people should know that they can actually do it that's the only reason I added that I don't it's fine if we don't add it Richard I was I was about to agree with Rowan until the very end there like I I would be fine dropping this um you could add some more fluff words but crafting the fluff words is not doesn't seem worthwhile let's just drop it yeah let's just go ahead and get it out of there so I guess uh for the notes we can say uh we're going to merge PR 243 let me do that now yeah okay cool all right so I think that brings to a close the architecture discussions unless unless there's any particular Point Benjamin that you think we should uh further discuss don't think so I mean again thanks for everybody for working through this we're we're getting there slowly but surely um all right cool so now we're on to the extensions uh part of the discussion and I think the first part of the discussion is really uh let me see if I can't find that again um we have this huge list of uh extensions that we're going to work on and I think we probably need to do some kind of treat rage as to which"
  },
  {
    "startTime": "00:26:00",
    "text": "extensions um we're going to like it's this list of you know all of these that we're going to work on so I think there's clearly some that are already in the extensions document that I think we've got some kind of uh agreement on and then there's a bunch more that are coming so I'm kind of curious what people's thoughts are about how we ought to triage these because I think if we show up with 20 extension there's 20 of you and there's only going to be so much energy to get these done and so is there any way that we can try to figure out like how to how to work through these Richard so my personal favorite is the uh additional credential types um mainly because I'm planning I wrote it and I'm planning to ship it um so yeah I haven't updated the draft because there's been no changes I think it's actually pretty pretty baked um we're actually doing some interrupt tests not on the on the MLS part but on the credential bits with some real real live identity providers uh imminently so like this is getting pretty close to like actually being useful in products and so it seems like it would be useful to get it uh codified in the working group um and I think Rowan has an interest in that I think it's it will ultimately be useful for Mimi as well so um yeah I would propose we go ahead and get that adopted so I want to ask you is it baked enough that or uh succinct enough that it could go in the MLS extensions base document or do you think it's better as it's own separate Standalone document um I'd be happy to talk with the authors about that um I don't really have an opinion um it it's a it it's a real simple extension um and yeah I"
  },
  {
    "startTime": "00:28:00",
    "text": "don't think it's going to need a whole lot of of additional um stuff the the one the one thing I would worry would hold it up a little bit is it has an external dependency on open ID for the VC format um so yeah I'll be worried about that holding of the extensions document all right so Rowan do you have a a comment on merging it in with the other document yeah I was going to refer I was going to say the the external reference is an issue the other the other question I wanted to ask is what with the safe extensions um is the it like do we have a good feeling about if part of this is a safe you know like is the is the group context thing that says you can do this is that a safe extension can it be a safe extension etc etc um one other thing just came up on the chat Sean we we had an adoption call on the additional credential stuff back at ietf 117 um can we just consider that still valid and apply it against the new Charter yeah I mean I'm not gonna for ones that we kind of Slam dunked it mean I I think that there were uh I might have to go through some you know minor like hey we already did this object now which changes the the context a little bit um but for ones that we've already kind of demonstrated there was strong support for we're just going to adopt them and maybe what we do for this uh for this so which ones which ones does that apply to to be honest I don't have that list in my head I apologize but uh I could definitely we can I can recreate that list from the minutes uh I guess what I'm thinking about for"
  },
  {
    "startTime": "00:30:00",
    "text": "your document if the concern with the uh dependency is we can always leave it uh in its own separate document and at the last second uh merge them right so if we're getting to the point where the actual MLS the basic MLS extensions document is ready to roll then we can just merge it in or leave it separate whatever I just it kind of feels like if there if the timing does kind of line up where it's possible to put it in one we should have it in one because it's one of the things that I know people complain about TLS it's like hey you've got this one extension document it's great but then I got to go find all of them so it's it is in some ways better to have them collected into one yeah let's let's go and adopt it and I'll try and get that open ID dependency moving and yeah yeah I think technically I can't get it we can't adopt it until we get done with the working group for Charter but you know okay Fel uh yeah just just wanted to get back to the the question of the process here because I feel we did discuss some of that previously uh before we rechartered uh so just so that we are on the same page what we did discuss in the past is that we have this one MLS extensions document um and in addition to that we can have an arbitrary number of other extension documents um and in order to decide where an extension should go we said that roughly the the guidance should be that you know if it's small and it seems relatively useful to a number of people it should go into the extensions document um but if it's bigger uh and if it's more niche in the sense that fewer uh people will use it and it's probably better if it's in a separate document and in terms of adopting it so if it's a separate document ITF already has a process for that and if it is if it goes into the MLS extensions document then it should"
  },
  {
    "startTime": "00:32:00",
    "text": "just be advertised on list that there is an intention to do so and then people can object and if nobody objects then it can be part of that document as it's the case with you know other things you specify in documents um and so if there is no objection to that and then what we discussed previously the only question is once we are formly recharger do we need to go through the process again formally of adopting staff I hope I hope not um I mean the only reason why I haven't done it because typically we have to confirm things on the list so uh there's two ways to do that uh you know we you can send out like a consensus call it says you know disregard everything that happened in the in the meeting uh let me know let me know now what you think or we can say you know there was strong support if you object let me know now for this one I think for this particular extension I think for the safe extensions one I think what we'll we what we're going to do is we're still kind of trying to figure out where it would go because of this external dependency so the other reason why it might not go on the MLS extensions document is because it's going to be it's going to hold everything up for three years right so there's that's another reason why we might leave it out so I think what the plan for this one ought to be is we recharter I send a message to let people object if they're going to to get the document in and then later if we decide to roll it in we can do that um just so that it can keep kind of going on its merry way because I don't think that I don't think the safe extensions one is going to be able to go any faster than the MLS extensions one like that's the one that's gonna I think should should go first and all the other ones can follow and so yeah there were there were like three or four that we discussed uh and I know I know BR had one two that got discussed that was like yes when you provide more information"
  },
  {
    "startTime": "00:34:00",
    "text": "we'll we'll consider it um but there were two or three others I think that we were that were like yeah okay this sounds great brda uh yes that one is also being worked at so that probably falls under the common operational patterns and that one's also being worked out with these uh user tree draft I think those two will probably mature in parallel uh they're out there people can comment um and that there is interest in moving ahead but that falls under that category awesome okay so we're at the point now where I think I did everything that I wanted to do uh and so now the question is there's anybody have any particular uh you know is there some additional information that should be provided about any of the existing extensions uh Etc all right right biry you jump back in the queue again fast turn around uh so there's some work going on on the postquantum side uh some folks have weighed in like a row and weighed in and this goes both to the current combiner draft but also I would say looking a lot further down the road if we're talking past the year mark where we're getting serious about quantum computers and whatnot so it' be really great to get some of the feedback from the implementers on those uh and I think there's various side chats that happened but we can also put this to the wire mailing list if maybe uh but to get that moving uh we really want to hear from the implementation side so that'd be great all right Conrad all right can you hear me yep coming in fine uh thanks so yeah I'm uh we also at the"
  },
  {
    "startTime": "00:36:00",
    "text": "end of last year uh sent around um this the virtual client stock and if people are interested I can talk a bit about this I have a few slides prepared um but yeah only if we have time and this is something that people want to discuss now all right so we definitely have time so the question is is there any raging objection Richard I I I would listen to some slides on that all right awesome uh Conrad I will stop sharing and uh you can grab actually while we are uh building the queue um I also have a some some thoughts from the MIM design team to that may ultimately wash back the MLS working group that I can share with folks awesome all right he asked to share slides is there some place I don't think I've ever shared slides on here so um how does this work I I've put a link to the Google Doc uh presentation to the chat if anyone wants to take a look there um this I think if you there's a share slide button a share screen does it I tried to share slides yeah I think you got a where's the buttons note taking meeting material not there obviously so we put them up all right if you can you try that again shared this is you asked to share slides I hit the X and it's denying it I don't know where to say yes awesome I think you might have to share your screen uh okay um one second um you have now why can I not no screen yeah it's it's fine it's saying I"
  },
  {
    "startTime": "00:38:01",
    "text": "give this little thing and then I don't have a way to actually say yes alternatively you could just open the Google Presentation it's just like six slides or something oh okay uh can you drop that in the chat and I will open it I already you did already you already sent it let me get it in the right window um in the meantime along the like the postquantum thing that that BR was bringing up um I was planning to abandon well it already expired but abandon the the the cipher Suite that's based on kyber and to reintroduce a new document this cycle with this a cipher Suite based on the new X-Wing combiner which is using almost the same method um and just to be clear that's still using x25519 and kyber is just changing how they're combined right uh x25519 and and ml cam which has has like one thing that you need to do different uh to in order to combine the cipher texts back in um because MLM doesn't combine the cyppher doesn't reintroduce the cipher text but kyber did so that the chem needs to do that instead so um but that document is like two weeks old U but I would be happy to make a you know I was going to do a PR on that document to make sure that it registers a um you know to fix the registry and then like just reference that in the same way that I did in the other document if anybody thinks that that is a bad idea please speak now I mean I guess the only question I have is the how long do we have to let it just state in the cfrg before we just adopt it and run"
  },
  {
    "startTime": "00:40:01",
    "text": "off I mean it would be nice if it were a if it were a draft irtf first Nick you got you got some inut yeah I I can speak to this um we're still kind of deciding I've been Consulting with some of the other chairs about what the path forward is for cfrg determining uh things with respect to hybrid chems um there's we're leaning towards um the idea of opening two calls for adoption one for uh generic combiners uh as a cfrg like informational document here's how you do combiners and there's a draft for that from Mike Ensworth and um beyond that um there may be the opportunity to uh specify do a specification of a single hybrid cam whether that's xwing or whether that's uh one of the other the there was another hybrid Cam that was submitted um within the last few weeks uh that that's something that the cfrg is going to put up so if you have an opinion about this uh keep your eye on on the list for um for feedback as to what the cfrg should do okay thanks okay over to you Conrad uh I'll drive the slides let me know when you want me to move up and down okay cool thanks um yeah so this is Joint work with jel brda Martin and Rafael and um yeah can just yeah next slide so what are viral clients vir clients is this concept that's been around been ploting around for a while in the Emos working group before I joined at the very least and that's essentially having you can think of it having a as having a tree and then under IND an individual Leaf you have another little tree and this uh kind of little tree is hidden in some in into some regard from the rest of the tree um and so how"
  },
  {
    "startTime": "00:42:03",
    "text": "then when we we thought about it a bit and how one how we kind of decided would be a way to do this kind of subgroup thing where you had a group underneath a group would be where uh a bunch of clients which you call ulator clients cooperate using an MLs group in um in uh in kind of emulating uh an a virtual Ms CLI so these emulator clients all hold the state of the client that's in the actual MLS group in the kind of higher level MLS group and and then they can uh they can jointly uh operate as that client uh yeah I just want to note there's no this is like not a threshold thing where you need like X number of clients to do something with a higher level client although that might be interesting too but that's not something we thought about too much okay next slide please um yeah so um oh did I M up the order there oh the slide is missing did I delete that slide yeah sorry I just reedit the slide can you go back one slide there's a nice graphic that might make things a bit easier yeah okay thanks um don't know how that got lost anyway so yeah this is essentially how it works you have uh for example you could use a virtual client to do a kind of user action uh in MLS where you have Alice Bop Charlie and Dave and then kind of Dave's leave represents dve but it's not an actual kind MLS client running on running on a single uh device uh but instead it's kind of jointly run by kind of an MLs client running on Dave's phone and an MLs client running on Dave's PC and they both hold the state for this uh the rout essentially on the on this little tree on the right and this state is used to act as the the leave in this kind of higher level group that that uh the"
  },
  {
    "startTime": "00:44:00",
    "text": "group on the left side essentially and so it allows you to have these kind of hierarchical structures so this is just an example you could also have um you could have a hierarchy where you have an organization and then you have all the departments in the tree and underneath the Departments there individual groups that hold all the members of the Departments and you know uh MLS strees all the way down essentially if you want to um yeah next slide please and then going a bit more into detail um yes so it might be a bit complicated but MLS helps us get there uh I think and so uh we call these kind of clients that collaborate in in emulating a virtual client uh call these emulator clients and they have a group which they use to um um to kind of manage the the randomness of the virtual client for example uh if if the client the virtual client wants to do an update or someone an emulator client wants to have the virtual client do an update then they derive the randomness for the update from the group that they use to vir to emulate the virtual client and then everyone in that group has access to that Randomness and then they also as um Richard says this is complicated to pull off but MLS kind of helps us because we can use the emulator clients can use commits to uh coordinate on the actions of the virtual clients and by virtue of the uh kind of commit ordering uh they agree on the sequence of actions of the virtual client yeah yeah it seems like the the main thing just confirm that I'm understanding the the operational picture here it seems like this you you in addition to the uh ordering requirement in the the big group you basic you have ordering requirement in the big group you have order reart in a small group and then they're actually kind of coupled because when some when a"
  },
  {
    "startTime": "00:46:01",
    "text": "client in the small group does a commit they want to do a commit in small group that produces the new Leaf for the commit in larger group and so they this client needs to have basically have the lock on both groups and uh you know both of those commits need to succeed uh in order for the whole thing to work uh kind of it depends that's one way of doing it but you could also um if you want to if you want to um get the performance requirements I think that's on the next slide if you just want to go ahead with the next slide um thank you uh it is kind of why are we doing this in the first place and one of them one of the reasons could be a performance uh increase where uh you have one kind of coordination group and this coordination group or emulator group um emulates virtual clients in a bunch of MLS groups and then you don't want to do uh One update in the emulator group every time you do an update in each of the single one of the higher level groups instead you do just one update and then you feed off the randomness uh in that update for um updates in the higher level groups even if they're kind of of course kind of slightly apart uh temporarily speaking so you kind of lose a bit on the like the PCS FS gets a bit wobbly depending on how you uh how you export the the Randomness but it's a trade-off right because you only have to do uh kind of One update in a small group and then uh you kind of get to use that X number of times depending on how many high higher level groups you have and you can in this kind of uh compounds if everyone does this then groups kind of globally speaking groups have just fewer members and you do um updates generally get uh cheaper because you have this mass effect of uh kind of One update in the smaller groups being able to feed uh lots of updates in the bigger groups and this is especially interesting if you have algorithms or or kind of"
  },
  {
    "startTime": "00:48:01",
    "text": "circumstances that make big groups expensive such as uh PQ sapper Suites or we had a design for um I think for deniability at some point where you had to do a lot of updates and that of course becomes much more feasible if the updates are not super expensive um and also kind of one nice thing that you can do but you don't have to is you can hide metadata so if you um so if if we go back to the example with Dave having two clients then other users would only see oh this message came from Dave but they won't know if it was Dave's phone or Dave's PC and um yeah that can be nice in certain circumstances and others it's maybe not desirable because you want to know exactly and then you have to figure out how you do the As and how you manage the the the key material there so um this is of just a rough kind of draft and the rough ideas that we came up with initially there's of course as you can see there's lots of kind of room in in many directions and now we're interested to see what everyone else thinks what people might want to use this for and um yeah what direction people will want to uh go with this we have a few few more ideas I think but um at this point we're we're opening to about to everyone essentially uh just another quick like how does this actually work question um I can kind of see how this works for the asymmetric secrets that are relatively slow to change um but how would this work for actually sending messages for the yeah for for the secret tree it seems like you have nced for yeah that's that's a good point um that's kind of a thing that we worked a bit on and and until Joel had a really good idea with um where we we and this is kind of what makes it potentially kind of an unsafe extension it's or at least like the Hope"
  },
  {
    "startTime": "00:50:01",
    "text": "initially was to make this completely transparent and then kind of so that no one in the higher level group would actually you can just run vanilla MLS and no one in the higher level group would actually know if someone's operating a virtual client but this doesn't quite work because of course if one of the kind of emulator clients sends an application message then that secret is burned and then if someone else sends kind of another message with the same secret you kind of cross the streams there uh that's not great because then you get decryption errors we don't want that and so um you what you do is you have a different secret tree uh uh design where at the leaves of the secret trees you have kind of uh a puncturable prf where the client who sends the application message sends along a challenge that you uh or kind of a secret value sorry not a secret value an actual challenge that you use with the uh pprf to derive the secret nonpar so there's more information on this in the draft but you're right that this is not super straightforward and uh but on the one hand it's not super straightforward on the other hand we have a solution I'll be one that's not vanilla MLS compatible yes so I have a question from the perspective of the platforms that are actually going to hold the keys in a lot of scenarios um in a normal scenar we basically keep the asymmetric keys and and the and the encryption keys in the platform for the application so that the service provider actually doesn't have access to those keys but um here you are basically proposing that clients have to build a shared secret that's outside any secure Enclave or any hardware or any protection mechanism because you have to be able to uh build it across device and so basically you are I think it's it actually will be very negative on the actual security of the"
  },
  {
    "startTime": "00:52:00",
    "text": "keys uh that people would would expect from uh an MLs session where you know one client has its keys in the platform it's in Hardware it's in DOS or whatever but it's not the application that holds those keys um and in some sense here you have to export things in outside of the platform so that you can do the the magic uh to synchronize everything so I have a bit of concern here on uh just put on the secure Enclave says Richard uh you know like keep in mind that I like strong you know like doesn't feel amazing in terms of key storage and you know actual level of security that you get um but yeah just to S like that maybe we can find a way to actually mitigate that that would be good um but as a first so this seems like um pretty difficult to handle um yeah so so it's it's a bit ambitious the the whole thing um and then I'm not sure if it's going to work out and be practical in the end but um uh we we're optimistic with regard to this key sharing stuff I mean keep in mind that it's not we're not sending around key material right everyone just deres the keys uh locally just like you would an MLs exporter uh key in in any other group um what you might run into though is where you have to um uh depending on what your as looks like you might have to derive the um the signature key of the virtual client and if that is supported by your secure element I don't know so yeah these are all things we we have to figure out um Fair points Fair points but yeah you you want to write a section"
  },
  {
    "startTime": "00:54:00",
    "text": "sorry Benjamin if you want to write a section on on the kind of considerations we have to make in the document then a PR I can help you that that's great thanks sorry Rafael uh yeah I also want to chime in on on the questions from Benjamin so I think the status quo with secure enclaves at this point is that they can hold signature keys but not hpk keys anyway so those are out of scope uh typically uh so in that sense it doesn't really apply here and like Conrad said for Signature Keys uh it's still a question how the as Works in that instance and it's not something that the virtual client document will you know specify in the sense that they won't be just a single solution here if it is repeat that but you said at the very beginning please that you can have what but not you can have what kind of keys but not the other signature keys so um hpk Keys like the the cem part is typically not supported by secure enclaves at this point um so the understanding is that they they will hold signature keys if anything um and so in in that sense it's it's not a concern since secure enclaves cannot cater to that anyway um and for Signature Keys it depends on what the application chooses to do uh for the as um it it's still like if if you really want to use a secure Enclave for signatures um then you can still do that it's it's not prohibitive in that sense but in the past I've been part of discussions where um it's also not practical to use secure enclaves um Richard just says okay that Apple now appears to support hpk okay that's cool um that's new"
  },
  {
    "startTime": "00:56:02",
    "text": "apparently so but the the question here is whether you only store long-term signature keys or also short-term signature keys in Secure enclaves um because accessing that at least on Apple uh requires um to actually have biometric authentication which then again prevents apps from signing stuff when they're in the background Etc so there's a bunch of considerations there uh to look into but again virtual clients are not necessarily prohibitive of that um and yeah so but yeah why rise man in the first place is that uh what I feel needs to be repeated here is that virtual clients you know this can be a brutally uh you know gain a brutal gain of efficiency um depending on on what the architecture picture looks like so this is really um the biggest win here is efficiency if you consider uh like messaging services that allow say up to eight or 10 devices you can hide all of those behind one leaf that makes a huge difference did anybody want to comment on on Rafael's thing or I might s my okay um yeah so on the efficiency side as well like if you have a c if you have like two different organizations or a handful of different organizations that have that have a a chat with a lot of people like this com this often happens in um in financial trading that they the efficiency can be even larger because you could have one you know like a small uh like a small uh"
  },
  {
    "startTime": "00:58:01",
    "text": "brokerage house or something like that with a handful of users and they're dealing with you know in a group that might have um that might have hundreds or thousands of of uh of users from other from other organizations and so you can like breaking the hierarchy up so that each organization is a is uh the top level only has a single lead like that's actually an even bigger efficiency gain um so that's pretty tremendous that's like that would be quite useful what what what you what would be very useful is to have like um an assessment of the impact on FS and PCs windows for the overall OC secrets um I anticipate that basically it's not going to change much except that the W the windows will sort of expand because you have like bunch of clients um it would be good to have like this kind of but I mean it's interesting overall maybe we can actually build something that's super nice and secure with that so yeah uh yeah maybe one more word on that um we can get pretty tight forward secrecy when we're using uh pprf Explorer uh as drel proposed at some point um so all the secrets we export for the virtual client actually for secure at that point um and then the only thing that suffers this uh post compromise security because of course if you kind of reuse a secret from uh kind of an update you did in the in the small group kind of earlier on um then you're not getting true post compromise Security in the uh in the lot in the higher level group you only get the same that you got in the in the smaller group essentially so yeah it should be pretty straightforward but that that's definitely a section we should include"
  },
  {
    "startTime": "01:00:02",
    "text": "greated so um a small addition to that the um that's true so if anything like per group PCS becomes potentially worse at first however it really depends on what your initial policy is for issuing updates so now that the groups are much smaller and things are a lot cheaper to do you can actually increase the frequency with which you do PCS so what looks like a loss at first can actually be a gain depending on how aggressive you are so it's it's kind of hard to say you know this is going to make it better or worse it really depends on on the lot of parameters that sense um if no there's no one else there's one last slide that I forgot conveniently called limitations um because uh there are um of course the limitations that we already discussed and then there are two a bit bit more subtle ones is that um it gets hard for external uh or or kind of becomes hard for someone who's not in an emulator group to remove a member of the emulator group because even if you remove that person from the emulator group it still holds all the secrets for all the virtual clients so um that needs some more thought although there are possibilities like you could um you could you know publish key key packages for which only a subset of the emulator group holds the secrets and there's a few workaround ideas but that's something we maybe even need to live with and maybe we can can crack but that's a at least a limitation and then uh external Jo external joining by new client so if Dave gets a new uh I don't know an additional phone or something um"
  },
  {
    "startTime": "01:02:01",
    "text": "this is a bit harder because uh the phone can join the emulator group but it doesn't automatically get all the secrets um from the higher level kind of virtual clients groups and either so either an existing client provides it with that stuff or it um or it doesn't externally join in all of the virtual client groups which might might be okay because in the kind of the natural setting where each client is an individual Leaf it would have to do that anyway um or it would have done that anyway so the performance would probably be roughly the same but yeah those are kind of the limitations that we stumbled upon but I'm sure there's more to discover once this gets closer to um yeah people start thinking about it more in their respective use cases and I think that that's all I had on this well well from my perspective I think actually this looks kind of interesting um and really the way that this is supposed to go is you bring stuff that's not fully baked and then we bash on it and we find things that are either good or bad and we iterate on it so I think that that's it's all good uh Richard yeah I just going to plus one that is there there's not is there a draft in this yet Conrad there is a draft uh let me find the link yeah I think this seems compelling enough that reading dra would be interesting um not totally sure it feels baked enough to do any adoption yet but yeah wouldn't be super confident on on the adoption but maybe you know if people have time to uh read until the I don't know IDF 119 I'm not sure if that's too close for adoption but um yeah there's I put the GitHub repo Link in the chat yeah in terms of whether we could adopt it by if if people think it's like baked enough could we do it by uh Brisbane which is in March yes we get in two weeks is really the the kind of uh"
  },
  {
    "startTime": "01:04:02",
    "text": "time that we need to run the adoption call but uh it's probably not a burning need that we really have to get it before Brisbane because we'll we're gonna again I requested two hours we should have some time um at the end if we want to bring this back up and talk about it if you have time to update it uh in in the meantime so all right um anybody else on this particular uh issue or draft all right Conrad thanks um Rael before we get too far uh do you want to say anything about the generic MLS extensions draft or sa safe extensions or anything about the the ones that have already been adopted thanks um yeah there hasn't been any activity on any of that actually uh in the past weeks and months so unless there are some questions I actually have nothing to report at this point okay great thanks uh Richard all right let's see if we can share a screen here um so this is going to be some brand new stuff um so if folks are aware that that Mimi is a working group that is planning to use MLS um and so the Mimi has a design 19 has been trying to come up with an an initial protocol the working group can adopt so they've been thinking about how to use MLS for this generic interruptable messaging protocol hold on Richard Nick is there is it is it me or is it because I don't have a way to like say yeah you can share the screen is there some way because I can't like approve it I don't see any place where I can approve it okay here we go yep yeah I saw a new share screen share as being started but then it"
  },
  {
    "startTime": "01:06:00",
    "text": "disappeared uh yeah I I attempted it seems to work okay uh interesting so you give it a shot and I think it just it should just let you do it because I don't there's no way for me to accept it uh it does not appear to be let me sure so what I'm going to do is I'm just going to drop a I'm going to do what Conrad did and drop a Link in the chat to a little piece of text um that Rowan and I wrote so the the thing that Mimi is trying to do is you know run an MLs group alongside a messaging group that sets up the uh keys for confidentiality for that that group that provide intend protection encryption confidentiality protection in the face of the the Mimi servers and also synchronized some information about the state of the group now I realize this needs a new uh name that doesn't have such an awful acronym um but uh the idea is that um the Mimi Charter forbids them from developing extensions to MLS um so the you whatever the bits are that Mimi needs to uh synchronize their App State um we'll need to wash back to MLS so this is just like a super sketchy um first pass at what that synchronization primitive would look like basically the idea is that you have an extension sitting on the group context that reflects the current agreed state of the group um you know again in whatever form you'd like to imagine that that's something we can discuss um you can imagine just hashing some State object you can imagine having something more literal and then so you have a group of context extension that captures the current agreed State and then there's a proposal type that uh reflects updates to this uh this application State um and again the"
  },
  {
    "startTime": "01:08:00",
    "text": "format of the updates um can be is something about which we can have um reasonable disagreement in fact Rowan and I were working on this and we we have pretty strong disagreement about whether the State updates should be opaque or whe they should have some structure that the MLS implementation could could handle or whatever um but in any case the idea is that you you basically tunnel the application State updates through MLS so that um you you can well by virtue of the group context extension the group the App State being reflected there that gets fed into the key schedule so you know the whole MLS group agrees on the application Level State and then handing things around in updates um in either private messages or public messages as we discussed earlier means that you know that provides authenticity conf Andor confiden protection uh as those those updates are getting sent around and having them as proposals makes sure that the clients processing the updates and uh you know agreeing on the updated application State have gotten those updates before they um you know confirm agreement uh using the m key schedule so yeah that that's the idea here Rowan did you have any any further thoughts on that did I miss anything yeah I I would just say from um you know in terms of trying to make this this concept simple The appsync Proposal type allows you to say here like here's there's a registry of applications uh of application State blobs and you can unlike the group context extensions proposal you can you can manipulate any one of these blobs independently uh and still get"
  },
  {
    "startTime": "01:10:03",
    "text": "agreement and this doesn't need to you know and because it's an application State thing it's a thing which is presented up to the you know if you're writing an MLs stack that you present to the upper level to the application and it it's basically it could be treated as opaque or as like um some kind of a struct that that isn't interpreted by the MLS stack uh so the the only disagreement that Richard and I had was whether we also want the ability to be able to have um have some have some struct uh some structure to these um individual application State objects and so what what is in there is basic basically well you know there's some common patterns of having maps and and arrays um and so being able to manipulate those individually um could potentially in large in very large groups it could prevent you from having very large updates of any of these items and in the Mimi case that was you know that was potentially interesting if I have to go and modify the entire participant list for a group of of 10,000 users um that could be that's a big update whereas if all I want to do is just remove a single entry in a in an array um that's a much smaller operation thanks and yeah just so just to again remind people of the status of this this is like not even agreed totally agreed among the Mimi design team much less than Mimi working group this is just presenting an an early warning of some ideas that might wash back into an ID if the Mimi working group starts to head in this direction or you know if folks think this is"
  },
  {
    "startTime": "01:12:00",
    "text": "generically useful we can certainly uh you know tune it up and bring it over here um for other non-mi reasons Conrad uh I have a question so this application ID uh un32 is that meant to be aana registry control because otherwise it's going to be complicated yeah something like that there yeah there needs to be some some way to manage those um yeah the idea of the application ideas just that you can potentially run multiple different types of application State on top of a single MLS group um and yeah you you would have something like an registry to to deconflict those and then kind of follow questions long as there's no one on the on the line um in terms of like kind of layers of ab exraction so so one immediate kind of advantage of this that I see is is if you implement it you can implement this and you can have a nice a kind of API for this extension and everyone calling your stack you know you don't have to implement your own proposals like even if you used the safe extension interface you would still have to uh kind of implement the semantics of how you want to modify the state that you have so this makes it really easy from a from a makes it really nice from from an API standpoint uh of an implementation um at the same time so there's kind of application ID so this kind of looks a little bit like the um the safe extension draft this kind of generic extension uh so I I guess what I'm trying to say is there's some overlap and and I'm just trying to figure out how we can how we can merge these or or if it makes sense to merge these in a in a way that that makes sense um but yeah we can we can talk about that offline maybe and um and and I guess what I'm trying to figure out is when would you register an"
  },
  {
    "startTime": "01:14:01",
    "text": "application ID and when would you register register an extension ID and kind of what makes more sense yeah yeah um so Conrad I think you would register an you would register a regular safe extension when you wanted to um when you wanted an extension that was modifying the behavior of MLS as opposed to just carry just providing agreement on something that's at the higher level does that make sense um that does make sense although you can also have an extension so I guess what you so what this does is that it kind of it's a really generic way of allowing applications to just have some state in MLS and agree on some State I think that that was the main intention there right yeah um and then you can still have an extension if you want uh well I guess it doesn't really have to be an extension if you have proposals if you just want to Signal operations regardless of any state you could register individual proposals or register an extension and then have extension proposals under that extension um but yeah anyway I think I think that this is a really useful mechanism and um yeah I'm just curious how how it interacts with the safe extension stuff yeah no I agree we we need to work out the answer to that question it should be safe because it's just touching it's not touching OCD all it's just handling application stuff but yeah we should we should definitely do that Decon flection all right that's all I had on this all right um Rowan you were the other person who was uh fast and"
  },
  {
    "startTime": "01:16:02",
    "text": "furiously uh generating extensions which of any are still a going concern I we heard about the the PQ switch so I think we can kind of go past that one yeah so um looking at the list of the presentation that I did at 118 so kind of going backwards I abandoned group anchors that's still abandoned we don't need that the um x25519 kyber draft I was planning to replace that with one that uses uses X-Wing instead um uh extensions for Mimi basically like we wouldn't need to do you know basically we would just use what Richard described um and then the last to our self- remove and this MLS key package context um um so for self remove um the you know I I think we could we could go forward with this but it seems that um in the process of going through all of the all of the the things that we are the use cases in Mimi uh I keep coming up with this condition that I think we want which is in instead of assuming that external commits um don't have access to pending proposals that maybe we should have made the opposite decision which is that or or we should have a way to switch that behavior and so maybe instead like we wouldn't have needed self- remove if we had a way to ensure that external proposals always used uh always always had access to all pending valid proposals so an external commit just"
  },
  {
    "startTime": "01:18:02",
    "text": "goes and says give me all you know give me the group info and by the way give me the list of all the pending proposals according to the according to the you know Hub provider or the you know whatever the um the the the the DS can provide like here's a group info here's a ratchetry here's a stack of you know here's a stack of pending proposals uh and then you can generate a commit with all that stuff and commit it and Bobs your uncle um that seems actually like a lot more elegant than like we wouldn't need the self- remove proposal if we had that um and it allows for a bunch of other things that could potentially get uh externally proposed uh like like appsync proposals to change the state of a um to change you know what users are allowed to do what in a in a Mimi room does anybody want to comment on that at all nobody's jumping in the queue okay so I what I'm probably going to do is I'll I'll probably refresh self- remove so it's not dead but I'll probably also go and write another draft kind of proposing this and if anybody is interested in collaborating on that and has an opinion about you know how that should be done or um please let me know right Conrad I just want to say that this is a thing certainly worth doing and if you need any help feel free toing me okay"
  },
  {
    "startTime": "01:20:03",
    "text": "thanks okay and then um so then the last jumped in there too oh yeah hey BR hey I was goingon to ask if you have thoughts on um how or if this would work with encrypted uh encrypted proposals um so let's say that so if you were using encrypted proposals would you ever use external commits uh and if if so is the like presumably if you're using external commits in this kind of distributed group the only requirement is that wherever you got your um wherever you got your um your group info you also get your stack of pending proposals so if those are both coming from the same Leaf node then it seems like that would still work um so I think it it depends on how you how you decide like who syn you know how the synchronization works so like you in a distributed environment if somebody sends out a proposal and as the as a commit is being sent and they cross on The Wire you know and this one the commit has pending proposals one two and three and uh proposal four was sent how do you decide which one is valid I I I don't know um but that seems that seems like that there's not really any any particular problem with the idea of getting here valid a stack of valid pending proposals as an external committer okay I'm not sure that this would work I'm not immediately sure that this would work in a decentralized environment because it sounds like you need um a"
  },
  {
    "startTime": "01:22:02",
    "text": "really strong consistency guarantee that you have somewhere that knows all of the proposals that have been sent which you wouldn't necessarily have if you're decentralized um but I definitely think this does sound like a good idea in a centralized environment where you do have that um yeah because you basically because of the the improvements that is said I think are worth it okay so let's if I can if I can recap it sounds like if you're in a centralized environment this makes sense if you are in um a d centralized environment with no strong notion of consist of consistency then this doesn't make sense and potentially if you were in a distributed environment that that did have some strong external notion of consistency it might make sense exactly yeah okay okay any other any anybody else want to say anything about this particular topic here okay and then the last thing that I had here is this uh key package context and I I haven't really thought about this in a little bit um I Brendan made some arguments for why he thought this should be done at the application layer and I think I still need to go off and think about that and reflect on whether that whether that makes sense or not to me and either drop it or come up with some additional arguments why I think it's important so okay uh great uh at this point I'm willing to throw it open to anybody else that has anything related that they'd like to talk"
  },
  {
    "startTime": "01:24:05",
    "text": "about okay uh br oh we can discuss a little bit on the postquantum side I believe ceson might have a slide or two to share uh and awesome get some feedback from everyone about options there that works that works great we got 36 minutes season number few and we're back into how do you make so I see you there but I don't know how to make you share slides or share my screen yeah I think you got to share your screen unfortunately just make sure we can't say anything important behind it okay can you see my screen or at this point no unfortunately uh I will post the uh slides yeah apologies I suspect this is probably my fault no no worries I think you need to provide access to us so I think you have to change the sharing permissions to anybody with the link oh yeah sorry about that no worries I do it all the time I literally just made these slides that's good nothing like on on the Fly uh share publish to"
  },
  {
    "startTime": "01:26:19",
    "text": "web does that work oh there we go screen share is being started oh that's for you okay all right uh I'll guess I'll let you uh dis jockey this uh yeah so uh we are um doing some parallel work to the um hybrid Cipher Suite uh PQ work um we're trying to specifically tackle uh MLS combiners that have a little bit more flexibility um that go a little bit beyond uh the Harvest now decrypt later uh attack model um so uh so we're focused on getting the postquantum security without always paying the postquantum uh price per message um and we have uh two uh combiners that uh tackle this um and also uh one of the other added benefits is that uh there's some extensibility uh for um for these types of combiners that allow you to combine non MLS secure group me Messengers and allows for um pigging backing off of a large superg group uh a postquantum MLS supergroup"
  },
  {
    "startTime": "01:28:00",
    "text": "with smaller subgroups uh within an organization uh so we thought this might be interesting to share to everyone and um get folks opinions and uh feedback on um how uh feasible this might be to deploy and um any kind of challenges that you may see uh in this uh in in deploying something like these um so all right so uh next slide so the first uh combiner is using uh is what we call a key management session combiner but you basically have two groups um which may or may not use uh MLS actually um but we assume that at least one of them is using MLS uh for for the sake of this example um and basically a senders samples a random aad key uh in uh one session sends the key uh in that session and then sends the cipher text um which is the encryption of the key in the message in uh group two uh and then to decrypt you would um only only users who are in both groups would be able to decrypt the message um so this is our kind of aead combiner or key management session combiner example uh and then our second example is uh on the next slide it's the exporter com uh combiner uh this one is basically using um classical and and postquantum MLS sessions uh together to allow you to have uh what we call full commits or partial commits where um in order to do a full commit you take uh the exporter key from one session and commit it in the other session um uh and then take that exported key to the uh post Quantum"
  },
  {
    "startTime": "01:30:01",
    "text": "session again uh and then commit it again so that these two are these two sessions are essentially glued together in this way with using both exporter keys from the two sessions and the idea here is to use the uh classical uh session to do all of your um all of your commits and updates uh which we call the partial up kind of a partial commit or partial update uh that way you're not paying the postquantum price um each time you're doing a commit or update um so these are kind of high level overviews of the two different kind of combiners that we had um and I can go into more detail about the various pros and cons of each um but as maybe that's enough for now for people to kind of just digest a little all right we got a key we got BR and then Richard yes I just want to throw in a little bit more context behind motivation you know right now we have effort in the working group towards a hybrid combiner like for example xwing and what that could be and that's a good like immediate solution that something available we concerned about post Quant and harvest all that but what our group uh has been working on is how to look a little bit more strategically long term and there's two sides to that one is where basically post Quantum authentication is a concern as well that's one part and the other part that's probably even a little bit more interesting to the group here is about efficiency so with a hybrid combined like X-Wing your postquantum updates and your standard updates are intrinsically tied together and you they have to happen at the same time and of course there's a postquantum cost to all that and what some of these ideas are"
  },
  {
    "startTime": "01:32:00",
    "text": "getting at is how to be a little bit more flexible in that so decoupling those two things so for example in the exported version if you had a postquantum group and you with postquantum updates you don't necessarily need that same frequency of an update it could be a much longer Epoch uh but you are basically bootstrapping that into getting all these stand updates that are maybe much more frequent and that saves you lots of costs so these are the sorts of trade-offs that we're looking and of course when we talked about that postquantum update it could happen at any frequency so for example that postquantum group might happen once maybe have one update if you have a very you not much security risk overhead you could do that at the initialization of the session and not update again or potentially ever but or at least for very long frequency but you might still be able to get some pretty strong guarantees in your regular standard session because of that inject so these are the sorts of combinations that we're looking at how to balance all these different guarantees and kind of planning for that you know beyond five years into 10 years how to be more module modular in this approach to that uh we could have one way to say here's how to do Post Quantum and it would work no matter if an implementation is concerned or not really concerned about you know Quantum threat or as much more concerned so they could just increase frequency for example so that's on the high level goal and I'll turn over to Richard for next in the que yeah thanks for that extra F exper inspired several more questions uh than the ones I started with um so thanks for the overview she s um I just wanted to kind of read back these two options um starting starting in to make sure I understand um I just wanted on the exporter one you have on the screen um okay well start with this one so this one it sounds like um the the combination is basically done at message"
  },
  {
    "startTime": "01:34:02",
    "text": "time um by passing keys at as messages are sent is that right that's right yeah okay yeah and the other one it sounds like you're you're exporting Keys exporting psks from one group and inject them into the key schedule of the other group that's right yeah so so that lad approach seems a lot more natural to me happy to write this up in email to you as well um this seems a lot you know you're you're attacking the problem at a higher level so you're hitting it at the key schedule level so it flows out through um all of the the message Keys all the exported Keys as well it seems um um seem seems like a more systematic solution to me than than doing out out of the the edges of the system um so that's that's my initial reaction at least I I think you I need to read your uh pros and cons list or if you'd like to go through and here um anyway that's the additional initial reaction um I wonder so so was talking about authenticity um it's kind of interesting here that like if you're authenticating it in the PQ chem group like maybe I I wonder like do you need authentication in the in the classical group at all um right where if you basically you know already done the the secure authentication you can just leave kind of leave that beat um so think it's kind of an interesting general property that you may actually have lower requirements on the classical group once you set up the PQ group but I think that kind of highlights a general point that it if we're going to do some work on this we'll need to be kind of clear on what the classical group is buying you here um right if if you're if if you assume a"
  },
  {
    "startTime": "01:36:02",
    "text": "Quantum attacker that can compromise all the keys in the classical space then all of the if you want to take an extreme position it's arguable that all of the work you're doing to make this this classical group go is not really buying you anything uh because it can all be undone by the qu Quantum attacker and you're um uh you you're you're stuck relying on the entropy that you got from the the PQ group um now maybe the the argument is that you you're not that that's that is your posture with regard to a post Quantum capable attacker um and you still get better properties with through to a classical attacker I just think if we're going to write do something here we need to kind of C story on what the properties are we're getting um last comment I'll I'll throw in there is this this this might be a good thing to to kind of combine with uh the with a draft on the the PQ Cipher Suite I think the PQ cyer sorry the hybrid Cipher Suite is is a small enough piece of work this is a fairly small piece of work especially if we do the the com the combiner report seems pretty simple um I think it would would probably makes sense to have an overall kind of how you do um PQ migration draft as opposed to smaller individual drafts so that's that's a bunch of stuff but hopefully some of that's helpful yeah thank you um yeah really nice work thank you um just a small comment on practical aspect so I think it would be interesting um to think about the engineering requirements here one of the risks is obviously when you have two groups is that for some reason they're not you know entirely synchronized on some of the clients which is bad um and I was wondering um if you have thought about"
  },
  {
    "startTime": "01:38:00",
    "text": "some you know simple mechanisms like having uh a common framing format to have these full commits um so that they always go together uh so that for applications you end up you know treating this as a bit of a blackbox where essentially you have an API that is very similar to The Standard MLS API um and you don't really care how stuff works inside the only difference you see is that messages are going to be larger and computers probably going to be a bit slower um but that's pretty much it I think it would be nice to to have that level of abstraction ultimately definitely the engineering feedback like that is stuff that we're looking for at this stage so that is really good um I I'll throw out another possible use case just as an idea to get people's um Rings turning on this and can also respond more on the mailing list but something that we discussed is that if you are having the postquantum group essentially you're getting you probably not say your average Joe attacking you at least for some time right you're talking probably maybe an outsider threat to your organization so for example you could uses where you may have uh say postquantum group that if it's a small organization or maybe if it's large it's for your department it has all the members of your department in that postquantum group and then for all the side chats among and all the subgroups of your department that are doing all sorts of different other discussions and have their respective MLS groups they can use this serve as a um key pool a postquantum key pool to say inject King materal material into for hardening you providing postquantum hardening and in that case U you actually probably don't need to have any synchronization between"
  },
  {
    "startTime": "01:40:00",
    "text": "those two groups and of course this kind of goes back to the question of attacker model of refining exactly and again long term you know looking that we make a solution that can actually hold up to a change over time that will meet the different use case concerns um as well as engineering and providing efficiency so just wanted to throw out that possible uh use and see what people think and if it would be interesting or the no doesn't satisfy of security considerations and this can always be taken to the meiling list too for as ideas come up over time all right Richard I see you still on the Queue is that uh residual yep all right well we seem to have drained the Queue at this point okay um thank you very much for that um I snag the link we'll make sure to put this in uh the minutes uh so people can check this out and uh definitely make sure to forward anything to the mail so we can continue the discussion because it looks like there's some something here uh David yes uh can you hear me yes we can okay so I sent a message uh through the MLS mailing list a couple of days ago I don't know if you had an opp opportunity to to read it it was about the verifiable credentials in in MLS and I wanted to H well I don't have a presentation or anything but to briefly talk about my idea and want um and see and listen to your opinion about if it would be of interest of the group ER my idea was to create some kind of attribute based mls in which you could H"
  },
  {
    "startTime": "01:42:00",
    "text": "authenticate uh to the group by presenting attributes instead of your identity and er we believe it h would be useful in some kind of decentralized setting and seen a lot of work of a of MLS H targeting that kind of environment I thought it could be of interest to the group um I don't know about your opinions in h in that kind of authentication model for a distribute to the settings anybody got some initial thoughts Conrad yeah sorry um sounds interesting but I have to admit I didn't quite understand the use case so could you maybe give a kind of practical use case where or or or even how it would work if attribute based encryption but yeah sorry go ahead so H the idea is mainly in the authentication method instead of using a digital certificates or anything that can be L linked to the users identity to a access groups based on ER on attributes ER that means H for example having some kind of University degree and so in a decentralized setting some MLS group could H publish information about uh what attributes are require required to access access that group group ER and in that sense H users could authenticate to the group by presenting exactly exactly the amount of attributes"
  },
  {
    "startTime": "01:44:01",
    "text": "required to access it h such that ER instead of using their identity they could it would be more privacy preserving ER I don't know if I'm making myself clear but yeah uh know that that was useful it was just that so would it be that I'm in such a group and then I get a message and and then I can only authenticate that the cender uh had some sort of one certain attribute um H the idea is um imagine a MLS group that only H people with an specific University degree can access and H you could present a a credential proving you have that specific University degree but without revealing any other information about you ER so uh group messaging could be established in a in a low ER in a high privacy setting so what you're um so but who would verify the attribute would it be the other group members or is this access control thing group member like in ER standard MLS um er the idea I deviced was through users could join through external joins ER and every other user would verify that H attribute credential I see thank you okay uh if you have any any opinions about that you can er ask me or send through the MLS mailing list at another a moment and thank you uh so David I'll"
  },
  {
    "startTime": "01:46:04",
    "text": "send you some messages off list about uh how to how to pull together the idea um via VIA an internet draft to get you uh sucked in um because that's a lot a lot of the ways that people really want to see things presented and so then they can review them um and I also provide a little insight into how to participate remotely um in our upcoming meeting in Brisbane which is in March okay thank you all right we got about uh 15 more minutes does anybody else have anything that they would like to add all right well uh from the chairs Nick and I I want to thank you for participating um we got some action items so we'll try to get the charter done we'll get the architecture document uh finished off here in the next couple weeks hopefully and uh then we'll you know we'll we'll redo the um the um extensions work and get it all in in the appropriate way and then start uh marching forward uh thanks everybody and again anybody who stayed up late or got up early appreciate your time thanks bye everybody"
  }
]
