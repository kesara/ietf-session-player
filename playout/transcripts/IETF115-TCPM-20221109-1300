[
  {
    "startTime": "00:00:04",
    "text": "so but we have a lot of ideas but it's a challenge changes um thank you one more minute"
  },
  {
    "startTime": "00:02:18",
    "text": "foreign [Music] no well we waited for you [Laughter] [Music] at least we both are talking that's why yeah we can move it yeah foreign"
  },
  {
    "startTime": "00:04:05",
    "text": "thank you for noting I would not have checked out somebody wants to share I loaded up in the data tracker got it yeah I have no idea um yeah I can stop presenting oh is it showing up then there I will stop there you go you're welcome it is always at the door but yes if uh folks could sit down and uh also make sure to register your attendance uh either scan the QR code here or at the door um or log in uh all those things seem to work well thanks I think now we have the reason I think it takes I think it just shows up in a moment doesn't it I think if I wait like three minutes it'll just be there I can start with the tour slides now yeah hello everybody this is tcpm um we have three co-chairs my name is"
  },
  {
    "startTime": "00:06:01",
    "text": "Michael turkson my name is Ian Swift and Yoshi is remote okay so um next slide this is the note well you should have seen it next slide um the session is being recorded the session has been being recorded this is an important information Richard was so nice to do then do uh act as a note taker Yoshi is doing a JavaScript and if you're submitting in the future a document where you think tcpm should be interested in please put tcpm in the name of the document so it shows up in our view in the data tracker next slide so this is the agenda um we will provide a an overview about the working group status we have one presentation for working with documents basically it's an uh current status and overview about the document being um considered for going into working group last score next and then we have a couple of other items one is future status of Roc 3465 which is ABC we have TCP ACC rate request which we have seen the present a couple of presentations already a new one TCP service Affinity option um Yoshi is talking about a new document describing the differences between standard congestion controls and if time permits I wanted to talk about um whether 120 seconds is still the correct value for um MSL and TCP timeout"
  },
  {
    "startTime": "00:08:00",
    "text": "agenda bashing anyone wants to change anything here uh Martin Duke just I um I've been using this slot in working groups to to show for the congestion control working group side meeting at 5 pm on Thursday that's tomorrow um we will be bashing the proposed Charter uh the tsvr actually this list has an announcement with like links and so on if people are interested thanks yeah thank you so I think we go with the second next slide so these are the documents um we have finished since last ITF the TCP base back it's now RC 9293 um thanks to Wes for for doing this work we have the Yang document and the RC editor queue it's there it's it's done but it's uh in a misref state we have high start plus plus after the working group last call the ad had some uh issues editorial questions and one question regarding how to handle the L well you mentioned there and uh there was a new revision submitted yesterday I think um which basically says use l equals eight if you're not placing use l equals infinity if you are pacing with mandatory language and um the process is that this is discussed between the ad and the authors and once it's finished it comes back to the working group for a short working group last call about this change yes there there's there's normative stuff so it does matter um I think my the agenda item I have about 3465 will make it clear what this substantive issue is so we'll just point"
  },
  {
    "startTime": "00:10:00",
    "text": "for that yep the next one is um cubic and Yoshi is the document Shepard so yeah she will give you an update on that document uh could be we already submit an ISD and then uh right now the status is device ID needed so I think we are waiting for the new revised version the next document is prr which is in working group last call and here she is also the document Shepherd for that um so this is right now a working group let's go and we got some comments and then I see some YouTube is responding so um so if you have any more feedback uh present to the mailing list as soon as possible yes sir if you we will close the working of last call soon but if you have any issues bring them up now the next three documents which are um in our list of Milestones is accurate ecn which is the document um we want to last call next after that generalized ecn um we I think we decided that I'll be the document Shepherd on accurate ecn and i i n is the generalized CCN document Shepard and uh then we have TCP Edo um I recently updated the Milestones of the discussion with Martin um and uh moved dark Milestones being in the past to uh realistic thing I moved it to the December 2023 um but we recently got an email from Joe that he thinks TCP Edo is ready for working"
  },
  {
    "startTime": "00:12:01",
    "text": "group last call and he also has a another document about um extending this the uh the sin segment uh which is right now not a milestone so for the second one the chairs are still discussing whether how to handle this um is the working group had if any feedback on TCP Edo being last called soon a specific question I want to ask was whether there was implementation experience of any sort and if not how does the working group feel about standardizing something that has done so the intended status is proposed senator hi Lars that good I don't know I think you need just to eat the mic okay yeah you have to actually go right there with the mask um so not having read this in a very long time um I mean we have this Grand Edition in tcpm of publishing things on the charts on the standard strike that they have no implementation but I probably had sort of managed to get away from this a little bit so I'm not thrilled right but you can make the cases we've done it before many times I'd feel better if there was one though foreign as a personal note I think past choices should not reflect upon future ones I think we should do the right thing as Spencer Dawkins would say gory so so um Edo is what standard status at the moment the intended status is proposed standard yeah and so I would expect quite a lot of people to want to use this even if there was no implementation because kind of like wise into axp"
  },
  {
    "startTime": "00:14:00",
    "text": "have a good one um great I believe you said why do the RFC if no one's going to is that correct oh sorry I apologize we just lost you for you kind of turned away from the mic right at that very end yeah it's a stupid must thing I get the protocol wrong um so I said I presumed quite a lot of people said they wanted to use this in some way and if they did then maybe PS is okay because there's a intent to implement but if there's no intent to implement and there's no implementations then perhaps it's just EXP yep thank you very that's good feedback okay this is killing me so I'm in the queue please um uh as an individual um yeah like I don't see a reason not to do it exp but um maybe I asked the broader question why are we continue to progress this draft if no one has any intention of implementing much just much less deploying it I think one of the reason if I remember it correctly if one of the one of the reasons is that and not only Define it describes the way how to extend it but also how other Solutions are and why they don't work so it's kind of a you know it's also kind of a documentation thing uh that's great that's an informational RFC um can you remind me if the code plan can be assigned if it's experimental it wants it wants an option number right what I don't I should I should remember this but I don't is it is a specification required RC required standards action or I guess any of the other options they would be good to check right because if we make an experimental and you can't get the code point it's sort of yeah"
  },
  {
    "startTime": "00:16:02",
    "text": "um one exception is mptcp but I think we can check on the list but there is there's an intention to implement yeah here we go all right um with that uh shall we move to the first presenter yep Bob you're up sorry a beautiful hand Michael I just want to make sure sorry yes uh well somehow you are not showing in the middle sorry pardon you are not but in a participant list oh that could be yeah I can change that oh yes I didn't realize that all right Bob please okay right um this is more accurate DC and feedback in TCP and that still looks like an old slide um okay let me I will refresh it's only I uploaded the new ones we got in the last moment but I think we have to refresh all what's happened is the job number has gone up two instead of one because when I submitted it I did it in two stages so the RFC XML formatting changes wouldn't poison the diff Bob do you know if this is that looks like the old one still but it doesn't matter I can explain I I can let me just realize and reload the whole thing and if that fixes it then great and if not then yeah I'll let you talk through yeah um it should say 22 not 21 that's the only difference in 20 20 to 21 was a sort of null change in 21 to 22 was"
  },
  {
    "startTime": "00:18:02",
    "text": "um the actual change and it's still minor anyway are we there let's have this one so still being shared no never mind okay next slide all right so um yeah the substantive change is actually 21 to 22 and it's not very substantive in fact um Richard while we were doing interrupt testing noticed that um there was no nothing in the spec about what happens if multiple sins arrive or at least what it says what happens if they arrive but it didn't say um which one you do the feedback for um it did on the other hand handle a case of multiple synacs and so we just added some text saying you should feedback the latest one um if anyone wants to think about whether maybe you should feed back the most serious feedback you could do that but we figured it's better to feedback latest feedback rather than stale feedback yeah okay and we recorded the guy on early registrations that's it you can you can move on um so um the chairs asked if we would do a sort of um retrospective on the whole of accurate ecn for this session given we're about to go to working group last call I believe um so this is a bit of a road map on the on the next few slot about the next few slides um the goal and the approach the relation to other activities where it sits in the stack what aspects you will need to look out for when you're reviewing it and the implementation state is next so the goal is to feed back the extent of congestion not just his existence within a round trip so that um"
  },
  {
    "startTime": "00:20:01",
    "text": "congestion controls that use that have have the mechanism in the base feedback of TCP it's I guess very similar to the concept behind Sac for drop but translated to ecn yeah um and um the goal for doing that the immediate goal for doing that is to allow congestion control to achieve very low queuing delay of the order of those numbers next so um the problem was that RFC 3168 ecn feedback that was added to TCP back in 2001 um when any number of CE marks hit the receiver it started it latched up um Echo congestion experienced and started feeding that back for a liability and then only stopped when the sender sent congestion window reduced back to the receiver again which meant that you if you got one or 10 or 300 C marks you got the same signal going backwards so um that was the um meaning of congestion existence so we need to move on to extent I've put a table there of um ecn stuff if you don't know it but I hope anyone in this room will know about ecn okay next so the solution to that we um adopted was to use the two bits that were already or two flags that were already in the main TCP header for ecn to override them once the three-way handshake had um got started and use actually a third bit that was also used a um historically for the ucn nonce well used in quotes"
  },
  {
    "startTime": "00:22:02",
    "text": "because it wasn't clear whether it was used um so we we have a loaded them and made them into a three-bit counter um and that um would be essential and always used and then there was an optional TCP option that you could also add for extra Precision um with 24-bit counters for the bytes and the ace field counted just packets and the Act and the option we um counts bytes fed back next Bob I may ask a question as an individual just a clear um I'm curious what do you think is the likely deployment ratio between uh the option and the core Ace functionality I'm just like as an individual um do you think it's going to be dependent on use case or what are your thoughts um I I think that possibly more in data centers you might not need the option I think you might need the option more where you've got middle boxes and stuff um essentially um doing a lot of that correlating and things like that so the three-bit field might rap too fast um but well you know that that's my feeling I don't know what might happen thank you I appreciate it yep okay next right um so there's quite a lot in the introduction about what the relation is to other activities first of all dctcp was the if you like post a child of extent based feedback um and that was where we learned that it was useful um the problem was that dctcp didn't negotiate this new form of feedback so you potentially had one end doing one form of feedback and the other thinking it was doing the other um that was fine in a data center that"
  },
  {
    "startTime": "00:24:01",
    "text": "was administered by one sysadmin and it could that since admin could ensure that everything was configured correctly but um on the public internet that's a bit more problematic because there isn't ones this admin I believe still um so um we have added this negotiation phase during the three-way handshake and in fact um it it will fall back to the old form if one end doesn't support the new form of ACN and indeed if one end doesn't support any ecn at all it will fall back to just using drop so both ends have to support it um in the Linux implementation we have actually um written in a way for it to use the DCP TCP style of ecn feedback which is different the sort of toggling um case um but that's not in respect right so but that can be used internally in data centers and privately um so um the next thing it relates to is other congestion controls now now accurate Asian is pure the the spec is purely about the the feedback um mechanism and the wire protocol for doing that um it's still as clear as saying anything about congestion response um well I think it mentions the words but you know it doesn't doesn't say we've got to do about it um so um really feedback is architecturally below the congestion control um and so the congestion control depends on it and that means you can use accurate ecn feedback for any congestion control algorithm and that includes the"
  },
  {
    "startTime": "00:26:01",
    "text": "the ones that don't need the higher accuracy you know that only want extent and not existence like Reno and cubic um so the callbacks in the implementation but still work just the same whether you use old or new so it is a replacement for um the existing TCP ecn feedback not a just a you don't have to choose which one you you use [Music] um the the other thing this relates to uh is the LPS experiment um which you you know is a probably the first example of something that uses it um hopefully not the last it is intended to be generic feedback um and um obviously um both ends have have to be able to use accurate ecn in order to get that accurate feedback but only one end needs to actually be Alpha SK people as far because l4s is a Ascender congestion control thing whereas the feedback is a end-to-end agreement and finally it relates to another draft ecn plus plus um that's what the title calls it now but the draft name is there and that removes the rule in 3168 ucn uh about not using ecn on CCP control packets and re-transmissions spec recommends using ECM plus plus I think that's okay to do that even though ECM plus plus is experimental and the accurate ecn's package proposed standard yeah okay and and the other way around um the there are also aspects in the ECM plus plus spec that you can't use unless you're using Acura ACN okay thanks so where does it fit in this stack just"
  },
  {
    "startTime": "00:28:00",
    "text": "just to explain the diagram that's not an implementation diagram that's what works over what right um and um the idea is you've got IP at the bottom there and ECM plus plus is really about whether you set um the ecn field in the IP header so it's it's really about below TCP even though it's in tcpm and then the TCP layer I've split there into two sub layers for the um feedback and then the congestion control above it and um I think I've I've mostly explained all this on the previous slide you have to enable accurate ecn and it will fall back uh you have to enable it on both endpoints it will fall back otherwise no dependency on anything in the network um and as I said it replaces rather than and extends um the 3168 tcpn feedback um rather than being an alternative and also importantly out of scope in the Acura ecn spec is there's nothing about what the sender puts in the ecn field at the start it's only about the feedback of it and there's nothing about the sender's congestion response thanks so um these are the sort of um parts that um really need looking at closely if you're going to review this for working group last call um or if you already have um hopefully you've looked at these things negotiation phase there's a lot of um stuff in there particularly about detecting mangling through middle boxes and such like [Music] um and backward compatibility with old schemes forward compatibility with potential new schemes"
  },
  {
    "startTime": "00:30:00",
    "text": "um fullback contingencies and things like that so that's that's quite a sort of sensitive area to have a look at [Music] um then um there's resilience against Atlas and coalescing and things like that please have a look at that um and implications of TCP wire protocol changes on either implications of middle boxes on there or implications of that on middle boxes um because anything you change on The Wire could be could affect that and then there's a section on interaction with TCP variants so if one of those is your favorite variant favorite variant um I think we've considered all all the combinations but please have a look and finally in security considerations there's all stuff about flooding attacks feedback Integrity downgrade attacks and things like that so I'm nearly there um the implementation we've got two slides on this what um we've been doing interrupt testing all this week down in the hack demo area um of l4s and Acura ecn and um the Linux implementation the ilpo primarily did Neil has updated to be based off the 515 Linux kernel and um there's a pull request I think hasn't quite happened yet but it's still a minute um to go into the l4s um repo as well um also the packet drill tests Neil has updated then Richard here has um uh been implementing it on FreeBSD he's that would be in free freebsd14 I believe that's great yep but without the optional TCP option and Richard's done a lot of the coding around that but still the parts of the TCP option um well there's there's some heuristic"
  },
  {
    "startTime": "00:32:01",
    "text": "stuff not to do with the TCP option left and um some details of the TCP option as well and so far it passes all the packet drug tests that um I mentioned above that uh except except one to do with the TCP option obviously because it's not implemented right okay and moving on uh second slide about implementation Apple platforms now um also implement the um Acura ecn but only the reflector side so that we can test it against ascender all right so that means that um it will not really work as a sender but it will it will allow you to use accurate ECM between the two it's off by default in Mac OS iOS and all the other you know I iPad I watch I um think I therefore I am or whatever um the the um way to turn it on is written there net on it TCP accurate ecn assist control um and finally as I said all that has been being um interrupt tested [Music] um fairly extensively over the last week um which is how Richard found the problem in the spec um the the little thing about the multiple sins it's also been which is also um patched TCP dump but that hasn't got through yet but it's it's been submitted and um the Wireshark Michael has got that patched through so it's now in 4.0 uh it will show you the correct accuracy and Flags I think that's getting close to it"
  },
  {
    "startTime": "00:34:00",
    "text": "yeah okay so are there any questions hey Bob um surely in your copious or Forest experimentation you have data on how often the option makes it through the internet I assume and if so could you share the results actually no because all the interrupt testing at the moment is testbed based so we can have have none of that oh I see okay yep so we actually did some tests um what was it from my lab from a FreeBSD machine in my University's lab to to the internet and figure out that um the net module and FreeBSD uh clears the AE bit um it will be fixed but it was one of the results the the options went through at least on that path yeah I mean for the IE bit we did um many years ago actually testing on that but yes we haven't done recent testing we did a massive set of tests so um that was Marcelo banulo and um um and there's a paper on that um that's referenced after the draft but the option wasn't like it is now when we did that again and we didn't actually find that problem on your I guess we were we we did you know mobile networks and we did it on fixed networks but um didn't see that problem in our BSD net well it's it's in that module from IPFW if you use that then right it uses that bit for internal things sets it internally and clears it because it thoughts no one uses it oh there's um questions in the queue Bob let's go okay"
  },
  {
    "startTime": "00:36:00",
    "text": "oh today oh Craig sorry Christian I just removed you accidentally instead of letting you present um could you get back in the cute oh Christian can you go back in the queue so I can allow you to present I apologize foreign I completely forgot where the button is I'm feeling very silly right now Christian can you just I think you can just graph the mic yes okay yes do you hear me now yes yes good yes I have a question um in the in this easier negotiation option what happens if there is a past change during the connection that is suppose that you are doing easy and fine and then the writing changes and somehow you start going through a box that washes in the ecn bits or even whilst the AC beats so what happens then right um what what is the um first out there without watching the IP layer um yes the the Acura ecn um negotiation checks for mangling during the handshake but it doesn't continue to check for it but there are um there are statements in the in the spec about implementations may I think I can't remember exactly um you know check that things are still continuing but um the idea being that the idea for me being that you don't really want to have everything continually checked all the time when you're in in the in the fast"
  },
  {
    "startTime": "00:38:00",
    "text": "path if you like so um and and you know I don't want to make people check things for years to come um I think that that sort of depends on How likely it is to happen um at the moment from from our testing any bleaching tended to be at the first hop so it's sort of less likely that a path change will will lose the first or change the first hop but um yes it could happen and and all I can say is that Equity stand is a lot better than ecn 3168 TCM which did no checking at all so um it's a it's a compromise between how often you check these things and ultimately if your ecn is mangled um if you if you fill up a a buffer somewhere you'll get a loss and then you respond to that you know so just a quick clarification when you say first top do you mean first hop at either end or do you mean specifically on the sender side we well we were we were testing from clients so it was the first hop from the client was was um tending to be where um any any bleaching of ECM was happening so either easier for quick I found a case where it was the last hop right towards the server that marked with the bits okay yeah then a path change might well if what if the service manages to move its state it might yeah um Richard I think it's your turn if you'd like to could you read your thoughts so I just wanted to uh expand on the interrupt of testing across the internet I just wanted to expand on the intro testing across the internet and that was done last time uh between Linux box that danil provided in two different uh"
  },
  {
    "startTime": "00:40:02",
    "text": "hyperscalers one of which did actually the bleaching the other one did not and we did also do these tests with the accuracy an option basically reconfirming what we have found early on like eight years ago then we did some some real serious investigation about the viability of the acquisition option and the bids to Traverse the internet so no no big surprises there really thank you Richard great and Cory will be the last speaker on this uh because we are just about to run out of time can I just say that on on mangling um you know I'm sure there will be a problem somewhere or however much you test you won't find everything you know it's yeah uh gory first to remember is going through the mangling test and how often we talk about this and the rest of in the draft it's a bit complicated the draft but I guess answer to Christian is please read that draft and figure out whether the text actually says it because we need to make sure it's right yeah but there is text in there thank you very much Bob Martin yeah up next good afternoon I wanted to get a sense from the group about um appropriate by counting in RFC 3465 it's been inspired by some recent uh events um I've worked like many of you have worked on TCP for a long time um if you had asked me a couple years ago like what is the last word in the RC series about ABC I would say oh well it's RFC 3465 and isn't it annoying it that's experimental and that's actually because you know for document reasons but that um turns out not to be true and I think we should take a look at it next slide please so um in the beginning this is what was in that in that document there was a question avoidance thing and a slow"
  },
  {
    "startTime": "00:42:00",
    "text": "start thing uh and for a slow start we had this value L which is the maximum number of MSS as you would act in a single act or that you would accept this act for congest control purposes and that was set to no more than two next slide um now that whole congestion avoidant bit avoidance bit actually if you go look at RFC 50 5681 it takes that and recommends it so that 5681 is of course the like the main standards track Reno congestion control document so this is completely taken care of this is now in the standards Corpus um 5681 also took slow start uh the slow start Behavior but limited L to one and so uh um so if you were doing L equals one you were completely standards track if you were doing L equals two you were doing an experimental thing and if you're over two which by the way the links kernel does by default if I'm not mistaken here we go again uh then then I guess you're off the you know completely out of bounds of of ietf land but you know we know how that goes next slide so what is what has changed recently is this High start thing and this is what we alluded to briefly uh in the document review um but in my opinion in the ad review what the document originally said was a little bit um it was trying to massage the the need to refer to a experimental document a down ref in a way that was uh a little bit Elusive and so what I pushed them to do is actually just go ahead and standardize um when that when you were running slow start in conjunction with highstar plus plus that you just you can do ABC and there's no limit on L which is what they actually you know tested in the internet um and so right so so the current so assuming that the working group is fine with that when we do this um not last call but this second pass through the group consensus call through the group then this will move on onto the standards track and so the status will be what you see in this table here in"
  },
  {
    "startTime": "00:44:00",
    "text": "the lower right that um well again the congestion avoidance is has always been standards for a long time um if you're doing High start plus plus you can sort of do essentially whatever you want they're probably with any value of L um if you are not running High start plus plus then um depending on your value of L you were either in proposed standard land you were in experimental land or you're once again out in in the wild is there another slide yes okay so there are a few options here uh one is you could just do nothing um it's always an option uh certainly you know there's always a case that that a lot of these non-interoperable issues that don't resolve don't relate to interoperability can be safely ignored but um you know I I have the misperception I was probably not the only one and I think it is misleading to people to point to this document uh a second like intermediate difficulty option is for me to initiate a document action which makes 3465 historic um and just say look as a community our best practice so there's there's a thing called slow start and it includes High start plus plus and so if you're doing something other than that you're not following the best practice anymore um and that means that uh some things are not unspecified but does leave a nice tombstone in 3465 that says by the way this has been standardized in these following other RCS so you need not do this experimental thing anymore which is achieving my objective at least and then the last option is we think that one corner where um non-high start plus plus with ABC L greater than one is important we could do a new tiny PS to to kind of sanctify that in a standard um I whether that is worth doing or not that's kind of what I want to ask the community uh it uh I know Ian Ian sweat as an individual I have a question which is um at some point presumably bbr will finally be standardized and bbr's"
  },
  {
    "startTime": "00:46:00",
    "text": "current startup is not high start plus plus it is a notably different algorithm um I've implemented both of them yeah um what will we do about that are we going to just throw the same text we threw into high cert plus plus into bbr start up and just say like it's duplicated but we don't really care um or or do we feel bad about that and do we think that well I'm duck and start saying the same thing over and over again that is duplicative or does bbr just reference High start plus plus and say this isn't High start plus plus but like if you're doing bbr then this also applies well well first of all I think we're fairly far from bbr being standards track but um but when that time comes um my understanding of bvr is it will be like pretty new like this whole like congestion avoidance so slow start models is really creaky and maybe breaking and you really ought to write down what you're doing like when you receive an ack which presumably have some ABC elements in it so you can have as a separate standards track document that is um that is like writing down what you're doing and if that makes the process it makes you the process you don't need to rely on these other documents to to um do that Michael would you like to go next uh microphone Michael Jackson from the floor not being able to get into that queue um similar point is is I'm brought up with what to do in PBR um what if in the future high stat plus plus is people are using different things so I would prefer some future-proof solution which is not tied to using a particular algorithm we are having now on the table more or less by accident I mean it's the document we have right now so we want to shift something in but there is no guarantee that in two years nothing else comes up or so"
  },
  {
    "startTime": "00:48:01",
    "text": "so do we so is the group's consensus that high start is not actually necessarily best practice but um kind of maybe an optional thing that you can do no it's right now but what if in two years or I mean BBI uses something else so so again I think if we specify a new slow start ish thing um that that is going to be standards track then there's no there's no like document downref issue it will just specify what the new behavior is um uh if you mess with a slow start you mess with slow start and you have other things um there's not it doesn't I think new standards new crash control standards are neither here nor there in this discussion I didn't get the last sentence so I I think it's just an orthogonal I don't I don't think that the state of New new slow start ish proposals in the standards track is affected by this one or the other because they will simply specify what to do which may not include include appropriate byte counting um and if there's no need to reference 3465 or any or high stock plus plus or any of the other documents they're just going to State what they do and if they meet if they have consensus they become a standard okay and they specify whatever they want okay now if someone has a credential control and they want to refer to 5681 um slow start like without really specifying it then they're stuck with 5681 slow start but I mean it's just a paragraph to add to the document saying Oh but you can also do this other thing uh yeah yeah so I I think I'm going selecting the same direction as Michael but maybe from from the top rather in the bottom so so there's another option here that is like open up 5681 and do a bigger lift and a more principled you know discussion of this whole Space um it's a big lift so where's West Eddie who needs has free"
  },
  {
    "startTime": "00:50:01",
    "text": "time now to write a documents for us but it'll be it'll be not quite as heavy as as the 793 is but it will be significant right and the question is worth it but that I think it's an option and it would solve some of these things right uh yes that is a even um yeah that's that's that's cranking this scale of work up to 11. um if somebody has it into them write a 56 any one best zero zero um I would I think everyone would welcome that there's always some tweaks to be done um but I I unless somebody stands up I don't know that that's like I mean I could write out any of these without you know in a day and start the process 5681 this is a much bigger project is a Christian yeah Christian I can't hear you if you're trying to talk Christian uh I'm gonna let gory go first in the sake of time but we'll come back to you Christian if you can get your audio working yeah gory Fair hist at the mic uh and Christian here Christian go ahead yes I'm sorry I mean uh yeah I was I'm too old I forgot to unmute I'm sorry I mean at some point in a few years my brain will turn into mush and and you won't have that problem because the situation will be clear but in between um I am with loss and Michael on this discussion uh it's a I think it's a mistake for the IDF to specify implementations in that case rather than specify rules and desires I mean"
  },
  {
    "startTime": "00:52:02",
    "text": "for example clearly the rule for slow start is that you shall not um create big um overflow and and end up with a lot of losses because that's bad okay and it's clear that high start does that it's not the only way to do that I mean I unpointed the different solution bbo there is also a lot of research on shopping which will make a a quick assessment of the the bandwidth and it's particularly useful for long delay links and so I think it would be much better to have principles rather than reference to specific Solutions if we are to make some kind of best practice as a referencing hey not alone so I mean I guess by myself um yeah so large proposed option four so maybe option 3.5 is just to rev flow start specifically and along the lines of maybe something that that uh that Christian outlined and that's certainly fine I I don't have the bandwidth to do that personally whereas these are the things I do at the bandwidth to do so I think that's a concern as well um unless someone is volunteering today or soon uh Corey hey Gary first I don't normally do this I don't like option two and I might prefer option one of your list at this moment and we were just in a side meeting talking about satellite systems but I suspect other systems also are playing around with high star plus plus and you know the algorithm is an algorithm it interacts maybe we will"
  },
  {
    "startTime": "00:54:00",
    "text": "come up with something slightly different in the short term maybe it'll be wise I don't know what the actual recommendation is so I just wonder whether we're just kind of a little bit ahead we know we need to do something but I'm not sure we know exactly what we should write at this moment okay thank you gory hello um I would like to propose it I mean it might be a simple way out of this which which is in fact option three but using a shot I mean the point is that uh what are whether we have high start or not you know whatever mechanism we have it's probably never going to be a fantastic idea to have a huge burst or a set of huge bursts right and we could include the number two in the short instead of the number one that probably won't make the world melt but it is a principle thing to avoid having bursts and if you have good reasons against that and it could be text explaining right that algorithms in the style of high start could be a reason against that decision so you wouldn't you know but make it a shot so what is what is in highstar plus plus is may choose any value for l should choose Infinity if you have pacing and without pacing um and if you pick a pick whatever number if you are smart enough to do it if you don't know just pick eight that's what's that's what's in that document right now I think it specifies it focuses on eight it's not any number it's eight has a special position there yes it is should choose eight unless you understand what you were doing uh like people have disagreed about this but I think it is important to give the naive implementer some number to grab as a magic number uh rather than just say no just go find a PhD to tell you what your L should be um other people could disagree about that we could have that comment on the list that discussion on the list but um and we'll have an opportunity in review for the high start document yeah so are we done thank you yeah we're"
  },
  {
    "startTime": "00:56:02",
    "text": "out of time um thank you very much thanks so um that was not that was not the um incredible encouragement I had hoped to find so I I so I I I I think I mean we should probably conclude with an action item and um I guess the option is to do nothing at this time but but to like be more annoying about asking for somebody to drop to draft this new standards track document do people want to poll okay show him hands okay okay um and oh that's the question is there no are there not three-way polls no oh now we have to do like a game theory tree um okay what what do you think you would like um so so the consensus from before was let's do a PS document so so maybe like that's the question should we do a PS document and then uh if we want to have a show of hands on who's willing to help co-author that that would be amazing but um we can see how that goes I have open phone would you like there to be one is the first question right is it is it would you would you like there to be one or would you like to do it oh sorry that is okay please answer that as though like would you like to the working group to do would you like there to be a new PS document that you're not necessarily committing to right that is the question I can't edit it I don't want to create three polls and have them all turn away that's uh"
  },
  {
    "startTime": "00:58:04",
    "text": "um I'll give folks like 20 more seconds because I do want to keep things moving but um I'm not seeing any new votes so um I'm gonna I'm gonna end the session there we go um and we have uh nine people nine people raise their hand uh three people did not raise their hand with a total of 12 people it's quite a few fewer than it is in this room let her learn this session um I'm not sure if that's an indication of lack of Interest or what but um that's the information we have okay so um cherish do you think we have a well actually can anyone who says we should not do that like stand up and like object or or like propose a different course of action because no one spoke up for two option two as long as I think there's sort of no sense of urgency which is sort of what what I think is is motivating a lot of the passiveness right it's just not that that's my read all right that's reasonable um go for it Christian you've been letting the queue so if you'd like to speak it seems to take a long time for him to start up his session foreign"
  },
  {
    "startTime": "01:00:01",
    "text": "I think we're going to move on just in the sake of time uh Mary didn't yeah he said his connection got interrupted earlier and like maybe the question is in the chat is the one he wants to say should this be in Congress oh well it could be yeah I'm assuming that working group stands up oh that would be a great place for it um uh although probably like the people who would write it are in this room anyway I would guess but all right so um I guess a sort of I mean you guys can judge the consensus it's not my role for in this case but um I I think we're gonna have to punt this to without a proper decision the chairs can discuss it on the side and then we'll decide like what to do next yeah so um I guess I will not move forward with doing anything myself and um and we will have to discuss this more thank you uh we need to move on TCP act request and if you can be quick it's appreciated okay hello everyone my name is Carlos Gomez and I'm going to present the last update of the draft entitled TCP a great request it's our option thanks please you also may take off your mask if you want to if it's easier okay if as long as people hear me okay yeah I just want to make sure you know okay so um first of all the review of the motivation for the draft delay Dax is a widely used mechanism which is intended to reduce protocol overhead however in some cases it may also contribute to sub-optimal Performance for example there are so-called large congestion window scenarios meaning a congestion window size much greater than the MSS where saving up to one of every two acts may be insufficient uh for example when there may be performance limitations due to highly asymmetric path capacity or when we may want to further reduce the computational cost and network load of too many acts there is also so-called small congestive"
  },
  {
    "startTime": "01:02:00",
    "text": "window scenarios where the congesting window size would be up to the order of around one MSS such as in data centers where the bandwidth delay product may be up to the order of one MSS in that case delete X will incur utterly much greater than the RTD and also in transactional data exchanges or when the congestion window decreases the ability of requesting immediate acts may help avoid idle times or allow a faster congestion window growth next please foreign so on the status of the draft perhaps you may recall that there was before the creation of this document there was some prior discussion in the area of Center control of TCP acts which appeared to converge to defining a new TCP option serving two purposes providing a sender with the ability of requesting and give an upgrade or requesting immediate acts while keeping the steady state pack rate so today I'm presenting the updates in version zero six which aims to address the comments from the last meeting next please so uh let's go through the updates the first one is in the main format of the option the one that conveys the requested act rate value so after comments in the last meeting we are going back from a size of six bytes to five bytes because there were commands that there's this lack of space for TCP options especially in syn packets so now with the current format the R Field which is the one that carries the binary encoding of the upgrade would be of seven bits the maximum value that could be encoded here is 127 and we still have one reserved bit which might be useful for future users for perhaps future encodings or values of R if needed next please the other main update in this last"
  },
  {
    "startTime": "01:04:00",
    "text": "version is the addition of appendix a after a comment by Bob because he mentioned that perhaps star was converging somehow to something similar to RFC 5690 which is also known as axcc so we tried to clarify to provide some comparison here to clarify the potential similarities and differences between the two documents so first about the main goals and features see is an informational RFC to our best knowledge it has not been implemented the goal in this document is reducing act traffic when there is congestion on the reverse path so it is to apply congestion control on Ax and it is somehow relatively complex mechanism which has different components a component to detect lost an ecn marked pure ax a mechanism for calculating the ACT ratio a mechanism to announce access support that means of a new TCP option and a method to indicate new ratio that's indicated by means of second new TCP option regarding tar the intended status is experimental and the focus is a bit different it's rather on end-to-end performance and also and system resource conservation it is the tar allows the sender to request a given aggression from the receiver an immediate act while keeping the steady state act ratio and dar appears to be a quite simple tool which perhaps could be a component of other more complex mechanisms including but not limited to a mechanism for AC congestion control but also including the different benefits in different scenarios that I mentioned at the beginning of the presentation next please so regarding how the new TCP options would be defined in these two documents um regarding xcc it defines two TCP options one intended to announce access"
  },
  {
    "startTime": "01:06:00",
    "text": "support which is always present in syn packets another one intended to communicate the ACT ratio and as far as I know there is no TCP option kind value assigned by Ayana for this and about tar which is well has been defined more recently um and also it has the experimental intended status it uses a single TCP experimental option kind value so it follows RFC 6994 so this single option kind value is used to announce support of tar and also to request the upgrade by the way uh announcing the support of tar may be done in syn packets but it doesn't have to be okay and then there is one experimental ID value which is zero zero AC which has been allocated by Ayana next please so uh wondering about next steps and considering the current state of the document the authors feel that the document is somehow getting stable the purpose and methods should hopefully be clear there is even some uh initial code of a prototype implementation started by Michael uh led by Michael for FreeBSD so we would like to ask the working group whether the document is perhaps ready for working group adoption any comments questions I just started the poll uh pre-request um and so now I'll give you one minute answer if you would like to adopt this draft into the working group"
  },
  {
    "startTime": "01:08:04",
    "text": "foreign you want to say something just go to the mic can you eat the mic please I mean not really right can you explain a little bit why you need that so because I mean you say data center inefficient but application or TCP implementation just put push frag right so the it can kind of explicitly uh the ask for immediate Act right so can you explain a bit about what the exact programming data center applications yes there is there is one DNS related document which is referenced in the in the draft which describes this sort of issue where uh you may send the packet then you will have a delay until you get the response which is just introduced by the client send some data and then server waits for next packet so I I think the interaction the issue there it's obviously 8 000 something it's about DNS so um there was some interaction where uh an endpoint was sending a packet and then the response was delayed just because of the presence of uh the delayed tax so why does the center just put sprag on that sorry the push flag usually TCP receiver we're interested um this was discussed in initial presentations of this effort and it seemed like it was not exactly that we could actually just push for this wow"
  },
  {
    "startTime": "01:10:00",
    "text": "I mean um the the answer was still delayed I think I don't remember all the the details but I may ask that um just in the interest of time um it might be this might be a good side conversation since this has been discussed in the past but I'd like Michael to talk yeah so the point is that on the receiver side it's not specified that you send an egg immediately when you receive a push flight some implementations do but you can't rely on that ESD for example does not so what is the reason why the receiver does not respond immediately in case of receiving push flag packets I'm going to argue that's out of scope for this draft because that's an implementation choice I mean it's all a good reason not to implement that immediate act for post frag then the that everyone just should do that isn't it instead of defining new TCP options just a very brief answer that is not the purpose of the push flag this has a different purpose hey um Corey technically you're next on the Queue sorry Mira So Korea I'm just a little bit concerned that perhaps there are other things in the network doing three four four nine on other act mindling and we have offload like with it with quick we understand the fact probably with TCP I'm less sure so is there information about how the network responds when you kind of do this and what result you get when you try and do something at the receiver and the Network's also doing something sorry could you repeat the last yeah you can put you can put it in notes I'll send an email and we can discuss so I'm looking for information about the combination of what the network does in"
  },
  {
    "startTime": "01:12:00",
    "text": "RSC 3449 and offload and what this mechanism will do when you combine them okay and looking for data and please discuss that on the list yeah so I would like to keep using the my queue at least as we're not saying our names something like that would be helpful to keep the MyQ for everybody but I'm here to relay Christian um that's why I ended the queue he said in the chat if we do something for controlling accurate and TCP should we try to keep common concepts with the delayed option and quick this would be very this would help building common experience thank you for relaying mirror so we got the result and make a decision based on also for email feedback thanks I'm going to move on to the next and that's right yeah uh oh that's actually what's on the slide there's like there's a big expat on my slide it must not work um oh I I I'm sorry I think it was 21 in favor 21 raise the hand three did not so we had 24 people giving an opinion please go uh hi everyone I'm William from China Telecom and I will give the presentation of this draft on behalf of the co-oplers next slide please first of all I will introduce our uh the background and motivation of this draft with the rapidly increasing of the customer number and the service requirements uh the service we need a more flexible and"
  },
  {
    "startTime": "01:14:05",
    "text": "scalable Network and the increasing of the age resource plots uh makes the service note that provides the same service functions can be deployed deployed in different resource ports and use the same anycast IP address and as the scenario shown in the figure the R1 was is the increase router and R2 R3 and R4 are equals routers each EOS router connects to a service node and the three service nodes provides the same service function and when the customer a accesses to the service it will send a okay to R1 and R1 will determine the optimal service notes for the customer a based on the Network's status and since the uh since the network status is constantly changing so different customers may be scheduled to different service nodes but for the customers who have established the connections of the service not that provides the service must remain unchanged and that's why please Lars do you have a question oh oh yes uh to keep the established connections uh unchanged uh the uh the current uh Solutions need to maintain the customer based connections data"
  },
  {
    "startTime": "01:16:00",
    "text": "tables in English and English rotors uh this is a lake of flexibility and scalability we proposed a solution for the service Affinity between client and server based on one newly defined TCP options and this options can realize the comprehensive scheduling based on real-time Network status this solution can eliminate the needs to uh to maintain such tables in the networked devices and can improve the flexibility and scalability of large-scale deployment of any class Services scheduling necessary please uh a way we think we also need a new flag uh we call this ICF Flex to identify the center uh can support the TCP service Affinity options uh one the custom a accesses to the service it will send a TCP package which uh in which the x y n and saf Flex are set and the destination address of this package is set to the anycast IP address of the service and the well R1 received the package it will schedule the request and determines that serve is not behind R4 will provide the service and it will forwarding this uh TCP package to R4 or to the service node uh through R4 and the service node"
  },
  {
    "startTime": "01:18:00",
    "text": "will return its IP address and Port information through the service Affinity options to the customer a and finally customer a will established the connection to service now behind R4 and that's left please oh this is the encoding of the newly defined TCP option and this option can identify the equivalent for or ipa6 address and support information owned by the service node which provides the service and this option is carried in the TCP event package sending by the service node uh after receiving the TCP flm package if the the newly defined option is included the customer will establish the connection to the address specified in this option and next slide please yes since this is the first time for us to give the presentation of sales draft and any comments or suggestions are welcome and we will update it accordingly thank you uh Lars hi last second uh thanks for the presentation that was very clear um I really feel this is the wrong level to solve that problem at because you're basically asking all TCP client Stacks to change so that the server side can optimize some load balancing right so hey you have the problem it's never really going to happen to all clients so you need to continuously be able to handle the case that some clients won't do this it also introduces sort of the other way to say this is why wouldn't you do this rather at the application layer where you can basically deploy this you can deploy"
  },
  {
    "startTime": "01:20:00",
    "text": "this with TLS because this information wouldn't be secure it can be changed in the network so you can imagine an attacker might want to rewrite those things and have the clients go over there um or just like route them somewhere where there's no um response so that there's a whole bunch of things here I think that come together um that make me sort of think that you probably want to solve this at a higher layer rather than at the TCP level thank you thank you we do this a large balances aren't uh transmit layer is because we think uh the application layer uh have difficult in obtain the network status in real time and so we think away can uh push this push this function in the transmission layer um did you want to address that question yeah um so I I'm a closer and uh next time I explained you know there are two ways uh currently there are two ways to explore uh and accomplish the such aim the first is the application letter only so but for application letter uh the either Mr uh has said uh the client or the server cannot know the network status so we think under the network cannot do any help for the optimized of the traffic so uh I think our solution is align with the coming concept for the Computing and network convergency Trend so uh you know the the network can't get the service status and they can optimize the traffic"
  },
  {
    "startTime": "01:22:03",
    "text": "um by the uh for the client traffic so by the way we cannot depend solely on the network to do such thing because to keep the service Affinity the network device Master uh stop much status table on the device so our solution is a hybrid solution and they depend partly for the network device to select the optimal application server and we depend on the client and server to do something for the for the service affinity this is our aim okay pop please be quick yeah hi um before last said what he said um I I hadn't thought of that and I tend to agree with him but just I'll say what I was going to say anyway um because I'm not I'm completely thought about all this and that was that um it might be better to first of all hash this information and just have like a cookie in this option um so you're not um you know as it says um and then that that reminds me of something that um I was involved in doing earlier which is a a thin cookie but it allows you to have more information in the Zen cookie than than currently possible in that space so it's it's a very similar um thing that gives you effectively a bit of connection State a soft State moving with the packets um so there may be other things you could sort of fold into it to make it more useful so that clients do use it which might um mitigate some of the reasons last said it wouldn't happen thank you uh Ian sweat as an individual um I agree"
  },
  {
    "startTime": "01:24:02",
    "text": "with Lars that I think this is probably the wrong layer to put it up but I think regardless I think there are some potentially serious privacy concerns about the way you structure this and I think an opaque field along the lines of what uh the quick LB draft proposes is more aligned with like the current values of the ITF um so something like an opaque sin cookie would at least be a preferable option um I don't think I want to design this right now but I think I think for the ITF to adopt this I suspect it would have to be substantially changed in order to kind of conform to the standard privacy policies of like what we see today thank you please continue the discussion on the list we are running out of time here thank you Yoshi you have the remaining six minutes instead of 15 sorry about that can I yeah okay okay so I just took up I just would like to talk about analysis what the difference between standard condition control schemes moving on to the right okay so what's in this draft so basically uh this uh draft provide a risk for the difference between three condition control standards first one is Arena and the next one is quick cleaner and the last one is cubic and then I have basically three houses have three motivation to write this kind of draft and first one is uh during the cubic discussion we have a lot of"
  },
  {
    "startTime": "01:26:00",
    "text": "productive nice comments for the acute experience so having this kind of document maybe uh you know with the record for that you know really productive discussion oh pretty good the previous slide then another motivation for me is uh it can be as a useful reference for the future discussion with the congestion control principles so right now there are some difference between these three standard but uh it might be better that this instance three standards have the same congestion control principles and if we move to that direction uh this kind of document may be a good starting point for the discussion and then sudden motivation for me is you know uh having this kind of document May encourage further analysis uh because you know some difference in the draft may require some more large-scale experiment or something like that and then what is autofocus for this draft is the evaluation for the differences so there are some differences but this product does not give this difference is big or small something like that the purpose of this document is to provide the list that's that's it the because as I said it may take time to evaluate these differences okay please move on to the next slide and then I just sort of like to quickly overview of the difference between the draft and the I would like to start from Reno and the quick cleaner and there are several parameter differences like an initial window is different and lost Windows difference and then those detection scheme is a little different and then the my thing it might be the minor defense parties of X performance so you might need to sort it out to some extent maybe on to the next slide"
  },
  {
    "startTime": "01:28:01",
    "text": "please okay and then also uh the thrusters threshold of the packet loss is different Inc 9002 uh through threshold after packet loss is the half value of congestion window then packet loss is detected but uh on the other hand uh 5681 says it is the half value of right side instead of congestion window and then also uh LX 58 5681 basically prohibit to use congestion window here because it says an easy mistake to make is the simple use congestion window rather than flight size so to some extent these two documents seems to be contradict to each other please move on to the next slide and so another difference between Dino and the quick cleaner is window growth in slow start this may be overlap that mating talks in 9002 congestion window can be increased by the number of acknowledged by acknowledged by it in a sub packet but in case of 5681 zero limit so it can increase at most one segment and that's the difference okay now I'm moving on to the okay let's go to them now I'm moving on to the next one uh the rosary caballer algorithm is different uh so definition of the loss recovery algorithm is different in 9002 it can exit recovery period of and one of any packet sent during the recovery period is acknowledgment uh in 5681 it can end the recovery field all those segments found before recovery period are acknowledgment so in case of 9002 is"
  },
  {
    "startTime": "01:30:02",
    "text": "been sent and Arc and then it can end the recovery also there is another rust packet on the other hand 5681 if we have a product packet then our packet has been detransmitted and should be asked otherwise it cannot end recovery period that's the difference between the genome and the quick cleaner okay moving on to the next slide please and then this there are some difference between Dino and the cubic draft the big difference is multiplicative Windows decrease factor 5681 is 0.5 83 12 bits of this 0.7 0.7 minor bit too aggressive but it might not be very fair with uh 5681 okay moving on to the next one and then another difference is a linear friendly model and as we have a wrong discussion uh there are some you know uh skeptical skepticism about you know buried validity of this model so this is also the discussion Point moving on to the next libraries so this is my last slide so discussion point of this class is uh these differences accessible what needs to be sorted out if it's needed to be sorted out how do we proceed uh do we want to update 5681 or do we have another way to do it and their final discussion point is uh is it worth publishing this document as a reference why not that's a feedback I would like to get from the community we're out of time so I will let Martin Duke and Lars go and then we'll wrap this up okay yeah um uh usually obvious didn't coordinate um so like as for the 5681 versus um 9002 stuff I would say 9002 probably reflects I mean aside from very quick specific things is mostly kind of the"
  },
  {
    "startTime": "01:32:01",
    "text": "the best current practice that would properly agree on and that rather than do something like this I mean you've created a checklist for 5681 best so let's do 5681 best rather than have an intermediate document uh for cubic stuff uh I don't I don't know thanks for doing good thanks for doing the legwork uh this is a nice summary of all the differences uh so thanks for doing that um for 9002 specifically I think we actually discussed all those sort of pretty we deliberated them and they all deliberately changed us and and they all were last called and so um there's a difference and we can sort of uh decide what we want to do here I would sort of um I argue that 9000 is the newer document and therefore more uh uh accurately reflect current thinking um but you know it's a discussion for another day but but thanks this is an excellent starting point for future work as an individual I had one comment that um the congestion control working group if it was created might be the right place to ensure consistency going forward uh and with that this is the end of the tcpm session thank you for being patient and going three minutes over I can't can I make one last comment sorry yeah okay go ahead okay sorry just make quick so about 9002 so I'm okay with you know using two tools of this parameter for 9002 but to be fair with TCP on the quick I think then if we quickly use this parameter then one argument is TCP might be used the same parameter yeah thank you yeah exactly so 56 so 5681 Bish should be probably more like 9002 yes okay thank you Yoshi bye thank you"
  },
  {
    "startTime": "01:34:08",
    "text": "thank you I mean that is okay"
  }
]
