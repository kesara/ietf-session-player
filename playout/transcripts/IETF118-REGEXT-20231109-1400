[
  {
    "startTime": "00:00:32",
    "text": "Gonna be we're gonna be very strict about asking people to move along and, try to stick to our times here so that we can get to everything that we'd like to get to. Okay. With that in mind, this is a note well since we are now Thursday afternoon and the ultimate session for the day. I'm sure you've all seen this, quite a lot. So I won't spend too much time here, but, you know, generally, if you're here at the IETF and you're contributing in any way, that includes speaking at the mic. It, you know, becomes part of the public record and and part of, what is, essentially, you know, that that the property or I hate to use the word property. But anyway, it it's a it's a part of the IETF process. Dang. This is a new slide in our meeting here, which I shamelessly scarked from the dispatch meeting because I liked it a lot. As I looked at it. This is just a reminder that, you know, we are all expected to be well behaved, and this is an indication of know, being well behaved, means in part that if you feel like you haven't been treated well, we have an ombudsman's team who is ready, and present and and available to help you through that process and help you deal with that. And, of course, what I really like about slide as a reminder to all of us, that you should take the time. Be helpful to your fellow attendee. So,"
  },
  {
    "startTime": "00:02:03",
    "text": "if you have issues, if you see something happening, you know, you can either, you know, try to be a part of that, or certainly talk to the ombudsman's team yourself and express that something was happening and and they will help you and and figuring out how to be more helpful in the future to deal with that. Then of course, we have our IETF code of conduct guidelines. You know, a reminder, we're here for technical discussions Let's keep our discussions at a technical level and we're also here as individuals. Please always be taught being in terms of best engineering judgment, or the internet. And, you know, if you're gonna be here, please do contribute to the work. Even if you're not writing the documents, reviewing documents is a big deal. Paying attention to what they say is a big deal. So so know, please do take the time to do that and indicate that you've done it on the mailing list when we ask for that. K? So, This is agenda Bassing. We've kind of gone through the welcome and introductions already, but, this has been posted, earlier this week. Any questions or comments Anyone want to adjust our agenda pretty pro form a. This is pretty much what it always is at every meeting. We just walk through things. So moving right along since we're committed to that, get to the published slide here. Oh, I should say probably briefly about the welcoming introductions. You know, we don't build the notes squad. I'll be someone here just a reminder. We have been for, over a year now. We just submit the transcript. As our minutes. We try to give it a a quick read through to make sure that it has been described reasonably well. But that's our minutes. So we're not looking for a note scribe in particular. Oh, well, thank you, Rick Wellhelm. So excellent. Appreciate that. It normally is prefilled with our agenda, and that's great. And Rick's gonna add some summary points in there as we go along. So thank you for that, Rick. And on the document management side, just a reminder,"
  },
  {
    "startTime": "00:04:02",
    "text": "you know, we do look for a document shepherd for every document when when a new work item is absorbed. And document shepherds do have a pretty significant responsibility especially as we go through working group last call, in making sure that all comments are addressed and covered and they're supposed to help the document through the ISG process when that becomes an issue. There's any questions there. Okay. Quickly moving to published documents, sadly, once again, none this time, But next time, hopefully, we'll have quite a few. Because as we look at the submitted to the ISG, we have 4 documents that are out there. Which are all actively, work in progress. These things are moving along. In fact, I have a couple of real time updates for you. The open ID document is the revised AD has a revised ID okay, has actually already been published. Okay? And, Murray has already pushed that forward to the RFC editor. So it's now not in AD follow-up. It's in the RC editor queue. So that's a good thing. I'm sure that'll move along smartly. And the redacted document, it says here it was rating for revised ID because that was the state when I made the slides, But in fact, that has been published just yesterday. In fact, that's a very real time update. And, we'll otherwise keep skipping along here. And we'll get to existing work, and I will now turn that over to Okay. Alright. 1. Yes. So, Gavin, I will load your slides stuck and let's see. Just Okay. Hello, everyone. This is Gavin Brown."
  },
  {
    "startTime": "00:06:01",
    "text": "I am just gonna give you a quick update on the, TTL extension. So move on to the next slide. For those who aren't familiar with it, who haven't been following this is an EPP extension to allow registrars to specify the TTL values on records that live in the parent's side, so NS records. DS records and so on. It's been in the working group as a document, since May but has a long history before then. There is some interest in getting this finalized and deployed. So I'm trying to move fairly quickly to hit them. The May 24 deadline for for ISG S ISG submission. The current draft was submitted in September. And I posted to the meeting list that it is very much a straw man because I didn't particularly like the XML syntax that it uses. If we could move on to the next slide, it in in is kind of the objective was to try and minimize the amount of business logic required to implement this extension in the server by making the schema do all of the work of validating what comes from the client. But it does so by putting DNS record type into the schema as element names and this felt a leaky abstraction. It didn't feel very nice. And when I took it to the various technical groups, the I can meeting in Hamburg a couple of weeks ago, that was the the kind of feedback I got was this is this is not very nice, and no one particularly likes it. So if we move on to the next slide. So I'm making one final push to try and get some feedback on this today. But I have a proposal to go forward and I want to circulate that as a as an alternative to the current syntax. So if we can move on to the next slide. So Firstly, we're gonna start simplifying things because there needs to be a trade off if we're gonna make implementation on the server a bit harder. We need to simplify other things so that it balances out. So the the old specification had a kind of global"
  },
  {
    "startTime": "00:08:02",
    "text": "TTLs. You could just set a TTL across everything and then you could either choose that or a more specific explicit TTL where you could specify individual record types that's going away. They're just going to be one format, which is, where you have multiple TTL elements and you specify the record type as an attribute to the to the element. Then we have to have normative language in the spec itself to stop things like having 2 elements with the same in this type or having a quite a records for domains where it's not appropriate if they're not if they're not using the host attribute model, that sort of thing. What what I'm also going to remove the the the the cascading effect of TTLs for A and AAA records set on the domain name ascading down into the parent because that again, make things more complicated on the on the on the server side. So the ultimate outcome of that is going to be that I I you can move on to the next slide. Is that a a a create command, for example, is gonna look like this So, if you're creating a domain name and it's I'm gonna have DS records. It's gonna have NS records then use use extension to specify the TTL for those 2 record types and potentially also a DM record if there are aliases and then if you move on to the next slide, This is what the host create record looks like. So only specifying a quality in the extension element. Next slide, please. So this is for a domain create with host attributes. So If you're not using host objects, then you need still need a way to specify the TTL for glue records in that scenario because you can't play in directly host object. So there isn't one. So this is an example of a domain create element where you're specifying in a record. And then next slide, please."
  },
  {
    "startTime": "00:10:01",
    "text": "So the XML syntax is simpler. The schema is smaller but there is effort required to the input that wasn't required previously. With a balancing effect that's the the rest of the schema or the rest of the extension is simpler to implement. This is about striking a balance. And what I'm looking for is any feedback on whether or not this is the right balance to be struck whether we need to move in other ways, or whether there's something I'm missing about XML schema that allows us to to put more work on the schema to do the validation. So that's that's it really. So I know I'm I'm listening you have questions now, or later. The key to heaven. But, I think I'm probably gonna move forward with the the news and tax and publish that next week. So thank you, Gavin. Any questions for giving someone in the queue? I don't see anybody in the queue. I have a question, Gavin. Did you you you said you looked for, and for people that in in I can to see what it's like. Did you collaborate with, for example, DNS, the DNS ops working group? Because this is about DNS So I haven't taken it to any of the DNS working groups. Or communities yet, primarily working in the tech ops, CPH tech ops that I can. And, the CCNS. So tech day. But, you know, taking this to the DNS world is is is something I think is in it would be good to get feedback on. I haven't gone to those groups, but I with We we we can also still do that just before publication, right, to give them a thorough the truth if they're if they see any issues. Yeah. So if there are no more questions, then thanks again. Oh, now we've got No, no, you. In the queue. I don't see anybody in the queue. Jim. You have it. Where where do you where do you get it?"
  },
  {
    "startTime": "00:12:00",
    "text": "Look upon the screen. It's also behind you. For it's not here. That's k. Then you do the q. Okay. So Powell come up. Yep. Yep. Please. So, there was discussion on the mailing list about the s records and whether it's, optional or mandatory. I didn't see any comment on this on the slides. Can you can you Yep. So so the next version I'm due to publish NS is is gonna be optional. But K. Next one, Scott. Thank you, Scott Hollandbeck. Gavin, this is very similar to what we did in the base spec to identify IP addresses There's an attribute that identifies the type. So I'm a fan. This is a good idea. Thank you. And, Chip, Jim Reed's. As far as the DNS tech review is concerned, I'll make a shameless plug for the DNS directorate. And so we could ask the co chairs to check this document at some point over the wall to the director have someone known not review the document for you. It probably doesn't need to go to the DNS blocking group. If you want to do that, you can do that too. Okay. Thank you. That that was actually my proposal, Jim. Okay. Thank you. Kevin? Then next one up is Tom Harrison about the RUR search Let me get your slides up think the teaser is. So go ahead. Okay. Yep. Thanks. I Next slide. Oh,"
  },
  {
    "startTime": "00:14:00",
    "text": "Yeah. So this has been presented, few times now. It's a document about extending search in our app for the internet number resource types. So IPs, ASNs, and reverse domains. The first part is search by handler name. 5 years in our sense. The second part is about less specific and more specific searches and the 3rd part is about extending reverse search for IPs in their sense. The aim with this is that we get by implementing this, we get featured currency between who is not up, that helps with shifting people off who is and onto our app and potentially with applicating, who is in the future. Next slide please. There have been a few changes since the last meeting. As part of the changes for version 2, we expanded the document to support searches for arbitrary ranges rather than having link relations, in existing objects. But we didn't expand the examples at the same time. And that meant that the behavior for arbitrary ranges wasn't really that clear. So as part of version 3, their, many more examples with arbitrary ranches, and hopefully that will help to make behind you, clearer. Particularly around the bottom type search. There's been a bit of tightening of the text around status parameters various editorial changes, One thing that we flagged at the last meeting was this idea of having the links be omitted by the server if there are no objects severe return for a specific type of search. We didn't get any feedback on that, so we'll go with more cautious approach, which is that there's nothing mandated in that respect, and then that means that there's less chance of implementation problems on the server side. Leading to a client drawing incorrect inferences about the state of the data. Next There's really one open issue here, which is the fact that the"
  },
  {
    "startTime": "00:16:02",
    "text": "extension identifier is not used in some of the past segments. We had some feedback from Jim Gould on the list in favor of a more standards compliant approach. After discussing this among the IRS, the consensus was in favor of the current text and Also, on that on that point, there's this unadopted extensions document which nights that intention with a lot of these restrictions was not to constrain RFC authors, but more about non RFC extension authors who who might not have got the same level of review as an IRC would have got So we're looking for more input from the working group on this, and if the consensus is in favor of the most standards compliant approach. Then we'll register some the additional identifiers that we need, in order to address this problem. Next office. But after that, we think this is ready for working group last cool. But if anybody has any other changes they won't see or anything like that. Please let us know. Thanks. K. Thank you, Tom. Now found a cue in my, in my chair version of the meet echo. So don't see anybody in the queue as of yet. Any questions to Tom? Just just raise your hand. I've been in queue. Thank you. Rickwell Home Pierre. I didn't quite understand the bit I didn't quite Rick will help. I didn't quite understand a bit about the extension fires. That it sounded like Gould suggested use more it's standards compliant, extension identifiers. And then we basic you're basically saying, No. We're not going to because we ask people who don't participate in standards bodies, and they said they didn't want standards compliant identifiers."
  },
  {
    "startTime": "00:18:03",
    "text": "Did I mishear that? Cause, like, that sounds like we we asked children if they if they would want to eat their vegetables, and the children said, no. We like candy. So we said, okay, we won't make them eat vegetables. And it seems to me like we we should want in this room to be the adults and keep things more standards compliant that might sound a little more glib than I wanted to, I say it with a smile on my face, but it seems like here, we should be trying at atat while the why we have a chance we should be trying to make these things more standards compliant if we can. Maybe I misunderstood the way that is that way that was going. Thanks. This is good working group input. So, yeah, Yep. If the if the consensus is that direction, that's fine. No. Okay. Andy? Yeah, Andy. So The the point was that this the what what Thomas talking about is the extension identifier in this case is being used to stop named collisions. And the point of things going through the IETF is we know when we or colliding with things we're already doing, whereas people who put the extensions into don't go through the ITS don't know So and that was that's the point that I believe Tom was trying to make. Also the point of that extensions draft. Okay. James Goulds. Jim Gold VeriSign, I honestly don't remember my feedback. Did did you actually have an example or something that refresh my memory. It'd be appreciated need to go back to more slide. Which party may know? Okay. Which what fee? Okay. To"
  },
  {
    "startTime": "00:20:03",
    "text": "I don't remember all of the options, mainly because the just registering the additional ARPs and ortnums identified seemed like the simplest way of addressing the problem. And at least with our hours, that was that was where we were heading if we had to address this. So Okay. Let's let's solve this on the mailing list. Right? Thanks. Okay. And thank you, Chung. And then we move on to the next presentation or presentation. Actually, I think we have now gone to the context discussion rights Where are we? Give me a lot of slides here. So here we are. So first, we have Andy presenting, his, simple contact. So I actually put up a room slide. Sorry for that. So go ahead to Yeah. Next slide. So, this is mostly a presentation of what's changed since, 117, and the output of that Working group session 117 was make it simpler. It's simple, but not simple enough. So, that's what we did the postal info is now mostly unstructured, but we did pull out some common elements, mostly that you would find in 5733. And allow them to be explicitly stated, but you still have an unstructured postal code the, and, actually a little bit about a little bit behind because I had a meeting with,"
  },
  {
    "startTime": "00:22:03",
    "text": "Dan and Jim earlier today, and there's some even more things we can do to get to line up with 5733. The other thing is is that, the draft calls out being able to link to V cards or J cards or or JS contact or in the future seabor contact or whatever. So next slide, we we removed the mast thing that was reflective, that's now covered by redacted. Which is one to RFC. The email addresses are now compatible smtpatf8. And we added some guidance on how you deal with nested entities. Next slide. Yep, Pavel, wish he was here. I was gonna discuss this with him, has suggested that for more EPP alignment we use the we actually move away from arrays and use local int objects or properties in an object, I'm I'm looking a little bit for some feedback on this. My, inclination at the moment is to keep it as arrays it's a little more extensible, I guess. And since they are in preference order, you can figure out which one you need. And then also to change some of the property names to match the EPP contact as well. X line, in the draft, we also have a proposal on how to move forward with contacts and simple contact is meant to handle the case for, you know, 99% of all, registries are able to represent their data using simple contact for the cases where you might have, something that that can't be presented that way to actually use the currently the current built in. This is not a simple contact thing. This is based art app. Just use a link, link structure to link to a file or something that might have vcard. Because currently currently, we can't support vcard, and that is actually the most prevalent contact, us,"
  },
  {
    "startTime": "00:24:00",
    "text": "format out there today. But you could do it to Jay Card. You could do it to JS contact and if in the future, someone says that seaborne contact is a a thing we gotta do or whatnot. You could do it with that as well. Next slide. And here's what that looks like. It's just another another link structure where you just, you would throw it into the current links that are already there. So it's nothing nothing, out of the world. Next slide. Think this was it. Oh, that's it. Hey. And then stay a little bit because we have faced a question from Powell the we'll go ahead so, talking about, ARI's, usage in the in the simple contact So that I think one of the augmentation was because of reduction. So that that the reduction is complicated if, arise and use and, the the second thing was was about basically differentiator between the array elements. Yeah. So whether it's only, this language or locality or we foresee multitude of of, Android data, which are kind of having different differentiated So, with the languages, what you will see sometimes not not in a lot of places is, information given to you in, like, the language of the the where the registry is and then maybe sometimes it's an internationalized version. So an example might be you get a a an address in Japan that's in the the Japanese one line style. And then they English buy it, and and it's the two line things that has English words in I don't know. I've never seen an example where someone does it in more than 2 languages. So, in in essence, you could you could just say you can only support to"
  },
  {
    "startTime": "00:26:01",
    "text": "my whole whole reason of keeping it as an raise, you could support more and and it's just a you know that the eraser in preference order anyway. So Hopefully, that that addresses your question. Well, it addresses the part of the question, the reduction problem remains in the sense. Right? Can you explain what you mean by the redaction problem? The reduction problem is that basically once you redact one array element as a whole. Basically, the whole order of things shift and the the indexes are not in the same place anymore. Oh, that's a good point. Alright. Yeah. Let's let let me I'll I'll talk to you about that, but that's a that's a very good point. Alright. Did that address your question? Yes. Right. Yep. And then we have a small question helper, fast question, of course, we're running out of time. Christian, go ahead. Christine's also dynamic. Just a short clarification question. When, regarding the out of links, because it's it's not just a server to implement all of these or just some, and how do you address, like, a client expecting some different format. Well, so the links has, mind type in our media type used to be called MIME type, has a mean, media type, which is a mandatory element of the link structure. So that's how the client knows whether it can whether it needs it or not, or I can understand it. There's nothing in there about what's mandatory. So there's no I we can't mandate people put things into vcard format. Not if they're not willing to do it's it's completely optional. Okay. Thank you. And then we have another question. We're not Ruderskow, for clarification, are any provisions or in the future possible for putting company identifiers for organizations as opposed to just the name. That is already in base RDEF as a public, it's called public IDs, and that's an array already."
  },
  {
    "startTime": "00:28:04",
    "text": "That's that's not part of the contact model. Yes. Yeah. That's got that's the that's besides the the contact Thanks. Alright. Before I try to sit down and Yes. Okay. So thank you, Andy. Then we have a, we have a discussion about contacts in general, and opposed on the table. So I, Jim's going to do that to lead that discussion. Okay. Thank you. So now leave it on the previous slide for a moment. Yeah. Yeah. So I sent a note to the mailing list about this. This is kind of, it it really is an important question for the working group. We really do have to make a decision as a group here about the status that we want these various, documents and contact proposals to have. Going into a publication So We have, in EPP, as we know, we we have a contact mapping that's been well defined and is essentially the standard for contact objects, if you will, and and what they're gonna look like. And that has an XML encoding for contact objects That is the essence of our deployed base. We now have an RDEB standard, which actually proposes using JSON. For, encoding contact objects. And we have this addition here that we took on as a working group item using JS contact in RDEB which actually is a slightly different definition of a contact object. Because it's based off of j card out of the Calix work. So not that that's necessarily a bad thing, but it is simply an alternative. It's it's simply another definition of a contact object. And now we've just listened to Andy. Remind us The document in that case is not a document which is currently in front of the work group."
  },
  {
    "startTime": "00:30:02",
    "text": "The presumption here is that he'll be asking for the working group to adopt it. But then that becomes a question to us about if we adopt it, What is the what do we want to do with that document in terms of the status that we wanted to have. Right now, the JS contact in our DAP document really has, 2 features One is, of course, it's a it's a new encoding for the responses. It uses, JSON and instead of XML that which is what EPP is based on, but more importantly, it also includes a mechanism for RDEB clients and RDEB servers, to negotiate, if you will, and and confirm with each other whether they're using, JS contact, or their, they're they're using JS contact if if that's what they wanna use in in the response. Or if they wanna use, the JSON normal standard response in our data as defined there. So you have a way to currently targeted to be on the standard track. That's the way we've been thinking about it. And that seemed like a reasonable thing to do given until we had this 3rd option here. Which has come up with simple contacts. So next slide, please. So the important question for this working group is what would we like to do given that we are now in the process of suggesting that there's essentially more than one definition of what's a what's a contact object. Tom, So we we have, as we said, 1 widely deployed standard. We have the JSON proposal, and we have this new suggestion. For a simplified contact object which has, you know, a lot of, appeal in terms of its value in in registration systems. So"
  },
  {
    "startTime": "00:32:00",
    "text": "Do we still think that you know, this new simplified contact, when under the presumption that it's going to be asked to be adopted by the working group, should it with JS contact Should they both be on the standard track? Is that an appropriate place for them to go? Given that we already have, you know, the single standard definition of a contact object in the way that that's used in our in our systems. This is an important question not just in general, but also because in our charter, The charter actually says that we in general want to seek to have one standard. One of the reasons for evaluating extensions and having extensions on the standard track. Is a presumption that if there is more than one which looks similar, we will seek to bring them together. So rather than having more than one idea is to to push ourselves industry at large, the technology in a direction of having a a single one. So that's where we get this interesting, important first subquest in there about, is there a compelling reason to change the existing standard is there a compelling reason that either simplified contact or JS contact should actually be on the standard track which would suggest that we're seeking to change the already singular deployed standard for what looks like a contact object. And we're looking for some discussion about this question. Know, do you have a reason that you wanna bring forward that suggests that they're this we should put them on the standard track. And thus signal, if you will, at a minimum that we're gonna seek to change that at some point in the future. Because the truth is from an IETF point of view and also drawing on what our charter currently says. Absent any compelling reason to actually signal or suggest we're going in that direction, experimental or informational be a preferred direction. A preferred path for these documents."
  },
  {
    "startTime": "00:34:03",
    "text": "You know, that is just the way things are ordinarily done and the way we would expect them to be. And then, of course, if we're gonna if we decide to go down this path of suggesting that there should be more than one we just put the general question out there that for the moment, we're focused on our DAP and and the fact that we're suggesting 2 different things for our DAP are potentially 3 different things but it does beg the question It allows us to at least ask ourselves the question, gee, do we wanna try to bring this kind of model forward into, EPP. You know, I mean, if we're gonna seek to change things, is that something that we should seek to change? In EPP and find a way to allow the option of using one of these other contact definitions. In EPP. And so, you know, that's the question the issue that we need to have before us. So this is discuss. This is the opportunity to say whatever you'd like to say about that and Wow. I see we have quite a queue. So now I'm done talking. So we'll just manage the queue here at this point. Powell, you're up first. Yes. Thank you. Apoqua, Alex. So I start with clarifying question to the chairs, for the for the slide because you're mentioning the I see 57 for free, which is, like, EPP, model, but are you mentioned referring it to the, it it it's in terms of ARGAP, like, a data model because the representation is obviously different because here's XML. Here's adjacent. So I I don't think it's appropriate to ask whether we should put XML inside JSON, a response of the IRDA And so that this will be the first question. Yeah. It's just just about the date. From my point of view, it's just about the data mile. But that's a fair question to put before the group. You know, if we wanna change something. Yeah. So so so continuing on this, I think, This was part of the discussion of what, Andy presented as well, in simple contact. So,"
  },
  {
    "startTime": "00:36:01",
    "text": "one of the arguments was, what the it does make sense to navigate simple contact in the direction of, RFC 5073 free data model. So, basically, they align this, in my opinion, it makes a lot of sense to do that unless we We, as a group, here, see some deficits in FC 57, free free, and we think about, changing it, but then we should change it both ways in my opinion. Okay. Thank you. George? You're next. George Michaels and AP Nick. I have drifted, across views. Of this problem space over a long period of time. I was originally a max in the list and thought we should describe every unique atom of representation of some aspect of an address and a name if it was a distinct quality, then we should normalize it to the furthest extent and know about them in micro detail, and I argue for this, vociferously. And people like Mario came back saying this is just not real practical practical We need to simplify this to a model that is the bare minimum that will be adequate to survive the constraints we have, and we are more likely to survive if we have broad open strings and unconstrained fields that people put real live experience information into, then if we drive to an incredibly fine grain definition. And I kind of didn't like that. But I have come to realize that he is quite realistic. So I want to make some unhelpful observations. The primary reason this information is going to exist in information systems which EPP feeds and which are DAP provides is not so that they equal each other inside this closed e that we do here. This information exists so that it can be clicked on"
  },
  {
    "startTime": "00:38:02",
    "text": "and feed a male client or clicked on and drive a phone call or a fax or copy into some users personal device. They're purposeful for another outside goal. And and I am starting to worry that saying they will be defined in this room is unrealistic behavior. And that possibly we need to actually say, you know, eventually, Jmap will finish. And there will be definitions of cards and contact and structured information that we will be able to use. But if we've defined some narrow context or behavior in here. We will not align. And that worries me. And it's not to say there isn't a real problem here because there is, and EPP cannot just ignore this, and so we'll have to ultimately handle representations, but I personally now believe They're not there because EPP needs them. They're there because real people need them. And ultimately, it's driving to my phone. And whatever Google decide is the representation of addressing information in my handset will strongly inform how I react. So if I may, I think I take away from that just to make sure I understand his said said right. I probably missaid it, but I'll love to hear what you got, Jim. To think of these things independently and let them move forward on, on their own path. So don't try to make this decision now. Yeah. That's where I was don't try and constrain it now because we're doomed and we're going to create a collision in other standard spaces where real contact info is defined. And I actually suspect Mario is working in those other spaces Okay. Alright. Thank you. Let's keep the queue moving. Gavin, you're up next. Thank you. Yes. Hey. So, just for the record, I'm a coworker on Mario's Draft. And to a certain extent, all of this is my fault anyway because I was the first person"
  },
  {
    "startTime": "00:40:03",
    "text": "say out loud that J card is sucks and we should change it. But that that's kind of my point is that the reason why we're having discussion in the first place is because when we were out there implementing our dep, we found Jay card was where things broke most easily and most quickly. Whether you're on the client side or on the service side. And it might win with my new hat on in in ICANN. That's where I see the most problems with registrar and registry IDAP servers. It's in in inside the j card object. And so the objective was to come up with something that was empirically simpler to implement that we have better better, you know, better compliance with standards, better, you know, ergonomics for developers. And I think that should be if we if if we have a binary choice between simple contact to JS contact or Jay card or whatever. Should be it should be an a fairly empirical thing. Which one is simpler to implement? If you're developing a client on a server. So that's my my input on this question. Okay. Thank you. I've locked the queue at this point, but we're gonna run the queue here, like, give everyone a chance to speak. Scott, you're up next. Thank you, Scott Hollandbeck. As an implement I like the idea of there being one standard way of doing something. Right? And Given that we've got j card, Rfc 9083 as a proposed standard today Once you've implemented it, no matter how painful it is or was, it's done. And once you get it working, it works. Right? So if we want to talk about alternative or, you know, different formats that I like the idea of these Standards, and then, you know, get them out there. Let the market decide. If these are easier to implement, more useful to use, And at some point then, if it looks like one of these is gaining traction, we could talk about deprecating you know, this part of 90 83 or replacing it with a new standard. Okay. Thank you. I saw Gavin nodding his head. I wanted to make sure it was to that too. So going down experimental path with sort of"
  },
  {
    "startTime": "00:42:01",
    "text": "something you would agree with. So yeah, to to go back to my point about it, it should be an empirical thing that we can we can make a judgment on. If we make them both experimental, and then see how the the marketplace of implementation treats each one. It's gonna be a night there because for us in the in the in the outcome world, we're gonna be trying to monitor, you know, a whole plethora of different ARDP implementations, but maybe that's the only way we can get that number or that that measurement if we can't come to a consensus in the group, that there's an objective benefit to one versus the other. Okay. Thank you. Mary, you're up, Andy on deck. Do you have any commitment to implement the second thing yet? From anybody, It except by second thing, do you mean JS contact? Sorry. Yes. JS JS contact. Only Mario is already doing that. So, yes, he's 1. Yeah. 1, how are you gonna do interoperability testing with 1? Just just things to think about. You know what? I'm not trying to torpedo the idea. I'm just, make sure that that's in there. Yeah. So Gavin's raising his patient too. So there'll be cost Okay. Oh, old hat. Oh, oh, so central Nick was doing it. Okay. Okay. The other just one other quick point. I agree that it's weird to put JSON in XML, but it shouldn't stop you. It's that's the system's the software can handle it. Okay. Thank you, Mary. Andy, and then, Jim Gould on deck. So, is your proposal that both of them go experimental? Hi. I would say that the Yes. That well, no. What I wanna say is they should not go on standard track, I think. From an IETF process point of view, standard track is not the right answer. Information is also an option. But I think experimental is better. That's not really proposal. That's an observation. But both of them, not one or the other. Right. Both of them. Alright. So so I spoke to Tom, who's the the co author on simple contact, and we're good with that. The but but"
  },
  {
    "startTime": "00:44:00",
    "text": "Yeah. So so we're good with that. That's if both of them are good gonna go down that path. I do wanna comment on something that George said. The so my journey down this path was, as a JS contact cheerleader, and then I had to implement it. And I decided that I would rather have my, you know, go to the dentist or something like that instead. The, anyone who's not seriously looked at it needs to seriously look at it. It's got some some, pretty big things in there that we don't want don't want people putting photographs or you don't want people giving their anniversary, things like that. They're completely irrelevant. To what we need to do here. So so I I would, you know, if you haven't looked at JS contact, you need to because it no relevancy to what we do here in in the regex work through the parts of it. Sorry. The the question about EPP and EPP's contact model, and I'm sure James Gould is behind me somewhere about to talk about this, I think that's a separate issue, and we should not we should address that in the EPP in an EPP discussion, an EPP discussion only, and we shouldn't shouldn't mix that with the art app stuff. If we end up in, you know, 5 years or whatever. Doing something in EPP with a contact model that needs to change an audit, then we'll just do another audit extension. But we can't we can't I I think trying to marry those 2 things at the moment is just, it's just asking for a lot of endless discussions that it's just not gonna go anywhere. But to your 3rd point about should we consider allowing both to negotiate a selection I believe EPP already can. But, the RDEF x draft is all about RDEF being able to negotiate capabilities. So Yep. Thank you for that. And, Jim Gould, you're up next. And, yep, I'm sure he's gonna say exactly what you're saying about EPP. Yeah. Jingle. There's one. Yeah, I was going to kinda mirror You're saying that I don't see, like, EPP being in this equation, It should be between the two representations."
  },
  {
    "startTime": "00:46:01",
    "text": "But I actually thought when I was posting on the list related to being simple, actually thought that the extension would be just kind of a JSON representation of that the RC, 5733 the reality is that I was being a little bit myopic here because the address registries have to be considered as well as CCTLDs. So my concern is that a simplified extension will just get more complex as we bring in all these additional requirement. So I really don't have an opinion though on the experimental versus, informational. But, wanna bring up Okay. Thank you for the additional questions. Werner, you're up next. Richard OnDeck. Ownership from core association. We've started standardizing what comes out of a registry when in the past, we standardized what went into and, a registry. And it act it is actually probably a smarter way to to to go about standardization because there's many ways things go into, a registry. And from my my own registry management experience, I see that much of what's in the registry does not come from PP. Maybe not in terms of number of bytes. Big, a big chunk, but in terms of significance, very big, element might actually not have come in in the in through through EPP, such as you know, the stuff that nowadays we're looking at whether something has been verified. Know, well, that's, of course, cannot always just be done by in the UPP itself. And, if you look at the current j contact, you don't even actually get the the minimal things out of it, for instance, in the the international and low priced contacts, we just get one of them. We we we don't have the the other one. So I think it's a we we we should use it as a as a way to yes, indeed, it's what comes out of it and that should be, you know, the the the the choice"
  },
  {
    "startTime": "00:48:01",
    "text": "of the protocols of how we evolve it. It's it's a good standard also to feed bulk data from one system to an to another, not just for accessed by third parties. And in in that respect, probably the the logic of making it a little bit simpler and covering the the the stuff they already have is is is is a good is a good one. So just quickly, my takeaway from that, is, that you would be supportive if these things were to come forward to go into experimental because I also happen to think you've asked a lot of really good questions and good observations. It gives us an opportunity to talk about that and those issues and go forward with that. So, okay, you're nodding your head, so that's good. Rick, you're up next, and then, Mario, you're last in the queue. So, Rick, Thanks. I'm Rick Willem, Pierre. In general supportive of both going experimental agree that we don't want to do one and not the other and having 3 in the standards world would be sort of bananas. I to appear, we probably won't implement one of these things. This is not where I would stick my next, you know, X 1000 of dollars in investment. In in this sort of thing, maybe in a future research project. But once once this sort of stuff is sort of like Hollenbeck said, once this is working, it tends to be relatively stable. So we'd probably wouldn't be implementing one of these things unless something came along that sort of merited that, but in in future in current thing. What once we've got it working, it's pretty stable and it works. Even though it's kind of a pain to get it working at the beginning. Thank you. Okay. Thank you. Mario, you get the last word here, and we are actually now we have made up the time that we were at before. So we're right at the end of our session. So please, be brief. But go ahead. Mario Lofredo dot80. I started by saying that,"
  },
  {
    "startTime": "00:50:01",
    "text": "I'm not much in favor of having 2 different of 3 different contact representation. And in choosing what is the best the solution. I think that, we must consider what this the the more efficient, the most efficient, not the more complex and most complex or the most all of the easiest because, complexity is a very subject. Subjective. So And Another point to consider is that For example, talking about efficiency, we should wonder if it it it is more efficient, to have language dependent information to replicating replicated multiple times, instead of having, single point, in the representation where you can represent all the localization no matter if they are related to predefined predefined field or or an extension. Again, in terms of choosing between, maps or arrays, we should, think about what is better from the point of view, reducting an item in the collection. If it's better, to deduct, if if he to deduct a map entry or, in a real item. And I conclude the saying that we are going towards, a word where we are requested we are required"
  },
  {
    "startTime": "00:52:00",
    "text": "to, represent the information as accurate as possible. Because there are regulation. Like, for example, NIS 2 in Europe, to detailed the information, not to have the information and structure. Oh, So, this is the point I think that we have to think about a solution that is flexible, extensible, and, efficient. Okay. Thank you, Mario. Takeaway and all of this is I I don't think I heard anyone object to both of them going experimental if we get that bar. But I've also clearly heard a lot of interesting questions, observations So there's some quite some discussion to be had on the mailing list about, really how we go forward with these two documents, what they look like, So we'll get into the details of that on the mailing list. We now, 5 minutes over our time. Moving along, but, let's move on to the next section here and do work with presentations and Mario I'm I'm sorry, Anton. Back over to you. Okay. So we go to new work or at least not adopted your work yet. And first one, Scott. So, Scott, go ahead. Thanks, Ewan. Let's skip through this really quickly here. So, yeah, draft written prior to 117 the idea is to describe an operation scenario that we have seen in the wild where A registrars who are doing some things that is somewhat counter to guidance in RFC's 50 73132 about deleting host and domain objects. Have created a hijacking risk. So Bill Carroll and I wrote this draft initially. We've since bought on Gautamadawake as a co author. To describe what we thought were Current practices, some suggestions on best practices"
  },
  {
    "startTime": "00:54:01",
    "text": "Right? And ultimately, we'd like to be able to document what we think practices are with community consensus. Next slide, please. So that I already covered the problem here a little bit. Next slide, please. Big change from 00 to 01. In 00, we actually tried to describe some of these practices as best. We've backed off from that. 01 simply lists all the practices that we're aware of that either now or that we think might exist, and there's a big TBD in the place where says, and these are what we think the best practices are. Which leads us unfortunately to next slide, please. We need your help. Because best practices in an IETF context are a matter of community consensus. And so we're really looking from some input or for some input. And since we published a one there has been not even crickets. I mean, absolute silence. And so we're, you know, looking for some guidance here, some feedback folks, please take a look at how we have described the existing practices. In some cases, we have tried to describe what we think are benefits and detriments you know, to both, but those are all currently a matter of co editor opinion, we might have gotten something wrong, you might disagree with us. We'd like to know. And then if we've missed any practices that might be possible, Let's hear about those. And then I'd really like to have your thoughts on what you think those best practices there's 2 elements here. Right? There's an EPP side to this. And we recognize that there are probably some things we can do a little bit differently in EPP. But there is a DNS DNS op angle here as well. Because remember, EPP is just an input here. Ultimately, operators have to publish zones that deal with things like NS records, glue records, and delegation information. What kinds of things might we do to make that more resistant the type of hijacking that's described in the draft Alright. Help, please. Okay. So thank you, Scott,"
  },
  {
    "startTime": "00:56:04",
    "text": "I put myself in the queue first. So the the current draft is is called deletions. Or it focuses mostly on deletions. I'm very glad that you will have a presentation in the software and group because I think you will be you will have much sport there. From my point of view, would it be possible to also, change, like, the creation of host object if that would be best current practice for objects, for host objects? Absolutely. If people think there's something we can do differently about the creation of these objects to prevent problem in the future. I think that's in scope. Okay. Thank you. And the next up is Andy. Go ahead. Yeah. So, think the best thing to do is to fix EPP. That would be the best thing to do. That is, easy for me to say at the microphone hard for people to do when they get back to the So, I think the second best thing to do, and I put this on the mailing list and heard crickets from DNS land, is to suggest that people use a dot invalid domain name. That, may require a little bit of implementation, but it is just changing your Current, I created a a name out of thin air to something I created dot invalid. So it's a pretty easy fix. Right? Now for what it's worth, there is currently a description of a practice about a sacrificial name server using some kind of, I'm sorry, a sacrificial TLD Unfortunately, it does not currently mention dot invalid. We need to change that. Okay. Hi. I can't quite do Jim Reed's voice I'll use my own DNS directorate. I thought Jimmy is here. He's right there. I think that think this is in the right place, but I would hit up bring the DNS directorate in early. Thank you, Scott. Thank you very much. We move on to the next one"
  },
  {
    "startTime": "00:58:06",
    "text": "So, Gavin, you're up next. If you wanna come to the we're getting the slides loaded. Yeah. Actually, 2:36 cut out again. So I'm here as a harbinger. From another place. Just to bring to your attention to attention this working group. Some developments happening in the ICANN world that may have implications for this working group and there's waiting for the slides to come up. Thing. Of the TTO. Scroll down. That one. Yeah. So, you can move on to the next slide, please. So there is in the ICANN world, an expedited policy to present development process, which means it's taken 3 years so far to get into publishing final report. And and this obviously is focusing on the issue of international domain name specific variant TLD. So that's 2 TLDs in the zone that are some have some some semantic relationship in in something at some language other than than than written in Latin, and also how variance, second level might be we created and managed together. And, Although the the the the Fair Use 1 final report has just been published, it's primarily concerned with variants at the top level. 2nd phase is going to look at variance at the 2nd level, and that means is going to have implications on provisioning because it will have considerations and requirements for things like creation of groups of names as a kind of atomic bundle. Or or the creation of a primary name and then selective act activation of of of variance that have to be managed in the same way as that primary name. The, the policy recommendations"
  },
  {
    "startTime": "01:00:01",
    "text": "Yeah. I'm gonna have this this impact on provisioning. And there's obviously a risk Now if if we're not all across these, these developments, there'll be a a risk that as these recommendations get. Get kind of go through the O CAM process and they become policy. Registry operators are gonna be required to start implementing them. And without standard available for them to pull off the shelf and use. I'll do their own thing. And registrar's will just go too much work and go nothing will happen. So, the there's a link there to the to the EPD piece that you can and see what's going on. So next slide, please. So as I say, the phase 2, has has only just begun. Phase 1's only just finished. So there is, no no no wording for us to to to to base any work on and, obviously, it's hard to do engineering when there are no requirements, but you know, it's worth starting to think about this process. So, yeah, there's gonna be some issues about how you solve some of these requirements about example, the same registered role. Now, how do you do that in a TLD that doesn't have any data because it's a thin registry. What can you do? Can you do you just say it has to be the same registrar? Or do you have to You have something that that allows you as a registry to to to to get assurance from the straw that they are allocating that variant to the same person as the as the registrant of the primary name do we, again, activate a variant by creating a new object, which might involve a new object in it that's a, a roid has a void that needs to be provisioned in database that appear, you know, data escrow deposit that might need to have an audit record. Or is it really an attribute or some some kind of additional subordinate value of of an existing object. If you're receiving a a request to to activate a variant. How do you know what the primary"
  },
  {
    "startTime": "01:02:00",
    "text": "label is if all you're getting is a create command with a with a name in the name element and nothing else. So these are things where EPP is going to need to be extended in order to give that information to the registry to make sure that everything is being done properly. And also there's no way to know what's LGR to use to to validate whether that that label is correct because it might be that there's a label that's about it in multiple LGRs that might all have different variant rules, and so it might be a valid variant in 1 not a valid variant in the other. And so you you need to make sure that your you're you're you've got that information ahead of you. And as I said before, this could result in extensions to to RDEP. It could result in new object mappings to go into data escrow, so there could be a kind of exploding effect where that changed to EPP results and changes to RDEAP and changes to data some Next slide. So we don't want there to be a waterfall here where, you know, the the EPDP goes off and does its thing and comes recommendations, and then that gets turned into some sort of policy that has to be implemented. And then it comes to the engineers, and they say, well, we can't do any of this. Without a multi year standards development effort effort or everyone doing their own thing, and again, registrars looking at this and saying, do I wanna try and offer these you fangled variant names looks like a lot of work. Night. Go back to do what I was doing before. Just asking So We need to start that dialogue. And, means bringing engineers in to say, look, this is the sort of thing that that that is possible. It's feasible. This is harder. This is easier. And people are going to start putting pen to paper soon. So need that feedback earlier rather than later. So Next slide, please. So this is straw, for CCTLD registry. You will have potentially inside your organization, someone working in the GNSO working in the CCNSO, who may be able to bring feedback to the PDP."
  },
  {
    "startTime": "01:04:02",
    "text": "If you, you know, if you have something that's valid and run the CPH tech ops group, which is the a contracted party, so registries and registrars. Have a tech ops forum where they talk about these issues again, you can come to that forum and bring your your input. The RegX mailing list could also be used for this. And one also, you know, it would be great if there was something off the shelf. Something that started out in a CCTLD world that we could bring to the GTLD world. It's a This works really well here. Why not take that and bring it into the GTLD Wealth can be the basis of the standard then use everywhere else. And if you're wanting to follow the the work of the PDP, there's a meeting list. There's a Wiki It's, you know, the the the DSO does its work more or less in the open. So it's time to There's no way no barriers to getting involved. Thank you k. Thank you. So, we have a queue. We close the queue. Course of time. First of all, please, Thank you. So just a one quick chair's comment, and then I'll make a comment for myself. And that is a reminder. Although, you know, Gavin talked a lot about stuff going on in ICANN, and I know there's a lot of sensitivity whether or not we're doing ITNs work for it. I wanna emphasize that this is an engineering question a technical question, and we're here to solve the technical problem. And then speaking for myself, I will observe that I am one of, a small set. There's a small set select registries and registrars, we've actually been getting together and spending a lot of time thinking about what it means to implement where policy thinks it's going and I just want to support Gavin. There's some real questions here and some real issues. We're headed down a path. We're we're feeling good about our path. But there's still a lot to be known. So I appreciate that, Gavin, bringing all this to the attention here. And people should start thinking about it and raise questions in the mailing list."
  },
  {
    "startTime": "01:06:00",
    "text": "Or and or, you know, feel free to reach out to me. And, we can talk more about what's going on and and what people are doing and very interested in additional input about what it means to to do some of these things. So Thanks. Okay. Richard's next. Yep. Rick will on PIR. Yes, and to what Jim said, in no disagreement to what, Gavin is saying. We the the thing that I would this is probably the best plug for CPH tech ops that, anybody not named Jothan has given in quite a while. So kudos to you for that. Anybody that can out talk, Jonathan, is is you know, that's quite a quite a thing. And he sees the transcript. He's really gonna laugh. Not unlike Andy. So So, yeah, that's that's a good thing. The other thing I would offer this something that to one a number of these problems that Gavin has identified, we are making good headway on So it's it's not maybe quite as dire as as Gavin's slides might make you to indicate if, if, less forgiving reading of them is applied, to, Jim and I and some others who aren't in the room but I might be listening to recording, arm making. We're we're also giving feedback into the policy folks to make unimplementsable. Right? So, it is actually a little maybe better than we might be afraid of. And that we're making sure that they don't do what we would we we techie's would say our stupid things, TM, capital s, capital t. So, we we tend to try and help prevent that too. But, yeah, there is a good reason. CCTLD people, you can be thankful that you're not. I can't be but GTLD people should take time to get involved. Thank you. Yeah. That's I think I heard Rick that you you will take any in all feedback. Right? Yeah. Yeah. Okay. Okay. So I'm next in the queue. I actually want to stress, you know,"
  },
  {
    "startTime": "01:08:00",
    "text": "We we do EPP in order not only for GTLDs only VCCDLDs, we also still have RURs. ETP is supposed to be, you know, provisioning protocols for all registries. One of the things I wanna to point you to is something that we already did in 2007 for enomeregistries, we actually had the same issue that the the owner of a zone file had to represent the number owner in the e 616 threes once it falls per space. So The way I see it, that this is a validation of policy, not so much as a technical variant, So you might want to have to, want to have a look at, RC 50 76. Which is actually looking at this, you know, how how can actually signal this validation of policy g. Towards a regist create or an update command or whatever. So that's just some recommendation for me. And then we have Jim Reid, Jim Beat. Sorry to be doing this more gyms in this King Group. I just want to see this thing, Gavin, but it might be a new op, I was involved in the Ican, committee thing that reviewed that TLD internationalized the main thing, and that was several years ago have completely forgotten all about it and what we discussed Paul Hoffman was the guy that shared that little group that did the work but it might be there might be some useful information from that that could be incorporated into discussions that are taking place that I can. And, of course, it could be complete noises. Okay. Obviously, all the discussions happening in the community I'm I'm I'm acting as a as a channel. So so, there's not I'm not actively working on this. So I'm I'm here as a a as a, as I say, as a messenger. Okay. But but, you know, if there is, like,"
  },
  {
    "startTime": "01:10:00",
    "text": "I said, if there's prior art, like, the Enum thing, one thing you just mentioned that Yeah. That Paul knows about, then we can take that. I'll talk to Paul but we can take that to that community that's doing that work in that be. Okay. I don't think we got as far as talking about anything to do with EPP extensions or anything it's worth having a check just in case. Thanks. Okay. Thank you. 2. And thank you, Devin. Thank you. And we move up to the next presentation It's going to be Jason. Yes. Just on geofeeds, let me get across slides. There it is Okay. Just just go ahead. Hey. Firstly, I think my name was spelled sings, but I'm not gonna sing with but, anyway, no big deal. So, a bit of a change of a subject. Hi. I'm just this presentation is about, request for adoption. And RDEB extension for geofeed data. So it's a it's a And, Tom Henderson from Avianick, and might as well be working on Next slide, please. So, some background, why this was created a couple of audiences 8825 and 9092 and it's, update internet draft They detailed the IP geolocation feed, concept. But at core, what the concept is, generally, it's an IP address and location information and and you have multiple lines for it in files. And and but the benefits of it is that essentially, it helps reduce network latency between enterprise networks and internet service providers. Because, internet service providers published their points of presence. So do enterprise networks. Think Google for a minute. And and then they kind of discover each other and say,"
  },
  {
    "startTime": "01:12:01",
    "text": "let me bring my services, in the physical distance on the internet closer to each other. And so that's one of the benefits. And the second is it localizes internet services by region. And and, But that said, Rfc 9092 is about finding and using the geo feed data. And, lo behold, they they're talking about, using directory services. So one approach was IRR based. But the second one, they also dropped a hint at using RDEB because RDEB is a premier battery service right now. Where, you can access geophie data. The recommendation was used. The remarks remarks feel, as you know, is a comments field. Where, it is not structured because it's multiple lines. And, the proposal we are bringing, it's a rather brief proposal is that we wanted to find a new art of extension for geofeed data to afford a purpose harder field instead. Instead of remarks field, have a definitive, data structure for it, hence the need for an extension. Next slide, please. So what is the proposal essentially it extends the IP network object class to include a new geofeed member. And then I I give a a lighted example here the extension is your feet. We won, for the recommendations of RFC 9092 folks. A simple HTTPS URL. Which points to the geofeed file for that, network And and, lastly, there are certain cautions around, privacy and security considerations. Privacy, thou shall not publish inadvertently somebody's"
  },
  {
    "startTime": "01:14:00",
    "text": "an individual's location the securities, at core is HTTPS URL for a start And secondly, not sure how familiar we are here, but in the file itself, they also have optionally the RPqi signing concept. And and because it rhymes very well with the RAR side of IP addresses and the tree, so this is a proposal And for now, it's a it's a sort of a single member. Next slide, please. So request for adoption, in an out of band way, we have, shown this, proposal to that if see 902 authors. They supported. And and, Secondly, what we are finding is that the RAR communities which includes ISPs Enterprises, they're asking for it, whether it is, Edwin, in a, I know for sure. And then, right, in fact, right went all the way where the right community has actually made it one of the purposes for, that are there that you will allow, geofeed data. So so the request here is that to help standardize this geo feed data access through our web. We we wanted to sort of bring it to the group. And that's it for me. Hey. Thank you, Jes Dipp. And we have questions in the queue. Scott's Scott Hollenbeck. Not a question. I support this. If we can work this in using our standard standard working group document adoption processes Let's Thank you. And then, Devin, next this is Gavin Brown. I can."
  },
  {
    "startTime": "01:16:02",
    "text": "So the the the payload of the, the extension is a URL. So would it not be more or kind of, idApp like to use a link. And specify a link relation. And say, this is where you you know, there's a link for for a record has, a type of geofeed and and an HRF of your help rather than adding a URL as a as a a naked stream in the the IR Lab objects. That's an interesting take on this, but typically when you're talking about links and somebody correct me. I'm looking at handy. Generally, it's talking about different representations. You know, media types or, So but here, the idea was it kind of becomes a part of the inherent IP network object class, but that's an interesting point you raised. And the second idea was that for now, it's simple as simply And then should you be as a URL string But in the future, it could actually become a more sophisticated structure. But that'll be another extension if that was the case. Thank you for that. Just, just wanted to make that come in, and I would say I'd support this as well. Thank you. Hey. That was the last one in the queue. Thank you, Jess. Just, informally, you know, if you want to ask for adoption, send a message to the chairs, and we will, ask for a formal adoption request on my list. Was gonna say I support it if only for the idea that using remarks to signal this is horrible. So, yeah. Thank you. Thanks. Let me, as an individual, just apologize to, as if for getting your name wrong on the chair slides. That's entirely on me. My apologies. was a joke. Thanks. That Okay. Then next one up, Martin, restful interfaces and let me get your slides up here."
  },
  {
    "startTime": "01:18:04",
    "text": "Wristful transport. Go ahead. Yes. Okay. Yes. I would like to use my 10 minutes here today to try to convince you that, We might, need to look into, supporting a restful transport for EPP. Next slide, please. And, so Why? Why should we spend our time on this? Do we have a problem with EPP? Or, well, it seems to work fine, or there's a lot of adoption for EPP. A lot of red shoes are running EPP and, the the stated goal from the original IRCs like, 5730. That's to create a standard protocol for a domain provisioning. It's it's worked out pretty well. As I said, most of most, not a lot of British Finnish are using this, But lately, what at least what I'm seeing is that are also registries that are started to work on other types of, APIs doing domain and provisioning and other domain related, functionalities. And they're all based on, restful architecture. And, I I created a a small list, for above, containing the registries that I know of that are already have functional, APIs doing, restful domain provisioning or working on it. This is not a complete list. It's just, I compiled it based on a quick question on the mailing list, princess, the people from DNIC, let me know that they're also actively looking into creating restful APIs for domain and provisioning so what I what I'm seeing here is that there might be a risk that the original goal for EPP having a standardized interface for registries well, there might be a risk there of of fragmentation into multiple"
  },
  {
    "startTime": "01:20:01",
    "text": "different incompatible APIs, if this continues. So there might be, something here that we need to look at Next slide, please. So, so why why why are registries doing this? Well, I think there are many reasons I tried to list, I think the, the most common, most important ones here, and Well, a lot of the metals have to do in in how our, you know, our, we develop our applications in in today's current, more than mostly cloud environments. We run into issues, such as low balancing. For instance, the the layer 3 low balancing for EPP OT isn't always ideal. For instance, when you run microservices, in the cloud or containers on premise somewhere. It it if you are able to do or able to use and you layer layer 7, load balancing, you have way more advanced options for for traffic management rate limiting can also be be an issue. And also identity access management also, will be a lot easier if you're just able to use the the standard. It's solutions that are out there already. And also registrars. Well, developers working on dredges through our stay they like to use APIs, and they're used to working with APIs and most APIs today are using rest, restful, JSON, XML, doesn't really matter. And this simplifies development between, registry and registrar, and Although it is not too difficult to develop a client based on T SP. Rest is just a lot easier. And what what you see today is that the rest is also the de facto standard for API development. Next please. So, We've looked into this before, myself, looked at into this, like, 11 years ago. It was a long time ago, into maybe"
  },
  {
    "startTime": "01:22:01",
    "text": "proposing something in this area of using rest and, including EPP commands, slash payloads, and mapping commands to, rest endpoints, And there's also some more recent work, about using HTTP support and and and sending the XML as, payload for HCP. Next slide piece. So what what am I proposing here? Well, not a big surprise, as I mentioned. Maybe should consider, creating a new standard for restaurant transport, and what what what this shoot or could contain is, as I mentioned, the, a mapping for the normal domain and host objects to standard defined rest endpoints, and maybe use, standard HTTP sessions, session management, for Sashi Management, currently the standard EPP has the login and the logout. That we we that isn't really a thing in, in, in, in the HTTP layer. So maybe there's something there that This seems really compatible, but I think, it should should be able to to work correctly if you just spend a little time on it. And Also, an an option would be into looking, can we map the, the standard XML scheme as we have today for EPP, to a adjacent format, Although that would be a lot of work. And, But it is something we could consider. And look into the future as well. I don't know that the standard for EPP scribes, EPP, pipelining and something like that might become easier in in the future if we only use, hopefully, HTTP 3, quick, and, with the support for streams and multiplexing, and Well, and last month, there was a, a meeting with, the center tech and R and D group in in Paris. And and"
  },
  {
    "startTime": "01:24:00",
    "text": "the community that got scattered there they We discussed this and it's turned out that there's widespread support for something like this. The common consensus there was that that this would make things easier for registries and also for registrar. And there was a Also, support to help work on this. Next slide, please. So the the the main question I have, is this something We, as a group shoot, spend time on, is it as important enough? And if so, Are there any volunteers who would like to help join participate, I think I'm I I would like to work on this. I think there are more center members that would like to work on this. So I think, 6666 can come up with a with a group that has time to spend, on But I'm We'd really like to hear what the, people in this group have to say about this. Next slide. Yeah. That's it. Thank you. So, thank you, Martin. First one to comment Well, understand our core association. We really like, I very much support this because we've seen that the the basis, just the way the transport is organized, and the accesses organized actually creates a couple of institutional weaknesses that, actually shouldn't be there anymore. To have a single password, for an entire organization for meetings of domain names. Is is probably not a good idea. So we we we should evolve, a little bit. And the the path via restful interface is probably the most strategic one because we can't rely on other solutions that that we're giving It's exactly the the the, like, the micro servers, HTTP environment that has very mature solutions for identity and access management already. So we could use"
  },
  {
    "startTime": "01:26:02",
    "text": "Hey. Thank you, Nick. Scott Hollandbeck. As we all know, EPP was designed from the outset, you know, to separate the data the transport specification. So I do think this is work Worth exploring. Right? A word of caution, though. As soon as you start talking about JSON encoding, You are taking a step towards something that is potentially a much bigger can of worms and every step you take every move you make. Channeling that philosopher Sting. Not that I'm gonna be watching you, but anyway, We need to be careful. I think if we can scope this carefully, And I think a step towards focusing on the transport while leaving the x ML as a first step would be a good one. Let's do that. And then let's see what happens. Right? Cause it's at some point, I think if if we start talking about, you know, changing the encoding, We really are as I said, inching a little bit closer towards that EPP 2.0 discussion And and we've we've talked about that a little bit before in the past, and everyone seems to look at that abyss and then back away. So, Yeah. Yeah. I I totally agree with you as I I also in the slide. I mentioned it as optionally because It's a totally different beast. And, I think the first good step would be to maybe add support for rest and then look at additional, formats It's, vocal. You're thinking. So I wanted to mention just one additional motivation for the registries with for, for doing it. So it's basically the the registry is, usually offering some, additional related services towards the the, registriles and filed using the restful APIs for this. So basically unifying this, this plane for access management perspective and"
  },
  {
    "startTime": "01:28:04",
    "text": "for transport, perspective is is something useful, and that's why also all this, kind of approach defines, adoption also for domain provisioning use cases. So I think this, important work And, this group should support it in my opinion, because the the very, very valuable input let's say, outside of this group, but, I don't know, they mentioned, but could be useful to to make it, make it right. And, to the point from Scott about EPP 2.0 whether we shoots start the discussion. Well, it seems it's from this list. But the EPP 2.0 is already kind of happening. So we may find out that we have multiple EVP 2.0s in few years. So, taking into account the life cycle of such behavior, probably, it is the right time to think to not to, let's say, procrastinate this discussion. Powell, do you have anything to comment No. I I I agree with Pavel. That things are happening And it is important that You all know, things take a long time in the IETF. And so we run the risk that registries are not going to wait for developments here and that we are getting confronted with the fact of standards that are already being developed out outside of the IETF and well well well well well well well that that that is something which you need to look into as well. Yes. I do want to point out we still have a few number, a few people in the queue, but the queue has already closed course, we are running out of time. We have still four people in the queue before we closed it. Christian, your next Yes. First, Martin, very useful information. I couldn't agree more with, with Scott. So, probably we should"
  },
  {
    "startTime": "01:30:04",
    "text": "split up into the transport part and the, data parts just looked up the number. Of course, we supporting a simple key value format for our registry system, and it's The take up is about 60% key value against, the XML So maybe it's worse, but it's a different topic. So, from the restful part from my, talks to to others. I see that especially new registrars very keen and picking up restful environments instead of the the old EPP environment. So Yeah. Please go on with it. Yeah. Of course. Makes sense that the existing rate stars already you invested in integrating, with registries at some point, they also need updating their systems and Yeah. So the migration part is something we also shoot maybe consider. K. The next one, Nathan. Yes. Nathan from Yuriy thank you Martin for the presentation of think, I support all what she said. I think one of the benefits offered working on a restful API is the very large and growing ecosystem that, that is on the list. So I think that's one more reason to work on this. So to reply to you to you two questions. Yes. We should work on it and, Yogut will be, very happy to, be involved in for this. Look. Oh, great. Nice to hear. Yeah. And I think, this will maybe this isn't just my guess, but having, like, a restful transport could make it easier for smaller registrarch to also integrate with with automated systems from a registry because the the technical expertise you would need for EPP over TCP is quite a bit higher than just implementing a restful API. K. And last one is James Gould."
  },
  {
    "startTime": "01:32:05",
    "text": "Yeah. It's Jim Gould from VeriSign. I'm supportive of this work I mirror Scott's feedback, and I'm very impressed that Scott still has hair after current EPPP. Big project, to do, but I would focus on the transports first, then look at the view without modifying the the data model. And then potentially consider data. Yeah. Okay. Thank you. And with that, I'd like to link Martin for his presentation. We had 2 extra presentations from Andy, sorry, Andy, we ran out of time. We knew this. We're already, 2 minutes late. Which reminds me that for next meeting, people, if you have topics for the next time, give them to us in time so we can ask for a, a wider slot in the next meeting. I think we will go to 2 hour, swap to the next next time. That's wait, that's I'd like to also thank Rick Wilham taking some notes and for everybody in present here, I think it was a very good productive meeting. And, we'll talk to each other on the mailing lists And with that, this meeting is adjourned tint."
  }
]
