[
  {
    "startTime": "00:00:00",
    "text": "Tommy? Yeah Yeah Yeah you Good afternoon, everybody. It's about half past So, uh, evening then troublemaker in the front row Well, I'll have to be more specific specific So let's go ahead and get started This is DNS operations the second session of this IETF, because one was really enough. We have the next hour for some assorted discussion And you all know you all know who everybody is Benno, Tim is not with us in person, but I think is, is, uh, in. And warren kumari is our area director, so let's treat him with with is dialed in. And warren kumari is our area director, so let's treat him with plenty of respect. He's the one in the funny hat if you don't know Warren And also, we want to say thanks to paul hoffman for doing our minutes so the note well everybody has seen but if you have actually read it, please do Working Group chairs were reminded this week for instance, that, you know, this, this something people really do need to pay attention to, even if you've seen it. Do make sure you reviewed it and know what it means for you you Also, the IETF Code of Conduct"
  },
  {
    "startTime": "00:02:00",
    "text": "These are also maybe something you've heard eight times this week but still important, and we still expect people to abide by them We take the code of conduct seriously. If you feel it's been violated please reach out to the chairs or the IET Ombuds team. And beyond the specific rules, you know, we have a sort of overarching rule here. We work as individuals. Let's remember to be nice to each other usual IETF meeting tips if you're here, welcome. We're glad to see you Make sure you're using the Meetecho on-site tool which you can click on in the Datatracker agenda use MeadeECHO to join the mic queue, or you'll confuse the chair Keep your audio and video off if not using the on-site Meetecho For remote folks, we're happy you're here too Make sure your audio and video are off unless you're chairing or presenting and use of a headset is strongly recommended So, and to our agenda we have a couple of items that were brought for D&SOP to consider at the request of other working groups and a couple of drafts to introduce that may eventually lead to work for DNSOP There are two drafts that we were asked to mention. They're not being discussed in DNSOP today, but they do touch on DNS management and the author are seeking comment. So these are both in the data Datatracker, the domain connect document in Rejects, and the integration of DMS domain names draft that it's not clear where its home will be, but the authors did upload it this week and are seeking comment so we have the 464 customers side node recommendations"
  },
  {
    "startTime": "00:04:00",
    "text": "that Tommy I think will be a providing some overview and asking some questions An update on the side meeting the load on load balancing that I'll bet many of the people in this room were in, many more um another new draft on client authentication recommendation for encrypted DNS that does call out a what could be an interoperability challenge among different implementation so it may well need some work in DNSOP op and we have a presentation time permitting on a method to prevent zone walking in DNSAC So we can go ahead and is Tommy here? Okay, terrific Yeah, it's a problem All right, thanks, everyone. Hi, I'm tommy jensen I, unfortunately, I didn't create a great name for this, but we're going to be talking about 70-50 that's for sure. So for context, Jen and I are writing a draft in V6 ops that talks about when to enable C-LAT, which uses D DNS-64 or can use DNS-64 to discover an IPV6 translation prefix When going through the different RFCs, it depends on, we realized that RFC 70-50 70-50 I'm not a fan of how it defines secure chance And so it's says it should communicate the node that is doing the prefix discovery should communicate with a trusted DNS64 server or secure channel or use DNSSEC and the definition of secure channel is there on the slide, which essentially boils down to use something along"
  },
  {
    "startTime": "00:06:00",
    "text": "IPSEC or link layer security which is not very specific, not very helpful, and from what I can see, not very widely deployed especially when we have since this was published, DNS DNS-specific standards for advertising encrypted DNA configuration and then using encrypted DNS which IT is the next slide. I do that. And so RFC 9463 actually allows a network to directly advertise encryption DNS server config using DHCP or router advertisements And so why not just do that? um and so that's the first part where i got the name from and then in the presence of this where if you can use this mechanism because you have a name to associate it with there's no need for a DNSSEC-based mechanism And so the other thing this proposed text does is, rip that out. Now, I shared this with the mailing list and the discussion that resulted was quite what I expected. What actually had happened was, why don't we just deprecate? DNS 64? And I, um, a lot of energetic response on site here to this week on that that I was not expecting. So I was going to come here and ask, you know, what people think of this definition. Instead, what I'm going to start with is do people think that we should update or deprecate this document? The work, the group that created this was Behave which has shut down. And so the chairs and the AD said, that it should come here for consideration. So regardless of what that decision ends up being, I still think there's a separate discussion where it goes. But first, as a and this is the last slide, as the to the queue should we deprecate DNS-6-4? should we update it like this or update it? a different way or leave it alone?"
  },
  {
    "startTime": "00:08:00",
    "text": "warren kumari. Could we go back to slide? three? I'm just wondering if we could be like creative in the reading of for example, like for example a link layer that uses encryption is do in the reading of, for example, right, like, for example, a link layer that uses encryption is dough or dot or something. Like, maybe it's already covered No I mean, don't get me wrong. It's not like the OSI model is perfect, but calling TLS link layer is probably going to turn heads elsewhere Oh, okay, okay tell me we have Maxec you know we have what Maxec. You can have a cryptiase or that connectivity. I'll see why not. Genling Klova I guess you know my position on this I think ideally I would like to see this disappear. If it cannot disappear let's say, please don't use whatever was written there and always use secure communication So, I mean, if you cannot deprecate it for some reason, I think we shall send a much, like, very strong message about not using RFC50 as it is not just recommend using something else, but clearly say don't do this. So to clarify, something along the lines of what I've put but it changed the should to must and it explain there's no out there yeah and maybe even my clearly say don't do this. So to clarify, something along lines of what I've put, but it changed the should to must and explain there's no out there. Yeah, and maybe even must not do. Okay. Because, well, you know people are creative in readings. Apparently Schwartz. So this is a should, but we know you won't right it is yes because almost nobody does either of these things. Yeah, yeah okay uh yeah so i'm i'm actually with warren uh That is that it says you should try a trusted server over a secure channel and like we have some secure channels that you could use and like okay, editorially we could now, if we are revised"
  },
  {
    "startTime": "00:10:00",
    "text": "it, we could change the examples of good secure protocols but it's not a normative change so I'm not worried about that, but nobody does this. So like maybe our recommendations should reflect reality in some way Okay, so just if you could stay right there for a moment do we want to write something that reflects reality or write something that we want people doing from now on i think tell people from now on, you should use DNS sec validating stub resolvers is like not a normal normative recommendation that we you know, should expect to get a lot of traction on. Nor did I write that i know but rfc 70 50 appears to effectively say it. It currently does, yes I mean, validating stump resolvers do exist, but then that I own, not on any computer that I own Sure mark andrews, the tape there just said a secure channel, doesn't prescribe what the secure channel is It really doesn't It says, for example it does not go past that. It does not say you have to use anything And the reason for this is the DNS 64 actually changes quite A records. So you've cannot, if you've got a DNS 64, server, you're placing a lot more trust in it Yeah, you've got to trust the quad A's that are being returned Because you can't use DNSX validation to because D and S six four stuff so broke DNSSEC and I tried very hard to stop it when it was being produced But yeah, and yes DNS-64 should go. It should be made historic it's not needed it really was never needed okay and that 64"
  },
  {
    "startTime": "00:12:00",
    "text": "was never needed either. We... Ooh! had we had, we had when diners sick came out, we already had dare slight we had the way to deliver IPV from the V6-only network at that point. People people scared that it was new, but it existed Sadly, that ship has sailed sailed A little while ago. Hi, david schinazi I'm a little disappointed in you, Tommy. You missed the obvious solution here. What? Clearly, the link layer is mass connect Ethernet. You run all your DNS 64 over that What was I thinking? No, but I actually came here to me a more serious point. So some number of moons ago, while I worked at Apple, I implemented our C-70-50 because we were, I was working on Happy Eyeballs, what eventually became the Happy Eyeballs v worked at Apple, I implemented RFC 70-50 because we were, I was working on Happy Eyeballs, what eventually became the Happy Eyeballs V2 RFC and sometimes stuff wasn't working because if you go back to when Deanna 64 was written, the idea was all right we got the applications to update their code to IPV6. We don't have all the servers supporting ipv6 but if we just put a NAT-64 here and we do DNS4, it'll just work turns out that was wrong it didn't really just work, and there are plenty of reasons So Section 7 of RC805, which is happy ibos v2 has a whole list of things of pretty much how I shot my toes off one after the other with dns 64 because like if you have a VPN on multiple networks, things just don't work You can read it if you want the full details But conceptually the idea was there are cases where DNS 64 doesn't work for you and you need to"
  },
  {
    "startTime": "00:14:00",
    "text": "just use Nat 64 directly, pretty much inside your happy eyeball stack, you do the you create your V6 address out of V4 you need to just use Nat-64 directly. Pretty much inside your IP eyeball stack, you create your V6 address out of the V4 address directly. And that means you don't even need to use the C-LAD. It's pretty great At the time when we wrote that RFC, that RFC was the only way you could get the Nat 64P prefix. And by the way, it's a very inconvenient way to get a Nat-64 prefix And so now that we have other ways, you can get it in RAs and various things, I don't see a use for this at all So my take would be to deprecate 70-50 and probably DNS-64, but you still have a need for Nat 64, but if you have a way to get the Nat 64 preface, just have your application do the synthesis It'll solve the problem. And it also fixed DNS sec, which I hear some people care about Lorenzo Khalidi, we are 70-50 implementations started off using IPV4.gov.com and it broke what we mistakenly announced the V6 quay record for that that So, I agree that it's not particularly good mechanism The Android DNS resolve does do synthesis internally, but it can learn the prefix through 7050 I asked, as the author of the Pref64RFC, I do think it would be nice if 7050 went away. I will point out that some mobile carriers do use it still and they don't use the Pref64 option. I don't know how much pushback you'll get from them if you declare it his historic The other thing though, I mean, which data link layer does not utilize data encryption technology? You know, I can tell you that cellular networks are in encrypted. And it's sort of like I think all links should use encrypting technology anyway. Like, you know, Wi-Fi is encrypted"
  },
  {
    "startTime": "00:16:00",
    "text": "most of the time, so maybe we don't need to do anything right? Because it's a should, right? So you should already encrypt data link layer anyway If it's not clear already, what I'm a allergic to is having an RFC that makes it sound like you have stuff to do and really we're all just doing the same thing. Like we should be honest about either we're not going to do it and we should make it historic deprecate it, whatever or we should clarify it and say this is what this really means for poor implementers who come in to implement CLAT 10 years after their competitor, who shall remain nameless and figure out what's actually happening oh you could always update 7050 to clarify that nowadays most links are encrypted, and therefore it doesn't matter Or the other thing you could to point out is that if you're getting a DOT Resolver which would you prefer? 7050 needs to be very top of level closely related you know very close So if the DOT Resolver is further away and it's preferred over the Plaintex Resolver, 7050 might even give you the wrong answer So that's another thing to think of, right? So I, nick buraglio with the S-Net. So I would be in favor of deprecating this, and let me tell you why One, there's a lot of moving pieces in the migration to v6 only from dual stack or from straight IPV4 only Deprecating this would not preclude anything that already exists, but we have better mechanisms to do this that are already being deployed What deprecating this would do would say a message that you should be doing this this way because this is the modern way to do it and the sooner that happens the sooner we'll get people to stop deploying it in this manner so it's really sort of hedging against doing it in a better way now rather than having to clean it up later from an implementation you know, from an operator standpoint that is Thank you. We have tune off"
  },
  {
    "startTime": "00:18:00",
    "text": "it up later from an implementation, you know, from an operator standpoint that is. Thank you. We have two and a half minutes, two questions and three slides so you can manage the time a little bit Tommy, how do you want to do that? I don't have any more slides, right? Or do you mean the next? Yeah, you have a question to the working group group? Yes, this is the end. Yeah, this is the discussion for these. But uh please go ahead yeah yeah so we're on come on Google, what I originally got up to say was benjamin schwartz said like, nobody's doing this, but I think everybody's doing this, right? Like, if you're using that 64 on this network, you're doing an encrypted link layer because the Wi-Fi is all encrypted That's just a separate thing, right? I just want to correct Ben everybody's doing this, right? Like if you're using that 64 on this network, you're doing an encrypted link layer because the Wi-Fi is all encrypted. That's just a separate thing, right? I just want to correct them. You're right. You're absolutely right. But it's not saying, well, I'm not saying we should keep DNS 64 around. Just if we deprecate it, we should make it clear that, you know this is the signal to move off it, not thou shalt not use it as of today. And why we're devir yeah, that makes sense Yeah uh, jen linkova, first of all, Warren, in V6, ops, we already have a double which saying, yes, it would be highly desirable not to use DNS 64 and instead use local synthesis and pref6 for another mechanism. So we do have another mechanism instead of this. And I have had a discussion with people who said, yeah, we only implement 70 mechanism. So we do have another mechanism instead of this. And I have had a discussion with people who said, yeah, we only implement 70-50 because we don't have a use case. So something can clear message that this is not recommended and being deprecate does not prevent all those mobile operators to see we don't have a use case. So sending a clear message that this is not recommended and being deprecated, does not prevent all those mobile operators to still use it, but at least they will know that the case. So sending a clear message that this is not recommended and being deprecated does not prevent all those mobile operators to still use it, but at least they will know that they're using some like outdated technology. So I'm definitely and i actually came here to say yeah encrypted Ethernet doesn't give you anything because your DNS will be so far away. And we all know all other drawbacks of using 7050, like you can't use your third-party resolver unless you also implement a 8-880, which nobody does Well, that's a clear working group signal. Yeah Thank you, everyone. Thank you very much yeah thank you we have Ben okay for the next day"
  },
  {
    "startTime": "00:20:00",
    "text": "Thank you benjamin schwartz to offer an overview of what happened in the load balancing side meeting Let me get that. This is my clicker Let me get Okay, we had a side meeting yesterday About 60 people came I think. We had presentation from myself, Shane, and Davy's song of, I think, China Mobile and we had a lot of different ideas that that came up in the course of that conversation We have 90 minutes and a lot of things to talk about. So this is just a selection of some of the more memorable proposals that people thought through of things that could be interesting to work on There were also some concerns raised about whether there's something that's sufficiently useful that we can do here And overall, I would say there was a lot of interest in discussion but it's definitely not yet clear if there's a essentially a scope that draws enough interest and has enough support to be able to move forward to something more concrete So it does, did seem like we everybody in the everybody who talked about in the room would be interested in having a place to continue that kind of discussion on this topic and keep looking for an opportunity to do so something useful and concrete so we intend to request an IETF-hosted mailing list Warren points out to me that we are going to need a name for this mailing list. So on"
  },
  {
    "startTime": "00:22:00",
    "text": "the DNS op list, please chime in with what you think the name of this mailing list for DNS-based load balancing, DNS-based traffic targeting, GSLB, as it's called in a lot of the literature You know, naming mailing list is one of the really hard things we do around here. But not at the microphone If anybody wants to make a comment about the other comment about the side meeting, not related to the name of the mailing list, we have a little bit of time for that Wow Okay, seeing as I have a timer with seven minutes on You don't have to. He wants to talk about something else want to mention that one of these seven minutes on. You don't have to do. You want to talk about something else. Do what you have to do. I just want to mention that one of the very interesting questions that came up in the course of this conversation is should we be thinking primarily about changes that essentially are internal to the operation of authoritative name servers where we are essentially trying to improve the ability to operate those name servers in a way that is supported by standard or should we be looking at the prototype? that are spoken between results? and authoritative names servers, or even all the way down to stubs and stub resolvers? you know, through this whole stack or maybe even further down the protocol chain in into the clients that are making use of those DNS queries And for example, linking somehow into the revised work that's happening on happy eyeballs So there's a wide range of possibilities here ranging from pretty narrow scopes to pretty enormous scopes And I'll be, I really hope that people will will join our mailing list once we have it, I'll send it to DNS off, of course"
  },
  {
    "startTime": "00:24:00",
    "text": "because I'd love to keep talking about that and see if we can find something really useful to do here All right All right and I think Tommy, you're back for the next one here Hey again. This time we're going to talk talking about client authentication recommendations for encrypted DNS thanks to my co-authors listed here So for context, usually authentic to an encrypted DNS server is a bad thing in that you don't want to de-anonymize yourself, enable user tracking, etc But the enterprise use case is one that's convenient to point at, but in general, when the same entity owns both endpoints, a DNS server and a DNS client, say on an operating system or in a managed browser, and wants to say, I only want myself to be able to connect to the server authentication starts to come into play And this is something that's becoming more common we see in the field where we have people working from home, not having a network edge where they still need to can connect to a work provided resolver or a trust resolver that may not be publicly available even though it's publicly routable, if I can abuse the word available there for a bit Achieving this otherwise means you have to set up tunneling for the server. I know the word mask came up earlier but wouldn't it be great if DNS could handle it itself? seeing it's already had, it already uses TLS So this draft was written to see if we could come"
  },
  {
    "startTime": "00:26:00",
    "text": "up with a consensus for different implement of both DNS recursive resolvers and DMS stub resolvers in various products on best practices that we stand a chance of being able to play with one another instead of having walled guard where from this vendor it works this way and from this vendor it works another as well as to codify when it's appropriate because clearly when you shouldn't do it you absolutely shouldn't do it and so we did want to just write a draft that says you should off sometimes in a nutshell it goes through and says the use of client authentication with a the cryptid DNS ought to be restricted to when the server gates access to a specific set of clients and are pre those clients are pre-convary i.e., the client was expecting this not the server challenged it out of the blue because that'd be a great way to leak identity And then optionally, maybe the server needs to treat clients differently, but that's a bit of new nuance we can probably spend a lot of time debating everything else first where in all other cases, you shouldn't be doing this for various reasons. If you have servers that are lot of time debating everything else first, where in all other cases, you shouldn't be doing this for various reasons. If you have servers that offer different functionalities, they can do that at different endpoints. It doesn't mean that they need to authenticate clients and then sort them in that regard The following requirements were listed to help guide a selection in what we would consider to be best practice for use of authentication with encrypted DNS We wanted something that could be amortized over connections because again, in the case where you have a pre-existing out-of-band relationship with the Resolver, privacy of queries is a little less of a concern, clearly if you're authenticating so long-running connections amortize the cost of that Use of existing standards. Here we are, right? And reusable across encrypted DNS protocols, because there are three TLS"
  },
  {
    "startTime": "00:28:00",
    "text": "TLS-based ones that have come out in recent years, and we don't want to have to have different practices or different solutions based on which protocol you're using and then finally not having the human click-through factor, right? Because some forms of off do proof of presence or other human-centric things that we don't believe are appropriate for this particular use case working group opinions, welcome So, spoiler alert MTLS is what the Zero Zero Recommends for various reasons. List it out, I won't read through all of them, some of the alternatives that the drafts explicitly calls out there and why they weren't selected for a number of things being HD to be specific ruled them out because sure, that works great for DNS over HTTP the drafts explicitly calls out there and why they weren't selected for a number of things being htgb specific ruled them out because sure that works great for dns over hdgps but dns over tls dns over quick ought to be supported as well and selections in those protocols shouldn't dictate which vendors you get to work with And then, yeah so the next steps this does not have a super obvious home so thank you to the DNS op chairs for hosting us for this discussion. Very curious to see what people think and letting us know if this belongs in the IETF, if so where it belongs, and do you agree how to would you like to see it changed? warren kumari, Google could you go back to slide four, I think? Yeah, that one So I use Comcast at home Their resolvers are only available to a specific set of clients, and they can say, please fill in this form in order to get access to it Now, they're sort of a allowed to do this. Basically, how do you prevent? this being, you know, our resolver is only a available to our ISP customers. Therefore, we allow"
  },
  {
    "startTime": "00:30:00",
    "text": "to do this. Great question. So, you know, setting aside whether we got it correct in the text or not, this spirit of this being that in that scenario, you are the admin of your device, Comcast is the admin of the server you're not equal, it's not appropriate. Like that Comcast asks you to configure that is bad, but I get you are the admin of your device, Comcast is the admin of the server. You're not equal. It's not appropriate. Like that Comcast asks you to configure that is bad, but I guess, you know, I would definitely be open to calling out that kind of thing very explicitly but that's the spirit answer. Yeah, yeah, I get the spirit after I tried be open to calling out that kind of thing very explicitly, but that's the spirit answer. Yeah, yeah, I get the spirit after I figure out how we do the wording to make it so that, you know, we can keep communicate the spirit. And the other thing is, why not do this? in ADD? It feels very ADD-ish So ADD- I like it, but yeah. Okay ADD is chartered for discovering server properties Dot, dot, dot So to be a civic NPI Inf, just just reinforcing Warren's point and like making very explicit that the connection between the different statements for when and when not something should or should not or must or must not be done like the connection whether it's an or X or and must be very explicit absolutely for certain and we did our best to take that but I hear you. And so if this is work that comes here, for example, we would more than welcome PRs to help make that explicit because, yes, both sides we don't want to be over-inclusive on this in any way in terms of when you should Wes Herdica, USC, I saw it in the ICAN board, not speaking for the ICAN board. I'm required to say that, sorry So I love the idea of providing this guidance. I think it's actually super critical The one issue that I have is sort of tailing onto what Warren started In the end, knowing whether or not you expect to need to authenticate to something,"
  },
  {
    "startTime": "00:32:00",
    "text": "always will eventually fall down to the user in a bunch of places And we've already proven that users cannot make that sort of dis decision, let alone it becomes very difficult I mean, Warren's Comcast router might know that it needs to authenticate but not all the devices within Warren's house, let alone the guests that come visit Warren's house. It's just not possible so I don't know how you're going to resolve that particular issue but the rest of it all sounds great. Quick question do you think that putting verbiage that's explicit to say enterprise or some other description of use case would be helpful, harmful? useless? Yeah. So if you can spell it out to say, manage devices yes that's probably the right, thank you, Warren, that's probably the right way to, to know, you need to spell it out very explicitly these types of applications will always or never you know, expect to do authentication okay benjamin schwartz. I think I agree with like all of the substantive content of this draft and am like completely horrified by everything else about it So like, I can't, I have to admit, I can't quite put my finger on it. I did try to send an email explaining, but basically, I think the draft is kind of upside down Like we at the IETF build protocol components, these protocol components can work together in various ways. We are not the protocol police We do not tell people, we are not in empowered to tell people that these two things that work together can be used together. What we can do, and that to me is what's happening here, part of what's happening here And conversely, we're making recommendations, we're telling people out of the universe of things that can fit together, you have to use this pair. Use TLS authentic with, you know, with Doe and not any of the other potential things that could work. And that also seems very strange to me So the thing that makes sense to me here is to say,"
  },
  {
    "startTime": "00:34:00",
    "text": "so you've decided to use mtLS to authentic your DNS server here are some things you could think about here are the privacy implication that that creates. If those privacy implications don't a good match for your use case, then you're in danger And like he are the performance implications. Here are the like client user experience implications here are the reliability implications. I think that's a bunch of value stuff that we can do. But telling people like MTLS that's the way that you should authenticate when like lots of other things exist and more things might exist in the future like that seems very weird to me I'll give you an example. In the privacy package, Working Group, a few people just came forward with a, and also other words groups, with a proposal called EEPPT. It's EEP EEP, instead of EAPTLS to authenticate to Wi-Fi it's using Privacy Pass to authenticate to Wi-Fi. Well, if you can use Privacy Pass to authenticate to Wi-Fi, then I think you could probably use privacy pass to authenticate to a DNS server And I don't think that we here should be in the business of saying, you know, nope, that's not, that is not how it's done. Like, I don't know, that we've got these components. If they work together, then they could be used together. If they, if that has some like non-trivial consequence, then we should document it We should very clear about it. But, uh, normative language and recommendation like MTLS is the way that I don't know, very strange to me. Fair point I want to tease a part that we definitely do make a recommendation What we do not do is say and shouldn't do anything else um i i think honest we have a lot of overlap and that we want this to be able to explain what the tradeoffs are in different authentication mechanisms and why you may or may not want to choose them. I would love to talk with you more offline about that I don't actually think you need to mention a"
  },
  {
    "startTime": "00:36:00",
    "text": "or may not want to choose them. I would love to talk with you more offline about that. I don't actually think you need to mention any other authentication mechanism. I think it's sufficient to say, like MTLS can be like it does work with these things. Let's talk about the properties that that creates I don't I don't see any need to like attempt to like do a survey of all the different possible ways that you could solve this problem that that's okay that I that doesn't seem like it needs to be in scope. Okay, so the was something we were hoping would be illustrative of cases. So that's good feedback thank you jim reid speaking for myself of course um i think people have talked comments in the makeup, and are trying to delve too much into the detail of the draft in front of you just now, almost like I was trying to refine the draft before it's been adopted. I think this is a great piece of work that you've done so far. Implementating and other knits and stuff need to be fixed out. That can only be resolved once we actually adopt the document and have our work route work on it. And in my opinion, it should be adopted and it should be adopted here because it doesn't seem to be anything else in the IETF that would be the right home for it So by all means, please pick up this piece of work and go on with it and we kind of a discussion then about whether mtLS or other kind of authentication schemes could or couldn't be used Just get this thing picked up and worked on because it needs to be done Thank you. Thank you I agree with Jim Jim Jim Not yet, Jim So I think this document, the text needs better work and I volunteered to help, and I think it's a good document I think the two important points are, for me, that in interrupt is important here. We have lots of different ways to authenticate It's annoying if everybody uses a different way arbitrarily without having a good reason There should be some guidance as to how you do this And I think the other area that is actually called out quite well in the draft right now is that getting this wrong, having like bring your own device attached to a corporate"
  },
  {
    "startTime": "00:38:00",
    "text": "network, suddenly revealing things to external systems where you expect some privacy, but in fact you're not getting any because you've got a employer profile installed that's terrible and we should be defending people's privacy. So I think it sounds a bit weird to say, you know, we're going to talk about entirely a corporate use case where you have no privacy because you already signed it away when you join the company and got paid. But what we're actually doing is to defending the security of users using those devices on other networks or in other contexts or with other applications And I think that's what's really important. If we didn't do that then the chances are privacy is going to leak everywhere and all of these things that ironically are precisely intended to give users' privacy are going to be silently leaking things when they shouldn't And that's bad. That's why this document is also important, I think Thank you Jessica Kronitsky, Microsoft, I'm one of the co-authors on this draft, and I just want to say thank you to both the energy and the hate of the way it's worth because I think that we need a lot of help and eyes on how to strike the right balance and I really agree with joe mandel everything he just said I guess back to something that benjamin schwartz said about we, we shouldn't say, should, we should say maybe something like May and he here's why and when and what the properties of that are. I actually like that idea a lot. I think when I saw your email on the mail list, I was thinking, oh, we're going to have to now enumerate all of the different things that could be used and when they should and should not, and that felt like maybe a bit too much, but also maybe could be useful, but then it would require a lot more changes down the line But just to reinforce that the spirit of this is interoperability for"
  },
  {
    "startTime": "00:40:00",
    "text": "those use cases where it does make sense And yeah, high end thank you Eric Nagrin Akamai, thanks for pulling this together I mostly responding to what Ben's comment I think this is really valuable and would be valuable to have something that is giving a concrete recommendation as to enable better vendor interrupt and so that operating system vendors can build things like this directly and you're going to have the hooks for it rather than having 12 different ways to do it um i also think you would be really useful to have this to also warn people about the sharp edges around things like don't use client search if you're using TLS 1-2 without re-negoti It's like a kind of obvious thing, but so many people forget that or don't realize that that having something that really calls out the risks of doing it wrong would be valuable Good point, because that's obvious to us Q muscle, NPR, and enthusiasts of being utterly horrified by documents echoing what Ban said, I think this makes a wonderful informational document if it's presented as, if you are doing authentication via mtls presented as if you are doing authentication via MTLS, here are all the things we've already, here are the problems we've thought through, so you don't have to find the problems yourself I may have very good reasons in my environment for doing, uh, of a HTTP and using the authorization header or something. I'm not saying I do, I'm just saying as a hyper hypothetical, that's possible but having the document that says, we have thought through using MTLS for client authentication, and here's all the problems we found and so solutions for them really incentivizes people to go, okay, let's do that because someone's already done the hard work. Makes sense thank you so we're on camarie google no hats hats"
  },
  {
    "startTime": "00:42:00",
    "text": "So, uh-huh. So, speaking, so, seeing is when we talk about things that horrify us the whole idea of a corporate resolver is kind of terrifying to me like split DNS I think is evil and should go away I realize that's never going to happen though I think much of the point of the IETF is for interoperability So I think it's useful for us to have sort of the way you should do this and kind of disagreeing with Ben you could just list one way. If you want to interoperate between a client and a server, specifying this is the way we expect it to work seems good. Now, with the serious AD hat, if people think that it should be done here, I'm going to have to try and justify that to the rest of the IESG And it's not entirely clear to me that it fits in the Charter, so it might be good if we had something like a poll where we said, you know, who thinks this should be done here? Who thinks this should be done here? fits in the charter. So it might be good if we had something like a poll where we said, you know, who thinks this should be done here? Who thinks this should be done elsewhere just to give me some more ammunition when people are like, why don't you do it in TLS lamps? ADD, deprive? You want to pull now? yeah I can yeah I just call it poll No title. Oh, no poll. Oh, huh? The question was okay. Okay have an idea explaining what the question is I was thinking the question is, do you think we should do it? in DNS up if so click yes do you think it should be done elsewhere? Click no That works was thinking the question is, do you think we should do it in DNS off? If so, click yes. Do you think it should be done elsewhere? Click no. Okay, that works The number of no opinions is interesting Yes"
  },
  {
    "startTime": "00:44:00",
    "text": "it's in our charter What do you think? So even between Before you guys Yeah just only input for Warren Ammonition, oh we would like to hear how it goes. Thanks, everyone thank you thank you So we're next. Yeah, but you have to close Oh, okay, she wants to All right on that next is a remote presentation presentation Right, that's something it's not on my screen anymore, the pole Learned something after that. Yeah Hello, everyone can hear me? Hi, yeah, I can hear you loud and clear. Okay sorry, go ahead. Yeah, you want to run the slide or shall I do it? Yes, please, if I can get the control. Yeah, you can request the control control Thank you"
  },
  {
    "startTime": "00:46:00",
    "text": "just figuring out how to request the control Okay, I can do that by hands So now you should be able. Oh, sorry Now you should, sorry. Now you should be able to run the slides Awesome, yep. I'm in the field hi, everyone. My name is Fatima Bonas and I am from I ESNET and this is the draft for ZoneHarm hopping, supposed to be very informational draft, so and it's only 15 minutes. So it says I have 16 slides but I might just hop quickly to the slide that actually matters the most. So not with 15 minutes. So it says I have 16 slides, but I might just hop quickly to the slide that actually matters the most. So not wasting too much time on what and why DNSEC is, probably every knows the motivation behind it And the important part here is the concept of denial of existence So DNSIC introduced this new record and sec for actual authenticating the negative responses of the overall completeness of DNS authentication. So as an example, if you guys are familiar with DNSX, this is what NSEC looks like that every owner name in the zone file would have an NSIG that was point to the next available owner name in Mexico order With that, I think the biggest challenge with the NSEC records right now is zone walking. It has been a long longstanding problem ever since NSEC DNA introduced. So quickly, what's going to walking is since NSEC actually has information about the owner name and the next name, anyone intentionally can query the domain names that are non-existent and can easily walk through the whole domain And there are tools available out there that are free, open source, that everyone can do use. And if they can find a TNSA, enabled server, they can actually have a complete zone file track whole domain. And there are tools available out there that are free, open source that everyone can use. And if they can find a DNSSEC-enable server, they can actually have a complete zone file transfer. So that is kind of like a huge problem for information leakage"
  },
  {
    "startTime": "00:48:00",
    "text": "of the overall domain content of the data of a DNS server. So currently I have a problem for information leakage of the overall domain content of the DNS server. So currently available solutions, NSEC 3 was introduced in RFC 51 overall domain content of the DNS server. So currently available solutions, NSAC 3 was introduced in RFC 5155. All it says is instead of revealing the plain text owner name and next name, we are going to hash it and then we will provide the hashes so that it's not like the clear text enumeration of the zone file. But the problem with that, is there was a there was a talk Hat, I think, in 2018, where there were actually able to show that even if it's the hash, domains, they can be easily dumped and then if you can crack offline, there was like a success rate of 88% because the domain names are pretty standard format. So it was, again, not very effective solution and after that, there was RFC 4470 that actually introduced the concept of when minimally covering the NSEC records and the online signing what it does is it actually is showing the concept that we don't have to be truthful for every negative response What we can do is whatever Q-name is asked by the client And if it is not existent, we are just going to encapsulate and we're on, we're going to on the fly create a new NSIC record with the owner name and the next name that will actually fall a deal that will actually encapsulate the non-existent query name and then we'll respond with that insect record so with that they were to implement One was the insect three white lies and then the second one was black lies. I think most of the people are very familiar with black lies because a cloud layer and Amazon usually uses black lies to kind of like isolate the information that is being leaked. So for NSIC, N-section white lies is pretty standard. They say that we are just going to spin up the create the new N-section records with the fake hashes, which will be like the hash of the Q-name that is asked minus one and the hash of the QNAM that is asked plus 1. And that record"
  },
  {
    "startTime": "00:50:00",
    "text": "will be our new insectry record that we are going to sign online on the fly, and then we'll respond it back with that sign insect record. With the black lies, um, plus one. And that record will be our new insect three record that we are going to sign online on the fly, and then we'll respond it back with that sign insect record. With the black lies, they said that we are going to use the insect annex domain as a negative answer rather we are going to use a different negative response called no data And whatever Q name is asked, that does not exist on the server, we are just going to create a new insect type record for the Q name so that the Q name exists, but the type is NSEC. So anytime a non-examine domain is queried, we are just going to send it over a no data response. And then we will just sign that record. So if you're doing a zone walking on black lights enabled, server, all the responses you get is what you're creating for All the responses will be having that query name and then slash 0000 in front of it as the next name name Okay, quite some of the limitations for the white lies and black lies First of all, their online signing methods So the signing happens on the fly. That means the private needs to be residing on server that is actually sending back those replies. And the problem with that is those servers are internet accessible So if there is any kind of compromise to that server, the private key gets leaked and the whole zone is compromised. Again, generating N-6 signature on the fly is computationally expensive and indirectly makes the server vulnerable to the dog attacks. In fact, there was a very recent blog post on the Amazon Route 53 website where they actually address that problem that if we encounter a pattern of zone walking, we are going to throttle the data request to your endpoint, and that might result in the DNS quitting timing out. That was an indirect DOS or DOS attack on the server Okay, so the draft proposes the new solution called zone hopping. It's basically in high-"
  },
  {
    "startTime": "00:52:00",
    "text": "approach where we are trying to say that we don't need the authenticated denial of existence the response for the tuning names that we don't care about. So it's like for positive responses, we will have authenticated DNSSEC response like with the signed RRSI for every record but for the negative responses, we will just treat them as standard DNA which means like we will just have a standard DNS response without caring too much about the authenticated denial of existent protection So basically splitting the and it actually allows the use or allows the admin to split between the domains that they find critics and has to have an authenticated denial of existing protection versus the domains that are non-important sensitive private for which there will be no NCSEC records So something like that before zone hopping, it will be like a sequential chain of insect records But after zone walking, all you do is whatever domain domains, whatever two names you want to protect against DOE, you will only have insect records for those domains, and then delete the insect records for the domains that you do not want to get discovered by zone walk whatever two names you want to protect against DOE, you will only have ANSEC records for those domains and then delete the ENSEC records for the domain that you do not want to get discovered by the zone walking process This is just like we were doing the LDNS on the God godpeakept.com. So the before result is it will show off the domains. The after result will be, it will not show the domains that does not have insect records So it kind of like does not leak that information But for those domains that are still there but don't have an insect record, so what someone can actually query that domain if they know that domain exists and then the response would be like the proper validated response from the name server It's just like this this solution is intent to provide the spectrum of the solutions in"
  },
  {
    "startTime": "00:54:00",
    "text": "the current chain of solutions. And since this is a problem, is more closely related to standard DNS, it will all it will do is it will provide the integrity of the records by signing the pause responses but it will have same kind of limitations that standard DNA has for the negative responses And the last thing that I want to point out is it becomes more important to prevent the zone enumeration for IPV6 only or IPV6 transitions because the whole point of IPV6 is to one of the important points is to that it doesn't it is not discoverable easily by scanning but if there is a DNSic enabled server that hosts IPV6 addresses, then all someone has to do is just to dump the zone file and look for the quad A record and we'll know all the important IPs that don't domain is hosting on their DNS server. And then that can be a target list or hit list for the services to go after The one important thing I have to note here is the aggressive use of the aggressive use of DNS-evalid cache. So this, solution would not work if there is an aggressive negative cache implemented because of course if you have an NSIG from A to C, and if it gets cash, then all the domains between A to C will get bypassed because that is the response you're going to get back from the resolver if that's cached. But, well, solution has to be implemented with the traditional like the standard DNS negative responses That means the RFC 2308 that mentions that how negative caching of DNS queries should be done by matching the Q name and the Q type and the Q class depending on which of the negative response is getting returned So that, with that I think I should just there are a lot of questions so I can just end my talk and then we can start the comments and discussions Thank you very much"
  },
  {
    "startTime": "00:56:00",
    "text": "We have a nice queue of people that give feedback so and i know we're in a very nice group Dinesop Work Group, so just Joe Abilett so I put my hand up early to come up and say aggressive NSEC can caching, but you've already got that on this slide Unfortunately, I think this is not an if the resolve is using. It's more like a when these days So I like what you've, how the way you've thought around the problem, but I think in practice, what you've done is stop zone walking, but you've also kind of stop resolution of the names you actually care about So I think, you know, thinking around it and thinking putting a zero TTL on the NSEC is an idea, but TTLs that are that low and rarely rarely honored in resolvers So I think it's a nice idea but I don't think it would actually work So I would, you know, don't trust me on it. I would encourage you to actually try it and actually find out whether these concerns are real or not But I think you should be prepared that they might be Oh, yeah, thank you. This is the first time there's a very scratch draft. So I'm here all ears for the feedback and comments on what are the drawbacks for the solutions so that we can straighten them out and then see if that works. So thank you for the comment comment hi this is and rei that i see um Welcome to the IETF That said and I'm, I hate to do that to you since this is your first time presenting. This is horrible idea. And I said, this with the implementers had So aggressive use of the data sec is in, it's being deployed by the reservoirs. It's on by default And actually, I think you would, if you, like, the best"
  },
  {
    "startTime": "00:58:00",
    "text": "solution would be even just return Serfail instead to NSEC records, because that wouldn't break so many things. Sorry Well, let me finish one more thing about the deployment so the DNS deployment has a long tail so if we right now even if you convince all the in implementers to implement this it will take years and years to actually have them all fixed the aggressive use of the ANSEC So this is not going to work even if you convince the implementers And I'm saying that as a by now head of the development, we are not going to implement this. Okay Yeah, yeah, that's good feedback. We were actually, so there is no so we were actually thinking of server fail versus inside record, but that's the problem like to have a hybrid solution where the possible responses will be DNSC, but the negative responses can be actual standard DNA It's not supported right now in DNSX, so that's why we came up with if NSEC is all is required for a negative response then we are just going to bypass the whole zone and then just have a public NSIC with the zero TTL so that it does kind of like dos the whole domain Hi, Evan Hunt, ISC I'm going to make the same remark that I made when NSIC 5 was presented I believe that there is an error on the very first slide where zone walking is identified as a problem. Zone walking is not a problem The information that can be obtained by zone walking can be obtained other ways. Passive DNS is a thing. If your zone is online, you have to assume that every query name in the zone has already been made public So there's no attack that can be made against your organization with zone walking that could not be made against your organization without zone walking The reason we had to solve the problem of zone walking was"
  },
  {
    "startTime": "01:00:00",
    "text": "political. Nobody was willing to deploy DNSSEC without something like NSEC 3. So we had to invent NSEC 3 so that we could deploy DNSSEC. Now that the NSEC is deployed, we don't need to invent another solution It's been solved So it's not that this is a bad idea I'm not saying that it isn't. I haven't thought about it in great detail. I just think that it's kind of a waste of work group time to continue talking about solutions to a problem that isn't really a problem. Thank you Yeah, we considered that and I have a few slides that shows that passive DNS can result in, like, let me like, you cannot retrieve all the domain information from passive DNS, and there are a lot of limitations for passive DNS anyways. So, I don't know we did that study actually to compare the results and you can see that we create quite a lot of domains and then we found out that the overall passive DNA coverage for those domain was just 40%. Versus 100% from the zone walking Okay, and we've got one final comment in the queue and then Q. Meisel, MPIN. Evan as a factor said what I was already intending to say, but just to reiterate it and slightly clearer words, there is no such thing as a sensitive DNS name. The DNS is public, deal with it it Thank you for the comments. It is known fact that the is public, but again, when we did zone, walking on the domains that have DNS enabled, most of the time we found out and we encountered the DNS names that were public, but they shouldn't be public So I think even though everyone knows DNS is not sensitive, but I don't think so people who are implementing DNS like that it's getting leaked out Thanks, everyone"
  },
  {
    "startTime": "01:02:00",
    "text": "and thank you for it thank you especially to the presenter for being willing to get up in front of this room. It's intimidating But I think that's the end of our agenda for today and for IEA 120. Do you have anything to add? No, thank you all If you have additional comments, please post him on the mailing list for any presentation including the last one so we can help researchers also to understand the DNS and the problems in the DNS. Thank you all all"
  }
]
