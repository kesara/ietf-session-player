[
  {
    "startTime": "00:00:04",
    "text": "foreign do three of us have a blue dot beside our name and Kirsten has a blue and a pick Dot thank you well the don't just tells you what uh kind of function you have in here iatf class is obviously special yeah so there is a thing to think research group that I'm sharing that gives me a pink dot and there are a couple of working groups no actually the single one group right now that I'm sharing that gives me a blue dot in fact I can't hear casting oh Houston's Audible for me yeah I can hear Kirsten oh Jane oh James is that Glenn speaking we can hear you fine then oh that's better some reason I managed to mute the tab in the browser you look like you've been cycling now I'm going to the gym later it's not really cycling weather it's a bit wet so I would expect Greg to show up and I deal this stuff out as well"
  },
  {
    "startTime": "00:02:03",
    "text": "so the agenda today is essentially just going through the issues so do we have anything else we need to do I think I want to talk right jacks yeah don't talk about drugs Glenn is there any significant difference between base 09 and um of what was submitted um when you say what we submitted I'm not sure what you're referring to do you mean base 08 oh that is the one we submitted pardon me I'm just not reading the URL properly it's okay okay yeah I just put it there for convenience in case someone was hunting for it I always seem to have lost James yeah I'm looking the wrong window pardon me up don't mind me so let's wait one more minute for the absentees and then get going oh it looks like Greg here sends an email to the list saying that he won't be attending and uh brief comment on it just stating that he's now compliant to uh the last version not the current version of the draft foreign"
  },
  {
    "startTime": "00:04:01",
    "text": "oh I missed oddly I don't see that email from Dennis no me neither was it sent just to you James uh to me and to list um give it a minute yeah maybe the list is um struggling a bit I don't suppose any but other stuff are excellent oh got Greg's email now yep okay foreign get hooked up to audio foreign good morning hello all right good morning take it away take it away okay uh for the recording for later this is the Json cloth working group meeting for January 2023 uh I'm your host change with Tim and my co-chair uh since this is an official ITF meeting uh the note well applies here these went"
  },
  {
    "startTime": "00:06:00",
    "text": "well uh note taking will usually happen as it usually does I will get done later blue sheets are automatic uh there's only a handful of us so we don't need to worry about the chat too much that's our agenda uh much the same as last time just an update on I Rejects and going through the issues is there anything that anybody wants to bring up foreign foreign yes did you wanna Tim did you want to start with your update on I Rejects foreign foreign"
  },
  {
    "startTime": "00:08:17",
    "text": "foreign concerns for Jason schema's use of our regex to do with anchoring but you know I can't read his mind so um Let's ignore that for now well the the difference in the Json path excuse me in the JSO uh usage is that JSO already uses anchors um so they they would have to um Define how how anchors are used and since they essentially are tied to the ecmascript definition of regular Expressions uh the I think the the usefulness of iRig X for Json schema org is that um it provides a boundary of for for the gamut of functionality that you can expect to be interoperable so you you won't use it literally you just will will say this is the set of things that we expect to be um supported by by Jason schema org implementations so I don't think there is a way to to"
  },
  {
    "startTime": "00:10:01",
    "text": "make I regex Backward Compatible with the current situation where people just assume all of of ecmascript regular Expressions to be uh present yes our next step well there needs to be a clarification how you actually actually build the the ecmascript and and pcie uh versions of of the expressions from the Iraq exp so I will submit a PR uh for that in in the next few days um so sorry I didn't I intended to put this in as a working group last call comment on my own draft but never got around to uh doing that so this will need to be done before we finally send it off oh we are in law school yeah oh yeah we could complete the regular blast call with that one Rascal comment"
  },
  {
    "startTime": "00:12:00",
    "text": "uh from me uh and then we could hit the publish uh button and that were sooner or later bring us into ietf last call which is the the step after ad review yes Tim was that after the 10 after the type system was merged yeah good good okay yeah so there is one PR oops has this been merged now yeah good so there is one PR merge that it goes beyond digital nine and we we still have 13 issues uh one of which we probably can simply close but the other ones we we need to discuss um well okay 11 11 issues but we probably should start with the oldest first because these haven't got got a lot of attention uh recently and we should just decide whether we just toast them or do some work on them"
  },
  {
    "startTime": "00:14:08",
    "text": "foreign yes so my summary of this issue would be uh we we are copying the Json Syntax for um Unicode escapes and we note that JavaScript actually has added backslash you uh brace chord Point Breeze as an alternative syntax so you don't have to do the arithmetic for splitting up a non-bmp character into two surrogates and what remains from this issue as far as I can see it is whether we actually adopt this uh ecmascript syntax um in addition to the one that has uh provided by Json so the the the advantage of doing that of course is that it's much easier to to write those escapes the disadvantage is that this is an extension over the the way Json uh does uh escapes uh in strings and and that may be a surprise that may cause Surprises with implementers and users excuse me what's the number of the issue we are talking about 272. 272 okay"
  },
  {
    "startTime": "00:16:02",
    "text": "foreign opinion that we have a single opportunity now to make Json path slightly more usable uh but it's not something we have to do yeah I'm kind of on the fence but it does feel a bit like Innovation and a bit like bias towards JavaScript um slightly against it I would agree to I would agree to Glenn necessary most languages actually have the brace syntax now so JavaScript was actually late in in adopting that uh so I I think on on the language side it's not not a big innovation of course it is an innovation in the sense that we don't know how many um Json path implementations already do that foreign"
  },
  {
    "startTime": "00:18:24",
    "text": "foreign I'll just add that and make it an editorial wait a minute um can you uh open the issue so we don't stare at the slide but stay at the issue well I'm just uh so I'm still at 272 I'm not that fast I'm here and then I'm looking at the wrong thing there we go"
  },
  {
    "startTime": "00:20:01",
    "text": "sorry which one was up two seven two seven I just wanted to make sure that we all look at what what's now that's 310 can can you go through two seven two that bear with me yeah thank you I just want to make sure that we all look at what what we recorded in the issue before going to the next one so can you go to the end okay so since nobody is objecting I think we're done with this I mean somebody has to write the pl but uh that's pretty obvious two seven three you say whatever you answer here Crush spaces yeah so the issue was that the current grammar is is very liberal you can essentially put in a space everywhere except inside tokens like like strings or numbers and uh the question was do we want to"
  },
  {
    "startTime": "00:22:01",
    "text": "take away some of these opportunities uh to in certain spaces because I mean every single one of those is a potential interability issue you have to test all of those um in your implementation um but on the other hand it turns out that generally when when you try to remove one of them uh it turns out that that you really need lack of imagination to uh be sure that you actually can remove that so for instance if we look at the the change that that is on the uh page on on child longhand um of course you wouldn't put spaces uh within the the brackets as long as that Json path query is on a single line but if the query becomes uh complicated enough to actually write it up in multiple lines then breaking the line after the the opening bracket suddenly becomes the normal way of of doing this uh so I think it's really difficult to identify that we really want to get rid of so my my take care would be to not do it I I would not wearing my chair I would I would agree that we shouldn't get rid of uh what optional white space simply for the usability issue of of people from fumbling around trying to figure out how to write their queries and if it's big and complex enough they'll end up needing they'll want to put in uh White space in there to figure out how it works and by not having support for the spaces then that means implementations will have to do some"
  },
  {
    "startTime": "00:24:01",
    "text": "sort of pre-filter or um impact the user user experience so note to sound particularly good for our end users yeah I mean just just to add I think um we've got enough uh cases where we will have white space uh optional white space in the spec that influencers need to worry about it anyway once they've got a solution they can apply it willy-nilly it's more of an issue for testing now let's close it three ten so I just closed 273 just to make sure that we all agree on that yeah yes well on 310 I think that we have had a good discussion that essentially led to to what is now in dash or nine and I think the the particular issue raised"
  },
  {
    "startTime": "00:26:00",
    "text": "here is simply overtaken by uh events so I think we can simply close this foreign after this valuable discussion I think we can close it yes it's okay yeah I'm happy to go along with the um the drift I think we just need to document that the functions are non-optional functions in the spec are non-optional mandatory yeah is there a travel if you do have racial expressions in your implementation but yes I think we want to make sure that uh batteries are included and and we do have regular expressions hmm yeah yeah let me I'll let it comment cost has beaten me to it fine foreign"
  },
  {
    "startTime": "00:28:05",
    "text": "so can you point to the placeholder yeah maybe let me have a look it's gone 25. yeah the just above section 265 because then it says note that there is no deduplication of the node list well that can be discussed it says Ah that's my my comment yeah okay so did we discuss this and are we happy that the discussion has concluded I think so I mean we could always add it later as a you know a dedup function could be added quite easily oh I'm just seeing a bug in the data tracker a representation of the draft it doesn't identify a comments as such that that's uh very confusing I'm sorry um yeah but um I think the conclusion is to remove the editor's note so that means no deduplication occurs right correct correct okay yes I agree no we can't recover the issue because we still have to remove the editorial comment yeah"
  },
  {
    "startTime": "00:30:03",
    "text": "yeah I agree with Tim's comment 13 hours So when you say you are iron coding you mean percent encoding uh yes yes I agree here so it's fine foreign just put in a very brief comment and I can edit the attribution a little bit more for both foreign I think that's a very good question my take of the current draft is that the answer to this question doesn't make a difference so if you implement this with shortcutting you get exactly the same results that you get when implementing without shortcutting uh but I'd like us to to uh be be very sure about that before we close this issue yeah my concern was uh IF function extensions are added later that has side"
  },
  {
    "startTime": "00:32:00",
    "text": "effects then shot circuiting would um you know make a difference so we should add text that explicitly to side effects sorry could you say it again please the text that explicitly excludes side effects uh yes I also see functions as pure functions uh cannot Having side effects I'm I'm wondering about uh talking about side effects of functions I I cannot see how functions are able to be to do do side effects well if if they do we pardon yeah I mean you could have a sound effect to memorize a result um to you know be entitled an implementation detail actually that wouldn't wouldn't affect the semantics but yeah logging logging is an example stretch foreign if you go down you can see my proposed resolution oh sorry I pressed the wrong button yeah but I closed it and we still have to do this what what the of resolution actually says"
  },
  {
    "startTime": "00:34:02",
    "text": "I like the um I like the philosophy of um and being pure functions but I'm just wondering if we're going to limit ourselves in an unexpected way there well the problem is if you do not limit this uh then you would actually have a full discussion of uh sequence of evaluation and I'm not sure that we want that foreign it might be a slightly non-trivial editorial task to express that okay how about this slightly strange scenario I suppose there was a function implementation which um uh just crashed uh you know memory whatever uh occasionally and someone wanted to code a guard on a function on a predicate in a filter expression to avoid that happening and uh you know and because we reordered the um the uh evaluation because an implementation reordered the evaluation it crashed anyway didn't check the guard first um you know so don't question would be my my recommendation yeah I know but yeah I suppose you know it wasn't stupid function does that and then uh listen to it implements who"
  },
  {
    "startTime": "00:36:01",
    "text": "wants to get around that yeah the implementer can just fix it do you mean a user of of the yeah mechanism wants to to put in a fix that is specific to that implementation uh well it's not specification but it would um it would help it would get around the the problem with that particular implementation so you know they're up against it they've got an issue in production this thing is crept out of the woodwork or they can't upgrade the jsonpath implementation because the fix isn't available um and they put a guard in and it works some of the time and it works you know not all the time we're given that given that the fix that's actually implementation specific uh the implementation could still provide a sequencing model and we don't have to put it in the spec s yeah I just wondered if you could do something soft like say implementations may short circuit evaluation of um oh certainly yes so the the this is one of those places where the implementation is uh free to choose an implementation strategy uh one of which may be short circuiting and the other one may not be short circuiting um and if an implementation is worried about crashing all the time then maybe they better Implement short circuiting but I don't think we want to make that correct at the moment in the spec it's not clear"
  },
  {
    "startTime": "00:38:02",
    "text": "that short circuiting is a an option for implementations okay yeah so let's add text I I think I would make that a should make water should the the function side effects business um rather than a must because um I'm just a bit hesitant about ruling out use cases we haven't thought of I could go with I could go with must yeah the the problem with uh uh should is that now you suddenly have a wide open hole uh for for new interoperability issues and uh and I'm pretty sure that we don't want those yeah I guess the the thing is that I um uh it's it's not the side effects that concerned me it's that the result of the function should be it should be a pure function in terms of its results you know the implementation can have side effects like memorization and that's fine okay thank you that's true yeah yeah so the person's words there are quite helpful ug Beyond memorization or logging"
  },
  {
    "startTime": "00:40:01",
    "text": "so it seems to be a logical consequence if uh implementation of function may have side effects so it may be left to the implementation if they do short circuit or not I agree to the idea to leave it to the implementation I guess yeah can we can we make this issue do two things to emphasize that function should be pure and also to say the implementations May short circuit evaluation that's what the text currently says yes I'm sorry I'm looking at James's screen yeah that's great again same sorry the line's bad hmm well your microphone is kind of in a blanket uh so this is not bad audio uh on the transmission path but I think you need to to reposition your microphone no it's perfect except that it's modeled"
  },
  {
    "startTime": "00:42:04",
    "text": "hmm yep foreign foreign the only thing we currently can compute in Json path is a Boolean value so this essentially uh argues for introducing a way to actually use this Boolean value in in further computation for instance in a comparison and um I think that that would be something that that is uh that users might might uh um actually try to use because they would be able to use this in um programming languages but it doesn't actually add"
  },
  {
    "startTime": "00:44:00",
    "text": "functionality so I don't think we need to do this and of course the nice thing is that it's currently not allowed so it's much easier to add later than changing the semantics of something that is allowed I would agree with that but um issue 345 might impinge on that decision that's the first one that's good with that one first then thank you yeah so this was uh behavior that we added recently because the match and search functions needed a comparison to true or similar to be usable it wasn't possible to just say question mark match um in the filter expression so we introduced the optional Boolean to to deal with that thank you Karsten but the existence test text still talks about um it still has the old text basically so an optional Boolean of true uh sorry an optional Boolean return value of false would pass an existence test which is just what you don't want foreign so the link with the previous issue that we were discussing is whether predicates can interoperate with uh Json Boolean values yeah to me this seems to be an editorial issue we forgot to actually change the text there and it's pretty clear what we want to do there so let's do it"
  },
  {
    "startTime": "00:46:01",
    "text": "yeah I'm just concerned concerned about referential transparency if if you have enough if you have a match that returns a true value how is that different from [Music] any other true value for instance uh dollar dot Foo with a Boolean value true in an existence test or dollar dot Foo with with value false more importantly in the existence test well we would make it different so that would be the answer to that question yeah but you see I mean it does break referential transparency foreign exclamation marks so you make it explicit to access the value would this be a solution not sure what you're proposing there Stefan mm-hmm [Music] well the point of the the change was to make the the example uh actually work that has a uh it's not in this uh uh issue now you're at 335 again maybe I misunderstand uh the topic of this issue yeah so there is a new example in digital nine that that has a match uh in the position of an existence text image that is not uh extended to be a comparison but just uh using the the match function and apparently we we"
  },
  {
    "startTime": "00:48:02",
    "text": "missed uh I missed uh putting in the text there that that having a function that returns a Boolean or an optional Boolean um is allowed in this specific position and has this and that semantics and my suggested resolution would be to actually put in the text so okay just playing that back in different words he's saying that a Boolean false value returned from a function declared to a return type of optional Boolean behaves differently than a Boolean false value returned or you know coming back from a path yeah except that you we never look at the value we only look at existence foreign case yes yeah so we're special casing well yeah we have special casing in the sense that a function that has a Boolean return signature actually is interpreted in a different way than a value that we cannot get because we only look at the existence of the way we're not the value of the value uh so yes it's a special case but it's a well protected uh special case you cannot really confuse that so you could put in an identity function just for for for fun um that then suddenly allows you to to put uh uh value lookups into the existence test mechanism but I don't think we need that right I'm just a little bit concerned about the concrete representation of uh Boolean"
  },
  {
    "startTime": "00:50:04",
    "text": "foreign see we've got the representation of Boolean is value true or value false so the instances of value true and value false and the concrete representation of value true is the Json value true so you know yeah so you you actually have to implement this right but this is not that surprising yeah okay let's let's add the clarification text in the um existence um test section so make sure make it clear that this is a special case well it's certainly not surprising once we have fixed the text we have to fix the text to make sure it's not a surprise it could be surprising to somebody who never read the spec yeah so let's make sure that uh the the text actually takes away that surprise yeah so why is your screen not updating James oops foreign page [Music] thank you"
  },
  {
    "startTime": "00:52:09",
    "text": "I think three four five is okay with um Carson's comments so we can go back to the previous one now three three five and I think now that we're in the realm of special cases for optional Boolean we're okay to um go the way we were going on this one which I think was to close it foreign I don't think we actually have to put in text can you scroll down a little bit well you should see some proposed resolution text uh that's weird yeah so that is my proposed to resolution to this I think Craig will have a problem with that but I don't no it's okay"
  },
  {
    "startTime": "00:54:02",
    "text": "yeah there are two elements to this discussion one is that the the grammar implicitly allows nested expressions and we probably should be explicit about that and the other one is do we get to reference uh the the equivalent of the ad design in the higher enclosing expressions and to me it seems the discussion uh indicated this probably would be a nice feature to have but it's also not that easy to come up with an example that actually needs that yes it was a surprise for me to uh to stumble about the fact that there seems to be a scope a scoping problem with with the head sign with with a nested filter expressions and um so this was a very spontaneous discussion I enjoyed it a lot um I see uh that it's quite important to support nested filters I think we all agree about this fact to support nested filters but uh yesterday we learned or I learned that there are some deficiencies exactly because of the scoping problem which possible to reference values at the outermost level the the"
  },
  {
    "startTime": "00:56:02",
    "text": "dollar scope but not good any value in the parent level or or upper level but I tend to agree to clean who says that uh in in practice it's only a few occasions we we don't hear a lot about the use of nested filters so um I would like to uh to let focus on this problem but it's quite late to the party we we should defer this for the future so another point is what shall we do with with empty filter Expressions so when you have a bracket a question mark and and the closing bracket immediately don't be allowed uh is this it it might return false as a uh it's in a syntax error so syntax error okay so maybe we we write this somewhere into the spec would this be uh necessary what uh two mentioned empty filter Expressions I think that's an edge case and it's covered by the ABN F anyway there are very few programming languages that actually allow empty Expressions so I think the the surprise is that we don't either is not going to be very"
  },
  {
    "startTime": "00:58:01",
    "text": "large okay so uh I think we don't have anything to do and wait for users complaining about the uh scoping uh problem to actually mention that nested filter expressions are allowed I mean this this is It's always weird to to mention uh something that that already should be obvious from the text but sometimes also so you have to weigh the the confusion of explicitly mentioning it with the confusion of not mentioning at all but I think it turns out that it's a good thing to to say this and we could uh actually um use this mention to to also mention that add is only available uh for uh innermost only okay yeah I think this would be fine yeah I might approach that editorially in a slightly different way but I agree with the sentiment yes"
  },
  {
    "startTime": "01:00:07",
    "text": "foreign so my proposed resolution would be to point out that on all these types are useful as return types foreign well it's a weird syntax error because you actually have to register something that is not useful uh to be able to make it error so that's maybe something the designated expert should point out hello the registration you are making is not useful we could get rid of the absent type um because it is useless well it sure helps keep the the hierarchy clean okay if if it's possible to skip that absent uh type I will would be in favor of exactly doing this yes Clinton says we don't need it so let's skip it"
  },
  {
    "startTime": "01:02:02",
    "text": "as a return as a result type return type foreign useful to have an argument type of absent so yes we could remove that and just to point out that absent isn't the same as void and C because absent actually has an instance has the instance of nothing so a function will return tab absent would always return the value nothing we unfortunately do not have an undefined in in in in Json so it's uh ever circling problem but we need to deal with that yeah the problem with and you find is that it is used for multiple usages and and we have narrowed down what nothing actually means yeah I read this yes um so does anyone think we should keep the absent type yes Epson type is not a concrete type but it's an abstract type right yes the same is nothing and no nothing is a value nothing excuse me is an instance nothing is an instance absence Guardian I was just going to say absence is a concrete type absent is not a concrete type no it's a Concrete type absence is a concrete type okay a non-existing member for instance there's no question I mean nothing exists [Laughter]"
  },
  {
    "startTime": "01:04:01",
    "text": "okay yeah so the the the house of cards will not fall down if we remove the absent card I still prefer the the type system to include this source of people who are used to to having a type just for that uh feel at home but we can also remove it yeah we can make the type system more lean I I would uh prefer that yes yeah I mean I yeah I mean when I added that I was thinking of adding uh optional values uh as well values plural and couldn't see a point the point in doing that so it didn't do it but it didn't occur to me to get rid of absent at the time and I think we should foreign says we need it we we leave it but if we don't need it uh personally I think we don't need it and we can get rid of it um Carson's got hesitations because of the type system okay so my proposed resolution is now to remove the absent type [Laughter]"
  },
  {
    "startTime": "01:06:10",
    "text": "no that's why it's marked as a task but clearly we do have the issue that that uh I think Stefan uh pointed out in that email uh message so we we really have to do this yeah sorry I I I this was merely a question because I didn't honor stood so I should have better raise an issue but you did okay uh foreign also do it parallel to to you and uh this would be a good uh valuable thing yes is there any any tooling available to explore a b and F grammars yeah well there are lots of tools um I I was thinking of maybe using the the tooling that I have for ABN F to write a various uh simple tool that allows us to dump a set of examples uh both positive and negative examples um into the ABF and see if it's properly accepted or rejected so that that will be a few lines of code um and I I could write that word or we could figure out how to use the existing avnf tools to do that I don't think about uh finding uh errors"
  },
  {
    "startTime": "01:08:02",
    "text": "primarily but uh maybe to some renaming maybe use some shorter names or things like that yeah there is a bit of fat in the ABN F at the moment so we can certainly compress it thank you yeah I would prefer to clarify it instead of compressing it so the problem really is that we we have everything twice because we have uh or three times because we have a normalized variant and a singular uh variant and I think we would be better off if we could somehow consolidate uh that by I I don't have a really good uh proposal how to do that foreign yeah the example I was thinking of was when we get relation X expression equals comp expression uh that just seems to be a a synonym and we should print from pick one or the other and maybe other cases where that's crept in uh I was stumbling yesterday about a child's longhand uh child segment and child's longhand and uh dot white card shorthand and the same at the descendant segment this is a descendant segment and descendant child this is more logical more more more uh clear and I was thinking about how to uh"
  },
  {
    "startTime": "01:10:01",
    "text": "rename the child segment uh similar but I had not uh good solution I would try to think about this a little longer this is what I mean about uh going through the ABN f one more and to support just to say a few of us have got some ideas for improvement but it's it's okay as it is this uh only some Council we've lost your audio one two three can you hear me so my fault I'd muted my tab again somehow I don't know what I'm doing now I'm doing that yeah so um we did the usual thing we we made the changes that are needed but we need to reflector step but let's do that uh reflector step and I think it's probably best if we do this in small uh steps so so each of us will propose some improvement instead of having a monster PR that changes everything and then needs to merge with another monster PR that also changes everything but slightly differently okay yeah good can we have a quick look at the mail from Greg that arrived"
  },
  {
    "startTime": "01:12:01",
    "text": "well um the comments on three four five do you mean yes yeah it's interesting he says what is optional Boolean but he also claims to have implemented it no he has implemented digital age yeah which included optional Boolean it did yeah okay yeah the in the return value of match and search is optional optional Boolean which Greg claims to implemented but I think he's missed that little late changing late breaking change right foreign making changes here yeah so I think we we can just disregard this at the moment okay"
  },
  {
    "startTime": "01:14:04",
    "text": "I think so yeah to be honest I I still haven't done a complete read through because I felt there was too much churn so um but that would be editorial changes I suspect unless I spotted a showstopper foreign State Greg's Integrity here no optional protein is not in Detroit so uh yeah but we we should ask him to implement digital nine and uh then we we will know whether that works for him oh yeah nine thank you yeah um do we need to discuss when we have the next interim yes that's the end of March I would expect expect us to have an interim about four weeks from now okay so that would be these approximately the seventh of February so week six yes okay oh I'll do my usual put a doodle poll out"
  },
  {
    "startTime": "01:16:08",
    "text": "foreign okay have a good night's sleep all right yeah bye"
  }
]
