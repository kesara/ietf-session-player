[
  {
    "startTime": "00:00:14",
    "text": "thank you [Music] okay good morning everyone or whatever time it is in your in your area uh so welcome to the first interim Mimi session uh we're right at the start time for today by my clock so I think we can uh although I think we're still waiting for at least one of our presenters to join um I guess while we're so let's allow a little more time for people to join the call uh in the meantime we do still need a note taker for today's uh session so if we have any volunteers we would greatly appreciate um having somebody take notes there we go thank you Conrad very much appreciated okay I'm gonna get started with the chair slides um so uh"
  },
  {
    "startTime": "00:02:00",
    "text": "like I said uh this is the first uh maybe working group interim uh so first we ask everybody to make to take note of the note well um uh and uh you aware of all the ITF policies on intellectual property and how we run these meetings I guess the mass policy has moved since we're all virtual today um and with all that said uh our agenda for today is to wrap up Erica's scoreless presentation from back at ietf 116 on transport requirements uh and what's not on the slide late breaking development is we also have a a deck from Raphael Robert and Conrad uh discussing transport versus delivery service uh all right so are there any other uh proposed changes to the agenda or objections thus far [Music] all right sounds like we're good uh so with that I think we can get started with uh ecker's deck howdy are we so I think we we're saying start from side here are the next one Eric yeah I think let's let's just I think do here maybe um I'm also trying to page in where we were the last the last meeting um um also I guess since we don't have um uh so you know I can't see people in front of me I can just seriously might see the bike line damage can you just cut me off or whatever when you when like I think we should do it with the last time where people want to talk they should just get to the line and talk and and you should just like make a face of your thing like when I stopped talking and we and I um because I think you know"
  },
  {
    "startTime": "00:04:01",
    "text": "the purposes to see if the conversation now for me like just yeah all the time um so um let's go back to where we were um I think you know um you know people have used um these investigating systems obviously noticed that there's a bunch of different modalities right and so you know SMS for instance if I have your coordinates I have your UNCG or number I can just send you messages and they just show up on your on your system um um there are other systems where um you know um especially those that had presence built in where you actually can't really do anything into the airside consents where you can basically send some sort of um you know you can send some sort of message that says hey um you know uh I'd like to be part of your network and and as I said back to like smbp reality see residence information their president seems to be no longer uh to regret um and um and then you can't send a message at all and the president's message typically only as allowed to have some very narrow information if any um you know maybe it says like like maybe it's stereotyped or maybe I mean it simply said I mean you could like have one line um um uh um or whatever um um and then sort of and obviously um you know the first category we know produces spam um we know people um you know having ability to send messages means plam um and um in the last category we also know um is not is not a model Everyone likes um um and um there's sort of intermediate set of categories I think um this sort of um to um uh to uh the receiver looks like the third category but the sender um looks like the first um where um you can send messages but they're somehow quarantined until side accepts um you know uh that your your your membership request um uh related to this um I should observe um and I think this is also really relevant um in jdr's uh um uh proposal um is there's a similar set of questions around group membership Edition so um most of this is not familiar with once you're sort of like adjacent to somebody you add them to groups without the permission um but I think Jr suggested that maybe that's not what we want to have all the time"
  },
  {
    "startTime": "00:06:01",
    "text": "um so um I'm sorry I I don't have my own slides in front of me so um I think um we have a next three next slide that is relevant to this Tim or is this off topic okay good let's go back then um so I think like so yeah if you can go back um yeah so I think I think you know um there's a bunch of discussion last time about trying to balance spam um uh versus um uh uh ease of use um so I um and I think these I heard of these one suggestion that basically support all these modes um um I think that the the probably most relevant question is What mechanisms we need to build in the MiMi in order to support the modes that we need to support and so if all you wanted was to be able to send messages immediately then you can send mechanism but if you um if you uh if you do if you have to support a consent mechanism then you obviously need both one and then maybe you could still a lot of people's investors immediately but um you may but then if you allow that maybe you need other anti-spam mechanisms um other than just like consent flows um so I think like you know um uh I I think what we're we're back in Oklahoma is trying to get some sense of what people think is mandatory here um and in particular with mandatory um you know in existing systems and which which modes we need to actually continue to support um so I think that's probably um The Cue for people to get in queue if they want to yeah please feel free to step up to to join the Q and ask questions or assert your position even more even better huh oh oh P there we go you're gonna win the queue right Tim yeah go ahead Pete willing to raise their hand it seems like we've got to support all of these mechanisms an SMS type mechanism for the first one seems"
  },
  {
    "startTime": "00:08:00",
    "text": "utterly necessary and there are systems that will not stand for other than mode two mode three sort of seems like it falls out of mode too and some systems are going to want to introduce a you know a local permission mechanism to say Bob can say what he wants to do which one of these three I don't see any way out of doing a permissions mechanism Pete sorry you said you don't um you think that some systems do one and have to do one or some systems do three and have to do three make sure I'm on my claim was that some systems um uh have one and need to do one yeah I I so my opinion on this is that some systems have to do one and the set of requirements that we have are mutually incompatible with doing one and that those systems can go you know go and fix their systems because they they're basically broken in a bunch of other ways and that you know like they basically don't do a modern IM system right let's do something else if you don't mind uh row and I just talking to each other for a moment here I I systems which might say for instance um we want the ability to anybody who is in our Enclave um you know if you know the identifier and you've logged into our Enclave then"
  },
  {
    "startTime": "00:10:00",
    "text": "you get to send messages immediately that in effect becomes sort of a quarantine system if you are able to join up with us and I don't see that that's a bad thing to support um yeah I I think protocol why is it may end up simply being um well you've gotta you know basically do a system-wide permission then and everybody's got to give that permission up front um but I think you know I think it may just um Decay into the other cases yeah I I think that the the case that you brought up I think that's a situation where Bob has already pre-consented to talk to a group of people thank you and it's not you know Alice who Bob hasn't you know doesn't know from Adam can send a message to Bob immediately I think that those are different those are different cases and we need to treat them differently and I don't think we need to support one I think we need to support two and three and I think we need support three in the case where that consent has come ahead of time the points I was going to make on this is the con we're not Implement one um effectively on the receiving Side by two and three that um if you have an implementation that chooses um to automatically accept um the inbound stuff then that's fine however the actual protocol still has that concept of doing a handshake and it could be an entire um gatekeeper or third party who decides my iMessage and WhatsApp to you today that they just always accept immediately but that's fine it doesn't mean that the protocol needs to special case it as a special mode so I think that's absolutely fine to do"
  },
  {
    "startTime": "00:12:02",
    "text": "two you get three then as a subset of two and then one is a you know kind of special case if the clients or the implementation chooses to Auto accept so I think what Matthew is saying is Right mechanically um but I wonder if it's right requirements wise and what I mean by that is that um my impression is that the consent flow is a major part of spam suppression in a lot of systems and um and um that the question is do we need to provide stronger anti-spam mechanisms in a system um to make it viable in order to have a you know a fire and forget YOLO mode like us like SMS has um okay could we get away with weaker spam systems if everyone has to consent first and I just don't really answer that question but if that's that that's so I think you're right from a perspective it's just a narrow piece but that basis makes it doesn't make it take on a whole new pile of work in order to do it I just don't know um um yeah that's why that's why with the question I was trying to ask out one I think one question to be nice to know would be like like do we have an inventory of what systems do what um so I was like thinking about this like iMessage seems to do seems to do um one obviously um uh um my impression is signal does one um um uh I'm not sure about I'm trying to remember what I try to watch something they also do one um um um um at least or at least it seems like some of them do things where you can just send like at least you can send an arbitrary message at least once like when you ask for like when you're after the rest of the joining so I I guess maybe maybe I'm just volunteering to do this work myself but it seems like maybe we should go and like make an inventory of what people actually do um in case in case we're missing a case um or in case we discover as I said that we really do need strong empty space suppression in this sort of fire and forget mode"
  },
  {
    "startTime": "00:14:04",
    "text": "yeah I think I'm next um I think the inventory would be useful um I guess one thing to think about though is my impression is that some of the systems today do one because their objective is to like maximize the network effect within their own system right so like if any of if your WhatsApp and any user can message any other user like this is actually good for you for growing the the network right whereas you might have the opposite preference if you're not actually that interested in interrupting with other systems and therefore one becomes much less it matters much less to you in an in an interrupt case so I mean I think I I think it I think what people have said thus far is correct that like you're going to end up with some mode where you need both one and two but I just think we need to be a little careful about saying like well this is how all the systems work today and so that that is what drives the requirement because I suspect um the motivation for how they work today isn't necessarily the same in an interop World versus a non-interop world um so it occurred to me uh as you were speaking Eric that uh so Twitter DMS for instance Twitter direct messages that is they have a quarantine mechanism whereby like if you get uh DM from somebody you've never spoken to before they're put in like a special area of UI and you have to like consent to receive them first um but the Nuance I see between that setting and say like signal or iMessage is that um like on a service like Twitter I can go look up any user by like searching for them in the you know on the website and then I get the handle at which to send the messages whereas something like iMessage or Whatsapp I have to figure out like what is the number or what is the um the identifier that they're using"
  },
  {
    "startTime": "00:16:01",
    "text": "for this right so the point being that maybe the quarantine mechanisms for receiving messages are more valuable in the context of a service where there's some like public searchable index of all the users who are on there um not that like getting somebody's phone number is necessarily an incredibly High barrier um but there's a difference excuse me there's a Nuance there that's worth considering I think I'm next um so yeah I first I would be in favor of supporting designing something that allows implementing all three modes I think there are good reasons in different cases for each one of these modes to Matthew's suggestion of simplifying by saying three a special case of three is one where you have automatic consent I like the idea of simplifying that uh that way I would just say if if we go with that approach then we should you know consent has to be able to we have to be able to give consent however we Implement giving consent should be also possible to do that non you know when you're offline in a sense the consension Mandate Bob actually doing something actively online otherwise kind of breaks down again when we try and get one as a default you want to be able to start messaging people non-interactively right when they're not even online so that's just something to keep in mind if we go with that approach foreign go ahead yeah um so I think the only service that that does this without any form of"
  },
  {
    "startTime": "00:18:00",
    "text": "consent is Apple uh I think everybody else uses presence of you know of a number and a contact an address book or you know any uh any of a number of other things as as a form of consent um and but I think Apple's the only one that actually has oh like you have an out you have a phone number through Apple therefore we can set you know that's our form of consent um and if you know if somebody has evidence to the contrary I'd be really interested to hear to hear that so to me I'm in the fundamental question is how is this affecting interoperability right um certainly you have to be able to recognize the status of a message that you sent to somebody and that it may not be delivered yet so that to me is you know a critical interoperability piece but you know in terms of these three you know I I which one you know would the resulting work say You must support or which one you know would the resulting work say You must not support um none of them seem like a candidate for you must support um but there may be one for must not or there may be you know one uh that is based entirely of security right so the real question is which one would be considered insecure and vulnerable to protocol attacks or flooding and things like that and you know that seems to be me only one but if you're trying to work with interoperability systems that already that you you can't easily change their existing implementation then really to me the only question is how do you recognize the status of something that you sent that hasn't been delivered yet the point that I think Matthew made and"
  },
  {
    "startTime": "00:20:00",
    "text": "also drum made in on um is you know what are the protocol implications here um uh so I think one thing that um has been sort of floated around is the implications of both Discovery and um and uh um keep package access so um in particular um an important difference between two and three is am I allowed to access your key package priority consenting um and um this of course ties into questions about key factors you've got exhaustion um and then things like that and similarly um if we have if we're playing if we're playing Implement Discovery then there's also then this question of Discovery also ties into consent um uh if you think that if you think it's not this is possible discover somebody's um you know um system independent identifier based in the system specific identifier um and um you know if you think about something like um uh now I'm trying to remember that the spin right where consent uh where consent and Discovery all jumbled up together right um I don't think that's what you want but I just like um I think that that what you know like it is very tempting to kind of be like we can not take a position I need this stuff and just kind of like Implement like if people want to accept mechanism and call today but um um but but that has Downstream effects um as I say um um in the case of um Auto consent like Auto offline consent like like you're always suggesting that it means the key packages have to be available um prior um you know um potentially at some level um that doesn't involve these are consent um um um and especially and especially um if you want to allow people to send messages or quarantine to keep actually part of consent um so um sorry the um rather the um dwells you're all horny veterans Point hasn't discovered more than you keep talking about um but so I just think like um and I think like I think it's probably fine to like have key packages available basically without any kind of consent and I think Rowan's probably gonna have to say that um because I think we just like have a default one don't worry about exhaustion but um I'm just saying like me we have to decide that's okay uh if we're gonna allow if we're gonna if we're gonna allow people to send messages prior to consent"
  },
  {
    "startTime": "00:22:01",
    "text": "um I just just one more thing I think I think I am hearing that like we need to that people think we need to support at least two and three um and it's not clear to me that there's any material different and given given the certain points Matthew made about um you know uh I think it was Matthew about uh you know systems um uh or unsubscribed lawsuit was um about you know some systems are so opt-in by being part of the system um as well um then maybe like one distrocities to drop out of two so maybe I think I think maybe the answer to all this is like no we're not is um you know trying to sum it up is well we're gonna assume discovery's out of bands so we don't we're not doing spin um at least for now um um so Auto consent so so we don't have consent for Discovery um We're not gonna get key package exhaustion so we'll get three against the two works and then we end up wanting two and then three and two three and one or two cases of two um where you know three one is two without one is two without a consent and three is two with like discarding any messages sent prior to like sent prior to um to consent so maybe that is about the answer and then as I say I think that does mean and and then maybe that lets you because for the points of Rome was making lets you kind of Kick the spam can down the road a little bit by saying well you know if you're a foolish enough to set up a system that like is configured in way one then you're gonna think also spam because we don't have yet foreign thanks yeah that that sounds right in terms of the summary um just responding to Rowan and I know Rowan you and I have already disagreed about this in the past but I can't remember what the resolution was um WhatsApp oh is I think supports one you don't have to be in anybody's contact list um to send a WhatsApp message and you see the you see the first message before you can block okay I I don't think that's right but that's an easy question that's an easy question for us to find the answer to I mean tell me how to stop getting the people WhatsApp messaging me you want me to invest in their cryptocurrency uh"
  },
  {
    "startTime": "00:24:00",
    "text": "investment vehicle Premier address book take your phone number out of their address books that's how dear God okay sorry did I sorry it didn't have a nicer answer for you but I mean that but what I'm saying is like that's not us that's not a solution right like I mean if they harvested my phone number from some place then effectively it's the same as one it it's still conceptually different from like basically you clicked you know you clicked on something when you got WhatsApp that said that you consented to you know people who had your number in their in their address book um whereas with apple you don't have any choice at all um and uh and that might change you know with with the dma and it means that it has to be it might be that it has to be a WhatsApp user that has that in your phone number and not a user from some other system right which is also different okay sorry can you hear me yes go ahead Conrad sorry just for the protocol Edgar just suggested that we have like consensus more or less on options two and three with what potentially enabling option one through uh two and three uh just for the protocol uh should I write that down that way and we move on sounds like rough consensus nobody's jumping into the queue to object so yes I think that's the uh I think that's the resolution excellent record suggestion um but I just want to follow the sentence in the chat which is um that um uh draft Rosenberg transport um has a separate mechanism for consenting to"
  },
  {
    "startTime": "00:26:02",
    "text": "um sentient consenting to membership in groups namely I can add you a group and you've got to be able to agree to that um and I don't I don't think we need that um so someone thinks we need that we should speak up um because that would be that would be I mean not this difficult necessarily but several protocol mechanism and so I think you know the um uh the the uh you know the model I have in mind is like once you're in my effectively my contact list I can add you to any group I want um um and if someone thinks we need a separate mechanism for that like they should speak up because like it's lie down oh [Music] okay Eric should we move on to okay yeah next slide please I guess right so there's there's been a bunch of back and forth in this in several venues um about like the sort of uh modalities of of or supporting and and the fact about terminology if um if people have read um Travis's terminology document um um so at least conceptually speaking it seems to me that there are three separate like um modes of operation these systems have there's like one-to-one messages where like you and I or each other they're like um I think um we've been trying this out with Colin but ad hoc groups is like one possibility um um as I say Travis has any suggestions um where we're like these are messages that are like one-to-one messages but they have more than one person they're on the two people on them right um and what I mean by that is they are defined by the by the contents of the group and so you cannot add a new person to the group without changing effectively the group um and so like you know like iMessage has this um um so there's like slack um um and then there's like what's called and there's people call like channels or rooms or named groups right um where um basically the contest of a group of the contest group and flux and people can join can get Adam be joined uh"
  },
  {
    "startTime": "00:28:01",
    "text": "um these obviously um have some overlap conceptually um and Richard Barnes and Alyssa did some nice surveys like what systems did and um um and I worked and it was kind of a mess um um so um I think you know I guess um you know I think there's any sort of the terminology question which is what terminology should we call these things um um and B um you know would you be less important and um B what we need to support conceptually um in terms of the system um and I think I think if I remember correctly Alyssa and um Richard had proposed that we should only support like basically uh effectively one-to-one messages um and um and whether I'm calling here names groups um um we should not try to support groups because they were hard to like actually make any sense of um uh um yet another question by the way is how we think things ought to behave um for um when there's a symmetry in terms of the group membership for one even one-to-one messages and what I mean by that is you know um is say we have a case uh where um you know uh where I I initiate a message to you and like you know we we are both on messages A and B and uh you know and and I haven't and I have a message and I have and I have like an AAA call um or an AP call or from my 80 or B and then you want to do your aim might be like what happens or your BMI a um and the same thing is true with these name groups um where basically you have the same group participants and should like is apparently um like appear with one thing or two things um like I said for group her name groups on that was weird because her name groups is like quite common to have two groups exactly participants but for anything like we've only one-to-one group where it's defined by the participants it's weird every situation where um you know where you and I are the two participants and yet we have two different groups two different like contacts depending on on who initiated the association are you in the queue I think or you're going to be so I don't have much more to say about this but it sounds like we need to like come down our net yeah I don't think I hit the Q button but sure ad hoc join the queue uh"
  },
  {
    "startTime": "00:30:03",
    "text": " verbally join the queue um yeah so just a recap what I heard um mentioned also and I did a brief kind of ad hoc survey of whatever we had installed on our phone so it covered like iMessage and slack and WhatsApp and a few others um and tested a you know this uh standard set of things you know what happens if I join and leave what happens if I try and set up a second group dm with the same set of people and on basically none of those questions was there any consistent Behavior so I think that's kind of what led us to be uh disinclined to try and address this group DM case uh in in me because there doesn't seem to be any coherence model of it across the different Messengers I mean ideally we I think we could get to one basic primitive here you know a a room of some sort um with one-to-one and maybe some sort of RPM contract as a specialization with that my understanding and the folks who are more experienced in this Dimension should um correct me here but my understanding is that's how it's how things are implemented in at least some messaging systems um that the the basic construct is a group construct and then it gets specialized when you need things like when you can select one-to-ones uh are established as a a two-member uh group thing um and you just have some unique disenforcement that means that if you try to create two of these then you can't do that um so my inclination review is to like Pare down the number of modalities just hopefully one um maybe maybe groups plus one to one but but definitely not trying to do this group DM case um yeah I fully agree with what uh Richard just said and I'm wondering to what extent we actually need to look"
  },
  {
    "startTime": "00:32:01",
    "text": "into this further because um that's what we have with MLS now where essentially everything is a group and that can be specialized in in one to one or in any other configuration you want and that was informed by what Messengers did at the time so it was not Greenfield project so um I'm wondering if it's not good enough to agree that we have this abstract concept of a group that has a clear identifier like some sort of uuid that has a clear set of of members whether or not they can join or leave um is a detail that comes on top of that concept but the underlying thing is always the same that would be my proposal here to get it started and if later on we feel that this is not good enough then we can always try to add something to it Jonathan go ahead okay not sure if Jonathan's having AV problems perhaps we should move on to Rowan then hey um yeah I think the I agree with the previous speakers that this is that if we represent this as a single sort of room uh that we have ways that we can make these different behaviors apparent but I think many of these things are um are actually handled well by"
  },
  {
    "startTime": "00:34:00",
    "text": "um by treating this as an authorization problem of whether you're authorized to you know whether a member of the group is authorized to add another participant for example um and um and I think that uh and I and I will say that you know wire is implemented in this way and um and xmpp uses Primitives that that sort of rely on this kind of authorization uh style model yeah I'm basically going to say the same thing as we're on the Matrix perspective the at least the way the Matrix does it is that you have a single primitive a room and that room can be configured via its um Access Control to either act as a one-on-one or as a adult group um or as a named group to use some eckers terminology there the thing that scares me more is um interrupt with existing systems I think iMessage is the famous one where um if you try to create a new group conversation with the same end set of people under the hood it is literally the same um IDs used so you just cannot have multiple conversations with the same set of n people whereas obviously in a MLS backed Mimi Matrix or even xmpp world you can have multiple private conversations with the same set of end people I'm assuming that we are all collectively assuming that um for something like that Apple would have no choice that if they wanted to operate with Mimi that they need to fix the semantics of their client to support um that flexibility but it is worth noting that it would be a pretty fundamental change I suspect um for some folks who have made that assumption actually just a quick quick point of fact um iMessage was one of the systems that"
  },
  {
    "startTime": "00:36:00",
    "text": "Alsina and tested and I think we were able to create multiple uh conversations with the same sort of people I think that was one of the surprising results in fact um but yeah there are now like three conversations with me Alyssa and Ecker on my phone and my iMessage queue interesting in which case I'm going on data from about 18 months ago um where and I dug into it at the time and it turned out that they were the way they were doing group conversations was literally just to send a whole bunch of one-on-ones and then present it in the UI as a group together yeah I'm not sure how they're doing it but it doesn't mean that there aren't other systems that do have that property so like in slack if you create a group DM on your group of people and like you and you try and create it again then you'll end up in the same one and even if you leave the group DM uh you're you're not actually evicted and um if you uh you can then get re-added and rejoin it into the same thing it's it's odd which is you know this is these Oddities are part of why I was proposing like it's not good on this path I mean so sorry I think it certainly is true that like the most General modalities sort of whatever you want to call these name groups were like that were like the there's there's no necessarily relationship with members of the groups and the um um and on and the identity the group um and then the assistant tend to bolt on some abstraction that pretends that's not the case um on top of it um I I do think going back to the requirements question um you know is there some um you know there's a there's a conceptual assumption um in a number of these number of these drafts like like versus draft Rosenberg that the chats are hosted somewhere um and so um um and and so uh uh you know it is weird Devastation where um uh you know are we are we going to are you going to build mechanisms or having things that encourage or whatever that that even in these one-to-one chats that like you don't you don't create a"
  },
  {
    "startTime": "00:38:00",
    "text": "new group um when you're exactly the same members before um because I think it is pretty gross to have a situation where it's like what what it was like WhatsApp and iMessage and when and when I go to create and I you know when I go to Crete when IMS goes and creates a thing then we have like a single chat and then the person from WhatsApp which like you may say why did they just pick the one that was already in their list but they don't they forgotten and so they do something to try to create the group and now you have a separate chat that is like what is this what's up like this posted on WhatsApp and talks to iMessage it's exactly the same the same two people that seems pretty nasty um even if we don't solve like the group problem um so I think you know maybe we're going to live with that but I think I'd like to hear someone defend that like user interface and if they think that interface is like cool then okay but if they think that's not cool then like about it nothing um to credit you know Jonathan's draft does in fact anything to say about this local um but I think like like is that like is that an acceptable State of Affairs to have people experience well go ahead um so yeah I think one of the lessons we we learned in different wires if we we added we have add-out groups if we had a choice we'd go back and not do it so my my personal take is main groups and one-on-one messages and that's enough adult groups are confusing for people um two Rafael's comment about whether we should even be talking about this because MLS just does name groups I think for interop yes I think it is important that we agree on the modality because otherwise you know if the behaviors of how the rules that two different providers you know impose on the modalities don't sync up then I don't see how interrupt can work things can go really wrong so I think it is important for us to agree on these modalities for real interop um the other thing I wanted to say is that Rowan was was commenting that a lot of this can sort of boil down to access control in an MLs group"
  },
  {
    "startTime": "00:40:01",
    "text": "I think for that's true for name groups implementing ad hoc groups not that I like I said I don't think we should have adult groups but I think that works I think what it doesn't work straight up for MLS um out of the box MLS is the the um well okay for one-on-one messages you expect to only have I would expect to only have one one-on-one message in a sense it's maybe a special case of an ad hoc group that I don't see how you could do that with MLS because MLS doesn't say there's nothing about when you create a group that that allows you to you know depend on the existence of other groups that say oh now you can't create this group because there's something else some other group that has some other state you know that would be something that's a layer up that requires some statement like some notion of identity and which has users and blah blah blah so I don't think Access Control completely solves the problem here like sort of vanilla MLS access control or maybe everyone just understands a different thing under that term but yeah so those are those are my takes on what's been said so far sorry can I just ask you one one question for clarification there so um you're saying that you you think it's acceptable that Mimi would Define the you know the further constraint that gets you a one-to-one message or a one-to-one uh that or you can never add a third user yes yes I mean I think it's I think one-to-one messages is widely sort of accepted like as in there's a lot of precedent for that users understand that um I think that's a that's that's a well understood concept and I would I would be in favor of supporting that I do think it's a bigger mess what do Eric was saying like if I have a bunch of one-on-ones with with the same person and they're not like named groups for a specific topic I think that does become a bit of a mess so yes I'm in favor of me defining generally named groups but"
  },
  {
    "startTime": "00:42:02",
    "text": "as a special case yes there's this concept of a one-on-one message that at the MLS level yes sure it's treated as a name group higher up the stack of what we Define it behaves like the special caves of an ad hoc group for two people or something like that that makes sense okay thanks yeah uh oh sorry JDR sorry is it me or or Jonathan it is Jonathan but I suspect he's having problems with his microphone or with a lead Echo uh yeah so any buttons for me to press go ahead run yeah the the thing that um I so to Joel's point I think that this is this authorization at a um at the Mimi protocol level not at the MLS level and that the the semantics for one-on-one or for ad hoc I think is that if you have a um a fixed uh a fixed um membership group and if you have a fixed membership group with a with no name versus a fixed membership group with a name a fixed any fixed any fixed membership group with a name will resolve to an existing fixed membership group uh with no name so if you try to create a fixed membership group with no name and then again try to create another fixed membership group with no name they will match and they'll be the same group that's how I that's how I treat the one-on-one case and how I how we can treat the behavior of ad hoc groups you know with the same membership if that's"
  },
  {
    "startTime": "00:44:01",
    "text": "what you want and then ending up together and if you don't want them together well you could just create a unique name for each one and then they won't collide testing one two three can anyone hear me that works go ahead Jonathan oh my God it's entirely Cullen's Fault by the way a device selection and webrtc is just total trash um all right what I was going to say is I think there's an overarching guiding principle that I like to use when thinking about these requirements which is will The Gatekeepers adopt this and if we had a protocol that didn't support the primary mode of group messaging that that gatekeeper had then the answer is definitely no and so in the case of my message which in my opinion is like pretty much the number one like thing that this is is a gatekeeper um they have this mode right of this group message and if we don't have any way at all to for that to work then I just think it sort of defeats the purpose of doing this Mimi exercise so my opinion is we probably need to support a very some version of the whatever primary mode of group communication is supported by All The Gatekeepers I think from a protocol that's my requirement statement so I think we need this idea of ad hoc I think from a protocol perspective it can be supported by as others have pointed out you know the protocol itself only understands the concept of a name group and we just we just treat an ad hoc group as like by by hashing the participants and mapping them to a name group so each set of unique ad hoc participants maps to a singular name group and then as others have also commented um you know adding and removing people would just cause you to move to another group um but at least we would we would"
  },
  {
    "startTime": "00:46:00",
    "text": "support like the primary use case for iMessage multi-party chat which I think is a pretty important thing to do um so that's my opinion as I I do believe this is a requirement and we don't have to support complex variations on ad removal which is not as commonly used but we should support the common use cases thank you so I think I may be in a sort of similar position to where Jonathan's ending up at the end of that um it seems to me like the primary difference between named groups and either one to one or ad hoc you know group DMs is this uniqueness property um and so and otherwise the group mechanics can probably be the same how you join or leave a group how you set one up how you send messages within a group Etc um so I I think basically what I'd like to propose mechanistically is that we we agree that like in terms of the an actual live thing once it's set up you know we have one thing which is which is a group of folks communicating whether that's two people in one-on-one whether it's a decrypt DM or whether it's a named thing that's wrong by now there's different policies you might attach this in terms of congratulate leave but the only the only difference between that thing and the the one-on-one or group DM cases is this unique and uniqueness problem I think that directly gives us one-to-one support because the uniqueness question in Wonder one is very easy to solve like when you get a request to make one of these things you see if it exists with the other side and if so you use the other sides off you go um so I think we could kind of do this step wise you know solve name groups first then solve uniqueness to create one-on-ones because that seems straightforward and then eventually get to you know group DMS if that's something folks want foreign"
  },
  {
    "startTime": "00:48:07",
    "text": "go ahead yep um so yeah I think well I think I'd like the idea of them all being named groups sort of you know at the protocol level what it is I think there needs to be some I mentioned this on the chat that uh some uh notion of sort of the higher level semantics that the user is intending because you know as I mentioned it would be very bad if I do something that I intend to be a one-to-one chat and the other person on the other system doesn't know that that's meant to be a one-to-one chat so they see that as a invitation to a named group named uuid ad hoc group Jonathan and Eric that would be a terrible user experience they want the other side should know this is semantically intended to be one-to-one chat or a group chat you can't add people so I think um there needs to be enough such that the endpoints can agree on what the you know you know the same user experience and give you know insofar as they distinguish the user experiences of these different things and hide you know irrelevant protocol details and get um to the endpoints so um that may be sort of some layer on top of the named groups semantic at the protocol there but I think it needs to exist so um just responding on the point about iMessage um I think in order to be able to support ad hoc in the way that I message already supports it the that behavior would have to be well understood and uh just as a as a user it's like very hard to understand what the actual model is on the back end for the way that they're handling ad hoc groups uh based on you know experience with it right so like uh the"
  },
  {
    "startTime": "00:50:01",
    "text": "same group of people and and adding and leaving and I I get like the appeal of saying like well we just like wouldn't support the complex uh join and leave use cases but how does that actually work in practice because like once you once you put it out there then like indeed like you'll have a group and somebody will leave and they will try to create a group with um you know with the same set of participants and then try to like rejoin the previous group and then like the the protocol has to say something about what happens in that case it can't just be silent um so I don't I don't actually see like the a straightforward path to to saying like you know whatever iMessage supports today like we have to be able to support because um I think honestly it's like a little bit broken the way that it that it works today so I think the the path that Richard laid out makes more sense to me and and and with time like it might become more obvious just like Witch of the ad hoc um behaviors make sense to support but I think trying to sort of deduce it um for the purposes of of baking it into into the protocol will be very difficult foreign yeah to uh Jonathan Lennox comment about um you know uh sort of what's the clear semantics way like a way of implementing this with clear semantics so that uh it's easy to recognize I I actually was thinking rather than the sort of the hashing of the usernames uh just an MLs extension that sets like fixes the modality of the group explicitly you know as an extra property say a group extension or something like that and then it's like crystal clear you just look at the group context and you can see what the modality is"
  },
  {
    "startTime": "00:52:02",
    "text": "it's record do you want to summarize where you think we got to I can try sorry Matt the only one not hearing anything uh Ecker I think you might have muted yourself that's too bad because what I was saying was like really smart um uh so um uh you know the the best way I can sort of try to like gloss across all this is that I think what I'm hearing is the fundamental primitive ought to be what I've been calling name groups which is to say um and then there ought to be some that'll be and then we need probably two extensions one way to have a deterministic name from uh from the participants in the group so that um um and one way indicate that the group is essentially immutable um and that if you have those two then you can emulate um ad hoc groups with one to one and one-to-one groups with named groups um and I think this like I think is roughly ties into like Rowan what Richard was saying about hashing and was saying about uh the access control um and um and I and I do think that will um that that does that doesn't imply um and and maybe you need some other extension about life that says uh I really think that like when you try to do things the opposite direction they should end up the same way um um but but that may just may just drop out of of doing that of doing the hashing and the uniqueness um so um so I think probably there's"
  },
  {
    "startTime": "00:54:01",
    "text": "something something here but I think it would also help if somebody actually wrote down and maybe Richard be willing to like write down kind of like how to do what I think you say I'm just picking Richard because I thought he said he seemed that sort of most completely worked out Theory but maybe also has never worked out Theory so maybe they do together or something if nobody has done it by the MLS Workshop I will take a stab at it sir who was that just so we know how to note that was Rowan oh good okay sorry I I couldn't I could know um awesome should we move on I think this is the same topic right uh yeah maybe the same slide um yes as they topic yeah um uh so yeah next slide um so I think this is um this may actually be much easier hopefully um so if you look at like on MBC on svpn you see a matrix they have like quite a complicated like room management apparatus um with like you know ownership room ownership and like Matthew's maintenance hierarchy of ownership um you know moderation kick band asking to join tasks Etc et cetera and like lots of systems don't have that at all um and this is out of Charter scope um for uh for the charters I read it um first of all do you think here um and I think the assumption that I've been hearing is that this only works um this does maybe work but only that that any given chat is owned on on one on one service and if that service of course will have its own apparatus for doing this and that you know so if you like if I've had this Matrix then the people who are on Matrix can do like can own and moderate and kick band and"
  },
  {
    "startTime": "00:56:00",
    "text": "whatever but if like I'm on if I'm on WhatsApp then I don't get to like do any of that I'm like I'm a chat Zone by matrix um and um and so like that means that it's all the operators is private rather rather rather than interoperable public so that was that was what I've heard being discussed privately so maybe people um maybe I misunderstood don't interrupt we have a Matthew and Rowan in the queue I think to respond to that go ahead Matthew um this is from um I think is a real hornet's nest because if we let every different implementation of basically every Hub or boner server come up with its own access control system in terms of who's allowed to kick who and are you allowed to speak if your name has an Eminence and whatever other random rules first of all it's going to be impossible to expose the admin controls to Any Given app in the room because all the apps will have different ideas and the semantics of the room but secondly you won't be able to ever move the owner around so even a server goes bang and you want to have some scope in future for moving ownership around or if you haven't forbid want to decentralize control over the room I really really really think it's useful to have a Common Language not a heavyweight one but at least some basic way to decide um how room management should work defined in the broader and if it's ended up being out of javtoscope I'm terrified because um how you're going to be able to admin and configure these rooms um from a given client if you don't have some protocol to Define how room management works yeah um pretty similar to Matthew's comment uh I mean the way that I'm going to express this is that we should Define the semantics of all of these things and then we can come up with a list of things that you must do and a way to to"
  },
  {
    "startTime": "00:58:00",
    "text": "figure out whether everybody else supports any of these other semantics can you guys hear me this time all right okay um I go back to my fundamental theory of how to make decisions and requirements which is if it's not there while The Gatekeepers adopted um and so uh this is one where the feature set in the the main Gatekeepers are primarily consumer I think have much lower feature sets so I do think we should just focus on doing a minimum that would allow that to interoperate I know there are people on this call I know Matthew and all are are interested in a bigger you know and doing beyond that I appreciate it so that's going to be where we we were we're gonna find uh difficult decisions need to be made but I think we need a minimum set that maps to the uh capabilities of the um uh the The Gatekeepers the second thing I would say is what definitely needs to be in scope in all cases if you attempt to do an operation that you're not permitted to do like the protocols is for rejecting because you're not allowed to do that so if there's a like add person API and I'm not I'm not and I'm not it's only possible by moderators whose name is Eric and and I'm not such a person like I may not know that that's why I'm being rejected but I should be rejected in there that I didn't have permission to do something so as long as we can express errors due to permission problems for all operations moving forward we at least have some ability for the systems to work together even if we don't expose the full set of ownership moderation and other functionalities outside of the owning organization so I my in conclusion I think we need a minimum set that Maps the consumer Gatekeepers and we need a capabilities in the protocol to express rejection because of lack of authorization"
  },
  {
    "startTime": "01:00:01",
    "text": "yeah um so to the extent that we need to deliver something that works for All The Gatekeepers The Gatekeepers do a bunch of different things which is you know a fairly large subset of the things that mock and Matrix know how to do uh now if we were complete defining from scratch completely new semantics I would agree that we shouldn't go and Define those semantics but they're already defined and we know that they already like represent real conferences in a bunch of different systems and can be used to model these all so rather than starting from scratch and having to go through a full requirements process and Define new semantics let's use semantics that already exist and we require the ones that that our customers require which you know if if we're using The Gatekeepers need to be able to do the things that they can do now then that's the list of things that The Gatekeepers can do now and if by the way as a bonus if other people decide if a gatekeeper adds a feature and another gatekeeper adds the same feature they can already model that onto existing semantics and it will just work thank you so I think I was nesting queue um although I'm about to say something Alyssa is there's a list of posts in the chat what the um language around this uh was which um uh which I think um you know uh May in fact prohibit much of this so I think it'd be useful if people think that what they're asking for is consistent with a charter um um uh or if they think that the target needs to be changed um um and um so that'd be useful place to start because if it's changed harder um to do with work that we have to get on them questions right yeah so"
  },
  {
    "startTime": "01:02:01",
    "text": "um one thing is that I think not everything on your list here is uh necessarily in the same bucket vis-a-vis the charter um in particular I think this the kick ban uh is to me is like kind of a distinct consideration from at least from ownership and moderation um and also like a very critical consumer feature um I mean both consumer and Enterprise feature as opposed to the other two which are um more like Enterprise features my view so um so that's one thing to think about um that maybe maybe we we treat different ones of these differently um and we've already spent kind of some time talking about you know blocking uh users and reputation and whatnot so I do think that one is a different case um the other thing is back to the prioritization like even if people want to start some conversation about like re-chartering to be able to do this uh like what are the implications for the rest of the the protocol Suite um of not addressing the the administration features straight away like are there actual dependencies because if there aren't then um it's not to say that these things aren't important but they're just not they just weren't in the original you know the first phase of what was going to be designed here and there are a lot of other things that are in that first phase that are really hard and uh and we need to make progress against so I think we need to prioritize and um if there's not much in terms of uh design implications for the things that are in Phase zero then we can we can say that the ownership and moderation are important but we're going to address them in in phase one or two um and without you know without creating"
  },
  {
    "startTime": "01:04:01",
    "text": "problems for ourselves down the line um so yeah I just wanted to speak to the last point that visitors put up um so yeah whether or not we need to recharge there is an open question I guess but um I don't think this is an obstacle for now because whatever it is that we might want to agree on here is probably something that mechanically again is on a different layer and can be built on top of MLS where we just use the the group agreement that we already get for free um to agree on you know arbitrary state that that's uh we might want to standardize um so my feeling is it's okay to not solve that problem right now like listen just suggested and then move on and figure it out later um we're not going to break anything necessarily anybody think that we have to do this today or that we can as little as kick it down there a little bit I think it's um a risk of a really bad user experience like if we're saying you can't even name a group chat um for now because that's considered complicated room management um then that would be a real mess um I'm finding it quite hard to actually understand what we're defining is in chartoscope okay so Jonathan says in the chat that naming um should be in scope but then um who has permission to name"
  },
  {
    "startTime": "01:06:01",
    "text": "if it's a group surely you don't need the concept of an admin because you don't want like 100 group and somebody starts going and renaming it something abusive blah blah blah which one hey Bristol you need to have some kind of um permission management system in there it almost feels like we need to this isn't black and white surely we need to have a matrix of the different functions and say which ones we think are in scope in which uh out of the scope for the chartered I'd be quite happy to drop a grid if that helps yeah I think that would be useful maybe even yeah just a list of them cool okay are we moving on I think so it was empty so I think so next slide okay so um the uh um this gets bad talking another conceptual issue um they're um uh and all but one of the proposals that I've seen here um there's a general assumption that the room whatever the channel whatever it is lives on one system um and um um and except for Matrix um and so um I think it's um and so like uh you know for instance in in Jeff Rosenberg um you know the idea is that if I you know if I'm on WhatsApp and I create and I create a room um and I add you know and I ask someone for my message um that room moves on WhatsApp and um you know if I decide and if it's just if it's you know me and four people for iMessage and I drop out um then the room light blows up basically or or may either blows up or like um iMessage or like WhatsApp is"
  },
  {
    "startTime": "01:08:00",
    "text": "required like continue to like run it definitely but without any WhatsApp users or something like that um but it's like something that won't administrate it anymore probably because they don't own it um and um um uh so um Matrix and linear Matrix uh does not have this concept really um uh as much um and linearized Matrix um as I understand in Matthew correct me um allows um uh you know uh channels to move um between uh between owning systems um and um so I think uh you know we really have to determine about that that you want to do or not um as I think my understanding is that sort of general has a group was they didn't want to do it but um um but you know we can actually discuss it so who knows what we actually think um so I guess I I think now we could time to have a discussion um and Jonathan I'm sure you're going to want to weigh into I just don't I don't see you in Kia but um I guess I can judge them first in the key um so first of all agreed that um for Mimi purposes matrix's room replication is overkill and as I said in Yokohama you know we've had a Epiphany with the linearized Matrix stuff that is basically possible to have something that is compatible with Matrix and semantics without going and replicating the rooms everywhere and having that complicated merge resolution algorithm that we have called State resolution and that is what linearize Matrix is um but because ironically because you end up having well-defined semantics about group Administration in terms of who's and have been news and moderator and all that stuff and you get it for free it does mean that you can pretty easily move the Hub around the place now I would argue that's a really valuable thing because not only does it solve the problem from the previous slide that you get a set of consistent semantics for um Administration stuff um and it doesn't matter what where the Hub is it doesn't matter to say what"
  },
  {
    "startTime": "01:10:01",
    "text": "server a given user was on when they created the conversation everything's always going to behave the same because the thing that I'm most worried about on um you know the previous slide say the naming thing and the example that Jonathan gave in the chat is the somebody can try to set the name of a group and one Hub might give one answer to that and the other might give a totally different answer I would say that's a horrible bug because it's a user I don't want to care whether this group happens to be hubbed off WhatsApp or iMessage or whatever I expect to be able to try to do an operation and have a consistent response rather than exposing that mess to the user so the ability having codified enough of the really basic minimum variable semantics for group admin for things like naming and access control means that you can move the Hub around the place even if you don't do it in the first step and it also means that effort provider goes bang if you lose connectivity to the internet it turns out that some massive group chat ends up being hubbed off some Raspberry Pi somewhere from somebody who's enthusiastically request an interrupt with WhatsApp or whatever it might happen to be then you don't destroy the conversation Integrity because somebody else can take it over and it also doesn't close the door and decentralization I appreciate this as a possibly a bit of a holy war thing but I really think you can have your cake and eat it you can have something that is super simple to implement there's minimum viable semantics for Access Control and allows you to put the Hub around the place without something that's really complicated and the linearized Matrix ID is trying to concretize that without any dependencies on the existing Matrix prior art but just doing it Standalone complete with a working implementation to show that we shouldn't be scared about doing it that"
  },
  {
    "startTime": "01:12:00",
    "text": "way sorry for the rant um yeah I think what I want to say is very similar actually and also similar with what um Jonathan wrote in the chat um I think it's hugely important to have that property to have portability Mallory also brought it up um at the ITF in Oklahoma and um however I think it's one of those things that we don't have to do immediately and instead try and design the transport and delivery service in a way that it doesn't preclude us from doing that and I think that would fit what Matthew just said um and possibly that would also be compatible uh with what we are proposing with a delivery service um well I guess Johnson can say to a degree it would be uh workable with the um the transl protocol but so yeah to summarize it is important we should eventually have it for now we should only try and not actively prevent it with whatever we do next yeah so just to agree with Rafael my point I'd be perfectly happy as long as we don't design it out what's a disaster is if you design with the assumption that all the hubs have completely different Behavior um so yeah so My worry is that the reality is all the hubs ultimately will have different behaviors I mean again if we were starting from A system that was Green Field it would be different if we were you know starting with a system where everyone was running a common code base or deriving the same protocol like like Matrix system is where you can have this idea that it's fully portable and okay but where you know it's going to be"
  },
  {
    "startTime": "01:14:00",
    "text": "different from vendor to vendor and that's that's the reality in order for this to be portable we would have to support the superset of all the functionality and also um you know make the assumption that the portability of the chat is something that the Gatekeepers even sort of want to do um it's unclear to me that anyone anyone really wants to do that um so but either way it's hard for me to I'm not sure what we would do in the protocol that would make it impossible to do in the future or there's almost nothing you can I could think that would make it impossible in the future I just I just don't think we should consider it it now and we can kick the can down the road if we on whether we ever do it or not but um I certainly don't think we should worry about it now and so I think we're agreeing basically for as long as it's not designed out it can be kicked down the road which is fine by me um but I just wanted to contest the point the the different um Gatekeepers today all have completely different implementations therefore it's an impossible problem or it's a hard problem I reckon it's a really easy problem because they all um support a same subset of semantics in terms of having the concept of an admin or for a given group or some kind of interim moderator and some basic permissions that those users can do like is the remitted or do you need a particular permission to talk uh I think if you want more sophisticated role-based access control like say Discord has then you can get off into a really complicated set but from our day-to-day experience of bridging hundreds of systems already to get for our Matrix the basic subset of a ring thinking of access control from 0 to 100 and you apply different permissions to the different level of power that people have empirically is enough to map onto everything apart from the Discord broad-based access control that we have today so"
  },
  {
    "startTime": "01:16:02",
    "text": "I I wouldn't say that it's impossible and that's why I think we should try to keep it in well it has to be kept in scope and not designed out although I agreed that you don't need it on day one student to quickly reinforce what the message just said um I think the level of agreement we need to be able to interrupt in the first place should be sufficient to also allow portability I don't think we have to introduce something massively new because of that and so I also don't really agree that um the systems of Gatekeepers are so different today that that is a problem they will have to become compatible obviously um in order to interrupt and again that should be enough to allow portability fundamentally is the upshot here that everyone's okay with with doing this later and we just need to be on the watch out that we're avoiding crazy durations where that's not the case is that the bottom line and then we can and if we have the point where someone was doing something that versus Matthew thinks we're portability feature or Matthew says something and then we argue about it then or is there something else some other follow-ups uh the one action that's brewing in the chat is that to take an inventory of what is currently supported by existing systems which does seem like a useful exercise right great okay um should we move on okay so so this um this is this is going"
  },
  {
    "startTime": "01:18:03",
    "text": "to be a long a long setup um um that I think I'm not sure I'm doing great Jeopardy and this team is one up um so I'll try to like um uh uh uh see I can frame this and then and then given and not may not put the motivational example and when you talk about the details um so um the the key Point here is that state exists at multiple levels so as a concrete example um you know you could have the idea of the transport level which people are in the room that is to say when you send a message who it gets like spanned out to and there's an MLs level of which keys are in the room and um you know as I say when I encourage a message um and so the transport information exists at the services and and the and the key material exists um some free seven percent of the end points so you know I ended up with the message and even if like you know if I think that Richard and Matthew are in the room and the transport things that Richard Matthew and Jonathan in the room well Jonathan gets a message but he can't decrypt it right um and so that's um and so and the question becomes you know how tightly in synced these have to be and they have to be cryptographically connected um and what I mean by that and this and there's probably a security question is because the security properties the whole system as a whole um so can you can you go on the next slide so you know uh um as a world example um you know if you think about it um here we have a case where the room membership is Constance we had Allison Bob in a room but Bob gets a new phone and so he like sends a commit um you know with a new key um and um and I don't want to detail the commit Works in unless right now but even so it doesn't really matter and and the result is the rumorship hasn't changed um but there's a nuke but but Alice is aware of a new key of Bob's K3 you know intro and red um so this is an example of a change that exists only really at the MLS layer um uh next slide um um conversation where"
  },
  {
    "startTime": "01:20:01",
    "text": "um you know Charlie gets added by the service to it by this by the service um to a chat um and so you know and then so here in where we see just like the ml there's no MLS change just yet um and um you know so Charlie's you know what mark would call the roster um and um and then in the next slide MLS group and that when Alice and Bob see the external conditional commit they basically say well Charlie's in the chat um and so I also like Adam MLS and so now these two things are synchronized right um and so um this is like sort of naive um you know conception um next slide um but so the key Point here is an example I just showed um you know um the endpoints have not actually Ascent to Charlie being added to the group in any meaningful way what I mean by that is they just read the roster off of the um you know off of these servers and when try asked to add himself to the group they were like looks good to me and they took the MLS external commit right and so um and so and so the question I think becomes um is this an acceptable State of Affairs um which is is it suitable zero Affairs to have the meta information which is used to control the MLS so I mean the way MLS is designed right is you get these messages that say do things do various group manipulations and you have access to some unspecified asset control mechanism that says we accept them or reject them and so um and so this and and so like the security of analysis is something like outsourced the access control list um and the analysis like make sure things are visible but it doesn't like but you know if if you're told well you know here are some key which is actually published internet but at any way um there's nothing like animals doesn't say what to do about that fact and so um you know I think the the question we have at hand is is you know do we want to you can imagine what the assistant was differently constructed where everything was like signed by some group member and that the action controllers"
  },
  {
    "startTime": "01:22:00",
    "text": "were also assigned by the group member and um um and um and then so like you would and then and then that would tie together the the group State and the MLS State um or the transportation MLS state so I think there's like a number of possibilities right um you know um you know one is you can like just in this sort of example I gave you can just trust the service and the service and ask control list and like yes you're aware of who's in the chat but um that's control is outsourced the service um you can have um you know so Jonathan um yes the commissary sent them but the question is um but but the question is like as I said um uh one version of this is that how do I know um which uh which which changes the group to accept right and so as a concrete example is a way for Charlie to add himself to the group by sending his own commit and um and the reason you accept that is um is uh the slides should be online somewhere um the reason the reason um the reason you accept that is because there's an accident control mechanism which says that Charlie is now part of the group and so he asks you to join the group that's okay um and so um so I said there's like what's like so the time the easiest possibility is like just have that designed where like there's some externalized policy Machinery in transport and it's not tied to ml in any meaningful way um secondly you could have a mechanism where you say well there is some MLS cryptographic way to say what those policies are uh but it's not required as part of the system um and um and finally you could say well um there's um uh um there's a a an MLs um we actually have ml specifies the whole thing um so Jonathan what's your point I don't actually that's that's correct because there are lots of systems where like externals and these joint uh word or people are not part of the group without people all the time um you know this is like how I you know um um you know as a concrete example this is how like every Enterprise messaging system works where it says like um you know people are still allowed to join groups um as long as they're a place"
  },
  {
    "startTime": "01:24:01",
    "text": "um so um um so so that's not real so I think the thought like just generally is a viable construct um to just say that like the group member if doesn't rumor online to add you um um uh so I think like again but um so I think we have to figure out what we're trying to accomplish here but um uh but but I think that like uh um that we need to figure out like is everything have to be tied back to some MLS cryptographic key or not is really the key question um I see we do off the queue so I will stop talking um yeah I think it's absolutely an MLs question at this point um so I think the answer to it is actually fairly simple um yes everything has to be tied back to mls in the sense that we need complete agreement uh among clients on what's acceptable and what's not so what the policy is what the ACLS are whatever we're going to Define and that's completely undefined yet but whatever it's going to be at the end of the day that has to be some sort of an MLs extension and then we get cryptographic agreement on that so the way it works is that participants can issue commits to the group and those cover proposals and in turn the proposals they can change the group membership meaning Alice can add Bob for example or remove bub or they can also change the extensions so you need complete agreement on whether or not it is okay for Alice to add Bob to the group now um and so this needs to be distributed so whenever somebody joins a group it needs to be distributed ahead of time um and that's why we have the the group info object in MLS and once you're part of a group and assuming you don't miss any messages then you you get these incremental updates that updates your status along along with everybody else's um so yeah I think that should answer"
  },
  {
    "startTime": "01:26:00",
    "text": "your your last question we we need to nail it down to something um that is an MLs extension and and then we have like automatical agreement essentially right so um I I you know I pretty much completely agree with Rafael said uh definitely not just trust the service right we want authenticity to be an end-to-end property so clients whatever happens you know I feel quite strongly that clients should be the ones enforcing the ACL for themselves um I do think also there's a lot of we we get real mileage out of making this making ACLS something that ties right into the MLS State itself at a cryptographic layer um I think agreement is important you know we don't want to end up in groups where for whatever reasons bugs maybe active attacks whatever you know clients in a group don't even agree on the ACL I think that's just not a good behavior to have and by tying the ACL mechanism to the MLS State at a cryptographic layer we we get this property for free in a sense because if you don't agree on the ACL you're not going to agree on the MLS key and you're just not going to be able to decrypt each other's stuff so communication breaks down and that's kind of what we want when we get out of sync like that I think um and MLS provides this really good mechanisms to do this to do ACLS and to tie them in you know MLS has that has all the bells and whistles built in for us to do that so I'm quite strongly in favor of of three here require MLS um you know and require ACL like that ties into the cryptographic state at the MLS layer"
  },
  {
    "startTime": "01:28:00",
    "text": "um so I I I don't agree with that because I actually think it's dangerous to view this as a protocol problem I actually think it's a user interface problem and so let's say for the moment we added some apple thing to MLS and everyone has to agree on it what user interface are you going to show to a user that joins a group are you going to do a screen pop and says the access control policy for this group is you know only accept members from you know only people currently in the group can authorize members or the the service running this server this capability is able to add members if they're yes or whatever like you're going to pop that to a user 100 of users will not understand and click OK and My worry is if you do that then you introduce some easy Vector for people to introduce Access Control policies which are the service provider can add participants as soon as we have that policy I think a lot of the promises and benefits that MLS brings to the table are just evaporated and equipment just upload of smoke so I think you need like a like we're going to keep this simple use you know we're not relying on user experience for people to make sure the apple is good we're just going to have an apple that is to fall and and for MLS purposes sorry for Mimi purposes I mean MLS can add it for other use cases but I think for you know for this at least like I think it has to be something that just baked in and just works and doesn't invite a recipe for disaster I do think as a conclusion that would rule out the ability of someone to just join a group without being invited if we want to do that we would have to add Primitives at the transfer protocol which ultimately we do result in a MLS primitive which is someone in the group has to approve it and therefore they would send a commit uh and everyone would accept the commit becomes because it comes from an existing member that's that's at least my view on this thank you actually um sorry um interface is impossible um"
  },
  {
    "startTime": "01:30:00",
    "text": "um I think I think we better see some more things too um uh which is um I don't think anybody's assuming that's controllers would be enforced by humans like they're assuming that's control by software and so the software would say you know if the if a person anybody who's like first name starts a wants to join then just go ahead and accept their strong commit um there's all join um um I guess um you know Jonathan I I do agree that there's like it is in many cases an unattractive property a lot of system to add new members to the group um um but it is also like an essential property uh um but it's also a central property in every message and every enterprise system I'm aware of um so it is hitting slack for instance like anybody in anybody in slack can like join public groups right and so um so you need some way to indicate the group that you should that when you receive an external join from um from a uh from from someone's part of your company that usually that your software should accept that um and I I just don't think it's a sensible like apparatus to have um and then there's no and there's no like security difference between that policy and the policy of if you receive an external transferable message ask for someone to your company asking to join then you should send a commit adding them those are the same thing from ml's perspective I mean that's the same as mechanic but the same animal security guarantee and so I don't think it makes sense to sort of if we're gonna allow that policy at all then the policy should be acceptable joint not like someone gets summoned like a randomly ad to randomly do a commit because you're permitted um so I think I guess well I think the same thing so I think that and as soon as you have two x control policies then you do that they need some language or defining as control policies so I think what this comes down to is we're going to need effectively what I think I heard Rafael and Jewel saying is we need some analyst extension that lets you define accidental season that they are in fact very simple foreign I think there's a big misunderstanding here uh Jonathan um so this doesn't mean that uh a user or a human like I just said needs to approve anything so if we have a policy figured out that for example allows anyone uh to join a room"
  },
  {
    "startTime": "01:32:02",
    "text": "um the the only requirement here is that all the clients know about this policy and then you can do what's called an external commit in MLS and then you can just join a group but again it comes down to specifying what that policy is and then it will be enforced automatically it doesn't require any sort of human interaction at that level so it's in a way you can think of it as uh like a cryptographic enforcement of what used to be plain text ACLS in messaging systems previously it does not prevent you from doing anything in that sense it only means that there's strong agreement on everything you do do and I think in in Practical terms it's going to be a lot more robust because you have this agreement like sure I pointed out earlier uh if if the agreement is not there you cannot decrypt messages anymore and that's probably what you want yeah I I guess I wanted to add to um to respond to what Jonathan was saying what I was saying was agnostic to you know the particulars of how we how we what we allow in terms of flexibility for the ACL in fact when I when I was talking what I had in mind was we're going to define a basic ACL and that's it and that'll be the once and for all ACL not everybody gets to Define their own ACL per group and that has to be displayed to users when they join nothing like that I mean that also works with what I was saying but I didn't even have that in mind I was just thinking you know whatever Mimi decides is the right Access Control model we should Implement that at the MLS level so that it gets enforced by the MLS protocol Library already and the cryptography is is you know is going to go awry if members of a group don't agree on on what the ACL is anymore like that that's all I'm saying I'm not saying that you know there should be"
  },
  {
    "startTime": "01:34:00",
    "text": "flexibility in defining different ACLs that I agree that that's that is a bit of a ux nightmare right there ah so thank you Joel that's super helpful that that I think is actually the source of the disconnect because I thought the only re I thought the proposal was we need an ACL language in MLS for this we want to allow for variability in the ACL from group to group which is the thing that I'm strongly opposing if you're saying no no you understand like MLS will pick one and it's just there's a bug or missing feature in MLS and we don't have a way for everyone to know what that is like I feel like okay I mean I don't necessarily have a problem with that um as long as that's what we're agreeing like that that we're not going to allow for variability and access control policies here um are we right so Matthew says what's the point if it's hard coded okay so we still have a discussion the point is to catch bugs the point is to ensure that any kind of disagreement like can't go you can't go anywhere with disagreement because you're not even going to agree on the cryptographic keys anymore it won't catch everything but it'll catch some things yeah so I um well yeah I was I so I was sitting here thinking I I had missed that it was it was just one and I was wondering if uh just having one is really gonna accommodate the use cases that people had been contemplating thus far in the discussion um and it wasn't even obvious to me if there was just gonna be one what is it"
  },
  {
    "startTime": "01:36:00",
    "text": "going to be is it going to be anybody who's in the group can authorize another Joiner and if it's not that then what is it or do we actually need to have like say between one and three different options here yes as I said I just don't see how you not how you can not have more than one option because we know for a fact there are two different at least two different major configurations one of which is any new any group member can add a new member and one of which is that any person who's already in existence can join and so um so those are two options and there's probably at least a third which is only administrators got a new member and so like like what some people might wish to have only one option I do not say that as possible do you think there's some misunderstanding here um as if we have to choose between um the authentication guarantees that MLS gives us and something else um at the end of the day MLS can do whatever you want in that sense if if you want to set up where anyone can join and I'm making this up now that has a certain domain in their email address uh because that's a rule for that particular group um then you can use external commits in MLS which does not rely on anyone inviting you you can just join um and and that's just going to work essentially because all of the clients know about this particular rule uh for that group and then they're going to enforce it and if um and the other thing that I forgot to mention earlier is that we don't actually necessarily have to rely only on the clients to enforce this because we might say this it's a bit late you know if something reaches a client that that might be spam like a malicious"
  },
  {
    "startTime": "01:38:00",
    "text": "message where Alice adds Bob and that's an invalid we can stop that at the server level as well so in the three proposals we currently have for the delivery service and the transport all of them essentially would allow inspection at the server level whether or not a certain message is valid a particular commit so whether that is a new user joining an existing group or a user inviting someone to a group or a user adding an extra device as long as as this is well defined then um we can set that on the server early on so I I still do not understand what the difference between 1 2 and 3 is because for me whatever we're going to agree on it it will be backed into the MLS level authentication anyway we did say I wasn't sure how wide frame this um uh um so I think uh um but I think I think we are closing into what I would uh what I would claim is is three which is there are some MLS attributes that says what the policy is that you're supposed to apply when you receive an extra an external commit or other or other message and that is attached to the group and and bound into it in the way that you enjoy foreign confusion which is you know based on what Raphael just said like how does that translate into facilitating interop at the application layer for these different systems I understand you can support anything in MLS but like then when it comes time to trying to have a consistent user experience across interoperating systems like how does that that boundless set of"
  },
  {
    "startTime": "01:40:02",
    "text": "possibilities get reduced to something which is which you can actually implement uh such that you get a the same experience regardless of of which system you're using um maybe I can take this one quickly um I mean yeah the problem as such is still unsolved in the sense that it's a charter question or whether or not we need to recharge her um to have ACLS and policy and moderation as part of the scope but it's orthogonal to mls in that sense um if we want interrupt on that level we need to specify that and again whatever is the outcome of that specification process can then you know just get ratified by MLS additionally my worry all right as far as the charter is concerned okay I think I think I'm next so My worry is all of this discussion on MLS protocol stuff reduces this to a previously unsolved problem which is what I'm saying is like let's let's be clear on where this policy would come from so let's think about it from user experience perspective I'm going to be on a provider I'm going to create a chat room and that'll happen long before Mimi is involved right create this room and let's say I select this as a moderated room and only people you know that only people in the group can invite other people and in fact I'm going to elect to admins who are the only ones who are allowed to do that they're going to do that through a UI in their system on their service in the apis and the UI for doing that are all gonna create that rule and that's going to be created on the server like that and and that's the only way I unless I'm missing something here like that act to"
  },
  {
    "startTime": "01:42:02",
    "text": "turn that into an endless apple means that the server has to pass the Apple to decline and as soon as you do that then I worry the server is going to say he he and also allow you know bad guy eavesdropper government to add participants to the room too and that's going to be the policy that comes down so like and if to say oh no no we're not gonna we're just going to have the UI for policy manipulation be done entirely client-side without the server rendered or server apis is like nonsense I mean no system works that way so I just don't see practically how you have a real system that constructs an Apple the Apple doesn't come in the service and then I can answer that if you'd like sure Jonathan would you like me to answer that go ahead Rowan um servers and the clients so presumably when a client creates that a group it's going to use a set of policy policies that are allowed already by like here are the choices of policy constraints that you can put in place that are presented by its server and then its server you know says okay you can have an open group you can have uh you can have a you know a group that has admins you can have a one-on-one group and the client says great I want to do an admin group and I want to set these users as the admins and so it goes and takes the policy that's allowed it sets a policy that's compliant with that it sticks it in MLS"
  },
  {
    "startTime": "01:44:02",
    "text": "group it everybody else as they're added before they even accept they get to know what the policy is and they can choose to say yes I'm willing I'm willing to be in a group that has that policy or not uh which would be you know presumably done by their client um and the servers all get the servers that are involved all can sort of see what's going on if we make this if this policy object is is sent in commits and commits are unencrypted which most implementations are doing that because they need that in order to do external commitments and other things so uh contradiction here check that clients all get the E cryptographic cryptographic cryptographically verified that this was a this was a policy that was placed by the Creator or that was later Modified by one of the authorized users and they get to cry foul if something is wrong the servers also get to see it and presumably where this all came from was the server on the owning you know the owning server told the you know told the Creator at some point like this is the kind of thing that URL these are the things you were allowed to do and all of these authorization rules you know they already their set of these which already exists so the semantics are pretty well understood we just need to write them down into in into a concrete syntax and stick them in one of these extensions thank you all right somebody please mute me and unhand me so I don't crash my"
  },
  {
    "startTime": "01:46:02",
    "text": "Jonathan you have any response to that are you still in the queue also do something here so um Matthew sort of is getting to the point where I'm going to be said in the chat like hey but Matrix today effectively will let you define the apples on the client and they're signing authorized by other instances whatever you don't need a server I get that if you design the Greenfield system I can imagine how you could build a Greenfield system that had this property that the effectively the Apple was only ever built by the client and the created by the client without depending on the server but I'd be shocked if this is true for any of the existing systems that we're trying to Federate all of these are going to start I presume with the moderation rules and access control rules defined on the server and thus the only way for for this to sort of like interoperate with the you know with the current systems is the server is going to have to hand the client the rules for it to construct the access control list um and I just think that that introduces a security vulnerability that I'm worried about emergency all right should I go ahead or yeah go ahead do it okay um yeah so so basically I I have the same view as Rowan does right and to Jonathan's Point here you know how the room gets set up that's that's between the client and and its local like vendor and and they got to negotiate like okay what apples can I use and you know who can I add stuff like that but eventually It's gotta it's got to decide on some it's got to reach some point of view of like okay this is what the group's gonna look like this is what the apple is going to look like at that point it creates the MLS group and then it can put whatever it ended landed on into this part of the state of the MLS group at which point it then signs that"
  },
  {
    "startTime": "01:48:00",
    "text": "state and that's the end of any chance of the vendor interjecting or modifying anything right because now it's signed by this user who's creating the group and and now it becomes an end-to-end thing so that's one thing I wanted to say the other thing around this this sort of you know this this um like uh The Meta The Meta I like that term Matthew um to me this is like a spec this is like basically like modality it's the same thing we're talking about as how we want to deal with modality of rooms right so it's the same conversations and and yeah to me personally it makes sense to maybe Define a couple like um you know an unmonitorated room in a moderated room I'm not sure we you know really need anything more of that some sort of common denominators one two three modes some not more than that and that's it and that's that's what that's what people got to support and that's it not not anything more flexible than that because then it's just going to become a nightmare and then I mean it's just too too complicated of a ux problem so that's maybe what needs to be negotiated at the beginning with the vendor you know with your with your own local host or whatever yeah that's that's how I would basically imagine this to work um I don't know if that sort of addresses the security problem or I'd be interested Jonathan understanding more about that security issue with that in mind what with this description in mind that you're concerned with foreign yeah I would also like to understand more about what the potential security problem is here but if it is that um clients can now dictate to a provider what the policy is and that's not the case because they don't get to create a group if they don't abide by whatever the vendor uh thinks the the policy should be and the so the only thing here is that once that is negotiated as the"
  },
  {
    "startTime": "01:50:01",
    "text": "right said um vendors or providers cannot as easily or not at all actually inject anything anymore and the whole thing becomes really transparent um so um and Tim just wrote whether it's now a question that ICS are expressed cryptographically at the MLS layer so the SES they can still be plain text but they essentially just you know get hashed into the MLS key material and then signed um so that's how it's binding for everybody um but we don't need to do anything fancy for the SES except for clearly defining what they are and making them available to everyone which we need to do anyway regardless of MLS or not incredible um as um Jonathan says that like groups are going to have some um you know uh some dictation of what the policy is from the uh from the vendor um for the the owning server and I think if you think about something like slack right as I said there are two main policies in slack one is anyone can join a public group and one is the only that the um only members uh uh you know members I admit new members um a private group right and so I could certainly you know I could certainly see a situation where um where slack binds you know two different control policies and when and when the uh when the group is created um you know uh the uh clients are told which hospital policy applies to it um and those and then that's how you expect the client to enforce the client would in fact show you know this is a private group there's a public group and a public group has a property that anyone can add it um I agree that like if you allow public groups there's no there's no there's always a there's always a possibility that like um you know um uh uh that uh that the writer was a buddy which is like in any case undesirable um but I think the purpose of of a"
  },
  {
    "startTime": "01:52:00",
    "text": "discussion here is to make that manifest at the client and the cryptographic layer as well um I wonder if there's a case again where like maybe we need a kind of a proposal from somebody um let me try and describe the specific thread I think I've not done a good job so let me put it in attack terms so let's say you have a malicious provider so my provider is malicious and its main goal is it wants to add you know make sure that like uh it can have an access control rule which says add my eavesdropper participant to all rooms which is the big thing won't avoid so the malicious provider wants to do that so My worry is I as a user I'm a customer of this malicious provider um there's an existing room in the system um and so I had a participant now outside of my provider which is where we begin the Mimi experience uh in this proposal what you know because what will happen is that this room has existed for a while it has an access control policy which is a moderated with two admins in it that is not that is is known and stored on the provider like that's that's how my mobile app works like where my web app works it goes to the server and it gets the data for the group which includes these policies here right um and so in this case what happens is I I'm the provider hands my client the policy and then my client just converts that to this apple signs this apple and includes it in MLS and propagates it to other participants in the system and the malicious provider can therefore just because we're not rendering this apple to the user which is what I just heard you know specifically in MLS or S goes to prove it it's invisible to anyone in the group that the access control policy allows for the addition of this everyone is going to prove the addition of this eavesdropper into the room"
  },
  {
    "startTime": "01:54:01",
    "text": "um that's the that's a security threat that I'm I'm worried about honestly um so um um so I think like first of all like there's no reason for the for some user to like bless like the action control list um that um you know that's not the way you build it um um um uh but I mean as I say the point is for the for this policy manifest to the so so so there's a different question between whether or not the users visit where they're asking tools is visible with the users then as opposed to whether the action control is enforced by the users and so as I said if you look at slack they have public chats and private chats and you can tell what kind of chat you are because it's got like an icon next to it and so that's the thing that you're actually aware of but the users not to be aware of is when is when someone attempts to join the group they don't like mechanically themselves enforced with a new person will join the group or not um but um uh and like and so yeah and so like could they provide could you design a system where the provider was allowed to change um chats from private to public um I think it depends on the design I feel like the nature design probably not the other designs maybe yes um but like um you know it's just inherent the possibility of having public groups that you have like um that you have the ability to prior to add people as public groups and so the best way to make these either and so I'm you're saying you can't have public groups which means they're you can't build slack and you can't build teams um then what you're saying is that they have to have some way of indicating which it is and the best you can make the user available aware of what kind of group it is and maybe and maybe have a ratchet so it can't be changed I think what we we need here is a draft but I was just going to ask if anybody is already working on such a thing and I'm in MLS"
  },
  {
    "startTime": "01:56:01",
    "text": "um and if not if somebody wants to um because I think that's we need to kind of spec out what this looks like uh to progress the discussion here I think okay I don't know raise hands at once um I don't know yeah yeah um again I don't think it's it's specific to MLS here um all it needs is something that can be serialized and we agree on the serialization format and then we put that into an MLs extension but other than that it's completely a server note to MLS that's fine I'm looking for like a volunteer who's going to do some work so that we can have like something to look at in terms of the actual functionality that that the applications will will be built on so okay thank you and we close the queue so I'll turn back to Tim oh okay sort of three minutes of the bus there uh okay so yeah we're at the end of our time today um so I think we're not gonna have time to get to like the last topic uh in ecker's deck um so listen I were discussing the possibility of setting up uh I guess uh more of these interim sessions possibly on as much as the weekly Cadence so that we can continue getting through these topics and other stuff uh because Raphael I know that you also had a deck that you guys shared with us today which we didn't have time to get to um as I Conrad I see your question in the chat uh Ecker volunteered to do a draft"
  },
  {
    "startTime": "01:58:01",
    "text": "are so I think watch out for a word from the chairs on the list uh yeah we're gonna set up uh I guess more recurring interims so that we can keep talking about all this stuff I would be interested in people's reaction to that but I feel like we have this is this is helpful it's like at the beginning of the two hours we're like are we really going to spend two hours on this and like lo and behold we don't even get through it all so um so I think it is helping us and um we had a little bit of delay getting the first one scheduled after Yokohama but with we can do two weeks notice um for the next one and you know schedule a bunch of these out further in advance and then if we don't if we come to a week when we don't need one we can always count so that's kind of my inclination on the scheduling yeah Raphael just raised a good point maybe how do we feel about weekly versus bi-weekly okay I'm seeing bi-weekly a rough consensus as the phrase goes uh behind bi-weekly okay and I think we'll keep it this time um unless anybody has super strong objections but we did a doodle and this looked like a good time so yes every two weeks Richard all right well somebody wants to write a draft that clearly defines semi and bi-weekly we can hash that out in a different working group"
  },
  {
    "startTime": "02:00:00",
    "text": "um okay uh I think that's it for today uh thanks very much to all the presenters and to everyone for a very stimulating discussion yeah thanks and Conrad if you can upload your um notes into the pad or whatever it's called The Hedge doc um that would be great and they'll make it into the tracker that way thank you for taking notes yeah thanks again what's up"
  }
]
