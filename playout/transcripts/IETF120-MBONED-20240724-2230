[
  {
    "startTime": "00:00:11",
    "text": "Thank you Thank you There's no. Right on Sunday. Thank you Yeah Thank you very much very much. Thank you Thank you very good"
  },
  {
    "startTime": "00:02:05",
    "text": "Yeah, that's a problem I see we have a volunteer as a note taker. Thank you, Torralist. That's great Appreciate you stepping up and helping out No, no, no, you don't come to a working group to work on slides for another working group. You come to participate you invest your time and getting this work progressed So 3.30, we are two minutes late. We are supposed to start right at 3.30, and I don't see a big crowd outside the door Door shut. Colleen. Everyone scan. You scan your QR Anyone actually participate in? this working group or just here to kind of catch up? there in the back of the room mic Mike? Nothing This is nuts. I've got some poems I could tell I've got some silly songs just saying you know a grandpa now so I I've got nothing but goofy things The poem? Oh, Sarah Cynthia, Sylvia Stout. Would not take the garbage out. She washed the dishes and scrub the pans, cook the hands, and spice the hands hands Anyone else? ready to take notes? We have a notepad tool that is just one wonderful. And if you're really good, you can just take the speech to text and paste it over and pretend like you took notes Anyone? Tourless? So do we have the presenters here is all we really have"
  },
  {
    "startTime": "00:04:02",
    "text": "Your IETF furniture okay everyone in the right room this is a IETF 120 vancouver bc m bone d We need a note taker. As funny as this sounds, we need a note taker Someone's got to do it. Notewell rules, standards process, procedures, noted, nods Love that participation. This is wonderful Noting more and well. So, Mike what do you do for minutes Yeah, we don't even do no ticking anymore in PIM. You just use the voice to text? We just use the but we also take the time and watch the video and just do everything afterwards. Okay Where does the text file go? Speech of text Did it record? Yeah, I think it might have materials or something, recordings or something there all right we'll dig it around thank you All right, this is being recorded. Do I have to hit the record button? This session is recorded I guess it just stops. It starts on the hour automatically now, it doesn't it? Okay Everyone QR in? Look at that such participation. Careful I may fall asleep This is the agenda. Anything missing? want to bash yes tourless you're on there with the same audience for the most part All right. I want to see a couple new jokes. Excellent All right, Lenny, take it away away"
  },
  {
    "startTime": "00:06:02",
    "text": "All right There we go. I've got the slide control so I'll just hit the button for you once. It'll be really tough I think we can coordinate. Okay So the telemetry draft so we have four active drafts in the working group. The telemetry draft has been submitted to IESG. I believe it's in the editor's queue The other three anyone in the room or anybody in the, who would like to provide updates? any of the authors, if Sand I believe you're a co-author on all three of them So if you have any, if you want to share with the room, what's the latest on all three? Yes For Solisant lady, from the M.Bondi multi-cast, the young model and the redundant increase failover structure, we think that it's ready for last call And for the MT Yang, it's a new working group draft and we'd like to ask for more review Yeah. Formal review from the Yang doctors? is that yes and the further technical side, we think that some implementer may make provide some useful information for it also, yeah gotcha all right next slide, Greg okay uh and there's two other new drafts for consideration, and both will be presented today today So I think we can move along to those Groovy. Who's up next? All right. Next is non-shorferfer networks to those. Groovy. Who's up next? All right. Next is non-sortfire multi-guess and SR Networks? No. Adaptive, actually Yishong is up first with adaptive unicast"
  },
  {
    "startTime": "00:08:02",
    "text": "to multicast forwarding Is that remote? Thank you presenter here? Yes. Yeah, I'm here Yes, I can. Do you want to take, can you share this? slides or you want me to run them for you? Okay can you share the slide for me? Well, no, you can share the down below down below the share slides you click that button it will give you a selection pick your deck and it'll begin Okay Excellent. We see the request A minute now It shows your sharing, oh, there goes, okay I guess I had to give her approval You must have done that when you were testing in, huh, Lenny? All right take it away. It's yours. Okay Can I start? Okay. Hello, Iran Eastern Liu from Chen Mobile I will introduce the adaptive unicast to multi-cost forwarding mechanism on behalf of my co-authors from the China Telecom and the new H3C and ZTE and the region Firstly, I will introduce the back background of this mechanism Currently, as we know that for many Internet surveys, there are"
  },
  {
    "startTime": "00:10:02",
    "text": "a point to multi-point scenarios especially for the live videos So, but the internet service systems always don't support the multicast. So, because they need a lot large-scale renovation of the multi-caster transformation but they lack the driven power to upgrade the head-end system and the use Through the Unicastor forwarding so the bandwidth pressure on the carrier network is a enormous so for the for the same internet service, like the video, like the live video, we have the redundant traffic So there are thousands, even millions of identical unicast traffic between the ad service nodes and the end users So in the carrier network there are a thousands of the same unicast traffic so it will occupy the bandwise of others service traffic and it will also, it will limit the quality of the internet service service this uh for this uh back for this uh situation we want to propose a new mechanism for the adaptive unicast to the multi-caster for wording. So firstly, we define"
  },
  {
    "startTime": "00:12:02",
    "text": "the device role in the mechanism So when the carrier network can offer the multi-cast capability, we mean it means that the multi-custer domain network. And the ingratory PE of the multi-castle domain for the edge device located on the internet service server side of the carrier network act as the device of the Mattaxas multi-cutta center side. It will identify the characteristics of the service traffic. It will find the the traffic suitable for the material and it will convert the unicaster packets into the multi-caster based on their characteristics and forward them along the multi-custer forwarding paths And for the igrespe of the multi-caste domain, and it will be an edge device located on the terminal user side of the carry network. And it will add the device of the multi-casters receiver site. And it will get it the multi-caster packets back to the Unicast and send them one by one to the end users on the Unicast forwarding parts parts So next I will introduce the mechanism briefly And first, we will config the adaptive optimization policy on the ingress PE And the means that we will specify the mapping relationship for the unique"
  },
  {
    "startTime": "00:14:02",
    "text": "unicastaflow characteristics and the match multi-castle IP address. That will be a distribution, the policy that will be distributed the policy by the controller and the ingress PE for the service service traffic along the unicast of forwarding path firstly And after receiving the stable service traffic with specified character, that means we can can, make the decision by the last time for the traffic or the users for the traffic and the ingress PE sends the notification to the ingress PE tom strickx the ingrat PE to send the the multicast PE join request and the igrespe PE, and the same time, the Igres PE will add the mapping relationship entry and send the Middcastle join requested to the Eagle SPEE. The Ingress P.E. The Ingress P.E will and then in the Malticaster, that domain, network, it will establish the Mattykast tree And when the Ingress P.E it can continue to receive the continuously receive the Unicast packet and when the Matikus tree have established and it will convert the packet the destination IP based on the mapping relationship"
  },
  {
    "startTime": "00:16:02",
    "text": "and it will send the traffic for for the much multi-custom packet and it will will send the traffic to the Igres PE along the multi-custer forwarding parts And the igres PE will restore the unicast decision IP based on the mapping relationship. And it continues to unicaster forwarding to the U user and the one by one because the the the the mattocastle to a map to a unique cluster in the igrespe is the one to map map n So for the packet forwarding process, in this mechanism, the first is after receiving the packet from the user, the ingrat, PE will identify the unicast packets which will need to convert to the multi-cast based on the flow characteristics And the ingratis PE will find the mapping relationship table and replace the destination IP with a multi-cast group address and convert the identified unicast into the course corresponding multi-cast traffic from the unicast to the multi-cast. And according to the multi-cast, destination, IP, that means the multicaster address, the ingress P will forward the message on the multi-custer forwarding parts And in the egress P.E and receive the after receiving the multi-cast traffic,"
  },
  {
    "startTime": "00:18:02",
    "text": "and the egress P.E will replay the the destination IP with the end user as I so the unicast IP and restore the multi-cast traffic to unicast traffic one by one to all of the users and based on the mapping relationship and the Eagle SPEE will send the Unicast traffic to the user for the how to identify the Unicast traffic, we have a primary idea about the, we can use the VEV typo, like, the source and the Destition IP and the source and the destination port and the protocol number or other other field in the in the patch like the DSCP or the service ID like an APN ID or the similar one This is the mapping relationship table and the matter of the table for the adaptive unicaster to multi-caster folding records and that that will map the unicaster flow characteristic and the user IP and the multi-caster group address And the mapping region shape table will record on all of the edge device of the multi-castle domain device that include the Ingress PEM and the igrespes So we will invite the guys"
  },
  {
    "startTime": "00:20:02",
    "text": "who are interested in this job to join us and welcome questions and comments. That's all. Thank you Questions? I don't see anyone at the queue This is Greg as chair. Just curious, do you have a description somewhere that describes your problems? statement that can't be resolved with AMT? that needs a solution like this? this? uh this solution is different from the AMT AMT, AMT, one the, the, the, the, the, the, unicast network. This mechanism solved the problem that the unicast through the multi-cast network I'll look at the trash, but I couldn't follow all that. Torlis Let everyone remote know that Tortles is one that drop them mic Physically, not metaphorically Now he's going to kick it down the aisles There we go So can you go back to your overview slide with a topology? please? This one? No, the first one right now the way we are showing Unicast Unicast uh, the, the, the Unicast, uh, the, the, the Unicast of the graph a graphic, the, with this topology graphic the the the the first slide with the graphic the first slide with the with this topology graphic the one way you're showing a lot of unicast flows Yeah"
  },
  {
    "startTime": "00:22:02",
    "text": "this figure is not a suitable for this. No, no, this because this one this one this one right so do I understand it correctly that in this picture, even though Unica is being used, the receivers are all receiving the same data the same video Yeah, the same, yeah, the same the same, uh, the same, uh, the same, uh, for the unicasse to, uh, to the users and and in the network for the carrier There are many of the identical unicastro traffic that is. Right so with this actually not being real unicast but just multicast that is being sent as unicast to every receiver the way to interpret what what Greg was saying is you simply do multicast all the way up to the egress P.E And on the egress PE, you're setting up a AMT tunnel head ends so that the last hop from the egress PEs to the users that cannot, for example, not do multicast, that that is getting the multicast tunnel over Unicast. All right, but then you don't need to do anything new on the Ingress P.E You just do normal multicast there because otherwise, you know, the whole point is you wouldn't know with all your setup anyhow which of these flow carry the same content, right? If they all start out a separate unicast how would you know what they are, right? So you're making a transition from this picture to the picture where you're magically assuming now i'm doing multicast, you know, without a explaining how you would know from these different unicast flow, how they're multicasts. So in your solution, you're sending normal multicast that was never a unicast, but in the end you simply can tunnel it over unicast with AM to get through the receivers receivers"
  },
  {
    "startTime": "00:24:05",
    "text": "This situation is that the internet service system under the user cannot run the multicast and only the network can run the multi-cast Thank you Thank you. So it's only just a want to ask some questions from Tolis because this structure is the solution not the solution, it wants to point out that we can use the multicassal capability for some duplicate content transfer in the network So, such as the live broadcasting in the network, so the same content has been delivered point to point to point to every receiver. So the bandwidth of the network is waste so we'd like to use the multicast capability of the net the bandwidth of the network is waste. So we'd like to use the multicast capability of the network to solve this problem. But as you said, the ingrespe may be simplified because they just copy the packages for multicaster transferring in the network But the receiver side, the author PE, must know which user or the server we must recognize and return the content to Unicast or something else to the receiver So, but this is only a try. It's not the final solution. So we like to bring it to discussion because the multi-castle capability open as the is what the operators want. So we want to provide some discussion"
  },
  {
    "startTime": "00:26:02",
    "text": "So operators want so we want to provide some work some discussion so 10 12 years ago there were products in the industry. For example, if you take consideration PE down to well, not a number, the PE that's sits in front of user 2 and user 3, right? So a single link, but the same video goes twice over it as Unicast. So what basically? vendors build as proprietary optimization solutions, they were doing deduplication. They recognized duplicate application data and only send it once and then started to duplicate it on the other end as well. So, you know, all the crazy things that people did when they didn't start on the right way. Now, obviously, that stuff started to fail very quick when encryption came along. So if you're really starting to see there is an internet service system that sends out all these encrypted Unicast flows, then good luck in record fail very quickly when encryption came along so if you're really starting to say there is an internet service system that sends out all these encrypted unicast flows then good luck in recognizing which of them are duplicated and could be converted into multicast. So I think maybe take it to the list or so for further discussions. Right I just want to address that. I'll take the next question if you hand it, Sandy But my question specifically wasn't how they're different We understand they're different. The question is, what does it? use case where AMT won't work? Like I'd like to see a breakdown of something like, we have AMT and it does this and then there's a specific deployment where it doesn't work and we need a new set of tools In my opinion, it's the river direction of PDN or AMT because in some next new set of tools. In my opinion, it's the reverse direction of TD or AMT. Because in some network account support multicast, we use MT here, right? And but in this, scenarios we'd like to use multi-casts instead of unicast. So it's not the same. So if we can use AMT for all the users, it's okay It's really okay in this figure But if we'd like to use multicast in the core network, so"
  },
  {
    "startTime": "00:28:02",
    "text": "there are some different. So we must do something between the ingredients router and the egress router So maybe some mapping relationship or something else again if it was multicast from the source you can in cap anywhere along the way. You can have AMT service within a domain. You can have an NICCAS service at the edge. We've actually had deployments that did this in various stages, and so I'm trying to understand specifically I mean, if you have Unicast only content you're trying to replicate that's a whole different problem than taking multicast across the unicast All right, Jeffrey. Actually, Omar's next Omar, go ahead Yeah, thank you for the presentation, Song Curious, very interested in your system because we've been working on a very similar problem And, you know, I want to know what kind of applications you guys are using this with, is it like for real-time media transport? like how are you able to actually infer what the video stream is? and the application context to map a unicast, more multiple unicast streams to a single multicast to collapse all the traffic So I think it's a similar question that came up with before Jeffrey, you had a question? Go ahead. So I just try to answer Graham question. So in the AMB or Tritian case, the traffic is sourced as multi-cast. Here, the traffic is sourced as unicast, but indeed tortoise has a very good question How does the Ingress P realize that all those four copies are actually the same multi-cast? the same content that can be combined"
  },
  {
    "startTime": "00:30:02",
    "text": "and replaced by a single multi-gas? That is indeed a very good question. That's my question Thank you. That's what we want to discuss here, because there must be some feature or some attribute in the flow so it can be recognized by the ingress PE so he can know that this flow can be multicaster or other than unicasted, right? Other questions? Step through, is this a zero draft? Is this in a zero draft? Yeah this is the initial draft Is your intention for adoption? I'm not ready, I think Okay, well, I mean, yeah, present again, we can, we can take a vote next time. If you're ready now, we can, but it looks like you if you think you want to cook more then that's fine we're sure okay okay um next is geoffrey so can you unsh this deck? And I will take it over Thank you huge. All right. All right So this is about modicast options in a segment routing network specifically the this is about modicast options in a segment routing network. Specifically, it's non-source routed options The draft was originally home in the PIM working group and I presented once there in the NASA ATF meeting. Later, we realized that because we're talking about deployment,"
  },
  {
    "startTime": "00:32:02",
    "text": "options, NBongD is actually better place for it. So we resuburnated as an Bomb D document and here I'm presenting again on behalf of all my co-authors Next slide, please so this is an informational draft for discussions and considerations A long time ago, we have another draft. It's replaced that this replaced that and then re-honed from the teamworking group We do not consider source rock options in these drafts, not because they are not good, it's simply just in this month we only consider the non-source-routed option And beer is considered here, and we don't consider it as a source routed the bit string doesn't include the list of the edge routers that need to receive the traffic but it does not encode tree or subtree, so we don't consider that as source routed. Next slide, please So to talk about the options for modicas in the SR networks, let's first start examining the SR principle The number one principle of segment routing is that we do not maintain per flow or per tunnel states in the network Instead, we encourage loose or strict paths in the package themselves. The second principle or more accurately, the second precaution, is that optional use of control The ingress routers may be instructed by its control on how the package should be steered to get a basically second in the package to be embedded in this in the package so that they can forward"
  },
  {
    "startTime": "00:34:02",
    "text": "Next slide, please So when you consider the principle number one of no per flow per tunnel state, then there are two options. The first one is ingress replication. It is simple, mature but it is not efficient in terms of replication. It does apply to certain scenarios, for example you have low rates, low fan outs and sporadic flows. It works well. In this case, you can use both SR or non-SR paths, whether it's IPTal tunnel, MPOS tunnel, or SRV6 paths things like that. The second option is beer, beat index, except replication. It does provide efficient replication without the purchase state and it sticks to the as our principle number one perfectly. It's a perfect solution for SR Multicast It works for all situations, though where you have convergence on the scale requirement and that will benefit the most most Interestingly, both the Ingress replication and beer, they are developed independently of SR, yet they are the good solutions sticking to the SR principle number one. Next slide, please So, beer, we have made good progress protocol progress in IETF that base architecture encapsulation and signaling, extensions, the became RFIS relatively quickly and we have also other extensions and brownfield deployment solutions in the work The deployment of beer has been somewhat limited due to this chicken egg dilemma"
  },
  {
    "startTime": "00:36:02",
    "text": "because it involves new encapsulation, new forwarding paradigm, which requires either programs or new ASICs So while operators are very interesting, in beer, they back off once they realize that their platforms won't be able to support beer for a while And once they back off, the vendors also back off. So because of that, deployment has not been ideal. However, we believe that the prime time for beer is actually coming. We have pioneering vendors and operators that will work together to break this dilemma Specifically, there is ASIC capability from several major vendors across as edge access and core platforms And we have demonstrated the interrupt among major vendors in the IETF and in the industry interrupt testing events. Next slide, please So now if you look at principle number two of segment routing, which is use of controllers, in this case, there are two options. One is controller calculators trees. The controller will do the calculation, figure out what a multicast tree is like and then it was used the traditional signaling to set up the tree. For example, the country sends the calculation results to the tunnel ingress, and tunnel ingress can just use R3P, T, P2MP to set up there tree. And more advanced option is that controller not only does a calculation, it actually does signaling as well Specifically, we have SRP-2MP which the PIM working group has been working on, PIMSRP2M policy Another option is just to use BGP"
  },
  {
    "startTime": "00:38:02",
    "text": "to signal from controllers to see up MLTP trees or IP multi-gast trees We have our best or foreign groups document on this one So we see have our best organ group document on this one. So we talk about its BGP signaling yet we have MLD here so here there only relevance to MLDP is used of the MLDP effect as a tree identifier We actually don't use the LDP or MLDP for signaling. This is actually a good option for transitioning from traditional NPRS, traditional MLD use the LDP or MLDP for signaling. This is actually a good option for transitioning from traditional NPR-based deployment. Next slide, please Some SRP-ton-P considerations here So we could have MPS data plan or SRV6 data plan In the case of MPOS data plan, SRP-2MP is actually very similar to MLDP or RSI could have MPOS data plan or SRV6 data plan. In the case of MPOS data plan, SRP-2MP is actually very similar to MLDP or R-SDP, P-2-M-P, specifically the tree nodes, they have identical per tonneal forwarding states as the MLDP or RCP P2NP You basically have label in and label out The difference is in the control plan. You have different tree identifiers and you have different signaling Another thing to point out is that SRP-2-MP avoids trees states on the non-replication nodes. You only need the tree state on the replication nodes. This is good for the space replication situations I also want to point out the PIM and MLDP supports that as well. For example, you could have PMAH adjacencies over tunnels, you have MLDP 6 signaling over targeted sessions. However, to do that is a bit of a hassle"
  },
  {
    "startTime": "00:40:02",
    "text": "And in case of the SRP 2MP, this is avoided by that use of that Godbox controller. Next slide, please And then in the case of SR Basic Data Plan, the tree node state is actually also like the NPRS case In the NPRS case, the incoming and outgoing tree identifying label, now corresponds to the functional bits in the SRV6 destination address And the locator in SRV6 destination address gets the packet to adopt downstream tree node. And that is just like the base tunnel that gets the packet from one tree node to another. So you can see that it's actually very similar And then we can also use segment routing header to explicitly steer the packets between the two trainings one cache here is that with SRV6P2NP each tree node needs to update the destination address, and that is different from the IP multi-cast So, again, this does need a new ASICs or programmable ASIC to support SRV6 P2MP Even on the other hands, if you have a router that supports SRV6 Unicast it's likely that that can support SRV6 P2NP as well. But you have some older A6 that is at SRV6 incapable, then you're out of luck So in this case, the pure traditional IPV6 matrix can be used here equally well well Next slide, please Also, traditional solutions are"
  },
  {
    "startTime": "00:42:02",
    "text": "still works in the SR network whether it's ingress red, replication or PIM or P2MP MLDP, RCP, RCP, P2MP as long as they address the use case without pain points in the SRV6 case, you may just use the plain old IPV6 multi-cast instead of SRV6 P2MP In particular, even though the SR removes the need for LDP or R3P on the Unicass side, then you can still use MLDP or even R3P for multi-class purpose only. Unless some operators, they just prefer that one side stop, once I stop using LDP or R3P for Unicast, I would just want to get rid of MLDPRCP once I stop, once I stop using LDP or R3P for Unicast, I would just want to get rid of MLDP or RCP for P2MP entirely. That's operators, preference or choice of taste, and that's fine. Next slide, please So this is the summary of the order of considerations that one can do when they consider what they need to do for SR network when it comes to modicast. The first thing to consider is being If you want to have efficient replication, without the portray state, I most of your replication notes supports beer, then beer is no doubt the best solution here Now, if you cannot do beer, or if you don't care about the benefit of beer, you can consider the traditional multi-gas solutions, as long as they address your need without pinpoints For example, you don't care about a user of controllers and you are fine with running MLDP or PIM, even though"
  },
  {
    "startTime": "00:44:02",
    "text": "you no longer use LDP or RCP for unique You can still use that for for multicast purposes. That's fine. But if you really don't want to do that and you really want to use a controller, then of course you can use controller signal multicast It could be SRP 2MP, SRV6P 2MP, or you could also just use BGP to see signal the MLDB tunnels or MM or IP Maldicast In fact, in a non-MPOS IPV6 networks, the PIM control signal IPV6 multi-cast is a very good choice a very good alternative to the SRV6 P2NP. Next slide please So we would like to invite discussions, comments We presented in the PIM working group There have been no follow-up on the Millionist. We want to trigger the discussion, get the feedback. And if we see that more people agree with this summary, with these options then we can consider the working group adoption But at this step, discussions All right, Torlist. Thank you, yeah i have no strong opinions if this is going to move forward, obviously, love to see BRTE being mentioned and I'd be happy to see you know, what text might be appropriate for that as well All right, any other questions? So is the expectation to begin discussion on this list? or combined with them? And this and combined with P. Okay, excellent. Thank you, Jeffrey All right, next last presentation No, it isn't. Is the Toral presentation"
  },
  {
    "startTime": "00:46:02",
    "text": "So, who was on the PIM working group? Who was not in the PIM? working group? Okay, the Russian good point in the PIM working group? Who was not in the PIM working group? Okay, the rest you could put your heads down So, no, I mean, so this is basically, well, I can say one new thing how about you know what is it bartering so if you review this draft I'll review one of your drafts, but roughly same page. Don't give me a 500 page document. No, so I mean, I'm just coming to end Boundy with this, even though I was just presenting in PIM just to make sure that the MBO page. Don't give me a 500-page document. No, so I mean, I'm just coming to Embone D with this, even though I was just presenting in PIM just to make sure that the M-Bone community also knows this is one of our you know, basic update the core specifications of multiple in the IETF And so hopefully we're going to go in Tim in working group last call very quickly. So, you know, review from operators also would be very highly welcome Next slide Right So RFC 1112, original IP multicum specification for the host stack, right? So nobody needs to know what a router is. This is only about, you know, how to set it and receive multicast packets, the stack the Ethernet mapping, and then the wonderful product called IGMP version one. And that actually fell over our head, even a recent when, you know, vendors of IOT equipment were saying, hey, we implemented the most full standard multicast protocol with is IGMP version 1, because 1112 is full standard and V2 and V2 and V3 are not And so we needed to really fix this So how do we throw away IGMP version 1? without throwing away the specification of IP? multicast coming up with a BIS that doesn't have the IGMP version 1 code anymore? but then update the basic multicast specification with only all the things"
  },
  {
    "startTime": "00:48:02",
    "text": "that the IETF would like to see. So we've been on that for, I think, two years now. That's why I think we're also finished and the most important things of course, was to update that multicast is now called ALA multicast. It's also a good think a great full standard but not over the internet but in controlled networks. There's a pointer to the RFC we wrote about that, right? So that's SSM otherwise otherwise We also don't want to see any new use of IGMP version one, but don't want to change any line of code in the billion of devices that have IGMP V2 and V3 deployed, right? So that of course also is a little bit tricky. We did that And then, of course, new must and should, right. So 11 really precedes any idea process, right? So, I mean, all the things that we need to do nowadays with the templates and disclaimer and all that stuff. So yeah, that was a lot of fun adding that And then as a bonus, of course, it was also very easy to add what annoyed me as an IP fan for Eternities, which we never had an actual RFC saying here is IP multicast for IPV6, right? So the only stuff they did was kind of having various different RFCs where they added the code points like, oh, here's the Ethernet prefix for IPV6 multicast. Oh, and here in a big Unicast document, here is a multicast addresses, but you can find, look through all the IPV6 RFCs and won't find a real specification What is the bloody host stack for IPV6 multicast, right? So references for that is all in there. Yeah term ASM and SSM. Next slide So, yeah, we're ready. So I have early early review. That was also going through all the bloody Ianna register trying to figure out which 1112 references to update IGMP version one headers specific case, but in the end it should be really easy to review and compare against the original"
  },
  {
    "startTime": "00:50:02",
    "text": "with ID div tool appending A was IGMP version 1 that's gone. There are a bunch of appendixes and explanations in there, but the main text really maintains the wonderful style of Steve Deering with just, you know, many places, small new B6 references must shoot, ASM, SSM, so hopefully this should be an easy way to score review points that I'm happy to return thank you questions comment I've won. I asked for a new jokes. I didn't get any. No Sorry. I'm sorry All right. Next is a remote presenter, Omar me oh okay I did it's all yours now Thank you I'm still waiting on the slides Did you just look that lens? Lenny? All right. I did. Okay, gotcha My mouse was on the way It ran off. Beat you to it All right. Take it away one more. Thank you So, talking about open casting and multicast CDNs and architectures that we've been developing for them Network operators are facing unprecedented challenges, a number of presenters at CDNs and architectures that we've been developing for them. Network operators are facing unprecedented challenges. A number of presenters have talked today about flood of unicast traffic from streaming video and downloads from partial scenes Operators are struggling how to keep them users happy and deliver higher bit rates and maintain a high quality experience and how to have a return"
  },
  {
    "startTime": "00:52:02",
    "text": "on the investment in all the infrastructure that they're building and how to actually scale up the number of users that are able to serve It's challenging It's a Unicass OTT's world All the apps in the world that people are using are HTTP-based and more people are watching video over web than they are over broadcast, which is per purposely made for this use case and much more efficient at it. And it's really hard to get OTTs to embrace more efficient modes of delivery, especially when multicast is unroutable over ISP networks Unicast infrastructure is very exclusive and there are just you know, the state of affairs with the access to that infrastructure means that it's really hard to get it deep into the network where, you know, to that infrastructure means that it's really hard to get it deep into the network where it's able to anticipate surges and so forth And that's because of the settlement-free people model and you know people you know, commercial CDNs and private CDNs, giving appliances to people and to operators who are serving significant traffic that it's worth giving infrastructure to and it also means that these operators are not able to monetize on that capacity and so it also means that these operators are not able to monetize on that capacity. So to address these challenges, it's to monetize on that capacity. So to address these challenges, there's a lot to it. Try to go through it as high levels possible, but it's a combination of technology uh there's a lot to it try to go through it you know as high level as possible but it's a combination of you know technology and business problems and you know fundamentally it's like, you know, multicast is purpose made for video and you know that's that"
  },
  {
    "startTime": "00:54:02",
    "text": "of what is you know in our mind and i'm sure in this setting here, people are very clear about we need to get multicast to scale the delivery of these services and we need more edge caching to be able to use and time shift traffic that is multicasted And another big part is, okay, you have these appliances there there need to be way for OTT to interact with them. So I'll be talking a little bit about open caching, which is another IETF project and aimed at allowing for operators and mobile CDNs and commercial CDNs to offer standard interfaces to OTTs and content providers. And finally, you know, you have all these independent CDNs You need a way to enable access to them and you know we're building protocols and primitives to commercialize that capacity So first of all is you know, we have this chicken and egg problem that multicast enabled services and it's really hard to get all the app developers in the world to switch over to multicast, to integrate an SDK and you know, there isn't really a multicast network for them to get a return on that investment Our view on it is that it has to be a separate appliance, and that's what this multicast adaptive HD proxy is It's a single appliance for transparent caching and multicath delivery Unmodified user agent and device player that is expecting to talk to serve"
  },
  {
    "startTime": "00:56:02",
    "text": "an origin server over HTTP can use this adapt proxy and there's a over HEDP, can use this adaptive proxy. And, you know, there's a part of it we call the gateway side and part of it that's the server and they're going home some bottleneck link the request for the user regular h HTTP goes to the multicast gateway which has a cache. If it's there in the cache, it's server directly, but if not, transparent sports that request to the server and the server goes out to the origin retrieves the response, and delivers it back synchronously to the gateway and to any other concurrent gateway they can, you know, use that stream in real time or cache and time shift it for use later And this is significant, you know, also the fact that we're doing, you know, there's a little green lock there are other for use later and this is significant you know also the fact that we're doing you know there's a little green lock there there are other systems that do this like DV-B-M-A-D-R, ATS know there's a little green lock there there are other systems that do this like ddb m a d s c3 these are over-the-air standards for digital video broadcast television, a defined ways for packaging H.E.T.P. Video over multicast, but they're quite cumbersome and most vendors, you know, and solutions that are out there, including MABR it's designed for you know to be configured and, you know, integrated into apps So it's, this is, you know, transparent to the app developer. And how does traffic actually route to that player, you wonder?"
  },
  {
    "startTime": "00:58:02",
    "text": "And that's where open casting comes into play open casting is a new project that is being driven by the streaming video technology alliance. They're an industry association that was started by a number of OTT who you know, are kind of later to the streaming war so didn't have their own CDN infrastructure and we're looking for ways in which they can have more capacity and tap into ISPs who can run CDNs themselves and use that infrastructure with a common set of interfaces, regardless of who it's CDN is. So, open caching is meant real for euncast traffic initially you have the UCDN, the UCDN, is, you know, a commercial CDN or it could be the content provider themselves disney for instance is you know one of the founding members of the streaming video technology lines, and they would operate in that UCDN role and they can delegate requests to downstream CDNs. So this is all outlined kind of an RFC 6706, which is the problem statement of CDNI, there are a number of different interfaces. There are actually a lot of interfaces that make this all work together. But the core idea is the user agent, the user app, makes a request to Disney.com and they run a what's called a request router That request router has a number of downstream CDNs that they're in their registry and they use CDN interconnect to forward"
  },
  {
    "startTime": "01:00:02",
    "text": "that and delegate that request to one of their downstreams That downstream then can base off of the parameters of that request, determine which node to redirect the user to so that can be either, there's two types of redirect. It can be either APP you know, 303 or it can be a DM DNS-based delegation So if we're seeing a request coming from, you know, slash 32, we're that DCDN operating this infrastructure has, you know, knowledge that the user has an appliance within their land that can receive these requests and handle that traffic, will redirect them to that appliance Then that appliance, let's say they're redirected to the map Gateway will like I showed in the previous slide, make the request to the gateway and the gateway connects to the server, the server is able to forward requests coming from, you know, the use, the upstream CDN So open casting is an extension of this caching configuration and interfaces that is extending it for better multicast support So how we can do actual search discovery, management of resources, and the actual circuits that have been provisioned, and also allow the upstream to define which has endpoints they want to enable to multicast under what conditions and so forth"
  },
  {
    "startTime": "01:02:02",
    "text": "Too many slides So you have this infrastructure, you know, a CDN that's being operated by the MNO or the ISP, and it has some varying levels of multicast routability. We're implemented at the app layer or the transport layer, and what actually is connecting between the server and the gateway is you know, we're pretty flexible and we're initially thinking about this from you know, the perspective of going over the air because of the routeability challenges. So ATSC is the next generation of television that's being rolled out here in the U.S. and the number of other countries today is now announced in Brazil. It's also in rolling out ATSC3 But one of the big deals about it is that it's IP native, similar to the transition from 3G to 4G it's an IP native network So we can skip over all of the routability challenges going directly over the air to the end user and we can use their TV sets their smart TVs have to tuners in them and are effectively small computers so we can run the gateway directly on the prem and overcome these routing challenges I've learned a lot more about AMC in recent months and Treaty N. And that's had me thinking a lot more about you know, past in the back, though So we've been implementing AMT functionalities and actually there's you know, been a lot of interest in it been implementing AMT functionalities and actually there's, you know, been a lot of interest in that we can"
  },
  {
    "startTime": "01:04:02",
    "text": "use or also, you know, deploying this in people's homes and in kind of creating an open CDN that anyone can know, anyone can maintain an SLA and prove that they're able to serve capacity with high QE can relay their traffic. So having an A&T system part of this network is really interesting for overcoming kind of gaps in multicast routability into you know, walled gardens or pockets of an ISP network that are multicaster routable. And the idea that we've been experimenting with is having an a AMT gateway, part of our multicast gateway that can you know, essentially really decapsulate and relay that multicasts, traffic on to, you know, that subnet or that part of the network that is multicast crowdable and that other users can efficiently use that stream that's being relayed without needing any OTA hardware So this opens up a much larger footprint than what we can do over the air. And, you know, of, for you know, who don't have the gateway on on-prem, these nodes still fall back to you Unicast So yeah, we have the ability to scale the know, scale the availability of multicast services into parts of ISP networks that couldn't get services there before"
  },
  {
    "startTime": "01:06:02",
    "text": "and we're building this as an overlay network And, you know, content providers, like Disney have you know, been the number one supporters of open caching, but it's still challenging to work with a large number of vendors and the idea is to create a single overlay network that abstracts away the complexities of what is the underlying transport and offering multicasts regardless of if it's over you know, treaty N, a terrestrial OTA broadcast, satellite broadcast 4G, MBS MBMS as CDN interfaces, and that hope users or small businesses landlords and MDUs and run the receiving nodes you know, and essentially scale out traffic in those parts of the network And, you know, this is also, you know, and then it as a rev share effectively enabling for lower capital requirements for building out this infrastructure and lower operating costs getting nodes into locations They couldn't, you know, do so before having to pay you rent So it's a win-win win-win How this overlay works is we're building what we're calling the capacity marketplace. And this is a set of interfaces built on top of CDM that brings in the missing coordination"
  },
  {
    "startTime": "01:08:02",
    "text": "layer for the capacity consumers to leverage capacity providers. So one of the big challenges, yeah, you have these protocols and we have folks here from mobile operators who can relate with the challenges of poor interconnects So every time you want to set up in your core, you require both parties to work together, and there's a lot of security challenges and trust that has to go into enabling access to these services services So this is, you know, a project leveraging to a immutable ledger or blockchain and smart contracts And, you know, there have been similar efforts in 3GPP to use blockchain for you know simplifying and making interconnections more trustworthy So I'm coming actually from that background and have worked on poor interconnect, you know, one of the authors of the Magma open source core project making Interconnect easy and you know there is a much bigger and much clearer value proposition for it in CDN interconnection than there is in you know some 3GPP core interconnects But it has not received nearly the amount of attention or love So this is the architecture and you know it involves essentially a registration layer for both participants, and, you know, we vet on the supply side the providers there that"
  },
  {
    "startTime": "01:10:02",
    "text": "you know, they also are responsible for keeping track of their KPIs and capacities. And we have you know, primitives that we built and utilities that allow them to report this in a way that's not gameable There's the market layer that allows for the capacity consumers to put in requests for capacity where they want it, effectively a footprint you know, that can be a ASN, it can be a list of subnets, geography and they say I need you know, 100 gigabits per se second on July 26 in the eastern U.S All the providers get that bid and can programmatically restore with their offers if it's below the asking process. If the provider sorry, if the consumer lowballs and you know, that's, that's, that's, know, they'll get no offers and they need to revise their request to get offers So there's this back and forth that goes between you know, both sides of the market. And, um, and they need to revise their request to get offers. So there's this back and forth that goes between, you know, both sides of the market. And once there's an offer that is agreed it's executed And, you know, we create smart contracts that enable us to you know monitor SLAs enforce them and track usage and we then make the bootstrap credentials that are necessary for CD&I to have and those credentials are given to the consumer"
  },
  {
    "startTime": "01:12:02",
    "text": "And then the CDNI standard APIs take over at that point the capacity side, the supply side will be reporting their proof of delivery and usage logs And, you know, there's some settlements that happens after the fact So, yeah, we're, I think I said over a little bit of architectural components, but, you know, we're built security and authentication primitives that nodes verify from multicast using Tesla and also an RFC I'll tell you it's number 40 verify from multicasts using Tesla and also an RFC. I'll tell you it's number 4082, so we have a variant of that we provide source integrity and authentication and you know the nodes report that they receive that signal so we're able to confirm delivery of service delivery. You need to cast delivery, you know, we contributed a interface that ITM218 that allows for you know, billing and kind of logging of requests in a verifiable manner for downstream CDS So that's it at a high level. I will open it up for any questions. Yeah, we got two people in the queue. The man with no tour, please Can you go back to the pre-oh? Thank you very much, by the way. Unfortunately, this was kind of a whole other universe flowing over my head. Unfortunately, there is no draft so we'll have to torture you're here with Q&As on these slides. But yeah, so it's very hard to present something as big as that. Can you? go back to the previous slide with the picture?"
  },
  {
    "startTime": "01:14:02",
    "text": "Yes. No, no, the one that you had showed last was one of the initial slides this one yeah. So AMT is fine, where would you actually start doing any in-network replication, you know, something between the origin server and the individual? receiver? Where is replication happening? The multicast server is box on the left. So it's receiving requests from gateways where it's been pre-programmed to push out a particular HEDP video manifest. So it's doing all of the replication, so to speak There's also another point of replication. Wait a second slowly. Let's take one example. So you're saying, D-A-B-M-A-B-R as one of the example cases, right? Mm-hmm. So that is already some multicast system, right? So DVB uses multi-cass system of the example cases, right? So that is already some multicast system, right? So DVB uses multicast for the satellite. So you're basically feeding something into that existing multicast system. Is that a correct interpretation? We implement the DB-MABR interfaces. So, you know, our are our multi-casts system is, you know, we the DBMABR interfaces. So our multicast system is, you know, we're abstracting away the underlying complexities of the phi to the users of the multicast service and yeah MABR is one example of the system that we don't of the multicast service and yeah mabr is one example of the system that we'd want to use and has wait a second has ddb specified mabr that's that's specification, right? I mean, there's also dox system MABR, correct? um yeah mabr is is you know it's it's really with with the term dv b a mabr are you referring to a DVB specification there or"
  },
  {
    "startTime": "01:16:02",
    "text": "something else that you invented? you invented? We implement the DVB DBB-M-A-B-R specification we can So, you know, DBB-M-A-B-R is meant for live television and linear television. So you know, we can use those existing systems and, you know, broadcast infrastructure, the saddle live television and linear television. So, you know, we can use those existing systems and, you know, broadcast infrastructure, the satellites. We can use all of that And, you know, there is some on the received side to use OTTs It does require our gateway So it's not, if you want to do what we're doing with OTT app you know, translation, that isn't going to work on your TV channel and your TV guide But we're using the same phi and, you know, we're working with vendors who are producing sectop boxes with DVD receiver and you know, we're working with vendors who are producing set-top boxes with DVD. Sorry, you're very fast there, right? So I'm trying to understand when you're just with vendors who are producing set-top boxes with ddb receiver you're very fast there right so i'm trying to understand when you're jumping from one possible path to to to describing five or six possible delivery path and parallels I would would just love to understand a single one first. We're talking about DDB still So, you know, with DBB, MABR it's meant for linear live television which does not work for netflix does not work for uh downloading software update So if you want to use your existing set-top box, it's not going to work with what we're building here We require that on the user's app on the user's television set, they download an additional Android app that can use the multicast feature coming over the DVB phi know, DVB phi. And it's, you know, a very feed coming over the DVB phi and it's, you know, a variant of the MABR spec that allows I mean, you're having a picture there of a satellite transmission"
  },
  {
    "startTime": "01:18:02",
    "text": "right? Are you, I mean, are you? implying that the new content that you're bringing into DVB from your system? goes over existing satellite connections? Yes. So we're treating it as a phi and we have our own proprietary transport so but then the operator of the DVB MABR would pretty much have to set aside some transponders for your new content Not necessarily We can be allocated on a you know, a logical channel So transponder But basically he needs to set aside bits for it Whether it's a new transponder or you're mixing it as channels into existing DPP transponder you're basically translating it at that dvb mabr head end into a dv stream that goes through a standard dp at the DVB MAVR head end into a DVB stream that goes through a standard DBB system. But on the receiver side, there is a special software that goes beyond than the standard DVB reception so that it can, for example receive new well, still broadcasted channels, right? I mean, when you're saying it could do something like Netflix that's more like a Unicast, right? Exactly still broadcasted channels, right? I mean, when you're saying it could do something like Netflix, that's more like a unicast, right? So, or, so. So, that idea is that we're using existing infrastructure on the broadcast side um and on the user side that the that we're using existing infrastructure on the broadcast side. And on the user side, that there's a new application that's deployed that receives these multicast signals and runs a unicast HTTP server on-prem within the user's television set, within you know, wherever that point of presence is, it's able to receive a over multicast and convert back to HTTP so that an unmodified application can use those delivery"
  },
  {
    "startTime": "01:20:02",
    "text": "over the content example right you said something like Netflix. Is this the last? thing yeah I just we've got we have the people in the queue behind oh like Netflix. Is this the last thing? Yeah, I've just, we've got, we have the people in the queue behind you. Oh, okay, yeah. No, it's not just a tour of show He can kick me who wants me out and Lenny is far away so. No, but, but seriously as far as the content is concerned, right, is, how do I imagine something like a Netflix being injected? here with your system over satellite that only has limited additional bandwidth is that kind of the most popular Netflix as pay-per-view? or what's kind of the content model here? That's a great question So that's where open castings coming in And the OTT Netflix is not a member of SVTA, unfortunately Hopefully one day they do, but whoever implements the interface of UCN or, you know, one of the vendors and, you know, the CET essentially is using one of the open caching CDNs, we're running one as well and they program how they want that service to be delivered over multicast. So that's the idea of open casting Map different streams to multicast sessions and channels like you would a CDN service Mr. McBride Hi, mike mcbride. Futureway, thank you so much, Omar, very interesting Anything multicast related I get interested in And then when you mention blockchain or smart contracts, I get all giddy. So I got a question about that It may be a small part of what you're describing here, but just wanted to pursue that just a little bit And if there's some pointers maybe that you have, that I can read about later, that'd be great. I try to do a quick search on it. But so my understanding with the blockchain, piece of it is that you're using that for sLA"
  },
  {
    "startTime": "01:22:02",
    "text": "as you mentioned, and it would just be helpful to understand that a little bit more like are using some sort of like hyperlash or some proof of work kind of a thing to to do that I'm happy to follow up with you on more of the primitives that we're building sloAs is a really interesting one. So there are new ways in which we can essentially penalize you know, participate We ask them to put in a deposit So to participate in the network, you have a deposit and, you know, if you violate the SLA, you're penalized. So that's that how the how it's enforced and the conditions are, you know, based off of uptime or, you know, the capacity, you know, that's, you know, faking your capacity for instance, and trying to gain how we are reporting essentially, the amount of capacity you have So it's meant to keep actors honest It's one of the mechanisms that we're using a big thing also about it is kind of trusted hardware. So big thing is, you know, verified boot and making sure that nodes are not tampered with running an email malware, and using the smart contracts to enforce that behavior Yeah, that's fascinating I'll probably just get your email maybe from when to maybe follow up on more about that. I've been thinking about a draft for Mbondi for a while now. That has to do with using blockchain to enforce all"
  },
  {
    "startTime": "01:24:02",
    "text": "sorts of things that are more networking related. So it'd be really fascinating to find out more about what you're doing with doing that with SLA Yeah, I'd love to connect. Thank you thank you lenny um yeah almost sure so uh the first question, two questions questions. One, the open casting spec in SVTA is it specifying? TREDN as the multicast network between this multi-cast? server and the gateway? If not, you know, how could we add it? to that? How could it be added to that? Because I think, you know, obviously it can be very beneficial to that architecture in that it can extend the reach of where that multicast gateway can be It can be anywhere on the internet, not just, you know connected to a multicast network so yeah that's something we definitely do the open casting project is a follow-up on really rudimentary multi-cast capabilities that were introduced in open-cast caching. Already, right now, in open caching, you can advertise as a footprint, so you're as a CDN you have US West you have US East and you're advertising different footprints that have different capabilities and there are metadata objects that are exposed by the open caching or Steady9 controller that include a parameter about multicasts So that is, you know, it's like multicass is positive and it started off as just satellite. That was the only descriptor we had. But we expanded that to you know ddb"
  },
  {
    "startTime": "01:26:02",
    "text": "DDB, ATSC, we've expanded it to all the OTA and I think, you know, we should expand that to include 3DN so that an operator can advertise the kind of footprints that they have and understand, you know, just kind of the infrastructure that they're using and that gives them a good sense of the reach Open casting is coming in to add in more exposure to the consumer, the OTT about the multicast service that are being offered threshold so a particular endpoint can be normally served over unicast as a certain number of current viewers in which we switch them over to multicast. So that's to enable kind of for cost effectiveness over multicat circuits that can be more expensive like satellite. We're in to multicast. So that's enabled kind of for cost-effectiveness over multicast circuits that can be more expensive, like satellite. Where this is like like on it but yeah one of the ideas is you know exposed the different capabilities of the under multicast and, you know to the needs, individual needs of each of the transports we should look into how we can leverage AMT and PREDN most effectively effectively Sure. Another question is you know, to go along with Mike's existing, about blockchain, could you token or is one of the ideas that could"
  },
  {
    "startTime": "01:28:02",
    "text": "capacity tokenizing AMT relay capabilities? to provide incentives for folks? to be AMT relays and they can get compensated for AMT relay capacity that they contribute to the overall system overall system and I'll ask one with that one last question and you can finish is you have today the map gateway is different than the ultimate you know, the end host, the eyeball And you essentially do multicast to the map gateway and then do like HLS, you know, there so that it works in the browser and stuff like that Could you co-locate them into the same? device, meaning have the map servers? sitting in the end host and then kind of looping? back this stuff within it so that you wouldn't even need a separate device with the map server? You could do everything in the end. I think you mean a map gateway um for your last point yes map gate yeah yeah um so first question around AMT relays. You know, we are building yeah, there are You know, we are building, yeah, right now we have kind of proof of you know, unicast delivery and we have proof of multicast delivery And, you know, AMT is kind of somewhere in the middle, and we're looking how we can you know, verify that delivery and, you know, that is technically you know it can be fulfilled by our multiple you know, delivery verifications. But yeah, how actually it's built is"
  },
  {
    "startTime": "01:30:02",
    "text": "more like a unicast service So we're, I'm happy to, to, into kind of how each of these delivery mechanisms and proof of delivery and settlement happens But you know, the answer is eventually, you know, we will be able to have AMT relays you know, reporting their usage So that is the intent Any, you know, operations of this infrastructure, we wanna keep them incentive to run it. That's, that's what being, you know, we need for this to work So we can't rely on the general of people. And we have need for this to work so we can't rely on the generosity of people and we we have you know pieces that with some modification, I think, can work, but would love to dig into it that with some modifications, I think, can work, but would love to dig into how we can validate and put it to the test. For your second question on Map Gateway, the idea is yes, it can be embedded into a single device So in India, there is a a kind of a that's going on in a review of a what they're calling direct to mobile projects So with events like, you know, the Indian Premier League, you have more than 400 million people who are tuning in to watch the cricket games which is, you know, it a cause for"
  },
  {
    "startTime": "01:32:02",
    "text": "concern in India that the ministry there is looking at how we can use multicast, either ATSC, or cellular broadband to multicast directs to handsets So the idea is the Gateway app can run on Android systems or set-top boxes, including mobile phones. And it's running in your background translating whatever browser site or OTT app that you're using to watch that video and that it's routing through the local host your Unicast traffic through our request router So it is something we're actively working on All right, we are beyond time This is really interesting. It would be great if we had a little more technical document to read, a reference through this, but you did some good QA. If there's some discussion on the list, that you can facilitate, that would really be helpful Yeah. Everyone have the blue sheets. Everyone sign a blue sheet Come on, that was funny That was, as funny as we get here all right thanks omar thanks everyone else uh have a one wonderful week. Cheers Thank you That's a joke usually. That's a tourless joke"
  }
]
