[
  {
    "startTime": "00:00:17",
    "text": "okay it's 4:00 where I am but it's o'clock anywhere in the world well okay on most place in many places in the world um so let's start this uh seeing that um people are coming still in but um I think I think it's a good time to start already um you been do the CH slides yeah right get now that now that I've uploaded them once more um I Al I think in particular I should really be showing this um even though all of you know that this is how we work but it's a good to have the reminder every now and then um agenda wise as always in the in the notes um there are a few announcement on new document status and then carsten has questions on how to proceed precisely with Ed and literals um I go um yeah and then there is an issue where I'd like to have a bit of feedback from the working group in the role as designated expert for assigning a tag just to make sure that I'm not missing something that actually everyone is rooting for but nobody talked about so so far um anything that I'm missing here or anything that you'd like to add um hearing nothing let's get started um I'll pass control over to cast because he has slides on most of the earlier part and I'll still do some talking because this works really better if someone who is not the author talked"
  },
  {
    "startTime": "00:02:00",
    "text": "about it so congratulations Carson um time tag um is already through all 48 and the update to the CDD Alma has been approved so this can go to the RFC editor um yeah almost almost that's why I made it slide yeah you can still fill in the details um and one very short unnoticed thing that so short notice that um it's not even on your slides yet um EF um got stuck in the adoption face but it got good uh good comments one two three four people said that yes they want to have that and that's not even counting myself because chair head off I want this too um so yes this is now a working group item great um cast I think you should already have slide control um so um yeah so let me see whether the change slides button works for a non-chair as well it does great I haven't hadn't tried that yet okay so this is almost same list except that we also have an agenda item on edn literals that will probably take the the bulk of the maybe half an hour we need um so just to explain the the status of uh time tag um that already was in O 48 and uh we had a late comment that made us change something and our responsible ad Francesca um decided we would need a second um ITF uh last call that has concluded uh this morning at uh uh midnight Pacific Daylight Saving Time and uh so we are now in the status"
  },
  {
    "startTime": "00:04:00",
    "text": "waiting for ad go ahead and Franchesca essentially needs to press a button to uh play the document back into the RFC editor Q uh it's currently in isg status which means it it's uh temporarily taken out of the uh rsor Q because of this change so uh Franchesca essentially has to press the button and I'm not aware of any work that the the working group uh um actually has to do at this point so this will go um it's cause just waiting for um pressing the button uh the next one is a little bit more work the uh update grammar um is in status approved announcement to be sent ad followup it it recently was approved announcement to be send revised ID uh I committed that re revised ID um based on the the PRS we had uh in in GitHub uh so I believe the the current draft D6 is fully updated for final approve approv but again AI has to verify that and press the button and all that button pressing is going to be a bit slow at the moment because uh the isg is at a retreat and they probably prioritize retreats things over normal uh procedure so that's the the status here and I would like to use the the rest of uh the meeting uh hopefully not the whole time um on Edan literals uh just to uh remind you of the status uh this is again in uh um isg processing in"
  },
  {
    "startTime": "00:06:01",
    "text": "the first phase the iatf last call and it has completed um ITF last call and is therefore instead is waiting for ad go ahead revised ID needed um so the the ITF last C was based on d09 and we are now working on dash 10 and uh we are almost done um as a a working group I think um so let me just quickly summarize the status first of all we have five pull requests that address review comments that came in in the context of the ITF last call um so there's always something that can be added to the security considerations um there was a little uh slim guidance on error handling for the the uh tag 999 uh the encoding indicators uh uh required the reader to have a little bit of clear Vios um so there's some text that explains things a little bit better now and there is text about how long numbers are used in in Idan and finally uh Christian found a Superfluous s an optional chrisan notices that to German TCH 999 is uh uh very very negative I um a question I think this was mentioned in the last uh inm call uh is there any idea of actually improving the title of this document because it's too long- winded and too obscure in my opinion um before we"
  },
  {
    "startTime": "00:08:00",
    "text": "publish it um anyway that's my thought that's a very good point this is probably exactly the point where where we should be doing this see again please sorry I didn't understand this exactly the point where we should be doing this uh I mean doing it later in the process would be weird uh but uh doing it uh as the result of it plus call comment I think era sent this to the meting list already and it kind of didn't go into an issue uh I think so we just missed that um that sounds like the pro procedurally the right thing to do so the current uh title is SEO extended diagnostic notation edn application oriented literals abnf and media type and it started out as application oriented L literals and then got it got abnf and then it got a media type but by now it it kind of rolls up everything we know about extended diagnostic notation so it's exactly the the bis kind draft that that people are asking from us in other places um and probably the title what would need to say that folks you're not no longer referencing 8949 and 8610 uh when you're talking about uh diagnostic notation you uh um you're supposed to reference this one so perhaps a title along the lines of edn update that says it updates the previous"
  },
  {
    "startTime": "00:10:01",
    "text": "uh that's difficult because both 8610 and um 8949 uh standard stke and this is an informational document uh so I don't know whether we actually can formally update those other documents perhaps edn extensions um and and right obviously we can't formally update you're right because might be something along the lines of comprehensive diagnostic comprehensive something on edn yeah that yeah we we definitely have to do some wordsmithing but uh uh I think it would be good to to get a little bit of the uh over spe specificity out of this title because it the current version makes it feel like it's only those things and nothing else has changed but really it is more comprehensive of and you know best practice it's kind of the release 2024 extended diagnostic notation um I think that that would actually describe it best but that's not usually what we say in RS"
  },
  {
    "startTime": "00:12:00",
    "text": "um I fully expect that we will continue extend diagnostic notation in some forms in the future um but this is kind of the the snapshot and it has the important things uh in it so it has the recent extensions and it has the the rolled up abnf and it would be nice to put this in into one term in the title is there a reason it's going to be informational rather than standards track given that we certainly want people to follow this well the this is not meant to be a format for interchange except that it is uh when it comes to to um examples and specifications and uh interfaces between tools and things like that and traditionally we have uh identified documents that that really are not the ones that that control the uh interchange as informational um we had some discussions about this uh already um the the point here is that if we break something here uh that usually won't break SEO applications it will make working with tools harder um but we don't have the same extremely strict backwards compatibility requirement um that we have for the actual"
  },
  {
    "startTime": "00:14:01",
    "text": "interchange form but this is the first time that we have abnf isn't it yes and the funny thing is that the the appendix says I hope it says that um that it is normative yeah so appendix a say this pendings is normative in an informational document good trck that that sounds like something someone in the iesg might complain about in reviews anyway that why I asked because I mean we we don't want people to diverge from the abnf right I oh we do we do um so Goan has made a proposal for how to do a single level abnf in except for the uh two Lev abnf that we currently provide in the document and uh I think that that's totally fine he can put up an alternate uh amnf that that does the passing in one step instead of the two steps we currently have and that's fine so the abnf is is normative in the sense that it describes what the valid instances of uh edn documents are but it's informative in the sense of you don't need to use it in your application application can achieve the same effect in a different way yeah that that that's definitely a fine point and and having normative Parts in uh informational uh documents may seem to be a paradox at first uh but if you think about it some more the the this essentially means there is no"
  },
  {
    "startTime": "00:16:01",
    "text": "normative intent uh for the entire specification uh but if you actually use the specification uh then there are parts that that you better stay compatible with and those are the normative parts of the specification anyway let's let's note down this issue yeah and make sure that we uh do this before we submit the next version okay so um as I said that there are five PRS that are ready to uh merge um and um we don't don't yet have uh a lot of reviews for all of them so we have two that have a Shepherd or an ad review we have one that that has another uh review from another uh reviewer who is also in this meeting right now and we have two where people didn't provide reviews yet as far as I know uh but that doesn't mean they aren't ready to to merge so I I would not have a problem with going forward uh with those but I wouldn't mind a review either these are short pieces of text so that's number one number two is the proposal by uhan mayi uh to uh replace the abnf which is uh essentially uh focusing on the idian literals part of the uh document which provides extensibility within the abnf uh by having uh a common part that is done by everybody and uh then passing on the the"
  },
  {
    "startTime": "00:18:00",
    "text": "prepared components to the specific extensions that are provided for for literals um and he's proposing to merge that back and have a single pass abnf um and um yeah I think at least two implementers have said actually that's making my work harder uh part part of the reason is if you use a modern P generator and uh uh generating a uh then this uh dual pass mechanism actually makes it extremely simple to to program um and there's also the problem that if you are merging the two levels there's a lot of things that can go wrong so the result might be really weird and no longer be implemented in in the multipathway that uh we like so that there is some complexity there there's some risk U there and of course each time a new application oriented literal is being defined uh that doesn't that wouldn't just have to um Define at second level syntax but it would have to to describe how this is actually merged into the single pass abnf which also is more work uh than one would uh probably want to have and finally of course as I said you can write your own abnf your if your implementation works better with a single pass gramar uh there's nothing that that should stop you from that and we already have a work in progress PR that could be developed to to an ABF abnf that actually works as a single pass abnf and I think we would write this up in a Wiki or or in some other uh"
  },
  {
    "startTime": "00:20:03",
    "text": "reference place that can be referenced like a GitHub repository uh so we're not actually use losing anything by going for a uh layered abnf so that makes me a little bit skeptical you really want to do this so if anybody has has a different view on this I'd like to hear it yeah so the the the main argument that can be made for single pass is that people have been doing this before uh but uh that that's maybe one one aspect um that um is rather typical for sio that we don't necessarily just do things as they have been done before but we we often have Innovations I remember all the discussions we had in 2013 about introducing tags and I think most people would agree that this was a pretty good idea anyway so if there's no further comment on this I'm going to the next slide and let's focus on the elephant that is in the room the arrow doesn't become active that's weird um so uh one of the the last things we we changed in RFC 8610 when When developing RFC 8610 uh which has an appendix about extended diagnostic nutation was we wanted to have a way to concatenate uh string literals so so they can be used to build one larger uh"
  },
  {
    "startTime": "00:22:00",
    "text": "string literal and at the time uh we thought um let's be as close uh to the the C language as possible because people are used uh to the SE language and that actually has a concatenation mechanism that is just uh putting in the the components to be concatenated one after the other with nothing in between so we have implicit uh concatenation and that's what written up what's written up in appendix G4 uh of RFC 8610 which is one of the two input documents of the document we are discussing so this works unfortunately essentially nobody has implemented it which which is uh I go ahead um I did Implement that oh you did based based on the based on the abnf in the current draft okay but that that's a relatively recent thing yes that was basically only because hey now we have an abnf so I can and I and I found the tools to do pack par so now I can do it easily okay of course I implemented it in my my proof of concept abnf edn ABN tool as well um so it's not that complex to implement it um but it's it's not like we have a large user Community with with uh lots of uh examples that make use of this so I think we got feedback from Ruan that he's actually he actually would like to have a concatenation mechanism so he can uh put things um uh on a limited length line"
  },
  {
    "startTime": "00:24:00",
    "text": "uh without having to resort to RFC 8792 or whatever the number of that um RFC is that tells us how to break long lines and examples in rfc's um so yeah again I have implemented as well but it it hasn't been I I I'm not aware of anybody um actually using this in in specifications um so the the damage is probably limited now why why would one want to have an explicit uh cination operator the reason is that um if this is implicit we cannot make commas optional um so um the commas are really needed to distinguish two strings in an array for instance uh from uh the concatenation of two strings as one element of the array um so uh by by making the uh conation which is rarely used uh explicit we can make the commas uh optional and this has been requested a lot uh by uh people so I don't have a complete uh PR uh for this yet but the actual change is is implemented in the um uh edn abnf tool in the branch edn abnf EC and um well this is the change the the the one at the top of the slide is the actual introduction of the conation uh operator which is uh as you can see an entirely trivial change to make to the abnf and uh what's on the bottom half of the"
  },
  {
    "startTime": "00:26:00",
    "text": "slide is uh the places where we can uh replace a required comma with an optional space behind it with an optional comma so we had the OC uh production before the OC Rule and OC is an optional comma followed by uh uh optional space and um so there are four places where we now can make the comma uh optional in the outer zbo sequence in the array in the map and in stream strings um so strings that that make use of the special Syntax for being put together from several parts so this is um different from the cination thing because this is about uh uh uh indefinite length uh and coding so you describe in the the U diagnostic notation which uh parts are being put together at the seore level and and not at this uh Edan language level which is a different thing anyway so there are four places that that have to change and uh yeah it's a pretty obvious thing so I I did a global substitute of comma s into OC and then of course that recursive grammar so I had to pick out the change in the OC rule itself but that's about all that that needed to be done so uh from an implementation point of view this is a rather inexpensive um thing to do so the the upside as I said is that we can make commas optional and Christian actually dug out in RFC that already thinks that commas are optional uh"
  },
  {
    "startTime": "00:28:00",
    "text": "9529 and there are several internet drafts that are missing out on com in Commerce uh which is really just U underscoring that people want optional commas because it's it's a pain uh to put them in it's a bit like like language languages that lost their semicolons as soon as pausing technology was Advanced enough the other observation is that in cddl commas already are optional so one one of the big differences between edn and cddl would uh go away um so that that's another big uh plus um yeah I I said that it has been rarely used and um it may be may have been a somewhat surprising uh feature and of course it's it's hidden in an appendix of uh uh cddl of the cddl specification which maybe didn't help its adoption either um so on the uh downside um this is the first time we are making an actual change here um we have a number of of uh places where uh we have defined things that were a little bit wobbly uh in the existing specification so it's not not the only place where uh implementers should be reading the current spec and trying to make sure to be compatible with it uh but this is something that was specified to be one way and will in the future mean something different and theoretically existing examples might change their meaning even if that changes from uh being wrong to being right um and uh what what I don't like in a"
  },
  {
    "startTime": "00:30:01",
    "text": "programming language or in other computer language if A Change Is Made um that uh when something non backwards compatible happens does not lead to an error message and that that's exactly what's happening here so if you write two uh strings uh in in edn in a place uh where um there might be multiple valued like in an array uh then this will now be accepted as two elements of that array while before it was a single uh string so this is a bit ugly uh but yeah I think it's worth the cost and uh on the Cosmetic side um I think it was specifically uh mentioned that uh the the wonderful ellipses notation which is new in this draft is now getting noise added to it uh because you have to put plus signs around the ellipses um if you want to to write down a string with with an El lighted part well yeah so we got used to the the first way of doing things and now we we are stuck with the second way but it's it's not that much that much worse I think at least after you have looked at it for at least least five minutes um then we have a red hole which character do we use for contamination my prototype uses plus uh because that's really what most languages in this space use Pearl and PHP use dot uh Lua uses a double dot Visual Basic uses ENT Powers shell uses till um SQL and and a lot of of uh uh"
  },
  {
    "startTime": "00:32:03",
    "text": "the the languages that are used in in notating crypto uh use a double pipe and then we have the carrot and and Pascal um so we have a good choice of of operators that would be possible but I think plus is the least surprising one we also have precedent in that Yang uses Plus in exactly the same same semantics uh so um yeah I think we don't have to to open this up but we can simply go ahead and decide it should be a plus so last slide um the uh procedure would be um to merge the five PRS that are ready to merging ready for merging uh to write another PR for a new title that that's not on the list yet um to write another PR for issue 42 which doesn't have a PR yet um as you have seen the actual abnf change is Trivial but we probably need to insert pieces of text uh in a number of places and then submit A-10 as a revised uh ID and then it's A's decision Ori is the the responsible ID for this document uh to th move this forward to to an isg ballot uh because it just reflects the outcome of the the ITF last call um or do an extra ITF last call first because there was a change so I don't know what or's view of this is and we probably will not find out before next week um uh but yeah in case b we will lose two more weeks"
  },
  {
    "startTime": "00:34:00",
    "text": "that's all I had so um as as as that space Sorry I think I'm echoing somewhere here anyway um I haven't heard too many voices on that change about um to give me an impression of um like where's the working group with this even though it's technically not the working group thing but or you might ask me um so I do a quick I start a quick show of hands for that yeah let let me just point out that most of the discussion we have had on this happened on the Json mating list uh because there there were people who were looking for a more Humane version of Jason that at some point I just threw into the why don't you use SEO diagnostic notation it has everything you need and yeah it was everything except for optional commas so that's really the one thing that that was uh uh standing in the way um of uh um being able to recommend SEO diagnostic notation for for Jason use as well did you just kill the the yes because I thought I could do some more like option but it's really just yes no no opinion so yeah maybe you need a title that ask asks a question yes that's I'm I'm I'm I'm I'm struggling a bit still to to phrase that in a in a in a good in an action in a question that where I can later interpret the outcome right"
  },
  {
    "startTime": "00:36:07",
    "text": "um so I think I'll like to do this in a in a two-stage um two- stage question first is like for those those in the meeting who are not um C and me um have you followed enough of the discussion to think that to to kind of make an informed opinion and I'll have another around there um to then say that whether that's whe whether you like it or not but I have you followed the process far not so the show of hands tool is the next to the chat in the top um in the top bar you probably need to ask the question whether anybody has an opinion on whether he has an opinion but sorry please say again Ask whether anybody has an opinion on whether he has an opinion so right now three people have an opinion on whether they have an opinion yeah I I'll I'll I'll cut this here and re and re for so just for for context we have 1 two three four five six seven eight people in the room who could press the button that includes uh that includes chairs and Au who also can have an opinion I I have hope I hope I hope they have"
  },
  {
    "startTime": "00:38:41",
    "text": "anyone still needs time because it's one one more voice so we have four opinions so the the question is a bit abbreviated but I think the yes and no buttons should be should be your friends here for"
  },
  {
    "startTime": "00:40:09",
    "text": "I think that unless someone has input they want to provide here now and there would have been opportunity but I'd still wait some time um I'd say the eventually as custom described it it is up to AI um where to take this where to take this next and personally I hope that um yeah let's go with another change is is the outcome there okay um not hearing anything more um thank you Caston for for the updates here um there is one question that um I don't have I don't really have slides for anything um that is on thep topic of C tag allocation um so um an allocation that is currently on my desk for review as an expert is um a request from dcore on using a tag as I'm um on a tag that describes that what is in there is dcore but how it is mostly used um is shown in the in the notes and around line 103 um that is you have an envelope structure that is an alternative between several variants some of which are map shaped some of which are list shaped and there is one entry there leave that is effectively any and that will at least I mean in in their case it's it's um it's supposed to be deterministic so it's probably there any the it will be tched anyway um but it's a pattern that I've seen here and there um that the that some any alternative is explicitly Tagged so so"
  },
  {
    "startTime": "00:42:01",
    "text": "that you can say that yep I I I really mean the list that contains those three items as opposed to I mean that note or that assertion um so my question to the group or to those present is um are you aware of other examples where it would have been super convenient to have a more general purpose tag for this and in some chat before the um before the meeting started cast pointed me to Something in notable tags that does more of the other things so where you might tag elided and Note and assertion and wrapped um can you remember cases where something like this in a more General sense would have been useful to you I cannot REM remember cases but I can imagine cases uh so for instance when designing the Syntax for CIS um we um we were trying to to get the bite count down so the the whether something is an array or not uh uh plays a role and um I could imagine that we would have come up with an alternative design um that makes use of of such a tag if there is a compact version of that so in particular if there is a 1 plus zero uh version of that but I think generally the the pattern of of having a a structure um that is to be interpreted in a certain way and then embedding something else in there and essentially needing to have an"
  },
  {
    "startTime": "00:44:00",
    "text": "escape uh from from the the top level structure into what is embedded into that uh that's a quite likely pattern to have and I think most uh applications that need something like this actually use embedded SEO so they put in a bite string and uh uh identify this as as um something that that is to be interpreted in a different way um but that that is essentially happening at the encoding level and maybe it would be good to have something similar at the data model level so I like the idea I don't think it solves the problem in in DC B where has some some additional semantics as well U but I think we should keep that on on the um uh stove uh and and see whether we can turn this into something useful thank you um the way I will likely act on this is um from from what you've said and from not hearing much enthusiasm otherwise is that yep kind of we as you say um keep it on the St but um as for DC they will likely not want to wait for it plus um plus there is some extra semantics so um I'll accept the 2011 uh 2011 request and we and we'll we'll keep we'll keep cooking this any more comments on this"
  },
  {
    "startTime": "00:46:05",
    "text": "item um hearing none um let's go into the aob um we'll meet in um we'll meet in Vancouver um we don't have an agenda yet and we haven't really started out a call for an agenda um so given that we have a meeting scheduled for in two weeks from now um everyone plays um think about what you would like to have uh discussed there and already put it into the minutes of the next inm because that is where we will do the final um where we will be working out what what is what is actually to be on the agenda which by the way reminds me that um I'm not sure 100% that I can make it to the next uh interim meeting but very conveniently given that you are here will you be around there finding mute button yes okay great so then it's um whether whether I will be there will might be might depend on the weather and I don't have to um hope for bad weather or come or or return early thank you no I hope if you're going to be at the beach or something that you have good weather so mountains actually but yes good weather will be great there mountains are better than beaches I think all right okay um any other business yeah those of the people who actually are working on covid which is at least the SI related activity we will"
  },
  {
    "startTime": "00:48:01",
    "text": "meet in another meet Echo room now thanks for the poter um with that that that having been announced um thank you everyone for your input and see you in see you in two weeks and or in Vancouver at remotely in my case Okay bye everybody thank you bye-bye"
  }
]
