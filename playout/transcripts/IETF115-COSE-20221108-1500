[
  {
    "startTime": "00:00:07",
    "text": "foreign okay uh we have a full agenda we are going to start on time um I'm Mike Jones my co-chair is Evo and we will be having a lot of good because I had discussions today so note well the note well as I've heard life and others say it's a condition of participation meeting tips do sign in to the meet Echo light uh without audio you will use it to queue when you went want to speak um that is true both of in-person participants and remote participants so that we can be fair about uh letting people participate wear masks unless you're speaking at a microphone and if you're remote make sure you're uh microphone is off unless you're actively presenting thank you this is a standard set of resources which has been in all the chair slides including the agenda from which you can join"
  },
  {
    "startTime": "00:02:00",
    "text": "we do have one volunteer for note taking I would like to get a second person who's willing to tag team and help Jesus okay I'm gonna start volunteering people if I don't get a volunteer tell you what honest when you're not presenting can you tag team on the note taking thank you very much and maybe Russ could you do it when hanas is presenting thank you we have quite a full agenda I'm going to be ruthless with the clock should I need to I would ask the presenters to try to stay within their time slots we have a lot of interesting material and discussions to be had the good news is that we finished a bunch of rfcs and there's two more about to be finished um thanks to Paul for encouraging us and for those who did the work for getting us there it's been a journey but we now have an internet standard for because they and with that I am going to switch to Russ foreign thank you next slide please so the the topic is uh whether we should"
  },
  {
    "startTime": "00:04:01",
    "text": "support a couple of non-authenticated encryption algorithms we proposed this at the last ietf put together a draft the suit working group for their firmware encryption draft is using it and um just last month the this working group adopted the draft to assign to code points next slide basically code points for counter mode with three key sizes and CBC mode with three key sizes all marked as deprecated in the Ayana registry just to make sure that people don't accidentally use this them when they think they are getting an authenticated mode the document tells them it has to be used with some mechanism such as a digital signature in order to provide that integrity next slide please um last week or the week before we got a bunch of comments about the things that can go wrong when you don't have Authentication we knew these of course but we did address these specific things Ian proposed security consideration text um next slide so there's basically three possible ways forward one is we adopt that security considerations text and assign those code points um it was observed in the um concerns that the padding attack does uh have some concerns above and beyond counter mode uh the padding associated with CBC so one thing we could do since the boot"
  },
  {
    "startTime": "00:06:02",
    "text": "loader implementation seemed to prefers counter mode anyway as we could drop CBC and proceed with just one of the modes or the third thing is we can tell the suit working group know if it's not authenticated encryption we're not going to register it and then that what that means is at least those boot loaders who are insisting on using counter mode will not implement the standard so those are our three choices and uh the consequences thereof um and I'd like to know what the working group wants to do that's the question um I I'm not making any comments I'm just relaying a couple things from the list in case people haven't seen it please introduce yourself I was in the queue so I thought I had introduced myself virtually um it helps the note taker fair enough yes uh the first was there's been some commentary that maybe we can say something that's more severe than deprecated like special considerations or something like that I'm not sure but maybe that's an option um the other comment was that there are some aeads that maybe do work out of order if you squint at them just enough I don't know I'm not a cryptographer like prayer Rock thank you Michael uh Pro Rock here um I believe for sure option one should be done let's add even though there's a concern you know the security considerations is getting along here it's longer than the rest of them oh no it's uh there are some similar things in some of the other things that I'm working on right with very long hashes so um but I do think there's a high degree of value in registering even if it's"
  },
  {
    "startTime": "00:08:01",
    "text": "marked deprecated or do not use or some other stronger language if for no other reason is that then that will encourage someone who thinks oh I found this neat thing let me go look up what's going on with this and then they see mountains of security considerations and realize why this might be a bad thing unless they really really know what they're doing and have a very specific use case so that is not to say that there aren't highly specific use cases for this personal feelings are and having talked a bit with some of the Sioux folks and things like that is that there might be a better way out at the very least if we register this this might provide a stopgap mechanism just to continue proofing things out as long as we're very clear we're not trying to advocate for the use of this broadly right Richard Burns yeah hey just kind of riffing on Brendan's suggestion about something stronger than uh than deprecated I wonder if it would be possible to do something like Mark these as reserved these code points as allocates and code points in the diameter industry but mark them as reserved and then in some suit documents uh Define their usage any a special suit way foreign it means like no one's going to come across the registry be scanning for things and say oh there's a CBC thing here I can use this um and then you'll never even get to the security I'm good entertained by Michael's assistant people are going to pull up the document and see if the security is considering um would prevent that sort of risk so Richard I would not want it to be hard to find out what algorithm that code Point meant which seems to be what you're proposing um you could do something I think maybe like list"
  },
  {
    "startTime": "00:10:02",
    "text": "the suit document that defines the acknowledge should be mostly safe usage as a reference in the registry for why it's reserved ah sure we could we could uh say only for use with x precisely so you basically Define a special use code that was only meaningful in scope of that specific usage which you know if someone comes up with a second usage for CTR or CBC like could get awkward but hopefully you know one might hope that those won't come up too often okay good I'm not sure I understood Richard's proposal there but they're all legitimate uses of I mean there are multiple legitimate uses of of country mode for example so we have in the sigma protocol the second message only needs indistinguishability against chosen plain text attack so as CTR would be a good fit there so I I I support options one or two here and I don't think there should be sort of restriction on how you use them because unless it's a very easy way to update that and that might be a very long list of things where you want to make this special cases okay chair how do we decide um so far I hear people speaking for option one and two um I heard one and two but not three which is I'm encouraged by not three and not wearing my chair hat I would encourage us to follow normal registration processes unless there's a strong reason not to I did hear you're come to the mic say"
  },
  {
    "startTime": "00:12:01",
    "text": "there may be multiple uses for these which I think argues against making them special purpose uh with that thank you for your time we can continue this on the list honest it's your turn thank you thank you Mike okay HP key um next slide it looked like a very easy document uh at the beginning and we had a discussion at the last ITF meeting which also was uncontroversial about the encoding of the encrypt or the output of the HB key uh uh then following the confirmation call on the mailing list it turned out that that was um not quite true um and with the Alternatives were proposed but those couldn't uh reach or we couldn't reach a conclusion either which is why the the chairs specifically Mike posted a mail to the list um mentioning that outcome of that call so um I put a few slides in here and for you to look at what the current proposals are in addition to what's in the working group document which I hadn't updated because obviously we need to First have a conclusion on what we updated with next slide so um Daisuke proposed made a very specific proposal and I color coded the important information here so there is um so this is the uh this is sort of like encrypt zero payload um where the use of HP Keyes oops one pack"
  },
  {
    "startTime": "00:14:02",
    "text": "what okay uh is indicated using this HP key algorithm which we would have to register and then the essence or the core of the information that is being passed around in is in this newly introduced uh hbke sender information structure which contains um which is a map containing of a few Fields um namely the chem the kdf and the aad which is uh which is populated with values from the hpke established Registries uh the ink um field is the output of the hpkey algorithm um and it's obviously abbreviated here so that's his proposal uh the next slide um Hillary's proposal uh layers on top of this and instead of um he makes a few changes uh maybe actually we go to the next slide this is sort of the textual description of what you see here is um is to use an array instead of a map thereby and making it non-extensible uh and omitting the chem and he believes that one can come up with uh processing rules for sort of guessing what the chemdan is uh uh otherwise it's it's conceptual is similar I I would say except for those those changes um although he did raise a few new points on the mailing list um a new new issues that we may or may not uh introduce um which I I were kind of completely new um weren't raised previously so I I omitted them here but in in essence those are the two proposals and that what the actually three proposals there's the original one uh neither Richard nor"
  },
  {
    "startTime": "00:16:01",
    "text": "um no Hillary no I'm uh uh or none of the the booklet proponents uh like that idea but this is kind of what we are these two proposals are but we share it in and if you have any preference on what you would like to do uh that would be highly welcome that's what I'm essentially saying with the last slide so I we don't it's like besides uh small number of people who have strong opinions we haven't come up with something yet yeah you know so I apologize I haven't really looked at all the details here but you're proposing the in it's a cozy key that's what remains in the draft in these are the two counter proposals against that and basically they are indexed by the algorithm algorithm which then creates this new this new entire format so you basically read off from the camera the the minus one but this is a cam uh and then you oh sorry this is an hpk and then your all the rest of the fields are defined is that understanding the proposals yeah like um that that's correct in some sense um we are really talking about how to encode the different fields that uh are communicated and they're not that many fields right uh there's uh the chem the aadid um the kdf and and of course the encryption field and that needs to go somewhere uh and the question is where should that go it like on a very high level it doesn't sound like rocket science learned yeah uh Lawrence dunblade um so so in this Pro in all the proposals the the algorithm top level algorithm is just hpk hpke and this seems like a Divergence from what everything else is in cozy where you kind of have us the the top level"
  },
  {
    "startTime": "00:18:00",
    "text": "algorithm is more of a cipher Suite um that specifies all the things now I know the fan out here can be quite large but one of the advantages I thought of with of the cipher suite at the top level are two advantages I see at The Cypher speed at the top level is you just have to look at the algorithm ID to know whether you can support it or not you don't have to decode a lot more deep a lot deeper into it and it allows us to register only sensible Cipher Suites and avoid uh some of the fan out so my gut reaction is that's I I would prefer that and not to diverge what code from Jose has done in the past and I think there's some good reasons for that yeah yeah that's um that mirrors um what is currently described in a working group document but that approach didn't uh find a lot of sympathy um because the the Vision was that uh the hpkey guys would register new algorithms and then they would become instantly available in in cozy HP key uh by reusing existing registry that's why um the the way how these field three fields are structured it's kind of populated with the values from the existing registry whether that's a gigantic benefit or not uh that's in the eye of the beholder but uh yeah that's at least um that's the rationale Mike yeah Michael prayer Rock yeah I'm gonna Echo similar support for the way the document's written now um I'm not saying a huge benefit to diverging massively from the existing methods that are being taken with kose registry um it seems to make sense right same reason like point at the owl go after this right uh follow a common sense approach there I have a little bit of concern pointing out to a secondary registry and then just we magically get something right maybe that's good maybe that's bad"
  },
  {
    "startTime": "00:20:01",
    "text": "I'm a little more concerned about that approach especially because HP hpk is such a you know special case right it's not really going down the same path as what we normally deal with with saying oh I've got this very well-defined family of algorithms this specific algorithm and parameter set it's more facilitating use of that in other Richard and then we'll move on so just one quick clarification on what Mike said um I I'm ambivalent on the question of how we indicate algorithms for what it's worth MLS and other hpke user did choose to define specific code points that are combinations of hbke sub algorithms so um it wouldn't be totally interesting to do that here but you would have the the lack of agility as you must pointed out I I do think that it is not an option to go with the document exactly as it is right now because we need to update to fix this code State key problem represent the encapsulated value as specific plates so there's some changes necessary here foreign thank you any closing remarks on us I think Sean just keep this keep discussing it and hopefully finding a solution at the end of the day all right next we'll have the uh seabor encoded cert yes excellent oh hi all uh yes it's you will heard Leon speaking and we wanted to give you a update on the status and ongoing work on the seabor encoded x509 certificates and also to remind everybody to come with input on those issues where yeah input is valuable next slide please"
  },
  {
    "startTime": "00:22:03",
    "text": "oh that's what I've already covered one more please and as a quick reminder of the overall trade-offs so this is all about finding the good trade-off between compactness and convenience to parse and process for iot devices while still being General enough to encode as many relevant x509 certificates as possible so these are the the different goals that we try to balance in this proposal and now I'm going to quickly relatively quickly step through a number of open issues and then depending on time and interest maybe actually gather some input but most of it will be for your information and then if there is interest there is definitely we're definitely interested in hearing input on basically all of this even though we have our own proposals for solving most of them um so a recurring topic is whether the the minor optimizations that was proposed in the beginning should be kept because they make the the processing a bit more complex but they are needed to actually reach the very most compact uh cases for iot profiling so we are basically inclined to keep them unless there is a big outcry for making it simpler and more streamlined next please and so this is about the encoding of signature algorithms and as some of you might know there is still sha-1 being used out in the wild meaning to actually be a general purpose uh format we need to handle these types of of uh signatory encodings and there has been some discussion of whether they should be punished in terms of being a longer having longer encodings but we"
  },
  {
    "startTime": "00:24:02",
    "text": "think that as long as they are used for many CA certificates it doesn't really make sense to actively punish them that rather we should keep it in the same range as other signature algorithms so we propose to use normal to bite assignments to cover these signature algorithms next please so this is also more on the info stage that there has been already observed it's been observed that what we're proposing here should also benefit in terms of revocation lists and OCS ocsp messaging and the rice and Ericsson together have been having a multitis which has been looking into this so this is something we hope to be feeding back into the existing proposals next please and this is also just uh to to make sure that it is self-contained the the draft in in terms of actual usability for iot because right now we we list a big number of algorithms and not all of them are of course suitable for iot so this is just a sanity check to make sure that we keep the knowledge on what are actually good algorithms for iot cases that we try to promote next please so this is this is a bullet where input from a larger audience would be valuable even though from our perspective there has been discussions on whether we should make propose more complex structure where broccoli uh well back up one step so basically that that there could be certificate chain optimizations done if we would allow to pass parsing of certificate chains uh but from our perspective we see that this would add to Max much complexity to"
  },
  {
    "startTime": "00:26:02",
    "text": "the the parching ending and make it less suitable for the iot device the scenarios that we at least I care deeply about and that rather it could be handled through additional cozy headers and external broadly compression but this is somewhere if if the audience has strong opinions we are very interested in hearing them but now we step on and take eventual discussions at the end next please so this is a short break to to upload many insightful observations from Hillary and we are addressing them and I will speak about some of them next please so this is the basically work in progress to handle kind of more Corner cases that we had missed in the initial proposal so these are all kind of fixes to make it more general for the next version of the draft next please and this is an again an important highlighting that currently the IP range encoding could theoretically break the seaboor int encoding if you would have since we encode differences so if you would have a crazy subnet where you would care to cover too much of the IP Subspace you could in theory break it and instead of of trying to address this as we see very much Corner case we we should make it clear that this is a limitation of the existing proposal next please oh this is uh yet the the last issue where also input from audience could be really useful that Hillary made the real life observation about the authority key identifier"
  },
  {
    "startTime": "00:28:00",
    "text": "that the in in real life actual certificates lack one of the the sub parameters and this can be fixed by allowing null encoding to to cover these cases but that leaves two of the other subparameters which we in our investigations have not found to need null encoding as well but we haven't done extensive studies so if this is uh if this is a real life problem we should allow also these submar meters to be encoded as null and this we are open for adjusting if if we think that it's a problem that needs addressing otherwise it's all about clarifying the the assumptions that we have made and that was the last issue that I wanted to present to you and I'm of course we're very happy for comments now or on the mailing list as we are progressing with this work thank you any questions if so please join the queue all right um thank you Joel uh at this point we'll turn it to Tobias for the BLS key representation draft uh next slide so this is just a quick update and we're Fisher on this draft so it defines and registers the required parameters"
  },
  {
    "startTime": "00:30:01",
    "text": "um Diana for the graphic key representation for the Beretta Lynn Scott elliptic curve family so BLS curves for representation in both koseki and jwk uh next slide uh so so why do it um well Beretta Lynn's got um elliptic curves have a a couple of special properties to them known as um they are known as peering friendly um which allows different signature style Primitives um two of such Uh current drafts of the cfrg BLS signatures is one notable that has been addressed for some time there is also a appearing friendly curves draft that was recently updated which formally defines the curves and then lastly there is also another signature scheme draft um that I'm also a co-author of that was newly adopted at the cfrg since the last iatf meeting and both of these make use of the VLS curve which is um as as as per industry adoption the most popular of the peering curve family right now next slide and so just a very basic status update um as as spoken about it's a simple draft primarily registering these perimeters and the draft was adopted um since atf-114 we published recently an update which added jwk based examples and I'm close to filing a a PR and making a publication for adding the koze key examples yeah it looks like that's it oh that's it"
  },
  {
    "startTime": "00:32:06",
    "text": "Tobias do you have any questions to the working group at this point or what actions would you like them to take uh no no explicitations Beyond um just helping to review the draft because the key examples should be um and um fairly soon in the next couple of days um so reviewing it um with uh I guess with an item next steps as per the processes as um yeah as as probably the next steps thanks okay are there any questions from the floor all right um thank you tobios um now I'm going to switch roles and be an individual participant for presenting another draft that uh Tobias and I had written together this is the claims in cozy headers draft so what does it do it enables us to represent a set of sieber web token claims in a special cozy header they're put into a header parameter and a object in a structure because otherwise there would be name collisions or number collisions between the header parameter namespace and the claims namespace"
  },
  {
    "startTime": "00:34:02",
    "text": "um so why do it there's use cases and this first showed up in Jose most of a decade ago where it's useful to be able to have for instance an unencrypted version of a claim that you use for processing an encrypted jot or an encrypted seabler web token or cosay structure for instance you might want to know what the issuer is before you even try to decrypt it um Jose and jots had that we did not we adopted this draft to be able to do that foreign draft that does one thing it was adopted in July thank you we just published 01 it is a one-line change from zero zero that changes the motivating example to issuer um I will say uh you know having reread it again fresh with fresh eyes in the last few days I think it would be beneficial to add an example and I know Kirsten had asked about well should we have ADD cddl as Kirsten has want to do I don't see Kirsten here there must be conflict but I intend to ask Karsten about that offline um so my question and this is where Eva's gonna have to chair for a moment is it time for working group last call this is stable and I don't see much happening to it beyond the current status other than possibly adding an example can can we can add a working group let's go and live there"
  },
  {
    "startTime": "00:36:00",
    "text": "either you are muted if you're trying to speak to us why here thank you so um I'd like um I actually didn't understand the example you mentioned here um with the um unprotected yeah why sorry why not use unprotected header and put uh information in that so so I think I think an example would be great that's that's that's true and maybe maybe that's good to have before we have working group classical I know there's been something on the mailing list about unprotected headers it's not clear to me that they're the same thing because they're a different name space one is claims one is header parameters they're distinct Lawrence yeah I was just going to answer that question is that you know if you're if you're decoding uh you know mime headers or content type headers you have access to that parameter and then you can switch on that before you you know bring up the seaboor encoder or whatever um so it seems like it's a definitely uh benefit implementations now just to ask the questions but very concretely this ISS promotion applies to both the protected and the unprotected header or just the protected header in a because I signed zero there is no unprotected header"
  },
  {
    "startTime": "00:38:00",
    "text": "um if you're using because they signed one structure I believe that there is an unprotected header it's a fair question whether we want this header parameter to appear unprotected ever and that's something we could discuss if we do have working group last call which is up to EVO to decide um you could add that as a working group last call comment um are they hear me now or is it still can you speak louder okay um so maybe we can see in the room if there are people that are for or against the working group classical I think in either case we will confirm it on the main link list if there is enough support so in the room maybe let's use the 14th to do you know how to start that either I think so so those that uh are in favor of starting the working groups last call please and raise your hands and see if there are people that are against it please also um will have a separate vote for that"
  },
  {
    "startTime": "00:40:00",
    "text": "I would a few more seconds okay so I see 11 people believe we are ready for working group let's go there some people that think Heights they would have a little bit early um for the minutes 12 people are four and two are against uh if the people have um if people want to clarify why they think it's are still not ready please pick up on the mic now um we we just raised two open issues uh and the need to add an example and to find out whether these fields also applied to unprotected the unprotected header it sounds like uh it would be good to at least update the document briefly and add that example to think that could happen quickly actually there was a third issue as well with the cddl like having three open issues appears to be premature to call it working for bus call right yes okay um but with those issues resolved I guess then we'll be able to go for working group let's go um and that this migrating character results uh so yes like please and take those action items on those three issues and and we can go to working with classical"
  },
  {
    "startTime": "00:42:08",
    "text": "hmm thank you we're at time and I see that Q is cleared um so let's move on to Mike Pro Rock talking about post Quantum signatures thank you all thank you Mr Jones wait for that deck to pop up uh Mike perock here um uh kind of continuing on this is the second update since the working group uh gratefully uh gracefully accepted this draft to help us move it forward um next slide uh just a quick recap um on uh post Quantum and why we're dealing with this and it largely is because we're seeing interesting changes to the potentially threatened the way we've been handling especially public key cryptography and certain signature methods based on use of quantum entanglement and all sorts of other fun things with qubits that help us unpack keys and relationships within data sooner we have uh selected to go after three algorithms here and we'll come back to some implications from that uh from signature scheme standpoint um but the ones we have gone after are two lattice based ones as well as a hash based approach based on feedback from nist and where things are at as far as the candidates for standardization next up uh so once again as mentioned we've gone after three that's Sphinx Falcon and I lithium and the key thing here is to get us a leapfrog past and be able to start testing effectively for interoperability with things that do require signatures"
  },
  {
    "startTime": "00:44:00",
    "text": "whether that's cwts jwts verifiable credentials over in the uh um World Wide Web Consortium side of the world and things like that so it's really setting ourselves up for cryptographic agility and to be able to set a path for registration to Future post Quantum algorithms and Signature suites as required possibly by kose and or Jose usage and also to get these Iona registrations in and because of the parameterization especially with some of these algorithms that can be quite tricky let's make sure we've very clearly defined that and how we would use those here pointing back to cfrg and this next slide so big downsides large key sizes large signatures uh typically larger signing times verification times are very nice next slide a couple of key draft updates here we've gone ahead and completed out the sections on Falcon and sphinx plus we've gone through and detailed out the likely parameter sets that we'll see usage though these are obviously subject to change up until these algorithms are fully standardized at nist and elsewhere we are using a combination because of some of the unique parameters based on the way especially the Jose spec is originally written around kty and ALG so that we have the family of algorithms specified by the kty alga is specifying the actual algorithm itself as well as the parameter set in use next slide next steps this is really the big question for the working group um gut feel at this point especially seeing possible lags uh pot with one versus another uh is should we split this into three drafts now that the bulk of the work has been done we can pretty easily do that and instead of having one post Quantum uh signature scheme draft that covers the three initial ones we could split those up so that they can be actually moved forward should that occur"
  },
  {
    "startTime": "00:46:01",
    "text": "sooner with one versus another uh or so that we can let one die if we need to for whatever reason the proposed names at this point would be draft ietf cause a dilithium falcon and sphinx plus um we are awaiting obviously finalizational parameter sets love any feedback from that if anyone's heard anything that we haven't and generalized guidance from the group since this is kind of the first draft I started on with iatf on anything I might be uh messing up on or could do better so thanks so much and do want to make sure there's a good shout out to Ori all the others who have been helping us out especially Christine and uh actually some of the authors of things like Sphinx and Falcon Etc okay um I'm Quinta goodness uh just one comments um because three of them they they might come out at different times so I think it's a better idea to have separate documents for all of them because uh yeah they're a good chance that there will be finalized by this at different times and you don't want one to tie down the you know the unfinished Hideout the finished one thanks very much for that it's very helpful Richard yeah thanks so thanks for interesting on the Mike I think this is an obvious no-brainer to get these uh algorithm identifier specified basically as soon as the algorithms are done so I think my main concern here is not getting too far ahead of the actual algorithm standardization uh but it's like as soon as those come out of nist like let's roll um as far as the document number I think Quinn's point is probably good um if if not for that I would say just put it all in one not incur the process I've ever had three times but if there's if there's risk of if we can go faster with some of them by by decoupling them by all means"
  },
  {
    "startTime": "00:48:00",
    "text": "sorry one of one of the authors I agree with splitting them up for the reasons mentioned and also for the reason that the Sphinx test vectors take up most of the specs and and most of the container compute time and generating examples in the test vectors John hi yeah I'm just um we had a hackathon on the weekend for uh the x509 side of things doing exactly this with the PQ keys and signatures so I'm wondering there's obviously overlap here so we should probably talk and you know make sure because the object ID is the same things that you are bringing up are the exact same things that we're dealing with plus we're also doing the composite so that would be something to also maybe considered for this yeah ABS absolutely and uh also appreciate all your inputs on the entry stuff we're working on and um I'm very thankful that we're having conversations and have like a mailing list for this stuff because it's new and we need to cross communicate on this so thanks again for your support on this what what working groups and or individuals who are doing this work in the context of X7 on yeah it's mainly people from the lamps working group because it's dealing with the pki artifacts that was where we started from but obviously PQ goes beyond just the pki artifacts right it goes everywhere so um and so there was actually a side meeting yesterday too about talking about a PQ side working group and putting together a charter for all that so yeah I guess we'll see how that that continues so yeah and in a quick context for those who might not know Michael Osborne and Christine Klosterman are co-authors on this who uh authored kind of the root level stuff over at uh the lamps side of things so we're in very close communication with both of them on pretty much a weekly basis okay but yeah yeah in terms of our hackathon like we're going to have we're going to continue to work so we can invite we're happy to if we people want to test Koji artifacts or whatever with us we're having monthly meetings I sent that to"
  },
  {
    "startTime": "00:50:01",
    "text": "the labs mailing list I could send it to this mailing list and invite people to if they want to participate because I'm trying to come up with a framework for automated testing and to make sure all these these new things work together so so I'll do that then awesome thank you thank you Ori and then we'll cut the cue just just to say that Mike and I and others have all had conversations around the key representations and the encryption side of this and if the working group desires for us to you know create two new documents in addition to splitting these ones out I don't think it's tremendous amount of work and be happy to help support that initiative any closing remarks otherwise we will go to Hank no just really appreciate all the time and especially the support is a uh comparatively new author compared to some of the people that actually know what they're doing in this room so thank you all foreign he can explain why that happened but anyways so I'm Mike sorry hello oops um yes um I'm Mike I'm part of this git working group that's been very newly formed um some of you probably don't even know it um it's it's supply chain Integrity transparency interest working group we have our uh first real session on Thursdays we're happy to to join um we wanted to um discuss one specific Topic in this group here and that's around the transparency aspect of it so if you know transparency logs you know for certificate transparency for example they all have"
  },
  {
    "startTime": "00:52:02",
    "text": "um specific formats on how to represent um you know sign tree heads inclusion proofs and all of that and this again now becomes a topic for more General Supply Chain transparency and so as part of the skid working group um we defined uh well an early definition of what we call a receipt and that's basically a bundle of um assigned tree head and an inclusion proof for counter signature leaves so what does it mean um it means you have a a cozy sign one message that's your supply chain um in a way artifact and then um or statement I should say and then um that becomes part of a transparency log and so you bind those two together with a counter-sense structure for example that's defined and cozy um so I'm not I don't want to say too much about the details um so I I think the main point that I want to say here is um we defined this new thing that's called receipt and it doesn't neatly fit into any existing cozy structures so it's a new thing and I think maybe you're switching to the next slide actually makes more sense here so we had an early attempt on trying to shoehorn receipts and all the transparency bits into a signature algorithm and essentially reusing cozy as it is that was not well received in the community because it was essentially a bit of an abuse of what the signature algorithm means and it was just too much so a better approach is just treat it as a separate thing and you know there's this whole transparency aspect to it when we don't want to hide it and that is an inclusion proof and it makes sense"
  },
  {
    "startTime": "00:54:01",
    "text": "to you know expose that to the to the top essentially so and I guess what we're asking the the Cozy group is um does this make sense in principle um and then I guess there's a question of the the Registries that cozy has so where would that fit in exactly um would there have to be maybe a new registry for things that are maybe parametrized in our case so one example is that there's not just a single type of you know Ledger or transparency log they have slightly different um you know let's say Mercury algorithms and so there has to be some some way to to express that and yeah so there must be some kind of algorithm or Ledger type um and I think that goes a bit uh back to the to the remark earlier that was on um ciphos tweets you know shouldn't be a single long thing or should it be a bit split up but anyway these are kind of details and I guess yeah I have just one minute so that's um so think about that I don't think we want an answer now but also join us at skit and maybe um yeah and we've we've got five minutes that you you can use some of that if you want is this 40 seconds yes we have uh five minutes of all other business with no claimants yet okay good thank you so so finish in a natural way okay so that was this one topic I don't know if you already want to get some feedback because this is a completely separate topic um Hank so what's up this is Hank just quickly um on the receipt um so that definitely is a core element in the um the base work we are doing in skit and and we we really need this in"
  },
  {
    "startTime": "00:56:01",
    "text": "cozy so uh we will do this as um individual document here very transparently we hope for our comment we'll be talking to Russ a lot so so you warned us for the biggest caveat so that's why we are where we are and we will create a stable proposal how this looks like and then I hope uh if everybody is satisfied enough that we can actually ask for adoption but this is it's not this this is not yet but but Sooners actually I think so that's just my comment that we want to proceed with this um not in a in a slow pace but actually want to have a first uh stable thing that is adoptable very soon um okay so let's go to the other topic okay so now clear everything you had on your mind um a very separate thing um probably most of you know about timestamp tokens than the whole thing uh they're mostly used to you know in things like signed a software packages used in Microsoft authenticode but also for signing documents PDFs so it's just to make good use cases to make um the verification of a signed document be valid for longer than the original certificate was valid for so the idea here is cozy doesn't have a header parameter that allows to embed timestamp tokens in the unprotected header so this is simply a proposal to say let's define the code point and um including you know how to actually what to do with that how to embed it and then applications can use that to timestamp Cozy messages so it's very simple um so clarification question did you say unprotected header yes because it is a"
  },
  {
    "startTime": "00:58:00",
    "text": "counter signature by Nature and that's why it can't be in the so first you have to do the signature and then the timestamp is against the signature bytes okay Russ is nodding out in the peanut gallery there thank you anyone want to join the queue or provide feedback Hank so this is Hank again and and this is a comment not actual feedback so this is a migration path uh solution we don't want to use a tsts forever but we accept the fact that they are the most common and established thing to use today and so uh if we want to uh move to something cooler like say an Epoch marker that's fine or assigned to see what time check that's cool but for now this is I think a necessary solution when you want to use infrastructure that is in place and that's why this uh could be perceived as a mid term migration path solution but if we don't standardize it oh just random that's all right all right thank you we are one minute from time I appreciate all the engagement today as does Evo and we look forward to seeing you all on the list thank you for coming okay hello everybody thank you for taking notes"
  },
  {
    "startTime": "01:00:08",
    "text": "like most of my comments assert representation how do we update those two do we update those two in this graph or we make a separate draft with to get updates to go to uh what are those two rfcs do one of them is for brain games which has also different certificate types I just just sent it to Village I actually sent a list back in July and it's a value to me Pacific I think dance with me yes but but that makes your ass updated saying you want to send this to the others we have these two resource records where certificates are held right now"
  },
  {
    "startTime": "01:02:03",
    "text": "um in mind thank you"
  }
]
