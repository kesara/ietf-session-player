[
  {
    "startTime": "00:00:07",
    "text": "hmm hi brian [Music] okay i think we can just give people a few more minutes to get back from lunch you"
  },
  {
    "startTime": "00:02:07",
    "text": "okay i think we can do some slow start welcome to energy brian with us removed appreciated staying late okay so rtf note well please take a look if you have not seen it many times this week and if even if you did still take a look uh housekeeping uh please please scan this qr code so your name can appear as attendee uh if you want to ask the question i would appreciate if you use on-site to meet echo but there are not so many people today but still it does make chairs life easier if you use the application to join the queue so i can manage the view from one place and if you're participating remotely please keep your video off so again i was going to say please wear the mask but everyone is doing it already great yeah oh completely forgotten we need meanness taker come on i think we need to either like random number generator to randomly select people in the room come on i guess we really need this really thank you very much"
  },
  {
    "startTime": "00:04:00",
    "text": "i'll buy you a drink after uh agenda i think i got the time wrong but so ignore the time slot time zones are hard for me so what we have today i'll be speaking for a few more minutes and then we gonna have quite a long interesting discussion about cyan and nicola going to talk about it and brian and i will keep the room in order and then we have two presentations each for 15 minutes one is overlay routing problem statement and the second one is separation of data path and data flow sub layer so any last minute agenda questions suggestions comments disagreements about what you're going to talk about okay looks like we all good so what's happened since vienna so we had an interim on san architecture there is a link to materials from the slide deck if you don't know where to find the interim materials and we passed the research group last call for pass properties but we're currently painting the updated version so i think even shepherd write up has been done as soon as uh rhiz submits the updated versions we're probably going to advance the document and that's all i have for brian any comments did i miss anything nope all good okay so then we move to san an you're going to share the slides or you want me to press prison"
  },
  {
    "startTime": "00:06:03",
    "text": "oh beautiful look yeah i'm grinding you technology works all right i'll get started yes like stay close to the mic probably okay yeah all right so okay the slides are here good uh so first of all uh hi uh everyone my name is nicola from 88 zurich and today we will be looking at scion the next generation internet architecture specifically we'll be looking at a component analysis so before getting started i wanted to quickly touch on some background information we are not going to talk about how cyan works in details today we are not going to give an overview we have already done that before so if you want to know more about that please refer to the existing draft that we have been discussing at the interim meeting the draft is linked in the slide deck but i'll still give you a very quick overview about what scion does and what it is just in case you have not heard about it before it is a pathway internet architecture it is inter-domain and when designing it we focus on certain properties first of all availability and availability means not only availability in case a link fails but especially availability when there are adversaries in in some parts of your network and this is very important when you do build something that has to be deployed inter domain where there's different domains and not they they don't necessarily mutually trust each other security is also a very important component i'm talking about routing security so"
  },
  {
    "startTime": "00:08:01",
    "text": "[Music] making sure that traffic cannot be redirected and ultimately scalability when it comes to being able to deploy scion on a large scale were all very important when designing the architecture so it started as a research project back in 2009 and the architecture somehow slipped out of the lab so today it is in production use by a few isps mostly in europe and specifically in switzerland the inter-banking network is now being migrated to zion so whenever you pay some money from one bank to the other then these banks have to send some bits to each other and this is being migrated to use zion that means that we have gained some deployment experience and there's also several uh implementations which is why uh oops i'm sorry why standardization is uh quite important right now and that's why we're having this um this discussion here so what happened so far let me just get to the right slide before getting to uh to the discussion i wanted to just remind uh of another property of scion and this is the property of isolation domains so in cyan autonomous systems are grouped into isolation domains and they are the big circles that you see in this in this drawing here and each node represents an autonomous system it is very important to remember this structure because each isolation domain has its own root of trust and this is independent from other isolation domain and this property is quite important to understand how the architecture works this is also important because of scalability because the routing process is somehow split into an intra isd and into an inter isd so just keep this in mind and we'll get back to this concept later"
  },
  {
    "startTime": "00:10:00",
    "text": "what happened so far so we have been um discussing scion already at the itf 113 we had some discussions at the routing area open meeting we had a site meeting uh to brainstorm about possible next steps and so i wanted to thank the chairs of banerjee for actually giving us for now a home where to have discussions about the architecture so back in june we actually presented a first overview draft that describes the architecture from a high level and during that discussion there were quite a few uh questions about uh about zion and that's what we're going to try to look into today so the questions specifically were mostly about scion and its components scion is designed as a system so there's few components that interact among each other and there are quite a few questions about what each component does and what the dependencies are between those components there were also questions about what protocols are we used what protocols are not reused and eventually why so today we're gonna try to uh dig into these aspects we are not uh gonna be looking at the motivation i think in our last discussion there were some mentions of a gap analysis draft and in the end it seemed to me that it was more important to focus on the components rather than on the gap analysis so we will not be focusing on on the gap analysis today so i guess we can get started and we can start the discussion about components by the way if you have questions i think we have impul time later so if you can keep them for the end and then we can uh yeah we will have extensive time for for discussing that so when you want to send traffic on uh on scion well as an end host going bottom up you basically need to have a data plane that is doing pocket forwarding and scion is path aware"
  },
  {
    "startTime": "00:12:00",
    "text": "meaning that cyan packets actually contain an as path inside the bucket header and the data plane is taking care of well getting this path and then doing the actual forwarding that means that the data plane has a dependency on something that has to provide these network paths and since ion is focused on security we want this network path to actually be authenticated and that's why we have a control plane in scion that is taking care of uh figuring out uh basically discovering routing information and disseminating it to the data plane in order to authenticate this network path it is important to have some cryptography that can basically do this authentication and this is why the control plane is actually relying on the cyan control plane pki to uh basically get certificates and authenticate um this information and scion has its own pki exactly because this this authentication process is based on the trust model that is provided by isolation domains the big circles here in in the drawing so let's start looking at the first component in more details let's go from top to bottom and let's look at the control plane when it comes to the control plane we mentioned how flexible trust is a very important property of cyan so we want each isolation domains to have its own roots of trust and this is what we call trust root configuration or trc that you see um in the drawing each ise has its own roots of trust and it is independent from other isds and this allows and hosts in scion to flexibly decide who they want to trust and who they don't want to trust so this feature for example is quite used in the banking"
  },
  {
    "startTime": "00:14:00",
    "text": "network where basically banks can have communication among a subset of trusted parties and another very important property that we wanted to have in scion is to is to have to make sure that in case an entity is compromised then the security of the whole isolation domain cannot be compromised and this is why within the isolation domains there is actually a voting mechanism in the pki so that very important changes to the trust and to the certificates have to be carried out only if there is consensus and this not only prevents that a single compromise entity can somehow take over the whole isolation domain it also makes sure that governance is somehow multilateral and this is also something that we see works pretty well in in the finance network so when it comes to inputs and outputs when we look at this component well the pki is quite independent so there is only a minimal need of some initial bootstrapping information so autonomous systems have to initially let's say meet have a ceremony to prepare their initial certificates there needs to be time synchronization between autonomous systems so that certificates can be verified and besides that there is not really other strong dependencies when it comes to the to the pki and what the pki does to the whole architecture is that in the end it provides this trust policy expressed as a trc and then it also provides each cyan autonomous systems with a certificate an a certificate that then is used for for routing so moving on to the next component the control plane is the one that is actually doing the routing and if you think about it in terms of input outputs well the idea is that the control plane starts from unexplored topology"
  },
  {
    "startTime": "00:16:00",
    "text": "uh it doesn't know anything about paths and the goal is that we want the control plane to be able to figure out network paths so we want the topology to be explored and we want this to be done securely so we want each let's say a path segment to be actually authenticated and that's why this component takes basically the certificates from the pki also as as an input and it relies on them for for authenticating path information so the control plane basically does this process that we call path exploration and in detail it is called beaconing so that's how it it explores the topology once this topology is explored these segments are actually made available by the control plane to end host so another function is to disseminate this routing information from the control plane within an autonomous system to end hosts that actually want to communicate there is authentication that means not only on pot segments but also on um control messages so that basically a scion host receiving a certain message can be sure that this was created by the entity that claimed to have created that that piece of control message in addition to this scion is multi-path and that means that the control plane has to be able to provide multiple paths to end hosts and we want this to happen also somehow scalably which is why we use this uh concept of isolation domains to split the routing process into an inter isd and intra isd and this two two level two tier hierarchy somehow helps with the scalability so as an output of the control plane we basically get this authenticated segments and these are really hoped by hope so per aes and interface and this is what"
  },
  {
    "startTime": "00:18:02",
    "text": "in the end is made available to the data plane the data plane is the one that is doing the actual forwarding in scion so it takes these segments from the control plane it also relies on these authenticated control messages and what the data plane does in the end is to really create packets with a full path uh path inscribed in the header you can see this in in this little drawing here and this is what is actually used by scion routers then to do the forwarding as an input you can think of application requirements as being part of what is demanded to the control plane so if you have an application that is latency sensitive for example you can ask the science control plane give me a latency optimize path and well uh the data plane will basically um select a path that that can give you this property the fact that path is actually inscribed in packet headers is very interesting first of all because routers then become very simple they don't have forwarding tables so there is not really need for dedicated hardware but segments are authenticated at each hope uh in routers and this is actually happening with a very simple as operation so it is something that can be offloaded uh by any cpu which also makes scion routers very easy to deploy on any let's say commodity hardware so in our implementations i think we can run uh up to like some 100 gigs on a let's say commodity server and besides that one property of the data plane that was really part of the design is that cyan is only in inter domain so it only functions when packets go from one as to the other when it comes to inside an"
  },
  {
    "startTime": "00:20:01",
    "text": "autonomous system cyan by design reuses what what is existing so that means that the existing both routing protocol and the existing forwarding plane can be reused so that could be let's say an mpls or an igp or segment routing and so in the end the data plane is what is uh providing this inter domain multi-path communication multi-path is also interesting for availability because and hosts have the ability to switch path in case something breaks and this is also important to keep in mind that selection in scion is really pushed to handholds which helps keeping the network and routers relatively simple another design property to keep in mind is that cyan uh splits uh basically locator and identifier uh when it comes to routing so routing happens based on these isd and is tuples and end hosts can be addressed with existing addressing schemes so existing deployments they use ipv6 or ipv4 so i think that's that's it when it comes to the components in detail so to summarize uh we described how cyan relies on three fundamental core components for um for the architecture to function we have seen how the pki only requires some initial bootstrapping information and then it basically provides certificates and trust policies to the control plane the control plane is the one responsible for doing the actual routing which is basically discovering the topology and then making this routing information available to the data plane the data plane in the end is the one constructing end-to-end path and doing the actual forwarding which in the end gives you this inter-domain multi-path uh communication so"
  },
  {
    "startTime": "00:22:00",
    "text": "just a sec so before wrapping up i wanted to briefly mention how cyan interacts with existing protocols when it comes to the control plane pki we mentioned before the truss model scion has these isolation domains and each one of them has its own roots of trust and this makes it somehow difficult to reuse existing pkis for example the web pki where all the root cas are item potent and this is very this is very different in zion and i think this is something that basically motivates our approach and adds this concept of multilateral governance on the implementation level uh well the pki reuses x-509 certificates but of course then on top of it you have all this voting mechanism to let's say find contentions consensus among the uh autonomous systems are administering an isd and so on so that's what makes the control at the control plane pki a bit unique on the control and data plane we mentioned before that cyan reuses intradomain whatever is existing so both in terms of routing and in terms of forwarding and this was by design another let's say topic that is somehow close to scion is rpki and people might think okay they're trying to do the same thing but cyan does provide you authenticated path information but keep in mind i mentioned that n-host addressing is not really part of the core scion so that means that scion does not really have prefixes and there is not really a prefix let's say origin authentication in cyan which is why if you look at cyan transition mechanisms that are not part of this draft and this discussion but we do have some proposed transition mechanisms from let's say ip to scion and all those mechanisms they do actually build on top of rpki in order to do"
  },
  {
    "startTime": "00:24:00",
    "text": "uh basically prefix origin at the station so i think the two technologies are somehow potentially uh complementary one reason for scion having its own control plane is that messages are all authenticated and this is something that i think we don't see in many protocols so we think this is something novel that cyan could also contribute and yeah when it comes to the data plane and host addresses are reused so there is not really need to change that there are some gateways that are needed in in case you have uh that's let's say coexistence between uh cyan and the existing word but we believe that in the end the amount of change needed to introduce cyan is is reasonable but at least you don't have to rip off all of your network in some way i would like to summarize basically we discussed how cyan has three main components this is really the bare minimum that you need to deploy cyan in your network data plane control plane and pki we have seen how the pki is the more let's say independent one in the sense that it does not really rely on any other components but then we have also seen how the data plane and control plane they uh let's say hierarchically rely on each other in order to provide certain properties so i think now we have quite some time for a discussion first of all uh there is our draft and keep in mind this is really a zero zero so it's something we try to put together rather quickly so we welcome your feedback on the draft we actually already got some some feedback so i wanted to thank the people that have been um reviewing that um i hope this helped to clarify uh what scion core components are and how they depend on each other i think we can go more into the details in some directions if you have specific questions i think"
  },
  {
    "startTime": "00:26:00",
    "text": "the goal would be to pave the road for future work on on scion could be within the ertf eitf so we first of all want to advance the two existing drafts and hopefully make them of better quality but we also want to get started at some point with the initial science specification so the idea is really to document what exists already what is deployed today and we believe that doing that might also be a very good way to first lay down what we have today and then pave the road for uh later on uh eventually standardization so having more work and getting to work together on on this and this could be done here or well we don't know yet so thank you for your time and yeah i'm looking forward to to the discussion so nikola thank you very much um applause uh so uh i had one quick question with my rg chair hat on first um and then well get people time to get into the queues to ask questions i saw a couple in the in the jabber room that the zulu room that i'd like to see you know come up with the microphone um so you said you'd like to see or you'd like to advance the two existing drafts um are you talking about publishing those as rg drafts within panargy or just getting them like im improving their state right so for example i read the the um um decomposition draft uh i think that this presentation was a way better presentation of the decomposition than the decomposition draft was so there's like which is you know when we came into the interim that's what we said to to prioritize so well done um but are you looking to publish those as as rg drafts uh well first of all uh yes we had two more weeks to do some thinking uh this kind of exercise i think it was very helpful also for for us to do some"
  },
  {
    "startTime": "00:28:02",
    "text": "thinking on components and we definitely had more time for the presentation so this extra two weeks we uh we did a lot of brainstorming so we'll definitely try to uh improve that draft um that the please take that as a compliment on the presentation not a complaint about the draft yeah yeah absolutely but um yeah we got some better ideas later on let's say after the draft submission deadline was closed um when it comes to improving that and so ideally it would be great if we could uh document the existing it could be within the research group um i think what we are looking for now is just to get some feedback from from the community um so definitely interaction with the research group would be i think positive for for now i'm not sure if we could get some of the drafts to have to be let's say an informational rfc or something like that but i think this would be clear over time thank you very much with that the queue is open for questions and discussions i'm going to call out eric klein because he had some very good questions but alvaro coming up first that's the thing uh hi alvaro futuroi technologies um so understand there are three components um how independent are they can i have the control plane but use a different pki or authentication mechanism once i resolve the routes in the control plane can i use a different data plane uh or or or do we need the three components and i know that the three components make up scion but if we needed to develop them or standardize them or or implement them or whatever independently uh you know what are the dependencies"
  },
  {
    "startTime": "00:30:01",
    "text": "if we finish the control plane work for example but we don't have the pki work does that mean we can't do anything or i'm just trying to figure out if there are alternatives or flexibility with the dependencies yeah so having the whole system or components working together i think helps you to achieve most of the properties you could i think you could use some of the components independently but you would lose some of the properties so i think i have some backup slides at the end about this okay yeah so it was kind of uh all right so i think it really depends on components so for example the pki i think the pki is the one that is a bit on the easier side because it does not really have uh external dependencies and all all that it does is that it provides you this per isd trust model where you have your own routes of trust you have the voting you have a way to update certificates over time and so this is used by the control plane but it could be used by um by other things so for example we have a scion extension that basically derives symmetric keys between any two autonomous systems in the architecture and the symmetric keys could be used for anything they could be used for encryption for authenticated uh authenticating certain messages so there is actually also a draft about that um by my colleague juan who is actually i think um also um in here in the call and so i think this could could serve some kind of purpose even if you have it um by itself when it comes to um the other components so i'm thinking for example the control plane well the way it works is that it relies on this concept of isolation domains for"
  },
  {
    "startTime": "00:32:00",
    "text": "example for scalability because the routing process is somehow segmented into this intra and inter isd so it does need something that that mirrors this concept of of isolation domains but you could say okay i deploy a scion network as a giant single isolation domain i think you might bump into some scalability issues and you might bump into some governance issues because maybe instead of having this voting process that you have in the pki maybe you will have a single certificate authority that that in the end is in charge of administering the whole the keys for keys for the whole network so i think this could somehow work but i think it would lose some of the properties on the control plane but it does not exclude that somehow things could um could work by themselves but i think there would be more open questions about how to do this effectively when it comes to the data plane um so what the data plane needs in scion is basically this authenticated path segment and here one of the key things about scion is that you authenticate those segments uh with all this control plane and this pki and truss model and so on so if you were to deploy uh scion network um without the control or a plane or pki i think if you have something that can authenticate this segment i think you could somehow make it work but you would also lose some of the properties there so maybe you might end up with something just like uh maybe inter-domain segment routing with with authentication on top of segments which could still be in some way a contribution because i'm not an expert in segment routing but my understanding is that there is not really authentic authentication so far and segment routing for example is is meant to be deployed in a in a in a control environment in inside a domain a trusted domain"
  },
  {
    "startTime": "00:34:01",
    "text": "so that could maybe help in some way but it would open more questions so i think overall the answer to your question is we could have some components working somehow independently they could give some benefit but it would be more limited than having the all all three of them um somehow working together uh eric eric since uh brian called me out brian do you want to jump ahead of me here or are you fine behind me yeah no go ahead i just had um nicola said something and it raised another question so i'll i'll bring that up later go ahead uh i'll just uh run through some of the questions that i was asking in the chat that juan was kindly providing some answers to and maybe you have some other i think the first thing i asked was um are existing deployments uh amenable to any changes that standardization might lead to if there's something backward and compatible is there going to be a bunch of people who are actually kind of like complaining that no no we can't change anything that is a very good question uh i'm personally not let's say in charge of those deployments so i i don't think i can answer that but since we have some deployment i think a key step towards standardization would be to first document what we have existing and what is somehow deployed today and then take it as a base for doing some more longer term standardization work whether they would be willing to change um yeah as i mentioned this is uh not something that i could um say or commit because there is i mean there's isps there's the banking ecosystem what i've heard um from the past is that uh if you compare scion today to the let's say very researchy scion that we had a few years ago already several things actually changed um change a bit even in let's say in in parts of the header and this is because with some deployment"
  },
  {
    "startTime": "00:36:01",
    "text": "experience um people realize that some things that were initially designed they were they could be optimized so i think for example some header fields were swapped in position to make it a bit more efficient to uh to parse them on routers and so on so i think there is a margin but i'm not in control of those networks and uh oh sure this would be uh one's reply was that the isps many of them have been asking about a possible standard uh and it seems that there's reasonable belief that they would be happy to use a standard process that's what he said yeah i also asked if there was a life of a packet or even like a life of a socket kind of summary uh he pointed at some documentation and described some stuff in the chat including like a an initial phase of like getting getting the client actually gets all the paths itself and then chooses paths it wants to use how long does that usually take can that be pre can some how much like pre-computation or pre-caching can be yeah that's a good question um so i believe we do have a life of a so there is um a book that we have been working on in the past years that i think that is uh called the complete guide to science and in there there is a description of uh let's say a life of a packet if i'm not mistaken there is also one that we also have an older book from a few years ago that also has this chapter but as i mentioned few things changed so i would recommend to um i would point you to the latest version um when it comes to fetching paths um well so there has to be an initial pass lookup from end host to get these past segments uh these segments have a certain lifetime so they can actually be cached at different layers so the way it works i'm not gonna compare it directly to dns but you can think about it uh in terms of something similar to uh dns lookup sure so there is some initial extra latency of some"
  },
  {
    "startTime": "00:38:01",
    "text": "milliseconds but it really depends on where you want to go and uh whether the the server you're actually asking for paths already has this path information because for example if you want to go from one isc to another one there has to be like uh i'll say recursive it is not exactly recursive but there has to be uh there have to be a bit more lookups but once the core has all those segments the next lookups they will not incur the same latency so the answer is it depends um but think about it as a the ns-ish um like um way there was there was some other uh stuff i asked about also about the um if the path if the path list is in every uh packet uh how big is the header and i think juan said there's like an extra 80 bytes over uh ipv4 header size yes which implies that there's a maximum path length uh maximum path length i'm um i'm pretty sure there is one but i'm uh i'm not recalling that i'm not sure there's some colleagues that are in here i'm not sure if they they remember that what i know is that usually with each path then you also get a path mtu that of course depends on on the links that you have along the path and on the path header because of course the header length is uh variable variable um and sorry what was your other question when the question was how long what is the max path length and what happens to networks that are outside of the math path max path length i would have to um get back to you i'm not sure if somebody else in uh there are some some colleagues that are remote and i'm not sure if they they know about that but the path is usually an as path so cyan paths are per yes so for each as you have incoming interface outgoing interface and yes so it is usually not something that you would expect to be more than i'm not sure a certain number of autonomous systems okay yeah i clearly need to learn more but thank you but yeah um"
  },
  {
    "startTime": "00:40:09",
    "text": "i think brian is in the queue or yeah let me click the buttons um so uh i was looking at sort of like these slides here the can we use x alone can we use like why alone can we use z alone um i think that's one good way to to look at these questions um the the other way to flip it around would be to say hey can we take for any of these components can we replace them with something that is already in sort of like the itf internet ecosystem or something very much like it right like so um for example uh i think you make a pretty good case that the data plane on its own is probably the least useful thing and the pki on its own is the most useful thing um but like what would it look like to for example take um the cyan pki um some representation of this ion control plane like so that the path beaconing mechanism right like so i assume you bring that to the ietf and the first thing we're going to do is change the indian-ness of it right because it's like you know control um change control lives at the ietf and it's what we did to quick on the first day um the but then like use some existing piece of the ietf ecosystem for the data plane right because i think i think you made a pretty good case of the data plane on its own is the least interesting thing it's like could we use yeah it looks a little bit like lisp it looks a little bit like segment routing could we use like the sr headers for the the intra domain data plane but then like connect the control plane into like you use the"
  },
  {
    "startTime": "00:42:00",
    "text": "control plane to disseminate the path information that then shows up in the segment routing headers for example right that's just that's the that's the easiest way i could think to sort of like say well we're not going to boil the ocean at first and we're going to reuse something that exists and is implemented and standardized in the itf but there are other you know there might be other ways that you could could replace the data plan did juan want to come in and answer that question or did he have a different question um i have a different question okay cool oh okay so going back to your your question um whether we could use um an existing protocol uh well i'll just start with saying that i'm not a segment routing or lisp experts so we have been looking at how they work but i think investigating how actually the physical disease would require a bit of further analysis so i think i have a slide about just comparing the protocols but my tool is stuck well just give me a second and i think we will so yeah we were mentioning for example um lisp so when it comes to cyan versus lisp i think the idea of separating routing identifiers and locators is somehow common and when you look at transition mechanisms that we did not really get into that much i think there are some similarities in the sense that lisp and cyan both have let's say a edge point that acts as a bridge between um between the list part or the scion part and the regular and host ip part so in scion this is called sig scion to ip gateway and in this uh well i i don't remember how this is called but i think it is like a lisp router or something that does this um kind of encapsulation so i"
  },
  {
    "startTime": "00:44:01",
    "text": "think there are definitely um similar problems that um that probably where we can probably find some synergies um when it comes to to this concept but lisp is only doing um it's only uh having this uh let's say two-tiered routing and there is not much about multipath there is not much about authentication um so i think the core focus of each one of the two protocols is is very different but yeah i'm not sure how much they could be potentially integrated but i definitely think ideas maybe there could be some um cross-pollination of ideas between between the two especially when we look at transition mechanisms which i think is a discussion that we will have to have we just did not um have it at um yet here because we are trying to now look at the let's say bare minimum core components when it comes to segment routing um well as i mentioned i'm no expert there but the idea is that segment routing is intra-domain and zion is inter-domain so i think they could potentially cooperate in some way where you use segment routing inside an autonomous system and cyan inter a yes let's see if that tool starts working again sorry about that and okay yeah but besides that um i think the key difference is really about uh trust and the trust model um segment routing does not really have much much about um about working uh between untrusted entities so when it comes to your question could we use one with the other i i think there could be some synergies but we we would have to do more thinking about it of how this could in practice work when it comes to the details but definitely there's some there could"
  },
  {
    "startTime": "00:46:00",
    "text": "be potentially some little overlaps but usually the scope is very different because of the trust model because of what the protocols do and so on so i know a lot less about segment routing than i should um to be honest um but like this slide is super interesting to me um because we have a bunch of properties that we want over on the left side um that are missing from the right side and it's like okay the paths are authenticated that that path authentication is basically coming from the control plane um and then there's sort of like some encapsulation stuff which you know the internet has made a tunnel so i don't really care you know how many different layers of of headers you have to put on a thing in order to make it work but like is would there it seems to me there might be some way to take this path authentication and the ability to run an untrusted domain from the control plane and integrate it into something that looks like set segment routing for like the packets look like sr packets and can be handled by devices that can do segment routing um but you like i want to figure out if there's a way to take things from the left column of the slide and wedge them into the right column of this slide does that make any sense right like if you get the if you get the path authentication if you get sort of like the tr the the ability to do untrusted deployments from the control plane could you dip segment routing in that somehow and then get the best of both worlds like this is an in-kuwait idea i don't i think we should probably take that offline or to the list but but i like this slide just sort of like gave me an idea there yes this is one of the slides that we uh added after submitting the draft and uh yeah but it definitely needs some more brainstorming so i would be happy to um continue the discussion about this off on the list excellent i will stop talking with you then thank you very much"
  },
  {
    "startTime": "00:48:00",
    "text": "juan i am thanks jen um hi everyone just wanted to go back to the question that eric had about how happy would be the stakeholders of this moment to participate or even to welcome a standard about like any of these three components for china as a whole so i mean as as more and more entities are joining the scion network they are using money and and resources to participate and it is for them quite dangerous to just have one like single entity managing everything so for them it's quite critical to have to actually have a standardization process that everyone agrees upon and that multiple partners can can build routers and can build all that knowledge as well so that was just to build up on that thank you yeah it could have been um so indeed thank you for this presentation this is a really nice setup and and helps a lot to understand the different components and every and how everything fits together um and it did help me to understand uh what's needed much better and um and i think it has become clear to you maybe in the meantime based on all the questions discussion that we won't be able to take like everything together and do everything at once so we have to go step by step so i found most useful that you had on all these slides you had this box called functions and properties or actually i didn't find it useful that is called function properties but because like these are two different things um but the function is the most interesting part um that we can standardize here right and so can you maybe go back to slide number eight if give me a second it is a bit okay yes so i think here the two the first two things are actually functions and the rest are properties yes so the"
  },
  {
    "startTime": "00:50:01",
    "text": "properties are more requirement for protocol but the functions are something that we want a protocol for and maybe this is actually a very good starting point here um because and now you can correct me if i'm wrong because i'm really not a rounding expert at all um but um past exploration and dissemination is something that we don't really have a protocol for and that could also be useful for a lot of other use cases and protocols so maybe that's the first step we can talk a little bit more about in detail oh yeah absolutely so first thank you for the feedback i'm happy that this helped um as i mentioned this was also an exercise for ourselves so there was a lot of thinking in the background to try to get this but i think definitely also echoing what brian was mentioning i think both the pki and the control plane are probably the more interesting components that i think would also bring some value around so um thank you for your input i think we can um and it's understand to me that even those two functions here are not completely independent of the pki right so like even if we start here we probably there's something we need to think about the pka so but like yeah we need a starting point that's the point yes yeah and i think concretely the starting point could be yeah either the pki or the control plane or or roughly uh yeah i think there's already some well i would not say consensus but some some ideas that yeah the data plane maybe is uh less less important for now so thank you for your input kenneth i thanks uh ken calvert university of kentucky um i just want to say and i don't know as much about segment routing as i should either but i could swear that i saw something somewhere about extending segment routing to the inner domain area and i don't remember if it was a draft or"
  },
  {
    "startTime": "00:52:00",
    "text": "something submitted to a conference or what but i would just observe that i think if if you think about that happening i i it's hard for me to see how you would avoid ending up with something that's the equivalent of scion's isd isolation domain in terms of the trust structure yeah i guess alvaro has an answer right so um there's all kinds of names for domains right so in the segment routing architecture talks about second routing domain uh a second round domain can be one that has multiple ass so in traditionally we talk about multiple lasers we say enter the main right but there are networks that have the operators that have multiple as's and so their segment routing domain can go across as boundaries so yes segment routing can work across as's if we think about the isolation domain that's similar to you know one operator or one administrative domain with multiple aces inside so yeah that is possible to go across um across across domain owners but i have a follow-up question about that is um are these asses assumed to be under the same administrative entity because it is correct that's what i said yeah because the thing is in cyan within an isd autonomous systems are at least a design is thought in a way that autonomous systems are under uh they're basically different administrative domains which is also why you have the voting process in in the pki because well we assume that there is some shared level of trust so asses could be in the same jurisdiction or in the same industry but they are not necessarily absolutely the same administrative domain so i think that threat model behind it then it would be a bit different from um from the one that you have in segment routing if you assume that all the yeses are part of just like a gigantic"
  },
  {
    "startTime": "00:54:01",
    "text": "network it's different i was just saying that yes okay thank you uh media i still are you still in the queuing okay i'll remove you uh well i do not see you on the queue so i put myself in the queue to ask very very stupid question so i assume this requires the changes on the host or some kind of proxy sitting there right yes so basically does it like how does it work for a host which might want to talk to some science destinations or internet destinations how does it practically would work on a host yes um thank you for the question uh i'll just look here so people can hear me um so yes this is uh correct so there is roughly two ways to um to communicate scion i think there is a slide about deployment i purposely did not want to talk about this because we have several transition mechanisms several proposed transition mechanisms and i think all of them would require their own discussion because it's quite um it's quite big but in a nutshell you basically either have a native scion host that basically has currently a piece of software that supports uh doing this path lookup and so on and can talk to other scion hosts or you have a gateway in the network so this is what we call a cyan2ip gateway and this is what is used in deployments today so then there is a boundary between the scion domain um and uh the end host and of course all the path policies and so on they're all configured on uh on this edge device called the scion to ip gateway so [Music] yeah there was a slide about it roughly so yeah there is a little slide about it"
  },
  {
    "startTime": "00:56:00",
    "text": "there is this basically purple device and in existing deployments either it is basically deployed on somewhere close to the cpe at the customer side where traffic is encapsulated encapsulated or some isps in switzerland they started offering like uh what we call a career grade uh scientoip gateway where they run this inside their core network and when you wanna go to some destinations that are behind scion then traffic ends up on on this gateway and then it continues over cyan besides that there is some proposed transition mechanisms that let's say aim at coordinating this gateways on a large scale but that's that's a whole different discussion so i don't oh brian i keep looking at these slides and then like it's like wow this is a really great slide i want to talk about it um so uh i really like this diagram uh thanks for drawing it um it occurs to me that one really interesting question that we could ask is let's look at it at deployments a and b here um first right like um you have a network and you put a bunch of scion hosts on your network or you have have hosts where you have like a you know a dual stack thing so that you can actually run cyan applications versus you have a network and you plop a sig on your cpe and that sig is actually going to be a relatively cheap thing right because it's a scion router and zion routers are relatively cheap right like this is not there's not an enormous investment that you have to make or not a lot of forklifting that you have to do to get deployment b to work it'd be really interesting to see like a lot of the sort of deployment of things in the networking space look a lot more like b than a right like because you know deployment day requires you to touch every endpoint and you have to touch a lot of those endpoints before you get the benefit of"
  },
  {
    "startTime": "00:58:01",
    "text": "what's going on in the endpoint whereas you can get a lot of the benefits of this not all of them right like so for example if i'm you know if i'm sort of like doing some sort of taps future thing where i have uh a um an application that really actually does want to control network access to the path for different um sort of like differentiated services for for different things then i really need you know since that's that's running on the endpoint i really need that on a what do i get if i just do b right like if i just went and and like downloaded sort of like you know the scion thing onto my uh onto my my tourist omnia and then like now i have scion at home what do i get get from that i think that's not a question to answer right now necessarily but i think that would be a good thing for that like you you said a couple of times it's like we're not going gonna get into that because we have some some transition mechanisms uh i'd said in the interim uh sort of both with my individual and my chair hat on that like a an exploration of those transition mechanisms would be super interesting for the ietf community in general because it's like hey you've actually deployed a future internet thing that works with the present internet transitions of this case are hard you know what what are the what are sort of the incremental benefits of of of doing this i think this is like sort of a work example of doing that sort of thing and like the question that i'd leave with is like okay we have this vision and we're going to scionify the internet um if you only get to deployments that look like deployment b here how big of a win is that right if you never get the rest of of like if you if you never have a you know the vision never gets to the point where you have a bunch of scion enabled endpoints where you only really are doing path selection from the gateway right like so the past selection rules and policies become a thing that's under the local network administrators control kind of like in the present internet as opposed to under the endpoint is like what do you get from there what is the what is the if that's as far as it goes"
  },
  {
    "startTime": "01:00:03",
    "text": "what's the benefit because i think there are i don't know what they are but i'd really like to see that that sort of explored in future work yeah absolutely so i think there were also some discussions last time about documenting deployments and transition mechanisms to this point i think two things one of it is that there is different transition mechanisms with different maturity so designed to ip gateway is the one that is used today in production but there are some research proposals um about other transition mechanisms so for example i think there is one that is it will come out at usonic security in well i'm not sure when it is but in a in the next month um describing more of a back one approach to that um but of course these other ones are more research and for the discussion of today i think i wanted to focus more on what is actually really uh deployed and productive um and that is the stake that's that's cpe deployed to the customer side or that's basically yes that would be roughly b b and as well d so both of them are are somehow deployed when it comes to getting closer yeah b is the most interesting for me from like a from a from a standardization standpoint because it also gives you a deployment and operations model that isn't that far from the current deployment and operations model right like you have people who own local networks and you're giving them more you know even more internet you're giving them new things that they can do that they couldn't do before it'd be interesting to look at what those are right as opposed to you know a like getting to full native song on everywhere you got to have the browser vendors on board you've got the os vendors on board you got to have like you know you might need to do nick like that's a much bigger left whereas b is absolutely is yes seems much more doable to me so this is why uh the current deployments they both they basically follow b or d"
  },
  {
    "startTime": "01:02:01",
    "text": "and when it comes to benefits um well of course you get full benefits if there's two scion hosts or hosts behind a scion gateway that talk to each other which is why i think the early adopters are these kind of ecosystem industries like banking where you have lots of actors that need to talk to each other and they need to do it with some extra reliability that they do not get over the internet so when it comes to like the the business or let's say benefits of deploying scion these ecosystems like finance or transportation or healthcare i think in there's now a poc being run for adopting scion for connecting healthcare institutions in this in this kind of market i think scion has a very interesting positioning somehow or can provide some interesting properties um when it comes to the past awareness security and so on so that would be i think the the first step the more concrete use case the other ones would be more uh of course require more change and would perhaps come later on i hope that somehow answers your question and it was um okay juan yeah sorry to bother again just just wanted to to talk exactly what what about what adrian was asking what brian was asking um i we have to talk about this as well definitely as nico said but uh we believe that the scenario at a that will that will never happen so clarify that meaning that there is so much existing software and so much compatibility that we will i believe or we believe that we will always have this kind of gateways in the middle to allow backwards compatibility for many i mean for many many years possibly forever but to be honest but also a mix between a and b would be um would be very welcome at the beginning everything is b and then there are so many hosts that"
  },
  {
    "startTime": "01:04:00",
    "text": "understand scion and their applications can take full advantage of the multi-path and multiple properties like also qas and and so on because they see of course the gateway has has limitations as brian said it's only it will only do its job up to the taste of those admins so whatever flavors they want to use for the pads and so on so that will not that will not transpire to the host applications directly but yeah we definitely have to talk about this yes thanks so no more questions comments maybe i'll i'll just try to wrap up um in just generally asking or commenting like uh for next steps i think we definitely got a lot of good input um today so first thing so uh thank you all for um your comments they definitely help us to um to do some more thinking about it and i think that will also help us iterating especially on on the component analysis track so expect to see an update and we'll be happy to discuss some of the open points on on the list um when it comes to further next steps uh yeah we were wondering if um perhaps working on the specification could be uh interesting as i mentioned earlier it would be probably difficult to reach rough consensus right now and it would be very beneficial for us to at least document what we have today in terms of deployment so i was wondering if i'm not sure the chairs or the audience have um opinion about that uh or if not um yeah we will wrap up oh i see brian is around yeah so um"
  },
  {
    "startTime": "01:06:00",
    "text": "actually i wanted to ask a clarification question on that well you're talking about documenting the current deployment um this would be the specification of what is is currently deployed or a deployment report like would it be a specification that pro of the protocol is currently deployed or would it be a report on the properties of the deployment this is currently deployed so it makes sense like which which do you which is more useful for you i i was thinking so i think there is different things this could definitely be useful documenting the deployment uh but i was also thinking somehow having the the low level specification of how things work today just to have it as a starting point for starting to discuss um about what you know each component i think so far we got the direction that the control plane pki and the control plane are more more interesting so i was thinking more let's say in starting to uh work on some of those components or start starting having a documentation there but in parallel we could also um yeah focus on uh deployments um all right no no i just wanted to i was just asking clarification impression for what it was you were asking for yeah i like uh i think that's definitely worth writing down um i would want the research group to take a look at that before we made a decision as to whether we would adopt it as a research group document for publications rfc for this stream i think i think we still kind of don't really know how we want to break this work up and bring it into the irtf and the ietf right because i mean like if the goal is standardizing some of these parts of things then you know step one is writing it down in an id and you know maybe we have a discussion about that and split those documents up and some of them go to other working groups or to their own working group and some of them stay here um yeah i think it's definitely worth starting to write things down um uh sort of in the id format because i mean like once it's once it's there it's"
  },
  {
    "startTime": "01:08:00",
    "text": "not very much work to like shuffle it around right yeah that's what i mentioned i i i meant yeah i could event again so i i similarly got potentially confused by the term specification here and so you have this other draft which is describing the whole architecture but you're you're talking about writing wardraft so are you talking about that right so i'm i'm i was talking more about uh writing other drafts uh with the like protocol let's say specifications so just documenting what we have today how it works and you already said it now you say multiple drafts right it's like it's different components that probably go into different documents right i mean i think we have the three core components and it would be i think it would be a lot of material if we were to have everything together so yeah i was thinking about the three core components the control data plane and pki um yeah i was basically referring to that yeah okay so specifications yeah that's why i mentioned i mean in the end uh it is very important also for us to do thinking i think for uh for people in the groups to do some further thinking especially when we want to look at more technical uh questions i think then we have to start looking at more in-depth uh because now we're really looking at let's say we had an overview now we're looking at the properties and sooner or later we'll have to get to um so the lower level bits and that way we can also then think if we can i don't know integrated with segment routing or um but i think it is important to have this somewhere so i feel this is probably would be a meaningful next steps that that's why i was um proposing that yeah definitely agreeing i think the point i want to make is already like try to think of think how you can break this up into smaller pieces so we can actually take some of these pieces and start working on them in the ietf um eventually rather than putting everything into one big document no yeah absolutely so it would definitely be at least three three documents for the core components and then there's transition mechanisms there's we have a lot of work ahead um"
  },
  {
    "startTime": "01:10:01",
    "text": "but yeah the idea was to document it first so i'm not sure if there could be maybe even an informational document uh uh being worked on first uh and then uh having something you should just write it down and don't worry about what we do with it later okay that's clear we have some work to do so so as it turns out i put myself in cue to agree with everything myria said before she said it um i think that's the way we need to go um one thing that i noticed in reading the draft uh and then uh looking through these these slides and then just got this discussion at this presentation is it really shows the the benefits of sort of like you're thinking the scion team's thinking of getting into this decomposition right like so actually sort of digging into it i think has improved your concepts and gotten us a lot closer to the goal of figuring out what we're going to do in the irtf and what we're going to do in the ietf and i'm convinced that as you do the detailed decomposition of these things into these three specifications that you're going to have more benefits to the thinking process of that i think that things are going to fall out of this and it's going to be like oh why didn't you this is obvious this is the way to go i don't know what that is yet because i haven't read the drafts yet but yes yes you have a lot of work ahead of you um i commit to reading all of this stuff um and uh and helping me make it better um and we should probably after colin talk about next steps within the rg chair hat back on uh as to setting up um a pace of interim meetings that will make sure that we you know keep the energy up on this uh because i'm really excited to see how well it's going and i think you know if we get into a situation where it's like okay well now we're not going to think about this until london then we're we're missing an opportunity and brian i don't know in the chat uh"
  },
  {
    "startTime": "01:12:02",
    "text": "jeff mentioned that it might be an option yeah of uh bringing it to routing people yeah but having like yeah that would be that would be yeah that would be super cute i think i think i want to write get at least the control plane pki and the control plane documents to the point where they're readable before we do that because because i i'd like the routing people to throw arrows at the specifics as opposed to the concepts it seems like it would be more um uh more beneficial to to talk details so okay colin hi uh i think brian and miria said a lot of what i was going to say already uh i think the the i think it's possibly premature to think about uh what are the next steps what's what's going to be standardized and what isn't i think the the act of writing down the specification here the act of decomposing it and specifying it will i think make it very clear what is ready for standardization uh where the open quest questions which uh perhaps this group perhaps updates the irtf could look at and um similarly i think someone mentioned the independent stream in the chat i think that that might be a venue for publishing a snapshot of what you have now but again the main thing i think is to start writing down um writing things down decomposing it writing the writing down what you can specify and then separately writing down one of the things where there are open questions as you specify it and then over time i think it will become very clear which bits are research your research on which bits are standards ready thank you um yeah we'll definitely keep writing for the let's say short term in the foreseeable future and i think this will help us move forward"
  },
  {
    "startTime": "01:14:02",
    "text": "so i think we can take my last question to the list but um this is more of a holiday schedule question if we were looking at the last couple of weeks of september um for an interim or maybe the first week of october is that going to give people enough time to do anything or do we want to do something that's maybe um like because the the london meeting is toward the beginning of november right yeah i think yeah um so like i guess we could we could do something anywhere from the from the sort of the end of september to the middle of october uh and the look on your face um suggests to me that you're more interested in toward the middle of october than toward the end of september yes okay yeah the thing is um yeah we have to maybe we can talk talk offline and see but uh yeah yeah i think me and uh yeah the other folks that can do like really work on writing we will be um either busy or out for a while in september so um so yeah mid september late september would be a bit um okay tricky cool all right that's good input i'll i'll start the thread on the list from that thank you very much okay thank you very much we do have a little bit more time here is there anything else that you want to know from the people in this room today nicola is there any i think you got a lot so you know no is a perfectly acceptable answer i think i got a lot i'm still processing and we'll be processing in the next few days um so yeah i will also start writing uh um we're preparing towards uh writing down some of the specifications while iterating on the draft so i think this will be definitely enough input and yeah if we keep the momentum and keep discussing and entering meetings or so on i think this will uh bring us a long way forward so all right"
  },
  {
    "startTime": "01:16:00",
    "text": "i'm very happy and thank you all for very much spending so much time on on scion thank you okay so now let's move to the next presentation about overlay routing problem this is gong and i'm gonna present this uh problem statement you want to present yourself or you want me to move okay oh no you can't you can share the screen actually it's not it's not a long slide whatever yeah okay then should i start yeah please okay okay good day uh my name is gongli and i'm from huawei and it's my pleasure to pre present our uh problem statement of overlay routing and in the internet application and actually what we're gonna present is a complementary part to actually what you discuss today i think we can have good discussion after that next piece okay as we can see actually internet is uh incurring totally a new generation from before we call mobile internet all the way to the uh immersive or real-time and interacting internet and for example the real-time communication traffic actually have have been growing uh almost three thousand percent have since the core weight and maybe it's gonna be more right now and also the vr and er already have expected a huge annual growth in this decades and also a very hot term like called metroverse i think everybody already heard that i think it's going to be one of the ultimate kind of scenarios in this immersive internet but in the meantime actually"
  },
  {
    "startTime": "01:18:01",
    "text": "uh this kind of development need much higher and more strict requirements about networking quality and network transmission in terms in terms of like latency uh throughput packet loss and jig and so on however actually there is a huge tightening gap in this internet kind of application scenario with what area and the public we will say cross-domain networks because first every traditional internet is originally designed to just for connectivity and the best effort delivery and also the inefficient i would say very inefficient uh routing protocol the bgp actually is basically um the path is computed based on the isp business relationship instead of performance actually there's no performance guarantee and actually it is noted that some a path between the locations within asia actually will go will be routed through some peering points all the way to america there's a therefore um have like extra latency uh greatly and also some reason are the ones for example 5g and sdn but they are all operating in a single domain therefore you cannot do this kind of end-to-end solution with cross domain in the crosstalk networks uh next please and therefore actually recently and i would say an old technology has been revisited it's already networking and it can provide better path selection in the internet and right now i've seen i think a lot big ott service providers already deploy these kind of overlay networks with their private infrastructure to provide better performance for dedicate their their own service and in the oral networking basically multiple pops point of prices are"
  },
  {
    "startTime": "01:20:01",
    "text": "deployed worldwide to relay the traffic and also in the network there can be uh private circuits or the public were based on purely public internet for example huawei deployed this kind of over networking based on a hybrid mode with private circuit and also public internet and also for example akamai and agro they deploy purely on on the public internet and some big ott actually they have their own backbone network but conceptually there are also some other networking and basically in in the oral networks and an endpoint can use already for the path and instead of the direct internet pass to maybe for to achieve like lower latency or bypassing some congestion points uh next next page piece okay and actually the the current overlay routing part is can be shown as the light figure and uh is computed conceptually logical uh logically centralized but actually the whole path can be decomposed into two segments the first one we call the access from the source to the access point where the ingress were the destination to the egress point and actually this part the routing work basically is like the access point selection process and the source need to uh get the address of the access controller and ask the controller to assign the access point either ingress or egress based on some geography location or latency and inside the network we call the backbone segment and the english segment actually is only maybe composed with like hundreds or like pairs of nodes and basically the controller can configure the auction path in the backbone you can"
  },
  {
    "startTime": "01:22:02",
    "text": "find always find the option pass from ingress all the way to the egress however in this kind of diagram actually there are three main problems we observe uh the five the first one actually is the local optimal is not always the global optimal okay it's more like our nitro subway system and even if you find the closest or the best access point and you'll find the best path within the backbone but in the end-to-end perspective it's not always optimal and we do have a real example in the figure for example if the user from the zimbabwe wants to send traffic to thailand and one way is the black path actually you find the closest ingress point and which is south africa and hong kong and you have the the good path between them but the whole latency is around 250 milliseconds but instead you don't have to do this you want to achieve the global ultimate you can the demo we can find a further access point which is actually dubai it's not shown here and it's in the middle and also the thailand can also access it to dubai and just one point you can relate the traffic and the total uh latency is only 160 milliseconds but this green path actually is is not able to be found in the current diagram or not mentioning to use that and the second problem is about complex signaling basically to uh in the current uh framework the source need to if you want to send anything you first need to have the dns request to get the address of the destination and then if you want used over the networking and you need to uh get address over the access controller and then you ask"
  },
  {
    "startTime": "01:24:00",
    "text": "access controller to the access point and so many kind of like complex signalling and the third problem is basically the motivation of the p energy basically there's zero uh information about the path at the end point there is no pass on awareness and if for example for different kind of traffic sorry different kind of service you cannot have the flexibility to choose a path next page please okay then to address this uh problem actually we propose some potential extensions and actually there are in three places the first one is about the end to end joint pass computation basically you can compute the entire overlay path including both the access segments and also the background segments just to give the entire over the path and also this end-to-end controller can be can play as a root dns server okay then therefore to configure the path you can just use or reuse the dns tunnel basically whenever the source i want to send anything to the destination for example uh the ietf website and you need the address okay you need to query the dns but in the meantime you can have the overlay path request together with the destination request and just you just need one route and again has you know the dns a recursive kind of query and it can return you the address of the destination together with the entire overall path and uh and of course you need some extent you communicate based on the edns the extension of dns and maybe you need a kind of new uh option code for this kind of request"
  },
  {
    "startTime": "01:26:01",
    "text": "and the third extension actually is whenever you have a dns response and you already have a central path and here the path can be can include for example the the list of the pop and also it can include some past property information for example about latency and bandwidth and you can choose from them and based on based on the dns response and then you can just use simply use source routing or second routing i think you already talked this a lot but actually here the difference is uh you just directly use segment source routing at the very first point at the end point and uh encapsulate the package for example if what you want to use path 1 3 4 5 you just give the list in the packet header and the send to the send to the network and also the all the pop or the folding node doesn't need to maintain the routing state and it can for the traffic based on the information in the header and all the way to the destination and uh basically that's our next page piece yeah this is just some uh first uh thoughts and i think it can be very complimentary to the ic at one work and we are very we'll be very happy to like collaborate with everybody else to try to document this problem state and let's see how we can proceed yeah that's all thank you uh okay any like comments from anyone"
  },
  {
    "startTime": "01:28:01",
    "text": "so i am like some i suggest you ask for any like feedback on the list right because well i guess not everyone on there who is reading the mailing list is in this room right now right so i do not see anyone like rushing to the microphone to give any comments so i suggest we just start with that because i think the first thing we need to find out if there is any any interest in the room to like work on it right some okay okay cool okay and we're going ahead of time great so hiroshima floor is yours i am yeah yes okay if you want here like i guess people might hear you better if you do that but it's like up to you keep my face this direction so um can i yeah yeah please please go ahead okay so yeah good afternoon everyone i'm chris kasaei uh from white project and preferred networks um i'm going to talk about the separation of data paths and data flow suppliers in the transport area this was originally indeed for the tsb working group but i think this kind of discussion should be here because this is related to past data paths so um next next slide please so this is the motivation as you know"
  },
  {
    "startTime": "01:30:01",
    "text": "the internet is uh oh really uh that is right now and the um it was uh yeah the principal of the internet was the end to end but we have more and more smaller network gears in between the end host so for example we have our qis middle box and then we now have the new distributed computing technologies such as the powersup model machine machine communication and edge computing and in network computing in network computing is a little bit uh difficult for me still but we have more middle boxes in the network so i think the end to end principle is now over so we need to think about how to our review how to design the in the future internet so the according to the rrc 1122 and 1123 do we have three layers and four layers link layer internet layer transport layer and the application layers and uh yeah the link layer and the internal area is okay so internet internet layer provides the um entertain reachability but the transport layer implements too much so the next slide please so no no problem yep so the ip loading is a based on the hub hope i have a strong evolve or nature with a single or multiple uh cues in the router but transport layer some of the functionality of the transport layer end-to-end functionality so for example reliable data communication the transmission integrity check are the end to end functionality so the levelers do not need to do nothing so data path is just a data path but there yeah of course in addition to the reliable data communication flow control for deletive buffer management is a dam performed by"
  },
  {
    "startTime": "01:32:01",
    "text": "the end host and the transportation security is also performed on the endos however we have some stat dependent function functionality so the end host needs to know about the data path so for example the we when we perform the past empty discovery we need information of the mtu on the database that is that that is accomplished with the icmp now but we uh sometimes we have many problems with the possibility discovery so so and the congestion control is also performed on the end host however the uh congestion is actually occurred on the routers or data paths in between the levels so and the eachine exclusive condition notification is implemented in the letter to um notify the condition information to the end host so some of the functionalities on the transport layer require the information of data paths moreover the several meter boxes request to know the waypoint and this kind of meter boxes may have a state of the data flow so we need need to implement some kind of the waypoint aware routing technologies for example the firewalls are implemented at the gateway or the transparent transparent protein could be implemented with the uh i mean deployed with the policy based routing so the transport layer needs to be aware of the data is for some functionalities so next slide please so and more uh we have more password data communication here so multiple has"
  },
  {
    "startTime": "01:34:00",
    "text": "multiple we have multiple protocols we have http mptcp mp click mpdccp and so on so that these protocols should be passed away so that we can use the two two or more database efficiently and the aqm is aware of database actually it's aware of the two of the database and in addition to this we have more emerging technologies such as the pub mtm communication edge computing network slicing and in network computing so this is achieved these new technologies achieved with the program network programmability so the the infrastructure of the ip leveling becomes more smarter i mean so next slide please so this is the this stress shows the problems with the transfer current transfer portrayal problem uh protocols so the kind transport protocols are tightly coupled design uh so i mean so all components of the transport layer functionality are integrated to the one protocols so for example click that is a very good protocol but that has a many functions in one protocol so if we want to make a mp quick standardized the we need uh some kind of the reinvention for the click although we have an mptcp or http for the multiply protocol so it is very difficult to develop the new transport layer protocols so quick is okay i think because that is a test transport layer but if we need some uh health or cooperation from the ip layer for example if we have a ecn for the congestion control that would be"
  },
  {
    "startTime": "01:36:01",
    "text": "better but if we want to design such kind of a feature that cooperate with the ip layer and the transporter layer i think we need to um abstract the current transport layer layer to in order to develop the both epi-friendly and transport air friendly network extensions so next slide please thank you so i have uh just reviewed the transport layer functionality here so i think we can separate the transport layer functionality into two separators two functions are two more functionality one data path and the other is data flow so regarding the data path um that is uh the state race or purpose state that that handled the purpose state or that is a state status for the data flow that is uh handling the pass-flow states so for the database layer we have our functions as the trajectory or waypoint handling bi-directional connection resource monitoring for congestion control and congestion control data from much much bridging this is the similar to the quick connection so the quick connection can multiplex the multiple date flows over the i mean multiple streams on the one connection so this is the similar to the quick idea and the database reflects one of the data fracture data function is the patent duplication so i think there there was another research group for watching grouper it was talking about the fake on the tcp protocol so i think that this kind of the uh the duplication replication could be a database functionality on the other hand as for the uh regarding the data flow the sub layer the retransmission or flow control"
  },
  {
    "startTime": "01:38:02",
    "text": "that is for buffer management for the received side and the flow prioritization entertainment security and um inverse multiplexing for modbus protocol uh could be a data flow functionality so i separate this functionality into two so next slide please so this is my proposal so for the future development of the uh transport auto protocols and as well as the ipl extension to the ip so um so this is the what i said in previous slides so i don't think i need to mention more but this kind of the uh um layering so the database layer is above beyond the ip layer and the data flow layer is above the uh database area so the data path layer protocol can multiplex the multiple data data flows already connected there could be a bi-directional connection of a unidirectional one so the data so data flows are multiplexed over the data path that this means that so next slide please so um this is the uh one of the use cases i i'm thinking about the main use cases now and i'm uh reviewing the other transporter protocols tcp quick http and so on but this is the uh i i have only uh i thought i had only ten minutes so i picked up one used case here so recently we have lots of machine tool machine communication devices in iot so if you're downloading something in you i mean human download something you are aware of the some kind of the network so"
  },
  {
    "startTime": "01:40:00",
    "text": "the best effort is working fine but for the machines machine don't think machines don't think so they are trying to send a packet send a file as much as possible at the maximum rate so if we use the best effort model that may cause some troubles in a standard problems so if we can have some help from the network side so if you can know the congestion information or some kind of priority information feedback from the network side we can coordinate arbitrate the flow priority flow priority so if we have uh two kind two types two priority data here uh high priority one the low priority one low priority y is just for archive and the high priority one is for the data processing and we have if we have the data transfer for the archive and if we if the height priority data is started after the uh the the data transfer of the or operator and then the this data path may have a congestion so if we have the uh feedback from the router uh on the for the from the datapass layer uh the this uh low priority date transmission could be controlled i mean arbitrate and the data more lower data rate so that we can have a higher rate for the higher priority data so this is very similar to the ecm so for the this use test the next slide please so this is the kind of pseudo um flow diagram so i don't need to say anything more but this scenario could be achieved with the tcp ecn and dhcp but if we can have more sophisticated or"
  },
  {
    "startTime": "01:42:00",
    "text": "more extended information from the data path we could have a more better condition control algorithm or certain things so the recently we have the sum of our data center uh transport layer protocol implement the streaming telemetry to get the more precise information on the buffer on the data path so if we we're going to use that such kind of information i think the separation of the data from the database is useful so next slide please so this is the last slide from me so thank you for giving a time here so the i think uh this is very related to the uh past priority here this is a uh related to the uh data path so so i wanna get the feedback from you and i'm going to continue the discussion on the uh that gap between the hubble hub and the end-to-end uh mechanism between the uh ip layer and the transport layer and from the people into database and data flow and i'm gonna i'm working on the reviewing the existing uh transport layer protocol functionality and uh so the third item is the what we want to ask you here so i want to um yeah as the internet is a kind of that is right so but i don't want to create a clean slate architecture because the internet is a great architecture but we need to fix or modify some of that so i wanna uh discuss you uh discuss the architecture for new communication model and distributed computing here so if you have any use cases that could be uh helpful um with the separation"
  },
  {
    "startTime": "01:44:00",
    "text": "of the database and data flow separators i want to know those kind of use cases so that is the i want to do and as a protocol development i think uh i need to review the existing existing existing transport layer protocol but i want to develop some kind of uh example data path and data flow protocol using this architecture so that is the my next steps and this i want to get the feedback on the the architecture for future data communication for better world so thank you so thank you very much okay thank you i think we have glory in the pew yeah i'd just like to say thank you for the clarity in your talk that was really clear what are your plans for the next europe are you going to work on this more um yeah i i needed to um work on this item in uh the tsv working group so that we can publish the uh new layering model but before doing that i think it is better to discuss uh the uh the existing uh protocol and future uh potential models or potential um use cases because the um this is the uh not for the past i mean this this is informational but uh uh this will be for future so i wanna work on the uh historical review and the future discussion here"
  },
  {
    "startTime": "01:46:01",
    "text": "i would love to see more of this discussed in this research group it's it was really good thank you for your talk hey brian i am putting myself in the queue as an individual uh second in gory um this is a discussion that we've had at various levels of clarity in the ietf for a long time right like so trying to figure out kind of how to take these transport layer functionalities and make it work in a cooperative way and the network that we have um and i i really like the clear like this this framing of this is a really interesting way to take it so thank you very much for the presentation um i think um one question i would ask is so like that uh speaking as a proponent of the the long dead plus buff um which was a previous attempt at having this discussion i think about five six years ago um i'd ask if you have seen uh the rfcs that came out of the ib stack evolution program on path cooperation and wire images um i can i can follow up with you offline about that there's like a couple of things that that i think might actually um help you with the framing of the historical uh the historical discussion as individuals so no chair hat on i also think that sort of um we've done a good service to the community as this research group when we've looked at sort of like the history of of interaction between the transport protocol or the transport layer and the rest of the network so so spencer's draft uh this this work looks like it's very much in the same lines as that so so i would love to see this discussion um uh uh continue in paneragy as well um so thank you again yeah thank you so i think that this or work is also related to the uh this morning discussion in the edm uh yeah that is a"
  },
  {
    "startTime": "01:48:01",
    "text": "i'm not sure what that's what what what that what stands for but uh electronic dance music yeah yeah so i think that that is also related right evolutionary under me something uh evolution deployability and maintainability yes but the joke is electronic dance music so yep thank you thank you i'm going to continue this work so i want to send the email after this session so please give your feedback uh from this research group so that i can work on the uh this work more more harder and i want to discuss these kind of things among the or this research group and among the itf community i think so please give your feedback i want i want that we still have a little bit of time does anyone else anyone else in the room or or in medeco want to come up and and give some feedback not on the list going once going twice cool we'll take it to the list thanks again thank you very much thank you okay thank you everyone thanks for taking notes appreciate it okay so it looks like we have some action items and some reading to do it so see you london or actually on the sign interim sometime in october and we can get like 11 minutes back"
  },
  {
    "startTime": "01:50:14",
    "text": "uh you"
  }
]
