[
  {
    "startTime": "00:00:01",
    "text": "Thank you very much. Of course. Great. Thank you. Alright. Okay. Think you guys everything. Alright. Morning everyone. Welcome to mask at I f one sixteen, We have a pretty packed end today with hopefully some time for a good discussion at the end. So wasting any time. You all have been here for a week know how to use the tool. And mid echo, but if you have any, like, problems or anything, just reach out to your I guess, your neighbors and and and maybe they will help you out. This is the note well. I'm sure you've all seen this before. In case you haven't text choose moment to read here as David likes to point out. But Please do read it in particular a note the Ip I guess, requirements and and code of conduct here. Just be respectfully respectful and friendly to one another and we should have a a grand times about proxies. As Reminder, again, the It sixteen does require all participants be wearing a mask in the room unless you're actively eating or drinking So please keep your mask on and there should be no issues. Hopefully, that's not a problem. Here's some links you can also get them from the agenda page the on slide tool, the agenda and whatnot? Chat. However you want to choose to engage in the meeting."
  },
  {
    "startTime": "00:02:03",
    "text": "When you are, if you if you do want to bump into the queue a reminder if you're on, please do actually use the tool to join the queue. We can manage queue amongst the people who are not pushing enough to be here with us and should hopefully simplify things. Alright. So this is the agenda. We do have no taker. Thank you very much for people volunteered. A couple individual drafts that we'll talk about because we've gotten through basically we the core drafts that the this group you know, set out to achieve. Thank you very much to all you asking to yes for getting this stuff out the door. And then we'll have sort of an open discussion on advertisement discovery at the end. Before kind of jumping into things, I'd like to pause briefly to see if anyone has any adjustments they'd like to make to the agenda. One's going twice. Great. If not Tommy, you're up first. I'm having, like, technical difficulties with the Internet, but I can also try to Cool. Alright. Eric do it. You. And can you do it. Great. Good morning, everyone. So be talking about our quick wear proxy draft which we've talked about in this group. Many times it's something that he I think have recently discussed as part of the a return of what's in scope or not. So I'll first do a little recap of what it is, some of the recent changes that we've made and been testing implementation and then kinda the one big elephant in the room. That still need to talk about. Next slide, please."
  },
  {
    "startTime": "00:04:00",
    "text": "Alright. So as a recap, what we are trying to do with this quick proxy, is extend connect Udp to give a little bit more information to optimize cases where the next top is a quick server and not just any arbitrary Udp endpoint. So the behavior here is at the client communicates with the proxy to tell it information about the inner quick connection that's being forwarded. About the connection ids of that quick connection. And it does this now using capsules. So it's able to send capsules on the stream while it's forwarding And give hints to the proxy. And so a couple different things of the proxy can do with this knowledge. One of these things is that it can start reusing the ports and essentially the sockets between the proxy and the quick server that is targeting because it is able to do connection Id based. Demo multiplex? But then the bigger thing which in our implementations, we found more useful is the fact that you can optimize things to skip the extra encapsulation encryption when you have proxy, short header packets going through this. Mainly is like, if you're thinking of chaining multiple mask proxies over quick together. It allows you to not have a cumulative encapsulation and lose Mt at every hop. Instead since the The the wire image of the packets are you know, interior packets and the outer packets are both just quick short header packets. You can essentially just forward rather than putting them inside extra data And one of the more recent changes we've done here is that these four"
  },
  {
    "startTime": "00:06:01",
    "text": "mode packets use virtual Cid and so this is very important to make sure that the proxy clients still get to choose the connection ids that they use for packets between them. And then essentially, it's like a connection Id nat you can think of for forwarding packets. And sort of swaps out. Ip addresses, Udp ports and connection Ids, and then has the payload go beyond that. So if we just... If we wanna a diagram at some point to come back to, let's you imagine a case where you have multiple proxies. And so it is useful to do this quick practicing for flows that are going through the ingress proxy to this egress proxy. Next slide, please. So for reference here are some of the capsules that we're using, so the client can register connection Ids that it has for packets that it's receiving kind of within the tunnel. It can register that target connection Ids of the server that's getting to the proxy can acknowledge those just say, yep. I you know, I'm okay with using this for the multiplex at my lair. And then I can close them So this allows you to have one kind of request stream one Connect Udp session but then be able to add and remove Cid as those change on the proxy connection. And it can support negotiating the virtual connection Ids to use as well as communicating stateless reset tokens ins. Next slide please. So of the recent changes we have the virtual connection Ids we also added text to describe the fact that probably good to do keep lives for an end end connection that's being forwarded because you may not have much traffic that's actually going on. In the"
  },
  {
    "startTime": "00:08:01",
    "text": "client to proxy connection that's not forwarding, So you may wanna keep that other connection alive. There's some interesting implications for migration handling for passive and of migration and how those intersect with the virtual Cid we worked on text there, and we also tried to improve the text for Ecm behavior Specifically, this is not like like the tunnel Ec end mode it's just forwarding, so you just forward the markings and you're not worrying about Ip and Ip and translating Pc markings into inner headers. And, of course, everybody could add its own marking it's if it has queue that's building up. These are I think relatively straightforward and we have with kind of a cloudflare quiche space and our client implementation we've of built out the current version of the draft and able to test that. So It has two implementations at this point. So the big open issue that has been discussed some on the list that I think is kinda, the main thing that needs to be addressed in this. Is about encrypting the payloads of the packets in forward mode. So as it stands today, when you are forwarding in this quick mode. You are Well, you're you're swapping Ips and your shopping ports and you're swapping connection Ids. But it's not changing anything about the payload. And so if you are concerned about traffic analysis where someone is looking at traffic going into a proxy also coming out of a proxy it's certainly possible for them to recognize that. Oh, well, you change the connection Ids and you changed your Ip port, but the content of your package is the same. And so you can say, this is the same packet here. It allows you to correlate that. That may or may not matter depending on what you're using this proxy for and what your f model is. I think it's also important to note that"
  },
  {
    "startTime": "00:10:03",
    "text": "if you you have someone who is able to watch traffic on both sides of this, the timing information and the packet sizes are also usually gonna give this away. But of course, you could have other mechanisms like padding or timing authentication that could help with this. So I think the main point is the fact that there is not a way to fix the rein encryption here and to make sure that these are not relatable based on content. Is something that makes it impossible to remove the correlation doing that alone does not fix the correlation problem? But it is necessary. It's necessary but sufficient condition. Alright. So next slide. So rein encrypt or not to rein encrypt. The question, and how should we do it? So I think there are two main questions here First is like how do we want to rein encrypt this without adding any size to the packets. The whole point of this is that we don't want to lose m to you, we don't want to have expensive processing. But we're also trying to remove the ability to trivial correlate. And then the second question, I think is more of how do we fit this into an architecture is overall this encryption required I think we have an option of saying Yes. For quick proxy if we're doing this forwarding mode. We must only ever do this re encryption or we say this is a negotiated thing that both the client and the proxy can say, I'm only willing to do forward mode. If I have this encryption happening or no I don't care for this use case. Let it go through. So I think those are the two questions I'd love to get feedback on. Today? Excellent slide."
  },
  {
    "startTime": "00:12:02",
    "text": "So there are two proposals that were on the list and this is a... Prayer for diagram partner of what you did and I change the names of things. But Like, roughly you have two You have your original packet and you have your transformed packet. They end up being the same size. You have these different fields. You swap the Cid for the virtual Cid and then you first encrypt the remainder, and then the first bite in the sample are changed. I think this is My my impression like, know, this is just, like a stab it's probably impossible to do it. I did have some questions of this of like, is this weird if we're changing what the first bite is and does that make it stick out amongst other quick traffic. But anyway. So we could essentially use As as one mechanism and kind of split up the parts of the pack, use them. As the nazis for the other encryption and come up with the scheme here. I think we need a lot of good analysis and input from crypto folks on the right way to do this. This is one approach. And next slide, the other approach Ben schwartz mentioned was h r two, here are some links to that information haven't gone into depth on these. The list discussion indicated that this probably requires two passes over all the bytes, so it's probably more expensive than some of the other schemes. But it also would be fixed size. Next. And so then the question on negotiation, is, you know, should forwarding encryption be negotiable I think personally I would lean towards saying should be"
  },
  {
    "startTime": "00:14:01",
    "text": "an option you can negotiate shouldn't be mandatory. But if we do negotiate it, we need to figure out how do we spell that in terms of what's happening in capsules, what what is the encryption scheme? Does that need to be negotiated? Do we need to be able to communicate any key information or other algorithm outgrow information depending on what scheme we use. So next slide. I think it's the last slide. Yeah. So there's a question of, you know, do we want to adopt these quick optimizations for this group in general. I think If we do that, would like pause that you know, this encryption work is very important to do and we should only doubt this acknowledging that we should address this personally, as an author and I'm working with David. And Eric on this document. I don't think we have the crypto expertise right out amongst the authors to come up with the whole solution so. We would want, like a design team, but I think that would be something great to have within the working group as a design team and not just authors over here trying to, like, take stab at and hope we get it right and then see if the working group likes it. And then there's this question of, you know, what approach should we take to encrypting forwarded packets and I'd also like to hear from people if there are other functional features that we think proxies could have when they are aware that they're doing quick as the end protocol that we wanna take advantage of. So we have a queue. I may just to preemptively jump on that... No. Go ahead, David. The adoption question, we did go through, you know, refining of the charter text and it's, like, we have consensus with monte group currently going through Approval right now. So We can talk about the adoption question predicated on the assumption that that charter goes through. Because it does know this document as being potentially scope. Right. Right. Yeah. Right. As I think it's"
  },
  {
    "startTime": "00:16:02",
    "text": "the question is more, assuming that the charter goes through, and if it has an item for we would like to do this, can we adopt this document as the starting point assuming that we can as a working group Exactly. Yeah. Thank you. Yeah To clarify that process David's Mass ent. To clarify that process point what you're imagining is we talk about the hypothetical concept of adoption here. And then once the charter confirmed, we confirm it on the list, and that would be with the exact charter because they might get it'll definitely get some tweaks along the way. Sure. Yes. Cool. Thanks. So two points. The first one is on the, like, first bite I would say a very sol issue. Like, what we did for header protection is you, you know, you do a mask. Oh, that's funny. On on the number of bits you wanna exhaust, so you only do the ones that are like, I would do the same ones that are absorbed by head protection and that where we're done. And that way, the spin still works for people who care about that. And then the second point is on the like, figuring this the encryption out. While quickly a third point. I don't think we necessarily need negotiated because that that opens the whole kind of worms and just like quick view one, the initial encryption can be negotiated. We can just ask a you know, Hdr for now on call today. We can negotiate whether or not we do it though. Yeah. With around we do it a little bit. But not, you know, or do you want a yes or cha or whatnot or And then finally only on the like, make mechanics of how to do it, I totally you agree would Tommy Now, No it's fine. Trust the officers. We totally got this. We're not gonna mess up the security at all, it's fine. So, yes, please let's create a design team with people who can prevent us from shooting our joe's off. Thank you. Mike My bishop, Slow. So I'm wildly in favor of adopting this document."
  },
  {
    "startTime": "00:18:00",
    "text": "I would say that As far as the encryption goes, one of the big benefits of this is the ability to shove that act relay down to a lower level, potentially even to a nick and not have to spend cpu time on it? And that makes me a little nervous about the more complex the rein encryption gets the less likely or to be able to do that. So either it has to be negotiable, or it has to be simple enough we can shove at the neck. Very good point. I totally agree. And I think that's why like, the number of passes we need to take over every bit comes into play. Like, we want this to be secure, but as minimal as possible. Okay. But, yes, let's adopt. Yes. Yeah. It's It's my time now. So I'm I think I'm in favor of adopting. I need to go back over the the way that you're doing the virtual connection ids because I found the draft and the slides confusing in in the short time that I looked at them. So I need to convince myself that that's that design is fine, but I think I understand how it should work. Also... How I having my head is good. What having the draft doesn't match what's in my head. Because it's a little bit unclear, but that's the only problem that I have with the with with it adoption. Fucking convince myself with that work. Right? We definitely should do the encryption thing. The reason that I proposed the As Version of this one is that it it is very close to what the quick packet of protection does Mh. And my... What what I imagine we would be able to do then. Is if if the people building the quick packet protection in in hardware cover enough, they can reapply the same process here with with maybe some small tweaks. And I think that's probably gonna be better"
  },
  {
    "startTime": "00:20:03",
    "text": "than than doing it too past thing even though... Yeah. Some some researchers have come up with a great idea that that manages length preserving encryption. But I think probably in this case, we can we can do something specialized. I don't have a particular opinion on the negotiation of of this, but I I suspect that I would like to say that my starting position is this should just be turned on and it's relatively easy to go through the process of getting keys and whatnot. So we we should we should see how far that gets us before we we start to talk about turning at Cool. Thank you. Other. Hi. With no hats, two points. First of all, with regarding the encryption you're under selling the benefits of it because to point out briefly in security considerations, like their One thing this does versus is tunnel connections is that it removes the ability for the proxy the packets. And you you kind of nod towards that and your security considerations but I'm not sure you fully got through the implications of that. The ability of some sort of attacker like, steal all the all the rate quota or whatever for to our client. Just I'll top my head. I mean, there's probably some other things. So I would be a little scared of about I'm not we need to really understand the the implications of sending une encrypted not having this additional layer of encryption before we we authorize that in, you know, to be negotiated. Other question is about performance. The case I'm concerned about is as follows. So let's say that the bottleneck is between the client and the proxy. You have some connections that are tunnel and some connections that are forwarded. The congestion feedback will be end to end for the forwarded connections and will be proxy a client"
  },
  {
    "startTime": "00:22:00",
    "text": "So try to skip some steps here. So the Rt t on the tub on the four connections will be much higher. And so I think there's fairness issue with most congestion controls where the tunnel of connections will have an advantage. So before we go too far down this path, I think would be worth worthwhile maybe you if simulations or something to to figure out, like, are are we actually getting performance benefit out of this? Or is the is the, like, the ten percent overhead advantage being annihilate by getting, you know, half much throughput because the R is much longer for for the for the forwarded connection. Thanks. Cool. Thank you. Yeah. I think it would definitely be worth noting those trade offs how tunnel versus for interact. I I think in the experience we have we doing, you know, essentially either a hundred percent forwarding or a hundred percent tunnel. And we have relatively tight control over the the round trip between the forwarding and the target. But That may not always be the case and so explaining Yep. So very. So in that experience, you know where the bottleneck was? We we can go into it more. I think a good thing discuss. Yeah. Alright. Thank you. Good one more. Oh, sorry me. May. First of all, I adopting this document. About the encryption part, I wonder if we actually have a use case for it because if nobody plans to implement that part, I'm not sure we want to put it in this graph. We can always have, like, another extension adding it later. Right? I I I I will I want I wanna implement it. Okay Okay. That's just a question. Yeah. Perfect. We do. And then about the condition actually, that's a good point because I think that is something we at least need to mention because different from you mask tunnel."
  },
  {
    "startTime": "00:24:00",
    "text": "Good thing we have a transport Ad. And a former transport To help us fix congestion. Thank you. Good. Yep. Thank you. Thank you, tommy. Right. Yeah. Next step we have listener or Or an? Trying slides now. We can we can drive where you guys what you'd like. Okay. Great. Alright anyway. Good morning, everyone. Happy singh, and I will be presenting the mask connect you to listening today? Next slide, please. So connect you to b as it's stands. It allows for only single flight or connected only. As you can see, you'd specify a path and and very you specify a target and you connect you can only access that target by the proxy. Next slide, please. So let's look at a use case for Webrtc. We have a stand server. We have two users, Alice and Bob. Next slide, please? So Alice gets webrtc connected connectivity through the stunt server and Alice Bob established a peer to peer connection for a voice call, and Next slide, please. And now here's the case where Alice behind a proxy. And so the stunt server would directly be connect connecting with the proxy and and So w. Next slide, please."
  },
  {
    "startTime": "00:26:00",
    "text": "Next slide, please. Oh. David having issues connecting? Mind. Okay. Okay. I was gonna ask if you could share to drive. But we're we're good. We're good. We're good. So here, the voice call would be established through the proxy between Alice and Bob. Next slide, please? So in, for this to happen for a there to be a connection between Alison and the stone server and then Alice Bob. Bob would need to access the same Ip address which would be of the proxy. Could we do this with multiple connections? Next slide, please. Unfortunately, and And a s semantics did semantics we can't really guarantee that it will be the same Ip address servicing both bob Alice. And therefore ice school break And this schematic will not work Next slide, please. And myself but I'll do that later. Erica."
  },
  {
    "startTime": "00:28:02",
    "text": "So I'm I little confused because there's, like, connect So you have one quick connection between owl in the proxy. Right? And They do two connect udp gpus. Right? Yes. In this case, for showing two connected connectivity, but that will not be that may not be possible because the proxy may not run on the same ip address for both connections. No. But you only do one one quick connection. Start with one cookie. Right? And this is like, this exactly the problem that Light turn has. So I'm trying understand why it's a different. Exactly. Yeah. And so the David Jumping in as author. So the issue here is in Http semantics, you could have a single quick connection to your first Gdp then they could send the connect p to different servers on the back end. Which would then have different Ip addresses. So that's what we want instead of having separate connect requests if you put them on one, you're guaranteed to be coming out on the same box. Yes. Don't do that then. No I mean like, I like enormous amount like when turn design, There was like a huge amount of au exactly this topic. And and whole bunch of compromise and turns, specifically designed to avoid allowing people to ex effectively web server effectively servers outside the firewall. And sorry unless you're plan to reconstruct all those turn to construct instructions. Like this easiest solution the problem is not to do this. Is to... To a fix semantics so doing that. Ip address. Well, we are not really not in our purview to change should be semantics, and I don't know if I'm not as in the room. He probably have thoughts, like, I get what you're saying. Let's we have more slides about those bits later. Alright. So next slide, please."
  },
  {
    "startTime": "00:30:03",
    "text": "Yeah. Sorry. Pretty. Yes. So now connected to p with listener support but infinitely, many tu. So using one one connection we you could specify multiple targets. Next slide, please? And so the way we would do this is we would have a path and As you can see, we we're not defining a target in the path. In fact, Instead we're doing it in the quick frame itself, and the Ip address and that you be port provided. So So that's Next slide, please. So what these fields mean so From the client to proxy, the client uses it to specify the target. Where wants to send these to b packets. And from the return from proxy client that this is the source where the proxy is receiving the packets bit source, it's receiving the packets. Next slide, please. So the last time I asked for some inputs from from folks regarding Webrtc, Like since we needed some webrtc expertise since there are some similarities, but that and connect you to be listener? And There's these are the the feature requests that we opened on on our github, and so thank you everyone for participating in the mailing list. Next slide, please? Yeah. So the first one is Thanks to Peter tat for this and So allowing the proxy to send the public Ip and or to client. So the"
  },
  {
    "startTime": "00:32:00",
    "text": "potential ability for the client to retrieve the proxy outbound Ip port Ip port addresses. And this would be useful for ice and like, use in certain cases. Go, Tommy. Tony me Poly So for this do you have a proposal or thought of how you wanted to send the information back yet or not. I don't think we had anything at the moment. Okay. Just one thought that comes mind is, like, So we have an interesting line here between things that are specific to Udp proxy and like mask and things that are generic Http. And there are certain things like, the proxy status header that we're doing stuff with that's from Http. Wonder if this is like a generic bid in which Proxy status tells you next hop. Could we just have also include information about I don't know what you call it like, The thing I used to talk to the next top, then we could do that for connect proxies too or anything Just, like here's the address I assigned to you on the outside. And that would be very useful here but it it'll also be useful. But exactly. But anyway, so I'm just saying like, this may be something that we need to solve by potentially split out into a different document. Okay? That does not belong sur in mask because it could apply to more things than Udp. Sorry. But once you had that, you don't need this. So like, The way turn works, is that the turnover server tells you what your exterior Ip address is. So you don't need to contract this on server. And so then the entire problem statement you have with slides ago he's irrelevant because as soon all you have to do is ask what my Ip address is, you can just and you could bind the connection to the target so yeah, I I think to solve this, what we really need is"
  },
  {
    "startTime": "00:34:02",
    "text": "just the ability to have the same local Ip in the same local port through the proxy. And there a different ways to spell that. Right? What do you the same panel help. What we... So the No. No not. it's so... Okay. So, like, K. I tell me moment minute the wait... Like, oh community. What I'm saying what turn does turn it turn em that. Right. And so and end turns not need an exterior un server because the way turn works. Is when you created binding through the turn, endpoint. The turns server it tells you on Peter has assigned you, and then you simply shove it in your risk candidates. And so the... And so the problem statement of having the problem statement having two different two different Udp connections that have to have a same Ip address. Is the same same the same server request pictures are relevant. Because you don't need to talk to the stones or whatever. And so the... As the way return works is you say please assign me. And ip address. And then you... And then you... And then you said outgoing packets through that through... The package is through that. I it's I must address independent now. Finding that. But we we do need the ability to tell... Because we... We need to get it an exterior like, a a proxy Ip address port we need to learn what that is. We need to be able to accept incoming traffic on that. No. No. No You don't. This is exactly. Like frustrating. very So wait way ice works. Is that the on that you is... So in any in any address address independent, if you address independent binding, with dependent filtering that. Right? Then what you do. Is you you you register... You binding through the term server. It tells you This is the binding I we use. Every exterior thing I said, I honestly send to receipt. Right? And and then the on... And then what you do is you if you transit outward the connections. Right?"
  },
  {
    "startTime": "00:36:01",
    "text": "Okay. Like mh. On mean, I I mean is it... It's like, like Maybe I'll have to write the down to like. So with and Here's the question. So with the current connect Udp, there is no way to either learn what outbound address report you have, or to request it for new five tubes. Without that, it is... We we cannot solve this currently with Right. So Right. So you're saying like we can solve this as long as we can know what address in report we were assigned and be able to use that same address import for future connections. Right. And I think this is potentially another way to bell that you could do it, but that is another is a way to solve this. That is potentially simpler. The important thing to turn does his that doesn't allow arbitrary remote connections through the same address. You have to send a packet out open open. And that and that is precisely the security mechanism that like there was again. There's a to see point. It's Con just jumping in really quickly as Cloth. So the the issue here is for like so the problem statement is we wanna be able to do webrtc over. So the way connect Is spelled right now, you get a data coming down from the proxy of the client, it only ever comes from that I original Ip import that you poked at. Yeah. And so you need a way if you're sending another packet to the client to say, this this one's coming from somewhere else. Right? Giving Yes. That's pretty much all this draft us. But"
  },
  {
    "startTime": "00:38:00",
    "text": "Yeah. Just to clarify here. My impression is like, there is a difference in the approach because I believe what the current draft is proposing is You asked the proxy to say give me... And I p import that I own that you will allow me to receive from any arbitrary place on. Which if you do have that I think is you could implement this. But you were saying that for Is turn, but we need is just the ability to have specific five tu that share a local port on that. And that is that's all you need for whoever. So for because of time, I will move on to the next couple of slides and maybe we could discuss after. K. So next slide, please. So here's another one from Peter Ta. It was about Do we want all ips to be able to send data to the klein by the proxy or like, or having an allow list of Ips that are allowed to to return to return to the client by the proxy And this mechanism is also Pebble in intern. To to prevent turn being used as a as a server. And next slide, please, I go through the last issue. And so this one's from Ben benchmarks. About compressing away the Ip in the port. Currently, in each we have proposed the Ip and the port to be present there."
  },
  {
    "startTime": "00:40:01",
    "text": "And this adds a lot of overhead. For compressed audio formats like ben set. And David recommended perhaps registering a contact study for the for the Ip and the port. And so for each, We don't have to carrie, carry this or head. And that would be it. We have couple of seconds for and and Benchmarks. Hi. I So I think this is important stuff. I think it should be adopted by the working group. I think the draft as is is a good enough starting point. And on the specific topic of allowing inbound traffic, I think the turn, and might be actually made a mistake here, ended it up mixing up essentially mechanism and policy. Really, I think what we should build here is very generic mechanism that just lets you open a Udp port and accept whatever comes in. And then as a matter of policy servers our welcome to essentially place a state firewall on top of that so that inbound packets are dropped unless there's been an outbound packet to it. But that in my view is not part of the protocol. And that's sort of... It's a separate component to something that you can place in front of your server if you want. At the other thing here is we just talked about with quick optimizations to reduce overhead could equally well apply to Sr p. And So, you know, I I think there's an interesting question about it. What the right conceptual framework is whether we're being a little bit to narrowly focused on quick there. Thank. Okay. I think that makes sense."
  },
  {
    "startTime": "00:42:00",
    "text": "At next. Bishop. Yeah. So I think that kinda ties into what I was gonna ask which is ec alluded to the possibility that you might run a web server over this, and I don't think it's entirely clear. I mean, obviously, you want to support the Webrtc case Are we trying to rule that out? Or is that actually a use case that you might consider because those might lead to two different designs. Like, pulling Webrtc and snow like, would it be a use case who consider scope for a client behind the proxy to stand up their web server on a port allocated to it by the proxy. Right? And I see a thumbs up from David. Are you saying that is something you wanna support? Yeah. Yes. Okay. So I think I like to recap we got to the registration we have with return. You got situation return? Is it a large number of enterprises. Runs staple inspection firewalls. There's and firewalls. Are designed by and large force and outgoing only semantic. That's the estimate Mandate or attempting in force Udp. And and turn design the way it was. On the thesis that, if it was... If it was built so it had a to generic. Incoming package What like Mike's proposed. Right The result would be that we've blocked by firewalls. Big files would say, This breaks the semantics we have. And so and and so the and and so so we can't while all. Right? And so you just went to war with people who on the firewall. And so the reason the the reason why Design is times not work. Was because for that purpose, is because the idea was you're bet determine you doing turn. And say this is obvious turns as cool the firewall because is not opening up the firewall for"
  },
  {
    "startTime": "00:44:00",
    "text": "for an internal server. Right? Mh. Now This is two thousand twenty three not two thousand thirteen. Which about in this other line. Things may have changed. But on like these were designers are very conscious in terms design. Precisely with the purpose. And so to... And I think like you know and maybe... And so so I think it is a much bigger decision is working group. It essentially does completely break the effect effective contact that was made the people run the firewalls that we were not gonna do exactly the exactly this thing. And so on And so like, that maybe is gonna to do. And maybe a firewall are over So I'm not necessarily like a opposed to that. But but I mean, but that that is how we gotta to stay we're in now. And so I think like this... I think like, before like the room us edit off this. It's really worth worthwhile going back. I'm looking it and, like, and the fact that Just you try reinventing every single piece of turn, like, you know, start Like with going into channels and whatever. Is like, just like, really we you go back and with design is and on andy like, Are those now wrong? In which case you sound different or is it just the turn is, like, no longer that the protocol semantic bogey it is and, you know, we think she's listening instead. And I guess let me just say one thing like, the is Like turnover ridiculous us. And so it's not actually like the case that you cannot do like turn, you know, with and you can't return with security and and and and not have line blocking. So again, like, I'm not, like, opposed doing some kind of term like thing, but saying, if the it's wanting to say we wanna do... That we we're trying to keep the same set of agreements we had before. And all von. The protocol It's quite to be accurate which only aperture different And so I think does like the question to ask. And and and and those... And if... Once you do that then required you heard there different things that different natural. Right. Okay. I think Right. Yeah. That's it. Thank you. I guess we'll an interest time we going the next presentation. Is thank you. Day transmission. Yes."
  },
  {
    "startTime": "00:46:00",
    "text": "Moment. Okay. Hello everyone. Ami and Alibaba. Today, my talk is about the transmission extension of edge three grants. That's slide, please. And so our use case is to accelerating the quick in our mobile application with Udp Internally. We will have a Ton bro on the edge port and the client build tan connection to the sun policy And then the client will send the end end package through the tunnel to the tunnel proxy and the will pass this package to the Id to the data center? Their slides, please. And so there are two ways of tunnel quick connections in mask. We are know that the first using the reliable way, we can send the end to quick package through the Deepgram catch in quick stream. The other way using the reliable way, we can send the internal quick package through the quick diagram. And some pros and cons in the array we can do the local loss requirement between the clients and the proxy. But a in some head line blocking. Especially when we send the parallel into streams, which are stabilizing to one single quick screen. And they are reliable way will not have any and head of line parking issues. But also we don't have local loss recovery as well. So we can see that the transmission of"
  },
  {
    "startTime": "00:48:00",
    "text": "is appealing for the performance enhancement is optional. Honeywell help packet lot on the last mile. As slide, please. So the next question would be which layer to just made the, we still have two options. The option line is to add transmit parameter at the quick transport layer to negotiate with a quick transmit data grand frames. Is natural level but it's not very inflexible. The other option is that we can configure the and the proceed or transmit three grams, which when they they card last supply transported, the that's slide, please. So design, please pause stop efforts, we should make sure that each time should have his on configuration influence. And we also should be able limit delivery transmission overhead. Because we you will not want to much traffic calls caused trans transmission. So that's slide, please. So our design chart is the extension for Hd trans transmission. And first, we add a new items structural field, which is called the returns to negotiate eight the use of is this extension, and the client consent this field for the udp headers the proxy and the proxy could design whether it will allow this extension."
  },
  {
    "startTime": "00:50:01",
    "text": "And processing response to the client then the client could use transformation to counter many times on Can be muted. I I think that for server packets the account could decide the limit and for the package will from the server to account. And the kind use this capsule type. Sound, new transformation limit, to inform the process is limit and it's upload where Okay. Next slide, please. So the last question would be why we need to turn the transmission to billing limit and how to set the value Because we want to have some control over had. In may... There now may be better ways to do this. And also has been has suggested in the medal the client could also reports on transport and performance metrics to the proxy, and we can configure it dynamically in the proxy wednesday's metrics? So how do set the value way. One possible way in emailing we use an Rt tool divide t one which the Turn means the run time between the Udp proxy and the quick server. And rt one means the launch time between the quick client and Udp policy. So the the idea to stop transmissions was the end to end connection would have done it. That in row assembly way, and you can..."
  },
  {
    "startTime": "00:52:02",
    "text": "So next slide, please. Okay. Then we have done some experimental in in our scenario. We When... Some parallel of five five harry five five hundred million milliseconds. And we come to maybe in an in the from kind to in the prosecutor procedure server, and the way he says on random on notice, which I had on the account with policy which is the packing loss on the last mile? And we have Drawn two conclusions from the experiment results. But I want the last rate and becomes five. We can see that in the metrics, first conversion is that compared with the reliable mode performance job to in that suffering the head of line blocking issues. And and the second conclusion is that compared with the vanilla available, on the arrival one, which is set in image one. Achieves better performance due to the local launch recovery. And it's all allowing simple experimental or we can we can do better way we can use dynamic values to use it in powerful way to get better experience. That's fine, please. Okay. And you go back."
  },
  {
    "startTime": "00:54:03",
    "text": "K. So so purple reliable orange is the current thing and and and grace, I think you're proposing. Right? Yeah. Lower is better or lower as worse. Louis better. Great. Thank you. Then that's what slides will be something open this discussion. So the first question is that is there a better way to replace your limit or we have better ways to set the returns transmission limit our opinion is that we can we dynamic queries, and we can use some metrics from the network matter measurements on for. For example, run trip time, as maintained burn lives of tunnels and end financials. When it can take rate into consideration. Maybe we can do some adaptation logic And for the open discussion. Last slide, please. Okay. Discuss are problem on the values is that the transformation impact on the end to end congestion control I think that for known long space, just through for example, Pv, it seems fine. Ban long space come through. Might hide nothing by low transmissions may delay loss based and to end desk controllers to out to conjunction and I lead to pro descending buffers in internal connection on that some And mechanism, for example, the red of being introduced in the"
  },
  {
    "startTime": "00:56:02",
    "text": "tunnel connection to activate code packets to this problem and is an open discussion. Last, please? Then the last problem is for cascade proxies, in case. We just have one one the first hop link. So the the unpack loans was most happened in the last mile from trying to probably one? So we. Mostly says suspension in in england side, but if we have several hubs, maybe we should but capture to nest hop if the packet laws happened, in press who process proceed to. So it's an open discussion and we could do extension in in the future. I see several people online? Martin. Yes. So first of all, dividing the By other doesn't work. Because you have you have. Second if you you assumption that that the bandwidth bottleneck is between the client and the proxy. And loss on that connection is the only signal you have for the server to to stop sending if you're using a loss based congestion controller. So now you you so suggest doing some A, which means dropping packets. But now this is the problem that you wanted to solve from the first pike place that packets a drop because of because the with this he's third thing simulating the random packet loss usually doesn't make a lot of sense because packet loss is not random. I'm a little bit. I'd be a little bit careful with these results."
  },
  {
    "startTime": "00:58:08",
    "text": "Hi, Alex. I'm looking at because presentation and the draft here. I'm actually finding myself wondering if we even need an extension to accomplish the results that you have here. Looking at the the primary option that you're presenting with the re limit, specifically example you've presented here, the client here is the mobile phone. The thing that actually has a least amount of information about the cellular situation. The thing that actually has the vast majority of the information about the airtime availability and the loss is not the client it's the proxy itself. It's a make that it can be embedded with the base station radios. So from my perspective, the re transmit limit is actually something that the proxy itself is in a much better position to decide especially since here either for connected or pack Ip, you don't have any visibility on the protocol anyway. Specifically this included your experiments, trying to tunnel quick. You don't have what the header available to you because the data is encrypted. So I don't really see any particular value in the setting that your proposing. I think you can get the exact same effect, purely just implementing this capability on your proxy. So it's just a starting point. I think Okay. Mechanisms could be done in the. Hi, David Ko. Still a mask used. So first off, thank you for for presenting this. So I wanna make two points the first one is regarding your experimental data. I'm assuming you used uniform independent randomized loss in your simulation. Is that correct? Yes. So in in my experience, doing some in this space, that's generally not cor with reality."
  },
  {
    "startTime": "01:00:03",
    "text": "Because in modern network in all networks as far as I can tell, loss is not independent and uniform. It is highly correlated. Because you know, congestion and airtime and all such things. So I would recommend doing running the experiment in our a real world scenario over an Lte network, and I would love to see those results. Before we to to help motivate this because I'm not clear that we would see such a win. The second point is I want to highlight for everyone in the group that there has been an Ip disclosure on this document. And it's not from you. It's from the folks at Eric. Who have a patent titled, selective quick data payload re mission in a network. And So first that would be a problem for adoption. And second, I just wanna say to Our and friends, That's not cool. Like this s of innovation in this working group. So I'm really not enthusiastic about that. Hi. You tim from Alibaba. First I want to answer david's question, yes, we actually this time experiment in the wild, but but not with this work. And we do see that, okay, the loss is correlated especially in the in Lte because you have the re on the mac layer and also in the network work. You have deep buffer. So one when the loss happened is mostly ports loss. Yeah. So... But but but but my point is this word is just like a starting point. I think we can also think about try to expand the semantics, right, to incorporate other capability, not just limited to the patient. And also for the second point, I think it's... We we also want to ask the opinions from the working group because I think one problem we have is how do you differentiate between the congested loss and the random loss."
  },
  {
    "startTime": "01:02:02",
    "text": "And how how do you design a controller that can reliably tells that and we... Yeah. Yeah. If anybody in the working group has a good idea please let us know. We really appreciate it. Thank you. Hi Yan. Here's the Trauma from University. I I have to say that I really like this proposal because I think that user case is really clear that we may have some circumstances that we have children with transmit made mask. Okay. And so that can enable some reliable transmission or reliable transformation protocol that I quick and we make ponder some random laws during the client communicating with the So I think the general idea of this proposal is great. But in my opinion this is kind of over complicated by running quick to deliver some kind of encryption and reliability over http, they have where I'm over masks system. So I think there maybe some better solutions too see is some complexity like you can match the quick stream two. Using the data requirement two send Udp and match the different you say that administrative quick extremes to avoid will trans or to let the quick to help you. So I think that it's a good proposal. Maybe there are some better solutions. Thank you for your suggestion. Earl ent. So I I would like to thank you for bringing the work to the Idea. Thank very much. And especially I would like to appreciate you brought experimental data to go with it. That's always very helpful. I agree however with David that the experimental data may in fact not"
  },
  {
    "startTime": "01:04:00",
    "text": "match the needs here in part because of the car correlation issues he raised. And in part because many of the networks you identify as the potential sources of these laws. In fact, have mechanisms to deal with that loss that go back several generations in radio technology. For example, was something invented Cd a because they identified exactly this problem for Tcp, whenever Tcp had a radio loss, it thought was a congested loss and shut down. And especially in pre reno, congestion the controllers it it kind of was like a very bad scene, and they put in To say, okay, we're gonna make sure that no matter what else happens, this last hop of the link will look utterly reliable. Even though the radio field was as as full of crazy as it is today, and the result of that was an enormous amount of jitter. Because even before we we called the buffer, it had to have a big buffer in there to make... Make sure it was there with the the cross correlation of losses that David referred to you ended up with b and Jitter and you were trading one problem for another and especially because the use case that people had for Cd network networks was this thing called boys. Lot of Jitter was a problem. So I I think if you are experiment with this on a motor network, you will find that the the lower layer of hybrid A and in fact, are actually handling this for you much more often than you think. And although Miriam put posted in chad, the remarkable idea you might turn off hybrid Air q in order to use this one instead, ...I'm just astonished by this notion, and I shall have to go and lie down as I think about it. I think functionally at this point, a little bit more experimentation may identify for you that this is either not the the theoretical problem that you have identified or that there are much narrower cases here. And those narrower cases, I'm almost certain will result in different design."
  },
  {
    "startTime": "01:06:02",
    "text": "To the point of an Ip that David made, there was was patent stuff on That expired at least ten years ago. So if if you wish to go and talk to the patent office about somebody reinventing the wheel that that is a crucial approach. Thank you. We will to more experiments later. Thank. Ian what. Google. I think they certainly possibly work in this space, but... Yeah, I think needs a lot more experimentation. The number of transmissions in particular seems like potentially problematic choice. I probably would choose a time target or something like that? Like, an obvious quirk of the number re transmission thing is if the down from the proxy client gets congested then you start, you know, building up potentially like, infinite or close to infinite? Buffers in the proxy. Things like that. And control loops get really, really wonky. If you start introducing a huge amount of Jitter. I'm also curious But a prioritization question here of, like, do I things that were lost or do I, like, proxy through like new packets first. If I'm congestion limited on that laptop. So Yeah. Real world data would be a lot more helpful. I think for on a number of levels I'll set for comments the ted made about re transmitting on like, and things like that. Alright. Why. I was just gonna Add one more thing right The one thing I he asked to measure, you measure primarily data measure primarily data, you know, how much over overhead date overhead of of previous written person you had. But as Ted we're saying, you know, one of the one of the things with voice voice and video is that you can't eventually, just too late they help you very much. And so I think it'd be useful to also measure some Measurement. So you're able to measure how likely it was. Like so, you know, like like a like a voice like a voice packet give example little than fifty seconds or hundred milliseconds not useful. And so I simulate like sort kind loads do we have wastewater where like continuous packets of voice like this more, and then that same the same losses, and want to see what"
  },
  {
    "startTime": "01:08:03",
    "text": "like sort mean the delay time for the transmission was or like, plus something. For Jitter, then give us a sense of whether is actually works no scenarios whether had a problem. Obviously, Ip is different, but like voice gonna okay. It's so good for suggestion. Awesome. Thank you very much. Next up we have numbered Http data and while we're getting set up for that, we'd like to remind everyone that we operate under a code of conduct in this working group please keep that in mind when you make your comments. Alright. I'm gonna talk about numbered Http data grants. Next slide, please. So I briefly talked about this last time. It's a pretty small extension. We're adding numbers to Http. You can indicate support by setting a header, you can registered the use of these number by sending a capsule and you to define a context Id for that. You can define it. The size of the pack number space you wanna use, and then you can use these sequence number data balance. It's a very It's a very simple proposal. I'm not talk too much about that. I'm gonna talk a little bit more about motivation for this, and then we can can see if this is something that people are interested in working So Next like please. So why do we want to do this? So we have this thing in three called. Next slide, please. The latest version of this document called T twenty three five zero one. Version eighteen dot one to zero has added m quick steering functionality to. Hs is used to to handle traffic over 3g and non 3g accesses in parallel. You can do this in various modes. You can do modes that where you switch traffic based on various conditions, you can you can send traffic in parallel using something called like a load balancing scheme. You can duplicate traffic"
  },
  {
    "startTime": "01:10:00",
    "text": "like using a redundant traffic traffic sending etcetera. And There are different protocols stacks that can be used with this and recently and be quick was added as one potential use for this. So next slide, please. So if we go really, really deep into one of these documents, so we have close number five dot thirty two dot six dot two dot two dot one. Is it's it's gonna take, like, twenty minutes to actually get to this class because this in a huge word document that you can go and take a couple of cups of coffee while well, you let this, you know, spin up. It doesn't matter how powerful your machine is, but anyway, also described two data modes, and we have data grand mode two, which is the default mode, which is also fantastic. I think. This is this is the standard we use today. It's unreliable. You you don't get any sort of packet reorder done or support from that in the H layer. But then there's also A mention of a data mode one. This is defined as an extension to to how how data are sent in in the current Rc ninety two ninety eight. Here the idea is to add sequence numbers two to the data and allow allow an endpoint to perform some form of reorder or d duplication of packets. And we're gonna talk about that. And this is an optional mode. So when you when you implement using it be quick. You need to support data grand mode two. You might support this one. So if we go to that. Next slide, So one use case then is reorder. So it is to finds a bunch of steering modes. Some of these are, like, what we call active standby or switching based on on, like, the late parameters and such, but there's one called load balancing and this one you really aggregate traffic over over two paths. Simultaneously. And there might be then for for these cases, there might be use useful for"
  },
  {
    "startTime": "01:12:02",
    "text": "for an endpoint to to sort of reorder packets that are or gaps that are arriving out of sequence before you pass it on to to an application. You could do this by sending kilograms reliably over capsules over streams. But then as we saw in the previous presentation, you you kind of it in a way, You... Potentially introduce head of blind blocking, you have to have to perform the re transmissions and everything to deliver stuff reliably. So an alternative approach to this is to to use the Sequence number extensions and you can do there's some limited type of reorder, you you can delay the delay incoming packets on a slower path, by some short amount of time to try to to to deliver data in sequence you give up after some time? If if you... If that's not possible, like for instance, if there was lost or thing. You don't try to fix that. So That's that's one of the cases here. And if you go to the next slide, We something we have the other cases we call the d duplication So in Hs, there is a redundant steering mode that basically allows you to duplicate traffic over the two paths simultaneously. So if you have... If you have some application that has some very, very strict needs on on on delivery. Like, you you can you can duplicate and you need some way of you need somewhere way. D duplicating it I know you can do that on multiple layers. So if the end end traffic has is running some security protocol that would probably do it for you, but it kinda makes sense to to to do this where we do the application. So if if you if you have sequence numbers on your data it's a very easy way to detect which packets are already duplicates. So that's the other use case. And if we go to the next slide, a bunch of people in the queue, do people wanna come up and talk now or but then I have like two slides"
  },
  {
    "startTime": "01:14:03",
    "text": "Okay. So some of use cases for when this is used, I think most of these use users where where we kind of duplicate and aggregate traffic is not intended for kind of standard mobile broadband users. Is more like you have a campus with existing Wifi coverage augmented with five radio might want to have a single management plane for your subscribers. You have devices which are mobile where Where you moving out of coverage of Wifi Of five some of these applications require kind of consistent and good qualities so you wanna do either aggregation or redundancy redundant traffic steering for these things. We have use cases around emergency response teams where we kind of wanna duplicate traffic over multiple accesses to ensure ensure that we kind of have the best quality of of of their applications pretty much. So... Yeah. I think we can stop here, I have the next slide is is some other discussions on, like, this isn't an... Yeah. Is discussion like ex, but I guess, most of the common so far is more on what we've been discussing. So before we go to this, we can probably take that questions. Hi, Alex husky. From a wire perspective, I think this extension looks fine. Although I kind of wonder based on the applications that you're describing if it goes far enough. Given that one of your stated goals is to do things like a avoid ahead of mind blocking. By having a single sequence number, these data, it means that presumably with type of protocols that you're most interested in, tunnel over this are gonna be things like quick. Which fundamentally have multiple streams. So sort of confused as to how you're getting the types of benefits that you're p reporting to have if you're not necessarily aware of the types of protocols that you're going to be putting over this. Because for example, you know, quick can have lots of different frames in the same packet, which would be streams. And now we're talking about, like, what happens if the quick level re transmissions"
  },
  {
    "startTime": "01:16:04",
    "text": "going to be affected based on how you do reorder there. So like, it feels to me like, the wire format questions here are almost not the interesting parts actually more about the, like, how you lay things and make this work well, which makes me feel like there's there's a huge problem based with this extension that possibly needs a lot of thinking before we even get to the point of deciding the wire format that. Yeah. I think I think that there's a very good comment. For sure. You you you can really go deep down of this. And I think definitely if you have quick with multiple streams that that opens up a whole new problem space. I think but still comparing this to running it purely reliable then at least we removed some parts of of of the of those issues. Because we at least we wouldn't like, block everything to do transmissions such. But I agree. I agree. This is this is potentially a deep problem ma'am. Quick was designed with the inside that for an point always better to have a packet as early as possible. There's no point in receiving a packet later if I can have it earlier, because there could be something in the packet that I want to process. So I don't really understand why I would have something in the middle of the network that artificially delays my packet. Now you can say Oh, it's multiple paths, and then packets arrive out of order and this confuses quick quick loss recovery quick loss detection and and might have, like, some congestion controller the benefits. Then I'd argue that this is something that should be solved. On the quick layer instead of by a proxy. Reorder packets. Sure. But that's assuming that it's always quick that we have in this, which So it could also be for non quick applications. You can have... For instance, we we you can... Some use case can hear me be some kind of remote controlled device that"
  },
  {
    "startTime": "01:18:04",
    "text": "going through areas, you might not be using quick for that. You might be using quick, which is great. You might be using other protocols to to stream video or whatever from these things. So Yeah. I I understand for for quick. And from modern transport stacks, I think they can handle reorder very well. This is an optional mode as well. So for you, like, if you have an application that do not need this, then you should not negotiate the use of this extension. I think that that that's an important point too. And then we also have we also have the case where we we duplicate the traffic over over both accidents we're actually sending it redundant. And having a signal number is a kind of simple way to just d duplicate I'm sure you can do that in other ways as well. But this will be one way yeah. Hi. That's. I in general, I think that we should be pretty open to extensions. But I I just... I'm very confused about how this is supposed to work, Are you saying that, like, in the in the duplication case are you saying that that the quick packets containing http t p three data would be duplicated between the Http client and the mask proxy? Not the. The payload of these these database be duplicated and sent over So and in those could in intent, those could be... Those could be payload of whatever protocol you're running into. Right? So Okay. So then in Anyway, I... I'm having very... I a lot of difficulty figuring out where the how this actually fits into the mask architecture which necessarily has a single Http client a single Http server, like alright"
  },
  {
    "startTime": "01:20:01",
    "text": "Yeah you're running multi quick under. That's that's the assumption. I guess that that's shouldn't been more clear. Yeah. So so even if you're running multi path quick under it quick, for example, it's going to handle all of the duplication by itself. Right? But has No. Because because it's not sure that you have n to end quick. Correct between the target and the client. So No. I mean, between the client and the proxy, we're speaking quick. Yep. So the... So if like, if a packet is duplicated, maybe I'm wrong about this. I I'll ask the group if if a quick data is duplicated by the network, is it going to be received twice at the Http layer. I don't think so. Yeah. David K. Before I make a comment on this, I wanted to address something about my Ip comment earlier, the chair rightfully fully pointed out that that was over the line. So I want to offer an apology to our and friends. Sorry. I got carried away. Worries. Regarding this draft, this is I agree with the discussion so far. I think the when you have quick or Tcp running over this, it it would make things worse. We saw that at a previous or when the cellular base band was reorder packets that made sense in old stacks for Tcp, but in modern stacks, the sooner you get the pack happier you are. I think if you add some text to a very clearly scope this. Two cases when you don't have those. Then it makes sense. I my personal will take us a quick you should just put quick everywhere and that way you don't need to solve it at this layer, but I can see that there are times where you count. So it can scope this tightly that it makes sense. Sure. Okay. Thank you. This good suggestion. Tony me probably apple. So thank you for this. I think this a good discussion."
  },
  {
    "startTime": "01:22:02",
    "text": "It seems like there two halves that. There's like like, fixed reorder and then there's fix duplication. Yep. I think on the reorder, yeah, making it very clear this is for non quick etcetera product Protocols Like I know you having written like and Ip two stack, which has like, really basic kinda dumb reorder fixing and the handshakes like this may smooth things out on particular implementations. I think it's probably the less interesting part of the document... Like, it's probably necessary for practicality, and we have it in there, but maybe it shouldn't be kinda like the flagship reason why this is a cool extension. I do think the d doo is quite interesting. And so just to try to explain and how I and thinking of it to Ben's comments. So if we do have M mp quick, which is when you're doing streams, it's very similar to Where at the transport layer, it is handling the uniqueness of a stream frame. And so when I send this a particular chunk of data for stream zero on one path and another path that can be d duplicated by the quick layer. And that's great. Data cannot do that because data do not have any semantic other than the stream they're associated with there's no way to know what byte or order this is. And so think this is actually a very cool thing that once we have empty p quick, and we want to be able to do like, these cases where we have more aggressive duplication of packets, which is definitely needed for some like super interactive cases where it really really matters. That You will need the duplication because that is something that quick Deepgram especially punt up to upper layers. And so I think it's of, like something you need for M mp quick with data. Yep. For certain modes of Mb that are not about handover. So"
  },
  {
    "startTime": "01:24:01",
    "text": "I would love to see this be kinda like the flagship use case of the document. I think it's a really good feature direction. Thanks a lot. Agree. Jens what. Yeah. I think there are a few use cases this... In terms of even for quick actually, there could be used use cases where it's useful if you could actually use the Id to reorder where the downstream link is congested. And so you have some number of packets that are in a buffer just naturally that you're queuing up. I mean, various portions of the software active is t me all the time. So I don't think it's totally useless, although it it does seem like the number of use cases are complicated and difficult to reason, about I think the probability application one is is the most clear when with the the other cases is being more experimental I mind. But certainly interesting I idea. Thanks. Just one you I'm about. Just a one quick comment. So actually, at Alibaba, we also use this sequence number for d duplication. And I I think this really important work about the right now we done this in our It it it's it's not the exact the same format. But I I think later, we can try to share some That will be excellent. We'll experience data. So I I I really think this love more. application is for us because we have implemented we have tested it's really really important. So I I res the this working group part of this work. Okay. Great. Thanks, a lot. Yeah. Have on more slide, but I think we we can skip that. It's a discussion on ex because the idea here is that what happens if you have various payload formats, like we're assuming currently that you're running this we only have one payload format so far defined in this group or, like, two one ip one for Udp to be. What happens if you have multiple formats. You won't have sequence numbers on multiple types of. Need solutions. For that there's one simple solution here that might not be the best solution and this is probably something if we continue work on this is this something that that should be discussed, but"
  },
  {
    "startTime": "01:26:01",
    "text": "in interest of time we can skip that now. Alright. Thank you, Marcus Last we have Lucas. Hello, everyone. It's me again, I'm more awake when I was in London for various reasons, which is good. This is like, I don't I can't of lost kind. I've presented this idea a few times the mass working group? I think we should use this this discussion to figure out Is something we really wanna do or just not bother. So I think possibly where I've not explained the problem while in the past to focus on the technology of the protocol. I'm not gonna do that today. I just wanna explain what I think one of the problems is using connect udp an example with masks because that's where we are here to discuss. I think the problem would extend to to other things like web transport or media over quick, but I'm not gonna explain that. User imaginations. So next slide, please. Just quick reminder there's Http x sensible priorities is an existing draft or c nine two one eight. Effectively, it's got all the technical details that I said I wouldn't go into. But priorities there to signal between client and server something an intent or a usage or whatever. You you don't need to to I guess these things. But the important thing to know is that the the priorities. However you signal them. Or you don't signal them you just decide. All of this is around about effective use or management of resources that are available. And those could be based on transport could be based on"
  },
  {
    "startTime": "01:28:04",
    "text": "server local, you know, resources like Cp memory. All of these are other things. There's whole bucket of stuff that you need to consider. When your operating client server, and priorities can help you make better decisions, but it only really matters when there's a bottleneck or there's there's contention. If you have unlimited resource, you just send everything, and you're gonna work okay. Might be benefits to orders and certain things in front of others, but if he you could run fast enough with enough throughput, probably okay. So problem doesn't exist that. The problem exists where there's some form of bottleneck. That makes you have to pick one before the other or drop one entirely before sending the other one. And and in this case, like the deployment top variations can you have a problem all you don't. So one example with H, Http td priorities and some of the kind of lab testing that you have is that you're reading everything from a local file system and all of the information's there and you have older things priority signals are able to kind of model the world and and doing the perfect solution. But but in reality, sometimes you don't have those resources at all. So you know they're the highest priority, from one perspective don't wanna delay sending stuff because you got the lowest priority at the other end. This is all just basic pro queue stuff. So it depends. And I think that's part of sometimes difficulty and understanding if there's a problem or not is that it doesn't... Literally doesn't exist for some. But for others it can. So the example if you go to the next slide, would be to look at mask and multiplex and the potential bottleneck that we have here. So kinda covered in some of the slides already. So nice warm up. Here we've got a mask client speaking to her max. Proxy over one single quick connection. And that proxy then is big into multiple servers over multiple different layer three all four actions because we're talking about connect connect Udp connect Next slide, please."
  },
  {
    "startTime": "01:30:03",
    "text": "So yeah, we have Http between the client and the property. And and for just from the case layer four layer three, to the service behind that. Next slide, please. Next slide, please. Oh, yeah. And then so if you're was thinking about bowl here... Where where's is that kind gonna be deployed and why the client gonna be deployed covered some of this already. But, you know, we kind client in an access network using the access network to Speak to a proxy and a property probably in a very well connected data center somewhere. Necessarily, you know, in the old school, Hp property use case, it was some box in your court network before you even got into the internet. But in a deployment model where the proxy has great with all of these other servers that it's speaking to. It's it's probably left like have both in that, specifically, you know, throughput or congestion. Is potentially less likely to to be happening there. Then to climb the proxy. Someone's gonna argue with me probably in the chart that I'm wrong that, but Just just just follow my story there. But also, like, the the competition for resources is is is obvious. Right? You've got one thing on the left hand side with all the other stuff in it. On the right hand side, you've got independent errors that the competing, but on a different sense of level. And we talk about this with, like, multi streaming and quick. How many streams can it create? That's a resource flow control for streams flow control for the connection, the congestion window of that connection. This is all, you know, multiple things that is if you go to the next slide the client knows the intents of these connections that it's creating. The property doesn't know much. Should we're talking about some of these extensions that can maybe communicate some of that tent. So more optimization or whatever. But"
  },
  {
    "startTime": "01:32:02",
    "text": "Just again, just believe that the the property is quite limited in knowing what to do. Next slide. We kind of already guessed that this could be a problem with Tcp connect deals Google connect. So the the Rf c nine two one eight has some text there to say about is a good way to do stuff. Like, you don't wanna to get into a situation where your whole blocking one stream because of effectively all as important as each other maybe. But they're not always is important. But effectively sharing some of that bandwidth is a decent strategy Works pretty well. It's it's not the best, but it works pretty well. It's pretty easy to do. Next slide. So let's both the streams, but connect udp doesn't use streams. There's no formal means for the client to express the desired properties of how it would like the proxy. To zen data grants to it. What works well if you're in this model where you have a mix of connect Tcp connect Udp, maybe correct ip ideas. It's kind sp these two different location data formats together. Into leaving them, say or bandwidth sharing, anything like that. And not can be implementation specific just implement it. It's not how you just do it. But it's not clear suits the client's needs because the service is making up stuff effectively. Based on its view of the world not necessarily the clients. And then sort of like a clear problem statement is what I put that But we have few tools to help communicate help signal that some things maybe are more important than is. In order to pick what's what's important though. That's slide, please. So we can solve this. This is what the draft price explained that. Integrating the an idea of Flows, which don't exist anymore, but they do because happening all the time. But into the existing priority model that we have with H, we can just piggyback on the existing connect connect Udp methods and stick ahead on and then just make it simpler work. Sorry."
  },
  {
    "startTime": "01:34:03",
    "text": "Integrated. It's just a simple parameter this in basic guidance. So you could ignore the signal could put it there, but it's just n people in this direction to understand that this does does occur if you're got multiplex going on. In my experience the because of the lack of flows at the quick transport layer for data grounds, some implementations tend to just have a single kind of output cube of these things, which is very very different to the modeling of of multiple streams and and other stuff. So I think we could solve it, but the big question is if you go to the next slide, do we do we need to? Do we we... I think it's time to do something. Or did nothing. And I just want some input from the group because Yeah. I wanna invest my energy in things people find useful. Hi, El. Lucas, thank you for presenting this. My comment just quick. I feel that we have both connected Udp and connect Ip on opposite end of the spectrum here. Connected Udp has payloads and then any bit you want to add is an extension. And connect Ip, which has all of the benefits of Ip headers and and our intentions are removing things for compression. This makes me feel that we're Solving the wrong problem if we add this here, shouldn't people who need this sort of stuff there maybe be use and connect ip. We have ds already. I I think the problem exists for connect Ip as well because ultimately, you're sending data grants between the the client and the proxy. But what happens when you set a priority between a client and the proxy whose cost bits of the packet mismatch. Like, you created a new combination much real exposure of like, what happens when the client thinks the package is important. On the client proxy caption, but is super important for. Well that's a good question and that's why I think we should probably provide some guidance two implement on how to merge these things."
  },
  {
    "startTime": "01:36:02",
    "text": "And that's kind of where the Hp priorities draft goes. It's like, here's a way that is easy and it will probably work okay, but you you know, you've got a signal level cost bits, but we we like fix the client intent. We need to help the proxy make some decisions in my opinion. It's but... Yeah. I think we should be working on this. I mean, this is clearly useful relevant. I mean, I can think of a number of simple use cases. I have a browser and cab is in the foreground, and I have a bunch of connections that are related to background tabs. And so why would I want them at the same priority is the foreground taps? Right? So like, I mean, they're they're really trivial to suggest use cases that seem quite easy to implement. So we should do think this, but it is worth documenting I think things like another tricky issues that my us. Thanks. Oh, sorry. Yeah. So I I tend to think that when we come we have this continual problem when we talk about prioritization where we we sort of con the the difference between applying prioritization based on the information you and and signaling it. What you're talking about here is the case where the client wants to be able to inform the proxy the packets that's coming back towards it, how to prioritize those things. And I think that's that's like Yep. We I think we should be doing that. There are mechanisms that we that we use at are very coarse that would work at the Http layer or something like musk, but I it would only sort give you the ability to distinguish between different sessions, not to be able to at a finer grain level, say things about to how to distinguish say for instance, to how to prioritize different data, like I don't know how to solve that problem because the proxy is not gonna be aware aware of the content. Of those things. So it least me sort of ask whether there's any need for some sort of signaling."
  },
  {
    "startTime": "01:38:01",
    "text": "In some other way, for instance, passing on Ds pay as Alex sort of reminded me. That's sort of thing makes me a little nervous. But I think if we have a sort of very crude mechanism here that might be. And enough to get us a little bit more experience with what's going on. So doing something same about. Okay. Thank you. I think sorry. We we jump ben who was in the queue. Exactly. I know why this is needed on a couple of levels. First of all, Ds solves this for connect Udp. Because the the direction you're concerned about is the downstream direction of a a fast a fast target. Running into a bottleneck to a slow client connection. And so Ds bit sent sent by the target can can tell the proxy how to prioritize those those Udp packets that it's then going to forward to the client. So in that... The direction we care about, think the Already handles it And also, we have another solution for this already, which is but the client knows how much bandwidth is available. Between the client and the proxy. And there's end to end congestion control on all of those links that you that you indicated. So if the client knows that it's run to the congestion limit on the client proxy link then it can choose how much of its congestion window it allocate among the different print end to end flows that are sharing that congested, like, So we already have two good solutions here. If nobody's using them, maybe they don't care that much. I don't know that we need a third solution solution. So just a clarification question. That Ben when you said the client knows a congestion window the... From the from the service perspective, it's its own congestion window, but it needs to divide up into I'm eight to my example, whatever. So maybe I'm missing that way we haven't got the time to discuss, but it's"
  },
  {
    "startTime": "01:40:00",
    "text": "on controls how fast the targets send. Through the end end control on each of to end to end connections. I'm not following but let's chat more offline. I think like I wouldn't have that discussion. I agree with the other the by the. That was Useful. Purchase Alan F. I am a priority ent. I think this is interesting work. I have a similar issue in web transport we talking about later today, which is what you about streams that are hung off of the connect session. So it's very similar I think to defining how you prioritize data that are hung off of the connect session. If you think about web transport, there's a mapping over h, I think similarly if you're using these data kilograms over capsules, they would inherit the priority specified with the connect stream. I think that makes sense. And But I think we're... We haven't said enough. About Yeah. What to do about things that are hanging off of the connect stream and and how to prioritize them. How to prioritize things within a connect stream? Say I've got different flows of data and I want to prioritize them differently. That's a hard problem. Of transport probably has better mechanisms than connect dp right now to must by those. And also as the my chair, like, this is also something that we know we're thinking about in mock as well. Okay. Think. Cool. And I I didn't go into into the technical details here, but, like, specifically, this isn't just a header this is a signal that could be sent capsules or other things. Like there's different ways we could do. We could append it into the data paid by register new... There's is like loads of different ways we could do it. I need to go and speak to people to to just because whole. I could very well be incorrect. But I was just wondering if there's a reason to have a data if there's a reason to have"
  },
  {
    "startTime": "01:42:02",
    "text": "urgency permit specific data where masks says that it's an option use a data. Rather than sending the date on the stream. So magazine say the the server. It's it's up to the service discretion. Whether it should be sending whether it will be sending you packets over the screen. Or the sort the data packets. And then if they have different priorities it seems strange to be That's a great question. One of the motivating reasons is that you might wanna prioritize capsules on the on the the control street, like the connect stream that you have because it's you need to send very important. Messages there, and that you you just wanna drop the the data slightly. So that you always... Keep up in free space. For flushing and stuff. That was that was the only reason. Just flexibility. But it's too much we can change stuff. Thank you. Alright With that thanks Lucas. And now we're on to the last section of the meeting or the last the meeting, tell me or ben. I don't know which would view tends to present I assume Tommy since he's in the room. We have a little over fifteen minutes, which hopefully is good enough. So take it away. Alright. Then if you wanna chime in at any point during the slides, please do that. I'll probably just try to blast through them and then mainly could input discussion? So we don't have a document here. There was a document that been had previously talked about but wanted to have a discussion with you guys and see what we think might be useful might be in scope or might be useful in out of scope Next slide, please. So Why we wanna talk about configuration at all? It can be useful to know what a mask proxy supports. And details about how you can access different proxy resources. A client is gonna need to know this information this information can be"
  },
  {
    "startTime": "01:44:00",
    "text": "sent out in a proprietary or static manner we can have well known Eyes for discovering in using particular paths on connect Udp, connect Ip or knowing that you support Connect. But there could be some interesting use cases for standardized configurations. And so unclear of how much if any of this fits within the working group? But that's go to the next slide. So here just, you know, some examples of the way that realize can be proxies can be configured. Yeah. Sox proxies we're just host names and ports, very similar for H proxies mass proxy gonna have a template on them and now essentially you get to the point where I may have proxy that can do, Connect and connect Udp and connect Ip and those can all be separate template And so maybe you want to know how those are bundled. There's also interesting stuff that proxies do with pack files. And I think there's some things in there that are potentially relevant and may important to know. So this is a is a list ben I can double with like the all the range of possible things you could want to know, I think some of these are certainly out of scope, and we definitely don't want to do them standardized. And some of them maybe be scope. So you may want to know what does my proxy do. Like, do I have proxy that can support connect And connect and connect Ip or is it just one of them? Can it support Dns proxy. There's also a question of can you know ahead of time? What types of things can you access through this for example, split Dns, and I'll pull that out as a separate slide next. Information about how do you want to authenticate some of that may already be supported with normal authentication. Information about entity running the proxy things like know, billing, etcetera. I imagine that's yeah, not in scope for this group, but maybe something that a client would want to"
  },
  {
    "startTime": "01:46:00",
    "text": "know if you had some kind of open surface of a proxy. Next slide. So one of the use cases which I think may smaller and more tract that we could point out is split dns us and I know, you know, ben that split dv means different things for different people. I'm thinking here of what we do in like, a Vpn where you have we support this in like, v two, it's also is very common in other vpn where you say. This particular Vpn is only applicable to this internal domain. And so you could also imagine that you have mask relays. Out there that are only applicable to access certain resources and you're going to get errors if you try to talk to anything else. So If you have such a scenario, you could have different approaches. You could have kinda like the default which we'd be at today is try and fail over. Like, I'm gonna send every single host name I have to this proxy and will just tell me. Nope. Can't reach that one. Can't reach out one can't to that one, and then maybe there's like one sub domain that I can reach. That's very, very inefficient and not ideal. We could have pack script support or something like a pack group you run crazy Javascript to figure out which name should be proxy or what things are allowed to go this. But that is not ideal. We can have kind of static configuration where you have like configuration profile or something hard coded that is pushed onto the device out of van to say hey. Here's this proxy. And this is one it supports. That works pretty well and they're the cases where we are using that approach I think the problem where that breaks down is sometimes the configuration for what a back end relay may have for its routing of what domains it can access is more dynamic than what you would want for pushing a config update to every client that may be going through the service. If we think about the Vpn type use case,"
  },
  {
    "startTime": "01:48:01",
    "text": "it is great to not have to push a new profile updates everyone when you just add one sub domain that's why a protocol like I two can communicate the domains that it supports as you bring up the handshake. So we could imagine having something like a query resource on a relay where you I don't know. It's some well known. Some things I can do and get request and it gives me a list of Hey. I'm gonna allow you to access things in this list and anything beyond this, you can try to access but I'm gonna give you an error. And that would help clients out more dynamically. Next slide. So in the last twelve minutes. I just curious what people thought are there any any aspects of this list of discover your configuration that cuda should be standardized which ones where should that be done? And within the charter that we're trying to approve, there is a... You know, it's as, you know, it's in scope to add things are missing from functionality. And things that can ease. But then your policy and proper discovery is out of scope. So I would like to know, like, are things like knowing what domains can be accessed in, like, the split Dos model. Is that something that's easing deploy to make it be more of a Vp vpn replacement or is that something we think needs to be done? Outside of this group. Hey, Tommy. David's Vpn ent. For for me, the answer to that question, comes really down to what problem we're trying to solve. And what I mean by that is So in a lot of Vpn cases and let's say you wanna set up a Vpn configuration and you need, like, certificates on both sides. The user never gonna type that in by hand or X five zero nine is great for that."
  },
  {
    "startTime": "01:50:01",
    "text": "So in those cases, you're gonna have a file of some kind. Like, Apple has a P format for example, for this. I forget what Android So in those cases, I don't think we need anything. Because if you already have a format, And if even it can be proprietary. You can add all these keys to that format. So I think the one case I bring up is something that, like, more dynamic like potentially the split domain list. So maybe that... That file says, I allow things under company dot example, but on any given day this proxy can only support internal that company an example or whatever and that can change very frequently. And that is something that with Vpn they are able to update and not have this configuration manage ability problem? But if they were trying to use mask instead, you get very on. Totally agree with you. And so... And another one example. Jump in wanna jump in and say you you mentioned the is that the sort of state of the art here is basically proprietary configuration file formats. And I'm using a final set, but I don't think it should be proprietary. I think that we should try to figure out what why people are using those proprietary formats and standardized. I that makes sense. But let me finish because I think I'm overall, completely agreeing with you too. Another example where this doesn't make sense is let's say, you know, one big deployment of that's right now is Apple's private Relay. No one's typing this in. You're getting a config bag that's dynamic and proprietary and so you don't a standardized way for that either. Because at the end of the day, way you pick your servers for this is based on contracts that people who aren't in this room are signing. So"
  },
  {
    "startTime": "01:52:00",
    "text": "However, there's still a wide range of things where this is useful. So if you look at both Android or ios and easy. I have both in my pocket, so I could just test this right now. Both allow you to add an Id v two configuration and you type in the server, you type in this username and you tap in the past word. And that's something that a human can do. And for those, you need to be able to, like, get everything else through the protocol. So I think my d between or this is needed worse is not needed is when, like, it can be typed in, and I... And the one you added were it's dynamic just you know, in connect Ip. We have the Ip addresses in the routes. Adding the Dns makes sense to me as well. That would be the split for me. So there's room to be done, and that's where I would draw the scope line. Okay Hi, Alex Cher. I guess I'm going to be agreeing with David, which I entirely expect based on how that started. So I think specifically if we look at the Use case. I'm a little bit confused about this Horizon Dns example that you were giving because they don't match out the model of the way vpn are boyd. I mostly always think of them as Vpn is either please suck up all of my traffic in which case, the domain allow list doesn't really matter. Or you're connecting to a usually trusted network, which providing access to additional resources. And usually the way that Dns for that works is you usually are comfortable sending all of your queries there. And some of them you end up... Getting back an answer, which is wrong and you can do it somewhere else but like that's something that we can decide we want to text. And Maybe I'm just out touch of how Vpn which do overlay stuff work, but my understanding was there was not a lot of investment in making the here a set of domains, which are accessible over this"
  },
  {
    "startTime": "01:54:01",
    "text": "additional overlay Vpn please write all your traffic elsewhere. A high performance thing of Dns. So I almost feel like we're not entirely the right group to be doing Dns by ourselves if we're actually looking at some these use cases and I feel that we possibly need to better understand some actual deployments before committing to that. But I also totally think it's fine to have an extension that says we're not gonna give you a whole Dns server like, we announce with Dhcp, but here is a set of domains that you know you can route through here and here is a special purpose a server that is a stubs over that will give you those answers. So, like, I think that's. Cool. So just to quickly respond to that. And, like, I'm thinking more here about the connect Udp cases where we're not doing Dns from the client. But four split Vpn, there are some cases where they scoop up all the dns traffic and then they connect by Address, but implemented a lot of these libraries bunch of them do just like Say, here are the names do not even they they will not even resolve things that are not. In the list of domains access. And that it a very, very common deployment and that's the deployment that we're trying to address here. And then also I think particularly for the mass proxy case when normally, you would not have to do Dns in order to connect through. Let's say, you have like, a bunch of different proxies and you wanna know which ones to you use for which. It is very inefficient if we would have to, like, do a connect request to the first proxy see if that could to score it nope. Now I tried my second now. I try my third products. I just do, like an exploratory search of, like, which of these like split proxies can actually handle my request without knowing it. But is that a high hypothetical this would be slow or there actually a deployment model we are aware actually, with a multiple concurrent mask proxy like that. Yes. Like, cases where we today have multiple split Vpn where you could replace them with a mass proxy."
  },
  {
    "startTime": "01:56:01",
    "text": "Great. I I'd love to we back to motivate how we should solve this problem. Erica with Google. I'm still trying to collect my thoughts Know. I think this stuff should be standardized, but either way Will express the sentiment, but I don't think this is the right working group for this because something we can correct me because I read reach out proposal in a while, but I believe the overall goal was for this group stay focused on proxy Udp and Ip and stuff like that. And not be the general proxy working group. And this seemed like a much more general proxy problem to me. This is if we had general solutions for better standardized configuration and do it by Dns and we just said, hey, We just need to added certain you must to make it's more specific to what we need for a Udp and Ip and, yeah. Sure. We could do that group, but this is solve this more general proxy problem first and big general proxy probably this I don't think this is the right working group for. We need somewhere more general to work on suggestions for you rather than not here. Erica scarlet. About taking a position whether we should do this or not, I do wanna flag that it seems like they're of these two different categories of information here. And and the way I would bucket them is information where is the responsibility tell you something and yours to believe it. Information where you're not trusted to proxy to tell you something. Mh. So first instance, I would not trust the product. Versus, like, don't judge proxy time which demands. That like, it's it's a lot... It's allowed to capture. Or still like to capture because maybe I don't want to capture something even though he wants to Right? And so... And so I think so it's either... You know, for... You know, I mean I may wanna send no my traffic to, you know, to Google over a proxy. apples up directly. It's like also it's like, also, I could do Apple. But I didn't want that. You know I wanted have And so so So I think, like, so like I said two points on One is that in some cases that may mean having some way for the proxy brighter tested"
  },
  {
    "startTime": "01:58:04",
    "text": "is information to you? Another there may be which may the case or be the case that there's things that have to be configurable locally divides and way to get that. So anyway. I I'm not seeing this on Piece Five not always the case box turn these yeah. Absolutely. And just to that point, this this is the same thing that the I two split had to address. And the the correct way to express the split case is the proxy is telling you these are the only things I'm willing to accept. You will have local policy about what you want to send to me. If you wanted to send everything to me. I don't. Is it's merely scoping it down. I agreed. I I think this also gets us sort of back a little bit this point, david making which I'll I'll bunch to the configuration has to be fed in locally. Yeah. Absolutely. Next Martin Duke, Google and with he andy on. So the current charter to import the Is usually puts this out of scope. That said it's not too late if there's like overwhelming desire to take on. It doesn't sound like there is. I will take the action item to take this to the Ie. I think we should figure out where this is properly vetted. Like, there's not exact... There's not exactly overwhelming desire to standardize this, but I think there's enough interest here that this is worth question we're having, So we can give you good answer. And it well a different working group where we offered or something that's That's fine. So I I I will take ownership of that problem. You. Thanks. So thank you, Martin because I if I'm counting correctly, this is the third I etf where we've discussed this And I think the general consensus comes around to this is a good framework has things that would plug into it. But we don't know the framework and nobody knows who would."
  },
  {
    "startTime": "02:00:00",
    "text": "And so I don't know if it needs to go to this dispatch. I don't know if I need to short for working group something, but When the framework exists, I think plugging into a definite belongs in this group. And I think there's value in the framework. Cool. Thanks for the input. Agree with everyone. Alright. If there no other questions, we'll wrap up here. Thank you everyone. Enjoy the rest of the week."
  }
]
