[
  {
    "startTime": "00:01:43",
    "text": "okay that's top of the hour i guess we'll give it a few more minutes for people to trickle in but i guess still i don't know if people could should probably start doing the question if anybody like to volunteer to take dots"
  },
  {
    "startTime": "00:02:07",
    "text": "i need to be um terribly you know detailed just uh active items and decisions is really all we need and you can use the uh the notetaking tool which is linked from the web from this conference at the top right do we have a jabra scribe also um i'm not positive we need one in this context but somebody wants to volunteer for that i'll probably be good too uh something said great thank you james james grayson cursing yes you don't have to use the note taking total hedge doc if you don't want to if you want to take notes yourself and email them to us that would be fine too don't volunteer all at once but yes yeah we really do need this well i guess we can start calling on people hey jonathan yeah i guess so"
  },
  {
    "startTime": "00:04:01",
    "text": "uh bo can we call upon your services as a notetaker sure i can take notes thanks moe okay just a few meeting tips this session is being recorded you do need a data tracker login and hopefully that all worked i know it was problematic earlier in the week you can join the session dragon room jabber room via the meeting agenda although i'm not sure why you'd need to please use headphones or an echo canceling speakerphone and state your full name before speaking so that we can get it in the notes you enter the queue with a hand raising tool and leave with it as well you do need to enable your auto audio to be heard and unmute yourself uh you don't have to enable video if you don't want to here's the notewell a reminder of itf policies by participating you agree to follow these policies which are listed below bcp 9 through 79 please read them and understand them in addition uh to the ipr policies we do have a policy on guidelines for conduct an anti-harassment policy and procedures if you're having concerns about observed behavior please talk to the ombuds team and we do strive to create an environment which people are treated with dignity decency and respect and we expect you to behave according to professional standards and demonstrate appropriate workplace behavior so if you believe you've been harassed or noticed that someone else is being harassed or have any other concerns please talk to the ombuds persons"
  },
  {
    "startTime": "00:06:02",
    "text": "right as jonathan mentioned we have the notes on the note-taking tool at this link the agenda has been posted and we have the job describe and note takers and this is the agenda do we have any additions or subtractions or modifications okay hearing none we will move on to the draft status why don't you want to cover this jonathan yeah it's the only the only new thing is rc 9134 from the publishers publications yeah right yeah i think yeah so uh jpeg xs has been published so it would work there let's see yeah uh vp9 is in the rsd editor queue it's waiting on um lrr which is waiting on uh frame marking uh we did a pub rack on cryptex so that should go through the 80s soon uh frameworking as of about an hour ago this noticed incorrect we needed we needed an updated draft because we decided to change it to experimental uh well published that this morning so now um i will do the write-up on that and hopefully that should get done uh we dropped petra a while ago he probably dropped this from the draft status too uh the next as a next time so if anybody that's in tetra let us know but in the meantime we can ignore that and um we adopted a few drafts and i'm like to know which one's 79 i'm liking which one 7983 is i'm sorry"
  },
  {
    "startTime": "00:08:03",
    "text": "that's uh quick multiplexing i'll go multiplexing right right right yes yes so but we i think all our other milestones are going to be discussed here today so yeah so vvc is both adopted and in first working group last call there were a lot of comments there from mostly from the vc community itself so it's great that they're participating here and we'll just definitely be talking about that later all right so now i'm going to talk briefly hopefully about recent liaison statements we have a request from the w3c web transport working group and yanivar is here to talk a little bit about that and then we have a liaison from iso iec jtc one sc29 working group three about green metadata so uh yanivar all right can you hear me we can hello uh yes i'm yanni barbury from mozilla i co-chair the w3c web transport working group where one of our use cases is bi-directional real-time audio video communication over web transport which is a javascript api on top of itf web transport and quick uh and the problem we're having there is uh when sending video uh when a client is sending video to a server and the problem is the client does not have enough information to know what it can when it can reapply a multiplicative increase in the media center rate to recover from prime congestion so basically we can reduce we can reduce send rate in in the face of congestion but we don't know how to rapidly reapply ascend rate a faster send rate afterwards"
  },
  {
    "startTime": "00:10:00",
    "text": "when the congestion goes away so the request is to know if uh so we're glad to hear that this working group is uh considering rtp over quick and we're concerned we're we would like to know if rtp over quick can satisfy this use case and if so what measurements could a browser make available to aj's client to assist this problem and would it perhaps require uh some form of selectable replaceable even congestion control and if so which algorithms thank you yeah i would i would caution uh yanivar that uh rtp over web transport or uh is a little bit different from rtp over quick so maybe we'll get into that in the in the session to follow because it's not as tightly coupled but so uh i guess can you raise some of these issues in the discussion that follows and we'll try to see where to go from there does that make sense okay we'll do okay uh the second liaison is from iso iec jtc one sc29 working compo3 do we have a representative to talk about this liaison request all right let's see um see what cars see i hope i'm pronouncing that right in the queue um are you okay go ahead hi uh can you hear me so yes we can yes i can uh speak on that my colleagues uh worked on this uh so uh if it's okay i can go through please uh so this uh three epic systems and they would like to point an update on the progress of uh this standard 2301-11 which is energy efficient media"
  },
  {
    "startTime": "00:12:02",
    "text": "consumption green metadata uh this has been uh so 2015 19 first and second editions and now the third edition is uh currently in the committee drafts uh series status and just as an overview uh in general this standard uh provides uh various type of metadata that enable uh management of uh there are these four bullets uh management of decoder power consumption or display power consumption and for offline uh applications or for uh like adaptive streaming or dash applications it provides media selection uh metadata and also quality recovery for uh video encoding uh power consumption so different kind of metadata are provided in this specification and recently the third edition of this standard uh which is uh which is pointed to in this ls provides a bunch of new features uh for example these three bullets say here there is now interactive signaling for remote decoder power reduction that gives better power reductions and also vvc sci messages uh for carrying green metadata uh related to complexity metrics this has been added and also we will see seo that can also carry uh metrics for quality recovery after low power encoding so a bunch of new features have been added and uh hope that this information is of interest to this group and uh we can consider uh using this in this group uh these different metadata have all a very different uh shape and form some are for live applications some are for a stream adaptive streaming applications um and some are forward direction from center to receiver some are from receiver site to the sender side so my imagination is that the the metadata"
  },
  {
    "startTime": "00:14:00",
    "text": "that is to be transferred from receiver to the center side that's something especially where you know some container formats and so on might be of interest that's my take on it so that was just like a quick one-minute summary on this ls and if there are questions i can try to answer them i see james reading through this it looks like you're targeting bbc is there any interest in porting this to other potentially older codecs that are more used today this is the third edition that now adds vbc but already there are metrics for older codecs available so uh yes they are already in the previous editions okay stephanie question question would be have you any real world deployment of these previous editions i mean the stuff is around now for a few years right that is uh where i don't have any complete information if there's anybody else i'm also fairly new to this okay maybe we can take it on reflector and so on so we can have uh somehow is there any action required of the abt core working group other than discussion on the main list i mean it seeks some feedback of interest from from the group so yeah i mean i think you know if you know in so far it's i guess there's not one of the elements is the receiver to send her feedback so"
  },
  {
    "startTime": "00:16:00",
    "text": "um i think if somebody is you know interested in uh submitting a draft on that i think we could certainly you know be you know interested in them you can take up with the if the work group wants to do it but i think yeah certainly i think any sort of uh receiver to send our feedback over rtcp is in scope for this group so somebody wants to do that work uh i think there would be interest in that i mean assuming there's interested in the community that probably should be noted in the minutes so i would assume then we could do some email communication on this on the lecture absolutely all right okay thank you uh next topic is rtp hold on stefan and colin are in the queue okay so just uh just one remark that uh if if someone were interested in this type of stuff then uh of course the forward direction is also something i mean a lot of this gets as far as i understand a lot of this can get piggy packed into the codec uh into the codec bit stream using sai messages and such but uh it could also be multiplexed uh by simply creating its own payload format right and um that way it may be applicable also to non-epic standards so it i mean see what i want to say is the uh um chances to work on that are not limited to to uh the return direction yeah that's a lot done in this in this area um whether it's worth doing it you know but we'll see yeah thank you veron"
  },
  {
    "startTime": "00:18:05",
    "text": "yeah hi um so i wanted to return back to the the first liaison statement just briefly talking about uh congestion control um and um it would seem that um you know the issues of congestion control coming up in a bunch of different groups and and the media of a quick side meeting was talking about this and uh it's come up in a bunch of different places uh and certainly for um congestion control for rtp udp i know we had the the rmcat group uh which tried to do a bunch of algorithms um and i'm not sure those algorithms directly apply to quick so i'm not suggesting we take the work there but i'm i was wondering if uh we should maybe have a broader conversation about where we do media congestion control over quick and whether that's of rtp specific or a more general conversation so maybe we should bring it with the ads at some point yeah well i think the presentation to follow uh colin will directly uh bear on that question so maybe we can we can talk about it uh during the presentation or in the q a show sure i think it's more general than um rtp over quick quick yeah anyone else in the queue no that's it seems to be up so it's okay you wanted all right so uh we're now going to hand it over to the rtp over quick team"
  },
  {
    "startTime": "00:20:00",
    "text": "yeah hi can you hear me yes cool uh yeah thanks for inviting us to present here again today um in july we already presented the mapping of rtp onto quick draft and today we would like to go a bit more into detail on congestion control for rtp over quick on the next slide i'd like to start with a short overview on the context of the draft there are actually two similar drafts the other one is from sam hurst from bbc research and development and both drafts provide a basic encapsulation for rtp and rtpc rtcp over quick both of the drafts use the unreliable datagram extension with the flow identifier to demultiplex different rtp sessions and our draft focuses a bit more on congestion control and the interface requirements for quick implementations and condition controlling and yeah both drafts use sdp for signaling um harold did you have a question or are you just getting in the queue to talk i couldn't figure out why he won't wanted to to carry a multiple rtp sessions or one quick session and this might be obvious to someone but it doesn't seem to be in the draft and it's it's a few bites of tax that i would like to avoid if we don't need it uh sorry i'm not sure understand this"
  },
  {
    "startTime": "00:22:00",
    "text": "question you have a you put the flow idea into the into the into the session and what do you what you to d multiplex rtp sessions what do you need to do to demultiplex rtp sessions um okay yeah uh that is because in udp um one would probably typically use different udp ports and do different rtp sessions over different udp ports and identify them by that and in quick we can have the itp sessions in one connection and then try to [Music] use all of the information we have available in that one connection to you use for different rtp sessions at the same time like for example the congestion control information i was trying to find i was trying to figure out the use case where i would want to have multiple rtp sessions on between the same entities and i couldn't find one so uh so i was wondering whether it's it's reasonable to drop this requirement and just say if you if you need more rtp sessions set up more quickly quick connections yep um maybe i'll take that and we can expand that on the draft and explain it further especially explain the need for it yeah con yeah i mean there was a comment in the chat about not understanding what rtp session meant in this context i mean you know rtp session has a very well defined meaning in in the rtp spec and we need to make sure that that what's meant here is uh consistent with that meaning and it's not just being used as a as an alternative to the ssrc for example for demonstrating users um so i think there's a perhaps a deeper conversation about sessions and demultiplexing that should happen at some point"
  },
  {
    "startTime": "00:24:07",
    "text": "okay then maybe i continue with the presentation on congestion controlling first and we keep that on a later discussion um yeah so today we want to focus on the congestion controlling and um we identified a couple of questions which come up when we do rtp over quick and first is that um we have congestion control in quick and rtp and quick suggestion to use an algorithm similar to neurano uh it does not meditate mandate any congestion control algorithm and rather provides a set of connection statistics that can be used by any congestion controller and other algorithms than the arena are currently under investigation and rtp also provides its own congestion control using explicit transition controls signaling in rtcp for example there's rc8888 which provides a feedback format that can be used for algorithms for example firearms like scream and nada and also gcc as proposed by the rmcud group um now the two main questions we try to investigate in our experimentations are first how can we do con gesture control for return media on top of quick which already has its own congestion control on another level and then the second is if we can reduce rtcp overhead due to duplicate signaling of congestion stick living in quick and rtcp next slide please so we did experiments with a couple of different options we could use for congestion control the first one is that we tried to"
  },
  {
    "startTime": "00:26:00",
    "text": "relieve congestion control entirely to quick and only do some trivial rate adaption in our media application we will leave that out today because it's um we already know that it's probably better to have a um congestion control algorithm which is specified for real time and we would rather look at these today the next option is that we disabled quick internal congestion control and we only use the real-time congestion controller like we would use for example over udp like the algorithms from our cut in our experiments we use screen because the existing implementation for screen was quite easy to integrate in our setup and then in the last um [Music] combination we used scream and neurano together and on the next slide i have a couple of notes on how to reduce rtcp feedback um we would like to use the quick connection stats which are already available in the transport protocol to reduce the rtcp overhead and in quick we have the datagram draft which allows an implementation to expose the datagram acknowledgments to the application and we're using this to identify which rtp packets have arrived at the receiver um we keep track of the send rtp packets and in which datagrams they were sent and at what time they were sent so we have the timestamp and as soon as an acknowledgement arrives we know that this rtp packet has been received and then we also use the rtt samples provided by the quick connection statistics to infer a receive timestamp at which the packet arrived at the receiver by just adding half of the rtt the last known rtt to the same timestamp we kept track of earlier"
  },
  {
    "startTime": "00:28:01",
    "text": "uh the next slide i have a short overview of our test implementation um we integrated quick go with g streamer and the screen implementation um the application transmit video data in rtp packets from one sender to a receiver um using g streamer to encode and packetize rtp packets which are then prepended with the flow identifier we talked about earlier and sent to the receiver um the receiver takes the um rtp packet and identifies the itp session and forwards the data from the package to the corresponding rg streamer pipeline and then we use a slightly modified version of quick go to be able to selectively disable new venue in our experiments and also to expose the connection statistics and the datagram acknowledgements uh we build a testbed setup on the next slide please yes i had a question about the uh the time stamp feedback um from from what i understand the the purpose of that in rtcp is for congestion controls to understand the one-way delay to understand variance in one-way delay and those delay-sensitive algorithms um can use that high-fidelity one-way delay inferencing from that but if you're basing if you're trying to synthesize that using round trip times it seems like you've lost the one-way delay aspect of that which may be important for some of those uh uh some of those congestion control algorithms uh yeah i think we will get back to that in a later slide on the results for this inferring and there are drafts um or quite recent"
  },
  {
    "startTime": "00:30:01",
    "text": "drafts which also try to use the um receive time stamps directly in acknowledgements i will reference that later yeah next slide please so we have a test pad set up in which we run both of the applications in separate containers on the same host and we use the virtual network interfaces in the containers to simulate different network conditions we configured a bandwidth limit of one megabit per second and we run the experiments with different one-way delays and after 60 seconds of a video run for video transmission we reduce the available link capacity to 500 kilobits per second to see how the algorithms and the transport react to this and then our application locks incoming and outgoing rtp and rtcp packets for analyzers afterwards and will to calculate psnr and sm statistics on the raw video files uh next slide please so the first results for um screen using rtp over for rtp over quick using stream screen and comparing this to udp the left graph shows the quick implementation and the right one udp and we can see that the results are quite similar so it seems to be possible to to use um quick data grams to transmit rtp and we can also see that the target bit rate of the screen condition control are slightly below the one in udp we're not exactly sure why yet maybe due to some overhead but we need to investigate that further on the next slide"
  },
  {
    "startTime": "00:32:01",
    "text": "so please hold on the screen plus quick is just the quick congestion control replaced by screen right yes okay uh then on the next slide we um leave the quick congestion controller enabled and we congestion control the real-time traffic by screen before we put it too quick so everything um goes through the both combustion controllers and we see that in the first part of the video transmission it seems to behave very similar to the previous slide um but that probably is due to application limited transmission so as long as screen is sending less data than urinal would [Music] then we are in this application limited state where um neurano doesn't really do much yet but as soon as then the link capacity is reduced to 500 kilobits per second for 30 seconds we see that both congestion controllers try to adapt to the new link capacity and the the screen target bitrate drops to almost zero and the ramp up also does not happen um at all in the case of a one millisecond delay it may be that that happens much later if we looked into it for a longer time but this is already not really usable so we didn't investigate that further and in the second case our one-way delay was 15 milliseconds it seems to be ramping up but also only much later after the target spirit rate already dropped to zero earlier then on the next slide we show some results for trying to reduce rtcp overhead on the left side we see the results with rtp over quick using rtcp feedback and on the right side rgb over quick using"
  },
  {
    "startTime": "00:34:01",
    "text": "only the inferred feedback i described earlier um we can see that the [Music] the top two experiments looks pretty similar so it seems to be possible in general too um use the quick statistics for rtcp feedback but we also see that in the later experiments especially in the 150 milliseconds one way delay the ramp up in the beginning um works much slower or starts much slower and we in our experiments we generate the feedback at a fixed interval and we think that the instability in the last experiments are due to this fixed generation of feedback which may lead to some acknowledgements from quick arriving after we generate the next feedback even though the rtp packet has already been received by the receiver and due to the delayed and aggregate x they only arrive a little bit too late at our sender so that some feedback is not included which leads to feedback which would be less precise than the one rtcp could provide there are probably two drafts which could improve the situation because there's one draft for quick timestamps which would give us timestamps for um which would help us to estimate the one-way delay as we already talked about earlier and then there's a very recent draft which gives timestamps for received packets and that would also help to improve the generated feedback because we then didn't have wouldn't have to use the latest rtt samples anymore and instead we could just use the feedback which is directly on what we need from quick"
  },
  {
    "startTime": "00:36:00",
    "text": "instead of inferring it from the feedback which is already present and quick now um then we have one more slide on prioritization we run all the experiments again with the second stream opened and quick this time not datagrams but the real quick stream which sends constant data and um in this case we see that the um [Music] application probably needs some prioritization between real-time data in quick data grams and background traffic within the same connection as in our experiments we see that the target bitrate quickly degrades and it might even starve [Music] because of the background data and uh yeah there's done probably some better scheduling of prioritization necessary um but this is also very artificial setup in our experiments because we really send a lot of background data and there are probably um better experiments needed with more natural forms of background traffic like on-off http request or something like that instead of constant sending data yep then on the last slide i come to the conclusion i think there are many three results we have here so the first one is that it's probably problematic to run two separate congestion control loops at the same time um like a real-time congestion control algorithm like screen for the real-time data and um something like neurino and quick at the same time for all of the outgoing data on the connection um and the second is that it's probably"
  },
  {
    "startTime": "00:38:00",
    "text": "possible to use grid state information to reduce rtcp feedback but that could probably also profit from some optimizations which would be provided by the receive timestamp draft or something similar which would give more detailed information than just the rtt and using this rtt for the debating pro and then the last point is that some prioritization is necessary as we've seen on the last slide uh yeah in the future we plan to do some more experiments on different congestion control algorithms and different forms of computing traffic and different network topologies and we would also like to um try to find some way to do better prioritization than no prioritization at all to see how we can use one quick connection for real-time data and non-return data at the same time posted in the queue hey can you hear me yep yeah yeah this is this is really good work uh i'm glad to see this kind of moving forward uh i guess i have three points here that i think are it would be good for us to try to limit scope um here uh one would be you know is there anything besides receive time spawn we need to have the same information that rtp or what we had here as udp would have because if i think if we get there then we can feel pretty confident that we have everything at a protocol level you need to do a good real-time congestion control second thing is that uh you know i think trying to prioritize real-time and non-real time right now uh might be i think a lot uh and we might just say open a different quick connection"
  },
  {
    "startTime": "00:40:00",
    "text": "or non-real-time stuff because that's how it works today uh and that's that that's where we stop but that might be a good milestone of saying that we just basically replaced the entire congestion controller if we do rpp flows today and get that working over quick and i think that would be a pretty good accomplishment and then last one thing we haven't really talked about here is sort of overhead of um how many more bytes are we putting on the wire for each rtb packet you know and where are we sending redundant rtc feedback and it'll be good to sort of dive into that and see you know what those numbers are and then we start thinking about is there anything that can be done to mitigate that yeah i i i think i agree with all of the points you say um yeah uh sergio seriously i don't hear you seriously i'll see if you can figure out your audio in anytime soon us i'm not hearing so fast either oh i'm here yeah now here yes yes i do okay so i just wanted to echo on some point and make an observation what justin made and also clarification question is uh what's the main specific reason why uh rtp uh was considered for this investigation"
  },
  {
    "startTime": "00:42:00",
    "text": "is that was it was a reason because some some sense of interoperability with existing rpg stacks or or or uh was that a protocol of choice to pick i just want to understand the context behind that can you hear me now yes okay it's stupid see i had the the headset muted even i spoke okay so um i think let's let mathis respond to us first sorry i'm not sure i understand the question was a bit hard to understand i'm sorry yeah that that first is even that's i think that this is awesome work and if you have the goal there to replicate the results and maybe this on our own uh yeah we have we have the code um it is on github but it's not pro probably documented right now but we plan to do that soon yeah i i was also interested in how to replicate the the network application i think like that so because the code is typically available but the the how how to replicate the asphalt test is could be interesting as well yeah we can share that differently okay and the second thing is that i think that one thing that it is also related to the web transport thing is that this kind of test seems to be very focused on what a native application can do by modifying or adding integrating deeply with the quick stack or providing or [Music] but in if we are using web transfer and i think that we have to consider also what will happen if the if the downward destination is going to be ruined in javascript because probably the the browser will not provide a de facto bandwidth estimation for the application level uh how can we make this work when the the application that it is using the quick stack is untrusted for example we are going to replace the the rtcp"
  },
  {
    "startTime": "00:44:01",
    "text": "feedback from from this quick feedback uh how this will be exposed to the application because i think that they will impact quite a lot what we will be able to do with west transport um yeah i think this is very much focused on our native application right now which we built for testing and there will probably be a need for more broader discussion on api things in the future yeah because for example i doubt that we can just disable the the quick confession control and let the application [Music] run on javascript just do behave properly so we will have to find a way of trying to have both working simultaneously you know i think that it was sometime proposed that have some good breakers in case the the bandwidth estimation done by the application is to is not behaving properly or things like that but but anyway i think that it is a very great work that you have done so far and just hope to be able to improve it thanks i guess bernard you're next up that's going to do it uh i guess i had uh wanted to focus on some of the questions yanivar asked which is i guess your paper has the different metrics that you've been using and i guess most of those are probably exposable in web transport including that the time stamp info i guess the one thing that wouldn't potentially be exposable is the detailed act data because um in a browser basically you can't assume that that the acts reflect the application"
  },
  {
    "startTime": "00:46:00",
    "text": "uh what it got but maybe uh uh the the timestamp uh and other info from the acts uh could be could be provided up i guess uh and and originally in web transport we did have the concept of uh adding a congestion control selector to the constructor and i guess to justin's point that would be on a quick connection level um so i guess one thing to think about would be if you had separate quick connections instead of the prioritization thing operating with different congestion control algorithms um what the behavior might be there uh and also web transport does have uh prioritization built in but it's probably of the kind that your research shows is going to be problematic uh which is basically right now the datagrams get get uh absolute priority um so they will starve out the uh the reliable streams um yeah i think we could do more experiments on that in web transport especially under prioritization and i agree that it might be hard to expose all of the data we use in our experiments yet yep okay thank you spencer i wanted to thank you for uh bringing this work uh forward and thank the chairs for bring this uh oregon navy avt core the question i probably have or the suggest i have is uh this draft did not actually flag avt core in the file name and i've been having some conversations on the media of a quick mailing list which is only available"
  },
  {
    "startTime": "00:48:00",
    "text": "uh about about another draft that's relevant here that doesn't have avt core in the name it was focused on uh the svp for uh or keeping over quick but uh recognizing that that was going to have know a lot of uh a lot was going to have to reflect a lot of discussions about uh what rtp over quick was actually going to look like uh or we for the chairs are you are we to the point where we should be putting mvt core the in the draft beams we get more visibility within the group here um [Music] i mean i don't know is the short answer i mean because i mean we don't know if this is ultimately going to end up in avt core i mean visibility is good i understand that yeah i'm thinking mostly from the standpoint of making sure the right people are looking at it um you all can think about that and yeah yeah sure the the discussions we've been having for uh my draft in this space and uh the over in the mock mailing list are i think they're definitely ready uh to move into uh abc core or a group like that rather than kind of an ad hoc overall media over a quick discussion yeah i mean insofar as things are you know rtp is feel free to tire them at abd card it's you know it doesn't hurt anything thank you thank you so much yeah uh bernadette remembers a lot"
  },
  {
    "startTime": "00:50:00",
    "text": "yeah hi um so i mean there's a bunch of discussion in the chat about short-term and long-term approaches and i think that's important i think we should make sure we have that broader architectural conversation about where we want to go rather than necessarily just sleepwalking into into reusing our tp here um the the the actual reason i i got up to the mic was um you know the comments about using separate connections to avoid having the the congestion control prioritization discussion uh i mean separate connections causes quite a lot of pain in in the current model um and um [Music] we we should uh have it have a deliberate discussion about whether we we think that's acceptable pain or whether we want to make conscious effort to reduce that and try to make everything run over a single connection even if it means more congestion control and prioritization work okay james uh thank you thank you for doing this work uh the question that i have is you've only looked at doing this in the uni-directional flow right this is just a sender of one sender one with the one flow of media correct yes true cool in our experimentations it is probably possible to build something else with the draft but that's what we experimented with yeah cool i think that when we get sort of tagging on from uh colin's last remark around connections and and just various thoughts are how multiplexing might be dealt with in this space bi-directional of flows of media should also be considered as well um we've had an awful lot of discussions"
  },
  {
    "startTime": "00:52:01",
    "text": "earlier this week in the media of the moq side meeting and in other sort of forums around those use cases and i think that there may be and this is a hand wave uh potential issues when it comes to uh complex competition between congestion control depending on which way we tackle the conductivity and multiplexing of the sessions uh yeah that's probably true we were planning to or our current test sub setup is kind of inspired by the test cases evaluation for congestion control from rmcat but they don't completely implement all of it um and yeah as i said we would like to do more experimentations with that and then we should probably also include bi-directional streams there justin uh so i just wanted to add on to comments point uh where he sort of mentioned that well maybe we should take on uh you know prioritization know i think that's for any uh specific work in this area we probably want to have a good sense of what our goals are uh you know what would count enough will we count as like a reasonable v1 uh what what things do we think we have to do uh i think this author has shown you can get you know some results uh even just now just by sort of encapsulating rtp within quite datagram but what would be necessary for us to kind of consider is something that we want people to play on whether it's overhead whether it's packet rate optimization uh you know this is still an early draft so this is fine where it is right now but as this moves forward i think kind of lining up as a working group what do we think that you know they should be trying to solve i think would help us all kind of get to"
  },
  {
    "startTime": "00:54:00",
    "text": "a shared picture of where we want to end up uh yep fully agree with all of that okay and we're kind of over time but this is dairy with a lot of interest so i figured we would let us go over but thank you all and i guess discussion um probably on the abt list um or the mock list or both uh probably if you're interested should be subscribed to both but hopefully we can try to converge on where we're having the discussion um and yes then did the authors please continue your experiments it's very helpful uh sergio so please this yeah we have hold hold on one second spencer are you trying to do something with slides or no you're okay okay go ahead yeah and then we have released what are you trying to say something no okay i don't know okay sorry sorry okay so we have been i put a new draft for greatness that it is does to clarification one was the authentication after encryption and also how the what the they mean what's the minute of the crisis attribute when it is present with with with bundle it does not change the anything on the draft it's just clarification say that were needed because it was not clear at the moment and regarding the implementation status we still have only two implementations currently one is done by you jonathan and that in the etc and the the request that i have for leave srtp that it is not yet merc but i hope"
  },
  {
    "startTime": "00:56:02",
    "text": "that it will be soon and we hear the uh we have it has been requested for publication and we are already also trying to have a an issue open for for adding the api for enable and disable it in webrtc so i think that that's all and i think that there is nothing for the the review but we will just need to do the review but i think that there is nothing pending to to be done in in the current draft there one more side okay all right yes i think that's in good shape and it's in the hands of our a.d now so hopefully that will get moving quickly uh and stefan are you presenting yes yeah hi um no this is uh uh the two payload formulas for the evc will be a quick thing next please thank you um so we had a working group last call a few weeks ago a few months ago actually and uh we got comments uh from from this guy from henry and they were all in all the the the the activity on the mailing list in response to this working group class called was quite active uh we had more than 30 emails there um and the comments were also quite extensive"
  },
  {
    "startTime": "00:58:00",
    "text": "and uh but over the time i think we got to a good understanding of what the commenters were asking and i think we addressed most of them in this version number 12 which was posted just before the deadline and uh we have remembered the revision number 13 in the in the works um that is currently uh reviewed by the authors where miska actually uh put in uh some additional text uh related to the remaining issue somewhere deep down in the alpha answer um and that's i mean i i i can promise it for uh pretty quickly um what's a little bit concerning to me is that uh our usual suspects here on this uh in this work group uh didn't comment at all yeah except belmont and um but i would guess that uh that's perhaps because all these uh payload formats for for um null unit based codecs are so similar nowadays that that perhaps most of the bugs have been ironed out much earlier but i really it it would be good if people could take one more look at it at some point now i i think the real test will come when the thing goes out to publication request and all these uh security guys come out of the woods and and talk about the newest trend uh that they want to see in the security sections uh and similar maybe the congestion control guys i don't know so um yeah and well so what we will be doing"
  },
  {
    "startTime": "01:00:02",
    "text": "is we'll publish one more uh revision of the bbc draft uh pretty soon i gave you a target date mid of the month but we will do that earlier i think probably as soon as later today and then we suggest that maybe another working group last call is adequate since the text changes are not insubstantial although they are deep down in the details where where the bbc codec maps to the offer answer mostly and then i think we're ready for after that working plus call for publication request um next slide please thanks bernard now this was an issue that's more a generic uh question uh that was triggered by the banner by a comment from belmod where he said there are no complete examples of the stp of our answer negotiation in the draft that was in in the context i think mostly of the scalability uh related rather complex of answers scenarios that this draft would allow um and that raises a little bit the philosophical question of uh what good do examples do yeah the um so one thing that i've seen rather consistently in implementations by people who are not say regular participants of this group is that they take code snippets from the uh from the um drafts or at least you know the examples were biting from the drafts"
  },
  {
    "startTime": "01:02:01",
    "text": "hack a little bit around them for the special needs they may have and think that they have uh something that ought to work with other people's um implementation and typically it does not very often it does not and the the reason for that is i think that people uh uh simply take the examples as shortcuts of for um you know for for the way how things are to be done and don't really get a full understanding of what's going on um we had this discussion before a few years ago uh or decades ago or so um and in uh for the hvc payload there we later on decided not to go for full examples and i just want to kind of reconfirm that that's the right thing to do um i mean we we can add more examples if we absolutely need to but for the reasons i stated we are it's not laziness it's really it's it's more um you know i i think examples teach you way too much from uh from the the complexity of the problems uh that are hidden in those uh in those um of our answer uh cap exchange uh options that we have in those drafts so what i asked this question on the mailing list there was no response um what do people think um yeah uh thanks stefan i guess what i was responding to in part is some of the issues we've seen uh with implementations and figuring out what they do there's a pretty widespread problem now with people inventing their own very different implementations of hevc for example"
  },
  {
    "startTime": "01:04:01",
    "text": "i had an instance where it was integrated with webrtc and nobody could figure out what it was doing and i know that's not the fault of the draft because it probably didn't also implement the payload format either [Music] but uh yeah it just um i understand your point uh that but you know translating these things into actual implementations uh has just it has been problematic because people pick and choose things and you never know what they're going to do until you actually look at it i completely agree i think the the disagreement if there is any i don't know the disagreement is what the cure to this problem is right i think fever is not to to put oversimplified examples in a draft that will be copy pasted in that may be known as correct but may may not be known as applicable for the particular problem that people have and that people go away from you know frankly from from from specs for something as comparatively simple as a payload format when you compare it to the video codec that's i mean that's people take shortcuts they do it all the time right so yeah unfortunately i'm not running a standards police otherwise i could i could do something about it but i don't yeah so okay let me put this as the proposal or let me put that not as a question but as a statement so unless people speak up pretty darn soon uh right now but they want to see more detailed examples we are not going to add more examples and we will be uh we will be referring to this discussion if we come"
  },
  {
    "startTime": "01:06:00",
    "text": "out of the woods later for more examples yeah i don't think you need examples to spoon feed people um i don't think that's necessary but in your view do you think that the current examples give the high order bit of of what um what the important part most important parts of the draft we're trying to convey in their stp i think that's the useful part because there's usually a lot of text and it's usually um you know drafts that have uh many parameters and and many rules um on all the parameters it's it's hard to lose it's easy to lose high order bit of functional negotiation in all of the different nuances of of the parameters so do you feel like you've captured just the high order bits and not all the full complete negotiations so okay i i think i think we are we're good enough um if you take this and and a little bit of say common understanding of how of irons are supposed to work uh we we are good for the relatively simple use cases say no scalability once complex stuff comes into the picture people have to dig in people have to understand that you know because if you if you if you if you just try to create recreate a scalability model without understanding uh the the vvc scalability mechanism which are not that easy to to block right and that that five percent of additional complexity that's being added by the payload format if if you don't have an if you don't have an a good picture of that and just naively starts implementing then then you will arrive at something that just doesn't work so the the uh but for the for the relatively simple use cases if you're using uh say say no scalability or temporal"
  },
  {
    "startTime": "01:08:01",
    "text": "scalability only you should be fine then i think it's appropriate to not include detailed examples of all the possible subtleties implementers should know those subtleties and know the stp for them okay good uh thanks i think that's all i had on the vvc thing so that's on track um next slide please so jumping over to evc uh that's a really short one um next slide we haven't uh wrapped the uh uh or one working group draft this this tradition of keeper life drafts uh i i consider you know this is this is just not not a good thing so unless uh you chairs tell me that we should uh run keep a live keeper live drafts uh um for bookkeeping purposes or something like that uh we're not going to do it however the draft is still on our on our internal agenda and we are committed to to deal with that however the the way we want to do that and that was i think greed in last summer is we'll deal with it once we have learned the lessons and that's especially the lessons i'm expecting on the security side uh during uh the idf last call so in other words what we suggest to do is uh we will produce version two after we got the bbc draft through the last call and then we'll be ready very very quickly uh with working group glass curl of the ebc draft the alternative would be keeper lives if you choose uh if you do that i think that's that's that sounds reasonable to me i think which one"
  },
  {
    "startTime": "01:10:01",
    "text": "sorry the the no no don't keep the live needed sorry just okay okay that's basically the other question i had is you so when you're saying security do you think there'll be sufficient you know specific security issues that might come up due to something like bbc or just no no if if there were if there were specific security issues that i'm i think that would come up we would have proactively addressed them this is this is just uh doing payload formats for the last 20 years something always comes up from that crowd so uh i mean if i would be very pleasantly surprised if this time nothing comes up but something always comes up so uh and there's always a need to add a sentence or to to the security uh consideration question and frankly in in the past that was also the truth for the congestion control i think this time congestion control is probably not the big issue anymore because those people are watching video payload formats generally nowadays but on the security side it's just i'm just expecting it without knowing what it may be okay okay thank you very much okay see mike faller in the queue uh annular mike which are your branding with uh general dynamics i was gonna have mike do our presentation for us okay protect and i'll be certainly here for questions as we go along sounds good hello can you hear me yes okay um i've been listening to the the conversations of the others and i'll i'll augment the presentation based on some of what i've heard um"
  },
  {
    "startTime": "01:12:00",
    "text": "but as far as i know the organization we are supporting is is new or somewhat new to the ietf so i provided a couple slides that discuss our background for the draft rfc that was submitted the particular protocol we support is called skip skirt communications interoperability pro call it began in 1994. i was around for the birth of that as a combined department of defense and vendor working group the working group was called interoperably controlled working group um this while the skip protocol began in 1994 there were predecessors to it we go back to the pstn days of early communications that the dod would do over pstns and then into is the end and migrated into ip all handled with a with a community of interest if you want to call it that and the community was mostly confined in the u.s uh for a large part of this but the goal of this group was to develop the next generation interoperability security protocol supporting the us government and the military interests later around 2001 to include nato and nato partners and the name changed to the skip working group the skip working group is a functional standards making test um community that meets one or two times a year depending upon the needs we have separate action items to do we have demonstrations to provide we are a functioning body that's been around them for a while next slide one of the problems that's come up is about the skip information access and awareness the skip standards are currently"
  },
  {
    "startTime": "01:14:01",
    "text": "available to participating government military communities and select oems of network equipment and call management servers that support skip government business entities must request access to relevant information and access to skip standards is based upon a need to need to know now devices that implement skip standards transparently operate over digital carriers skip is an application layer protocol it doesn't function down in the network layer the devices [Music] most commercial network and security community personnel are not aware of skip and this can result in a skip sub media type skip being removed from the sdp of a standard sip message so the lack of awareness among the network and security community has become a larger issue as the use of skip grows over more commercial carriers and as network security devices become more restrictive of unknown media as a side story to that my first exposure to to network security was way back in the early cisco days of building a firewall based on ip addresses i think we can all agree it's progressed a lot since then as to what the security appliances do to your network so we we have come across issues next slide please we have come across issues where the sd stp doesn't contain the transport that we need so the draft rfc submitted the ietf is designed to provide information to network equipment oems network administrators security personnel and to help skip succeed of the commercial networks because skip relies on commercial equipment within the network infrastructure to operate and as it's"
  },
  {
    "startTime": "01:16:00",
    "text": "become security policies have changed devices have changed from being where you go in and decide what you're going to not let into your network now they are more like they're going to deny all and you have to tell them what you want into your network and when that telling gets all the way down into the contents of the stp skip can have a problem so the skip rfc enables network equipment and manufacturers to provide an equipment configuration that supports uh skip as a as a media subtype so that the network administrators network security personnel can define and implement compatible network policy which permits the skip media subtype to reverse the network what the skip media subtype provides is end-to-end bit integrity no transcoding on the channel and in treatment as if the the data is clear channel data and there is actually a precedence to us within the rfc standards of rfc 4040 and we referenced that in the in the draft submitted rfc 4040 while it is a gateway protocol it is it is meant to take iep traffic and an isdn bri network 64k udi channel and build a end-to-end bit integrity network for the users to use whatever they want so rfc 4040 develops a clear channel it just happens to transverse uh go from ip to isdn 64k udi so skip is to be treated like that on a pure ip network next slide there are two sub media types that have been registered with iana as rtp payload format media types audio skip and video skip"
  },
  {
    "startTime": "01:18:02",
    "text": "information for those media subtypes where we include the media type description the payload format rtp header fields payload format parameters and the stp declaration as a mapping to the sdp and provides mapping examples what you'll see on the next slide i believe next slide this is the contents of the stp declaration to support a skip session i kind of uh like mo's comment of of high order bits this is just simply what will be included in a sip invite of what would maybe a normal video call with different codecs listed so the skip devices are presently deployed in the u.s and nato tactical networks and many national networks in some commercial networks using that following sdp media and submedia type we have deployed products and have had for over a decade using these protocols so the secure session can be used as audio skip video skip or both and the mapping is shown there presently there i think within the uh the global community my knowledge is is that there are probably about eight nine nations producing products using these protocols next slide so in summary here's here's our actual issues have occurred because oems and network equipment networks administrators and security personnel are unaware of skip and sdp contents necessary to establish scare session that unawareness is partially tied to the fact that this that the body of uh community that this serves is one that has a as an already standing community already has expanding set of standards in which to operate to do this"
  },
  {
    "startTime": "01:20:00",
    "text": "so it operating in that environment is is one that produces the fact that while we're defining the end products but we don't have any way to let the people in the middle know what we do so the draft rfc increases the etf awareness of the skip working group in its efforts to achieve international interoperability actually we'd probably welcome some involvement of the ietf community if they choose to participate in our sessions the purpose of the rfc is to provide global access to information necessary to support skip and a reference to the rfc provides context in a single reference point for the newly defined iana media subtypes audio skip and video skip so we have to look at our problem as not just being the end products having interoperability because everyone else who carries traffic is responsible for defining what's on the network is responsible for building equipment that implements security plans they need the knowledge to know how to do that it even goes down as far as the procurement people if i as a network designer want to support this protocol on my network how do i reference that to a procurement rep so that they can then write a a request for quote to vendors saying this is what your product needs to support so as in the last bullet the rfc provides information about skip and the skip working group community system network architects dr administrators security personnel oems risk analyst procurement personnel necessary for skip to be included in the system security life cycle so that's pretty much it in in a nutshell um i can respond to questions"
  },
  {
    "startTime": "01:22:16",
    "text": "i'm not hearing anything um basically you said that the actual content of the skip is on a is need to know which is just a um some form of classification right um it's not the the it's basically building a a channel by which the end devices will negotiate what they're going to do they're going to negotiate applications they're going to negotiate security parameters so its format itself is not as clearly defined as if you were carrying a movie traffic or 729 or something like that so basically this is just establishing a channel over you know a you know it's an opaque application channel over over the art existing rtb fashion then you need to integrate this with you know things that use the ip telephony that what you're saying yes okay yeah and it has been done in some devices when we've had direct interaction with vendors we've been able to especially those that are aware of the type of work we do they're saying oh okay so this is just kind of the next generation of what was in the previous in the previous in the pstn world we'd be talking to telcos about what they need to do on their network but there is no real telco anymore yeah so my question is what is the what can the abt core working group do for you so are you"
  },
  {
    "startTime": "01:24:01",
    "text": "i guess the document is an informational rfc are you looking for it to be working with less cold or what's the ask from us um here's here's we have to express some ignorance of your of how the ifc works so um for for our purposes we we look at this as uh the the adoption of this draft rfc is not the end of the game um we have much more work to do because an rfc doesn't mean anyone's going to implement anything into their product it takes work beyond that but an available global reference is a big start i would ask buber what do you where would something like this go because it is in the end it is the standard that's needed for end products to communicate and the way that they were designed um the recognition that their far end product is a compatible one and then working over a clear channel establish what each of the users are capable of doing and want to do yeah so i think we have our area director here uh murray i don't know murray if you want to comment on that [Music] um i was just reading your tweeting over the charter because it's been a while since i've read it and as long as um this is covered in it which i haven't i've finished reading it yet and this working group doesn't have any objections or the working group supports"
  },
  {
    "startTime": "01:26:01",
    "text": "the idea of bringing it in since it's informational um i don't think this is a problem to take up but you know consensus prevails but i think that's an example of the discussion [Music] as an example we could work a group less call it uh it could be published i guess through the independent submissions process also there's a variety of ways to to get it through the publication process which seems to be the goal is yeah if you're going for informational there are there are several options well that can be a discussion we can have offline is to the benefits of one versus the other because that's um also something that i don't know personally so yeah i think one of the things you're looking for because of the sdp issues is to get the attention of the sdp directorate and some of the people who make these b2b uas who are torturing you so that's kind of another consideration is how to get the most exposure to them that is true in a sense they are uh participants in how network equipment is created uh by the rfcs that they have endorsed or or information that they have to disposal okay i think the action item and correct me jonathan would be to bring this discussion to the mailing list as to uh how to get this published does that make sense to you that probably makes sense i do some people on the queue let's give it a quick over time yeah carol yeah i was stuck by struck by the similarities of what you want i want intermediate nodes to do with between"
  },
  {
    "startTime": "01:28:01",
    "text": "this and s frame actually in both cases the main purpose of this stp negotiation is to say to tell other entities on the roots please let this this through and don't touch it it's not unlike right this game i think that's an accurate description of the of what you present the escape right yes it is we've been uh been building products to this since about i want to say 2000 2004 2003. i was about 2008 for skip for for this so yeah it was yeah there was a lot in the works before it ever became uh product yep thank you for confirming good um the question regret in beginning of the earlier slides uh for this they were as i mentioned about the tsbcis specification um it's kind of in the same ballpark if you will similar or not but not the same as what we're doing i was kind of curious how that was approval for that was processed through the group that was a while ago i'm not sure how many people here now are the extra member okay yeah because it was like in the very beginning of the of the presentation um yeah it was on the thomas list of rrcs that were approved um i guess since the last meeting or whatever oh no that one yeah yeah um so i would actually suggest talking to the media type reviewers for that and i know murray is one that wasn't one at that time so it might be something where you need to ask that"
  },
  {
    "startTime": "01:30:02",
    "text": "different question um which is actually on this slide if i can if i can point to this uh from my understanding of your description in addition to the two media types uh that you have in there you do have data streams which you describe in this slide as uh clear channel data are you anticipating a media type request separate from the video and audio media type of requests for some sort of application slash skip as well um no the the reference to last bullet in that slide is is that the data present on the um audio or video skip payload type it will be treated as clear channel data don't mess with it whatever is there just let it go because there's there's negotiations going on we need to fit the and then bid integrity to to make the devices work and trying to trying to look at the traffic channels not gonna not gonna help you much uh i think you may want to uh take another pass through the draft and in your description of that because that's not the same impression i got uh with a quick look at the draft so okay thanks well that's that's why we're here comments stefan so um having just gone through this xs thing where frankly a perfectly available iso standard uh that just cost a little bit of money raised a big big uproar um i i think you will all have a hard time to get anything through the standard itf process where they needs to be a reference in there to a document"
  },
  {
    "startTime": "01:32:00",
    "text": "that's not available to the public and so far my suggestion would be to target from the outset to give this to the independent stream or whatever it's called so basically not an itf document but still an rfc uh and uh therefore something which most network people pay some attention to yeah and then you only have to go through a conflict review in the idf and that's that's much easier thank you right and then that sort of goes back also to my comment about the tsvci spec is that it also references documents that were only available through the government so i guess again sort of requesting or understanding how that process worked for that particular rfc and its approval again this sort of similar to what work what work path if you will that we're asking for okay car hi um we seem to be going a little bit backwards in terms of the way the itf handles these sorts of documents uh i i was very surprised to see that all that um the controversy about the um the spec that stefan was just talking about because we've done lots of payload formats which have you know had various degrees of difficulty in accessing the specifications over the years so process wise i don't see that there should be a problem with this in atf and i i think the ietf certainly should be able to publish open specifications that describe how to use a closed thing um so i i would sort of somewhat disagree with stefan and say that they should go through the standard itf process because the itf needs to be able to do this sort of document and has in"
  },
  {
    "startTime": "01:34:01",
    "text": "the past um so i i would encourage the group to adopt this and take it on as a a a payload format specification in the usual way and work with the chairs to work with the area directors to to find a way of your uh making making sure this is acceptable and that that may just mean that uh you know a small number of people are given access to check that the specification makes sense um because it's accessible to the community which cares and i think that's what matters um if i may speak for a minute the uh that is possible to to for um request permission for this to look at this it's a skip standard 214.2 referenced in the r draft rfc um and really most of the contents that of that document of any technical significance um are in the draft rfc itself this doesn't not much more than that i mean i think it probably does need someone who understands rtp um from this from the ietf to look at look at the the the kodak specification and look at what's being proposed and say yeah this makes sense but i don't see that it requires it to be made available to the entire community it requires it to be available to the community who will be implementing it and you know someone to to look at the spec and say yeah that what's being proposed from the rtv point makes sense uh and i'm pretty sure we've done this sort of thing before in itf's that's fine right um yeah just on that point the isg recently has uh if you look there's there's a bcp 97 is under revision for exactly this reason we had a number of documents come to us that"
  },
  {
    "startTime": "01:36:01",
    "text": "um we were not able to evaluate because the specification to which it referred was not available to us i think the proposal is exactly what i think colin just said as long as the reviewers the people who need to review it and approve it can get access to it to make sure this the wrapping specification is right then it can go forward it doesn't need to be you know permanently open public but also but it is a problem if the reviewers can't do their jobs that's all we just have to uh the reviewers will just have to contact the uh there's a contact within the draft rfc at the bottom requesting access we know in advance who they are we can make sure that they get approved yeah i think that's probably workable okay so do we have the action items identified yes we have mailing list discussion uh um i'm not sure yeah sorry my my question is along the line of that the action items i guess um you're suggesting that we uh make the doc the background document skip 214.2 available to certain people we would need to know who and will help guide them through the process of who they need to talk to and who would be on the iatf side who would be contacting us letting us know who needs to get access to the document i think i think that's probably a chair item is that right jonathan so we will um try to get back to you with with feedback um okay i mean i can think of some some folks"
  },
  {
    "startTime": "01:38:01",
    "text": "who who might uh might be appropriate but we'll have to discuss it and we'll revisit the uh draft rfc for for making it clear that the uh the last bullet in this slide referencing treated as clear channel daily is is is concise and and exact enough to specify that it's referencing just the data that is traveling within the uh audio skip or video skip traffic channels okay well thank you thank you thank you okay you're on go ahead yeah yes right cool next slide please so yeah i first wanted to update on the avt co-working group on s-frame progress that has been made in various areas so first you might already be aware that uh the ietfs framework you issued a call for adoption of uh the omar s frame draft which is mostly talking about the format itself and has some arctic architecture points as well so it was a successful call with some uh feedback that maybe the graph should be split in a pure format based spec and a separate um active architecture draft in addition to that"
  },
  {
    "startTime": "01:40:02",
    "text": "on the mailing list or in various place it was noted that there's interest in using strain format either at the back up level or the frame level but not in between which might be a good simplification also it was noted that the sram format itself is uh has some interest outside rtp um so for instance you could you could use web transport or rtc data channel uh with webcodex and still use this frame uh in between to do end-to-end encryption um so that that means that uh we we want integration with rtp but we also want a screen to be used uh outside of rtp um in addition to that uh on the wp side so the api level the webrtc working group adopted the webrt and curry transform as the first public working draft and the functionality already shipped in chrome since maybe a year and it's also enabled by default in software tech preview and it might be also in in the queue for other browsers as well so progress is being made to add support to allow webpages to to use s-frame or to implement engine encryption into browsers um so the webrt and kodi transform is definitely used for end-to-end encryption it's also being used either for prototype or real applications for other stuff like app specific metadata enrichment of and credit payloads it was also used for uh emulating emulating red if if it's not available in the browser um so so we are seeing that solutions are in browsers are more and more using that"
  },
  {
    "startTime": "01:42:00",
    "text": "and we're seeing that solution existing webrtc solutions are using uh like google do facetime webex there all adding progressively support for energy encryption and they're all doing that with different test firm like formats and flavors uh so there's no interpolation it's not the same kind of technology it's very related but it's not exactly the same some workarounds are being used and so so it's not great uh and it's not great because it's a security privacy technology and usually having just one uh well identified piece of technology to do that is better so next slide based on that my understanding is really that we need to make progress uh i think we already had a similar slide one year ago about that saying hey things are starting to evolve and to an encryption is being shipped and we need to make progress and it's even more of a case now um so and it's particularly particularly the case for s frame within webrtc ecosystem for web transport and data channel we still have some time but for webrtc ecosystem it's it's really uh getting fat there so that means s frame rtp integration and s frame sdp integration um my understanding in the past was that uh avt4 for instance would be responsible for doing the srm rtp integration but we are seeing um email threads on the sframe working mailing list about that so first question that i have to the avt core working group uh no previous slide my first question would be uh to to be clear about uh where should that work go or where should it be worked on could it be all done in this frame working group the sms integration or would it be better to do that in ibt core because currently i see that uh"
  },
  {
    "startTime": "01:44:01",
    "text": "parallel and maybe it would be good to be clear exactly about where he's going to work and which working group is responsible for which part and your opinion um i think that probably anything where certainly anything where like rtp architecture is implicated is best in avt core because i feel like that for the expertise is um okay so that's that seems reasonable uh for stp integration i guess that it should be s frame or a music correct probably yeah though certainly you know insofar as it's i mean yeah i mean especially because it probably needs something more complicated than just what a payload format would do so probably that means that music integration okay okay um okay so it's good we're in a vt core yeah just on that point the the stp um i mean obviously music is the home for sdp the payload formats are usually defined in avt core and that's but specifies a lot of the sdp parameters so it maybe needs to review here as well okay um so so it's great we're in a ut core we're discussing that so let's try to make progress so at last meeting we we discussed a lot the packet versus frame issue and uh i think that there are common requirements in both cases so if we put the packet versus frame issue aside we can try to focus on uncommon requirements and that's what we try to do in the next slides next few slides um so yeah the vs frame working there was a good discussions in base frame working with making list about various approaches and"
  },
  {
    "startTime": "01:46:00",
    "text": "basically i think we we know that middleware uh middleware being like sfus network intermediaries or browsers cannot inspect encrypted or transform packet payloads but they still especially as a fuse they still need information to root and complete transform packets separately um and that's especially the case in svc simulcat cases but it's already the case for instance in in non-simulcast cases so one question was uh from the main list whether it should be if possible just from http inspection to determine that content is encrypted or transformed and if so where should the information be located should it should should it be just a payload type should it be a dedicated head extension should we put that information in rtp payload so that's feedback i like to get from ebitda forks car uh i'm a little uh confused about what you mean by this question because um my understanding is that the payload type defines what what is within the rtp payload so i'm not sure what you mean by the separate the separate points there um so currently in uh the current and deployed environments the payload type is defining the codec so let's say h64 api 8p9 and we need we need at some point this information anyway and that's how it's being deployed but we could also say that you know that's wrong and the pilot type should say oh it's encrypted content or it's content that you you do not need to care it's opaque and that's one possibility"
  },
  {
    "startTime": "01:48:02",
    "text": "so i i don't think that's what the payload type does in rtp the payload type defines the payload format and the payload format describes what codec it is and how it is packaged and so if it specifies what's the contents of the rtp payload yeah i mean the only thing is that it was i mean it was right there in the in some discussion of the main disease that maybe yeah signaling that in the sdp that the content was even if it is yes and we don't change the packet decision of the codec just increasing the the payload yeah the the payload of the the of the rtp packet that it could go from there within the the same pilot time but for example me i think that it will have a different payload type to specify that it is not the the normal payload type so this is a it is not um we are saying what is the solution is that some people have claimed that it could be done in a different way so yes we were seeking guidance about exactly if if this could be an option or we should just er if we see for example shape and sending [Music] an rtp packet with with payload the payload network for vp8 then the payload must be vp8 and an unless view or whatever it can expect it in an exped to have the the correct payload in there um so i think that there's some separate issue issues here i mean um one is how you signal it and one is what is the payload format um you know the the the the the question on the slide about here is this located in"
  },
  {
    "startTime": "01:50:00",
    "text": "the the payload type or within the itp pillow that i mean they're the same thing so you may are you asking about the way that is included into the packet or the way the data is the way the contents of the packets are signaled [Music] so yeah i was trying to to to cover the fact that um in vs frame uh working mainly so there was a a proposal and um usually you could say oh i want to negotiate vpa because that's really what i want and i want also to to this frame um so then you need to provide that information the fact that you're using vp8 and the fact that you're using s frame uh to view the party and this information dp8 plus s frame uh could go also in the packet or it could be left elsewhere and so on and that's uh what what i would like to to hear about because we we think that getting both information like that yeah it is uh it's ep8 and yeah it's um it's encrypted it's transformed uh would be useful by looking at rtp packets yeah i mean i think my argument here would be if you're changing what what is the payload then that's a different payload format and maybe that's some sort of encapsulation payload formats but it seems strange to say this is vp8 but the content isn't actually vp8 yep sounds good number nine i think what"
  },
  {
    "startTime": "01:52:00",
    "text": "uh there's a couple of distinct issues as colin said one is the negotiation of specific rtp header extensions like we've had the frame marking header extension there's the dependency descriptor you know that there's routing information that's being negotiated um that really does not tell you anything about what's in the payload although people have been using it as a kind of a hint of what might be in the payload like it you know it's likely to be encrypted but it doesn't really tell you that explicitly and the thing is that you could negotiate those rgb header extensions without encrypting the payload right so um and then there's the payload type which or negotiation of things like the codec but again that currently doesn't tell you whether the payload itself is encrypted so it seems to me like there's something missing in there um and i know there's been discussions on the s frame mailing list about whether you really want to even tell the sfu that you're encrypting it or it's none of the sfu's business so i know there's there's that issue because really the the encrypted payload is really an end-to-end thing and sdp really isn't about that it's hot by hop but i think it's a little bit dangerous to assume that because you've negotiated a particular header extension that uh everything will work end to end with an encrypted payload uh because there could be as we just talked about with the b2b uas right there could be somebody in the middle who's looking at this and if the sdp doesn't tell it that they give it any inkling that it's encrypted it probably could be uh could become a problem at some point so i think there is a piece that's maybe none of the some of the information is in none of these none of the things you described here it's not right yellow type it's not a header extension it's probably something else oh yes i mean it seems to me like conceptually what this actually should be i mean insofar as everything in the rtp session will be s frame which i think is what people"
  },
  {
    "startTime": "01:54:00",
    "text": "probably want because you don't because i think having this be mixed is a security and you know nightmare i think what this actually is a profile much like savp has a profile um this is a new transformation like savpp um which uh i mean i don't know if you just i mean whether you actually negotiate it that way for backward compatibility reasons is a separate issue but um i feel like you know that might be at least conceptually the cleanest way to approach it and if we have to hack something to get it to work with browsers or whatever so be it um but i know that certainly especially for you know the problem with having to be a payload type is a the payload type um multiplication issues and um also just the i don't know if you want to be able to negotiate both you know s frame and non-s frame in the same session because that sounds like a good way to accidentally discover you're not intending or not discover it worse uh sue us sfu to make some decisions it's not they're not different islands they have to be combined together in any business logic that you apply on per packet basis and stp is the one that sets up some uh kind of stream level indications and uh and speaking here just in terms of the articulator it's a bit kind of not thinking about what happens in the setting up there and uh i did did uh see some of the discussions that happening on the streams mailing list about you know saying uh uh for for a media stream level or for or for particular payload type on applicability"
  },
  {
    "startTime": "01:56:02",
    "text": "that if if this is an uh s frame or on s packet that way uh for it's kind of hint to the an stp offensive can be defined explicitly to say what the behavior should be uh they think it's a hint uh to the sf utility it's saying that you know you know don't look into the packet further because it's entered and created you don't get anything versus uh something like if it's if it is not an internet encrypted thing you can look into the packet to see for example audio level or something like that and hence having some we need to kind of uh look it in the picture of the signaling and the media to make a decision just looking at rtp there would kind of leave a bigger system set up that's happening here and we need to consider that as well um yeah i think um conceptually i agree with uh jonathan that the first thing i thought conceptually was also profile level things like that savp or something like that i was an original i made the the right precedent model to use however uh not an originalist and i don't believe that it decided uh long ago should impact everything today and i think i would argue that savp has caused a lot more damage than uh than good um and there's been a lot of problems with things like stuff for security i would i would caution against trying to do what logically makes sense is to make a new profile out of this um but i think that's that's probably a mistake that rehashes a lot of the mistakes that those older profiles cause what makes more logical sense to me is this is just an encapsulation like like red or effect or anything else it's"
  },
  {
    "startTime": "01:58:00",
    "text": "an encapsulation of of some other payload so i think it makes more logical sense to declare all the real payloads and then also declare the encapsulated uh types and then what you actually send on the wire is the encapsulated type so it would be a different payload type number um and it would just be an encapsulation of some other payload type that is also in the stp but won't appear on the wire because you're not actually sending that format on the wire that's what i think makes more logical sense um yeah i think i agree with what i just said that this to me does not make sense as a profile um i think it's entirely the wrong level of modifications to be represented as a profile it strikes me as a wrapper format much more like um you read or the retransmission formats also and i think what what you are specifying here is a wrapper format which says that the content is for example vp8 but encrypted um and so it's a it so you know i don't think this is a a codec agnostic payload format i think this is a codec specific format which wraps you know something which which wraps a particular set of content so what you're signaling is is that it's this wrapper format and what is being wrapped is this you and you know the the the existing payload format gets put into the wrapper perhaps with an additional header uh had it before the front of it and it's signaled as a payload type um wrapping some existing payload type so i just one response i mean i think that's probably a fine solution i think the sdp part is going to have to be a little tricky because"
  },
  {
    "startTime": "02:00:00",
    "text": "if you want to say i'm willing to receive rap vp8 i do not want to receive unwrapped vp8 but i think that might be more music consideration than a avt core consideration per se yeah i think it's uh it's a good issue to tackle as well and to keep track of yeah i mean i i agree there's probably some signaling issues i suspect they're not that different to the ones we use for some of the retransmission or redundancy format i guess we'll need to work that through okay okay uh we don't have a lot of time but maybe this is my yeah we could say it's my last slide no go above and previous slide yeah so i think from what i hear is consensus is that we need an ability to identify whether it's encrypted and transform and also be an underlying codec type i'm not sure about whether it's good with consensus on uh having a solution that is independent of the exact transformation format uh it seems to me that it would be good to have um because what we're seeing is being deployed they are various s frame or transform being used and so um the wrapper format will only be able to will not we don't want to have a reference for each and exact transformation transform and uh yes the scope is directly related to whatever skill your video codex only so there's any known set of codecs that we want to store and it's a fully generic solution in any way the target is only working on your video"
  },
  {
    "startTime": "02:02:00",
    "text": "products um just you're on here going back to your you know the first slide of having different uh systems in uh implementing s frame versus packet in different uh uh different phase like google facetime versus webex and those kind of things i'm going back to if you go with an alternative payload format or some kind of wrapping payload format how how would that uh level of entropy will be achieved with a two different implementation of the s frame or what is the packet so are we are we kind of saying that we have to do one versus the other or or are we saying we we don't talk about that and somehow the implementations need to figure it out um it's open question i don't think that there's consensus on uh or on anything there yet um what is known now is that it's either a packet law or a freight level yeah we're not interested in cases but more than that uh since there are experimentation implementations sorting the cat and implementation support frame level so just maybe we'll we'll see from there or maybe we can some consensus i'm picking just one in the chat about we want to apply s frame packetization vp8 packetization"
  },
  {
    "startTime": "02:04:00",
    "text": "uh and this this perhaps comes to the heart of what's what's the issue yeah um i i was my understanding was that what you wanted to do was take um vpa content you know in the same way it's usually packetized encrypt it and then put it into a new payload format um which seems to be the model i was talking about and i thought mo was talking about justin's talking about doing something different then perhaps we need to have a conversation to make sure we're all understanding that the same thing about what's meant here you know it would seem like a package the things you would put you know packetize it for vp8 as if you're going to put it in the packet encrypt it and then put it in the packet possess frame vp8 inside but if that's not what's being proposed then i think we've got a bigger discussion to have yeah i'm sorry we this discussion that'll cut a little short by other things running over time i feel like this needs more discussion um [Music] uh we should try to figure out what's the best place to have this discussion uh would people we tried to do an interim on this before or didn't really have the right take up but if we can get the right people in a room an interim or perhaps a more informal side meeting might be helpful just so we can sort of get convergence on make sure everybody's talking about the same things architecturally is there any interest in that quickly hopefully justin says yes colin says yes uh okay we'll try to sus says yes okay we'll try to have some put up not something on the list for that uh so"
  },
  {
    "startTime": "02:06:00",
    "text": "um all right that seems reasonable um good i think we've reached the end of the meeting and we want to thank you for coming okay the only other thing i wanted to raise is that spencer um mentioned earlier on the rtp over quick discussions we think uh probably having specifically rtp over quick discussions on the aut list would be best whereas more general media over click on the macquest uh so just to keep things somewhat separable except someone's separate there that's probably the best organization for that and with that thank you all for coming and uh we'll see you at uh uh other sessions here or next time possibly in person and we'll uh arrange for interim on the uh s3 measures i believe we can get some convergence on that we'll just go side on the left thank you everybody uh"
  }
]
