[
  {
    "startTime": "00:01:58",
    "text": "Yep. Started. Think so. Done."
  },
  {
    "startTime": "00:02:08",
    "text": "Hi, everyone. Welcome to NSSD in in I TF118. So we have a quite an interesting session, I think. So there's there's actual meat to to discuss in terms of what we want to cover so I'm one of your chairs, Chris Fox, Debbie's gonna ask the east of the over chair. As usual, with the IETF meetings, you need to be aware of the note well. By participating in this, you agree to follow the processes and polos policies. This meeting is recorded and Be nice to everyone. If you'd want to know more, follow that link Now in terms of minutes, Tim has, kindly volunteered to to take notes We could do with someone else to back up Tim because He may not catch everything, and he he may want to also say things himself. So do we have a volunteer to back him up Right? Thank you. So you you'll find the, the notes link, at the top there. It's accessible from the agenda as well. Like, Right. So next, Yeah. You'll Please, if you're in the room, please please join on meet echo as well. So we so you're on the blue sheet and so you can see the chat."
  },
  {
    "startTime": "00:04:04",
    "text": "We have useful links here, which you can refer to later, if you want. All of these chest lights are in available in the meeting materials. And anything we discuss here will and in particular, any decisions will be confirmed on the main list. We have documents stored in that particular get her organization, So the The the documents you'll find there, on or on screen. And you can raise issues and, propose updates, although many of those are in their final stages. Now in terms of the agenda, this is what we have up for you. So we're proposing this order. So we're gonna give you the status update on SLP and update lease. We then have what will be The The main part of the content, I would say, is is presenting information from the side meeting we had earlier in the week. So So Stuart and Ted will be both presenting slides on that. So we'll discuss that and possible solutions as well. And then we'll move on to TSR and replication. Any requests for changes to that agenda. And one quick bit I'll add for those who don't know, who haven't read the mailing list, We tried something new, this IETF, which was to have, editors side meeting earlier in the week. So that meeting doesn't have any official standing in terms of, like the consensus process, so no decisions were made, but a lot of good work was made by the editors. So it'll be in the form of"
  },
  {
    "startTime": "00:06:00",
    "text": "possible changes to the documents that we'll then discuss in the meeting and in this meeting and the mailing list discussion after is when we're gonna actually check consensus for that and confirm that. It's just FYI. So not seeing anybody who wants to request changes the agenda. So let's go ahead with that. Do you wanna talk about the status Sure. So We have, the two documents that have left the work group in network group last call was finished. Our update lease and, SRP. So update lease has been approved by the ESG. They said they could progress it by itself, discussing with the officers, figured it would be nicer to have them with consecutive RC numbers, and we don't need anything else right now. And so we were waiting for GS for SRP to to afford it. That's, I think, just waiting on Ted to work on one discuss. I forget who it's from. And, so, hopefully, In the near you know, future. We can get those, out the door Yeah. Bloman. Yeah, so the discusses from, Paul, not Ted sure's Vouchers are Witters or I don't know. Anyway, I don't know how to pronounce his last name, but you know what I'm talking about. He's an AD knows a lot about DNS. He had a lot of good comments. So there's actually a whole bunch of work to do there. That's why, you know, as you know, I had some some life events that, slowed me down a little bit. And so, I'm a little bit behind on that, but hopefully I'll be able to get that turned around in the next short time, like week or so. We'll see. Awesome. Yeah. Yeah. Gotta do it at some point. Girls, it never gets done. Right? So, yep. Yep. And then the other document that is, adopted by the work group"
  },
  {
    "startTime": "00:08:01",
    "text": "is the advertising proxy, and that's just a Minor history. And Chad's gonna talk more about that one later. So that's that So think that's actually what coming up next to test presentation on the average. So where's that? Ted, you're up for the advertising proxy. Oh, sorry. That was Stuart. Never mind. Right. Will allow it. It's a team effort. Ted is actually doing most of the work, but I offered to do the slides and the presentation take a bit of the workload office shoulders. I have a click, or at least ask you to Do So this expect everybody knows, but it's worth a reminder. There's a lot of demand for this work right now, The Matterhome automation protocol is, has a lot of momentum, a lot of people working on that, new products coming to market, And in fact, their meeting is the week after this in Geneva, and because thread, wireless networking is still a new technology, we're still kind of working kinks as it goes to market. So lot of pressure. On getting this done. We in this group designed Social Registration protocol, which is kind of DNS update with a few tweaks. In conjunction with the advertising proxy, And right now in the draft, those things are tightly coupled together. Which at the time we thought was the right way to do it. So if a device on the thread network offering services, registered using SRP."
  },
  {
    "startTime": "00:10:01",
    "text": "And then that is reflected using multicast DNS on the ethernet and wifi. If there's a name conflict, Then the error is propagated all the way back to the device saying you can't have that name that's already in use. In in theory, that sounds like a good design. But what we find is that Due to with conditions that happen, delayed packets in the network, configurations change. Like, a a device might change its IP address. And we get apparent conflicts with there isn't really not the device with that name. You're kinda seeing phantoms of this device from 5 seconds ago. And and though those have been really tricky to solve and it's a problem for matter. Because Matter assumes that every device has a fixed, unchanging name which is not a user chosen name. It's a hexadecimal string. It's a unique ID for the device. It's unique commissioning time and it never changes. And indeed, if it did change, matter controllers wouldn't be able to find them again. So they neither need nor want name conflicts. And having struggled with this for a little while now, We've come to the conclusion that The much simpler solution is to separate these things and We discussed this in San Francisco, Ted. Ted. Presented some information on this. We're we're working at how to act on that now. So let's go to the next one. And this is one of the things we discussed earlier this week. The editor's meeting The proposal is to Make advertising proxy really simple. Given that you have a zone, comes from anywhere."
  },
  {
    "startTime": "00:12:00",
    "text": "In DNS. The advertising proxy simply takes that zone and re export it in the dot local multicast DNS namespace on a given link. If it finds name conflicts or a parent name conflicts, then Oh, well. Guess we don't export that name. On We don't try to reflect it back to the source and have a assistant name change because In practice, it turns out that most of the conflicts are temporary and spurious. They're not real conflicts. And And our primary customer for this right now matter. Doesn't want name conflicts anyway. So the pragmatic solution is to make sure we deliver what they need No. We The advertising proxy will need to do some kind maintenance. So if there are these transient Ares, transient conflict, registering a name, It should retry at some suitable interval. And suitable interval. We need to debate what that is. But if we don't do that, then over the course of days weeks months. Name conflicts could build up. And and conceptually, the the data that's being exported into the multcast DNS name space would kind of atrophy over time until there's nothing left. So, If there is a transient failure, We don't want to do a rename. We just want to back off a little bit wait for the just to settle and try again. Whether that's once per hour, once per day, once on each SRP renewal, we can discuss the details, but that's the concept. Next one. So given that simple model of an advertising proxy that can be used in conjunction with any DNS zone, SRP then becomes"
  },
  {
    "startTime": "00:14:01",
    "text": "just one of the ways you can make a DNS zone. Now, there's a question about terminology here. When I say zone, doesn't necessarily mean something that's visible in the global DNS namespace. And in fact, for most of the home users, in their homes running matter home automation, they will not bother having a formal delegation. So these are private internal names just like many companies today have private internal names. So that's nothing new. In the replication document, we use the term dataset for that. So that is the proposal. I think that's that's cool. Idioms. Please do. Yeah. Fine. So, there's one other thing that I do in the document that I don't think is I don't think you've fully talked about, which is Stewart one of the great things about coming to IETF is start talking about a problem that you never really like, you're sitting around coding on it and doing your own little personal changes to it. You never actually talked to anybody else who who has different opinions. So Ironically, Stewart and I were sitting down together the other day Stewart was complaining about the way that I was solving the problem a little bit. And not in a bad way. Just, you know, some some advice and, You know, and I I went back to my room after that and was thinking about an starting to type up the document. And I realized You know, We have this So I I mentioned in San Francisco that we could publish names under dotlocal that aren't under the TLD dot local, but under subdomain of dot local, thought that would be really cool, and maybe we should you know, extend, you know, MDNS responder or, you know, MDNS implementations in general to do browses in other domains as well as just plain old dot local. But the the thing that was interesting, it occurred to me after after Stuart and I talked the other day is that actually"
  },
  {
    "startTime": "00:16:00",
    "text": "PTR records never have conflicts. And we already talked about this thing called the discovery broker was gonna basically take a bunch zones and if you did a browse in the in the domain that's advertised by a discovery broker, it would give you answers in other domains well. We can do the same thing with MDNS. So the PTR record So you you when you're browsing for a service, like, you know, happ. UDP is a sort of classic thing that that that we use it Apple. Just browse for hap.udp.local, and the answers you would get back might be in dot local. Or they might be in a subdomain if not local. It doesn't matter because you've discovered them. Once you've discovered them, you have the names in now you can look them up. Turns out any name that you look up that ends in dot local winds up getting looked up in MD And S. So that means that in principle, the advertising proxy is actually reflected in the document. That's why I wanted to get up and talk about this. Advertising proxy can advertise The contents of the data set in a subdomain of dotlocal instead of in dotlocal. But it advertises all the PTR records in that local. And so service discovery just works, but the name conflicts that we're afraid of between like, you know, a device on the network that happens to have claimed a name, and another device in the zone that's also claimed that name goes away because they have different names. So it's pretty sweet. I haven't actually had a chance to do an implementation yet because I only thought of it This is a result of us sitting down here in Prague the other day after, you know, our conversation. which is good, and we we actually have to try it with the matter code to make sure that it doesn't choke for some silly reason, and there may be some bugs to Right. I'm optimistic about this direction. Yeah. It's it's it makes life a lot simpler if we can make it work. So We'll see how it goes. I'm gonna do an implementation sometime in the next month or so and Try it out. Try it out. Try it out."
  },
  {
    "startTime": "00:18:00",
    "text": "Thanks. What do folks think? So I see Josh in the queue. Hi. Can you hear me? Yes. Who are you fine? Okay. Great. So I I had a question before you mentioned that the the when you're talking about the conflicts, And related to matter devices which have unique basically have unique names So how does the comp how does the conflict arise? Like, do those devices, names, change. No. The the problem is when you're doing SRP replication, you can have different versions of the data I talk about this a bit in the TSR document. So I think we should probably wait until then to fully answer your question, but the bottom line is it's differing versions of this of data from the same source. If are causing the conflicts And there are also some weird little edge cases in MDNS cause conflicts. Like, if you have a big pile of of, records to probe it's possible that one record on a name will be in one probe message, and another record on the same name will be in a probe message. And that winds up looking like conflict. So It's basically these are these are all self inflicted wounds. They're not real problems. So we really wanna make them not happen. Yeah. And just give a bit more background on that. We are using service registration protocol, right now in shipping products. That are used for home kit over thread and matter over thread. But right now, with SRP. That's a single point of failure in the network. And the nice thing about multicast DNS is there isn't a single point of failure. 3, So we've known about this, and and Ted has been working on SRP replication. And it's in the course of doing that. That we we have these problems and this is something I've heard Dave Taylor talk about The passage of time really makes things complicated in networking."
  },
  {
    "startTime": "00:20:04",
    "text": "It's when things change that the bugs get exposed. And If a device changes, it's IPV 6 address, or other attributes of the service Obviously, those changes don't get reflected in both service register simultaneously. And and for brief moment, they're inconsistent. And if they're advertising using multicast DNS on the same ethernet segments, then they can see each other's data and get confused And that doesn't seem like it would be hard to solve. And we didn't think it would be hard to solve, but but in practice, as we're developing the SRP replication, we're finding these these problems keep happening, and we we think we fixed it, and then they happen a different way. So it's caused us to stay to take a step back and say, Let's I mean, to answer your question, Josh, all the conflicts furious. They're not real conflicts. If you have 2 matter devices with the same unique ID, then you've got deeper problems that matter. So so these names are supposed to be a a priori unique So so any apparent conflicts we get are due due to these timing race conditions. And rather than trying to fix those race conditions it we realize it's much simpler just to say, okay. Let's let's say there are no conflicts here. And the other thing I should mention, look, it sounds like we're just avoiding an important issue. Our goal here is to do more and more service discovery using unicast. Including on wifi, at some point. In the future. So So in some sense, we we view the advertising proxies a temporary back was compatibility solution for existing devices. Now it'll be a backwards compatibility solution for quite a few years. This is not gonna happen overnight. But I'm kinda crossing my fingers that 5 years from now, 10 years from now,"
  },
  {
    "startTime": "00:22:01",
    "text": "we've actually got a service registry in every Wi Fi access point just like we have on in every thread boarder after. That's long term thinking. But that's why I I'm seeing advertising proxy as an interim solution, not the end state. Okay? So I just have a quick follow-up yeah. I think we have time. I'll let the chairs manage the time. Okay. So it It's few things I wanna say. What if I want I wanna see if I'm capturing or saying in a second is that some of the context of why I raise the in terms of, understanding what what what I think you're saying is that the problem isn't that the device name's changed problem is that the value of the record, whether that's the IP address or similar data, changes over time and then, right, some sort of cash or other thing that's advertising it creates a problem because now there's basically the old value and the new value. Yep. Okay? That's right. So the context, so for any of you who are in the, inch area group meeting earlier Tommy Poly, presented the proxy the PVD proxy config file format. Yep. I'm I'm one of the original authors of w pad, which is kind of a famous hack posted, an email to the anti area list, which has sort of origins of that we've had and the problems that we had. Like, back then, Like, DNX text text records weren't really adopted yet. D DHCP was still only somewhat adopted in server location. This are all, you know, this is in mid1990. Server location was still kinda hand waving. Right? So we ended up with this kind of scheme to discover the pack file URL, if you read the draft and the original emails on the HTTP work group list. The initial thought for, let's look at server location but that just kinda fell by the wayside."
  },
  {
    "startTime": "00:24:02",
    "text": "Because, you know, I I was the PM for when I did an IE 5 when we implemented w 5. But so now we're looking at, like, evolving that and figuring out how to make the what I guess is probably DNS SD today. Make that work in that scenario is kind of where I'm coming from. I just wanted to jump in and make one comment and say specifically, thank you very much for that email to the, to the mailing list. I I think, It's always makes for excellent his history and reading to understand. What happened, why it happens. You know, I haven't seen the email yet, but I will take a look. Thank you. Yeah. Definitely. Like, we we weren't stupid. We were just, limited by what was available. What what was your name? Who asked this this who's made that comment. That was Eric Klein, interior area director. Okay. Great. Alright. Thanks. Thanks, Josh. Esco? That's good, Ike. Yeah. I've been looking at the new document so that that's pinned it to the GitHub. I think it kind of summarizes what what you explain, Stewart, so this approach. Yeah. I was thinking that, we have to look at how this basically updates DNS SD because if I look introduction of Again, SSD, it has this term in brackets, which is called service or actually domain And it says the PTR record uses domain, but also the SOP record use exact same thing domain. So it doesn't allow for any, let's say, sub domains of, of dot locals Of course, if it works in practice, it it's great, but but you could imagine there might be an implementation of MD And S that that takes it very literally the introduction and actually checks, like, this domain really the same. And if not, I'm not gonna trust it,"
  },
  {
    "startTime": "00:26:03",
    "text": "that something to consider? At least it needs an update. I think, at the very least. Yeah. I I would have to reread the exact wording of the RFC to see what it says. I can certainly tell you what my intention was when we're working on that. Which is that It is just a pointer in the normal sense that, that DNS PTR record is allowed point 20 domain name, and there was There's certainly nothing in the document that says a receiver. Should deconstruct the domain name and do some kind of sanity check on it. So the intention was you could have some point of record, in dotlocal where the target points to something in meeting.itf.org. That was the intention, but I'd have to reread the tech and it might it might imply otherwise without actually going so far as say that an implementation should enforce this. So some clarification might be useful there. And and certainly, we need to test it. To make sure that the implementations are not doing that kind of check. I'm pretty confident that the implementation we have at Apple does not do that check, but, of course, not the only implementation these days of multicast DNS and DNS service discovery. Android has a brand new one in Java. Matter has their own implementation. We definitely need to check one One similar thing I can tell you I know does work is if you have an SRV record that is something in dotlocal, but the target host is not in dotlocal. Then I know that works because I've used that many times myself for doing demos. In fact, right now here, I could visit. The the DNS dash SD test tool actually has a dash capitalp option for proxy. So you can advertise a dot local service"
  },
  {
    "startTime": "00:28:00",
    "text": "that points to theietf.orgwebsite. So at least in the In the SRV record, the target host can be any valid DNS host name. So that part works whether the PTR can point to an SRV that's not got the same suffix. I haven't tested, but I have no reason to think it wouldn't work. And we might need to just clarify that in the text. Yeah. So I think it's also, hopeful that it will work in almost all cases. So maybe there's some more, like, software implementations that need to be checked or a number of popular ones. What what we are for not in that we are early in the deployment of matter. So This is not something that we have to make for the entire world of everything. Right now, we're pretty much focused on we want matter to work. With thread accessories, with thread border routers. Because that's where the advertising proxy is actually being deployed today. And if other devices and other contexts don't handle this. That doesn't immediately affect us. If this technology becomes more widespread. In other cases, we may care about that, but that this particular use of this is is is brand new. Yep. Great. Thanks. Okay. So I think Thank you, Stuart. The second one, me as well. I think it might you know, it's is it the multiple questions? Yes. We have Ray here as well, but I'm gonna sort of get the production Sounds good. Yeah. Alright. Let's go on. This is a little story here, which is actually a great example of why we come to ATF meetings and things working really well. So a bit of background."
  },
  {
    "startTime": "00:30:01",
    "text": "Thread networks have a nominal data rate of a quartermegabit per second. And reality when you take overhead into account know, maybe it's 80, 90 kilobits per second. If you're going multiple hops through the mesh, you might have an effective rate of 30 kilobits per so It's very constrained throughput Also, because of the use cases we're talking about, like home automation, turning your lights on and off, It's very time sensitive. If you press your light switch and takes more than about a quarter second, then you start chapping it again because you think it didn't work. So we have to be very careful about efficiency and because of that, Some engine is don't know who doesn't matter. They they got this idea that when they're looking for SRV and text, They can actually put two questions in the same DNS pack it because there's a field countiness to 16, but failed. So I'll do two questions. And it turns out that the servers answering those queries were written following the postel proceed. Postal principle of being liberal in what you accept, and they said two questions. Yeah. Why not? I can do that. Stuart, can I ask you to maybe tell a little bit more of the story why doesn't that work? For Oh, Oh, okay. Yeah. I was I was about to get to that. Sorry. So So we have clients that will actually pack 2 questions in to one DNS message, and we have service that support that but This has been discussed many times in the DNS working groups at the ATF. And and has been rejected. A bad idea, for many many reasons, I actually don't claim to know all of them myself, but I trust the people who are in those discussions to know what they're talking about. One obvious one think you can go to the next slide. Yeah. One obvious one is that there's only one"
  },
  {
    "startTime": "00:32:00",
    "text": "our code field in a DNS reply. So if you do two queries, one gets Nx domain and the other doesn't. How do you how do you indicate that? And that that is just one of many problems. So So Ted actually asked about this earlier in the year, And in response, Ray Bellis wrote a draft, clarifying that that field in the DNS header is kind of redundant and it's pretty much always the value is 1. You can't have two questions. So Dray wrote Ray wrote that draft. And and we agree that this is probably a bad idea to do this. However, Next slide. Because thread has low capacity, and and we want really fast response time just doing 2 queries. On ethernet, on wifi, big deals send you back to back queries who cares. But on thread, it makes a difference. So So just doing 2 is not good. One proposal was, well, well, we'll try this Q count 2. And if it fails, we'll fall back, but then you might need 3 packets. We that there were some people who were that their mindset thinking about this was Well, this is only for threat networks. So so it's different. It's not the general internet. But we know here that Traffic doesn't stay constrained like that. There is there is nothing that stops a node on a thread network that thread is an IP network. The point of it being IP is it interconnects with other IP network. So a node on thread might be talking to a DNS for anyway, it could be talking to any public resolver and even a note that is, quote, on the thread mesh, Right? You could take a Linux machine running behind 9"
  },
  {
    "startTime": "00:34:00",
    "text": "stick a thread radio on a USB dongle into it. And now that Linux machine, that might have 10 gigabit ethernet ports also has a thread interface, and it is quotes on the mesh. So just because the destination of your DNS query is quotes on mesh, thread address, doesn't mean it's not a general purpose DNS server. So So these are kinda unsatisfying And just this week, In our editors review meeting, we were brainstorming and Ted Kermit with a great idea. So so Ted's idea that he thought of while we're talking was How about we issue a normal query with one question in it? Warren domain name 1. Query type but we add an e dns0 extension that says, by the way, I would like this other type as well. And we thought about that it has this constraint that you can't make 2 unrelated queries. It has to be the same name. If it's the same name then if it doesn't exist, Nx domain applies for both. And if it does exist, it does exist. For both. So so it avoids some of those problems and I couldn't think of anything wrong with this. So, at the DNS op this meeting this week, we weren't on the agenda. But when I run up on Aspen, I said, can you give me, like, 2 minutes at the end? Cause I had the question to ask preparation for this meeting, And I'm glad I asked that question. Because Ray said, Yeah. I wrote a draft that did that. So, I'm glad I asked because it saves me and Ted writing a, pointless draft. And and what Ray had proposed I mean, I I guess this evidence is a good idea because what Ray proposed is very similar to what Ted proposed, you know, slightly different format in the Eddiness 0 extension, but in spirit, just the same thing. And and Ray originally submitted this more than 10 years ago, but"
  },
  {
    "startTime": "00:36:05",
    "text": "Okay. Very topical. Very Just to repeat it at the mic for the remote folks, Ray was saying that here in Prague 12 years ago. So so I think back then Everybody thought it'd be nice to be able to do an a and quad a queries in a single packet. But it was not really compelling enough. Well, now we have a use case with thread and home automation it's a low speed network, responsiveness matters, think we have a really compelling use case here Ray has generously offered to resurrect that draft. I think Ray might be saying a few words about it. But I wanna at my vote of support, for that. We we we should read Raised Draft after the maybe back on it, but I think it's substantially going in the right direction and, I think we can adopt that. Now having done that, we we have a transition to think about because there are products shipped in the field now using CUDA QD count equals 2, and we're sorry about that to the DNS people. It happened before we noticed, but we are gonna to fix it. This is how we're gonna fix it. We're gonna fix the open source project to stop doing that. Thread unlike IDF has a certification program. Thread is bit more like Bluetooth and organizations like that that there's actually a certification program products have to pass to get the logo on the box. So We will have the certification. It certification test that products are not trying to do to queries in the same packet by setting qdcounter2 And in the in the meantime, we'll have the server still support that. So that we don't break existing products. A year or 2 now, after everything is being updated, we can come back and revisit. So we have a road map"
  },
  {
    "startTime": "00:38:00",
    "text": "to actually first get rid of this from the clients and later retire it from the servers. Hopefully, we can unwind this mistake and and not have to live with it forever. I think that's Thoughts, comments, So speaking as chair here, this is a, like, not specific to DNS as Dean. But it was kind of a more general DNS document. That said, this so I it would naturally fall within the remit of the DNS op working group normally. Were sort of. It would naturally fall in DNS X. But DNSX doesn't exist anymore. So DNS operations has kind of become the capsule for for DNS extensions. So Well, that's what they're charted to do. Like, that what matters is the charter, not the name. But that said, I'm not saying, and therefore, you know, go over there. It wouldn't be the first time that we've had DNS changes that were kind of for all of DNS, but really that, like, most people didn't care as much outside of DNS SD. So we brought them here. The previous one was the update lease document. That is now approved by the ISG. So This is something that we would review with our ISG overlords as per usual. And with the DNS stop working as well to make sure that every everyone is on board, but that's a path forward we have here. But let's let's take the queue now or So just in terms of those who are in the queue, So what we've got on the agenda is that, thought it'd be good for Ray to to actually just talk us through what his draft says. Would that be I mean, if does anybody in the queue want to discuss this before Ray presents it. I think it makes sense to have Ray say say a few words first. Okay. Go ahead, Raven. Yeah. Should I come up there? Yeah. Sure."
  },
  {
    "startTime": "00:40:02",
    "text": "I can't say it from Sorry. You you're saying that we're holding the questions until after I read his presentation? Alright. Sounds good. Just state steep webinar, we'll we'll come to you next. Yeah. So, yeah, Ray Bellis ISC. I was actually with Norman when I first wrote this draft back in 2012. I recall distinctly having a conversation with Paul Vixie about it out in the seats next elevators out there. But yeah. So, yeah, the cutie count issue, Yeah. There was a there were a lot of edge cases. We talked about our code. There's also things like the AA bits. There were multiple competing ideas around at the time back in 2012, And essentially, yeah, my dear and and this one was constraining the problem space to one's worth of key name is the same, essentially massively reduce the edge cases. And, essentially pack the extra cube types that you want in an indigenous option. The national life format you can see here I didn't do slides because I only got called into this this morning. I've been busy since. Essentially, you can have up to 8 additional records well, sorry, additional q types specified. There's a bit of a habit in some DNS devices or fake. They know DNS basically echo backy dentist options that don't know about. So there's protection against this and vacation, essentially there's one, agent adoption code used the outbound request to enter the whole newsletter reply if I recall correctly. But there's also the QTD bit, the q qsub direction bits, which again must be changed in the response. This is how a client can tell that the server really did actually process the option rather than just echo it and the reason that's important is because the echo back queue types that you get back. Use as an indication as to whether the server was actually prepared to answer the question or not. And that's necessary to distinguish between AccuSite nodding and existing."
  },
  {
    "startTime": "00:42:00",
    "text": "And server saying, well, it might exist, but not gonna sell you. So if you've asked for 2, 2q types, and you only get one of them back then that might mean you go you actually still need to go and issue another query to get the home back out. There's a few bit related edge cases. I mean, technically, if you were to ask for the DS record and DNS records at the top level of the zone, those actually have different AA bits because MS records are not authoritative race records are authoritative. And there's another edge case with DNS second archives because you could, in theory, have a an invalid RSI on one of the q types but not on the others. And you'd get so you'd get Surfel normally for one of them and a valid response of the other. I not sure I've addressed the aid case, but the, the DNS set case is certainly in the draft, where I basically say, well, if it happens that the ARCos are gonna be inconsistent, send back the one you know that you can do. And and, essentially, you force the client to re query for one that produced the survey. Rather than getting it all back in one certainly had indications from Zemozinski, is the, ones doing this up chairs that be happy for this to sit here in this working group. That's what I I've kinda kept it off live. But, in the DNS world, you know, they didn't really like the micro optimization of it. I think here it certainly seems to fit very nicely. That's kinda my piece on it. Okay. Sure. Thanks. Yeah. I know Greg. I usually want. Thank you. Ben of all, frienders. Well, Yeah. I'm also DNS Cookies introduced the idea of a query with her question in it. So that's a kiddie count 0. Hello?"
  },
  {
    "startTime": "00:44:03",
    "text": "Yeah. Now it's just a comment. So the chairs you just mentioned, Tim, Suzanne and myself. From Dinesol. We're quite happy to see the coordination. So thank you, Stewart. Reaching out to us, nice coincidence that we just adopted. Working group draft, QD Council is 1, but Yeah. Thank you again, and thank you, Ray. Well, in the Qd account 1, Just, you kind of did actually also sort of referenced this one as well. But I think ultimately you know, they can going go to in parallel with the different working groups. And, yeah, there might well alert the normative references, but That should be fine. A sick they're both relatively straightforward drafts, and I'm hoping that, the kiddie Cat Woundraff will be in a working group last call in Denesop pretty soon. Awesome. Thanks, David? And a reminder for everyone to please state their lint names of the mic. David Lawrence. And, 2 things. 1, as far as the question about whether here or PMS off. I think this does have that broader appeal to other people in the DNS space, so it would I think really good at DNS up. But also notably some people in the room might not be aware that there is currently a move a foot to improve, delegations in the DNS that would allow us signal better. Hey. I'm a modern resolver talking to a modern authoritative server. And therefore, I would like to use all these nice modern, extensible protocol features like better handling and multiple queue types. I think you should still solve this in the legacy and that's because it'll be more quickly usable right now. But Be encouraged that I think we have a path forward to how we can maybe stop being burden by, like, forty old forty year old expectations that QD count can only be 1 7 Yeah. I I agree with the broad principle you're making and Whichever working group is normally the home for this. We're gonna work closely together. Yeah. When we did this for, date lease. We had the working with GlassCall on both lists, and there would be a very similar process here."
  },
  {
    "startTime": "00:46:02",
    "text": "Ted Lemmon. So I just looked at the DNS op charter And, actually, the DNS off charter strongly encourages other working groups to do DNS extensions, not to do them in DNS ops. So I actually think it's more appropriate to do it here a DSN DNS op, but and, apparently, the shares do too. So I I don't think we really have an about that. And I I think you're you're, you know, last call in DNS op proposal seems fine. At the end of the day, we'll chat with our the respective AD for both working groups, and they get final say. So I revved this draft, but it was essentially, an almost no op rev back at the same time as I did the 1st draft of Cudy County equals 1. Back in the spring. So it's currently technically expired. But I'm very happy to rev it. It's just currently draft ballast Danish X, but of course, Danish X doesn't exist. So as soon as you guys let me know which one group you want it in, I'll do a draft ballast day in SST. Your days start from dash 00 again. 3, Awesome. Thanks. And, he'll all plug a proposal from Martin Thompson Gen dispatch to make internet drafts no longer expire. Next in queue, libor. Is it Nick. To me, I I see that you are, like, trying to solve a problem by querying, a server record and takes echo at at once and the necessary data air likes split between those two records. So that you have to query them once. My question is would it be actually better to have any other new probably new and even more suitable R type for those that are that you need to store and query advance I guess it might be too late. Like, the whole world already storing them into a service index txtxt wouldn't it be good to take the effort to create a new IRR type which which is really, like, fine truths suitable for the data. You need to store them. And then ask them to query just the one aerotype, Thank you. Yeah, what you say makes a lot of sense"
  },
  {
    "startTime": "00:48:00",
    "text": "and I have wished I had a time machine to go back and change it. 20 years ago. We could We when we designed data service discovery, we built on the SRV record because that seemed like the obvious DNS record type for doing that. But then we needed ancillary data that some services needed. So that went in the text record. With hindsight we could have done this just with the tax record. Could put the target host and port number. Within the tax record, then you don't have to fetch one thing. But we are at a point where we've got a twenty year old protocol here that that is deployed on many, many devices. And even though What we're focused on now is for matter devices, We wanted to work for everything. Right? We don't want to do a one off thing that is where where matter services are different from other services. So We want this to work. Well, for all the things that currently use it, Apple AirPlay, Google Chromecast, IPP printing, all of the things that are currently working this way Yeah. If we had a time machine, we'd go back and change it, but but now we're we're dealing with the the reality that we have. Also, I have to do an s expert review type hat on. No. Thanks. Alright. Tim's in queue. Yep. I'll be I'll be quick. Kim Wieczynski. I wasn't we weren't trying to say the chairs weren't trying to say set stuff specifically. We'll do what the working group, you know, will bind with the vibes right. So we'll bring this up tomorrow morning. Awesome. Thanks. Yeah. Mhmm. Cool. But at least it's worth bringing up tomorrow. And, you know, so I'll just let people know that this is that's"
  },
  {
    "startTime": "00:50:00",
    "text": "probably going to happen here. And if people have strong feelings over there, we'll hear them. I mean, I think the the the the first thing to establish is are we willing to do it here? I mean, I mean, I would and and Raywood. So if we're willing to do it, then we can communicate that to DNSO. Tomorrow. And if they agree, then that answers the question. Yeah. All the way these days real sitter's the DNS directorate Yep. Yeah. Well, well, the the chairs will take the action item to where with the ADs here. Okay. Yeah. Just to add to that tomorrow morning, I think the chair slides is that we will the first ten minutes, we will discuss it in the dean's home. 9:30 Alright. Thank you. Ben of welfare, and sorry you're not missing my name. Great. Thanks. Thanks. Actually, hold on, Stewart. I I had a quick question. Chair hat off. You you mentioned that like, you know, Airplay, Google Chromecast, use these records already would you envision using this extension for those as well, or are you thinking of just using it on threat. Just out of curiosity. I don't think it impacts the process. The answer to your question is is Yes. We have a modular design of software, So when your Google Chromecast client says, I'm looking for things I can cast to then It calls for my break. And right now, that library does 2 separate queries. That library could be updated to do one query with this option and the application I wouldn't know or care and we'd like to be able to do that migration in a backwards compatible way. Yep. Cool. Thank you. I was thinking the ADs would prefer to be consulted before we do a shorthand, I think."
  },
  {
    "startTime": "00:52:01",
    "text": "That's neat. Yes. So So not not hearing anymore on on that topic. So the next item on the agenda is TSR. Say. Take it away, Ted. Okay. So next slide. So I you guys have heard about TSR a number of times before. Might seem like nothing is going on with it. Oh, you didn't take the new version of the slides, or maybe I didn't give them to you. Hoops. Oops. Oh, well. No worries. So, the draft has expired. The reason it expired is largely just that, I was about to make an update when the alarm went off, and I didn't quite have time. And so I didn't make it under the deadline. But actually, learned quite a bit about the problem and, I presented some of that in San Francisco I'm actually come up with some additional, observations since then. Next slide. So it So I'm just gonna Where where you reset seeing if you get updates to the latest version. Oh, yeah. Okay. Try that. Blue. More text. Yeah. So, one of the co authors, Leon Chin actually left Apple, recently. And so he's no longer a co author. And that reminds me that, I could really use an additional coauthor on this I I think right now, is it Esco, are you a coauthor on it? I can. Okay. I don't think it was this 1. Yeah. So, I'm pretty sure somebody's a co author besides besides Leon, but I'm not positive. Anyway, thing I will say about this is I often ask people to to join on as co author and get no response. And To be co author, you don't have to actually be an expert. What you need to be willing to do is"
  },
  {
    "startTime": "00:54:04",
    "text": "be an outboard motor and do some edits. And you can ask me questions that I can help you to clarify text. So that's a huge benefit if you don't actually invent anything new yourself. You also get your name So anybody's interested in being an author, you do have to actually be willing to do some don't don't just sign up if you just because you want your name on the document, but but I definitely would appreciate help because, you know, I have, stupidly full time job. And one of the reasons that I often don't have updates for documents and time for ITS is is because I just ran out of time. So Extra Help always always beneficial Next slide. Yeah. And for folks who've never authored RFCs, like, This is a great way to get started because you're Ed was someone who mostly knows what he's doing. I'm kidding. Of course, you know, Ted is a great cooperative, great person to work with. And then that way you learn. Okay. So, We actually have an implementation of TSR. And, that's currently running in Apple TBS devices. And it Think it's also Maybe in Apple Iphones, but I'm not positive. I have to think about that. And so so, Right now, it just does probes. Sorry. It's only included in probes. And it just includes a time offset. So the that's the current state. We just have a a a a an EBS 0 or sorry. No. It's a it's a it's not an EBS 0 option. It's a it's a DNS option. That has the same owner name as whatever various, records you're trying to indicate were updated at particular time, and it just says what time they were updated relative to when the DNS response was sent out. MDNS Response. Excellent."
  },
  {
    "startTime": "00:56:02",
    "text": "So, in San Francisco, I presented some stuff, and there were some insights, which I will just repeat here because, people may not recall. One insight is that that conflicts and this is actually the question that, Mister Cohen was asked, sorry. I forgot your first name, was asking about and, the That is the TSR conflicts. The conflicts we normally see if if TSR is being used to resolve a conflict, It's not a conflict. If it were a conflict, TSR is unnecessary. Because it's actually a conflict. So TSR is actually dealing the only time that we actually use TSR is when we have stale data. And know, so conflict is when 2 hosts are actually trying to publish information on the same name, but their different hosts, different sources of authority. And in this case, not different sources of authority. The source of authority is the same. It's the version number that's different. So, conflict resolution is the wrong thing to do when you get a conflict of this type. Creates self inflicted wounds. It's really unpleasant. We have a lot of issues with I should say, like, Stewart asked me to to mention this that, like, this has been a learning experience. Right? We're actually doing new stuff. I I heard someone the other day say that ipv6 was not a research project unlike ipv4. Which I think is just laughable if you look at the history of IPV 6. Right? Of course, it was a research project. They might not have set out to do research, but they sure did do research. And it's the same thing here. I mean, we are trying to do something that's commercially viable and usable, but we're also doing research. So we learn a lot as we go along. So So the proposal that I, had in in San Francisco was we add an additional fingerprint to the TSR message that just fingerprinted the the SRP update so that we could tell if 2 pieces of data were from the same update. Turns out that was a really dumb idea. Next slide."
  },
  {
    "startTime": "00:58:00",
    "text": "Problem is that, we might have 2 versions date of data from the same host and you know, some of the data might have been in a different update. It might still be valid. The fact that fingerprints are different, doesn't really tell us anything. So what we really wanna do is just say there here's where I got the data. Right? Like, And and then we can compare. And if here's where we got the data is different, then it's a conflict. And we just deal with it as if it were a conflict. We don't have to do any comparison of time stamp stuff. Mean, we could, but we don't doesn't help. In fact, it's probably better not to. So, The great thing about this is, you know, for SRP, the the source of authority, is based on a key, which doesn't change over time for regular DNS, it's just the domain name, which doesn't change over time. So we have a stable identifier that we can use in every TSR message that tells us who sent it, who sent the data to us. And, so then if we see different records. So one of the one of the problems we have is is I mentioned this earlier if we have different records, in a in a pro like, if we get a pro that has, say, a record And in our authority table, we have a quality record and a key record if those were from different sources, that would be a conflict because the the entire state of of the r sets on that name is different coming from one source than from the other. Unfortunately, that can happen in a probe if we run out of space. So we send One message with a particular owner name but the other or one record with a particular owner name, but the other record doesn't get sent. Until a later probe. Then we see that as a conflict. So now We can just look at the owner at the at the source of the data and say, well, these are the same. So it's not a conflict. These these are 2 different records. They've got The same owner, doesn't really matter when we got them. They're just not in conflict. Next slide."
  },
  {
    "startTime": "01:00:04",
    "text": "So, the other thing that we've noticed is, And this is actually It turns out that that when we're doing SRP replication, we can actually have a lot of service. We actually limit it to 5. But that's still kind of a lot. And every time we register anything, with MVNS, we have to do a pro, which is multicast, and we send it time. So that's a lot of multicast. If we have, like, an SRP synchronization event, then we're gonna do a whole bunch of multicast just to go and validate the fact that these names were claimed that these that that these names are still available but all of that multicast is useless because we've already done that. The original SRP server already did that. We wouldn't be getting this message from it if it hadn't. So doing the extra probes is Silly. So, the problem is that we have to do the probes because it's during it's when we do the probes that we send the TSR record. We don't send the TSR record currently in an answer because we don't want the on a on a server that doesn't know about TSR. So, the solution of this is to just using a DNS 0 option instead of having a in our in our Right? So the ENS 0 option just points back to the resource record and says, here's when we got it, and here's who gave it to And, it turns out that this is a really good time to make change because only Apple's implemented this. We have a pretty good software update practice. So it really shouldn't be a problem for us to switch to a new format. So, Next slide. So I'll just talk briefly the option format. This is not super important right now, but I think it's kind of interesting to think So basically, there's an option type."
  },
  {
    "startTime": "01:02:03",
    "text": "In a length. And then there's an answer section, which includes account of of TSR records that will appear in the answer section sort of like the answer section in a DNS message. There's an authority section which will include account of records that appear in the authority section. These do not need to to be the same as AN count and NS count because we're only including TSR records for things that need them. And furthermore, there may be multiple records on the same owner name in the in the answer section or in in the authority section, and we only need 1 TSR per owner name. So, so, basically, we're just gonna have, for each record, we have the, the index in the section section. So that would be what you know, let's say there's 5 records in in the answer section and we want to to refer to the 3rd record of the answer section the section index is gonna be 3. Well, 2. Counting from 0. And then we we include the, the tier, the time since received, which is the same as it is in the current TSR message. Then we include an ID type, which is either key for for zones that do not have that don't exist in the DNS. So and or it's the the it's the owner name of the zone if it does exist in the DNS. And that would be type 2. And we can have more than two types. These are just the 2 that occurred to me at the time when I was writing this. And as I said, if there are multiple hours of the same with the same owner name. We only give you a TSR for one of them. Next slide. So like I said, we're kinda doing research here. It feels like converging, though. We've had a lot of experience with TSR. We've noticed the issues with it. I think that stuff, the the proposals that I'm making now will will solve that. We probably get another research cycle, though, if it turns out that I'm mistaken. I don't think I'm taken, but I'm gonna try and get this code into a release You know, I can't say"
  },
  {
    "startTime": "01:04:01",
    "text": "when because I don't know, but I would like to test this out as soon as I can. And I think this is really gonna improve the behavior or SRP replication in combination with the advertising proxy, which is the main time that we're using this right now. Like, I don't know of any installations that are doing advertising proxy and SRP replication or that are doing advertising proxy anything other than SRP replication. So Next slide. I should say, actually, there are The the Open thread border router currently doesn't enable replication. So it's just doing It's just doing, like, regular SRP but not replication. And doing advertising proxy, which is a slightly different use case, but That's okay. So that's the end of this presentation. Any questions? Josh. That was his name. Yeah. That's right. Can you hear me? Yeah. I can hear you. Okay. Yeah, thank you for following up on that. So on the question I asked earlier. So TSR is basically Well, it's it's called time since receive. Mhmm. And I heard you talk about that you don't wanna do time stamp comparisons for conflicting records. Right. And when when and and what you're gonna mean by conflicting record is a stale record. No. I don't wanna do timestamp comparisons for actual conflicts where the source of authority is different. I only wanna do them when there's potentially stale data. And that case, comparing the timestamps tells us which data is stale and which data is fresh. Okay. And the timestamp, is that a is that like a the actual time or is that a a relative time"
  },
  {
    "startTime": "01:06:03",
    "text": "It has to be. It has to well, so we can't assume that the clocks on these devices are accurate. So it has to be a relative time. At least that the that was the design assumption. So we when we when we generate the packet, we figure out how long it's been on the devices generating the packet in real time. So we have to have a timer that increments even when it's asleep. In real time, how long it's been since we received the the message. And then we send that difference in the packet. And then when the packet is received, the receiver adds that time to its current time or it's actually subtracts that offset from its current time to figure out based on its own current time when that packet when when the original information was received. So that that avoids having to have accurate clocks, which tragically Often we don't. Yeah. Well, I mean, that's life. Right? Yeah. Well, I mean, I would like to be able to say everybody should run NTP in should work. But, unfortunately, I don't get to say that. Yeah. And so if you I I agree So this is something that when you said Apple implements it, This is implemented in the the DNS server, So that this is for MDNS. I should have clarified that up front. This is not particularly interesting for DNS. Okay. So so there's a there's a process on Apple device called MDNS responder. There's a similar process on Linux called Avahi, thank you, which doesn't, as far as I know, currently implement this, Start. Start. This is Stewart. I wanna give a better quick background because Maybe Josh doesn't know this. The products we're talking about here apple HomePods, Apple TV, Google Homehub Max, non leaf light strips, any device that has a thread radio, plus wifi or ethernet,"
  },
  {
    "startTime": "01:08:02",
    "text": "That can be a thread border router that gateways from thread onto the other network. So and typically these are not devices you buy. It's not like a WiFi access point that you buy because it's an access point. It's a device you buy for some other function, but because it's got thread plus wifi, it can incidentally be a border router as well. So for the Apple products, it's Apple TV and home pod we're talking about for other companies, it's it's Yep. Okay. Right. So it's it's IoT. Or smart home type of thing. Yeah. Currently, I think that's the that's the, I mean, far as I know, that's the only application for this stuff right now, although we'd like to see this, used more broadly than that. Not so much TSR, but but SRP I think is actually a better choice than m than multicast DNS if you have the infrastructure to support it because you don't use you don't need to use multicast we'd like to go in that direction, and that's something that we've talked about in this working group before. Okay. And so just one last part. So in that scenario, those devices are basically Like, they're self appointed Jedi. They basically decide they're gonna become border router and do the the translation between the networks And that leads to different sources of information. Right. Because they're not Well, no. No. The the sorry. You're you're missing a lot of backstory here. So the source of truth is the SRP requester. So it's the thing that's sending the SRP update in this particular scenario. It's not the border router. And And that's why we're able to do this. So so you might have the SRP requester talking to border router a at one point and then talking to border b at another point and and the way we've set this up, it still works because the source of authority is not the border router. So, for example, SRP replication actually includes the messages that were sent by the SRP"
  },
  {
    "startTime": "01:10:00",
    "text": "client because those are signed using the SRP clients key. And so they can be validated we don't even need to really trust each other. Can just look at the signed packet and see, oh, yeah, that really did come from the guy that has that's that's signed the you know, whose key record I see on this name that I have in my database. This is Stuart again. I'll give a quick concrete example. Some real details. The thing offering the service might be a matter light bulb. And it says I'm an entity. I have an IP address. I have a listening socket. I support the matter light bulb on off protocol. And then your controller is looking for entities that it can control And Right now, we started off with with with with with with a single service registry on a single border router. Even though you might have 5 or 6 in your house. If if you've got if you've got, an aero access point and a Nanoleaf light strip and a home but Only one of them is the Service registry, but Unlike your home gateway, which is like screwed to the wall and the garage isn't moving. Sometimes people unplug their home parts, and don't know. They're just powered off their service registry. So we we knew we wanted some redundancy is why we have SRP replication and it's the replication is now causing us problems. Got it. I wanted to, get the backstory. What should I read I would suggest reading the SRP draft, which hopefully will come in RSC soon and the SRP replication draft. And certainly couldn't hurt to read the advertising proxy draft and the TSR draft. So kinda have your work cut out for you. Okay. Thank you. Yeah. Oh, and also if you can get ahold of the thread spec, that's also that's also a good thing to read. Is that part of the matter spec? I the re thread spec, I think, gives you more information"
  },
  {
    "startTime": "01:12:01",
    "text": "Matter and thread are different things. Matter is an application. They approach call that uses IP and runs over anything that supports IP. Ethernetwifi thread. Thread is you can think of being similar to wifi. It is it is a a wireless technology that carries IP packets, but it is intentionally agnostic. Anything that runs over IP, you can run over thread. So threadgroup.org is the where you'll find information about that and the latest public specs. Yeah. Jonathan posted a link in the, in the chat great. Thanks, Jonathan. Yep. And there's an open source implementation called Openthread, which includes a border So if you wanna look at code, that's a that's a good place to go. Thanks, Alexander. Hi, Alex. In in as a twist or need, TSR, maybe as these are fully advertising proxy to advertise how fresh its data is. That's my understanding, Is that correct? How fresh its data is and where it got it? Yeah. Don't have an answer for the where it came from, but what about delaying the response. So you see the you see the request and you delay it depending on how unfresh that data is. As a result, if you're the teacher is older than somebody else, they're gonna respond faster than you. That's not a bad suggestion in theory. The problem is that, There's a little bit of a a block diagram issue here. Which is that, the the SRP stuff is in a different process, at least in our implementations in a different process than the, MDNS stuff. And I don't know I mean, one issue with that is how long do you delay? And, another thing to bear in mind is let's just propose for a moment that you're on a network. I know that's very unusual, but this happens sometimes. And when this happens, you need to bear in mind is that multicast go out in lockstep."
  },
  {
    "startTime": "01:14:01",
    "text": "So if you delay a multicast by say 50 milliseconds, it's actually gonna be sent at the exact same time as as multicast. It was delayed 0 seconds. Because of the way that that that beacons go. That that, Well, no. No. Just I wanna Stuart. I'm not correct. A lower bit rate than multiple. elaborate because you you're you're you're you're assuming some knowledge that people might have. Wife access point sends beacons every 10 times a second every 100 milliseconds. And, typically, that config to send multicast bashed with every third Beacon. So if you look with a packet trace, you'll see that wifi multicast come on this 300 millisecond cadence. Yep. So if you think you're gonna spread things out randomly, you know, within a 2 50 millisecond window, excess point, we'll just batch them all together again. Yeah. And then in fact, we've actually run an is because the MDNS protocol currently assumes that you have ethernet, which just delivers the multicast packet when you send it. And so there are some assumptions in the spec that that turn out to be incorrect. If you're doing, if you're doing wifi, And, we may actually wanna rev the spec I'm I'm not convinced, but but it's worth talking about whether we wanna rev the spec to address that. In an ideal world, yes. I think we have other work to finish first. Of course. Yeah. So Example, what Ted's talking about, when multicast DNS replies, the replies are randomized over a 100 mils window, and the idea was to avoid this big implosion of packets on ethernet all at the same time. On wifi, randomizing over 100 millisecond window does practically nothing because they end up punched anyway. Yep. Yep. Yep. Would have to multi we'd have to randomize over, like, a 2 second window to be useful but then you would notice how slow it was pressing the light switch and turning the light on. So that's not acceptable either. Yeah. The the I think what's the human, human perception of delay is like about a 100 milliseconds. For for for this, you press a switch,"
  },
  {
    "startTime": "01:16:00",
    "text": "And then how long does it take you to notice it didn't work and press it again? Right. About a 100 is when you get annoyed, about 250 is long enough that you you press it a second time. And if it's like a toggle on off switch pressing it again, it's not you want. So Right. We want it to be ideally on 100 and definitely on the 250. Right. Thanks. Looks like that's everybody. Yep. Next. There's only one presentation for the for the next one. So don't panic. Keeping us on our toes. Part of my job. Okay. So now we'll talk about, Actually, this was supposed to be SRP replication. Oops. Next slide. See, it says it on the bottom. I got it right there. So Harry's life events to prevent me from updating is was mentioned earlier. Be great if I could get some help from my coauthors No pressure. I know the problem is everybody's busy. So, like, I can't even really guilt trip anybody because I know that it's, they're in the same boat I am. Nevertheless, so you heard me talk about some some ideas that that, came up in San Francisco. The advertising proxy has been updated to include those So, of having documented some of the stuff that was talked about Next slide. So I wanted to talk about a couple of other things we found out about, the advertising proxy. So it turns out actually, like, like, absent at Google had had had run into the some of the same issues that I had But, I think he just assumed that I'd already seen them and figured them out, and I hadn't So, oops. Not this one, but the next one. So, this one I already talked about a little bit, we need to, the advertising proxy needs to do a probe whenever it registers anything in the MDNS consumes a lot of airtime,"
  },
  {
    "startTime": "01:18:05",
    "text": "And so we need to update the TSR document. You already heard me talk about that. I don't think we need to go into that Next slide. The other issue is, actually, I, I mentioned this to, to, Wow. I'm really bad with first names, Mister Cohen. Sorry. Josh, was it Josh? Yay. I got it right. So, I mentioned this to Josh earlier that that, SRP replication uses the actual host message with its signature to, to convey the state of a a registration for a host. And That means that the state of the the state of the host may actually require multiple messages to be replayed in order to replicate it. That means that there's gonna be stale data in some of the earlier messages, and the stale data can cause a conflict. Because it's you know, wrong. And so, previously, we would just give up. Now with TSR, this problem might not be as bad. But it's still kinda dumb to be trying to advertise scale data when you know that when when you know that it's stem, you have the information to know that it's stale. So, currently, the app implementation when it gets inflict in a situation like this it just gives up. So it waits until next time. Which could be 2 hours from now. Google implementation just ignores the, the failure and continues try and register later records, which ultimately results in the right data being advertised. So it's good. It's not ideal because we're getting all of these conflicts. That's consuming airtime consuming probably not consuming battery for most devices, but it could be. So it's just not great. And a better approach would be to just, like, look at the entirety of the information that's in the SRP replication update which might be multiple host messages. And and and and and cherry pick out all of the stuff"
  },
  {
    "startTime": "01:20:00",
    "text": "That is is not redundant. So the most recent update for any particular record, basically. Next slide. So, This is just like the I'm painting you a picture of what life is like when you're you're debugging a new replication protocol, I guess. So, the work that we have remaining for the document, I think there are there are some outstanding comments that the meet update, And then, I think we need to talk a bit about how to avoid unnecessarily unnecessary probe. So, basically, MDNS has this ability to say, when you wanna register a record and what to say know this record is unique. I know there's not gonna be a conflict. Just publish it. Publish it don, don, do anything else. And then we don't do a a multicast probe for that record. And so, It's just out there and If there's, if there's you know, with the new with the new TSR that I described, going out when we send answers we no longer have to probe at all, and that saves us a lot of airtime. So, think we need to talk about that. Another question is do we need to document the redundant updates thing that I just talked about. The reason that's a question mark is because, So when I originally implemented the advertising proxy, My assumption was and this is actually reflected in the original advertising proxy document, which, came out a couple years ago. That, if we get a conflict when we advertise on MDS, we're gonna tell the SRP client that it can't have that name. And as we've you know, you've you've heard both Stewart and I talking about how that actually turned out to be not a great strategy. I think we have some ways to deal with situations like that when rise, but mostly they don't arise. Mostly when we get a conflict, it's just self inflicted."
  },
  {
    "startTime": "01:22:00",
    "text": "So, So it's gonna, yeah, So so we've changed the advertising proxy document so that it basically encourages you to Just advertise the contents of the zone somehow based on some signal. And so what I'm thinking is right now, my implementation, the signal for my implementation is we just got a, an SRP update. So whatever's in that SRP update, we're gonna advertise. And that was where we went wrong because with replication, we would get 3 updates in a row and some of them would contain information that overrode what was in the previous updates. So, one thing we could do for SRP replication specifically is we could say, look, you're doing SRP replication, just synchronize with a peer. Don't try to publish anything. When you're done, then trigger the the advertising proxy to do the publication part. And so at that point, you have a consistent fully updated database or dataset. That doesn't have any conflicting data in it. It has the recent data in it. And so when you go to publish it, you're not gonna get any conflicts. You're not even gonna be running into stale data issues. So I think this is the the the right thing to do. And so I don't need to explain the sort of complicated thing that I explained to you in the previous slide. The document Next slide. So that's All I got. Questions, he comes in, Ah, there he is. Yeah. Hampton. Hi. Can you hear me okay? Yeah. Oh, cool. Yeah. Thanks. I just wanna mention one quick thing here. Particularly on the upcoming work. I know we discussed this in the past, basically adding a mechanism to be able to discover the partners when we establish the session"
  },
  {
    "startTime": "01:24:01",
    "text": "So to, like, the the main mechanism today is that we do data Sixty browse for the service name to be able to discard partners, but then we are discussing, it would be good to have this also verify that added other separate mechanism that we exchange this information on the on the established DSO and establish superior session. And and later on, as the partners are discovered or removed can have a way to signal to the others that say, hey, I saw this guy bent away. Do you still see him or, like, signal. So that's should be a straightforward basically for me to add new TLCs, but I see that as a and thing that we've made for our actual document. Yep. Yeah. Right. So that was that was part of what we discussed in San Francisco, and I think that there's probably gonna be a little bit more experimentation involved in that bit one of the things that we probably wanna do is try to think a little bit about how to make our experiments more effective and do them before we ship product. Anyway, but, yeah, that's that's, the reason I didn't mention that in this presentation is a I was kinda out of spoons. But the we already talked about that in San Francisco, I think. So if Yeah. Would help me actually opt in if you have time. If you could look back over the presentation from San Cisco and see if you see anything missing there. And, if you wanna edit the document and had some, new stuff to it. That would be awesome. Epton got really quiet. Do. I'm I'm okay. I I think we have, added it. It's just another of defining the TLVs. And define So that's Yeah. Well, so actually, I mean, a lot of the information is just SRP. It's actually just MDNS register or DNS SD registration. So we could just replicate Right? If I get the chance, I'll try to Okay. Is there some time for SRPL to move it? Cool. I mean, we can also we can also have a chat about it at some point. And, obviously, the you know, include the working group if they want to be included."
  },
  {
    "startTime": "01:26:02",
    "text": "Yep. So that's all I got. Alright. Thank you, Ted. Wanna wrap up? So that that's the end of our agenda. We do. So, so on advertising prop and on the the question of the the multiple query types. So we'll take that to the list. Let's get your input Tell us what you think. And also if you're interested in in working on that. Ted Ted Lemon again. Yeah, it's just one thing to add about that. Advertising proxy document was substantially updated So this is a really good time to give it a read. I think it's actually pretty approachable, but if you read it and you're don't understand this, then that would be a really helpful comment right now because we did make some pretty stantial changes to it. Yes. So lots of text has been deleted. So it does seem we need to make sure it make flows and make sense. Since we still have 2 or 3 months left and and that was asking for its feedback. So I've read the updated document. And, there was many things I could not understand. Many things that, I think we're aiming to clarify and with a very long DNS names with with letters and things and So that's, not become easier to read, but I think the content in principle where it's going, seems to be good. Yeah. So I think it can be edited for readability a lot, Okay. A lot more. don't know yet how, but I'll have a look. I Yeah. I mean, one thing you can do Yeah. That will be good. So we have to have some way to share that. And, yeah,"
  },
  {
    "startTime": "01:28:00",
    "text": "Yeah. Either on GitHub or on the list, whatever you you prefer. That'd be super helpful. Thanks, ESCO. Alright? You recall it? Yep. So, that's the end of the session then. And, hopefully we'll see you in Brisbane. Thanks everyone. Cheers and see you on the list and GitHub before then. Great success. Doing position. Yes. That's maybe"
  }
]
