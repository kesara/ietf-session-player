[
  {
    "startTime": "00:00:04",
    "text": "you can hear well at least i can ah okay so it seems that now it's working because for a couple of seconds it appears a error message saying that something is wrong but now it seems that it's working so thank you and hi everybody by the way hi carlos thanks for joining yeah i i had the same uh message here i actually i still have it but um seems to work nevertheless it's right here hi red welcome thank you that's good okay let's maybe wait for two more minutes um i think people are trying to create their data accounts okay uh so i got a code emd page but i don't see where i i had a pain to enter notes but now i don't it's i killed it somehow uh you okay sorry so um can you just um click on the link again and open it again well the the link that you pasted in takes me to the icnrg page and then when i click on the codium d link there i see notes chairs presentations xeno ah um so you were actually no no no okay you're at the right page"
  },
  {
    "startTime": "00:02:00",
    "text": "um so you're looking at the um say um right i see now the blackboard with the agenda and everything but when i try to edit it uh okay now i can edit all right okay i went i went through the authentication step now i can edit okay yeah i think everything is a bit rusted so um but i think we will manage okay should we make a start so are you connected um i can't hear you i think probably muted still can't hear [Music] so at least you had the microphone icon for some time but now it's gone so i think you're on mood again yeah but we don't hear that could be a local device configuration thing"
  },
  {
    "startTime": "00:04:07",
    "text": "is still continue what's going on so video was fine so nope okay so now it's now i see your mic on the participants but no audio um audio channel closed error okay"
  },
  {
    "startTime": "00:06:03",
    "text": "that sounds like a webrtc ice problem but strangely video works so i'm not really sure what's going on here nope yeah might be a permission problem or a device selection problem is that any better yeah that's better all right i had to leave the meeting and rejoin okay great that it finally worked okay let's start okay yeah welcome everybody thanks for making"
  },
  {
    "startTime": "00:08:02",
    "text": "it at the end of this week to another icn rg meeting unfortunately still online but i think everybody understands why um yeah so uh i'm dirk kosher and my coach is dave orren and just a second before we start i just have to point you to um some housekeeping items um so namely the irtf [Music] notewell statement so this basically pertains to to ipr so if you submit anything to our group that has ipr associated you're expecting to let us know if you have any question on this um just talk to dave and me um the irtf um also follows the idf privacy and and code of conduct rules so first of all please be aware that so these meetings are typically recorded and so we also have a privacy policy please check that and so there's also um policy regarding code of conduct and anti-harassment so in the ietf but these rules also apply to us here in the irtf and um yeah to those of you um um who are attending um ic energy or irtf meetings for the first time so the irtf is what is called a sister organization of the ietf so the ietf is setting standards for the global internet um the irtf so the research task force conducts research so what we are doing"
  },
  {
    "startTime": "00:10:02",
    "text": "here is not standards development so we may be producing specifications and so on but um and then also publish those rcs but this is just to enable experimentation and um yeah just write down specifications that people can use for conducting research and of course the hope is that eventually you know some insights generated that may yeah guide future sonization work in the itf check out this rsc 7418 for an irtf primer okay he just links to our infrastructure just for the record so for this meeting as usual all the material is online on the ietf data tracker just use this link here so including these slides and we typically um we are we always take uh notes and uh produce minutes of our meetings um because um well not everybody makes it and we have a mailing list where we try to do um like the other um most of the work in the group and uh today we are really grateful that um ken calvert volunteered for taking notes thanks ken and um so what this typically involves um is just trying to capture the gist of the discussion and um so for these online meetings some discussion um takes place in the audio channel and maybe some other discussion uh in the chat um what we often do is just copy the chat"
  },
  {
    "startTime": "00:12:01",
    "text": "to the notes later okay um yeah we are um really happy that we have a super interesting um agenda uh today so um we'll just give you a status update um after this and then we have um three um really cool um research presentations so one uh by carlos um on xeno um one by red and uh femi i hope that's correctly pronounced on um gt systems span network architecture and then one by uh she on his thoughts and his work on ndn ts and an api design for that platform okay so um just a quick update on what has happened in ic nrg recently so we are very happy to report that the group has published two new rc's so one of uh virtual applause thanks to everybody especially the authors [Music] but also everybody who helped in reviewing this and improving these documents over time and if you've been around you probably know that these documents have been developed over quite some time and have seen quite a few iterations so rc uh 9138 describes uh design considerations for name resolution services in icn um so yeah what what role name evolution could possibly play and what you would have to consider for that and rc 9139"
  },
  {
    "startTime": "00:14:01",
    "text": "describes an adaptation of ccnx to low power wireless personal area networks so this is equivalent to the ietf work um in like six slope and so ipv6 over these low power pens and well this is actually um has quite some potential for um you know enabling further usage of icn in construct networks um iot and and so on so it's not necessarily um restricted to personal area networks but so this technology could be used in all kinds of networks where um the other kind of resource constrained and where you need a really compact representation and so on so i think this is quite an interesting achievement and check out the protocol spec if you want to learn more okay and so in the data tracker you can also see our you know various documents and so these are the active research group drafts so that we adopted earlier and have been developing over time so just um quickly what we where we currently are and what we plan to do next so um the other name solution document is uh completed and uh is going to be published soon so that where there's one called m ns architecture considerations and we also have a um document on um yeah doing icn in ate so 4g networks um which is also about to be published"
  },
  {
    "startTime": "00:16:00",
    "text": "um fairly soon so um hopefully i mean we still haven't reviewed the one reviewer we're waiting for comments on happens to be the chair of the ietf so um he's been a bit slow in getting his reviews in yes we're hoping that will happen relatively soon but we're blocked on that at the moment exactly um so we have one other like specification type document on a technology called ccn info so something that um like a tool that allows you to collect information about elements on a path in a ccn network and we last called this document earlier in the year and got some minor comments that were addressed by the authors some weeks ago and so we think this document is now ready so there haven't been any technical changes and so we would [Music] dave has just notified colin that we want to submit this for our irsg review now um then we have um say other important in progress work that we adopted earlier so for example the flick specification um so flick is uh like manifest technology um for for icn that um yeah we we think it's quite relevant and we would like to get it published so early next year and but for that we we need more eyes on it so we need a thorough review by like more people in the group so please everybody who um"
  },
  {
    "startTime": "00:18:01",
    "text": "has an interest in this um please help in uh progressing this um we really want to publish it soon let me chime in real quickly this is a pretty important document because manifests are becoming more widely used throughout the uh the panoply of icn things and uh this has had it's been implemented it's had a lot of work done but the new draft that i submitted about a month ago it has major sections rewritten so it really needs a top-to-down review from everybody as opposed to a quick skim and the quicker we get that done the quicker we can get it to last call there's still a few open issues and those are noted in the document and we particularly want people to weigh in on uh the areas where we actually think they're holes that need to get filled technically thanks yeah thanks dave exactly um and so moreover we have these two other specifications on traceroute and ping and so they also have been um around for quite some time and we think um well actually technically they're mostly done so um i think next we would do an a last call on the main list and then um ask for four final comments yeah so expect to see a last call on those two documents on the mailing list in the near all future and um yeah then lastly um we have a couple of um other documents that still need a bit of work um and but probably also benefit from like feedback from the group so path steering if you remember um that is um i think quite elegant way um"
  },
  {
    "startTime": "00:20:00",
    "text": "to um make icn communication stick to some past with a like soft state approach which is beneficial in many scenarios reflexive forwarding was a technology um yeah to have like as some um basically some some say soft state in the network that um establish some symmetric uh forwarding um information that we used for the the rise system for example the remote with an invocation system um so we are still planning some updates um on that one um but eventually so hopefully this could also be finished next year maybe early next year um time tl we yeah was this is a new tlv structure um for recording time that we really wanted to reuse for the low pan specification but then lopen got finished say earlier and so but we still want to publish this as a standalone rc and so that's like quick summary of where we currently are and um of course um it's also very good time to think about what could be um you know um useful or interesting upcoming work and so in the area of iot so we now have this um say efficient encoding for low pen networks we earlier talked about say icn uh lora so low power long range radio systems um i think that there's quite some potential there so personally i'm also quite interested in that"
  },
  {
    "startTime": "00:22:00",
    "text": "and um well then i think what's really and yeah most people know this what's really interesting in icn is like new ways to support um applications better and so we will hear from june xiao for example in a bit about his thoughts so but i think it would be nice to maybe see some convergence or like some good practices best practices or something in in this direction um then yeah we have been talking a bit about um distributed computing um also it's an ic energy but also in the coin competing in the network group and yeah many of us think that icn is a really useful um enabler for yeah also rethinking how computing is done in the network and so the the rise work or the cfn work that we published earlier are just two examples but people may have many other ideas as well so that could be a general good topic for us and quality of service if you remember we earlier published an rsc 1964 that talked about say the potential so qs considerations in icn and i think was a really nice description of what could be say qualitatively much better in icn compared to ip when you want to do qs and so the question is okay what what follows from that so do we want to you know leverage these ideas uh maybe specify some mechanisms um so there has been some other discussion other work in ic energy before maybe now is a good time to kind"
  },
  {
    "startTime": "00:24:02",
    "text": "of um yeah maybe take the next step and see what we can do so these were just dave's and my thoughts of course this is not a complete list and by no means we are limited to these topics so if people have ideas just as usual bring them on and we will we will discuss them here okay and um so with that um we would start our presentation program and um so the first in our list is carlos was his presentation on xeno and colors i think the best way is if you just shared your desktop or your application window yourself hi dirk so i just enabled the microphone again and i lost you for a couple of seconds so yeah we can quickly yeah yeah so if you could repeat the question because i really missed it uh since it was mute for a couple of seconds okay no problem um so um yeah please start your presentation and um if you could just share it yourself that would be um i think that's the only way actually yep of course so let me share the screen do you want to show the screen yes okay and there it is uh except you want to change to there you go yeah i i can enable also my my camera so people can just see me okay now you have to switch the screen back to window yeah there you go okay uh okay so uh hi everybody uh so first"
  },
  {
    "startTime": "00:26:02",
    "text": "of all i would like to thank uh thank you for the invitation and to say that it is a pleasure to present zeno here in the icnrg so my name is carlos gamarais i'm a senior technologist in adlink and i've been contributing to the design and implementation of zeno especially focusing on microcontrollers and willpower devices and also will power networks so i think there are some uh shared aspects to what dirk just mentioned for new works here in the icmrc in any case i have shaped this presentation as an overview of what is zeno in order to provide the also a high-level view of its main design choices and its capabilities for those that are not aware of them but let me start with a bit of context on some of the motivations that led us to design channel and wesley let's first imagine that we have some data and let's see the journey that it takes since it's produced until it's consumed so the first thing that happens is that data gets produced by the most variety of entities they can be robots satellites sensors and so on and then this data is distributed and perhaps just inside the same physical nodes or within the same vocal variant network or eventually across different geographic locations and this distribution of data happens because either we want some computations to be applied over this data or just because we want it to be stored but then every time some computations are performed over the over the data it also generates more data and typically at this stage people tend to call it information"
  },
  {
    "startTime": "00:28:00",
    "text": "but well it's still dated to some extent and therefore this cycle repeats over and over again and finally we also have the case that we can store data because sooner or later we we plan to retrieve it again just for the fact that we don't store data just because yes so we can say that uh in this journey data goes over a series of alternations between the data being in move the data being addressed and the data being in use and traditionally there are different communication patterns that are used for each one of uh of these cases so for that we move traditionally we can see push patterns like website being the more predominant ones while for that at rest the pull patterns are the most common approach and what is the catch the cut the catch is that while data goes on this journey every time we need to move across uh that in motion and that interest or that ingress to that in in in motion we clash against technology barrier meaning that these two technologies ecosystems are really fragmented so on one side we have the techno technology to push data and on the other side we have the technology to store and to retrieve data and the problem becomes even worse uh if we look at the way the current systems are being designed just because we are moving away from these monovitic systems where everything runs either locally or in the clouds and we are witnessing a decentralization and distribution of the the different functions that compose these same systems and the problem is that this uh so the current technologies fail to provide data data management that is not only uh"
  },
  {
    "startTime": "00:30:01",
    "text": "unified that is vocation transparent and also that is simple to put and to put in place and to to use and this is the gap that zeno is trying to fill in okay so in a nutshell uh zeno tries to unify that emotion that the news that addressed computations by blending together perfect and distributed queries while providing built-in support for geo-distributed storage and computations to some extent we can say that zeno is a kind of data-centric uh uh solution okay that has uh that oriented solution and it achieves it by not only defining its own network protocol that can operate over different network technologies at different stack layers but also by providing a set of high-level apis that facilitates and uses the handling distributing and storing of data across the distributed and decentralized system so if we have here exposure book a zeno node is designed by following layering approach so on the bottom we have the zeno protocol that implements the a network layer capable of running above data link network and transport layers then uh in the middle uh the zeno zeno defines the set of data transportation primitives that provide support for publish subscribe and for query replies communications and note that here this layer is content agnostic and then on the top zeno defines a set of data-oriented abstractions which is our api that allows more complex semantics on top of the real content"
  },
  {
    "startTime": "00:32:00",
    "text": "in order to support for example distributed storages filtering transcoding of data and even remote computations and if you note at this layer zeno is already aware of the content and its properties and then when we deploy several xenons together we might come up with a zenon network overlay just like the one we have in this slide and here note that zeno can either run in the devices where the user application is being executed but it can also run as a network node and for that zeno defines three different types of entities or entities so we have the client which consists on the user application that is using the zeno api and that connects to a single xenorouter or xenopr in order to communicate with the rest of the system we have the peers which also consist on the user application that is using the xeno api but here they defer in the fact that they are capable of connecting to multiples and or routers to multiple peers and also to perform routing and forwarding of other zeno messages and then we have the routers which consists on some software nodes that can route messages between the clients and the peers and these three roles allow us to implement not only peer-to-peer communications over any type of connected graph topologies allow us to have brokered communications and this is special useful for constrained devices like microcontrollers because they they are not so powerful and they cannot run all the capabilities that"
  },
  {
    "startTime": "00:34:00",
    "text": "are required for example to do routing and we also have routers that are capable of forwarding data to and from other peers and clients so this is just a quick overview of zeno but now let me go a bit under the wood so we can see a bit more on on some of the choices we made so first how do we address the data so so the way zeno names data is inspired on icn protocols like mdn and it does that by defining a set of but byte arrays that are called name segments and these can be grouped together in what we call a key and by doing it we can explicitly declare the interest in some data or in some particular piece of information or to declare our interest on all data that matches a given regular expression for example we have the star operator that is used to replace a single name segment in the key just like the first example in the bottom or we have a double star operator which is used to replace zero or more name segments in the key so in this case the bottom the second example in the bottom so if we look here into these examples so one can say that when i have slash home temperature i'm getting all the temperature sensors or the valves from all the temperature sensors that exist in a in a home okay no matter what is the room this key expression will match it so i can"
  },
  {
    "startTime": "00:36:00",
    "text": "get the temperature for my kitchen but also the temperature of the waiting room and so on and so forth then in the second we are basically reporting or saying to the to the zeno system that we want everything that matches a situation and that is uh being published in my house okay so this will match anything on any room and any kind of source and at the same time then we can also so it's also possible to fine grain the selected data [Music] at the declaration time by defining some predicates project projections and the set of properties okay however i would like to highlight that the key expressions are used throughout so just the part that we i showed in the previous slide but these uh predicate and projecting projections and properties are only executed in the node that executes the query or publishes the content and these allow us to to filter some data for example uh if we take the second example here that where we have my car dynamics basically what uh we are saying is that return me the acceleration every time al so return only the acceleration value every time the speed is above 25 kilometers per hour per hour and then when we have these keys uh when we define these keys for name our data how and who can make use of them and for these zeno defines the set of entities that can handle keys and values in different ways so we can have resources which represents"
  },
  {
    "startTime": "00:38:00",
    "text": "a name data that is represented by a key and by its corresponding value we can have publishers which represent the spring of values that match a given key expression so in other words it represents the entity that produces data we have subscribers which represents a think of values that match a given key expression so in other words the entity that consumes data and we have variables and a queryable here represents a well of values for a given key expression so a variable is also a produced producer of data but the difference is that it needs to be explicitly requested by a query okay and then how can these entities make use of zeno so for that we have a set of operations that are listed here in this slide so just for me to go very quickly from uh on them so we have scout that basically acts as discovery mechanisms to see who is around which entities are around and this is very similar to the bonjour protocol we have primitives to establish and to close sessions with the init open and close and it is required to establish a zeno session prior to any data exchange the the thing here is that a zeno session is not end to end but is established between adjacent nodes so between every op we have a zeno session then we have primitives to declare and undeclare the different kinds of entities from these declarations only the declarations for subscribers and queries are actually mandatory for example [Music]"
  },
  {
    "startTime": "00:40:01",
    "text": "so other declarations for publishers and resources are optional and basically serve to optimize specific mechanisms within xeno so for example we can use a resource declaration in order to map a key or part of the key to an integer and by doing it we can save some bytes in the wire every time we need to send data and lastly we have primitives to write to pull and do query which basically defines the operations to push retrieve and request data respectively then one particular thing about the way zeno implements queries are its consolidation strategies and also i believe we will not have the time to dig in on on these details let's just consider that we have a distributed database and therefore several nodes can reply to a given query in this case because databases might not be aligned we so the queryer might get different replies uh from the different uh databases and to mitigate such cases uh zeno implements a set of consolidation strategies that allows to correlate combining and integrating data from different variables in a single reply so we have three different types of strategies none where all responses are forwarded back to the to the carrier we have the wages strategy where only replies that are more recent than the previous sent are forwarded and we have the full where only the most recent replies for each resource are sent back to the courier and these consolidation strategies are applied in three different stages while"
  },
  {
    "startTime": "00:42:00",
    "text": "delivering the query reply in the first router in the last router and in the reception in the reception node and if we look here at the default values uh that are applied in these different stages so lazy lazy full um these allow us to have eventual consistency by default when using xemo okay now going a bit lower in the network stack so zeno is transparent from the underlying network topology and it can it has been tested over a different diversity of protocols at different network stack layers so we have successfully tested it over udp tcp tls quick and then in microcontrollers over the threat protocol bluetooth and also on top of ethernet and we are planning to test and to make and provide the support for for more uh more pro to for xeno to run on top of more protocols and what happens is that what xeno does is to create an overlay on top of this physical network on which the xenotransport layer can be unicast multicast it can be single link but also with multi-link so if you if we look here at the example in this slide so we have a physical network that is composed by uh ipv4 ipv6 bluetooth ethernet and this xeno overlay is able to abstract all these heterogeneity of protocols and technologies at the physical network and to expose uh in in a very simple way"
  },
  {
    "startTime": "00:44:00",
    "text": "uh as an overlay that only needs to handle or only needs to care if the transport is unicast or if the transport is multicast okay so now that i showed or i provided a bit a bit small favor of zeno and how we designed and some of the options we took let's now try to see what happens to data in zeno but with a set of animations because i think things will become more clear so here we have an example of zeno network and let's assume that this is deployed in the wolf roof museum here in paris so the way uh resources are organized in this example is we have the first segment of uh our data or our our key expressions that identify the data uh is defining is identifying the rule then the second name segment is identifying the floor the third the room and then the type of sensor we also have two storages one that stores all the data from the first floor meaning so the one on the on the top right and then another one which is the one on the left that stores all the data for the second floor and then we also have an evol function or an above entity which basically is able to perform remote computations and for example sorry i guess okay i hope you can see it again because yeah some mac os uh notification just popped out um okay perfect uh sorry for that so ah"
  },
  {
    "startTime": "00:46:00",
    "text": "yes so we have also uh an eval function and these evolve functions could be used for example to run additional analytics on top of the data and the results of these computations can be retrieved by means of queries okay yeah so whenever the data is produced and uh what happens is that zeno will make sure that this data gets where it needs to be delivered depending on the subscribers and the storages that are known at the moment so here we have a sensor that is publishing on that key expression so slash move 1 42 sensor temperature and all the subscribers that declare their interests on such content are going to receive it okay so the one on the bottom explicitly have explicitly requested for this data while the one uh a bit to the right asked for all uh values that are um all temperature values that are uh published no matter the floor and the room and on the top we have the the storage that is getting all the information for the first floor so here the ones represent the the distribution path and then suppose that we have a second sensor so the one on the second floor that is also publishing data okay so in this case uh the data will flow to the other storage uh and not to the first one just because they are uh they require their interest on these data with different key expressions and then also notice that on the bottom we have a subscriber that he is a pull subscriber so it might be that when the data was was pushed to the"
  },
  {
    "startTime": "00:48:01",
    "text": "network he was it was sweeping okay this is very common if we talk about microcontrollers and low power devices so what happens is that the zener router does not try to push the data to the nodes but instead it keeps it in cache and then when the when the subscriber wakes up it will ask for the data and the infrastructure will deliver the data and then a garbage collector eventually will remove the data from the cache and now let's assume that we want to know or we have a query that wants to know across all fours what is the temperature in room 42 and this becomes pretty simple to do in zeno as the query the query only needs to issue a query which will hit the will have a hit from the multiple storages and here note that the query doesn't need to know the location of this data it just asks for this information and the network is responsible for forwarding it to all the nodes that are able to provide this information and this is the kind of location transparency uh we can get from zeno as they as the network is able to forward the query to all its destinations and then uh when the when the databases or the queryables uh reply with some with some data uh the data is consolidated on its way back and it's retrieved to the querier in a single response so where do we see zeno or where we see the main applications domains for zeno so basically any application or use cases that requires the distribution of data either"
  },
  {
    "startTime": "00:50:02",
    "text": "via publish subscribe mechanisms query based mechanisms and this includes smart farming robotics smart cities transportations energy aerospace and so on so forth we have some use cases already done in some of these application domains i have a couple of examples to show uh just before just after um so yeah let's move to them because they are very interesting so here uh i hope that so here zeno was integrated in some cars in these in the autonomous challenge in order to provide some vehicular to infrastructure communications okay then here we have an example of uh online video game that is being uh developed by one of our users uh that basically leverages on zeno to implement uh the network in china and here we have a short demo where we have zeno running on a microcontroller in the network and in a bridge between zeno and dds and zeno is being used to send to send the values from to send the values that are uh published by a gyroscope and then they are translated and sent as comments to the robot so now some final thoughts before finishing this presentation so some highlights uh that we think are worth mentioning about zeno so as far as we know is the most wire power and memory efficient protocol"
  },
  {
    "startTime": "00:52:00",
    "text": "uh in the market we can support the whole cloud two things continue meaning devices that can range from cloud servers down to microcontrollers xeno supports both push and pull communication patterns along with distributed queries and remote procedure calls the resource keys can be represented as integers by the means of the resource declarations and these allow us to have very good wire efficiency we can support peer-to-peer and rooted communications support for zero copy also we can support order reliability revivable data delivery we support fragmentation of messages and also batching of messaging but batching of messages sorry and in our tests we have uh or in our analysis we have a minimal wire operate uh that can go down to four to six bytes so finally just to say that zeno is completely open source it's under the eclipse foundation it is written in rest along with all our apis for different languages we have a parallel implementation targeting microcontrollers that is written in c we also have in our github repository some demos so yep you you can find this in well our homepage in github or in guitar where we can have uh other discussions or if you have just uh thoughts on how to use demo and this is it thank you very much for your attention and if you have questions"
  },
  {
    "startTime": "00:54:01",
    "text": "or comments i would be happy to discuss them thank you carlos so um if you have questions there's a raised hand uh icon and you can put yourself into the queue i noticed that jose is already in the queue uh to ask the question i'm going to put myself in the queue as well ken's in the queue so um jose let me [Music] how do i enable her oh i don't want the camera i'm already there oh okay you're already unmuted great go ahead okay um i think it's a i think this addresses a lot of pain points of people like me who are trying to do um distributed applications in iot however uh one question i have for you is that a lot of these elements the sensors and everything do not even have an ip address and a lot of them are exposed through things like you know um industrial buses like bacnet or anything like that and so in between xeno and those low-level sensors what are you doing so that the data that comes through bacnet is exposed to your interface okay so i i'm not aware of that bacnet but so zeno can run on top of uh data link protocols so which means that we don't really need ip we can run on top of for example ethernet but you haven't tried it with industrial buses like bacnet or things like that because we live in a i think i i think in the applications that i work with we live in what i call a tower of babel of different buses different formats you know some of them are text some of them are csv uh the data some of them are not even csv some of them are just like people"
  },
  {
    "startTime": "00:56:01",
    "text": "entering yes no on on a text file and the bacnet is another big thing because it's actually a very very widely used industrial bus and so i i think what you presented is is extremely interesting once you have i think organized uh the lower layers uh which you know frankly is the biggest job um so i think it would be interesting if you want to continue this to have um the lower layer hooks that you need to get into xeno because what i can because if i had the lower layer links to get into xeno i could see how i could use it very well and it would save me some time and dirk is aware that we've done work on how to establish a better way of uh you know doing uh federated applications and even adding correct effort rated learning on distributed applications so i think xeno is very good for that but for me the biggest problem is how because you say okay we're going to have this the information from the sensor but the information the sensor comes through means that are really really closed that are from systems that you don't really have access to unless they write their data into a text file that you then transform into a csv and then that it's very bad and you're going to park it and you do you know like there's a lot of data processing or data formatting and semantics below what you're doing so have you guys addressed any of that okay so i i don't know if it will answer your question but so far the work we have been done around sensors is that we have a microcontroller we can be something like a 16 bytes arduino or an esp32 which already has"
  },
  {
    "startTime": "00:58:03",
    "text": "some network capabilities okay so those are are your systems you haven't worked with industrial systems that are already installed no okay so that's my that's exactly the crux of my point is that if i had access to my own controllers i would be really happy but right now i think a lot of the pain points and the use cases that you're you are presenting is that we're dealing with existing industrial systems that expose only their data through really weird means to be that's that's my nice my nice way of describing it weird so i would say maybe for your next generation it would be great and and you know you can contact me and i and i could give you some examples on this because i think what you're doing is very important for what i'm doing except except that i don't know how to communicate with it so i'm taking all the time here and i'm going to stop but we can communicate offline yeah but for sure we will contact you because i mean we see these i mean the possibility to integrate without these industrial systems i mean one of the main use cases because we we need to go into the real places yeah sure okay thank you i wanted to ask about the security architecture um so i want to you know this a lot of people see is one of the main things about uh ndn and ccn so i didn't hear anything about that so i wondered what's the sort of trust structure this is based on okay so if if you need to make to ensure the integrity integrity"
  },
  {
    "startTime": "01:00:00",
    "text": "of your content you should do it on your application okay here we are not aiming as nbn uh was i mean i stopped following ndn and ccn for a couple of years um before joining adwink but we are not aiming as ndn and ccn were in providing already the integrity of the content or to make it part of their design so if you require those kind of features you should make them at the user space and then you already send the information or the signature in some other means that you are able to transmit this from your producers to your to your consumers all right next the line is for you uh okay um one one question on your slide where you said you have tried this on top you implemented this on top of a lot of traditional internet protocols did you implement it on top of any icon protocol like ndn or ccn [Music] well not really because i mean we are targeting the same type of functionalities as ndn ccn and others are trying to do so and since we we we intend to have a very low wire over it by the points and on top of an ndn we would already have uh a big overhead just with all the the layers that would that would be under uh bible zeno let's say like"
  },
  {
    "startTime": "01:02:01",
    "text": "like that but yeah okay they see but but in principle i guess you don't see any problems with doing it if someone would like to do it no it would be possible uh i would say i i'm thinking what would be the benefit of doing it no it's just but in any case it would be possible to do so we kind of try to abstract of what protocols are the volcano okay um so just one question um so this looks really interesting um but i was a bit puzzled because you didn't mention uh security at all so is there a security framework and authentication framework so we have in our roadmap to have some user access control uh we have some kind of uh so when we are establishing a session we have some kind of um negotiation and link authentication um but let's say so it's still things that are in the roadmap we are not tackling them uh i mean uh in the in full mode but they will be there okay uh so it thinks that we we we are keeping our minds in great um thanks a lot of colors so thank you very much i think we we should move on to give our other speakers um enough time but carlos is also on the icy energy mailing list and if you check out"
  },
  {
    "startTime": "01:04:01",
    "text": "his presentation material you also see an appendix where he has provided additional content also code examples and so on so please check that out that's really interesting um again thanks a lot for for bringing um your work twice and yeah it seems really interesting and i think that we could discuss this for for a longer time but uh maybe this is not the end so i'm looking forward to probably not discussing with you thank you very much thank you for all the questions as well thanks carlos okay um so next up um red samson and jamie locker and they are winning the prize for the most inconvenient time so they are joining from australia i really um thank you a lot guys for for making this and so they will talk about a system that they developed in their company gt systems okay um i should say is in new york so he's pretty cool i'm the i'm the guy at four o'clock in the morning so i think i should do share slides rather than share screen yeah is that right yeah you can you can share application window if you think that's what you probably want to do ah that's even better okay you you know the system better than we do yeah except that it says i don't have a deck to share um well let me see what we can do here um that's okay i can i can do the window let's miss that one we'll do this we'll do the whole thing he didn't seem to know about my window it's probably easier so let me let me change to that um should i turn on video i guess maybe yeah if if you like i think would be nice"
  },
  {
    "startTime": "01:06:13",
    "text": "it also took some time for carlos presentation yep okay so that should have worked okay we can see it all right now let's see what happens when i turn video on then i might get i think we'll get that multiple echo thing though won't we let's see okay seems to be happy okay great so just so you know oh where are we at that window there is bondi beach but it's dark so um can i change oh except i can't change a doesn't seem to let me change the things maybe i'll go back to the other one and uh it might work better carlos did you share screens or slides i think he's just shut his window off i was yeah it was sharing my my i mean the full screen oh really but it seems i can't get myself i can't see him well i suppose it doesn't matter if i can't see myself really does it i'll just let's go back to that one all right sorry guys beginner yeah no problem okay [Music] there we go yes i'm sure window i can't we just share a window anyway okay let's do that and then i'll just um and so you should have my first slide up"
  },
  {
    "startTime": "01:08:00",
    "text": "now okay so i can't see myself but i'm sure that'll be fine okay so let me just start my so um i think um if you want um you have to click on presentation view then you i think see everything again so in the top right line of buttons uh okay does it work all right oh it's a pdf right so maybe you can just go view full screen yep i can do that see what happens then that's perfect i still can't change the page so that's right i'll just i'll go to the presentation and and assume that i look half decent for you guys i think okay all right so we we we done carlos some of the things you said were very similar to the things that we say i think with one fundamental difference which is that you're working at a transport layer over different network layers and and we came to this from a slightly different perspective so let me just leap into that and it'll become this became our mission it wasn't our mission beginning so this is a timeline which you can you know to put it into perspective but i think the most useful slide is this one because what we really set out to do back in the early days was to really to to fix adaptive bitrate buffering and the spinning wheel of death which we thought was a pretty ordinary thing and um and in doing that we we took a fairly fundamental view of things and and came up with a with what turned out to be a fundamentally different concept very simple"
  },
  {
    "startTime": "01:10:00",
    "text": "but but very different from the way you know the internet ran at the time um which was a lot more crazy back then than it is now trust me so we we sort of borrowed from some work that we did with csiro and peer assist where they had um had done something very similar to a bittorrent patent application where they combined peer-to-peer with um super with um super servers for another better word and they got some very encouraging results and particularly the very important thing to bear in mind is that we've always been application driven in this we were driven by video because we're in the manufacturing demand of cd cities before this we then had a customer who wanted to do video wanted to do movies online and so we were driven by basically building a beta streaming system and this was this was before netflix existed by the way or sorry netflix was still mailing dvds when we started this um and and so we did what everyone did we stood on the shoulders of giants and bittorrent and github etc etc and and sort of thought about and said well okay you know what if we do this properly and start again and we came up with a very simple concept which we called um well secure peer assist and it was just this simple thing of ingesting and it was based around you know as i said peer-to-peer and ott distribution systems it's this simple idea of there's an ingest process you know you have to process the content you slice it up you tag it with as we said at the time either a hash or some other efficient database mechanism leaving the door open for things that we would learn about like name domain networking content centric networking sometime later um and then but then one of the fundamental ideas we had was to route on those tagged slices or packets and and then to do that intelligently with optimization and you know as i said to someone the other day the at the eye inai for networks isn't"
  },
  {
    "startTime": "01:12:02",
    "text": "that eye you don't have to be that smart to make massive improvements on this um and then we came up the you know the the same idea as originally sauron bittorrent etc which was peer-to-peer with super pops but but we left the door open for and then for everything to be appear and for it to be a mesh network and a distributing factor distributed storage network in a distributed computing network so that's kind of was the starting point back in we started the r d we did the work with sarah in early 2000s and then we did mod for a while and then we did uh the um and then we that we did the work with the customer and came up with this bit um we we then discovered a thing called like ipfs and protocol labs you know interplanetary file system what a great name and and of course that was an implementation of our idea which was the file system i'd been running around looking for and saying you know we need we need this but um it it really was um it was a great idea when we found it but as time went on it became clear to us that um there were some problems associated with that which was that you know it didn't scale for distribution it was great for storage but didn't scale for distribution and in particular we became aware of that when they published some rfps early last year i think to for some r d work to basically to help them scale that's when we formed the team we were working with nokia by then at this stage and and nick locker and man nokia introduced us to hamey who's here i don't know whether you want to say hi homie if you've got your mark unmuted yeah hello it wasn't belonged for a long time and joined them uh when they were working on this problem yeah yeah and so we formed this project team with a bunch of other really smart guys and and sort of merged all the work together to respond to protocol labs um"
  },
  {
    "startTime": "01:14:01",
    "text": "sort of call for help but but you know given that we both really like their distributed storage system and you know and really a lot of it was merging the work that haymi had done in modeling and optimization at the labs with the work that we've done you know around content distribution and peer-to-peer and and and sort of our version of that and and in the end we kind of came up with a solution we first of all we had to learn how it all worked and then we discovered the limitations and you know there were some very strong points to you know as haymi says to the to the storage side of product of ipfs but um but but it had some limitations in distribution which we'd addressed from the beginning um in in distributing video and then there was a a paper and i i was trying to remember whilst i was listening at who wrote the paper but i think it was someone in either ccna or icn or indian had written a paper that said it might be really interesting to smash together ipfs with name domain networking or content-centric networking i think they said content-centric networking and we're like what's this concentric networking thing i'm ashamed to say you know and we we then you know we dived into that whole thing and we went wow this is nirvana you know this is this is a fully important particularly indian where which is where we ended up you know this is a fully implement a full implementation of kind of our idea but but then you know what if we put those things together and then i think we're on a call hey me one day and you said something and i said something and we said well what if we put smash together that that um deterministic hash merkle tree system of ipfs with uh the less deterministic system of name domain networking you know what would that need and we kind of worked out that what you had to do is is to have a unified namespace and that we think that's one of the most interesting areas um that we could potentially all work together on you know is is really"
  },
  {
    "startTime": "01:16:01",
    "text": "defining and standardizing that namespace that unified namespace because that then kind of draws everything together and as i've said in the white paper which is up on the website i'll give you the url for it later um that we that we could actually unify kind of everything um and and so we ended up with a thing we we call this hybrid adaptive routing system which does both name resolution and name based routing and and and when i say routing it's it's an ndn concept of routing so we're essentially allowed to protocol but with you know the bits the indian bits to stop you know to do stop feedback and load balancing etc or loops i should say um but combining um all of the you know the best bits of of a layer 2 protocol and so the fundamental thing which i should probably go down to with you guys i'm going to have to go too far never mind but but you've all seen the narrow ways to picture and and so basically we were saying okay we're going to we're going to switch slash route at the network level with these tagged packets or frames or whatever you want to call them and that was the fundamental difference is that we kind of said you know we didn't even consciously say ip has reached its limits but that was kind of the outcome of what we were doing um and so you add all this other then you get all the other these other benefits of you know location based and multicast and it's fully distributed and then we combine hamey's work around electricity and elasticity and virtualization um and and then we came up and i remember when jamie i don't know if you remember when we when we first spoke um the very first time ever you asked me one question you said do you have a global optimizing system as well as a local optimizing system and i said yes and you said good that's the only thing that works"
  },
  {
    "startTime": "01:18:01",
    "text": "um and and i guess when we when we make our claims here saying you know this stuff works and it's very efficient it's haymi's the guy who's kind of proved that for us he's he's been modeling this stuff for a very long time and um we might get him to talk about that in a second so um in fact we might do that very soon but but in essence you know and this only kind of dawned on us over time is that what was happening is that that the network is becoming the cloud you know when you take this fundamentally different approach and sort of smash the two things together then then the network becomes the cloud and and therefore the computer so we're talking really about distributed cloud um and and distributed computing so this is what we do i won't go into too much detail about that except it turns out having modeled used jamie's very sophisticated models that doing it this way is incredibly cheaper and incredibly more efficient and and when i say incredibly i mean you know up to 50 but we'll get to those numbers in a second um and and it you push things out to the edge and of course you improve latency significantly as well and you save your back all costs etc etc so it's very secure i mean we were working with hollywood we won't even we don't even say bittorrent in the presence of hollywood we call it the other protocol um and so we we were secure from day one and uh and it just got more secure with the things that have come along since um so so fundamentally that high value content is encrypted at ingest and that's that's what makes it secure using hollywood approved algorithms drm etc but also that you know the name domain networking and content-based networking adds another level of security particularly around signing at packets um and we we always had this idea and concept of sovereign identity and then we during the ipfs period in that time scale we met a guy called jonathan holt"
  },
  {
    "startTime": "01:20:00",
    "text": "um he's one of our advisors as well and john's very involved in ipfs at the development level but also as an investor in file coin and a very smart security guy and and he he has come up with a sovereign identity system based in the wc3 distributed identity um architecture for one of a better word that that really addresses security and and log in from the edge rather than centralized um so this is how we work we we model design build handover operate we we work as we sort of describe ourselves as a 21st century bulk baronec in newman bbn i know that sounds it sounds a little bit ambitious but that's that's a simple description of kind of who we are and we're very very keen to to to find ways of working with with everybody and and and you know although we've applied for patents it's that's about um trying to redress that balance between you know people who built the internet for free and and the people who make a lot of money out of the internet today and trying to find a a space somewhere in the middle where you know people get rewarded for their work but uh but the internet gets sort of built and taken care of so we're very very keen to explore those models more um so i think i'm probably gonna hand over to amy at this stage and let him just run through the stages of which is this is our very simplified view of how you would implement this but it also we also talk about the the very different bits jamie do you want to run through these [Music] so yeah i mean just to um one of the first concepts that we we we try to exploit is the idea of the uh is not just the content lives in the network but the applications"
  },
  {
    "startTime": "01:22:00",
    "text": "live in the network right so now we have all these available resources that we want to utilize everything is getting distributed and we have compute storage in the network and uh and we need to understand first if you know what's the optimal use of available resources at core edge and peer levels so the first work we did is just modeling different applications running over this network and seeing really if it makes sense uh where those functions end up being running what is the optimal place where they run what is the optimal place where data gets stored so when we start modeling these these networks we see that you know if we end up allowing uh you know unlimited if we unconstrain the use of storage and computers at different layers uh where do these applications and data end up moving and how much uh cost reduction reduction we can get so the first stage was just looking at that and saying that you know as we move towards more low latency obligations and even for just content distribution of course we get a lot of uh bandwidth cost reductions and you start moving uh both data and functions to the edge so and just for uh on demand previous streaming and live video streaming we end up getting numbers on on around 40 for network cost reduction that we we think is even it can go even greater when we really go for industrial automation and augmented experience services where we you really have that low latency requirement so that's the first stage even without going into changes in the networking protocols what can you get by just putting uh functionality and data at the right place right from a placement perspective you can go to the to the next stage then the other idea of course is to exploit programmability and virtualization so as you you use um virtual machines and um you can program the network in between"
  },
  {
    "startTime": "01:24:01",
    "text": "you you get additional cost reductions essentially from over provisioning so you reduce over provisioning because you're using uh you you have a network that is more elastic now data and functions live in the network but they consume virtual resources so you can scale up and down the use of resources whenever you need them so you get an extra 20 uh in the simulations that we run uh when you add that elasticity uh to the optimization and then finally we have a stage where we say okay um you know if applications and data really live in the network the first thing you want to do is you have to optimize the use of resources the second thing is to make sure that that use is elastic and is dynamic the next thing is change and use more efficient networking protocols so the idea of the final stage is using um these integration of name resolution routing and name-based routing so using name resolution routing for distributed storage for persistent available uh distributed storage and using name the name based routing for fast access and delivery and we think that integrating uh both system is really the best way to to use the benefits of of both worlds right i mean they do have limitations on their own with name resolution routing you know it's an overlay solution you have it's a slow system for resolution but it's really great for persistence distributed storage and name-based routing is great for efficient uh delivery but it has also some limitations and the amount of forwarding state that you can keep so putting them together uh we think it's uh it's a great solution so i think that functionality and then and then the last aspect is uh adding an element of ai uh no still on that same slide"
  },
  {
    "startTime": "01:26:02",
    "text": "which is just in this case it's a modeling exercise but we think that when things get so complicated when data really leaves in the network and you have so many options to access data and to run functions and computations an element of ai that combines global optimization with local ai agents can help just optimizing both the resource allocation and the routing and caching decisions uh in a better way and then yeah maybe red maybe then you join it all up yeah so so then if you once you get to that level then then you say okay well if we do that you know how does that have to work and we very quickly got to the point um another colleague of ours matt moran who's uh very very experienced at ott and networking stuff and he said you know no one's going to trust us because if you have a an optimizing ai then you know someone has to run it and and of course that that's not that's not going to work we quickly realized but then when we said well you know i kind of said well why don't why don't we just let everyone run their own and make them all talk to each other and you know typically of me it turns out that not too many people are doing that so we think that again this is a an area which we think is is very fertile for cooperation where you have this concept of distributed local agents which which are optimized and true and perhaps even trained in locally which is a kind of different idea um for a local optimization and autonomous behaviour and maybe hopefully some emergent behavior um and then and then you you feed up information about the the network up to an optimizing intelligence but there isn't just one you know there's multiples of these and then you have to join them up at a couple of levels which we'll have some slides on in a minute um in order to to really to to have an ai api i guess for one of a better word um where your your your you know sending stateful"
  },
  {
    "startTime": "01:28:00",
    "text": "information in between sub networks and and it joins up into a into a universal content distribution network which is this concept that we have the good news is we found someone who kind of likes this idea and actually wants to build it which has sort of stunned us a little bit but uh you know as i keep saying to the guys it's really just about finding someone who wants what you've got and so there's a bunch of guys putting some satellites up in medium earth orbit as a backbone and they want to do this first of all they're greenfields which is fantastic and secondly they want to do it properly literally their words and and thirdly they've come to an understanding which seems to be growing at various places around the world and i'm sure there's plenty of people listening who may have come to the same conclusion that you know ip and may have sort of come can't be getting towards the end of its useful life and maybe it might be time to thinking about re-architecting stuff so these guys were open to that possibility and when we came along you know as they said you know we're the big fat pipes and you're the guys who fill the pipes and we kind of realized we needed to do that but we didn't quite know how and so it's it's turning out to be sort of a bit of a marriage made in heaven and it could get quite interesting in the next very short space of time so um that's a system block diagram of merging the two things together which talks a bit more about that we won't go into too much detail about the rollout it's global we're doing africa first we'll hopefully do australia very soon we're working with these guys so this is a really interesting thing you know these are the people who are building existing networks or maybe building future networks in the case of nvidia um and so we i think that's the system block diagram out of the patents which is similar but different um to some of the earlier ones which are more involved this is the one i wanted to get to you know you say okay well how are we going to do this and it it ends up being reasonably simple it says you know that you just basically put well this wasn't so simple 10 years"
  },
  {
    "startTime": "01:30:02",
    "text": "years ago but now you've got open routers you've got guys like arista and believe it or not nokia i have a now an open si linux based uh service router uh offering which is is what we're going to do this on initially and then with some of the nvidia ai stuff at the edge and you can in fact put a custom protocol as a stack alongside a classic tcp stack and and connect them both to the switching and routing bus and then and then you know if it's a if it's a span enabled packet then the span stack deals with it and if it's a tcp packet then the tcp stack deals with it and obviously there's some things you have to do about tunneling etc etc but that's all beautifully dealt with it in in ndn already um so then you say no presentation would be complete without a slide on the metaverse but once you have that fundamentally different architecture where the network is the cloud and the distributed computer then you say okay well how do we make this this work in terms of you know joining up all these so we video kind of tick we've done that um and got some amazing results for that and then you know now we we need to look at the virtual worlds and graphics and computer design etc and you know the guys who deal with it the most of course are in nvidia or one of and they've come up with the same concept and said well we need a set of standards which pixar have developed for universal scene description uh and then we need a set of tools and and some brokers for one of a better word which they've come up with on universe and nucleus you know but but at the moment they're focusing that on corporates and you know guys like bmw you know so that they can have the cad systems that design the cars talk to the cad systems that design the factories but we've talked to them and said have you thought about pushing that out of the network and they said well no but that seems like a pretty good idea so we're having those discussions and of course you know the essence of the metaverse is is perfectly suited to this um"
  },
  {
    "startTime": "01:32:01",
    "text": "to kind of our view of the world there's a fundamental thing in all of this which which carlos got to you know which is that the network now is the cloud on the computer and it therefore needs a set of instructions the two most fundamental of which i publish and subscribe um and so then a publisher would simply publish their content to the network uh and the network takes care of the rest and then you as a consumer would say i want to subscribe and and the network takes care of the rest as well um this thing needs to be standardized obviously you know that's a huge thing um and these as we say are the areas that there's a nice set of rules from tony parisi which you know there's one metaverse it's open it's in brackets are our editions it's enabled by a network that network is the internet um and this is how these things roll out um some things some thoughts for the future you know is as i talked about we perhaps need some new funding and operational models that sort of combine the best of everything clearly quantum computer is a huge thing transport but i don't know much about this but it seems that lasers might be kind of good for that um they're certainly good for quantum key distribution which the network we're working with does um and then of course distributed artificial intelligence where you're doing um local training perhaps and machine learning the concepts of plato urn um tatrino like you would train at tamagotchi you you'll train uh an ai agent and then of course the the golden fleece of general artificial intelligence so these are so these are the guys um who we're kind of working with and uh this is this is our claim and this is this is my favorite saying at the moment one one day you go to sleep and you're the czar of the whole of russia and you wake up in the morning and you're not so thank you very much for the opportunity to talk and sorry i think we're going to fraction over time but i'll kind of open it up to questions no worries thanks a lot uh right"
  },
  {
    "startTime": "01:34:02",
    "text": "so this is um really quite intriguing um so you i think raised many interesting aspects there's also some thoughts that have been discussed in this community and also the computing in the network community a lot um yeah so we don't have that much time so i think what i would like to do is um just ask people who have questions to reach out to you if that's okay yep um because i think there would be many like quite detailed technical questions um next uh but i think it probably takes a long time to answer those it does it takes a long time to get your head around this we've had 10 years and you've had 20 minutes i say the white paper is up on the website so uh gtsystems.io and then if you add just slash white paper you'll get the white paper um and then there'll be an open link to it in the next day or so yeah that's great um so so again i think um many of us have thought about like like the connection of um ipfs and and ndn for example and uh and so on so i think you would um get some some interesting questions and so hopefully we can have you again in the future and then uh talk about these things uh at more in more technical depths and look we'd love to become involved in the dialogue i don't know what's required to do that but but more than happy to to to get involved in you know discussion channels and answer questions etc great um yeah thanks a lot super interesting and especially thanks for making the time um that's okay you owe me a beer yeah i hope i know you you get it next time we've been all traveling again yeah it's in australia so i understand the the time differences between uh the east coast europe and australia so it's it's quite challenging"
  },
  {
    "startTime": "01:36:00",
    "text": "it's great if we're organizing meetings because we're kind of in the middle and then we make everybody at the edge suffer a little bit rather than us suffering a lot so well i actually i think we found that the best thing was actually maybe doing it from the west coast of the us which is bad for everyone okay thank you so much thank you thank you very much we really appreciate the opportunity thanks next is uh with this presentation about um ndnts api design and some ways to use her to stop sharing yes and we have to approve the yep here we go uh hi my name is i am a classic researcher at the nist but on the nts this is my personal project so this will reflect personal opinions today i'm talking about under nts api design and the nts is a set of alien libraries for the modern web it is modern javascript libraries it can be used in both typescript and javascript projects it works in node.js and the browsers has more than 90 percent of test coverage with automated and manual browser testing on desktop android ios it works standalone without a forward or it can connect to forwarders such as nfd and dnd pdk the project is so far actively maintained new features are added regularly and it supports the latest indian specification this talk is about my personal thoughts on the low level api design by low level i mean things like a packet decoding fragmentation phase and retransmission logic there are others other api are not low"
  },
  {
    "startTime": "01:38:00",
    "text": "levels such as data central can toolkit and a common name library i will not focus on those i will also talk about the unique challenge in building indian library for the web because due to the specialty of the web is code size is a primary concern and the browser is like operating system but it differs from a traditional operating system so let's first get into the low-level api many people would say low level api is boring and this is probably true because the indian team official position is we encourage application developers to use high-level api such as data center toolkit and the common name library because those high-level api can abstract and the uncomplexity away from the application developers however my my belief is interacting with low-level api is unavoidable because if you try to build a high level api as a library developer would have to deal with low level api and also high level api are unlikely to cover all possible apk needs so sometimes applications still need to interact with low-level api therefore i believe it's still important to design a good low-level api and the nts has some unique opportunities because first and dmts is not the first library i am really the first to implemented a particular feature in instead my preference is to write some applications with existing libraries and look at how other developers are using the library to make applications as results i can feel the pain points of existing library especially which api are cuba some to use and which code snippet have been copy pasted in multiple places in the application because it's missing in the library and then i can improve those areas in the nts"
  },
  {
    "startTime": "01:40:01",
    "text": "the other opportunity is that ndnts is a personal project so i can have the freedom i don't need to promise backwards compatibility i can take my time to refactor the code without worrying about the deadlines and i can ask invited people to watch my push up videos that are delivered over the indian textbook then collect the video playback metrics to improve my conjection control implementation but back to the apis the first one i mentioned is trv decoding but it's with trv availability considerations i will i will do an example the example is the indian links data routing daemon rss lsa info structure is a structure look like this it has a trv type number a trv lens it contains a name a sequence number and the expiration time field sources three are sub t of the elements but it looks simple then we look at the endian specifications there is a section called the considerations for availability of trv-based encoding that section dictates that if the decoder encounters unrecognized out of order 70 of the element there is a specific behavior to follow based on the trv type number if the pov type number is less than 32 or is all the number the decoder must abort decoding and the reporter error if the trv type number is even numbers and the decoder should ignore that trv element and continue decoding but with this behavior it means you can have some unrecognized fields inside the aos info between any subtle elements and the decoder should be able to handle that and that makes the decoding somewhat more complicated so how to write the decode in the libraries and the nts adopts a semi-decorative structure so the code looks like this we i have a thing called the ev decoder"
  },
  {
    "startTime": "01:42:01",
    "text": "or evolvability aware trv decoder to use that decoder you can declare each sub trv using this add function i can add with the trv type and a small lambda function of how to handle the trb value or how to handle that sub trv the lambda function can include actual logic such as savings under portion boundary which is useful when i decode the data packets or decoder certificate but it's not here and here it's very simple and then is the evolvability consideration i mentioned earlier it's handled automatically by the ev decoder with ndncxx it's the code is a lot longer because and the ncr text doesn't have such decorative thing everything is a procedure so and it's a decoder friendship i'm showing here it doesn't even support a trv evolvability it can be added but then it will make make the code even more complicated python dr so far is a short history because it's using a reflection based decoder that is purely decorative but python and the answer decoding function it is less flexible because earlier i said that there there could be actual logic such as the standard protein boundary and the python ndn can also do that either you have to add extra code and there's also python dms decoder forces is a class structure to follow the trv structure and it means application have to be exposed to encoding details sometimes you don't want that but this kind of reflection based decoding it's not already possible in javascript but i can do something similar and that's something i want to explore in the future then so then the other api is the face that is common in many other libraries but in the nts i named it endpoint so traditionally phase is a central concept of many indian client libraries ec and the ncxx anders and the nc ccl"
  },
  {
    "startTime": "01:44:03",
    "text": "python indiana has has it slightly different but what does face do face does two things one is perform interest data matching the other is through the management doing the prefix announcement if your face is normally correspond to a single transport but the face only do this to understand if you have a circuit error in the transport application has to handle it manually or if you want to reach interest re-transmission data signing data verification data buffering with in-memory storage everything is manual and the nts evolved the face into a new concept called endpoint which is more powerful in the end point the consumer can on the consumer side the library can provide automatic interest re-transmission and automatic data verification for the producer i can do prefix announcement data buffering and the data sign you will see some examples later and each and pointer can have more than one more than one transport uplinks that can connect to other ndnts applications to forwarders to iot gadgets and any transport error will be handled automatically if possible having those or in the library this allows the application to focus on the application logic so three examples first is the consumer's interest rate transmission in the nts if you want an infrastructure transmission you just need to set one option so this is how you write a consumer you prepare the interest and call the consumer function the data will come back later if possible then retransmission can be unable to say i want up to two retransmissions and the rest will be done by the library and if reaches if after retransmission data still doesn't come back because there will be errors and error handling is still necessary but compared to other libraries then developer has to implement the interest rate transmission basically it's this flowchart they have"
  },
  {
    "startTime": "01:46:01",
    "text": "to implement manually and as i observe in the implementations most developers get it around in some ins in some places on the producer side and the nts can support automatic automatic data buffering the use case for automatic data buffering is when the when the producer wants to prepare a multi-segment response to one interest and then weight and the subsequent segment will be answering the later interest a concrete example is in the nfd's management of protocol data set of publisher when you can send the interest to an ft ask it to return all the revengence but but the rib the rib can be larger than a single segment is there what can be multiple segments and there is a buffering needed in the nts it's automatic your producer callback function or lambda version can prepare all the segments and insert it to a data buffer then when the subsequent interest arrives it will be satisfied from the buffer automatically your producer function will not be called again in other libraries the developer has to manually query in-memory storage for every incoming interest which would be more complicated than this and the nts can automatically perform data signing and the verification all you need to do is a pro provider the signer and the verifier to the end point constructor and then your lambda finishing your or your consumer does not need to do that anymore because the library will handle it for you um and the nts supporter both for the both designer and the verifiers they can be either a fixed key or there or a trust schema that choose a key based on the data packet name for other libraries developer has to call keychain and validator manually and all those small things but they need a lot of code"
  },
  {
    "startTime": "01:48:00",
    "text": "called reputation and within the nts you can eliminate the repeated code and as i mentioned earlier one of the challenges in the nts is that the coder size is a primary concern on the web because every kilobyte of code must be downloaded over the network visitors will expect your webpage to load within five seconds that metric is called the time to interactive and to to download within five seconds what you can download as a code size budget is 170 kilobytes compressed so to solve this problem in the nts what i can do is i try to reduce the core features that are always included in the compiled code that if application needs extra features they need to import the module and and pay the overhead for example data buffer feature i mentioned earlier it's its implementation so far is quite complicated and has a lot of code therefore by default is not there but if you want it you have to import those data buffers that module write to this code it's a little bit of boilerplate that is not really desirable but it's a trade-off between api simplicity and the web page performance and the nts support a lot of transport that are is under that and the point layer so this is a simple comparison chart and notably i recently added http 3 which runs over quick under through under a proxy of a python based proxy program and fd can also support http 3 transport this allows me to do video streaming more efficiently than using websocket since the websocket has a tcp over tcp problem but http 3 runs runs over quick which is over udp then you don't have double condition control and the next thing i want to explore is a web rtc transporter which could allow"
  },
  {
    "startTime": "01:50:03",
    "text": "two browsers running nds and the nts to talk to each other but i don't have that one yet the next api area is the security area especially the kitchen crypto and the nts keychain is implemented with the web crypto api and the index db when it's runs in the browser so node.js is different but in browser it's those two and this is how i use the keychain it's a it's some code so first i can open the keychain if effectively it will open index db that restores the keys and the certificates in the browser index db is able to store web crypto private key without exposing the key bits you will see it later then i can call generate a sign in key and it will generate non-extract non-extractable keys using the web crypto api and store it into index db the private key bits are not available to javascript code as this provides some sort of isolation or protection against someone stealing the peace then the nts has a client for the indian certificate management protocol so i can call request certificate it will communicate with remote certificate authority and obtain a certificate after it succeeds i can finally save letter certificate into the kitchen uh but there are a few limitations with with web crypto first web crypto requests a secret context effect convince a web page must be delivered over https to use web crypto this is a requirement by the web crypto specification but not every page is over https because as someone from philippines they wrote they wrote to me in their countries they don't have a lot of internet and locals are communicating over the coffee shop hot spots"
  },
  {
    "startTime": "01:52:00",
    "text": "in that case they don't have internet they don't have dms they have no way to get a certificate from let's equip encrypt and similar things so in the nts security feature will not work in this environment i have not found a solution to this the other is the web crypto has limited algorithms the crypto algorithm some newer indian specifications wanted certain crypto algorithms that are not in web crypto so it means i cannot really implement them yeah one of them is the flick flicker says one flipper give one option that is aes ccm web crypto doesn't have it of course i can if i deny the application i can pick the other which is aes gcm that is there but if exiting application chose to use aes ccm with flickr then on the nts will not be able to interoperate with that application there are some alternatives to web crypto first is javascript crypto library such as asm crypto the other option is i can compile rust crypto as a web assembly module but both has drawbacks first is the code size increase by at least 10 kilobytes maybe 200 kilobytes in the case of certain asm crypto and the keys are not protected anymore remember in web crypto that is um non-extractable but if i use javascript crypt it's not there anymore since there is also no effective way to cleanse memory and if the code is delivered over plain http it's even worse the first is the main in the middle attack since it's not encrypted https anymore and also there is no secret random number generator it basically means i cannot generate private key safely so so far and the nts is still limited to web crypt only i'm not sure whether i want to relax it but currently no"
  },
  {
    "startTime": "01:54:02",
    "text": "the last issue is not really api but it's closely related which is how do you name a browser because name is a secret source of india as alex said for the enormous users it's somewhat simple so this is the code i show earlier where generator assigning key i need to give it a name so my current web applications they only serve anonymous users i don't authenticate them so i can just use random names when the user comes in for the first visit it's the page generate a random identity name and request a certificate store it in the kitchen when the same browser opens the page again it will reuse the existing certificate the same name and if that certificate has expired or if the keychain is deleted because the browser cleared up saying i just go back to the first step give it a new name but this only works for anonymous users if i want any user authentication it's a different challenge user experience is important so what to use the most familiar with is either username plus password or email me a magic link internally it can be implemented as obtaining a short-lived certificate from a certificate authority that is controlled by the web web server then we can also try to port open id os web or send those specs but to do it over and yeah it will internally it will interact with uh nd authenticator app that the user could download or sell for host on their own server and inside the center app should contain a as certificate authorities that are controlled by the user but in either case we should have a streamlined user experience because visitors do not care whether the web page is using on dns they just care about the body experience"
  },
  {
    "startTime": "01:56:00",
    "text": "so finally this is some resources that that can help you start a coding with on the nts if you want to i also want to highlight indian players which is a web simulator for india it's built with an nts by one one of our collaborators and it's really nice so check it out thank you great thank you very much and friendship i could imagine they are asking questions maybe let me okay sorry yeah dave go ahead um maybe your audio doesn't work so if we can't hear you probably the same issue as before um yeah maybe in the meantime one question um so in your api how would you i mean deal when with situations when things go wrong so um for example um when the transport protocol has a failure do you have some kind of exception system if you trust because it fails the transport will get reconnected automatically since there is in most cases there will be event emitters you can hook into the transporter to find out it's up or down but every transport will try to reconnect indefinitely following exponential backup oh okay there are some transporter you can notice the web bluetooth you cannot if your gadgets is offline this browser don't allow you to"
  },
  {
    "startTime": "01:58:01",
    "text": "reconnect but web associated web transport as it will all reconnect okay got it thanks are the other questions i think dave released less issues with his audio so what would you say is say the like attractive scenario for using ndn ts is it like like an experimentation environment for web applications so what was your intention in developing this i don't really understand the question so um so it looks like i mean um one of the interesting features here is that this can run in a browser so yeah are you trying to experiment with like um like building web applications on top of this or what is your your main motivation here it's i have the only libraries at the camera on the browser the previous one is called on the ngs but it's no longer being maintained yeah yeah okay okay um wait there's something going on in the chat okay all right yeah so personally i i uh i think this is a really nice idea and um so um yeah we have started um using ndnts for some experiments and um so i think one of the interesting like possible next work item topics in icn could be um"
  },
  {
    "startTime": "02:00:00",
    "text": "exactly um how would you really build web applications and you also pointed to how would you name the browser and you know provide something like an endpoint or something reachable name to the web application and i think these are really interesting um questions and um i think it's really ongoing work and and needs niche further thoughts so thanks again for introducing this to us and um yeah okay if there are no further questions one day i will start implementing flickr but when why it has like encoding specifications um yeah okay i mean we can quickly um discuss this i mean there are implementations of the the spec in in python for example you probably have seen that right i know it's for ccm but it's not really specified in abn f syntax yeah that's that's correct um okay just a moment [Music] okay yeah thanks again everybody um for presenting your work and for attending the meeting i think was quite interesting uh um and um i think many uh presentations today um would probably lead to further discussions uh let's do that on the main list or reach out to the individuals um here just some some thoughts um by dave and myself about um next meetings so um so personally um we think it's uh it's a"
  },
  {
    "startTime": "02:02:00",
    "text": "good model to um gonna have this interim meeting so kind of avoiding these online itf meetings because these weeks are typically really busy for everybody and also we have less control over the time slot so our thoughts were like is so if iatf next itf in in march is um actually happening in person we would uh try to meet there um if not we would go for another online meeting before or after the itf week so similar to this one um yeah quickly please note that acm icn next year is taking place in in osaka japan so let's really keep offering us crossed that travel will be possible then so you can expect the coffee papers and other infos fairly soon and with that um yeah thanks again for attending um wish you a really nice holiday season and um let's be in touch looking forward to further discussions with you thank you bye thank you very much have a nice weekend thanks you too goodbye and um special thanks to ken for taking notes it was super useful is there a web paid for iceland 2022 yet not yet okay okay soon okay actually i think there is a web page isn't there i'm not sure though last time i remember seeing a link a url"
  },
  {
    "startTime": "02:04:00",
    "text": "but i don't remember what it is off the top sorry maybe you can send it to the list if there is yeah look and if there is i'll send it to the list if you don't see anything it means it's not there yet [Music] happy holidays everybody see you happy holidays goodbye [Music] it's not really uh"
  }
]
