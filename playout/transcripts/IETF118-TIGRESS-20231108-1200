[
  {
    "startTime": "00:00:11",
    "text": "we just moved the session. It doesn't entirely, you know, maybe there's a bug. Your supervisor? Okay. I because it it's It is just to show a session. Button. Yeah. Because apparently that QR code isn't connected to the session. So have a QR code just Correct. Yeah. Well, you can, yeah, you you can find the agenda. Right? Go go. Right. You you are. Right. So it's yeah. Go to the agenda. Find the session. Use the on-site tool link. Oh, yeah. Just wanted to let you go about it. Is Yep. Alright. So, I was just about start by saying purchase laid out with the flu. And you got up in the middle of the night anyway, about you. Yeah. It's Excellent. So, welcome to Tigris at, IETF 118. Great to see that so many people picked up on the the change of of of date and time and place. Right? So we we had a little bit of problem with the scheduling several of the contributors weren't able to make the Friday section. So we got it moved, which was good. So We're it is shorter, but we really appreciate, help from Roman to get it, move them. We, you know, thanks to the cancellation of another working group we actually able to use this slot. So"
  },
  {
    "startTime": "00:02:04",
    "text": "let's start by the usual stuff. Note the the no 12 especially all of the, issues and and sort of rules around how we behave towards each other. It's really important. We keep, we keep, like, a a a common and simultane in order to get, the all of the stuff done that we need to get done in in working groups. We are, we're trying to kind of make as efficient use as possible today And so there's been a couple of presentation requests for today but me and Patrick have decided that due to the discussion on the list, list, recently about sort of how we actually the sec the security properties of the the the the 2, the various channels involved in in the protocol, we decided to prioritize, using the time today to have a discussion about the security properties of the of the invitation channel and Ecker has, provided us with a offer to provide us with a kind of a an intro, to to the topic. So we're we're actually gonna do that slide couple of slides. First, presentation from, Eric, and then we're going to do that discussion. And if there's time, we will do other other, business. So The agenda is online. And and basically, Ecker, do you think you're good with 15 minutes? Alright. Then I'm gonna just switch slides while you Get up here. And Let's see here. And I guess some people should like interrupt me or whatever that they come Wyanger not being accurate or whatever. Right. Take it away. I need this. Okay. Do you need control, or should I switch gears?"
  },
  {
    "startTime": "00:04:01",
    "text": "I didn't like my post, so I can't stand. Okay. Let's do this. So Right. So I think, like, this is intended to be like the picture of, like, the this duration we're fixing ourselves in. This is a new this is a new slide, but I do diagram, but it looks like I've really done a university before. Which is, setting here, right, is that the sender Once it was in your receiver, wanna have this back and forth, but they only can do it immediately through the relay server. And so the, you know, Senator does two things at once. One is it preps the first message in the exchange? And it stores it in the release server in some unspecified way. Unspecified as in, that's the thing we're trying to specify. And then it sends this invitation message to to the receiver, through this through another channel, through an introduction channel, And the premise, of course, in this working group is that introduction channel is limited, so it can't be useful, like, back and forth, and maybe you can't, like, send a big giant message through it, and hence, you need to send, like, all the major stuff of the relay server. The point of the, the invitation message is to kick off this exchange in the release and so then, like, there's this back and forth where, like, the receiver pulls a message for the fix the induction invitation message. Conifer, these are her pulls a message sends this message back and then somehow in some unspecified way the sender learns that the message is available. It reads the administration has and the dot dot dot means an arbitrary rec number run trips back and forth. Right? But the only thing we're really, so But, the the main purpose of this discussion is this red box. This imitate, this in Russian channel. Next slide. It's here. So just like to be clear, here's the other, here's the diagram in Russian channel removed. So that should I just like to put a white box over top where that red box was. And, so, like, this is what this is what the main protocol exchange looks like. The induction channel, like I, it just kicks off the Right. Right. Next slide. So, Okay. There are 2 main sort of conceptual settings here. And this is the the topic of, like,"
  },
  {
    "startTime": "00:06:02",
    "text": "extensive debate of the of the mailing list. So If we assume that the invitations, there's to say the things that are going in the Russian chapter or we have one set of properties. If they assume they are non secret of a different set of properties, Then So if we assume they're secret, the invitations contain identify the relay channel. And, in, in, like, The draft that Brad and I wrote, they have a especially high entropy in the draft the, the original draft, I think they have implicitly high entropy. They're like UUIDs. I don't think they're random, we can just write random and the problem will go away. And So if you don't have the invitation, you can't, you can't access the appropriate relay channel. Can talk to a video server just fine, but, like, you can't tell the channel you want as there's no way to, like, actually get in this change. So as long as it behaves your main secret, only the receiver can access the radio channel. And I think that's ground. I think that's, like, common ground across so question becomes what happens if their invitation is not secret? Next slide. Oh, right. I forgot about the slide. So, there's been a bunch of discussion about these protocols, providing what's at most one semantics, which are which is to say that, if 2 agents come in contact with invitation. They can't both get the credential. So, this is like designed, I think, both as correct us property and a security property. The correct us property is I'm transferring my key to to Tommy, I don't want Tommy reshaping it twice. And the security property is if Tommy somehow loses the invitation then someone else can't get the key. The the second property is like weaker, is is weaker in a way we're gonna discuss The general way that these protocols are trying to enforce this is by ensuring the first agent to try to connect the relay channel access the channel and no one else does. And so, so that's why I'm calling out most once. Next slide, please. So, now imagine we have"
  },
  {
    "startTime": "00:08:00",
    "text": "the contrary, we have a public invitation where the mutation is no is is available to the attacker. Right? So now you have a words of race condition. Where, the attacker and the legitimacy were both asked the invitation. They both try to contact the relay channel. And the one other race, in the basic, most basic airport gets to credential. And the the receiver and so in this case, the attacker wins the race. They get the credential, and the receiver gets a nope. Get some kind of error. The same kind of error we would have gotten if you'd, like, clicked on the thing twice on your, like, on your, like, your phone, mean, so, like, if, you know, it's pretty common. If you have IMessage, it goes like your phone or computer. If you click on it twice, it's gonna work on the phone and the computer's gonna get you an error, right, as you get the same thing here, the case with attacker wins the race is an error. Right? So tacker's gonna win if you think that the invitations are in fact public, the tag is gonna win the race pretty maybe not always are pretty often. Right? Like, how motivated are you homovese attackers doing your car? So, so so like, public imitations in the most native protocol like bad news. On on Next slide. There's been a bunch of discussion about so as I sort of mentioned, there's been a bunch of discussion out whether we actually should regard this introduction secure And so, if people believe that it's not secure, there's a bunch of discussion, and this is more in, in draft art type and lesson that I worked on, of having what's with it, what's been called a second factor. And they do the second factor is it's delivered over a separate channel or negotiated receptor channel, we might say, then the Russian channel And that channel is producing to be secure. It's a much specified fashion. And I think the way people think you get in this situation would be that that channel is, like, super low entropy for somehow. And I think I have a slide on this So what are the examples that might be? A cryptographic key, maybe a pin, on the list, you guys mentioned an identity check basically, you would like go to, like, the hotel front desk and, like, show ID. And then they would somehow tell the relay server this was the right person to do. On The key important point that I wanna emphasize here is that in the protocols we've seen so far,"
  },
  {
    "startTime": "00:10:02",
    "text": "This controls the credential issuance, but not the channel itself. And so the result is the attacker can access the channel just fine. They just don't get the credential. And so can I say I select this? Next, next getting next? So what I'm talking about, it looks like this. Is this is basically the same diagram as before more stuff on it. So as before the relay, the reset stores the mess message 1, sensivation message. Attackers, I'm happy to have his invitation message, and I wish I'd on that in the diagram, but we'd imagine he steals it. And then he goes to retrieve message 1 and it starts the protocol change, right? On on on the same time, the receiver receives a message because the channel is like public. And he tries to to retrieve message 1 but he gets a no because the because the attacker's already in. But then attacker drive through the protocol exchange, through the relay server, he doesn't have a second factor, and so the exchange fails. And to the end game here is neither the attacker nor the receiver get the credential So, it's a dose attack, but it's not you don't get this credential switch attack. That's what the second factor does in in the proposal we've seen so far. Near side. So so I think, every oh, I think SEO Gession in the, in, in the, in the, Queue. That's the word. Right. Do you do you wanna stop for whatever people want? Right. Yogesh, if you have, like, a clarifying question, do you wanna do that now? Yeah. Actually, I do have a clarification If you could please go back I think couple of slides. To the second factor Here? Yeah. So the concept of the second factor is not to to prevent the second person from creating a credential, but it's after the fact the idea is that you do get the credential but that credential is not usable because It is not trusted by the entry point. So I'm not Good."
  },
  {
    "startTime": "00:12:03",
    "text": "Sorry. Did you? So so the idea of the second factor is not to prevent from getting the credential. You will still complete the transfer. You have a credential, but it just won't be usable when you actually try to use it. Because there is a flag on it. That needs to be cleared somehow. Well, I'm not sure I see a meaningful distinction between those 2. Seems like the bottom the bottom 1, and I can imagine building it both ways, but the bottom line is as I said, that the attacker doesn't you can't use the car can't drive the car, neither can I? Right? That's right. But the second slide after this shows that it's blocked from getting the second messages. That's not at So if you go back to slide number 8, please. Okay. I'm not is it I'm not sure how how does that matter? No. Just for clarity because that slide number 8 shows the Okay. Transaction is block exchange is blocked. But that's not the idea. Oh, okay. Clarification IDs. Okay. 9 I I I saw a couple other people jump in and out of the queue. So I just wanna make sure that if, if you wanted to ask clarifying questions or make a clarifying statement than do that. Otherwise, we can just sort of do the discussion after Eric is today. Alright. No queue. Alright. Then we go back to slide 9, I think. Right? Okay. So I think, think everything, everything I just said, I think, Modulo, you guys are, correction. Is pretty much common ground. I do wanna talk a little bit of an editorialized a little bit in this next few slides, so, interaction channels that people seem to have in mind are like email, SMS, imessage, WhatsApp, NFC, whatever these have, like, widely varying security properties. And frankly, great properties email, like famously terrible. But in practice, would assert. We tend to treat these as they if they were secure for all kinds of other applications. You know, we do password reset over email. We do 2 of We do. Maybe bad news, we do You know, we do. We do true a favor of email all the time. We do webcast, but if you get a shoot in server email, by the way, And, so I wanna make two points about this. The first is that, like,"
  },
  {
    "startTime": "00:14:05",
    "text": "that, like, this is, like, common practice whether like it or not, the second second thing is in many of the situations we're talking about, if you are, if you do control those channels, you can do much, much worse things even in these same settings. Because the credentials that control the the underlying authentication that controls credentials, actually is often tied to, like, your email address, your phone number, or whatever, And so, like, in so the example we talked about is, it's a purchase of hotel keys, right, is I like walking to I go to hotel and how is, like, you know, and I, like, have a Hilton, Hilton app. And, like, how's the the room key initially delivered to phone. It's delivered by something that's controlled by my phone number or my email address. And so if you don't actually trust my email, just my phone number, like, I don't know what to do because the bottom line is, like, people can just, like, take over your own account and steal it and steer a commercial that So, so I think, like, you know, like, it is, like, sad that these channels are not very good, but, like, you know, these sort of, like, the they they they were living were built were built a whole house on this sand. So I'm not sure if building more house than the sandals are bad. I messaged, but I messaged in WhatsApp, of course, you're just fine. And and NFC is like largely fine. But email is in fact that. Next slide. So I I guess, this is a little more editorializing. I think we have 2 main, so I guess I would say is, like, the situation I described in, like, slight 8 is, like, pretty bad, actually, situation where even with the second factor, I don't quite understand that second factor is supposed to work, but even the second factor where it's haggering easily arrange it so that, like, nobody gets nobody gets the keys to the car. Like, actually a pretty bad situation. And we should probably and if we're gonna build something, like, we should probably fix And so So I think we really have, like, 2 main kind of choices. And and I say none of the protocols extend to fix that problem. So I think there are 2 main choices. 1 is let us assume that the introduction channel is secure kind of the hand waving way I just said in the next in the previous slide, like we do all the time anyway, and move forward with that under that understanding. And then it's, okay, move forward to protocol selection because, like, these protocols"
  },
  {
    "startTime": "00:16:00",
    "text": "hey, just fine under the circumstances, or we should assume that second injection channel is insecure And then we have to, like, really flesh out what the second factor is and what we need to do to bind to the relay channel that, like, if you don't have the second factor, you can't even get into the gate because, and what I mean by and what I mean by that is that that it should be that if we're gonna have if we're gonna say this introduction channel is insecure, we need to do is arrange the second factor is actually required to to complete the exchange and the attacker can't spoil you from getting the key when they're on the second that's not really acceptable state of affairs. And this, and and so, like, this last I wanna make clear on, we should have the discussion prior to protocol selection because don't actually know necessarily how to do that. I'm not sure anybody else does either. And so need to sort out how that second factor works and how it integrates the rest of the system And once we do that, we'll much understand much better how does neither of the protocol we shouldn't design a protocol under the assumption we have someone's specified second factor interaction that we don't understand. So that's my entire my entire case here. I'm gonna sit down. Alright. I'm gonna actually leave if this is the last slide, right? Yeah. It's the last slide with anything except the question mark that. So will leave this up. And, there is a queue. Yeah. Told me Europe. But I ask you Yep. I should want to have to do the front of the room. Right? Cool. Hey, Tommy. Probably, Apple. So I have 2 questions wanna ask. Second one gets more to your questions and options here. But, so for first one, because I I've been talking to, yogash and Dimitry to try to understand some of the difference between the two proposals a bit, I guess. And One of the things I just wanted to clarify particularly around protocol, that you had drawn up Yeah. And this this assumption that we have just kinda like the just a single person can get in. Because it seems like"
  },
  {
    "startTime": "00:18:01",
    "text": "you know, even if we have just, you know, like, questionably secure introduction channel the other authors definitely wanted to make sure that, like, really only one person could get the key and you couldn't end up in a state where you had 2 parties having the same key. So is Is there in the the protocol you had specified a way that, like, a misbehaving attacker could Right. So, I mean, an attacker who's not following the protocol, you know, grab like, look at the location of the secret and then not delete to essentially not do the nope because you had, like, you know, the attacker getting the credential. Could they just try to, like, win the race multiple times and just, like, Always get to the mailboxes and observe what's going on but never delete so that the other party thinks they have a unique copy of the key. Like, that that felt like that was one of the distinctions that maybe wasn't being bubbled up. Yeah. In the conversation, and The ASF Yes. What are your thoughts? Yeah. That that And is that a problem you would want to solve? Yeah. As an interesting suggestion, honestly, I don't think the design that I put forward actually from set at the moment I think it's pretty straightforward to remove to to fix. Dennis Jackson is just something around time to fix that. So I think want to fix that, I think it's a pretty straightforward to fix, but I don't use a property that I attempted to fix. Great. Okay. Because that that was the impression that you, like, it didn't fix that. Think the other one does by adding some state like, essentially a cookie, and that's one way to solve it, but it okay. Let's just let's just maybe for the purposes of going forward, like, assume that that is a solvable, fixable problem. Yeah. I think some technical methods. So then for this broader question, I mean, I I kind of like one. I'm just saying, like, you're gonna use SMS or email, It is what it is."
  },
  {
    "startTime": "00:20:01",
    "text": "Shrug. And, like, and you'll you'll notice it. I just wanna I I don't see Brad in the cube. I just wanna clarify. The the the private, this cookie suggestion, and that would in fact fix problem. Okay. Oh, there was a person wrong too. Great. They're cryptographic ways to fix it. Bye bye. Going to this, I mean, I think we could just say one if we're okay with SMS just being what it is and it has the properties it has and I talk to the other person and they say, I didn't get your car key, then they know they've been attacked. But then we were talking about second factors I know that the other document is talking about, like, using the second factor as a delayed thing to, like, unlock their credential. And it feels like overall, if we zoom out the second factor idea is essentially saying like, if we had if one of those factors was actually secure, then we should just use that as the bootstrapping introduction channel. That was that's on yes. Right. And so it feels like the only reason we would have to is if we have, like, to potentially insecure. Like, essentially, if I have SMS and email, And I don't really trust either, same attacker to intercept both. Like, maybe my carrier's looking at my SMS my email providers look at my email, I don't I think it's, you know, less likely that which the the attackers looking at both of them could instead of having a later second factor be taking approach of like, have the protocol define the way to split up the initial secret such that you just like recombine it. Like I said, half the secret SMS, half the secret email, I combine it on the device and then I assume I'm pretty good. I I I there are a bunch of questions in there. I think Let me try to so I think answer that second half of the question is probably yes, but it's complicated because this weird URL encoding stuff and how much we wanna have the user kind of have to engage with with the, You know, how how, I mean, you know, how new ways do to FAU. It's basically like doing 2 FABIA. They do 2 different, Exactly. He's vaporized. Just make it a 2 a favor. The, I guess,"
  },
  {
    "startTime": "00:22:00",
    "text": "let me let me try to steal man. I think that the second factor version that you're seeing in the, that you're seeing, the sort of gestures, which referring to in this column more in the autographed which is that the second gen the second fighter channels in some way, super limited, I think, is is is is what the hematiatric home. So, like, one of the examples was that, like, you know, you go the second factor in this case is, like, you show up at the hotel desk and you show them your ID, as there's no digital communication in the second factor at all between you and the hotel desk. And so, like, I type in a pin number of Oh, no. You don't get anything. Right? You just you just basically say, I, you know, I you room key for telling me falling. You show them your ID, and then they push some button and then some of the credentials valid. Right? Now that was how I read like the, I guess they did have a one way thing. We don't I guess I'm I'm I'm I will say I'm I'm still in this. I'm skeptical. This seems most as a manufacturer I can think of have some have some channel. The only the one that I think is probably the plausible. That is, like, somehow, really restricted is the one where, like, I call you on the phone and I say, Tommy, like, I transferred the car key to you, but you're gonna need pin 1224. In that case, I can't read a key to you because it's too short. And so I think I guess this is part of what I think we have to actually flush out with as a conductor really means. Is because it's not Like, there's a pressure from minorities and some of them, like, I agree. If I can transfer a cryptographic key in the second factor, it's, like, very, very straightforward Right? And if I because I I've already got turned for deceased pets or whatever. And if I can transfer, you know, 12 bits. The problem is more complicated. If I can answer for any bits, it's even more and that's why I think if we're gonna really go down this path to flush that out. Right. And I I guess if if we're willing to do the route of, like, you call me, you give me the 4 digits, we we could do that as, like, you know, I I type in the 4 digits that transforms my mailbox. ID, and then I find it. Like Well, I mean, that's all. So, this is actually kind of saying wouldn't we're talking about. The problem with that is that if it's a low entropy, the attacker just tries all the possible commands. So now you need, like, a pick or something. I'm not saying it's undoable, but I think it's, like, a lot more complicated. So, so I think that's"
  },
  {
    "startTime": "00:24:00",
    "text": "or you don't do a crypto after we do some other way? We, yeah, now we're gonna try. And I can, again, like, I can make some stuff up. I'm just saying, like, it's complicated, and that's why I had to that's why I had to attack Right? Do you want me to sit down, by the way? You you can wherever you want that. Okay. Christopher, it it kinda depends on whether people want to ask questions too. Yeah. And or, you know, what I guess are you from a special? I feel like Demetri and Yogesh were gonna reply to what Tommy was commenting on. So I think they should go first. Or a yoga. Either Thank you. So, I probably can't can't clarify some moments here. So first of if we indeed have a Perfectly secure channel, then we can just pass the operation information, through that, perfectly secure channel. And I think that that's one of the option. But when we originally thought of this problem, we decided that we should have a proper balance of security and, usability. And for, for that reason, we decided that, there should not be limitation in the channels that can be used in order to pass that introduction information. But understanding the risks, we, thought that it could be mitigated by separating the introduction URL of secret and, additional second factor as a pin number. Obviously, the PIN number, that pin entries, bin literized shall be limited. So let's say, I call my friend saying, I just sent you the link And, verification code or PIN number for that link is 1234 And when my Fran wants to fetch the credential using the provision information from the credential provider,"
  },
  {
    "startTime": "00:26:02",
    "text": "they will be limited, by a number of times, let's say, three times, to redeem that credential, with the being provided. And if they enter pin three times incorrectly. They will not be able to provision it. Basically, that's all there is Right? Chris, going to give Yogesh. Chance as well. Thank you, please. I think couple of points here. So I agree with echo about the idea that we do trust the channels. If I SMS with Tommy all the time. I do trust that that message does go to him. But we also understand that it is potentially insecure. And so we have to consider this from the perspective of the vertical people, say, the car makers or whoever that vertical is right on filmmakers. If the the channel was not secret. And if that one message was leaked, we're going to lose something which is valuable. So that insecure concept comes from that, but yet we don't want to, as Dimitry mentioned, We don't want to prevent people from using the channel that they use all the time anyways. If I SMS Tommy all the time. I should be allowed to do that. And the second thing is with that second factor, no matter how we design It has to be usable. Even if we encourage people to actually call to view that PIN code, they may or may not. Right? So so we have to I guess, consider that the first channel be insecure. Or even if it was, say, really secure, there could be some attack gets this cold and the car makers or whoever the vertical is they need a knob to to submit off that while there is an attack, open attack, or while there is a known bug, We don't want to just allow using these key as is."
  },
  {
    "startTime": "00:28:01",
    "text": "Normally, we do. Like, normally, when you get a credential to this, just go and use it. It's very usable, But in some cases, when something goes wrong, we do want to know how to Put some friction to it. That's the idea. Thank you. Right. Christopher. Yeah. Chris Wood, a question about the, I guess, assumed use case here. Is there any, like, latency or performance requirement that, like, we have to meet with this particular protocol? Like, if it took, like, 10 round trips or something, order to exchange the credential like Would that be bad? If if yoga should be able to answer that or anybody who wants an you know, that question, you're stepping right now Yeah. I I can take that. No. It's fine. I mean, if the protocol needs 10 round trips, over a delay period. I guess, I think we have mentioned in our example or in our draft, that Alice could share over email to Bob while boarding the flight, And when we sees it after landing So there is the time there is no notion of it has to be instantaneous. That would be nice to have. Sure. Sure. Sure. So I guess in that case, option 1 is, like, it seems like the clear obvious candidate here to start with, in particular because, like, like, like, developing, like, separate mechanisms to build or to sort of promote what is otherwise an insecure channel to a secure channel. To work with the protocol that we designed here that assumes a secure channel. Can be done separately, I think. And, would would would would greatly sort of simplified the design space here. Like, rather than trying to, solve multiple problems with long protocol when we just, like, split things up. Try to solve the the simple problem here with assumes that the introductory channel is secure, we have a very, like, elegant way of, like,"
  },
  {
    "startTime": "00:30:00",
    "text": "transferring the credential onto that assumption. And then separately, perhaps here, perhaps elsewhere. I don't it doesn't really matter. I don't think work on trying to, like, fix the introduction channel is not a secure problem. Because that that particular like, assumption does not seem to be like, applicable to all deployment models in particular, like, if if you some people might think that the introductory channel, like, using SMS or emails in or some people may disagree with that given what we currently is in practice today. So the I think the right course of action is to just, go with option number 1 and, if you actually need to you know, change the assumption about what the introduction channel, what are the security properties, the interaction channel, you know, do the work to fix that. So Can I ask you, like, a control question? You it sounds to me like you're proposing to actually 2 things that a we assume we go with assumption 1, And, also, we kind of move the introduction of Alto scope. I mean, that's what one is. It's like the introduction channel is secure. And you assume that for the the spec. But not not only move the would you also say that we should be moving the sum of the protocol involving the security channel out of scope entirely, or is it the security properties of the interaction channels that that's out of scope. I think, like, option 1 is It might be a meaningless distinction, right, that in my head, option 1 is we assume certain properties about the introduction channel, how those properties are established is like out of scope. Like, it could be, like, over WhatsApp or or a message or whatever. Or, like, I write down a secret on a piece of paper and I hand it to someone, like, whatever. The implementation details of that, I I would I would say perhaps you're out of scope. But, I think the the requirement or the assumptions that you make about the channel should absolutely be in scope because you need them to reason about the security of the rest of the system. Yep. Alright. That makes it care for me. Eric,"
  },
  {
    "startTime": "00:32:04",
    "text": "Hi. Yeah. Thanks. I mean, so as from as probably should be clear from my, my presentation, I think option 1 is the right answer. Do love to get protocols and problem. And so, like, I'm actually, you know, Huddl not cry, but did you put option 2? Cause it's an interesting problem to attack. But, but I'm not sure like that. I'm not sure, like, catering to my neuroc photographer is the right thing to do I guess I think I think I like to, like, maybe just step back for a second and talk about common ground. Or, I mean, it should, I think, it should be coming down. Which is which is you know, if you read the charter text, the charter text talks about establishing a secure channel and guaranteeing that only the recipient is able to retrieve the messages. And, and so, I think what what I what I would like may maybe even certainly, we can talk about, like, 1, 1 versus 2. I think even more important is can we is I think we should be able to agree that the combination introduction channel in the second, in the second channel, whatever it is, think about it, whatever it is, needs to be a sufficient easily specified and needs to be sufficient to guarantee the properties referred to prior to the charter is say that only the appropriate recipient gets the data And so, there's been a bunch of talk a bunch of our previously about like throwing the second the second factor out of the out of the system, saying, like, that's something we're not gonna specify, and I don't think they're appropriate. And I think that, like, job is to provide this entire entire apparatus. And, And and and so, a, there's the chart for both charter reasons and also for, like, just base protocol security reasons, is not a sensible situation to have to build the system where we're like, the property provide is the first person on the door gets the data But, like, I guess, like, that the, I I guess that, tucker can complete the connection and neither can another can tend to perceive that they're not doing our job if we do So I think if people think that, like, that's an acceptable save of affairs to be like, the attacker can just, like, stop you from making the transaction, but they can't get it themselves. I like them speak up because I just don't think that's like, okay. Eric. Eric, can hear Apple. So I"
  },
  {
    "startTime": "00:34:04",
    "text": "was actually coming up to say almost the opposite, which was that the the second of this and how we bootstrap that that channel. Maybe is is similar to what you're saying is that that seems both interesting and and I have other places where I'd like to use that to to do similar kinds of things. So if we could do that, it'd be real nice, but if Yeah. But but again, I I I I think hearing what you're saying, I I can I can come around to the if we need to limit that scope down to to adjust the, okay, assume that it's it's secure and move on? We could do that. But if if we can do number 2. We have other places that I think we'd like to use it. And that would be a a useful contribution to the rest of the world too. Now I'll I note that our AD isn't sort of running to the mic stopping us from from working on that, right, which which means that it's entirely appropriate for us to slice problem in 2, right, and do both if we can, you know, separate them. Hi. It's Simon Freeproda, Mozilla. Had had had I'm in favor of 2, specifically because it says on this slide, which is finding the second factor to the channel. I think if we want to secure general, that's something we should do. And, of course, what I could set, it's a nice design problem. But also the the point that was made in the draft that It should only be usable once isn't captured anywhere else. Right? So is neither the second second factor nor that assumption about the initial channel. There's there's another piece there that I think makes sense to caption. Tommy, Tommy Polyapple. So I think I I I like the approach of 1 or essentially you know, focusing on a protocol that satisfies 1 or, you know, assumes the introductory channel is secure enough or, you know, whatever that means. No."
  },
  {
    "startTime": "00:36:02",
    "text": "Around the second factor stuff, I I would like to understand a bit more and, you know, maybe hear both from yoga shoes next and maybe Ecker as well. What what we're thinking is okay. Like, if if we are splitting up the scope here, and just focusing on a draft that has like like like like an assumed secure introduction channel and then you get a credential. Yogas, was already talking about, like, the different verticals. And one thing that is out of scope here that is just like, you know, what is the content in the body of this credential. Like, those are potentially very different things. We're not talking about the actual backing of that. So I don't know. Let's imagine that there is some hypothetical car key credential. That I have that I own, and then I wanna give it to Edgar too. But Potentially, I could imagine a world where in order for me to actually use that digital car key to unlock my car, every time I use it, I also need to you know, type in in some new field in my wallet app, like the 4 digit pin. Actually activate it. Like, it always requires a second factor just to use the credential. And in that case, when I transfer it, it may also require effort to use that second factor pin. So I may need to tell him that thing anyway. So I guess I'm what I'm wondering here is when we are defining the credential that is transferred, can we say that, you know, if the vertical wants to require that this credential that they are transferring needs to be unlocked by a second factor. Can we consider that somewhat orthogonal from this main mechanism that we'd be specifying in 1. That you know, they could already require that I use something"
  },
  {
    "startTime": "00:38:01",
    "text": "else to unlock it or have some second vector just to use it, that maybe is not really the scope of this particular protocol. And is that a state that we would all be happy with or not. Alright. I'll we'd never have to I note that we had a Bispoft just a couple of days ago. Yeah. Specifically looking at issues around the security and privacy of on digital credentials. Right? So, you know, see. Okay. 6, Yeah? Could very well go in there. It it it Yogesh. So I I I think even if we want to go with that option number 1, that assuming that Tandem is secure, That that is not necessarily true all the time. Right? No matter what channel the pick as an example. There could be bugs or breaches or some that is temporary until it gets fixed. So there are no matter what January claimed to be secure. Can be insecure at some point. So so at least to me that just saying that introduction channel is secure in 1, is not enough. If I were the vertical, I would one dotknob all the time that Sure. You claim your channel is great and secure, but maybe there is a bug discovered in I do want to put 2nd fact to now on. So so to me, really that second or maybe there should be a third option that, They'll say that there is there are different aspects to this problem. Right? There is a introduction channel, the Tigris channel and the optional second factor. To me, those should 3 should be split into 3 different aspects and looked at differently. But I don't I I don't believe that we can assume that the channel is secure forever. You you just can I try to clarify what I what I was trying to propose"
  },
  {
    "startTime": "00:40:00",
    "text": "just before which is It's gonna be slightly differently phrased from this number 1, but, like, assume that the introduction channel is, secure enough for what the credential is? So, like, I can imagine my, you know, the the And I think this ends up being isomorphic to the way you're describing it. It just allows us to split up the problem differently. Let's say that my car manufacturer vertical defines 2 versions of a credential. One that requires a pin on entry. To actually use the credential as a second factor and one that doesn't. That I get to use for free. And then separately from this protocol, your, you know, our wallet app on iOS can say, Hey, if I'm transferring this over iMessage, I'm okay to use the one that doesn't require a PIN. And if I'm sending over SMS, I'm gonna use the one that requires a PIN. But from the purposes of this protocol the introduction channel is you know, secure enough when we get the properties that whoever gets it gets it, And there's only one person who gets it at the end of that. And that doesn't mean that it is perfectly secure. It means you know, obviously, there can be attackers there could be bugs. There could be other things. But let's think of it as secure enough and make the the presence of a second factor orthogonal from the protocol itself and just be extra thing that can be added on if that is the nature of the credential itself. So if I may respond to that, Is it okay, Adam? Yeah. Go ahead. Okay. So of of So that the idea that using a pin or something every time is actually a option because Karki is actually deployed vertical, but that, at least currently it is"
  },
  {
    "startTime": "00:42:03",
    "text": "under users control. User has a switch to turn now if they feel that they're driving a really expensive car, maybe they need to tremander. Second factor for using every key every time. That's already a case. But this second factor, particularly, is about that 1st transferred red. I transfer the key to Tommy and then first time before he uses the key there is this concept of second factor. So so a second factor for using it all the time is already a concept in that setting orthogonal and you can turn it on. To thank you for the time. Alright. Dean. Everyone's so tall around here. Hi, Dean Sachs from Amazon. It it it strikes me that So I'm approaching this from an identity centric perspective. And it strikes me that we're maybe not looking at prior art in this space that can help us out. So I don't wanna touch the introduction channel that that's an interesting problem in and of itself. But as far as what we're doing in transferring these credentials, Really, what I'm hearing is we have a delegated authorization pattern And this looks an awful lot like Ooma too. And if you're familiar with Ooma, and you can go. And I just found the YouTube video of Eve mailer speaking about this on in 2018 at Identiverse, You can, You can use Ooma too to delegate authority in in in So her one of her examples was a car key. To delegate the authority to use that car key in a certain, a range of time or a window of time, for certain purposes, etcetera. And there is it seems there's prior art here that may come to bear in this space and allow us to solve these problems or at least look at other ways to solve these problems. I am fundamentally uncomfortable with the way we're talking about it today. And using second factors is that there's some magic security"
  },
  {
    "startTime": "00:44:04",
    "text": "thing because they're not. And we know the problems with factors. We know the problems with SMS and email. OTPs and all of those second factors. And this is why we see the move towards Fito based credentials now. And so I'd really like us to take a step back and look at this problem holistically and see what prior art exists and see how we can use the best practices we have today for second factors that get us away from these terrible second factors that, yes, SMS is highly usable. But it's also highly vulnerable to attack, and we shouldn't use it for anything that's high value. Even if we use it today. Thanks. Dimitry. Thank you. So, I do really appreciate the topic that Tommy brought up, because in addition to the credential exchange, there is actual credential activation normally. So we, Let's assume the car key example to devices haven't performed the round trip exchange the receiver device now has and you key, but that he needs to be recognized by the car So there is obviously, later provisioning part. And during that provisioning part, the card needs to, recognize the key and start using it even though the key is already on the, trans device. And similar, concept is applicable for the hotel key. So the Hotel or credential, authority. What issues, to the sender is provisioning information, let's say, provisioning token, the right to fetch the newly minted potential the credential provider. So the receiving device will have 2."
  },
  {
    "startTime": "00:46:02",
    "text": "Make a call to the credential provider and fetch, that newly minted credential in exchange for that provisioning, token. So But since, we are trying to cover multiple verticals. It's gonna be extremely, complex problem. So that's why we just wanted to Bringing in scope that transferred self and but in the real life we cannot just, not to think about the provisioning later. And that's important. That's why we, we kind of We we try to bring into the picture, the provision piece, at least in our, sample implementations, and The second factor comes into place actually, during the provisioning, Both the car might request entering the pin or, and revision, credential, authority might ask, user to enter that PIN number. And, again, if we had perfectly secure channel. The problem could be solved differently, but that properly secure channel probably would require user authentication, And, we actually consider, user authentication, maybe with Pfizer, maybe with some other, instruments, but that would require bring into picture and exchange user identities that can be collected and used to breed, to build social graphs who shared what with whom, and how this information can be used And we decided not to go that path intentionally. So that's, all that I have answer to that, and thank you."
  },
  {
    "startTime": "00:48:02",
    "text": "I'm just gonna jump in the Q as an individual. 1 of the I'll note that if you look at other provisioning protocols for wallets today like OIDC for BP. They also include, like, mechanisms for channel binding that are sometimes referred to as pin codes. So it is actually an orthogonal. In that sense, that's an orthogonal aspect of a of, like, binding and just note that this is getting sued in other venues too. Right? So it it I think it would be Libbit dangerous for for for for for for for Tigris to produce separate and separate solutions for for those kinds of bindings. And if we proceed down to or actually work on the so called second factor. We should really look at how this is this is done in provisioning flows, in other venues. But that was my, personal observation in in Echer. Do you wanna Yeah. So I think I think I liked Tommy's sort of attempt to rephrase my number 1. You you know, know, t And the re the the important engineering question or perspective is, is as I said, we just charter item. Is to build a secure chain a security channel between, like, a and b, right? And The question at hand is do we believe that the information in the In Russian channel can be treated securely enough it can be used to create that channel with no insular information. And know, if you have to, like, stand on one foot afterwards or enter a pin code or, like, show you or, like, you know, have a smart card or whatever. Not really our problem. As long as we as long as we believe direction ham was good enough to deliver the credential on the way we claim we're gonna deliver. Right? On And if that's true, then then, like, that we can and we can call it what I call water the way Tommy does it, we're good to go. But if we do not believe that, then we're and we're involved too. Right? And so that's the distinction we have to cut is do we think that the the the"
  },
  {
    "startTime": "00:50:03",
    "text": "that the international channel is good enough for you to deliver the thing we claim to deliver, which is secure channel between A and Hi, Aaron. Frankie from Honda, but I'm here as an individual. I am hearing a lot of Every time we talk about this channel, I hear new ways that it going to get used in completely different different things that have completely different properties. Once you actually look at the end goal of it, and I'm a little bit concerned that that they're that were, like, so narrowly scoped here on this channel that we're, like, completely ignoring the rest of the entire Space, including other things in the IETF. Like, like, like Dean was saying, there's a lot of other work going on, there's a lot of prior art to draw from maybe that prior art doesn't do exactly this you know, narrowly focused channel delivery thing. But at the end of the day, this is not That's not a That's not a goal by itself. The goal is I'm I'm sending a key to somebody. Right? And the other The other, The other question I had about about the sending the key problem is I haven't didn't see anything in the design documents, and I haven't heard anybody talk about whether this is a delegation problem or a copying, problem. Like, is the goal is the goal that I'm sending it exact copy of the key to somebody by which I mean the thing that reads the key cannot tell the difference between the two. Or is the goal that I'm delegating my access to somebody where the thing reading that key can tell the difference between the 2. Using it. And that, it turns out is a very important property that's gonna affect how a lot of this other stuff works that I haven't even heard it. He mentioned yet."
  },
  {
    "startTime": "00:52:00",
    "text": "But it has, for the record, it actually was, topic during our both forming. Working with forming process. Right? It didn't seem to make it into any of the documents. Then then so the the charter or the the design document. Right? That that that the intention here is to look at the the the copied type situation, not necessarily the delegation type situation. Right? That wasn't, maybe for Macer. Yes. Yes. So And I see you're guessing to meet you in the queue so they no one disagreed with me. But as I understand the situation, is this is attended attempted to facilitate, like, a broad array of existing you know, vertical mess credential transfer mechanisms of, like, varying levels of satisfactory and various design structures. And so those are, like, all opaque from the perspective of this is a problem, which you may think is terrible. I'm not sure I love either. But, like, that's the context of this. And so, like, there's like some more peak blob because we'd route from E to B and B to C, and we have no idea what's in it. Purpose of this is just a facility that transfer so I'm not saying I love that, but that's the context. I think this is I guess if I can respond to that, the it it seems like this is a lot of dancing around a problem of, like, trying to send a message to and we have a lot of ways to send messages to people. As demonstrated by the messaging towns that we're talking about using in the introduction, like ultimately, I can just email a blob of data to somebody, and I don't need a protocol to do that other than email. So, like, This feels to me like we're doing a lot of reinventing of a messaging channel that has no actual purpose of itself other than being a messaging channel, which there are many of those already. And instead what we're actually trying to do is transferred credentials, you have to look at the other questions and the other problems in other properties. In order to actually solve that problem. So I guess I don't I I guess what I'm I guess what I'm getting at is"
  },
  {
    "startTime": "00:54:00",
    "text": "don't think that option 1 of just blades forward with this path of assuming that our problem is so narrowly scoped that we can ignore the rest of the world is actually a good plan plan. Plan. So we have, 5 minutes left to go. We have a couple of more people in the queue. Dimitry and Yogesh, you get to round this off. And then we're gonna do I just a quick poll to get a feel for the room where we are with respect to the question And we're gonna add, like, a couple of questions here. It just not just the 1 and the 2, but do we actually wanna pursue both in some orthogonal way or, you know, I have no flu and I don't wanna answer the question right now. So, while while purchase prepping that, yeah, Dimitry yogash. Thank you. I'll leave. So technically, it's more a delegation problem answering to, Aaron's question, but in some cases, the copy, the exact copy of the key can be passed, but in more practical cases, it's, delegation. So I delegate, My friend, to get a new credential. Maybe we'd even limited, access rights or somewhat else, in terms of time, in terms of what the facilities can be accessed with those, etcetera. Yep. That's all. Thank you. Yep. Dmitry. I okay. I think I'll take my time since the meeting. Yep. Yeah. No worries. So thank you for that question, Adam. Is but the At least setting in draft or requirements somewhere we had that the credential could be a exact copy could be a move or it could be a delegate."
  },
  {
    "startTime": "00:56:02",
    "text": "The reason it's not specified is because all pass things are possible. And as Ekel mentioned, it is a OPEC top for the purpose of this channel, And to answer that second question, why can't we just send it over email or whatever that's a blob. Right? We did think about that if if that's possible, but the thing is that some of these protocols do need back and forth for the car key through to call, actually, it was sending, signing request back and then that sign and send back. And we cannot expect the user to essentially sheffered that process constantly. You can send, email back and forth with different messages. So idea was user takes one action handset off to a channel that will take care of this data transfer under the world. And, hence, we need that channel. And I guess for these options, I think, as I mentioned earlier, that we we need to assume that the channel may not be fully secure all the time. That's Thank you. Alright. Aaron, did you wanna make a comment? Because then I'm gonna look through the poll in many apparently many stages Okay. I have a multi question I I just wanna say that if, like, if this is in fact a delegation problem, there's are awful lot of fire art art. To look at. Maybe you might notice my shirt I lost. Which is in fact a delegation protocol. So, like, just taking a step back, I feel like before we can just, like, rush into making this channel I think we need to document the existing work, and show how it relates to this problem and show how it either does or does not solve certain aspects of what's being requested here. Which brings me to my second point, which is that I keep hearing new information brought up. When anybody brings up these questions, that does not seem to be written down in the current documents and"
  },
  {
    "startTime": "00:58:00",
    "text": "that needs to be solved too. So, like, we need a better description of the problem space. Because everybody otherwise, everyone keeps talking past each other trying to solve different problems because we're not actually starting from the same place. Alright. Actually close to CUNA and Simon, if you have something very quick, Yeah. I just wanted to I agree with Aaron that I think one is very thin if we are saying There's a secure introduction channel. Like, you can use it to make a secure channel. And also what other Eric said earlier it might be nice to have this defined somewhere. How do you If you just send somebody a link over a semi secure channel, how do you then on top of that, add, like, a time based one time use thing to get something a little more secure. Alright. So I'm gonna do this now. We're gonna do, like, this in many stages because apparently, you can't do multi questions anymore. So I'm gonna do one for yes, or no thumbs up, thumbs down for like, treating agreeing with Echeronop on option 1 there. Right? And then I'm gonna do the same quest for option 2. And then the third thing for a third question for I think we need to go back and rethink the whole thing. Right? And, all of these questions, there's a yes and a no and a no opinion. Alright? So we'll try do this Alright. Letting it run for a few Sorry, leaf. Could you restate that question? So the the the thing we're the hand the show of hands right now is do you agree with Eckers assessment on option 1. And then the next question is gonna be the same for option 2. Right? So so so the this question is, should we move forward treating the introduction channel as security."
  },
  {
    "startTime": "01:00:03",
    "text": "Implicitly. Yeah. We're we're moving forward with, like, some version of the currency describes discuss protocol with the assumption that the interaction generally Alright. I'm gonna drop it now. It's about 5050. A lot of people, Have no opinions. Alright. Option 2. Yes. And a yes or no. And the next question will be, you know, we we need to do something else entirely. To clarify is saying option 2 Does that include the option to a pro split them up as 2 separate deliverables. Right. Good point. I will do that next. So this option is do it alone. Option. Okay. Fine. Yes. And the next question will be Let's pursue both. But as orthogonal pro, orthogonally, Alright. And gonna stop it there. Both or Alright. It's getting more support. And the final question will be you know, let's go back and redesign We we don't even we don't even know what we're doing. Is the next person. This I right. But it is getting a lot of support. Which is good. Then we know what we're gonna clarify on the list. Alright. Final question. We need to rethink Alright?"
  },
  {
    "startTime": "01:02:29",
    "text": "Alright. I think stabilizing Somewhat Maybe Alright. I'm getting it now. So we're out of time. Thank you very much. Let's continue this on the list. There will be an inter, interim meeting between now and Brisbane, definitely maybe even more than one see you on those announcements. I will I will send them to the mailing list, then we can Yep. Yeah. Is this interesting."
  }
]
