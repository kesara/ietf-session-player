[
  {
    "startTime": "00:00:33",
    "text": "Okay. I'm gonna give everybody one minute to settle down and we can get started. In that one minute, can I get help with note taking, please? besides you, Peter. I'm hoping somebody can use hedgedock. Thank you, Peter. While we have 2 Peter's, Well, your PIETR You will be on Hedgestock. He's doing it. in a separate document. So thank you. Okay. So I've opened up the chat, and I I've said hello there. but I haven't gotten any responses. For those who are remote, can you Can you hear us? Thanks, Akira. Thanks, Pengling. Okay. Let's go ahead and get Arden, Good afternoon, everyone. This is the trusted execution"
  },
  {
    "startTime": "00:02:01",
    "text": "environment and provisioning working group, So if you do not you're not expecting to hear about teeth, you may be in the wrong room. Welcome, everyone. Why is this not advancing? There we go. Okay. So hopefully by now, everybody's familiar know you're with note well. This is an official IETF meeting. So The IETF rules apply. We lost somebody. Thanks. Alright. I don't know why the The PowerPoint didn't is not sharing well. So For those who are here in person, if you're not logged in we just pass around the IETF is trying to make sure we capture attendance properly So for those who are here in person, And if you're not logged in to the meet echo, we're passing around the QR code scanner. For those who are remote, make sure both your audio and your video turned off so that we can have and you can have the best experience strongly recommend that that you use a headset when we have the discussion, then you are free to unmute and put your video on, but you're not speaking, please. turn that off. Alright. So Reminder, code of conduct, keep the discussions professional, and respectful, And I will thank both Peter's for helping take notes."
  },
  {
    "startTime": "00:04:03",
    "text": "I don't know why we have to jabber. We don't do that as much. So, Peter, Kesselman, are you gonna use the hedge stock? Awesome. Thank you. Yeah. The hedge talk is a live document. So if you wanna keep track, Thank you, Peter Yee. He takes awesome notes. He will not be using HEDJ doc. But for those who wanna keep track of notes that Peter Kesselman is taking You can look at the hedge stock. Alright. So with that, let's do the agenda bash. So we have a full agenda. We do have time at the end for discussion. But let's spend the next few minute or seconds, agenda bashing. So before we go through this, want to congratulate the authors of the architecture document because it's finally now in RFC, 9... 397. Done. Check. So, Thank you, Dave. Ming, think we learned they're not here, but that was a a long long and good piece of work there. And and a Keira too because he contributed a lot of feedback to it. Okay. So with that, I think we're getting close with the protocol Shepherding feedback, And then a cure is gonna give us an update on the implementation updates. And then we have pengling, with the adopted draft on the confidential computing use case And then there's a couple of new drafts that are gonna get presented. using TEEs, distributed provisioning, and then we've got Juan, is that how you pronounce your name? here, here, Joanne. Okay."
  },
  {
    "startTime": "00:06:00",
    "text": "Yeah. When I when I saw because I'm I'm Latin speaking, so I was like Juan. So Juan. Okay. We'll talk about her draft on confidential virtual machine provisioning. in the cloud environment. So Any updates, changes, modifications to agenda going months, going twice. Alright. We can move forward So Dave. You wanna come up, And Alright. Alright. Draft Fifteen. Dave Taylor. Next slide. You don't have to click so. Alright. This is what's happened since last IETF. Right? Last iETF, we were discussing draft 12s. And so since last IETF meeting since March, we've had 3 versions of the Internet draft kit posted. we've had a working group last call that has gone through. and we've had the document shepherd review and write up. and then we've had a hackathon. So a lot of stuff has happened since last time. Very few things to discuss compared to previous meetings. but there is things to discuss. And so I'm gonna cover those My goal is that after this meeting between meaning after, like, this physically mean that we're in this room right now and before the end of the week, The post draft 16, and the document shepherd can then do whatever the next task is. We can ask at the end, whether there's another working group last call or document Shepard review or whatever, you can decide coach. And so the goal is to get the ISG as soon as possible so that we can also be done with this one. Okay. No. Yay. That would be Wonderful. So often we say, what set of normative references? What are we blocked on? And so here's"
  },
  {
    "startTime": "00:08:01",
    "text": "the list out of the things that are not already RSCs. Like, the deep architecture is already in Rfc. So it depends on one rat document that's already in the IESG. So that one's already ahead of this one. Not a problem. And it depends on 4 suit documents. Right? The first one is already in the ISG. I'm getting a little bit of feedback interesting. The second one, the has already done a working group last call. as in process of being updated. We talked about all of these yesterday in the soup meeting. And the last two is a result of the soup meeting. We would decide to they were either are ready ready for last call or or would be ready for last call within the next couple of weeks. k? And so that means that I am not particularly worried. Some of those might you know, if this one goes to the ISG and might still be waiting for either MPI or report. But the goal for both of those is to get them done before next IT. Yeah. And so that means if we do all of our jobs and as chairs getting to their suit authors to do things, then In theory, we could be done by November, so we will see. You will see. Yeah. because you're just gonna go through IETF last call and everything. So you never know what's gonna Right. It's a question of Whether we wanna wait and go in parallel with the other ones, or we can just have it go through. And then -- Yeah. have it just sit in the queue until the other ones go through. Yeah. I don't think that there's any reason to wait given that there's and and I I say Ken nodding as well, that there's probably nothing that we would want to change in this document as a result of feedback on one of the dependencies, and that's because there's a good division of labor there. Yep. It's very unlikely And so point is I don't see that there's any reason, like, remove text because of we'd be sitting there for a long period of time. No. I I I'm not suggesting we remove text. And, I mean, it's 6 of 1 half dozen of the other, whether we we wait you know, There's no -- I don't have a strong opinion. I don't see any reason to wait, but that's up to the chairs in shepherd. So"
  },
  {
    "startTime": "00:10:02",
    "text": "Alright. I'm fine moving it forward. once we're ready. Next slide. Okay. So I'm gonna actually talk about the changes since I was standing in front of the room at in March. So Let's go ahead. Alright. Alright. Alright. So because anything that we talked about in March has just been done to what we talked about in March. k? So anything that we presented in March, we said, yep. that that that that that's done. So I'm not gonna re repeat any of the issues we talked about Everything there is new because we had a working group last call after last IETF. And so a couple issues that were raised in working with last call and that were then addressed. And so I'm gonna talk about those first. the first one, is Akira correctly pointed out that the deep architecture talked about attestation in both directions. Right? So both the TAM and the Deep agent can can both attest to each other. However, the protocol document only previously had it in there for one way. Right? That the TAM could tell whether the chief agent was trustworthy. Right? so that the team agent would send its, you know, attestation stuff off and the team would look at it and say, yep. This is one of my valid devices to manage or it's not. There's nothing in there about the other direction. Christ, Christ, Christ, Christ, Christ, a tape device, TIP agent couldn't say only gonna accept it from a noncompromised TAM. Right? The architecture document had that scenario in it, but the protocol was, like, missing the fields for that. k? And so, As a result of that, then we decided It was not that hard to actually add that in there given that we had defined the various fields and you're just kicking it in, sticking the same fields and a message that goes in the other direction, And then you can repeat a lot of the same stuff. Right? without having to re specify it. And so the way that that works k. is there's a message that goes from the agents to the TAM, k? And so we put the stuff in there so that you can say, Sorry. I need an access station evidence if you didn't send me any or, you know, your access station payload. whether it's background check or password model. And if you're using something like a freshness check using a non"
  },
  {
    "startTime": "00:12:03",
    "text": "that's where you stick the knots, right, that the other guys to stick in as evidence. Right? So and as as an example, You'd send the query request and then some error comes back and says, hey. I need you a test, please. And by the way, here's your nots. k? and then the TAM can then send another message to the agent with a new carrier request. that actually contains its cessation payload, which incorporates the result of using that knowledge generated. k. And so those are there's no new messages, although in the worst case, there's an extra round trip there. Because you gotta send one message get the message back that says, sorry. You didn't send me with the right notes. Here's your right notes, and then you would get k. So there you go. So that's the the mechanism that we put in. Next slide. k. Unless there's any questions about that, the other this pure editorial stuff, which has already been addressed in that work discussing, and then there was 2 issues that were filed at the hackathon over the last Appreciating weekend here. Kinda. No questions? Alright. We'll go to the the hackathon ones. Okay. So here's the first one. So we have the notion of this error return for a query response. Right? And so The query response comes into the TAM. and the TAM looked at the query response, and it doesn't parse correctly or it doesn't attempt or whatever it is. And so what does it do? Right? And older versions of the draft that Tam only had one recourse well, 2 recourses. It can drop the packet or it could try to update the software on the agent to say, here, sweetie. He should be doing the right thing. Let me fix your software Yeah. 5, the problem with that is that there are various scenarios where there is multiple TAMs for the same device. So, for example, you got one TAM that can update your firmware. in a different TAM that's responsible for some little app. k? and the TAM for the app, might have a failure. And, of course, it can't update the firmware. That's the other time job. It doesn't have permissions to do that. That's a different trust domain, in the suit sets. ise, And so what does that TAM do? Keith could drop the packet, but that doesn't really help that"
  },
  {
    "startTime": "00:14:04",
    "text": "whoever owns the chief agent, now he'd have to go and look at the logs for the TAM. Right? And so instead, we said it would sure would be nice if there's a way to get that error information back so that the team agent can log it or flag it to a user or whatever it's appropriate. And so we said, okay. Well, let's put some information in there because, again, we've already got that in one mess in one direction, k? That the team agent can report to the TAM's mirror information there was no fields to go in the other direction. said, gee. Given that we've specified it once, can't we copy the same fields and the other message in in direction. say, great. We can do that. So that's where this comes in. So So we added into the update message, error code and error message. Right? Which has already existed in the query response. We have the same feels there. k? So you can do it the same way just in a different message that goes in the opposite direction. So you can update them and update 0 components in the things as here's an update. I could update your firmware or I could update 0 components and just use the same message and say, here's the error message. k? It just reuses the same message. k? Next slide. Okay. Okay. Okay. So here's the what we did. So draft 12, actually updated the syntax, and I hit those fields in there, but it didn't actually update any of the text about the behavior what a TAM does. We didn't see actually use them for anything or how you use them. Right? So the the fields were in the CDPL, that's all. Right? And it also contained this problematic text about other areas in the career response still said, The TAM drops the message, and it may do implementation specific stuff too. And so it's kind of ambiguous to say, well, okay. This dropped the message. Did it mean that you're not allowed to send an update message? Or does it mean that sending an update message with the error stuff is actually implementation specific detail. So that's probably not the right thing."
  },
  {
    "startTime": "00:16:00",
    "text": "So we discussed that the hackathon among all the implementers that were there. both locally and remotely. Right? Akira participated in the hackathon remotely, and so feel Hanas and the Sony Sun and I and Akira, I'll talk about this. And we said, yeah. Let's do the same thing here. And so we generated a poor request during the hackathon, and then we reviewed it, and now we're reviewing it the rest of the working group. think of this as the design teams reporting back out as to what we all talked about implementing. So next slide, you'll see what we did. Did you actually implement it during the hackathon? I did. I don't think they did, is. He has one presentation during the hackathon. because I filed this when trying to do the implementation -- The first place. -- profitability. Yes. No improvability yet. Yeah. Okay. Although the implementers, I think you you look your implementation and said it would work if you did it. Right? So that's good enough proxy for me to to say before request was good to present to you guys. So Alright. So here's the changes in the actual text. Tay. first one is in the 10 behavior section says this is what used to say that the bold text is added. Right? This stuff is not bold. It was there before. Bye. these requirements are not met. Right? So if something doesn't parse write, it doesn't a test write, or whatever, that Ham drops the message, And I add and sends an update message containing an appropriate error code and error message Now let's just actually use it. say. So the Main point here is because we said, should it be a May, a shoe, a must? And so this language right implies it's a must. k? k? k? If you're going to drop it, k, then you send in send them an error. Fi. and we made sure that this is only in the query response processing. You would never do this in an error processing the error message. Right? You don't want an infinite series of errors. Right? This is not an error message, so it's safe to always send an error there. k? k? you'll never get an infinite loop. You just you never send an error in response to an but you can send it in response to a normal message. That's fine. Okay. So we did talk about that. So that's one of the 2 text changes is saying it's a must. If you're going to drop this the career response, you send an error message. sent an error message by putting it"
  },
  {
    "startTime": "00:18:00",
    "text": "and an update message with no components. because that's where the fields are. If you have our components update, you can do that too. If you are the TAM for the firmware, you can say, here's the error. And by the way, here's your new firmware. Right? that that fixes that bug. or or, you know, upgrade to the latest version that would be in policy, whatever it is. Alright. The other place in the document that had to change was where it said, you know, the the crossed outline's replacement. In this case, is talking about attestation failure. says the TAM can used to say, Cam can attempt to use deep ducting entrusted components. Well, of course, that is false if you're like an tam that doesn't have access to that trust domain. Right? That canned is false. Right? And so we had to update it to say, okay. It might attempt to do that. If the TAM doesn't have permission to update those components, gonna happen to have different TAMs manage different components in the device. The TAM instead responds with an update message containing an appropriate error message and error code at the station required. Right. Right. So it's the same error code that we're using in their direction. Right? We're just saying a lot of these error codes are bidirectional error codes can happen on either side, because things like attestation and message parsing and certificate and that can happen on your side. So we're just reusing the same area code space. k. Same definitions. That takes me to the next slide which is we need editorial updates to the various definitions of the error codes. Side of the error codes were phrased implying a particular direction that now needed more agnostic wording. So here's a couple of examples. Right? One error code was defined as the teat agent doesn't support the deep protocol version the request message. k? says, okay. There's there's a version mismatch. She sent me a version 2, and I'm only version 1 or by versa or something like that. k? But that could happen either direction now. Right? if the if the person of Curry re query response said, That's not the right message. I sent you a courier request version 1. You sent me a courier version 2, you're just wrong there. Right? And so what error message you use? We said, the tea, the tea, the tea, the tea,"
  },
  {
    "startTime": "00:20:04",
    "text": "Agent changes to implementation as being the term that the document is using right now for agnostic between TAM and Deep Agent. It says, keep implementation. and doesn't support the deep protocol version in the received message. now it's independent of whether we're talking about a query request or a query response, whichever one you receive. k? So this is just one example because those words, it's like searching a place throughout the error section. Right? because there's a bunch of And then another example, this one was previously a TAM side 1. as a TAM receiving this error, what it might do. k? And this says a deep implementation receiving this error because now the error could come to a deepation. k? a a a deep implementation receiving this error might retry the request, and then retry the message it sent to the center of the error at some later point. Right? So it had to have some language to be agnostic. Is it resending a query request or sending a query response or whatever? just having agnostic wording. So all of these are pure editorial. There's no behavioral changes here. It's just saying a lot of these are useful. what I didn't do it for, Next slide. and you can double check my work This is the list of all the errors defined in the mess in the in in the document. And I had to decide which ones could act be bidirectional versus which ones were actually directional specific. This is my answer. all the ones in the top category, are ones that could apply and parsing a query response. all the ones in the bottom, can never apply to parsing a query response, and that's because the ones in the the first two on the bottom have to do with how the capability negotiation works. capability and negotiation, always works, you know, one-sided where one side sends, you know, here's the set of supported ones that the one makes a choice. k. k. since that one is direction full, the quite revealing negotiation, both of those capability negotiation errors, they can only ever occur in one direction. And then the last one is because TAMs don't process manifest. Manifits always go to the agents. Right? So I didn't have to make any wording changes to those 3."
  },
  {
    "startTime": "00:22:01",
    "text": "All the top ones, wording changes match what was on the previous slide just in the appropriate pronunciation. k. That kind of makes sense to people? k? However, the implementers are nodding, but they were in part of the discussion for us. So okay. Alright. And I got only got one other issue to talk about. So it's that that was the major thing that we talked god and not yours working on implementing and so on. So here's the other one. And so this one, goes down inside the each profile. So now we're down in the each profile, the defined by the the deep protocol spec right now. and it has a kosekey fingerprint. And so the t profile or the e profile section currently says, here's the existing text. Get identification. Key ID is used. or a cozy key ID is used with a key ID is the hash of a public key and explains what that public key is. Right? This notion of it's a hash of a public Well, What type of hash is it? Well, see those sections for discussion, the choice of hash algorithm, you go to those those sections, they say it's 250 shot 256. Right? So it's a shot 256 hash of the public key. That's what you get by looking at the document right now. Well, it turns out that there's a document here that's on the agenda for the week, and I think it already happened. Okay. The cozet. And so maybe if you wanna get up the mic and just tell us how that how that question went, but this one is actually the details of how to compute that hash. written in a very short document. It's a Internet app, but it's not very long. It's a couple pages. Right? And and so our choices are, and so I wanna hear how it went in that document. If somebody wants to get up was there. But our options would since this one has not been addressed yet, Right. Right. That's why draft 16 stuff hasn't come up. Right? We can either normatively reference this new draft, and that adds it to that list of stuff before, and this was proposed for adoption in the Coz working group. Not for working group, last call, but for adoption. Okay? so that one will slow it down. Another way the thing that we could do"
  },
  {
    "startTime": "00:24:01",
    "text": "because find a way to informatively reference it we could choose to not reference it. this is what I would like the working group to tell me which one of those 3 approaches we should So I'm curious to know how it went in the cozy working group. Hi. This is Jorge. I submit this issue. So my intended was not to block the making the standardization process. So us some the kind of descriptions is so So not so much for kindness for implement task. So maybe so I I think so. the probably, so the key protocol is a so used by the implementation. So maybe so Yeah. My our ID is user 4 for improvement us. And so and to to make interperabilities of agents and the TAM, the implementation and so on. So so summary. So, yeah, my Hope is Mhmm. b So informative -- Mhmm. -- the foreign currency is good. Yeah. Mhmm. Yeah. I I maybe so yeah, normative references also user 4, but so this is a so not critical part of using our tip protocol. And then how was the reception, the close 8 working group? it will it be adopted? Or what was the -- Yeah. That was a a Hi. This is Hannes. There was a call for adoption which was started early July, and there was a lot of positive feedback. And the call concluded already. So I sent an mess so that during the meeting, the chair's notice that they should have already"
  },
  {
    "startTime": "00:26:01",
    "text": "sort of summarized or to conclude the call I've sent them a message, a reminder, So it should be, like, anytime they have the chance to do that. So there was no negative response only positive feedback. So in that sense, and it's in scope of the group. So it's kind of feels like a no brainer. we had no open issues when we presented the document. Prenton then raised one open issue, which where he wanted to include the the some print of the symmetric key, which we would have to add, but then I think as you said, it's a very simple document. It's just mechanics of getting this done and so Yeah. So I expect that to advance very quickly k. Some sounds like it hasn't been adopted yet, but that's more procedural. It's only click the right buttons. Right? and it's short enough that it sounds like it shouldn't be that long in the working group given the shortness of the document. So I guess the real question is because, you know, I I I'm kinda hoping the answer be out of these options. That's the one I like the best too. But I guess the question is, from somebody else who's actually implemented this part of the spec here, Do you think that the text that I'm citing here plus the text in those two sections there that basically says the hash algorithm is shot 256. do you think that that is sufficient to unblock an implementer in which case, it's it's informative. It just gives you more details about it, but it you can still do it with only reading this text right here, or do you think that you'd need stuff that's in the cozy key thumbprint in order to correctly do it in in a proper way. Right? You think two people would have different implementations would would not interrupt without that draft. e. they will have intubability problems that point when the tried to come up with the same values because it they would if they picked them in the wrong order, wrong set of elements. It will cause some problems. However, having said that,"
  },
  {
    "startTime": "00:28:00",
    "text": "I think I'm I'm fairly positive that this document actually progress is faster than the than the product code document. So I don't believe, ultimately, it would be an issue. And if you go for b right now, Mhmm. And then shortly pick on before the document reaches the RC editor and goes through the all these rebate processes then update it as as as to meet the prices? If you think that you could have 2 implementations that don't interrupt just using the text that's in the document right now, then I think it would have to be a. Yeah. I mean, based on what you said, Hannah, Because that's why we also wrote the document. for interoperability, it has to be a. Yeah. Because we were trying it in in in different context, so it's not the only context where this issue I mean, and and really, For the process, whether it's normative and or informative, I think, we still would want to parallel the process. And so we we can still put what I'm saying is it shouldn't stop us progressing it given that you're in the you're already in the process of adopting these sobe draft. Yeah. this one, we haven't written the poor request yet. because you'd write it differently depending on whether we go with a and b. And so -- Right. -- it if we go with a, we'd add it in as a normative reference and use must language Right. But I would agree given that that the draft is describing with clarity how to generate the hash. an interoperability, so it has to be -- -- three pages plus all the boilerplate stuff. Right? It's like, is short. Yeah. Yeah. that So Okay. Any objections to doing a? I think it has to be a. which we will add a must in there with the normative reference. No objections? Okay. That was what we needed to know because not not we can actually author address team posted. Okay. I have another slice or was that the last one? Okay. Yeah. So there you go."
  },
  {
    "startTime": "00:30:02",
    "text": "Are there any other issues that we know of, given that we've already gone through one working group last call, else that somebody wanted to talk about? because I think I've collected everything here. It's either already been fixed because we talked about it last IETF. It was trivial and editorial and already fixed. it's on the list we just talked about. And so Unless there's anything else, then I will get another draft posted within the next say, 2 days or whatever. And now that you know the content of what has changed since working group last call, I will let the chairs decide with the viewer with her. I'll confer with -- Yeah. whether you need a 1 week working group last call or just a doc check with Didu. But given that it's mainly been the implementers So Akira, you know, I could ask you too because he was the one that did some of the Mhmm. The issues. Yep. If he's comfortable with the changes, that's number 1. Number 2, to the implementers, Do you feel confident that what's written in the draft is sufficient now? And the only reason why I'm asking is We've been maturing the draft. then every hackathon we've come up with little, things. They've they've been getting smaller. Right? But this is where I'm trying to gauge. I think all known implementers are here virtually or physically between akira, Hana, Ken, Sylvie, Sun, and Ming That's the set of implementers of ever all the implementations that we know of in any part of the spec. And Nikita just posted no objections he's comfortable with. I'm presuming Akita with both the resolutions. implementation maturity. Yeah. I'm Kent Taqayama, other implement there. And -- Yeah. Yeah. There is a walk in progress for request on the tprodigal document, which is adding a dating the personalization better suit manifests. So which uses Now we're I'm testing"
  },
  {
    "startTime": "00:32:02",
    "text": "the the manifest is and I think it's correct. that I I have to validate the with other implementation like pipe I'm ask asking because they're working group member, to validate the encrypted payload. So then then After that, I can No. Yeah. can be confident. with the document. Yeah. Okay. we have lots of different tools and stuff that people have been running to make sure the examples that have hex and stuff are all correct and to get out sync, and then they get updated and stuff. And so we're sure it can and Well, so pretty diligent at catching all of those as changes so to the point of what you just mentioned, it seems like that dependence and the issues may fall more on the suit side. than on the deep side. Yeah. That's what I'm trying to gauge. Right? Yes. So -- Okay. suit, suit, for encrypted payload the instant manifest document. Yeah. So -- Yeah. I think we have one example suit manifest. It's like a trivial one, I think, in the deep protocol appendix or something like that. that's the only case that we have, like, Yeah. I remember this. And I think diagnostic notation for a suit thing, I think. Okay. So I will speak Go ahead. Oh, Akita. Oh, Akita. You're in the queue. Go ahead. Why am I not seeing the key Oh, that's why. You are on mute, Akita? Oh, sorry. Yeah. There you go. Yeah. Yeah. I like the word keepers. So yeah. Ken was fucking right now was it depends on the it's the implementation of the in and soup parsing is not finished making it compatible"
  },
  {
    "startTime": "00:34:02",
    "text": "all the way. So it's not really the tip a protocol draft, So it's it depend it's about the dependency of the library we which using in our implement system. Right. Understood. Understood. Okay. Okay. Okay. I think that's everything. Right. Street It's a good thing we have Slop because You're 8 minutes over. That's good. But I think we on the on the implementation side that Ken also mentioned in, Akira, I I think they'll be extremely close. we just had the discussion in the in the suitworking group on defining some last things, which actually then make it possible to update the examples so we have them streamlined throughout -- How long? So the question is, to both The authors of the draft and the implementers, How how long before you can get the new draft. And how long can the implementers 2 days, Sounds like the implementers may need more days. to validate. Yeah. We we we might need to or we could do a call in in August just to sync up just to make sure because we need to different libraries are impacted, so we need to synchronize things, and we'd have to talk to Lawrence on the deconsie library I've been working with him on that. And then ripling that into sort of you ordered the the the -- So do you want us to host a virtue or do you just wanna do your own independent in August? It's a to you. We can Yeah. since half of the issue is about the relationship between sutras and Deepgram's implementation. and suit is looking at having a virtual infotrum in mid September. wondering if we could just I'm"
  },
  {
    "startTime": "00:36:00",
    "text": "combine it with that and say, we don't have to have a separate deep interim. We just use the suit interim for disability. -- up there. Okay. Yeah. So that pushes it the to the September Okay. and decision. This is Dave Holtermeyer. I just wanted to jump in. I'm not in the queue, but we can coordinate on on that and Okay. Yeah. It makes sense. I got 2 thirds of chairs for suits in. Okay. Well, this is all to gauge the maturity of the draft, so I can sync up with Tido. I mean, given that the authors and the implementers have been aligning and on the content. I don't know that we would necessarily need another working group last call. but I wanna double check with David as well. because he's the one that did the shepherd write up. Okay. Well, we're a little over. but that's okay. Next up, we have Akita. Let me Alright, Akita. You're on. Oh, yeah. Yes. I'm just going to talk about the updates on the implementation and the stuff I did, it at the hackathon? Next, paste, please. Yes. After the itiffone 016at at the Tokyo end, that was January, February, March. Yeah. Yeah. I I added a Wiki page, And the the reason of adding the Wiki page is the in the next slide, please. Yes. So many people What who are"
  },
  {
    "startTime": "00:38:00",
    "text": "who was attending in at the tip working group session who who are not the author I'm not I'm not trying to be humiliating any author or something. That the people who what's know to tip wanted to understand and more deep deeply in the t. because it looks interesting for them. So I thought I should make up some introductions slide So my real initial intention was to put place the post introduction of the tip explaining about what how it works What what's the use cases? which Internet draft, which r RC to look for to understand the deep for it's for something who is new to people but but but but wanted to understand why it's important. and And so but at the same time, at I thought it will be a good place to upload the implementations. So I added open source implementation with the links to documentation with the PDF and HTML call file and the GitHub repo And, yeah, it's could be a little bit Japanese way, but source source call to which used to be common in Slack where a's in Linux, but yeah. I yeah. It's still used in Japan, so And next page, please. So I'm going to talk about the implementation I uploaded on the Wiki. It was released at theendofApril And it consists with 2 components TRF and t device. Its detail will be explained in next pages. And"
  },
  {
    "startTime": "00:40:00",
    "text": "what what's t TRS and what's the device, but The first, I'm going to explain about what what is deep device. Deep device is implementing the feature of Deep Agent and the t t architecture and t protocol draft. and ttbar sticks. So there's a 3 main component, and it's t agent TIPAPPROPER, Tom, and oh, there's one more. It's a it's a verifier But but Yes. It's deep devices implementing about what's the tip agent do. Yes. And TRF Providing API and SDK environment for the deep device to run on all different CPU Intel, arm, and risk 5. And and the implementation uses is so business time total as a time. And next slide, please. Yes. So this is more easier to understand that relationship. So TRF high is the difference of the SDX and opening Keystone. because they all have a different API. However, the intention of and of the 60 of the the SDX of the and Keystone pretty much similar So it has similar a function with a different name and with different parameter So it's ab adding the wrapper on all three implementation, which will make it easier to implement Deep device, which has a tip agent feature, with one source code. is a next page, please. So and, also, when I implementing this"
  },
  {
    "startTime": "00:42:06",
    "text": "implementation. I yes. software supply chain is getting important as a there's other working group of skip how how different a skip skip skip skip skip is and also, historically, it was really important to how to update each component will if the one of the software component has is found with the security bug. So I I did a little bit of It could take care on this implementation So it has all the copyright knowledge license statements. statement in Expedix, I I tend to first, so which I which license this component will is using without reading the license statement. just parsing the one line as a Speedex ID in which is easy to understand what what what's this component with with it with and with what is the license are, And And also, this was in the provide providing Docker image, product binding make file built in the production build providing CI script and stuff This was primarily for our are develop increasing productivity in our in the developed on development side, but it's it's good to provide at at the at the same time for the as a software component, So as to make it easier as a software component as a bomb or Yeah. component parts or something in hardware engineering. side, and Next page, please. Yes. And, I guess, Yeah. This is nice read me documentation, Yes. It's a"
  },
  {
    "startTime": "00:44:05",
    "text": "always having a good documentation is nice, but it's always burden to synchronize with the implementation and That's it. sync up. So if every time you changes the source code, its headache to sync up synchronize with the documentation. So I use the oxygen, so they will read scan through the implementation from the source code, and generates the read me in the p PDF format and and like this in the slide is HTML format. And this still ML format is it's more engineering engineer and developer friendly. Next page please, please, Yes. And this is the hackathon. Yes. Originally, I posted estimated version of the documentation as a tarball on the Wiki page, But Dave, They've yeah. gave me an instruction for for hosting, what's the HTML, and in in Omni. entering, is the rendering place. So it was my first time to use GitHub bio. and and the documentation at self was only written for Ubuntu 20.34 instruction, and some of them was failing and to build on 22 point 04. So I add the build instruction for 22 104. And and And, also, the third thing was the more critical one. When the source code was released on the public it it had many pointing URL in the local repository, which was which was before it was becoming a public. So I I fixed all the"
  },
  {
    "startTime": "00:46:02",
    "text": "you are you are appointing with existing public repo repository. And and, also, I had a report from some people having a spill error So yes. And then I pushed the changes to the read me and Yes. And next page Please, please, Yes. The next step So deep deep heavily relies on suit and rats. So there was a discussion right now at the Dave's talk about the Ken's implementing example, how to Yes. add example and the deep draft, but is even in the implementation side, it's My implementation and Dave implementation in Kent's implementation. Yeah. We yeah, we in the future, it will be nice to have a t in suit in rats, implementation, all working on the tip implementation. because they all interact with each other because RATS provides verifier And and then which verify which we should use for the our implementation. And And right now, everybody using their own suit manifest parser It's it's probably, it's okay, but it might be good to have one implementation using all or or people the same so we could have more or easier to bug fixing. and Yes. You you have to go hay on the queue. Nikita, I don't know if you wanna Yes. Yes, please. I think a question or Go ahead. Yeah. Hi. This is Jorge. So I want to report to news about the hack zones. So One user is so"
  },
  {
    "startTime": "00:48:00",
    "text": "the NVIDIA fire. Yeah. So that is Can you hear me? Yes. Okay? So -- Yes. Yes. Yes. -- what you see is n beta file, yeah, that's n means 9. So it's now open. in a GitHub. So that is a into the translate from evidence to the attestation results. Yeah. Yeah. Yeah. So that is my colleague, signatures work. So now you can obtain the course. And the second use is also in I've My effort. Yeah. So in this Hacksons, so My implementation is updated to the synchronize Ratesh is that draft. So mainly for mainly, operator is So to supporting the times at least stations. So to generate times evidence to and sending to the agents. So mainly so from my from my from my from my from my from my from my from my from my from my from my from my from my from my input my impressions. So the the always good working. So and so my improvement from my experience, stores out, that this draft is a good status. So maybe so bust so So Yeah. Soho. that is a sole limited cases. So i. already saw test it. So it's For example, so the in the fail of the attestation and so on. So we I still couldn't test it. So maybe so I want to keep continue to the implementations have evaluations. So additionally, so So to stay on the story. So in this hack zone, so we cannot work with Akira"
  },
  {
    "startTime": "00:50:00",
    "text": "and so on. So, finally, so yeah. You mentioned, so integrate this from this while Intel the evaluation is necessary for for initiating the about draft or our specification is good to ask. So Yeah. So but so yeah. My my concern is that so went to the milestones. So yeah. So in the fast item in this meeting, so maybe so, we should highly do the testing. So in the September bus, So so so You may you must install. the template have the many issues to support our awful or functions, well, or test cases. So Yep. So I want to discuss that with how to solve this thing. And so how to do is assurance or approves Alright. our specification, it's good. Yeah. state as yet. Yes. So it sounded like we need more time to test. Yeah. Deepark, 50 protocol, it's a pretty heavy heavy heavy software stack, you required. So let's coordinate. Let's work together. The draft is fine. Just -- I'm not hearing changes to the draft. I'm just hearing maturity. Peter, you had a comment? oh, Dang. He's our notetaker, so please So, Akita, you're at time? Oh, dang. You were on the queue. Can you make it week. Yeah. I was just gonna ask, is it possible to maybe shim some of the implementations so that we could maybe cobble together Well, that's what Akita is suggesting."
  },
  {
    "startTime": "00:52:00",
    "text": "Right. He so he's got stuff on on the Wiki and on the GitHub. available, but it's his code and what he's saying in this slide is it would be good if we integrated everybody's implementation. I'd be happy to help with that at the next hack time. Yes. Maybe in the Akita, you've got help. Yes. Thank you. Like, co co based on his saying, we we need more testing and to shorty. So, Yeah. Thank thank you. Alright. subpazo, OVAO. So the document is good. for us. So our our So that Yeah. So the making a larger for the commodities of the all use cases. So I just assay saw, have to import and so the coverings are all test cases, and so the path and the qualities. We are So, yeah, Okay. Yeah. That's That's all. I won't say. Yeah. this is great progress, guys. Yeah. Yeah. mean, the fact that we we have multiple Yeah. Yeah. in yeah. Thank you. My talk is finished, Thank you, Akita. If you can repost Yes. because it looks like we have new members, AJ was was AJ Stein on the chat is thanking you for this contribution because these new. So if you can repost the the Wiki Pointer on the mail list, I think that will continue to help Right? Yes. It'd be great. Thank you. Thank you. Awesome. Alright. So next up, we have Pingling, Hi. Hello? Hello? Can you hear me? Yes. We can hear you fine. Okay. So this is the update of the TV use case for a confidential computing in network. to to Next slide, please."
  },
  {
    "startTime": "00:54:01",
    "text": "yeah, this is some updates that that I want to share. And first one is the packaging model of the different applications. And in this version of the software is simplify the packaging model to 4 type which I think it includes all the possibilities of all the packaging. First one is that we package the UAT and PD as one package of this lock is 1. And in case 2, we think that the UantA our packaging and its personalization data is independent package. and cases 3 where trust application and the personalization data is one package and is I'm trust the application. There could with it or without it In the case 4, the class application, personalization data, is independent cake packaging and the enterprise application. they could have or have no interest vacation. I think that it doesn't matter about the a process of how your provisions, packages in the TE environment. So next slide, please. And this is the API 2, and it's about the case figures, And in this version, we use the conflict to process and a competition container and a company name. to replace the older version of the process container and the the VM. And secondly, we use the parenthesis in the load sequence. to represent to the packaging model. For for example, in this figure, we we can see there's a a convolutional process of this this context. So Next slide, please Yeah. Here's info action improvement. So there's a comments that several months ago says that the"
  },
  {
    "startTime": "00:56:01",
    "text": "introduction can improve by describing around what's the user rep in the scenario. And where is the key located in the network of fabric? similar to the arbitrator, what is the motivation, for doing this and simply having it to possible is not enough for the reason. So as a response, We're using MEC to explain when to your destocking the MEC means the mobile edge Computing. example, in the oh, sorry. for example, in the MEC, the autonomous vehicles could deploy private applications and data all the computational computing to us to calculate the own vehicle, and to nation role, the information, And without knowing by MEC platform, I think this is a use case that we're the key users, so they don't want the platform or the a compute resource to know what I'm doing and what I'm calculated for. So maybe next time, please Okay. Yeah. This is using this standard to specify secure channel. And in this draft, we refer to the next special publication 800 1 33 to to find the secure channel. And the definition is the pass for speech channel is that a path for transfer data between entities of components that ensure the confidentiality integrity and the replay replay protection as well as mutual authentication between them the entities, all the components. the secure channel may be provided by using cryptographic physical or procedural methods or or combinations thereof So I think this definition is is very well, and we could use this definitely use a draft So next slide, please. Yeah. I think because they said all the"
  },
  {
    "startTime": "00:58:00",
    "text": "update in this version of the draft. Is there any questions? you been getting much comments Have Pingling, Not very much comments, sir. This is a comes with comes from the I think it is from IPF 115 there's no much comments on 116 So let me do a quick pull here in the room. Just raise your hands. Has anybody reviewed the latest draft, No. Okay. Okay. Has anybody reviewed The original draft Okay. 3. So the reason why I'm asking oh, Akita, Go ahead. Oh, Okay. He was on the keep the spirit. Okay. So this is all pinging to ask you if you feel this is mature, do you want me to do an early review A working group last call. Yeah. Or do you still Maybe next meeting is possible, I think. So you wanna wait one meeting before we do A working request call? Yeah. Yeah. Yeah. Okay. Yes. And you know, for all of the peak participants, if you can review the latest draft and provide feedback would be good. ness, nest, to assess the truth. people to re review this document. Yeah. Alright. So much for having slop. we're tight on schedule. Anna. So, Pingling, I think you're up next. Yes. Yes. It's another I think it's a interesting idea. And Yeah. Yeah. This is a PE distributor provisionalrelay, and an next select pace Yeah. This this slide is about the architecture of hallway"
  },
  {
    "startTime": "01:00:03",
    "text": "test the the district application or how we provision, the distributed application in the TE cluster. So first, let me introduce the architecture of the district application. and the big data everywhere, all the Big Data Computer Framework. like, the spark muscles or yarn they always use the distributed architecture. to arrange applications and a computational resource. and the the master node, which one is the main part of the application. on dispatch tasks into the work node. And the work on all the then runs the task in the execute and the executor is inside the work node. they they are in charge of running I need tasks from the Welcome progress. So And another issue is that tasks are the replace that big data is processed and the text could change dynamically during the process stage of the application. So this is this is a background of this dropped. So next slide, please. Yeah. Then there will be a question. So when we use a key cluster to run big data framework like the Spark, and how to attach the distributed system during a runtime. because you you see that as a the the the the task could change during the time and the executor in worker nodes who runs text data district deposit, like, dotmain This is a 1st slide. Then test could be updated during the run stage of this application. the question is that, the remote attestation of the distributed framework is a dynamic action. So when you attached to this TD cluster, you'll get a response or evidence, but you don't know if the evidence is a red rubber. you don't know the reference value of the"
  },
  {
    "startTime": "01:02:02",
    "text": "evidence of the PA cluster. So this is maybe a question. So Next, select, please. So the resolution is that one way when you want to attach the the TE cluster, First, you attest to the master node first. And the master runs the application documents, which reference value, is stable during a run run during as a run time because its function is to distribute the distribute the task us to the work node and its function and its reference value. is stable, then we use using a master as the transport station. to relay, task the information of workers back to the verifier and the relying party because the master knows the specific status of the executor, and it could relate all the messages to back to the verify our red and party. And then the verify Wi Fi or Reliance product could use this relay information to generate the a dynamic reference value of the different stage of the a worker node, then it could do the remote attestation and the to check if the T cluster is trustworthiness. So next slide, please. depend on these capacities with design 3, message. It's it's the Relay message generated by the master. First one is the a task, a serialized message. And these message are generated by the application development of the master, and it will be shared as to pass Relay relay message and then be transferred to the Relayan party out of the air fryer. The second message is work hardware manifest. It's about the hardware information of the work node like the the architecture, memory setting, etcetera. And the third one is the walker software manifest it's about the"
  },
  {
    "startTime": "01:04:02",
    "text": "system and software information of the work node and the executor. like, the operating system, Morton, system software, list at similar to to the suit. Man Fest, I think, So next slide, please. Yeah. Here's the next this type of this document. And I think that they have 3, 4 steps of these idea, first of all, is We could verify the hypothesis of this design to make sure if this distributed your son and how to remote. Attestation 8 is is a corrector, and then the second is specify the relaying message to context and to make it more specific under the sort of service a lawn with a suit and other document like like a rights document and Yes. Uh-uh. I think that's the all of the presentation. So I guess my question is Has anybody looked at this draft There's there's no I think I think you just submitted it. Yes. Yes. Recently. The -- Yeah. kind of new draft. I'm not sure that this is in our scope of the charter Yes. So Mhmm. But it it also looks like you're still trying to do some verification of of what you're trying to propose. Yeah. This one and something. Yeah. Well, I'm submitted to this draft. I think it's could be the tip or could be the right. So I'm still trying to verify this draft and making sure how to align with the scope of try to convince people, and -- Mhmm. -- it's simple for for for our design and the the the charter. Okay. So I think when when you have Sorry. Go ahead. Yeah."
  },
  {
    "startTime": "01:06:03",
    "text": "maybe I think this is very interesting issue. So if people are interested in this document, we could talk after the meeting because that single in the big data area, I think a key cluster is more useful than the done alone model of the TD device. Yeah. Okay. I might suggest that you post on the mail list and see if you get interest from others to collaborate with you. And then when you're ready, we can bring it up again. Okay? Okay. Okay. Okay. Sounds good. Alright. Thanks. Alright. I think we're back on track. John, John, Yes. Yes. Sorry. I need to find your slides. You wanna stand in front of the microphone. We might need to Yeah. Pull it down. Yeah. That's Okay. Lyle Run. This is Jen. Yeah. You you need to be closer to the microphone. Okay. Am I well heard? non Okay. Good. Hi, everyone. This is Joon from Alibaba Group. Today, I'm bringing a new document. It's a confidential virtual machine proventioning in cloud environment. So next week, please. Running into the risk of stating the office but everybody knows computing brings benefits together with the concerns. Meanwhile, I'll learn just enjoying the benefits of the easy scalability of flex visibility, their security, etcetera. We also have concerns one of which is the privilege that comes with the"
  },
  {
    "startTime": "01:08:00",
    "text": "the main of the infrastructure. So for example, service provider, their manage and control the infrastructure. So they call the users, they may have concern that the admin may have too much privilege to see everything they created in the cloud. So Next by quiz. There are only hardware based security technologies days. For example, the memory encryption. This is used Europe, Europe, protect the confidential and sensitive data in the memory. As we know, there is a code put attack So this is to defend that. Also, we have heard a secure boot, trusted boot, or remote attestation This is just to ensure that the process, the firmware, the bios, everything is secure. Although the trusted execution environment, I think we we are not strangers to that. this is a tep working group. And last this there's the confidential virtual machines Well, this is to prevent the the malicious tapering of the virtual machine created by the the cloud users. So if you could just go to the next h, Yep. Here, I listed some of the scenarios when a cloud user want wants to create and manage the confidential virtual machines in the in the cloud environment. So you can you can see in this figure A cloud user may start with the resource manager by communicating or on negotiating the the features of the this conferential version machines they want they want to create. This is just a a a rough idea we're not going to details of how we define the messages and everything in the format details. A zebra, And after that, the cloud user may want to do a feature recovery or enabling followed by requesting to create a new confidential"
  },
  {
    "startTime": "01:10:00",
    "text": "virtual machine in the in the cloud. So this is not a exhaust to figure. We also have, like after we create the confidential virtual machine We need to test by that. We need to verify. We probably want to also trade the the measurements from the confidential virtual machine. etcetera. But all the stuff now, it is missing. So we're proposing just to create a protocol for all that. So if you could just go to the next slide Yep. iced, check the initiative to draft the the standard, and this is the the app track track track So, basically, we want you to specify the confidential virtual machine preventioning. in the cloud environment. including the whole prevention process, the management of the life cycle of the confidential workforces, etcetera. and the probably the message definitions between the cloud, the user, as well as the cloud provider. and also the square requirements, of course. If you could just go to the next slide. Thank you. And here, the the there are the tentative So above accountants in this draft, we have the overview. we have, like, the the the feature negotiation as well as the whole life cycle of the confidential virtual machine including creation. We're we're fine. reviewing, stuff also including the migrating of a live combination virtuums, We're probably going to define all the messages involving all those in all those scenarios. So That's the just the tentative table of contents. Yeah. So this is a pretty very simple introduction of what I want to do in this working good, So I would like very much your comments and invite you just to Yeah. Yeah. to work with us. Pengling, you're an acute."
  },
  {
    "startTime": "01:12:00",
    "text": "Hello. Can you hear me? Yes. Yes. Mhmm. And I want I watched the The the the document, I think, is not a very complete version. It's a very new version. Yeah. And it's not finished yet. Is that right? Is that right? Is that right? Right. Right. This is basically, we want to bring up the idea first and get everybody's comments. Okay. And there's a a message in this it belong to tip message or it's a new message. I think what we are trying to do here is we would like to use as much as possible what we already have now. But if they're on new things we need to extend I don't think we might doing that. Okay. Okay. Thank you. Thank you. k. Next in the queue is Dave. So a couple of comments. Let me if I can remember them. First of all, I think this is squarely within the charter of this working group. just to, you know, compare it to Nancy's comment about the last one, which I agree. The last one is is as yet unclear as to whether or not it's in this hopefully working. I think someone clearly is because about provisioning of TE stuff. I think the use case is super important, and so I am a big fan of having this group do something in this area. Right. disclaimer, I have not read the documents, and so I don't have any opinion on whether this particular details of the document or whatever is good or not, but topic in the slides and stuff. would support the working group doing work in this area. I think there's in the title, the title actually combines 2 different things which is actually the dominant use case is the combination of those 2. Right? One is provisioning of confidential VMs, We don't have any other document that talks about cut provision and confidential VMs. And the other one is provisioning in a cloud environment. k? Which we don't have don't have"
  },
  {
    "startTime": "01:14:03",
    "text": "It's a different use case. than, say, the transport spec that we have for the T Product right now. We have had documents to say, and this was the presentation that I gave on behalf of Mike Purcell whose trip got canceled the last minute. where the T protocol could be used in that But not with the transport that we have right now, you needed alternate transports. We've never applied. Right? Right. And so this gets to a question here. Given that I haven't heard the document, I was gonna ask you because I can imagine multiple ways you can do it do you have do you have Do you have a document? Well, you got a table of contents. So presuming this table of contents. Actually, I I do have a -- -- head. So -- Yeah. Sorry. I I do have a a draft standard, which I sent out earlier you the chair I think I think Yeah. Alright. I don't. My member's Anyways -- -- to submit it. Oh, it's up to you. Yeah. Doesn't matter because I can talk about hypothetical or whether it matches or not? Because I can imagine ranking more than once. That's that's yeah. But but but So -- Because if it's not written yet, you know, he's read it the way that I would want it. So I So one is whether the state whether the agents that is being provisioned. not the CVM that's being probation, but there's something I had to talk to to the other end. Right? Like, in the teap case. You got a teap agent. You're not provisioning the teap agent. You're provisioning, you know, a trusted app. that's in there that's k. Whether the agent is running inside or outside of TE. If the agent is running outside the TEE, then in previous discussions that's not written any place other than emails. He'd say, Can't I just use Kubernetes in a cloud environment? Right? I can provision stuff with cubernetes, and it happens to be launching something that might be running inside there, but your provisioning protocol does You don't need teeth for that. Right? This came up on the working group when we added the applicability statement into architecture document. there's a paragraph for a section of the Deep Architecture document that says, you don't need the Deep protocol to do that. because his existing protocols. Just use an existing one. Tea protocol is only applicable if you're doing something that runs inside of a"
  },
  {
    "startTime": "01:16:00",
    "text": "And you don't have some other protocol that you can do. So one way that you can do a document is you could say, how to use, you know, informational documents, you know, how maybe it's dermative. How to use, you know, Kubernetes to deploy I don't know. CBMs. Right? That would be one style of document. Mhmm. Okay? where you're doing everything at you're doing all the attestation at load time, not at deploy time. of course, you could do some Yeah. some deploy time to do stuff too if you're saying capability detection. I don't wanna deploy it to a machine that Yes. You know, CDN capabilities like you mentioned. So that part's good. The other way that you could do stuff is you could say, know, maybe there's an agent that's running inside of a TE engine like a nested VM case. or something like that I'm guessing that's probably not what you're doing, but that might be a case where you use a deep protocol to do it, and you need a trans a different transport. k. So depending on what you like, Alibaba is interested in doing, might be multiple opportunities to collaborate here, but the bottom line is I think the working group should do something in this area. Okay. Okay. Then -- So just quickly respond to you what I just rock, Okay. Let me respond to the chair. I think we need to revisit the charter because the chartered speaks about the trusted so if you you're expressing interest, then we need to talk about re chartering. Right. extending the charter. Right. So go ahead. You can respond. Yeah. Yeah. Just a a quick response would be, I don't think we need to limit ourselves to either way. We we can talk both. We kayaks Roaribos. would be much more interesting, I think. Yeah. Hi. This is Hannes. I think it this presentation very nicely lines up with the use case presentation of Pengling earlier not the one in the middle. No. One before. the use case. Because it it talked about sort of description of the different models that Dave just alluded to. Right. And And I think there's And I even think that this is in the scope of the charter to talk about the provisioning of in those environments as we have talked about before and some of the confidential computing"
  },
  {
    "startTime": "01:18:01",
    "text": "use cases So I think it would be quite interesting to see how we could use the deep protocol for that specific purpose, most likely, but for different transport, But Many of the other pieces should actually work, and that was my impression when when we had these discussions in context of Pingling's presentation. But I think we need to to really evaluate where things fit well and where they don't is when? I think we have to dig into the details. There are a lot of theaters, unfortunately, and there's a lot of which is why I'm putting in question. Right. Because depending on the details, I don't wanna grow the scope because our our charter is very tight to using a TEE. Right. So It's fine if the working group wants to write it's up to the working group as to whether you want to adopt this. But I think There's not enough here for me as a chair. right, to ascertain the paths forward, we adopted the use case because it clearly maps a use case for the TEEs. just wanted to make that clear. I Sorry. I'm running everything live. So are you on the queue? It's yet. okay. Not Not yet, but well, we'll go ahead, Ming. Hi. Yeah. Well, that that's that's Yeah. I cleared the queue. Go ahead, Meng, and then Dave will be on the queue. I think this is a very interesting use case. but the ad as as this is a charter initially just really for key trusted application. and then focus towards application. This one could to from application to a machine. Right? to with another machine, whatever, you know, like Kubernetes or other cloud environment. which are a very different scope. Yeah. Like, really, that athletes would may need a as revised a charter or on that fact. but it's used to get itself interesting. We have been talking in the past. Yep. Yep."
  },
  {
    "startTime": "01:20:01",
    "text": "Go ahead, Dave. Thanks, Ming. So you made half of the comment that I was gonna make. Right? because the the charts. I went to the charter, right, as you were talking there. it talks about specific documents. And you can read the charter as saying, well, it doesn't actually say that the use case document in there. It was says, well, we just said that kinda falls under the overall, you know, architecture document who can split one thing into 2 or whatever because it's a use case. So I can imagine you could do that same thing that says as long as you're just describing the use case, and it's just informational, you could adopt a document right now without re chartering. if you don't think you could have, you couldn't have done the use case document either. Right? So whatever the is if it's in the same category, Maybe there's even a way to put it in the same document. I don't know. but different hat. So that's one point. The the other point maybe with the confidential competing consortium head out. I'm no longer the chair, but I'm still on the use case in this document My opinion is this use case is actually more important than the use case for the t protocol. Right? Well so I was actually gonna -- -- in the cloud is where the trend is. Right? So this is the one that's on the uptrend. The other ones are on a relative either downtrend or stable, this is where the the biggest interest in growth is in this in this particular area. I'm -- -- still. So I'm not denying information blocking will have more impact than the rest of the stuff they're working with my question, don't don't leave yet. So Because I I was actually going to ask you as a member of the confidential computing whether this would be a should be done there versus here or or some hybrid. That's a fair question. The competition consortium is not a standards organization. is an open source organization and a marketing organization. And so if there is a just pure informational document, like, it could do it could do the equivalent of what we did in the architecture document that it could do because it's not proposed standard or anything. Right. So the real question is, do we think there's anything in here that would ever be proposed standard?"
  },
  {
    "startTime": "01:22:01",
    "text": "If the answer is yes, then this is the working group to do Okay. So without having the draft, and I need to go back I apologize if you No problem. provided a draft Usually, I and I can show you how you submit it to the data tracker. So I think it's a little early for us to tell until we understand the scope of what you're trying to propose. Okay. Right? but I think you've heard that there's some interest to the use case. It it's just question of the scoping Right. And what you're trying to propose. Right. So just another thing I Or try. Yeah. Hank was on the queue. So -- Yeah. Yeah. I'm just I'm just stepping forward. This is Hank. I don't want the echo Dave's interest. And I also do not think that the current charter is a blocker. It might just be a cut this into a thing. or something like that. But but maybe we'll read it, and we will comment on it. And I think yeah, this is a good place. Yeah. Yeah. Well, thank you. Yep. what I won't say is what what we are doing here, the the the the TPP protocol stuff, as well as what I'm proposing, the confidential virtual machine, they actually belong to a broader area of it it all confidential company. Right? Just why not merge them together. in the industry. Well and well, we we have all the experts here. I'm supposing that they're they're they have abundant experience in this area. I think you've heard from folks that they are very interested in the use case what we cannot ascertain, and that's where Hank and Dave were saying, It could be just a question of how we split the beast to Yep. Okay. Not the beast. Yes. What we're proposing, right, Don't say beast on the minutes. Right. 12th. I'm back up since she didn't cut the queue yet. So -- Yeah. Yeah. Go ahead."
  },
  {
    "startTime": "01:24:02",
    "text": "Yeah. So I'm just gonna elaborate more on why I think that this is super important. Right? When we first created the Keep working group, it was a long time ago. Right? And we had maybe more use cases than we have now. Right. Right. Right. Right. because the original use case was for some of the things that people now use whatever OTRP is called in global platform, which originally they weren't gonna do it. And so some of the use cases have kinda moved on because they've adopted the solution that was done by global platform now. so the applicability statement says if you're doing that, you just use this standards protocol already out there, like, 2 years ago or whatever. Right? And so we trimmed down our use cases. Right? And then David Wheeler led a great presentation on is this applicable to SGM? Right? And under what circumstances is applicable to SGX. And we said for a lot of cases because you're doing the verification at load time, then at deployment time, the answer is it's not. Right? So we trim that tard out and says, okay. only doing this if you're trying to do a verification at deployment times, we kept trimming down the use cases. And so the fact that we have a relatively small working group or at least only free phrase it this way, out of the things that people participate in the confidential competing consortium, the area of things that are within TEEs or whatever, This working group was covering in the t protocol a relatively small amount of that space once we've done the applicability. Why? Because everybody's moved out of this space over into the CVM space. all big interest in, you know, future deployment discussion and stuff is why would I use protocol, if I can use a CVM and just use Kubernetes. Right? for a lot of the mindshare is at. When nobody's written down any place, Can you actually use Kubernetes? And then what are the security properties when you're doing PE provisioning? Right? Right? And so if, you know, Azure and Ali and the other companies doing that got together and wrote something in this working group that's where actually the mind share is right now. I I might Dang. Okay. I'm the only chair. Never mind. So I think your points are valid. But, again, we need to just revisit,"
  },
  {
    "startTime": "01:26:04",
    "text": "Right. And so I just wanted to echo Daniel McGault on the on the chat said he's also interested. So I think I'm hearing that there's interest. It's the question of how we scope things. and move forward. Right. Go ahead, Ming. Oh, okay. You need to put yourself on the queue. But go ahead. You're already up. Yeah. Yeah. such as that comment. I think we've got 2 use cases. Right? When we keep starting, we have wise, really more of a device many, many, Well and to get chartered too, we had to release those -- -- for that. Right. So then we realized that server side, the cloud environment. otherwise, as David has more interest, the name will start expand. That way I would find. There's a lot of conversion provision to the cloud environment. But the initial focus is already more than field of devices. That is still. Right? That's a Otibrok a tenant for that. It's a massive, major target. because the product all permits for that. So now for cloud acts, they're very different. Right? But I think it's very interesting. I'm interested in that. Just for chart like, a chart description is already kinda flat. I think, It was Microsoft's That's okay. You you raised your hand. I'll recognize you. Go ahead, Dave. really start talking about the cloud scenarios of an oh, yeah. And that tier or whatever, and is microsales presentation. that was talking about my use case is NRx to provision the and the TAM or whatever is on premise, and I'm pushing stuff cloud, and that was really first presentation that I remember There was an actual presentation in the working group that talked about a cloud deployment. Okay? And so It you know, he's right. And so we've kinda scoped down the peak protocol scenarios to be the case where it's primarily edge stuff. You can use it in the cloud if you're doing like a micro cell stuff that you're trying to, which is the inert scenario, you're trying to push a, say, an SGX Enclave, for example,"
  },
  {
    "startTime": "01:28:01",
    "text": "into the cloud, but only if you verify that you trust the cloud. Right? Then that that's the in art scenario. And so it's still applicable there, but CBMs have kind of that's why I said there's 2 things being put together in the title. 1 is the notion of cloud, then the 1 is notion of CVM. I'm saying the mind share has moved away from sort of the enclaved notion, which is still in use. There's still valid uses for that. Right? over to the CVM case, which is just you just take an existing virtual machine that you've already got. I don't wanna run it inside of the company. It's not a different composition. Right? I deployment time, I only wanna put this in there. And it's an unmodified, and it says the interest in lift and shift rather than re architecting and splitting my app It's a lot more easy to use, and so it has a bigger so in market share interest and people interested in doing that, but it's less secure in the sense that your trusted competing base becomes huge. It's the entire VM. Right? Rather than just your little trusted application. And so it's less secure in that sense because you gotta lot more a surface area. Right? but it's a much easier stepping stone to go to a CVM just take a VM and say, run this inside of a confidential VM environment. And so that's why I said most of the mind share is there because the masses can do it instead of just the security experts. You got good. Yeah. So Ned Smith Intel. So I wanna kinda echo what Dave was saying. but also bring it back to the charter discussion. Like, the charters is some examples of what a TE is. based on existing technology, technology has moved on. So I think you could have titled this provision of a TEE. in a cloud environment, it would've I think it would it would be less controversial in terms of Charter, And so then the the question becomes, is there -- I'm not gonna definition of a TEE versus a CVM, Right? And I don't know that This is, like, I I I'm not that literal men. I mean but but a lot of it, again, I'll just come back to Yeah."
  },
  {
    "startTime": "01:30:05",
    "text": "I -- was just I I had closed the queue because we're out of time. So make it quick. Yeah. I'm not even in the queue. Well, I I had closed the queue. That's why I'm telling you. How how do you want to proceed with the what? Like, what are the next steps? So which is why I tried to close the queue. So if you have a draft, I'll show you how to submit it. So I'm gonna have John submit the draft For all of you who expressed interest, Let's take it to the mail list. All of you should be providing feedback as to your recommendations for how we should move forward. Thido and I will take that under advisement. And one move on from there. I won't put dates, but I mean, there's enough interest from from the length of the discussion. that there's interest by the group To do something there, it's a question of how we scope things and And I don't mind re chartering. if we can keep it in scope, we can keep it in scope. But as somebody pointed out, right, We chatted, what, 4 years ago. And things have evolved and changed. So Yeah. Okay. So with that, we are out of time thank everyone for your participation. I'll coordinate with Dave with the suit co chairs for closing loop on the protocol. and we'll move forward. Thanks, everyone. And thank you to the Peters for the note taking. Yeah. I'm gonna be out of pocket. It's like, pandemic over."
  },
  {
    "startTime": "01:32:04",
    "text": "Nancy's on the road every week. Like, I was Anyway, my vacation still has to happen. Yeah. Because of work. But nonetheless, either if you do and I don't think both of us need to be present, but it's really just like, the protocol is stable. Right? It's just a matter of getting a blessing. and the validation obviously. and then we'll narrow it down. Yeah. Okay. Yeah. Good to see you Ming. Yeah. I didn't realize you were here. How's lunch? I mean, I even saw her no."
  }
]
