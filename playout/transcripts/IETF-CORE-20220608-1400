[
  {
    "startTime": "00:01:04",
    "text": "just having skimmed through the slides cast and i think it would be great if when you come to curies you could say word or two why we really want to support them yeah that's pretty much the question you"
  },
  {
    "startTime": "00:02:08",
    "text": "okay it looks like we're going to be a small group today but i think we can start uh so welcome to this interim meeting of the co-working group i am marketiloka my creatures are jaime jimenez and carson gorman and this is an officiality of meetings so the network applies with being recorded uh take care of the not well it's not just about ipr also and especially about coda conduct so be professional and nice to each other and the plan for today was to discuss uh about two documents uh problem details uh in last call with a few comments that came back already from ird and ops deer i think and href uh with a few points especially about curie very much related to recent discussions in seaboard already uh any agenda bashing to propose or any more topics to add for today i think we'll have time okay if no then we can get into the singles light set for today from carsten yeah i think you have to exactly at least okay um yeah so this this is the agenda today and i'm sure we're not going to use 90 minutes for that but i think it's it's still good to get a little bit of synchronization on on some of the issues here so let's start with problem details and that that has dominated things a little bit in the"
  },
  {
    "startTime": "00:04:00",
    "text": "last couple of weeks um and we we had an ad review there is a branch for this led review which has submerged with a couple of editorial items so that it's always good to look at these branches and there are a number of questions remaining that we still need to address and one question is what does it actually mean to have a problem title that is not varying across instances and [Music] so in in 7807 this had a pretty well defined meaning because the the title was just the description of the problem type so the the this concept of being stable across instances was essentially con copied from 78 or seven that concept made sense when the title was basically a human readable version of the the problem type but we decided to get rid of the problem type for for many reasons because maybe that that is actually one of the learnings that we can take from 7807. um so maybe we should simply uh get rid of that second sentence or maybe we should actually say what that second sentence is really trying um to say which is that this is a description of of the kind of problem and not description of the specific problem so you wouldn't uh say that you have 54 euros on your your account"
  },
  {
    "startTime": "00:06:01",
    "text": "but you would say the the generic problem which is you don't have enough money on your account to actually perform this particular transaction and then there are other problem details that would tell you how much that transaction actually needs so um yeah the other question is is problem title actually a meaningful thing in in in our context so should we look for something more radical and then try to get rid of it um yeah i'd love to hear comments on that hi guys it's it's optional isn't it so i mean yes it's it's already something that you can just pulls off um and the second comment i have is i think i think i think they should not try to summarize the information is is a bit it goes goes too much into trying to to to to tell what what people need to do with this i wouldn't also summarize it's a bit unbeatable to me is not it's not something you know that term that i um i would um know exactly what what it means because uh you know it must summarize the uh the kind of information you get in the details but uh the way it summarizes you know is is is is a thing that is open to debate uh um so i really i really i would i i really like to avoid this should not try um because it doesn't clarify to me what to do if i read it as a you know as an implementer or as a user of the of this stuff um [Music]"
  },
  {
    "startTime": "00:08:00",
    "text": "so i would just go with a short human readable summary of the problem shape which seems you know definitely um good guidance yeah yeah we still could add something like like uh second half sentence to the short human reader summary of the problem shape something like uh without uh describing the problem in detail or something like that or describing the specific instance of the problem in detail right yeah we're trying to you shouldn't try to duplicate information that is detailed somewhere else right so that's the that's the thing uh that there is details to to do exactly that and so um you you really need to understand that if you want to provide the details you have to use another field it's not this one that you should use um and probably yes you just get rid of the thing and uh you know because details is enough right isn't it who cares about giving us a summary an in-band summary it's i don't know um i i wouldn't go as radical as saying you know let's let's let's drop this as as a field but that isn't yeah sorry sorry please go ahead but isn't that exactly what uh shouldn't duplicate information available somewhere else would do because the information is already in some deep some in in the shape that that is here so if we were to say don't duplicate then that's essentially don't use it because the information should be there already somewhere else all right but it is already somewhere else i said the details are uh already encoded some in in in under another key so i don't understand what you're trying to"
  },
  {
    "startTime": "00:10:01",
    "text": "say sorry i'm saying that that um if we shouldn't duplicate anything that's anywhere else already that include that includes like the whole summary so there shouldn't be a summary because what it says in there is already in the in the problem typo and we don't have a type but in in the in the other fields so the shape is already there explaining the shape would be duplicating information that is there already but then it's human readable so it's not it's maybe duplicating information but it's presenting that information in a different way yeah so when you when you scroll a log right and and you want to have these kind of things you know to have the things that your eyes can can can quickly grasp the information and then you go into the details right you explode the thing uh and you try and see yeah and then in the details you may have you know gigantic pieces of information including a stack frame or whatever i don't know uh but um so it seems useful to me as as a thing to have i wouldn't drop this you know because uh because there's you know uh there there are exactly what casen said there's a there are humans humanize on the other side of this uh if you're if you're dealing with a log pipeline and and that is good information for them well sorry go ahead listen it's fine with me to have it around i'm just arguing against saying not to"
  },
  {
    "startTime": "00:12:00",
    "text": "duplicate because that could be read as not duplicate anything that's kind of already in the structure yeah i just took th this note adding to the first sentence without duplicating instant specific details contained in the other problem detail entries and um yeah so this this is again using this wobbly term instance but i think most people will understand that but i mean short and human readable are you know really the the key characteristics of this and you know that's enough uh why should we go into you know further detail did that too those two words explain to me at least perfectly well what what is the because you know all the the contacts here but somebody who's new to this will think of course i have to include the the um amount of money on the account in the title can we can we provide that that example say avoid doing this right the example is actually in the last item on the slide yeah yeah we could include this do that instead of introducing normative language okay cool well the the example can only illustrate something that is explained as a concept so um [Music] i think we do need this without duplicating but i think we're going into wordsmithing now um i think i i get a gist of what we are trying to achieve here not constraining too much but still explaining the idea of fulfilling this field in the first place"
  },
  {
    "startTime": "00:14:00",
    "text": "okay good good sorry on the first part of the slide you mentioned at some point you were considering to delete the second sentence we should not did i get it right like it should not change from a correspondence yeah that's the sentence that nobody understands okay okay you already have an example that you can take it as a baseline example uh perhaps it helps to to add a second one of the same problem shape where well you change the title and you have a reason for and after all someone will probably ask later on uh what's the possible exception to to do that anyway in spite of the should not okay so we could add to this example the case that the the account is blocked for some reason as a different problem shape otherwise it becomes about defining what shape means and you just move the problem one step uh back but if you give an example they would work i think okay thanks okay so 22 [Music] um title and detail are the the two uh human readable text strings we define and we currently provide both for an undone sibo text string um or a language tagged text string and and francesca's question was"
  },
  {
    "startTime": "00:16:00",
    "text": "why why do we include the undone case because that rarely will make sense uh so if it's human readable how do you actually present it to a human if you don't have the the information that you need to present it um so there are several ways to to handle this one would be making english uh an english language tag the default um the second one would be to to make the default depend on the context uh so we we just say the the language tag is unspecified and has to be taken from some context but that's of course even less useful in the iot space that than it would be in the big web um or we could say we we simply don't allow unadorned text so you have to provide the language tag that that would be radical but it also would be consistent and i think that this is an example of a design decision decision we will have to take a lot in further protocols so i think we should get this right here and and use this as as a precedent for other cases where we have human readable uh text and and actually mean end user human readable and not developer human readable"
  },
  {
    "startTime": "00:18:05",
    "text": "sure yeah none of these go ahead no i think that was echo from thomas's side okay none of these things are uh obvious choices so i think this this is uh maybe a bit of a bike shed problem but it's actually a pretty important bike shot we still don't have anything like language negotiation around and co-op right because so far everything was like text aimed at developers and now we start having this human kind of end user readable text right right so that that makes the item two less desirable because we don't have a standard way of establishing that context we might also take it as an as an item to um look in look into the problem of establishing a context if we find"
  },
  {
    "startTime": "00:20:00",
    "text": "neither one nor three acceptable so does anybody have a coin [Music] so option 3 means unavoidable overhead to some extent right yes maybe that's a leverage to to try option one when is this cultural bias built in which is you know it's it's a good optimization and i think it's practically speaking is is is the perfect choice now but um you know would that stand the um you know for the future well if if we don't want to say uh if we don't want to encode that bias ourselves we can still go for option two um observe that no way of setting such a context is currently available and leave it up and"
  },
  {
    "startTime": "00:22:01",
    "text": "leave it up to whatever is later defined to set a context to also set the same default because that way of indicating context may or may not be actually used by the by the device so like assume we specify later that a resource has some kind of default language or a host has some kind of a default language if that's not set it's probably falling back to one but it will then not be here quote us saying that this is the default so does that mean uh go for one if you have no idea of the context uh kind of although it would be really up to whatever specifies how that context looks like later so it's probably something to phrase like in the absence of context etc okay just a question in terms of overhead what are we talking about here is this going three what does it mean like should two three four six five five three five six bytes yeah something six right seven well the default is optional so um yeah force is up you know so 2 2 for the tag the array of two n plus text six yeah six you mean in the grand scheme of things is you know it's not it's not too much right"
  },
  {
    "startTime": "00:24:02",
    "text": "still so the the most workable thing i've heard so far is going for um context and in the absence of context use the 38 ianfu value make sense i didn't understand what you mean but kind of would that be two then one or two then three then one two then one yeah the two then three essentially means that you you have to write you have to have context to derive this uh from and if you don't then you have to have a language tag but which is also probably workable but it's one of these rfc 69 119 things where we say must but we know that you won't do that two then one works for me i don't know"
  },
  {
    "startTime": "00:26:04",
    "text": "but we still can get feedback for that from the ids and of course there's also an internationalization directorate which might have an opinion on this good so let's go let's do the next one uh is this not working oh okay so this this is just a quick notice of a round tricks so francesca said she would prefer more examples in section 3.1 in the section that uh introduces standard problem details entries but on the other hand we have defined standard problem details entries so it's probably not necessary to include another example and it might also be detrimental to put in an example because people start using numbers taken from an example and think the example is something they can just copy without registering things and so on so an example has has some cost has some downside so i think it's okay to do a one fix here so if nobody disagrees with that then there is the um pr27 so joel in his ops directorate review noticed that we only address the meaning of ignore unknown"
  },
  {
    "startTime": "00:28:01",
    "text": "for a consumer in the sense of somebody consumes this and then there's there's nothing left um but what if that consumer actually stores the entry or forwards the entry so what what's our take on this and it seemed to me that the best way to handle ignore unknown is to add a should recommended to retain the unknown entries in the start or forwarded a copy of the problem details except when that would be unbearable invariably difficult because for instance we're using a different format um or and all the role of the forwarder also is to filter out um information that should not be disclosed and if you have information there the way you don't know what that is you cannot really forward this from a filtering forwarder so these would be the two exceptions that would be in the document um yeah there probably can be other exceptions but i think the recommendation to to retain this information if if it's if there isn't a specific reason against that i think that should stand i like this from the point of view of later doing the choral conversation conversion looks good okay"
  },
  {
    "startTime": "00:30:01",
    "text": "so let's quickly look at the status we don't have intelligent date yet um the next delegate is the 16th i don't know if we actually can can make that um but the the reviews that the ads would want to look at those have already been initiated uh we already had one review which is the upstair review we probably will have three other reviews or at least three other reviews are being requested so these should be processed so before the telechat the ist challenge had probably and then of course the the ballot positions of the ads those have to be processed as well so getting this approved in june is still very much possible but it also requires that everything works as planned carson i had understood obviously wrongly but that the internationalization director review had already come through but no i think that was a direct email to some individuals and not the former understood thank you yeah and we might still see some surprises there but the the informal communication the the hallway communication was that this is a difficult and complex subject but [Music] the internationalization director would not take this document as the example document in which all this needs to be"
  },
  {
    "startTime": "00:32:01",
    "text": "once and for all fixed um and at least we have done our homework by by providing language tag and direction uh information so yeah that we will be surprised but uh hopefully in a positive way okay so that was that and now we come to one of our favorite subjects uh which are carries and and cries we have had um significant change in the the sibo pact environment up to now we only had ways to share items and to build items out of concatenation and it's difficult to do concatenation when a curry interpretation would actually need to reach into a cri and maybe add something to a nested array and so and of course that all that can be defined for a function tag um so we we suddenly have the freedom to do the things that we um i want to do so for instance we could define this function tag in in such a way that if you have a left-hand side um that is a uri with one path entry and the right-hand side that is a relative uri with just one additional path entry then it's defined how these combine to what you actually want here which is the the slash full slash bar item now this these function takes can be or this function tag can can be defined uh but of course the problem is that the"
  },
  {
    "startTime": "00:34:02",
    "text": "the semantics are based on the ui syntax and uh there are some some weird cases um so for instance if your your base the curry base is ht and the uh curry um expands to tp colon and so on um yeah you you you might have have you might have to put these together by by string concatenation so essentially the actual semantics are completely married with the semantics of the uri syntax and you essentially just have a more complex way of of dealing with your eye syntax and the question is for all these weird cases is it always possible to express both the left-hand side and the right-hand side as cris and do this independently so you don't have to understand the left hand side to express the right-hand side an alternative processing model of course would be that you uh only ever express a right-hand side if you know the left-hand side so you couldn't independently uh translate the the right-hand side of a query into the the right-hand side of of this zebra packed construct and yeah this leads to the the observation that probably the easiest way to define the semantics of this function tag is to take the input cris and convert them back to uri"
  },
  {
    "startTime": "00:36:01",
    "text": "like things concatenate the two strings and then convert back to cris yeah but what what's what's the point of using cris if you have to do something like this so this would be the most general uh solution the most useful solution would be to operate semantically on on the ci and ci reference and to first find the spot in the left hand side that would be extended next by the right hand side and uh yeah in there there are examples where the right hand side would uh think for instance that it is uh composed of paths and in reality these uh strings actually turn into something different so for the first of the first example in the top uh in the bottom right corner um we would have the the hash mark in the left hand side which means that anything that is written in the right hand side is actually part of a fragment identifier and this this is not theoretical a lot of people are using that uh structure or maybe a little bit more uh exotic case where um we actually build the second part of the hostname from the right-hand side i think this this it's a little bit um not so sane uh but it's an example that that we could or could not uh try to to address and this is the space where we run into the question um should we maybe subsetting uh the curry concept so is this there a query subset where all this"
  },
  {
    "startTime": "00:38:00",
    "text": "does make sense and to to build a good such subset we probably would need to develop a corpus of curries uh to look at and to derive a meaningful subset from those so we we take these copies of curries sort them into sane and insane and try to include the same ones but not include the insane ones and of course when we do that the next question is what do we do if we encounter an actual curry that is outside the same subset so this all looks really ugly um but on the other hand um it looks ugly when you are trying to solve the whole problem there are lots of sane queries out there and and this is just this slide just has an example from from sdf which is not normally encoded in in zero at least not that the current time but which shows that that it actually makes a lot of sense to to use carries in a structural way in a way that that actually um has a left-hand side and the right-hand side that that are not cut up at an arbitrary boundary but that actually has a semantic meaning to a certain extent and that brings me to the last question i think curry has been developed to solve a widely appreciated problem curry also has got stuck from from in its current uh note state in w3c because everybody recognized uh the curries themselves are not not"
  },
  {
    "startTime": "00:40:02",
    "text": "not the technically enticing way of solving the problem but it's also the only one that we have at the moment and the solution used by queries are is lexical and one thing we have learned in in 40 years of sterilization of text-based protocols is that lexical solutions always cause problems that it's not possible to solve anything in a clean way by doing uh something at the lexical level so it's a little bit like um c preprocessor macros of course these can do a lot of things but it's in the end also very hard to manage what they are actually uh doing and of course program language designers try to get away from lexical solutions and and uh i think application format designers should too um so is there something that that could be described as a structural um form of carries a structural better query that fits better to the ci paradigm and can we backport this to the uri space so can we design it in such a way that it also makes sense in the ui uh space and now for for the the uh real moonshot can we do this in a way that it actually is a subset of lexical uh carries so that that would be my my uh wish for a subset we come up with so do we have to do this now uh probably not um the the the one thing we should um we may want to to achieve here is to have a rough understanding of what this"
  },
  {
    "startTime": "00:42:01",
    "text": "could be and avoid doing something in cis that is stupid that is getting in the way of getting a better query introduced uh but given that these uh function tags in sibo pact are infinitely powerful maybe it's not really very likely that we will set ourselves up for such a roadblock uh so maybe we can just uh spin this off as a separate uh project and say we are not going to address curry in the base ci spec in the href spec and leave this one for some bright grad students to figure out yeah i agree this should be a separate piece of work really um i wonder in the if the in the href document you you see already something that should be well changed or removed to not create an obstacle for the future work or if it's good to give some warning in that sense already well if i were seeing such a problem in the href spec then i would probably try to change it to to fix that i don't see a problem with that given that the the function tag approach is so powerful okay is it worth mentioning upfront that for a time being this possible extension is out of scope or just say nothing"
  },
  {
    "startTime": "00:44:06",
    "text": "the the itu had this great uh phrase that we don't use uh which was it is for further study that's a good one yes that's a good one escape edge nice last one to marco's comment on the scoping so that's a plan for the future then to explore more when yeah when when we start when we explore this and i agree that it shouldn't be in href and the earliest kind of we might need it in in coral but we should have a close look at what we want to use it for because to me this is to me queries are mostly a way of making things readable and editable and we're working in bind in in binary object space and there is kind of this is not these are not things that you enter through a keyboard or read through a display um and by the time it enters a form where this becomes relevant then that format could deal in queries again there are two cases when i think and maybe these overlap a bit uh when i think it might be relevant and that is when we deal with compressing cris where the the prefix is known and the rest is not known because if we know kind of if we are dealing with what i know from rdf to be the kind of regular ontologies we don't have to compress the prefix we can we might want to compress the prefix and kind of when expressing the"
  },
  {
    "startTime": "00:46:01",
    "text": "dictionary but for practical use we can just enumerate all the terms in that dictionary and and have reasonably short number problem would only be when there is an apology or any namespace that grows faster than the dictionaries updated and then we might and then we might need to have binary binary queries but maybe allowing the dictionary to be updated faster is the more straightforward way to solve that well one one interesting observation with people actually using queries is that and and then prefixes in general also in yang and in other places is that they seem to think those prefixes are semantic so that the prefixes mean something to the people looking at the example on the whiteboard and that's of course a really big problem on one hand but it also can be a rather uh useful little expedient expedient mechanism in an implementation so that's maybe one aspect we also should consider but isn't that kind of how how could a how could would the prefix be helpful in the implementation when the implementation can still split things up as it likes um but this is about the serialization more i think yeah but if if a big implementation works best when you offer the uri in a particular carry"
  },
  {
    "startTime": "00:48:01",
    "text": "form then everybody will do that and suddenly the prefix becomes semantic so maybe that's just a form of superfication but it's something that i have seen so people really believe these previous class means something isn't that more reason to not do them on a binary level probably christian were you suggesting to start um getting a bit more into this already while working on coral um can there are a few examples around where it would be a bit tricky to phrase a compact coral without having some solution here um in particular when you express units by referencing into the into the ui form of the of the registered value then all of a sudden um you either have to enumerate all the values in the in the registry or you just have to split it by prefix or you take the cost of spelling out the full name of the registry every time you mention the unit so that is the one single use practical use case in coral that i'm aware of where i that would bring me to tackle this in in in coral although i i said i hope that a good setup of a good set of of the unpacking dictionaries um is the better way to do to do this okay yeah i think we won't get a we want to get away without doing a bit"
  },
  {
    "startTime": "00:50:00",
    "text": "of that corpus work first and see how how are people using that and is that something that we want to support and if yes how do we express this and see what packed but we can always define the function tag in in the right way and that would be something that we now push into coral great thanks great discussion any more comments or questions for kirsten anyone don't see anything in the chat either so then i think we are at the end of the agenda and as aub i just wanted to mention you should have seen the request for a two hour session at itf 113 so we'll meet there and i plan to be in person in philadelphia for those who also travel yeah i plan not to be there in person i have another aob item rfc 9193 is finally published it was stuck in the rcd2q for half a year because it was waiting for uh the the new version of the http semantics um rfc in 9110 and that in turn was waiting for the last document out of the http of the current http cluster to be done which was rfc 9114"
  },
  {
    "startTime": "00:52:02",
    "text": "and it may interested you that this was one of the stuck items on that was the generation of index entries for that document out of the the information that the cram down source provides so i actually had a little bit of a hand in that at the end to to make it possible to do this anyway so this this thing is there and it means we now have defined terms for things like media types and and content types content formats and we also have defined abnf for that so we never should again be in the situation that we have to uh do all this again and again again and again for each new document that does something this is a standard strict uh document so we can reference into that in particular into the abnf and save a lot of time i will expect to see a lot of references to this document especially on the terminology great christian you were shortly in the queue or at the mic anyway no just saying thank you for doing this and thank you all for the support in doing this justin what was the what is the exact problem i i couldn't i couldn't grasp what was the the problem that was blocking the http rfc generation of what of the index you can have indexes in rfcs and that has been a long time feature and there has been rfc xml support uh for that uh for a while uh but of course a traditional index"
  },
  {
    "startTime": "00:54:01",
    "text": "uses page numbers and we do not have pages in rfcs anymore so those page numbers had to be replaced by links okay and these links are much harder to actually aggregate so if you have five references on a page you collapse that into a single page number but now you have to actually give the section numbers paragraph and paragraph numbers for each of these references and so on right so you get a lot of noise and then it actually hurts that the current xml to rfc implementation didn't have support for primary index entries so the ones where the term is actually defined this should look different and and i actually implemented that in xml to rc and uh now if you look at 9114 you can see what i mean but look at the html version because the the text version is somewhat weird is that automatic so how can you enable that so say i i'm writing a markdown thing what what should i do to to get that yeah i probably should come up with a little tutorial for them you have to decide whether you want to do the markup manually uh which is easy but tedious or do it automatically which cram down rc supports but then you have to be a lot more uh on the outlook for for weird things going on okay but is there any specific option that they need to enable in order to get this or is it out of the box actually yes um but again this this requires a longer tutorial right okay next time let's take this offline and probably i will write something in the wiki uh in the uh"
  },
  {
    "startTime": "00:56:04",
    "text": "okay fantastic another aob is that i'm happy to see the seaboard that me is up and running again it was out for i don't know maybe not 24 hours but how many 25 25 oh um yeah i realize how much i at least depend on it and i wasn't the only one but i speak for myself yeah we had a weird problem with a file server and somebody report rebooted the system on which this runs and uh yeah i i had to manually fix things again but unfortunately the the system that alerts me to that has so many false positives that i didn't see the actual alert because it was buried in for its positive so until people started to write you jiren salander finally alerted me to this and right so i got it fixed thank you but you all know that you can install the cr7 commander in tools and do it from there i know it's yes but it's not the same thing it's much more convenient to do it in in the web page but in a pinch you can use the commander into it right okay any more points to raise or discuss today no i think there was a very good meeting actually so talk to you later in two weeks enjoy the rest of your day talk to you then thank you thank you all bye-bye thank you"
  }
]
