[
  {
    "startTime": "00:00:06",
    "text": "hi everyone it\u0027s time to get started with a dispatch meeting I\u0027d like to think thank Matt Miller for being our Jeff described and Vijay and Pete for taking notes for us all righty so this is Spanish working group if you don\u0027t want to be here about this patch stuff then time to go okay here\u0027s the note well you probably would have seen this more than once today this backwards and okay here we go so we actually have very few things on dispatch this time we have web transport Victor\u0027s going to talk about that and then we have several things in the art area that we\u0027re going to talk about there\u0027s a new proposal called rip and then we\u0027re going to talk about this will be a fun discussion the BCP 190 I put the ability to trance okay dispatch okay so as a reminder here are our IHF 106 deadlines and again we drive those so hopefully there\u0027s a little bit of mailing list discussion before people before the meeting right so my deadline is October 4th October 7th it\u0027s always a good just to let us know that you\u0027re gonna bring something forward so we can play on time because as you notice we only got an hour slot this time because we didn\u0027t anticipate much and of course at the last minute stuff came in so it\u0027s always helpful to let us know ahead of time all righty okay again working with deadlines if you make the deadlines you\u0027re from the list if you\u0027re not then you kind of come towards you know if time allows sort of thing and again it\u0027s helpful if you\u0027ve got a dispatch item you want us to dispatch to put dispatch in the name it\u0027s a little bit easier to find in the tracker and there is a way again there was a ticket open I should follow up on that and whether or not you can do every places from the document and any questions contact the chairs mailing list so for general discussion of art topics its art at IETF org and then for actual work that want to move forward dispatch an IETF noise okay yeah could you switch to the what thanks bird slides yeah yeah hello everyone my name is victor vasily if I worked for Google I worked on quick and TLS before but today I\u0027m going to talk about new works that I want to bring to ATF is this better "
  },
  {
    "startTime": "00:03:15",
    "text": "alright I picked her a silly if I worked on TLS and quits I want to talk about web Transport which is the new work I want to bring to ITF that is currently already a consideration and w3c web and compassion community group so just to introduce you to the problem so web applications traditionally used only HTTP is a transport HTTP is a response request protocol means that you will only get traffic from server if you send a request first around 2010 people realize this as a problem so we introduced a protocol called WebSocket which allows to speak subject to security constraint arbitrary TCP traffic but it runs over TCP so it\u0027s reliable ordered and that is enough for some applications but not for others around some time later we introduced the new API called rtcdatachannel which is a peer-to-peer DTLS over HTTP and it has a API which is very similar to WebSockets except your messages can be more sent and received out of order or marked as unreliable in general rtcdatachannel is inherently peer-to-peer which means you need it\u0027s designed to communication between browsers and peers which might be behind net so it doesn\u0027t you can fit and so you can fit it inside into the use case of talking client-to-server and there are special provisions of standards called I slide which is a way to use data channel and client-server setting but in practice it doesn\u0027t work that well and I\u0027ve had conversations with many developers I\u0027ll talk later but which doesn\u0027t works as well so this leaves us with a gap feature gap that we want something that is client-server like web sockets but supports unreliable or unordered delivery and the proposals I\u0027m going to talk about is called web transport and it adds effectively just said so why would you want something like this and the answer is for many years people have been asking browser developers to add some things that\u0027s roughly like WebSockets but for UDP it\u0027s being a repeated request and we\u0027ve reached out to some of those people and there are wide variety of use case where you\u0027d want set but the two main use cases is one there are lots of people who want this for online video games because video games traditionally our latency sensitive in the second wide use cases people really want this for live "
  },
  {
    "startTime": "00:06:16",
    "text": "streaming especially live streaming with low latency and the proposal we have is called web transport web transport is it\u0027s not a one protocol but it\u0027s a framework for making protocols which are usable on the web and you can use them interchangeably so the idea is if you have a transport protocol which provides strings and data grams streams by streams a million streams which are like quick streams or like an individual TCP connection or their streams of bytes potentially bi-directional or Union directional and datagrams when I say data rounds I mean saints which are shaped like UDP datagrams but in order to become be compatible with web transports the Transfer Protocol has to be subject to multiple security constraints which are outlined in the draft but notably your transport has to be an to end encrypted you have to support TRS I you have to support Origin Jack\u0027s and you have to make sure continuously that your protocol is that your server is still willing to talk to you and so sir requirements will be familiar especially to those who work with data channels because those are essentially similar very similar requirements so when I say protocol framework originally this was the one protocol called quick transport not eventually people brought ABS that quick is not always usable and it would be really bad for us to just fail hard if quick is blocked in the network so we defined a family of protocols which are usable interchangeably and the one of them is called quick transferred and quick transport is very similar to WebSocket I\u0027ll talk about differences but quick transport is basically WebSocket over quick fallback transport is a simulation of that semantics but over TCP for cases when quic is blocked and HTTP free transport is a probably most interesting here and most complex it allows you to create streams and send data grams within existing HTTP connections and this is particularly useful if you because it if you have an existing connection it allows you bypass congestion control flow start and establishment latency but it also can\u0027t Zufall limitations that now you\u0027re sharing your connection with other traffic so just to elaborate on what are exactly properties of quick transfers compared to data channel first like obviously one of them is peer-to-peer now so it\u0027s direct but and we do a bunch of say we remove a lot of sayings from the model of data channel which makes it easier "
  },
  {
    "startTime": "00:09:17",
    "text": "for the common case of client-server for instance in data channel you have to provide certificates of both peers out-of-band in order to establish trust between two parties and in good transportation so a PKI similar to WebSockets we don\u0027t have to use eyes you have a slightly different and I would say richer Mahmut model of communications and data channels and some most notably you don\u0027t have to use user space SCTP you have to use quick and this is on some level are really important because one of the feedback we got from the developers who were talking we were talking about why they don\u0027t use data channels especially in context of web games is that a lot of them compared to complaint about complexity of implementing entire rtcdatachannel stack and SCTP was noted as a particular pain point even on top of WebSocket we do bring a lot of improvements which are just not just like the obvious improvement of unreliable on order delivery for instance we you no longer have the WebSocket masking protocol which was added for plain text WebSockets and we don\u0027t have to use it because we encrypt all traffic by default that were true if you\u0027re doing TLS as opposed to quick as your underlying substrate then and you\u0027re using a stream cipher like RC for GCM and the attacker can produce essentially any bit pattern he wants in the wire by by simply X by X holding the keys from one side together and then producing producing counter masking or flipped plaintext so if you said to if you think this is a problem it is still potentially a problem you mean the problem on quick and quick but I wouldn\u0027t ALS um it wouldn\u0027t be with quick because quick but but remember so the reason the masking exists in the first place is because there it\u0027s because they\u0027re intercepting proxies that would intercept TCP take things that look like HTTP and they get confused and if your underlying substrate is T is TLS over TCP then you don\u0027t potential the same problem interesting I don\u0027t know if you do and the supreme have improved in recipient proxies quite some time ago but the other saying is that WebSockets involve a special shaman base handshaking headers and we use the fags that then quick enforcing al Pianist mandatory so "
  },
  {
    "startTime": "00:12:18",
    "text": "we rely on LPN to avoid cross protocol attacks and as our improvement is unlike WebSockets we do not chip cookies or any credentials by default and assumes that the application has to communicate this explicitly which I believe is it a good improvement of the privacy and security surface of the protocol that\u0027s basically the overview of the protocol there are lots of details that could go over in but I want to hear what people here think about this you heard me asked us before but now we\u0027re in a bigger arena so partial reliability sorry repair to pay on Facebook so if we want to do these things for a real-time communication often that means skipping past something that has consumed some part of the offset space because it\u0027s no longer relevant to the application so being able to read things piecemeal or at least being able to bias towards the most recent data is an important aspect Thanks so modern Thompson I\u0027m tentatively supportive of of this this notion I do recognize that the sort of space of partial reliability or unreliable transport from a client-server perspective is really really awkward when you when you\u0027re forced used WebRTC and there\u0027s some opportunities here to to use quick more providing for backs to HTTP and web servers and all those sorts of other things that we have there\u0027s a bunch of complexity here with respect to getting the api\u0027s right so that that works so I think that whatever work we do here will need to because they coordinated with the groups in the w3c that if they decide to take up the work I\u0027ll have to negotiate that yes this is definitely there is a lot of API discussion to be had and fortunately I sing the boffo to say at the Turturro zero I saw and Barnardo\u0027s icing is yeah I did want to add to echos point though it\u0027s not just to TCP that suffers with it from this problem if you were able to know the keys and absent some difficulty with getting the packetization right you could predict the ciphertext of something and therefore influence the ciphertext of something you could make a UDP packet look a lot like a DNS packet and there\u0027s a bunch of networks out there that look at their nest packets "
  },
  {
    "startTime": "00:15:18",
    "text": "and produce responses I don\u0027t know what you do that with that but it\u0027s just food for thought there\u0027s some work to be done there Justin Uberti Google this sort of speaking from the rqc standpoint I think you could probably make all the stuff work with data channels but we are definitely hearing the same thing that it\u0027s just really really difficult people are having a hand roll their server stacks if we had had quick available to us doulton GTI one three you know eight years ago maybe minder made some different choices I think this can be really useful and people will flock to it okay till now he and God I\u0027m gonna try and keep this short because my voice isn\u0027t cooperating so I like the direction that you\u0027re talking about I\u0027m not psychic reconsider the this reminds me of a discussion we had before though and I wanna raise the question of is there anything beyond an API in this partly because the protocol mechanisms why should reliability we talked about as a feature here for example also as a service that gets offered up through the CPI is ultimately going to have to be built into order may be quick and then you\u0027d have to figure out the protocol mechanisms necessary for building it into quick and then it gets surfaced up and this reminds me exactly of a discussion we had a while ago and that turned into a working group called taps and that\u0027s part of my sort of I\u0027m trying to figure out how to square this away with that conversation and Tommy here is saying he disturbs and that\u0027s that\u0027s sort of where I am in my head it\u0027s not clear to me what the difference between this and apps is are you asking difference between this and taps the difference between this and abs are more generally what does what is dead and you have beyond just an API and I say just not because it\u0027s simple but what\u0027s there to do here beyond there are so quick transporter cars some wire changes for like stuff like origin checks but those are relatively simple HTTP free transport requires like some sayings to fit or Batory data in to http free and those have to be well defined so that\u0027s that\u0027s the wire part and this is a major part of why we\u0027re bringing it here if because if it was just simply an API we could have it would have been to some extent out of scope of IETF but this requires a lot of work on how to figure out the wire protocol yeah so I I "
  },
  {
    "startTime": "00:18:26",
    "text": "could are you tearing this thing so I was saying that this is if you can\u0027t specify the requirements and then they turn into protocol building units that\u0027s fine but that transport itself is simply an API there are so it goes into working groups I think : would you mind if I let Bernard in before you please do okay Bernard I\u0027m pushing the red bug you\u0027re on Bernard speak Bernard if you\u0027re speaking Bernard you\u0027re muted coming out yes yes all right so I just had a security point of meaning the agent 33 trans Lord and a quick transport are they equivalently secure it seems linearly HTTP 3 version can inherit some of the things from web sockets courts all that stuff is there and also potentially fall back with the issues that echo readies the potentially their the quick transport just uses an IP address and a port doesn\u0027t need I guess much in the way of protocol work but from a security point of view could you comment on that is there differences in the security requirements and function now also the functionality seems pretty similar right you can do everything in the HTTP 3 that you can do in the quick transport is that right basically yeah in terms of security requirements I believe like they\u0027re both there are slightly different strata models but with HTTP free transfer - you have to watch out for like once you are allowed to create streams within a connection you have to make sure that you do not create too many streams and within an eat up all the flow control window from regular HTTP traffic but others and that they all have required plenty of obtain on both parties side so I believe it should be safe from that perspective as they both require TLS yes so I guess basically to ecers point those threats that I could talked about wouldn\u0027t exist in the quick transport but they would in the HTTP 3 with fallback I guess all right probably I won\u0027t use any more and I need to talk with our more about this class of attacks okay Thank You Colin jegs my comment is actually sure I don\u0027t know whether this is exactly the right solution or not or what the technical security deals are but I think I have a real need for something like this and it would be really useful to be able to do this and using the whole web RTC data channel stack is is just into "
  },
  {
    "startTime": "00:21:26",
    "text": "it is too difficult it\u0027s a bar too high to reach so we need something much simpler than that that allows us to do it I think we proceed with something along these lines that\u0027s ready to talk about the dispatched question I think this is a big enough piece of work that it needs a pause and a working group rather than being assigned to an existing working group or otherwise dispatched certainly I don\u0027t think it\u0027s ready for a tea sponsorship and I will we go for those of you who have very very long memories that when quick was started one of the things inside cool that was considered was just taking the WebRTC data channels back and just making that real easy you can see we didn\u0027t go there we went somewhere else entirely and I think we\u0027re at the risk of kind of coming back and making some of the same mistakes we made an RTC web for example though the WebSockets API imitation again if we don\u0027t start with saying at above here are the requirements that we\u0027re trying to meet and here are the design spaces of api\u0027s than I want and I think that we may end up saying that what you end up wanting is quick with some of the data channel capabilities built into quick native rather than HTTP 3 or WebSockets like models and I would really like to start there rather than really retrofitting thank you I agree that we need the more specific list of requirements and I actually have something like sip list but they didn\u0027t put this on the slides because of time constraints so I really like that direction so internally with the older son system to do that bi-directional communication based actually - we already put a job actually is to discuss how we did that actually we try to solve very similar problem in different the problem space deafening a wish to catch a high branch Ramo +1 to the it seems like there needs to be a bar for this and actually encouragement to put that together for Singapore like it seems like it\u0027s actually pretty good shape to take there I did have another I got in line because I hadn\u0027t heard Rana speak yet and say the word taps so when I want to say the word taps the war taps was in original version but yeah yeah we\u0027re aware of us taps okay we\u0027re looking so I like I\u0027d like to make a more specific sort of suggestion here specifically you\u0027re looking at basically having this this web transport run on top of three underlying potential transports which have somewhat different contracts one of the big differences between them is some of them are streamed and some of them are not um this is exactly sort of the kind of situation that the Cape\u0027s API was designed to look at I would suggest having a look at least "
  },
  {
    "startTime": "00:24:27",
    "text": "at the taps architecture and if there\u0027s anything in the taps architecture that doesn\u0027t cover what you\u0027re trying to do we would very much like to know about it in taps because we want to finish that by Singapore yes so so short to answer is we believe that it would be useful to provide the taps like app ability in that JPI for this yes we do not want to actually bake it like on zero browser API because it\u0027s kind of too low high level compared to what we want that\u0027s a short answer but we\u0027ve definitely considered and this is something I wrote up let\u0027s talk a bit also more into the long unit sorry thanks am i I\u0027m SEF gentle I\u0027ve just gotten back off the weekend hanging out at D Web talking to a bunch of people doing and working on debt working on ipfs and a bunch of these other technologies one of the big the sentiment there is that WebRTC has not been useful for a lot of folks they\u0027ve found a lot of difficulty in using web proxies a web RTC to build peer-to-peer systems and hence the need for things like Beeker browser to be able to actually add application level like explicitly implement protocols like that in the browser because of a lack of more protocols like this so I just want to say like as someone representing all of the folks that I talked to on the weekend there\u0027s a lot of demand for more ways that we can do networking so generally support it cool so we are at about five minutes before the end of this discussion so I would appreciate if people can we\u0027ve already had some comments about what do we do next and comments in that direction would be highly appreciated right to quick technical points and then all next I guess one I\u0027m sort of cautiously optimistic about this I\u0027m vaguely sad that people seem so sad about data channels but visit of life so there we are I\u0027m I don\u0027t think this will solve your debt problem because there\u0027s a specific client server mechanism and so unfortunately your continue to be sad by digital\u0027s um in terms of we do next this is clearly like way way too big to just a tea sponsor or take to a poop down so I think like the right answer is off so I would encourage you to ask for one in school but so could you clarify for me is HTTP three transport built on top of quick transport on top of quick transferred oh no it\u0027s so it seems quick transport implemented by browsers yes quick transport is basically quick but with origin filled that\u0027s the simplest way to describe it and it\u0027s a very low-level primitive it\u0027s very simple but it\u0027s not it\u0027s used by HTTP three transport yes and as much as like they both use quick but that\u0027s it that\u0027s okay that\u0027s good to "
  },
  {
    "startTime": "00:27:27",
    "text": "know I I just will say for my use cases HTTP three transport provides all the benefits that I would want out of quick transport so I don\u0027t have a use case for quick transport it might be easier to dispatch without quick transport yeah repair to pay on I remember this time I just wanted to really quickly say that I really dislike the idea of quick transport because I like the idea of having one protocol that I can dispatch age-3 for instance because people have said is that the same well yes but it\u0027s also a superset because HTTP implies caching and caching is a way to get scalability and that\u0027s a huge differentiator suzay short answer is I\u0027ve thought a lot about quick transfers versus H Freight transferred and I\u0027ve talked to a lot of people and depending on what you want to use it for you will either really want one or other because quick transport is useful for example online games which just do exchange real time staff and they don\u0027t want to all aged free overhead but you will obviously want h free transport to understand why I want both and I think we can fix it by fixing HTTP as opposed to trying to have raw sockets which is terrible bad you\u0027ve seen it it\u0027s bad right let\u0027s let\u0027s make HTTP work really efficiently for these use cases which may which may require some extensions there anyway I\u0027m done Martin since you were heading for the mic we have time for one more thing if you want to say it Mike if burthen after martin mountain thompson in terms of dispatching this they the w3c is obviously gonna have to build an API in order to support this I suggest that we simply respond to a request from them and then talk about creating a working group in that context now might mean that we wait to have the buff until they make their decision but it might also mean that we can skip the buffing part we have a liaison we should continue a conversation with them this is not going to happen on its own correct so we need to we need to sort that relationship out around somewhere and we have a layer self here so okay so what I\u0027ve heard is that several people have expressed interest several people to express that this is something that would need the buff and we definitely need to coordinate with wc3 and figure out how to move forward on that yeah just before I go there is a side meeting I well in which I want to go in like the finer points and like quick versus HTTP free transport and that\u0027s in Tuesday 3:20 p.m. yeah so that\u0027s all on my part "
  },
  {
    "startTime": "00:30:42",
    "text": "yes what now Paul no it\u0027s the same it\u0027s a joint okay there we go okay all right okay people if you can be quiet we\u0027re continuing the session here so the box just to highlight moths that are going on there is the the mob spa on Thursday and this was related people remember we had the G GI e topic so how did okay oh okay sorry about that someone messed up probably me and then there\u0027s the ad Bob applications doing DNS I didn\u0027t put when that one was down so people can look at their agenda side meetings there is a side meeting and Eric I don\u0027t know if you want to say something really fast for international shaking because I just went through and looked at side meetings and looked at once it might be interesting because that people don\u0027t say if they\u0027re closed or general interest so if you want a bunch of people they or don\u0027t want a bunch of people they might well say something well I Eric Berger and this is the ITF so we\u0027re using an ITF room so it\u0027s open however it\u0027s mostly going to be regulators and policy makers from various countries around the world so if you\u0027re thinking this is where Jim and I are gonna do a knock-down drag-out steel cage match of international shake and you\u0027ll be disappointed but if you\u0027re interested in other countries other than the US and Canada adopting stir and shake and then feel free to come although the room I think only seats 16 I didn\u0027t expect lots and lots of people the show so okay send me emails if you do you want to go okay and it\u0027s the color room I think it\u0027s Kohler and not Collier awesome right there earn the cold line okay alrighty and then Victor already mentioned his his web transport had a question after it because it had a question in the agenda but it sounds like you\u0027re having it you\u0027re on right okay yep it\u0027s on and then there\u0027s an HTTP priorities thing in Van Horn and again I just pull things that look like they might be interesting so so months to say 30 seconds on what that\u0027s about mr. Nottingham is that yours HTTP priorities so I mean I can speak to them when we\u0027re trying to work out what to do with signaling of priorities in HTTP okay did you get the web pack one that\u0027s on - more money - just saw that goodbye an email there the web packaging say media don\u0027t know what time it\u0027s tomorrow morning tomorrow morning Abbot session Jeffrey you want to say which room it is it\u0027s in in Van Horne 8:30 okay okay yeah "
  },
  {
    "startTime": "00:33:44",
    "text": "and again there\u0027s the link in there for where you can go look at all of them because there may be others that you\u0027re interested in okay there\u0027s something will decide meetings and you may remember that you\u0027re working on encryption for email so that users can actually use it and there was a mailing list called meetup and we all now also having site meetings on the topic and the next time meeting will be on Wednesday afternoon I think it was free 20 in the room up there in-situ can send an email as well but fun topic is like synchronization of private piece which affect a lot of interest sorry the the new working groups I\u0027m aware of is the the bimmy or did we charter that while I was sleeping this is very new I\u0027m quite certain we have a rum working group which was chartered since ID f-104 then was too far from the microphone but he said this is the fake news I failed I found the chai guess I found the Charter and thought it was work yeah it says what happened but there\u0027s a working group called rum chartered since but whatever oh oh right paw words to word I\u0027ll even remember what the acronym is real a user machine okay it\u0027s basically discussing an interface for a graphical user device primarily for the video relay services okay you know please come before we before we get into the topics there\u0027s just one thing that I wanted to say and I don\u0027t know Adam wants to say something as well this is Barry liebe Hart ad with the the adsr currently have currently asked the NomCom to fill two-part ad positions because adam and alexei are ending their terms at this time but we are having a meeting later this week the art ADEs about deciding whether we really want to fill two art ad positions or just one and drop down to two 80s in the area so we\u0027ll be figuring that out this week and and we\u0027ll let NomCom know our decision and they\u0027ll let you know input to that "
  },
  {
    "startTime": "00:36:50",
    "text": "will not be unwelcome so before we start this the one thing I wanted to mention is that there is a group of people and this was posted to the art list I just want to make certain everyone has noticed it there was if there\u0027s a group of people putting together a formal specification of the robots exclusion protocol which menos robots.txt I am my inclination at this point is to ad sponsor this I think would be a very very good thing to have an RFC that formally defines this with modern BNF and and all the bells and whistles that come around that if you have any concerns about that course of action or if you want to like give input to the document please reach out and let us know Thanks okay I\u0027m going to be talking about this or rip stuff here for a second so next slide please I where we\u0027re at a very early stage on this draft okay the authors don\u0027t even agree on what to do we\u0027re still sort of thinking about it much of the stuff that I see coming up that we discussed earlier today and some of the other sessions they just make me rethink that there\u0027s much better ways to do some of the things they\u0027re in here so this is I want you to get a feeling for the problem we\u0027re trying to solve and we\u0027re trying to get a bunch of people to come and get their input make sure we\u0027ve got a variety of riot requirements into it and it meets an interesting solution and it is around the space of sending media in a more cloud friendly way so next slide please the problem that we\u0027ve been looking at is we start building all of these cloud services and they might have WebRTC coming up with them and they typically needed to take a sip trunk of some form to take some voice over to the PSTN or maybe over or to a you know voice recognition API or Texas speech very there\u0027s a bunch of use case we\u0027ll talk about those in a minute but sip was not very friendly in the way that it worked in coming into large current cloud deployments it\u0027s there\u0027s a lot of infrastructure that\u0027s been built for those that we can\u0027t particularly take advantage of and this protocol that we\u0027re looking at is how can we do a better job of that make it easier for us make it easier for that type of connection to work so we\u0027re we\u0027re looking at this is you know if you take WebEx going to or you know I\u0027ve got cloud conferencing service you know there\u0027s there\u0027s there\u0027s end users and the devices that might be using WebRTC or something like that up to a cloud service or who knows what they\u0027re using it\u0027s a cloud service that\u0027s doing a bunch of processing it inevitably has to do some subtracted a off to a service provider that\u0027ll connect it up to the PSTN and what we\u0027re looking at is replacing that link at the top one on the green here between the cloud service and the service provider it\u0027s not about what go down to the endpoints or any of those things it\u0027s a cloud-to-cloud sort of thing that\u0027s you know less than 20 years old it\u0027s a sort of modernized version of it so next slide so later on I\u0027m going to talk a little bit about the technical properties of this hour but we\u0027re gonna run media over HTTP we\u0027ve had several discussions about that in various forms day of h3 and we\u0027re "
  },
  {
    "startTime": "00:39:53",
    "text": "going to try and have a very simple replacement that gets rid of many of the problems that we\u0027ve had with sip SDP and RTP and there\u0027s a lot of reasons we want to do this a the big ones are there are all kinds of services that were built for scaling large-scale websites are already out there they\u0027re very easy to use you\u0027re familiar with them you\u0027ve used them like auto scaling I mean load balancing is something that you can do and sip you could build all of this every one of these things you could build and sip but they\u0027re already built as deployed an incredibly scalable way on every major cloud service I you know H a we did it one way doing assuming a certain sort of design and sip it\u0027s very hard to do I you know high availability in a modern cloud world where various idioms will just be rebooted and things like that as part of the surface it wasn\u0027t you know sip wasn\u0027t designed quite for that type of high reliability was designed for a different type so API gateways being able to use those being able to use all the modern web das prevention tools service meshes all the application monitoring there there\u0027s just an incredible amount of infrastructure that\u0027s been made for building these HTTP based services and we want to be able to take advantage of those in a really easy way so that\u0027s where this that\u0027s the design space that we\u0027re trying to deal with next slide as I mentioned you know this is this is a logical extension of people starting to move you know we went into the WebRTC stuff this moves the other chunk of it that was never what was always out of scope for WebRTC which was how do you do those cross cloud links next slide so I\u0027m going to talk about a couple of the actual sort of use cases that are the drivings yes next class please so you know one is the general telecom apps and bringing those into like a wet past type environment so we\u0027re seeing more and more of those you see companies like twill others Google there\u0027s all kinds that have various infrastructure for building these things and how do we connect them together the calling surfacing anything you\u0027ll call call centers in that type of area right now is in a large transition from being premise-based to being cloud-based and as they move to that they want to be able to use that so the leading cloud call center providers are also trying to deal with that if you\u0027re trying to embed those into your website have a website that has easy chat it\u0027s very common to see WebRTC used for that now to talk from your browser or your device up to the cloud service but there\u0027s not a good way to get those cloud services down to the other parts of it next slide SIP trunking just basic connecting to the PSTN you\u0027ll see you might not think that that\u0027s a that\u0027s a huge part but I mean like keep in mind that is the profitable part of Skype right that is you know a key part of every whether it\u0027s hangouts or WebEx or any of these call centers it\u0027s a very important part of all these systems is connectivity to that system even though people are largely IP based they still need the option to be able to do that for a certain percentage of their calls it\u0027s a very painful part of doing it next slide "
  },
  {
    "startTime": "00:42:54",
    "text": "so I\u0027m gonna jump in to give you a little bit of flavor of the way we\u0027re thinking about this problem this is obviously very early and would change wildly and where we ghost next slide the general information flows you start thinking about what needs to go from one cloud to the other cloud it\u0027s really not very much information and it\u0027s pretty simple in these cases largely because they\u0027re constrained and we\u0027re trying to currently constrain to just voice on PSTN Interop we expand out beyond voice later so one thing that you need to know is hey what codecs and parameters does this other side support and it\u0027s a very static thing you can get from the service provider we support the following things that\u0027s it it doesn\u0027t change on a call by call basis it doesn\u0027t change on the day by day basis it\u0027s a pretty static thing next when you go to set up a call you can say set up a call like of this you don\u0027t need an offer answer like like just just ask the web community how much they love offer answer and it says yes or no that\u0027s how things work on the web it\u0027s very simple information one you could set up it\u0027s just use this codec this phone number perhaps ah then we get some basic events back there are very few handful events that are any interest to what\u0027s happening with a call you know it\u0027s it\u0027s proceeding it\u0027s ringing its ended it failed this it\u0027s pretty simple the media stuff is a little bit more and then we need the media back and forth and I think a lot of the sort of things I saw in mobs today early on and here today there are different ways to do media we\u0027ve been doing it with the most brain-dead technique that\u0027s been proven to work for a long time is multiple long poles over h3 and I\u0027ll talk a little bit about that later next slide the capabilities of what we think that you should be able to describe is really the code actually support maximum bit rates size of samples whether you need to force to use constant bitrate or not a few other little things but I\u0027d say that very minimal set when we went through everything that was an SDP and said what parts of it do you actually need for this type of system this is pretty much it we throw it in a JSON document like a JSON record and call it a day next advertisements what we do numbered call call our idea of the caller which always brings collect big questions next slide lag here we\u0027re gonna use passport sounds really complicated it\u0027s a JSON object with like three things in it you know who you called who you\u0027re calling the time signed next slide the protocol mappings of this of how we map it into h3 there\u0027s just you know there\u0027s some various API calls that we hit we hit a few to get the things I\u0027ve talked about like getting the capacity creating a new call once you have a call you can basically pull for the events and you basically set up a bunch of concurrent transactions for the forward and backwards media next slide the basic media approach that I talk to is you at the beginning you know do a bunch of posts to set up these concurrent transactions for the media and when the other side wants to send you some media when it has the first RTP packet along it sends that to you over the connection "
  },
  {
    "startTime": "00:45:55",
    "text": "and we mark that connection as in use without my way we call them and until that is act it\u0027s in use and when the next RTP packet arrives you would send it over a different byway until it was actually a third one arrived the previous ones actor reuse it so it\u0027s a very simple transaction it has a knack of every packet there\u0027s many ways we could probably do better than this and we can talk about how we want to hit those yeah sure we\u0027re not questions just my my comment is I think it would be interesting to explore how this might be done within the web transport trial which actually is real code to see if it can be done better or if the changes are needed to make it more efficient but this is exactly the kind of flow that was was thought about there yeah so that\u0027s that I totally agree Ben and having watched previous presentation I\u0027d love to try that I know Justin also has some ideas a lot of experience in data on various ways we could do this so I think that this is whether you could actually play with it and actually try it out and get feedback on it anyway cool we\u0027ll do it explain yeah no I\u0027m fine that\u0027s our events one more slide after this that we\u0027ve go with the security is a really easy model with this too it\u0027s all exactly how we do web security there\u0027s no special encryption for the media no special anything it\u0027s just TLS but one way we off with a token the clinton the other way and it is not an indian security model this is this is a from the cloud provider over to the PSTN provider okay it\u0027s not trying to accomplish that i think that\u0027s pretty much one more slide let me just okay we\u0027re done so questions about this and then i\u0027m gonna add like make my ass for what i want people to do so to any questions about the sort of general space we\u0027re proposing and thinking about Ronnie I\u0027m a bit confused because I don\u0027t understand what the relation between PSTN and all these codecs that you want to negotiate because piston is g.711 so what are we doing here I don\u0027t understand the case the this is for a cloud service like WebEx to be able to have a very web friendly way that runs in modern cloud centers to set up what we use do with a sip trunk over to a service provider that was providing us PSC and termination like comcast muslin adi when you say PSTN you also clean mobile network to you right just oh yeah sorry I meant just my mistake in using the word PSTN I understand your question now Ronnie I mean I mean the existing haha I don\u0027t know whatever that thing is that useful what we call Eric Kreeger are you calling weak all interconnected "
  },
  {
    "startTime": "00:48:56",
    "text": "point okay you know like I don\u0027t know how people make these these sip gateways and they connect to something whatever is on the other side of that is DNS is seven you know that shit yeah and sixty percent of the time it\u0027s connected through a not sip interface to get to sip on the other side so either way I don\u0027t care what I want to do is not think about the SIP I want to think about the web stuff and not have to deal with all that crap I don\u0027t want to worry about whether it\u0027s called void interconnected voice mobile or PSTN okay so we um we\u0027re working this on github super welcome comments on github PRS any of those things love to work with people on that please like let us know if you\u0027re willing to participate if people are super interested in this I\u0027m have blocked off a room at 8:30 tomorrow morning where people where I\u0027m glad to talk about it more but really I think the best thing to do is just go get on github and start hacking this forward and let us know what people need so questions comments on that Benedict I\u0027m obligated to note and I don\u0027t expect a response but cough is a authorization protocol and you have it as a authentication protocol it\u0027s like that\u0027s really embarrassing thank you what are those I never want to know what those are again and yesterday early media know 2:40 [Music] hello my name is Devin O\u0027Brien and I\u0027m with Google Chrome and I\u0027m here to talk about a certificate transparency and BCP 198 okay so upfront just a brief background on what RFC 696 tube is is is it is the second version of the certificate transparency protocol that iterates on 696 - which has been deployed for some time now but in the final stage of definition of 696 you piss we have received a discuss item saying that it violates be CP 190 and so TL DR or "
  },
  {
    "startTime": "00:51:56",
    "text": "asking for an exception to complying with section 2.3 of e CP 194 696 OOP this and so we\u0027ll get into that here in just a sec some quick background the purpose of certificate transparency is to publicly log all issues TLS certificates at the point of issuance for the most part such that anyone can audit them and we can detect miss issuance the 696 - is the original one and this is draft 32 is the current version of V 2 and certificate transparency enforcing user agents like a browser for example require proof that a TLS certificate has been logged in one of these or several of these logs in order to sex success validate the certificate and the behavior of logs is heavily dictated by existing user agent policies such as chromium CD policy or apple CT policy and and this is sort of the the gist of really what I want to get into here is that CT is an adversarial verifiable protocol that is specifically designed to limit their reliance and trusted third parties and so the the main use case here is reducing reliance and CAS but one of the inherent designs of this was also to not sort of kicked the trusted third party can down the road and then trust CT logs and so we achieve verifiability through a set of by limiting CT logs to a limited set of behaviors and it\u0027s a non goal of ours to add flexibility to these log operators in such a way that could be gamified to sort of counteract some of the overall goals of certificate transparency and so getting kind of right into this I want to talk about the approach that we\u0027re recommending here and then following this I have an analysis of alternatives so that we can really get have that conversation draft 31 of 6960 of this before we try to accommodate BCD 190 with the well-known language it basically specifies this that the log server prefix which is one of of a set of log parameters that includes log key maximum merge delay a couple of the parameters for a CT log is specified and it may include a path as well as a server name and a port these two entries here are just examples of two of the api\u0027s that are defined and it\u0027s log server slash CTE slash be to submit entry and so to this to just sort of hone in the point that log server has some flexibility into it these are three world real world examples of existing logs we have a digit cert log which shows column slash log we have a Google log that is log slash Aragon 2019 where that\u0027s the name of the log itself and then verify there one just comes straight off of the base as well so to adjust there was some discussion on thread about alternatives to the existing approach and one of them "
  },
  {
    "startTime": "00:54:57",
    "text": "was not well known but if you pull from the RFC 57 50 85 it says in Section 1.1 that well moans are not intended for the general general information retrieval or establishment of large URI namespaces on the web and additionally that was discussing on the thread was that the well-known space is often restricted by service providers which would limit certain deployment scenarios for log operators unless they got exceptions so if I may just quickly and I\u0027m speaking only as an individual up here RFC 57 85 has been obsoleted by a document that was specifically designed to remove this oh okay sorry I put it I actually I sent you an email on this apparently you didn\u0027t one of the other ones that was heavily debated was the use of directories but as I mentioned in one of the previous slides weird he were keen on reducing the ability for log operators to hide miss behaviors through shenanigans and so we don\u0027t want to give log upper to the ability to sort of hide this issuance if you will through behaviors like constantly changing the directories and so one of the goals is to to fix the log operator behaviors in such a way that the behavior is well defined and is verifiable and I did in addition to this there is already a set of log parameters that are sent down which is as I mentioned hash algorithm key ID key ID maximum merge delay and currently the log server parameter and a switch to directory would basically bifurcate these and add additional complexity here and it\u0027s on the move to directory would have a introducing beauty around how often it should be refreshed what is stale what is fresh and lastly we considered URL templates but currently this would require a significant increase in client-side implementation logic that is otherwise completely on required by the protocol we have deployed 696 to the original version of CT by certificate authorities law of operators and multiple user agents and none of the members of the ecosystem have expressed concerns with this specification the increased implementation logic would also discourage diverse implementation of Ct auditors which are not always implemented by very large well-funded tech companies like user agents and that would we would like to encourage that broad implementation and sort of lastly on this point in a real world scenario using URL templates it would likely ossify the entire ecosystem with ossify on the exact same structure we currently have and we pointed to a an example of where this actually happened with weirds with some discussion on that point and "
  },
  {
    "startTime": "00:58:01",
    "text": "this is just some backup and this was scraped together by some people in the trans working group about various protocols either in ITF or not that don\u0027t follow this section of BCP 190 so I\u0027d like to open for discussion on this point so my perspective on this I both a domain that\u0027s kind of the primary concern of PCP 190 is don\u0027t put restrictions on domain owners I operate a CT log I\u0027m also a consumer of CT logs so I use this as a client and I\u0027ve also just worked a lot with HTTP API is in the past and so from my perspective the CT API is defined in 69-62 is PI it\u0027s been zero burden and I think it makes a lot of sense to keep the same approach for v2 and generally speaking I think you know I spent some time looking at the history of the discussion on BCP 190 which some of you probably remember started as draft nodding him get off my lawn and I looked at some of the motivating examples early on and there\u0027s three main things it prohibits you know don\u0027t add query parameters to try URLs and the motivating example for this at the time was the URI signing draft where you would take a URL that existed and append some query parameters with like a signature and so on and that you know does this transformation that is invasive on existing URL so you know fine I think that\u0027s totally reasonable there\u0027s also things you have collisions with paths so PCP 190 says don\u0027t specify an absolute path on a server somebody might be running something else there and then the third thing which is section 2.3 which is what we\u0027re talking about here there\u0027s even if the server operator specifies a prefix out-of-band like in these examples slash log or slash logs are gone 2019 even then you as a protocol designer you can\u0027t say within that space it\u0027ll be flashed et /bg such submit entry you have to indirect that through some other mechanism and the other perspective I have on this is as a co-author on acne which ran into a similar objection early on and we decided we actually went through also a couple of rounds of iteration on okay how do we work around this thing on the first iteration was bad we use link headers that didn\u0027t actually adequately model our space we needed to change kind of mid protocol and we adopted the directory structure actually during this process for 69-62 Biss I suggested let\u0027s just try directories again and when Rob tried to "
  },
  {
    "startTime": "01:01:03",
    "text": "add that to the draft he realized there\u0027s actually some bugs in this and he filed an errata against Acme that unfortunately due to deployed behavior we can now fix so you know basically what I\u0027ve seen is adding these unnecessary in directions produces bugs and has like a lot of potential to produce bugs and at the same time the normal and accepted practice for specifying API is that use HTTP is you have a prefix and under the prefix you have a number of paths that do certain things document ellipse we would we\u0027re we\u0027re out of time and we have other people in line can you wrap that\u0027s it that\u0027s all I want to say thank you thank you we\u0027ve lined up frozen if there\u0027s people around it and we\u0027re technically out of time for it with who everyone be fast victor Oh silly if I will be very fast nobody should ever be forced to follow DCP 190 a section to point free if it doesn\u0027t make sense in context I personally believe that like it has been shown two slides with good all of the protocols which people use in real world extremely successfully like say gates protocol which did not follow it and two just fine so I do not believe we should add extra complexity just to satisfy those requirements the transparency law auditor and I wanted to underscore that certificate transparency isn\u0027t a normal protocol it\u0027s a verifiable protocol and that means that the protocol needs to facilitate auditing and and the discovery of this behavior and one of the things we\u0027ve learned since the deployment of version 1 of certificate transparency is that it\u0027s really hard to anticipate all the ways that a blog could misbehave and this makes it really hard to ride an auditor of that secure and I think this and the antidote to this which i think is also a problem that will apply to other verifiable protocols is to make the protocol as rigid as possible because that reduces the number of ways analog could have misbehave and so while it may be appropriate for a non verifiable protocol and to have to follow be CP 190 I think that in the case of verifiable protocols it\u0027s important for the security of those protocols to have to give the protocol designers flexibility in in locking down the protocol to make it more verifiable and that\u0027s all I have to say thanks the Callanetics I mean it\u0027s clear that the best current practice of every single deployed API service in the real world today is to use prefixes exactly like you use them here this 190 is just out of whack and we should deprecated BCD 190 we\u0027re out of time take it to the list sorry no if "
  },
  {
    "startTime": "01:04:11",
    "text": "I give me more country we do want to have a side meeting on this so if this week there\u0027s not one scheduled yet because it wasn\u0027t clear that the people who cared about this were necessarily paying attention and so we want to make certain that after this discussion we got a meeting together where the interested parties were able to get together in a room and talk about this so what I\u0027d like to see is the people who have an interest in this topic coordinate amongst themselves on the art mailing list to find a time where they can get together in one of the side meeting rooms this week it\u0027s I would like to see this as the beginning of the conversation we clearly did not reach any conclusions we ran out of time thank you anyone have the other blue sheet has anyone not signed a blue sheet "
  }
]