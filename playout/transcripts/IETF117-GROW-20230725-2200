[
  {
    "startTime": "00:00:31",
    "text": "Yeah. Yeah. is near street also. I have this problem where I actually like to find out"
  },
  {
    "startTime": "00:02:13",
    "text": "Yeah. So I think this came before your message. But Reporting you, your own microphone is gonna be Well, bp Boop. be 2. I like the transcription. Yeah. It's kinda close. for us. Good to see you. I'm well. How are you today? they were purpose. Does it show I hadn't thought about that. Right? But Lovely people, we're gonna start this session. my first my my first Order. Order. German Order. Mister Folk, made a floor"
  },
  {
    "startTime": "00:04:00",
    "text": "we can order. Sorry for that expression. I don't think so. The floor will be ever in your favor? Is that what you're looking for? You have to hear from us. Ladies and gentlemen, welcome to The crow working group session at IETF 117 in San Francisco, A warm welcome to the remote participants We appreciate that you're here Virtually wherever you are on this fine planet, Before we continue, I want to point everybody at the notes well The notable includes guidance on how to treat each other with respect, which we find importance here, but also that it is mandatory for you to fill in the blue sheets by scanning the QR codes to indicate your presence in this room. So if you have not yet scanned the QR codes, on your phone, please do so now. Here's a bunch of online resources related to the Global Routing Operations working group, For for those that just walked into the room, please scan the QR codes to indicate your presence. We have a mailing list. that is fairly easy to manage in terms of traffic volume. There is some outdated links to are minutes keeping system and the Jabber server, so we should update this slide So we've covered blue sheets for the QR codes. we need a merit taker Sue said she's gonna keep it even which is to give her a minute. several paths, I'll schedule. Yeah. It's all it's all there. Sue Harris, thank you so much for your volunteer services. We need a JabberScribe"
  },
  {
    "startTime": "00:06:02",
    "text": "I'll assign myself and monitor the Zulive chat room and then we need to bash the agenda. agenda today is a quick overview of The some drafts that recently saw activity then Paolo Lucente will present on BNP thinks Jeff Haas will talk about HB attributes, propagation, Carrie will talk about BNP. an an Maxine, we'll also talk about EMP. Are we missing anything that somebody sends slides that they wanna present today, I don't think so. Good. Good. Good. with that, I'm gonna try and open up No. Let's let's address status. They're the working group documents that that outlines a BGP community in the well known category, to indicate any castness. the offers of this draft indicated that they would like proceeds to work and group last coal But at the same time, in the last few weeks, I saw 2 messages to the grow mailing list. expressing a little bit of concern that it's not entirely clear what to do with with the community, and and if there's perhaps an an angle of abuse in in setting the community in in inappropriate situations. whereby it's not clarify what inappropriate exactly could be. So I want to encourage the working group to Add to that Milfred about the BGP Anycast community And if I don't see any activity in the next few weeks. I will start working with last call to force everybody's attention to that draft."
  },
  {
    "startTime": "00:08:02",
    "text": "Other Traff's status. Is anybody waiting on the chair to review or shepherd something at this point in time. Usually, Paolo has a to do item for me. at the moment. Okay. You're you're gonna do it in your great. Great. I'm gonna try and keep track of the to do items for us. Hello. Camilo Cardona. So I didn't want to make a presentation for but I sent to the mailing list latest start have loaded the latest draft for the BNP Young module. the the draft. We intended it I mean, the document now is much filled with details, the design choices, We try to add examples for everything. So now I mean, we are in a point in which please read the document I mean or, I mean, I hope we don't have to make more presentations about it or we will, but There's enough content there so that you can read the document and come stuff. plain. I mean, just go and complain. I mean, if you find something that you don't want, if you find that they sign choices are wrong perfectly. But just go and read it, please, and and and and send feedback. That's Did you already make a pass through the Yaggen Doctors? I was hoping that we could have some more feed I mean, if somebody can read it from the list and have more insights or or does not agree with something, that will be great to have it now for the young doctors take a look, which when they take a look, they will probably will try to to make the model to make the model fit the design choices. a bit better, or they will have complaints about it. So I think it's better that the group reads, like our our our insights and our design choices and and if there's any complain about it, that we hear them the beginning and not at the end when the draft is about to be call for last call if that ever happens. in there. Right."
  },
  {
    "startTime": "00:10:01",
    "text": "Is there anyone in the room that has in-depth familiarity with Yang that wants to volunteer to to provide review on the BNP Yang model. Yeah. So -- No. No. Jeff has been -- -- you already did it. Yeah. Jeff has been very careful. I'm I'm not -- Anyone else? Well, if anybody works with BNP, practically in their network and and and just I mean, it's just that I mean, they don't have to be experts in young. They just have to be just have to we have BNP running on their network and say, hey. That's what I want. is in the draft. And I think that roughly I hope it's clear enough that you don't have to know young. because there are examples. There's everything. Just make sure that what you want is there. And if the graph is too complex because there are too many things, you can also you can also say but but but I mean, finding finding the balance is complicated. I mean, that's all what I wanted to say. So Alright. Thank you. other status updates people are wondering about? Any Then we shall proceed to the first presentation, Holo. why didn't she come forward and and lights on us. Which one is it? I mean, if everything ends up like this. things are really hard though. Hello? One second. It's it's a peer up message namespace. Right? I just see what happens if we share this? Yep. Yep. Nice. Perfect. Yes. So I rehash one second, this draft that was from John, and it was there. It expired."
  },
  {
    "startTime": "00:12:00",
    "text": "quite simple, kind of trough. Like, there is you know, the init message and the PROP messaging BNP. They have they are sharing the same name space. And so John had the idea to split down. like, because it's just a good idea. what happened is that we were working in the meanwhile with the lock crib and the other about. So we were touching that specific registry. And so back in the days, I volunteered myself to help out John like to you know, 1st, we do the these two drafts, and then I will help out, you know, you know, untangling the the whole thing. So Next slide, please. Next slide, please. So this is how it looks looks like, right now, the BNP initiation and PROP information So the conglomerate for the 2 ones. So next slide, what I was thinking is to know we have at the NPE initiation information TLB. with 012. And then next slide, please. the BNP Paragraph, we have the 0 3m4andprobably it would be a good idea. It's not in the draft yet, but to reserve the code points that are not being used or migrated to the other register free. Just you know, to for you know you know, to be clearer. But so it's quite simple thing. There is no nothing special from the very beginning. I think it's just good, and it makes the protocol a little bit more Polished up. So that was it about a distrust don't know if there is any comments Anything about it? No."
  },
  {
    "startTime": "00:14:00",
    "text": "s. Right? Thank you. So So we go to the TLD EBIT draft. here, you know, I will not rehash as always you know what it this is about. I I you know, I think I'm I've been talking enough about it. There was essentially one just piece of action item to do there. Next slide, please. And second, again, It was that, you know, Ahmed thank you, Ahmed, for the feedback. So he was clearly pointing out that you we use those code points very high for experimental use, and that was clashing with the fact that we use the topmost bit for the EBIT. Right? And so essentially, like, in the draft, I I simply there that, you know, experimental, so do were reserved for experimental, but EBIT in the end, it's also for experimenting around stuff. It's just a different mechanism and a little bit more, let's say, codified, let's say. And so, essentially, like, i proposed to remove these code points for experimental, and we only leave 65, 5 35 has already served, and and that's it. So this is the only thing that changed in between the last meeting in this one. I think it's kind of a straightforward Think to do to do Ahmed, I see he approves and we discussed it on the mailing list that was also on the mailing list, not really any opposition. But I don't know if Any comments, Feedback, on this, No. Then next slide. Hey. Thanks. Bye."
  },
  {
    "startTime": "00:16:07",
    "text": "yeah. And maybe the last item for the EBIT draft is just Oh, that the EBIT, maybe it's applicable to stats types as well. I I think so. May yes. I I bag a number of yes 3, yes, 40, yes, Okay. Cool. I will I will do that. Perfect. Thank you very much. Next slide, please. So, yeah, this is the tlb draft. So, also, this one, I will not provide the background because have been talking a a lot about it. Also, there has been no progress since you know the last meeting, but I wanted just to present the next slide, please. You know, what is remaining to do essentially. So two items. 1, I would say, probably pretty easy. is to, you know, stateless parsing. There was you know, kill vbit where I was saying, you know, this is for AdPath and I received the enough feedback that, you know, doing the but in the TLV is not a good thing. People really like the flag. of add path. The add you know, the flag is not there. So maybe we can do you know, just a super quick and easy draft adding the flag of AdPath. Right? And so we forget this all stateless parsing TLV think. I I I I am enough convinced from the feedback that I received this is the good way to go. But the other thing, and here we come to the chairs. So there has been enough conflicting feedback on what to do whether we want to bump the version to version 4 of BNP in order to support this new"
  },
  {
    "startTime": "00:18:00",
    "text": "semantic of the for the root monitoring, or we want to use a new message type. I don't know. We want to call it the TLV you know, route monitoring or whatever. Now, Orders prefer the current way, so which is to bump the version. Why is that it's only philosophical. There is no real advantage but it's like, you know, BNPs, you know, without TLV support for route monitoring. it's a closed protocol. We have to open the protocol app in order to make it on par with other telemetry protocols than what people do with with you know, what people work you know, if you open the Pandora's box, it's not our know, it's not the scope of this draft, but we have to do it. Right? It's key for for for for email. the protocol to be open. And so if you bump the version to 4, dang it it's like, you know, it is easier for operators to go to vendor and say, hey. Do you support version 4? of BNP. Right? And when they say no and and they say I support our tree, then you'd say, hey, but there is a new version out there. It's clear compact pragmatic easy. Whereas if you do a new message type, what happens is that you have to do to say, hey. Do you support that new message type? It is you know, kind of less relevant, it becomes an optional thing, something that yeah, we can do or not do and whatever. You know? So in the end, there is 0 technical difference let's say, between one or the other, and the feedback that I received So there is people that agree to what we are doing. And there is other people that say, hey. But you bump the version let's say,"
  },
  {
    "startTime": "00:20:04",
    "text": "just because of introducing the TLDs in 1 message type. Right? So I wanted just to trading that up. I didn't want to take just I I I will you know, I'm at expressing what is my preference here. I wanted position from the chairs as well. because, you know, it seems we are kind of 5050. You know? So into a flip coin? No. So that's so that's the thing. So Also, this is a good opportunity for somebody else extra feedback like, you know, we are rehash in this tank. If there is anybody that wants to say something this point, please say it. Otherwise, I would really like if the chairs would have a position on this. So before we Go there. And since you indicated there's no technical difference between bumping the version or publishing an RC that extends the current version. This sounds like perfect bike shedding material. Jeff, you are in the queue. I am curious to hear what your perspective is. and then Med Medicine, and Maybe others will participate in this conversation to decide what to do. So what I went to see as a protocol developer, no matter what my protocol is. is anytime there is a change of the rules, So if I would expect it to pull something new, you know, that's not like an actual TLV, out of the queue. Your message type has changed. then these people clearly signaled somehow. BMPs largely doing that. through version numbers right now. So That's one piece of my rule. The second piece of my rule is if you are causing a procedural change in the protocol. Events are process the different fashion that also needs to be cyclical. And, again, BMT That's where we're doing these things. I think you're steadily heading towards is"
  },
  {
    "startTime": "00:22:00",
    "text": "number of places that you need for clean extensibility points are being closed off by TLV. That's good. one of this success criteria, as I suggest for the chairs as part of this, is reviewed the entirety of BMP with the messages and make sure you have I covered everything with a TLV If I done all of my extensions, can I maybe do this and make it all done once? And then much like BGP stays at version 4 for 30 years. The BPMP stays at version forward for, you know, next no 10 years. Thank you, Jeff. So, Jeff, am I am not telling you correctly that your largely in favor of pumping the version number. Yes. Please bump the version number to tell us as a signal that these things have happened. This means that collectors will be very clear on what the things have changed. And, ideally, as part of putting out your document. You have a very clearly high not only in following normative text, but a very brief summary of we have made these non backward compatible changes we are signaling via this new version number. Thanks. Thank you, Jeff. Then medicine. I think it should be green. Alright. I I largely agree with what everything that Jeff just said. I think in keeping with how we've been doing this up to now. Bumping the version number is the sensible way to go. And I think that this is fundamental enough to the protocol -- Yeah. -- that this constitutes a new generation of it. I don't think that this is just a feature extension. introducing as a new message type the question of what do we do with the old message type as well. And I don't see that it makes a lot of sense for people to be stuck implementing both into the future. So I think this is a I think it's fairly obvious that bumping the version is the right call. Amazing. Thank you, man. Ahmed Hadsen from Swisscom. I'm strongly in favor of pumping up the version. Maybe we'll not stabilize the version 4, maybe 6, 7, and then"
  },
  {
    "startTime": "00:24:00",
    "text": "become like BGP at some point. And, also, I would add I would love to see that version bump in the title of the RFC, not just in the text heading. So it's clear signal So you support version 4. Yes. Here's an RPC that says version 4, not just TLV and then has someone else have to go to the text and see there's a -- upon move the version. Thanks. Thank you. So trick question for you, Paolo. What have opponents of bumping the first number argues. I don't need to know their name, but but what have you heard is let's not bump the version. Oh, the simply like it is confusing that, like, you are touching just one message type And then in reality, 2 of them. And then just just because of that, which is what what bang was saying it's not really just that. I mean, it's you know, a key thing that we are doing, then we are bumping the version of all the message types. You know? So that that was it. So all also there, I would say there is nothing substantial in my opinion in the opposition. I I you know, this is why I wanted to open the floor for for discussion because GYM, also handling off that if if if there is opposition, but it's substantial, then, of course, you know, I take that into consideration. Mhmm. But it doesn't ever you all being the case. and so philosophy versus philosophy, I was thinking maybe we should discuss this. So you want to bump the version number in the common header Yes. And Our message types from the old version then still permitted or It's not a clinker. click out. Click out. Click out. Click out. anybody opposed to bumping the first number in the way that Paolo described"
  },
  {
    "startTime": "00:26:00",
    "text": "12. to be thorough, we can send an email to the mailing list to give people a little bit more time to chime in but my sense from this room, and this crowd is that they're People look favorably upon bumping the first number. meeting. Thank you. Fantastic. Fantastic. to be clear, I think you you have be clear it and measures that get sent. have to be clear in much to get sent what the implications of that are. Like, oh, all your current BNP stuff has to be redone if you want to use it in the new version. It also must make the jump. in some fashion, Right. Yeah. Right. Right. Right. Right. back. Last bit, like who sends the email. I send the email, the shares, send the email? I think I'll get assigned. Okay. Perfect. Thanks for your volunteer service. Yeah. Good. Alright. So Last bit. So this raw bit the logging for routing events in BGP. in BNP. Sorry. Next slide, please. So I this time, I a little bit what is the intuition because it's maybe the second time that speak about this and the last meeting, I didn't speak about it. So It's just, you know, I think, something very simple as well. So it's it's like, you know, BNP, we have semantics for, let's say, doing with the route monitoring to do initial flooding and then, you know, have you know, the MP stations synchronized to what is the routing table of of a router. We have the semantics to do debugging. to have statistics and things like that, session reporting. but we don't have an event event driven semantic. Right? So something happens than, let's say, just notify me of this thing. Right? So"
  },
  {
    "startTime": "00:28:01",
    "text": "because of this, like, we've thinking with Camilo like let's do you know, a a new message type, and this is something key to support to support in a monitoring protocol, you know, event being event driven. on top of all the other semantics that are already support. Next, Slide, please. So what I did in the draft liking second version is essentially straighten up a little bit what are the use cases, and the use cases really fall in 3 different categories. Right? So So one is totally like, you know, the differential analysis. So, for example, if you have actually being pre and post policy today, if you want to see you want to know what is the difference between the 2, you should really take the two full tables to the collector, and then the collector should be you know, doing the matchmaking or not matchmaking and seeing, okay, this is the diff, for example. But the router already knows what it is filtering. Right? So Why don't we just export, you know, what is being filtered you know, from the router, for example. So that would be one thing support a differential analysis between the different advantage points. The second would be also, you know, reporting the outcome of validation on the router. You know? So we know that routers do RPKI validation, so that is very clear. But, also, we had a a black calling validation, like I don't know. For example, we want to know whether, you know, somebody that is triggering a black hole is really, you know, allowed to do that or not. So BNP could be a you know, this kind of message type, in BNP could be, you know, a great fit for this work. And the 3rd use case is"
  },
  {
    "startTime": "00:30:01",
    "text": "you know, Camilo came up with this because he was doing some work on it. you know, report just malformed BGP packets. Right? So three use cases, I think, very you know, straightforward, very make sense and, you know, I we just straightened them up as part of the plus version of the draft. Next slide, please. So, yeah, so that's so that's the thing. Like, you know, if there is I'm very curious if there is interest, there is not interest in this what do you guys think? Yes. I did this one yes from Jeff. The yes from Jeff, it's like 10 yes. You know? So that's linear. Cool. yes. Yes. Jeff, answer. the things that you're having in here are good. one of the interesting connection points you'll have to figure out is these things should have presence in the various young models that you're going on. So like, RTBH, there's no such thing right now like the VGP Yang model operators, you know, in this room, you think that belongs there? Well, maybe you should do something about that as an the RPKI, at the moment, there's no YAGG model is best I'm aware of. But at some point, there's going to be. I know we're around and went in internally at Juniper, and I keep hoping that I can haul them here actually show them what we've done in house and do a public one. each of these things Yes, they're great things to have. let's go ahead and coordinate with the other people that, whoop, produce these states so that they could be kept in sick. Fantastic. Thank you. Thank you for the feedback. yes. Yes. Yes. And so that was it from my side. Thank you. much. Yeah."
  },
  {
    "startTime": "00:32:00",
    "text": "So I I guess the next step for BNP, routes, event logging is a a working group call for adoption? Yes. Exactly. Alright. So that's the second to do item. Yes. Thank you. Yeah. Thank you. then we proceed to Jeffrey Has, which will honor us front of this room, and talk about BGPP escape rooms. Each BS escape rooms might be more fun than this. So met with apologies to many of you. This is the second of 3 presentations of this topic, which is yet appear on the screen. I've got about to reprice the entirety of IABG. but Okay. But wait. These might be the wrong slides. You uploaded the IAPG chair slides. I did. Hello, bro. again, I'm not going to reprice that. But if you're looking for an easy access, the IDR page does have them as well. Okay. I don't know why years of the Yeah. Yeah. Yeah. for the first part of no. The escape room for BGP is no getting past Chris. So Yeah. oh, Yeah. Something renames the slides will ease upload is the worst. I I know it's the human that's operating it. Alright? No. Let's -- We keep going off on the slide. hey. I can't actually do this. So it's a it's a prelude. You know? So, like, why am I actually shopping this around multiple working groups? I apologize for taking your time sometimes across 3 of them if you're going to all three sessions, IDRs next. they'll BGP has this interesting headache where routes that actually occurred around the net, have extensions. Now it's part of the path attributes. You know, Beach has been very successful. with its extension mechanism. And as a consequence,"
  },
  {
    "startTime": "00:34:04",
    "text": "it's, as I just said, and bgp 4 for, you know, many, many years. We just keep on adding on new features. And This has worked out great in some circumstances, and other circumstances is as failed to work out well at all. the consequence here is that when it does go wrong, It can be anything from misrouting external information disclosure. And I'm gonna be framing this piece of the talk from an operational context for this crowd, I'll have a protocol version of the talk of exact same material at IDR. But as operators, you care about disclosure. Have I definitely leaked out something that's important that could be used to You know, maybe entwit what's going on in my network, maybe you'd use to attack my network. and sometimes the attributes themselves have problems. So I'm trying to figure out exactly One part, what do we do in IETF about talking about this? because these are in parent and intrinsic properties, We're we're almost Almost these are inherent properties of the protocol that and then there the entire time. and we didn't have any way of discussing how these things can potentially be bad. So One purpose of this draft, especially for operational crowd. And, you know, eventually, this will go to Nanog, I think. maybe version 2 is to talk about what is the operational impact of attribute escape. You know, these things that are attached to BGP, and go further for some definition of further than they're supposed to. This fun of it. Okay. No. is where I'm really going to pause and make This time I this time I really don't. This time for sure. This time. positives. Presto. It has your name at this time, so some other -- Orifice. There we go. Okay. Next slide. So what is attribute escape? No. It sounds like, again, escape room. We're making it seem like you're breaking"
  },
  {
    "startTime": "00:36:00",
    "text": "to the BGP jail. And certainly a a nice visual visual visual analogy to use for it. But, really, this is closer to letting your golden retriever off its lead and it wanders down the park where you weren't actually, you know, keeping mind of it. And Now this is mostly because this is not always happening for bad reasons. This happens because the protocol is behaving in most cases as it should. Sometimes operator hasn't configured something. Right? But in most cases, This is something that we don't actually have any control over because of the way the feature is built or implemented Next slide, please. Again, why am I writing this? That's because will will will BGP RRCs, talk about here's this new feature. Here's this new attribute. Here's its scoping. and Yeah. We have to talk about how propagation works on these things, but for the most part, it evolves back to core RFC behaviors. the individual drafts, often are good about talking about what they're for and where they're expected and where cleanup is supposed to happen circumstances where cleanup is expected. The trouble is intrinsic behaviors, especially on implementations that don't understand a feature can't actually help you keep things where they belong. BeachP is not designed for that sort of thing. So one part of this is just simply documenting this and socializing and among operators and potentially the mitigations know, so that we can have a conversation about this and make sure that as we design new documents or provide operational advice to the networks of how to actually maintain things that these issues are being paid attention to. Next slide, please. So what's the actual problem here? the problem is what happens if you attach something that can do something weird. You know? If you are very big in a second routing, and I've turned this feature on, and we have this prefixed that floats around your network and gets out and gets into another network where you're running pre sits, and it gets into your network and you haven't appropriately filtered."
  },
  {
    "startTime": "00:38:04",
    "text": "huge flashing warnings every segment routing document. You must filter. You must do all these. things that people mostly aren't What happens? Well, you're getting this routing, this forwarding, bad things happened. or you do something like run tunnel encapsulation, and it says that when I have this thing attached I'm going to redirect my traffic across the GRE tunnel, which maybe it's going across to some other provider because it came in across things and wasn't scrubbed out. Or my daughter have some sort of thing that's attached to a VPN feature that has interesting effects. You know, an easy example that might be the link bandwidth. You've actually either restricted or overly given bandwidth to routes in your network. As operators, you care about all these things because they impact forwarding. and it impacts troubleshooting. how do we actually do these things? that's hard where things get truly evil. where you actually have route selection gets negatively impacted because a feature is partially implemented in your network. some portion of your ibgp that mesh understands something that didn't route selection, some pieces don't. get the magic attribute in, and you start pointing other direct and you got nice forwarding loops. congratulations. You just caused an escalation, and it's hard to troubleshoot next slide, please. and, certainly, we have the other things that are strong motivators from the operator of the community. You know, We had the infamous attribute 128 incident, which motivated the updated air handling procedures for BGP. This actually caused sessions to go down. And, well, that one was caused specifically by version a and version b of the feature, crossinteracting with attribute escape happening because, you know, if you understand the thing you can't filter it. n that caused if you're running the old B2B procedures to knock down your neighbor's even though the damage came from far away, The problem is you may have actual optional transitive nonsense of something that No. supposed to be your feature."
  },
  {
    "startTime": "00:40:02",
    "text": "it arrives in your network. It isn't your feature. and it's just as bad as somebody actually directly attacked that router across, you know, the network air handling is there to help us catch these things or at the very least not crash So the bigger issue is Why did these things get to us in the first place? Next slide. easy examples out of, you know, recent history. know, this is interview label feature, Juniper Made. Let's go ahead and ship this RRC 7067 90 fees, and it had no scoping in there. They screwed up and very quickly issued a updated RFC that says, we deprecate this thing. Don't do this thing. you do it, you're gonna have problems. and in parallel, We had our internal loops. We had somebody who's working on version 2 of this and left it on the same damn code point. This like Edwin 28. Yes. Let's go blame Juniper for this. We accept the blame. But that said, yeah, for the most part, it just worked for us as long as we are in isolation. But oops. Somebody decided they wanted to implement 6790 anyway. And if this was inside of a single network, you wouldn't think that's a problem. what actually happens is it did exactly what we were afraid of. It escaped, and we started having issues where Juniper boxes were falling over has yes, we screwed up our code. but this thing is coming from far away unlike it's supposed to. So this is a an example, the escape does actually happen. yeah, we actually have the fix for this and one of the classes mitigation we'll be talking about a little bit later know, for the next top capability. So realize this is a problem. have the idea of at least one piece of the solution, we'll get to that a little bit. Next slide, please. Another recent example, the best working group is working on these nice procedures for interwrapping eVPN and later 3 VPNs and they're providing some extra loop information or loop prevention mechanisms. by the tpath feature because"
  },
  {
    "startTime": "00:42:04",
    "text": "You're literally stripping one domain's information to another, ASPats are no longer your feature that's supposed to save you from these things. They threw this thief pathing in there and in a closed user group. that has these features interacting together, this should be great and wonderful except for the fact that oops. Layer 3 VPNs touch the outside world via the Internet, and we it escape for these things if they don't know what's happening here. And in this case, this one is impactful on route selection. Not only does this cause problems with preferential of your route preferencing for your routes, it can cause black holes if you get in there. And really, really evil. If you're a data center that's using this feature and it's caused something to escape. that route from your data center is now the least preferable route in the Internet for that prefix. You have just lost money. This is not a happy thing. This is a good example of a family scoping type thing and, you know, what do we do about that again? back to the conversation a little bit later on. Next slide. So really what this conversation is about is about scoping. You know, BGP doesn't really have a strong sense of that We have a couple of things that are common practices that we try to encode in our specs. AS level scoping is the core thing that we tend to do most things live in IBGP land. They're supposed to fall at the border. Well, for things that have potential for escape, if we put a hint inside of the attribute we're trying to create that, this scoping AS or scoping set of ASs. This is one way for at least the fit escapes inside Does this really matter for you or not? You know? So that's one thing we could potentially do. And this was part of the discussion, but not the implementation for the BHP open policy stuff at RC 9234 recently. As operators, I encourage you to go look at that, and that'll keep your people as Security, happy as part of the evolution of HP Security Solutions. The other things are often next top scoping. You know, the example we gave earlier, you know, for the entry label is really a"
  },
  {
    "startTime": "00:44:04",
    "text": "feature that should be bound to next steps, and, normally, should be bound to a specific stop set. But if you receive this as escape, it's nice to know that doesn't apply to you. You can throw the thing away. And the next the the desktop capability, encodes that behavior. So the next hop is embedded Consistent route selection, this one's a lot trickier. We don't have a solid answer for this full set of things at all at the moment. starting to have this conversation a little bit in the deep task over domain. but this is gonna take a lot longer conversation. this this this draft is not here to say we have the full answer. This is to make sure we have assistant vocabulary to talk about this being a problem, draw people's attention to it and make sure that we start having this broader conversation, ideally operational community along with protocol designers. Next slide. So at the operational end of things we've known for years and then pointed out during IPG that Randy Bush has given wonderful presentations know, multiple times over the years with his various research groups, about the bad things communities can do if you're not cleaning house. And We have examples from standard 1997 Communities. We have now large B2B communities that can do these things. We even have DB 6 node communities that we can do. The standard community is mostly about cleanup. Randy's documented those things very well. Extended communities are largely there for VPN signaling, but they escape. They have cleanup issues just the same. and some of those actually can impact how your traffic's been dealt with link bandwidth being the example I bring up earlier. And need to be able to clean these things up. we do actually have guidance at RC 7454 about how clean some of these things up. of what we need is a way of having better, you know, vendor tools than, you know, Part help with these cleaning operations. So this is one part. The vendors can do a good good job. This is also about operators you know, falling better practices. Next slide."
  },
  {
    "startTime": "00:46:05",
    "text": "the other reason they have this conversation is sometimes this is not about oops. Yeah. these things, when they go wrong, and have network impacts can be maliciously exploited. This is a scary land we live in. And this is a motivation for vendors to tighten up their handling code. This isn't it. call for the operational community to, you know, use a update to your stuff to the most current releases, especially when security issues are present. And, you know, this is also if you have optional security mechanisms, you know, Make sure they turn on when they're appropriate. Next slide. part of the thing that we're discussing, this also So strongly impacts the operation community, and it's really gonna be a big motivation for our nano account section at some point is do you mitigate this thing? Well, one of the things is that you potentially can explicitly filter path that it's the gotch is if you do this, you are harming the incremental deployment of new Beach features that has been so helpful for the growth of the Internet the entire time. So we have this set of tensions of Do we let features know continue to evolve? or do we textful of ourselves, where this matters, know, can change your opinion. If you're a stub AS, you can lock down the house. I don't need to let anything else through. if I'm just the data center and these things are, you know, meant to be locked to the outside rule, you can choose which features you want to let in or out. But if you're a transit ISP of some sort, You know, there's a strong argument that you probably should not be doing these filters, but you still have to be mindful of your protection. So this is gonna be a longer discussion with the especially the core operator committed. Ideally, we have easy mode profile for scrubbing things. If you turn on the feature, that should also turn on the scrubbing mechanisms. That's not how most of the routing stacks implement these things."
  },
  {
    "startTime": "00:48:03",
    "text": "People are very good about putting knobs into the system. That's great and very helpful. if you actually turn them out appropriately and sometimes know, the people that are coding the features haven't thought about the operational consequences. So this is a dialogue back to the vendors. How do we make sure that things can be operated in a safe fashion. One of their questions is now that we're having this conversation that we've written these considerations down, what do we do in terms of the IETF documents to bring these things to people's attention? does these practices as a set go into security considerations? Are they operational considerations? Or are they something new? let's figure out where they go in the document and of this is gonna probably pop up is discussion in IDR, and that will flow to other groups like best and such. Thanks, like, So what's the next steps here? Oh, certainly, next step is to give you exactly the same presentation with a slightly different men in IDR. a place where you can catch up in your sleep if you like. The other thing is just simply socialize this idea. So we talk about this. People are aware of it. They're thinking about it as being a problem, this means places like this, which I'm not presenting at this IETF. Their agenda is full. But, you know, version 2 of this document will probably go there for presentation next IETF. Same thing. You know, a flavor of this conversation will be expand it out and be taken on the operational circuits, discuss the things like Nanogs. we're also gonna have the conversation and what this idea went to do thing. You know, this is a very conversational document that I knocked off at 4 hours on a Sunday. just before the, you know, 0 0 lockdown. where do we clean it up to be use this as a direct problem statement, and this is where it goes, or do we actually expand the scope of this to have the normative procedures we're going to be recommending. So We'll figure those things out. And, you know, again peeling to what this room is here for."
  },
  {
    "startTime": "00:50:00",
    "text": "an operational perspective, think about how these things impact you do you want to actually see you know, the people's specifying protocol components do to help you out on this. And end of the day, this may impact things like our air handling procedures. And, ideally, we published this as some flavor of RFC so that it stays in people's knowledge and has used this, you know, common practice. Questions. And you can speak for the microphone here if you like. Right? Someone related to to this I've been speaking with a number of European Internet Exchange operators to operate very, very large route servers because I am one of the people that has to keep those things working. And originally, there there were Standard Communities, then 32 bit ASMs arrived. Then people thought, oh, crap. We can't fit fit fit 32 bits into a 16 bit field. and then people started using extended communities a sort of hack to manipulate routes propagation on route servers then this hackles observed by me and the cowboys, and we brought large communities to the world. now we have all of classic, extended, large communities, in production environments, and this leads to extremely unwieldy routing policy configurations because for each type of community, that blows up into config So European Internet Exchange routes are for operators. We're like, hey. Maybe we can get rid of extended communities altogether. at publicinternetexchangeroutservers. because it reduces memory pressure and and configuration burden."
  },
  {
    "startTime": "00:52:01",
    "text": "And, indeed, one of the arguments So aside from the computational resources that it would save us, that particular type of environment. We also noticed that all the extended communities that we do see either our our because people have not yet jumped to large communities or, our layer free VPN private information leakage. FASH. So I expect that we'll try and formulate this best current practice in in a draft and maybe reference your work here as well. And vice versa. Yep. I guess that was not my question, but my contribution. Oh, trash it exists, let's actually clean it up. Mike Kelly Brimson. So the work that was done. I think, Joe, you were one of the about the if you don't configure a prefix policy or routing policy on a neighbor that it's now closed, closed, should we continue along that line and start to talk about, okay, BGP know, error handling should be on by default should does this kind of filtering and so on. should that happen by default, then sort to. push the vendors towards doing the same thing out of the box. Is that an avenue that we want to do we want to go down that line and try to make the vendors have sensible defaults out of the box. I know you were very happy about not getting any kind of push back on you're changing the defaults and blah blah blah. I love changing defaults, but at this gentleman, like, no. No. No, Joe. And I love changing defaults too, but I work for a company it's I can now iterate says as cowardly management into many of your to not wanting to change them because it causes phones to ring when you do that. So doubt"
  },
  {
    "startTime": "00:54:02",
    "text": "we we have tensions like that in older operational implementations. We have that even in new features about maintaining current practices. you go to 7606, it says you do need to do all of these things as a bust. you truly support 7606 if it's on by default or by switch. And honestly, the right answer is, you know, this is the standard operator tortures a pitchfork type thing. You know, the operators can certainly have strong opinions about these things and show up at their vendors' doors and and Keep pushing the up button till things change. But, anyway, the idea about doing a BCP of Okay? You're now being a transit provider of some kind please do list of things and perhaps you and then market that at the network operator groups. It sounds like a good at it. Yeah. And I'm gonna throw into this very specific use case for the route servers purpose of route servers is localized traffic exchange. don't normally expect something that is passing throughout server to propagate for the run, and most IXPs as best I know they have contracts say you shall not do this. This means that an IXP actually has it within their purview safe, these things that might be used for downstream signaling that are out of scope for pulling standard Internet traffic as an example, you're not allowed to do that. That is a contractual matter. Yes. but then we should probably advise them on but not to let through. Exactly. Hi, Ben. Working on. I think this is really useful. if if it even if it only winds up being being a description of the problem and give us kind of a framework to think about it and communicate with other operators about when it happens. It's it's useful even in that sense. in its current form, the title of the draft suggests its targeting IDR."
  },
  {
    "startTime": "00:56:00",
    "text": "And in its current form, I'm not sure that makes a lot of sense because it doesn't have much in the way of actual BGP protocol in it. But regardless, I I assume that if it's stays that way and it'll mean it it stays kind of mostly operational guidance. You'll rethink that or probably wind up being here. with you like us? so to give an example, it does actually mention the 3 mitigations method that have been sort of pervasively discussed. So each of those things, if they go from know, saying, well, we've talked about or have examples of putting in scoping AS, scoping next steps, that sort of thing. that is advice to how you actually implement the protocol, how you design the protocol, That piece is definitely addressed towards IDR and Bess. is very likely in its current form. It It probably gonna stay some flavor of informative. where things might actually change process wise, and this is up to the chairs that actually end up blessing the thing, and they were associated with these. if we actually put in a equivalent of a management's consideration section that says you need to have these things as templates for BGP related feature before the RFC editor will accept them. that I think bumps the status around as well. So okay. That makes sense. I I split on an one one possible suggestion occurred to me while I was sitting there. So I haven't had a chance to think this through properly. is there's this kind of the the the transitivity of that but it's overloaded in the kind of unhelpful way. It simultaneously says it may propagate. It's allowed to be transitive, and it must be transitive by default if you don't know what it is. and I think the kind of probably slightly dirty, but quite useful solution to that would be almost justpartitionized partitioning the the the attribute namespace into kind of our a high section and a low section. and assigning from one of those. So the implementation doesn't necessarily need to know"
  },
  {
    "startTime": "00:58:02",
    "text": "exactly what the attribute is, but it can tell just numerical range. if I don't understand this, should I burn it with fire, or should I allow it to pass freely? because then it just becomes an allocation question, and the authors of new features can take a same judgment. And that probably doesn't require an actual protocol change. it it requires a It requires billing and registry change. It requires recommendation of the protocol procedures that would be normative That's a potential valid mitigation for this. Let's talk about that further. But okay. Yeah. Julio Ferg. I was burned back then with the 100 28 in bet in really bad ways. and our after that experience, I tend to be in the very conservative hygiene part of the community. And if I think about it kind of You are proposing, well, okay. Please please please do not filter strictly to enable development kind of how about the idea that actually applying strict hygiene and doing reporting that something hitting the filters, is occurring and having operational approach where one checks is this something that is actually well defined"
  },
  {
    "startTime": "01:00:00",
    "text": "Or is this the KGB doing doing a strange a strangepgpattribute communication of some secrets command to destroy some part of the world. at least at least, I think, for paolo's part of work. actually looking at how to how to how to make sure that it is easy to detect something strange showing up Exactly. So hitting many of your points. You know, the first one know, we're gonna have to upgrade, you know, your protocol a little bit. It hasn't been KGB for years. 17. that goes far more than that. So the the points about visibility is a big piece of this. No. So that's a good option for the the documentation a internal discussion, which I'll expose here, is that when you're dealing with things that are unusual, if your code is proceeding through 760 to 6 type, you know, procedures? Do you keep the attribute of doom, or do you throw it into the trash before you do anything? That can impact where it shows up in things like BNP. If you throw it away, you can't report upon it. It shows up basically in more of your Sys log type counters. So keeping counters of, I've seen the weird thing becomes important. So so end of the day, this is how do we do telemetry for these things and, you know, expanding out of the point effectively, Ben's making about scoping by default. 10 It was, like, if, you know, your former employer filtered by default, eventually people start for new features having to avoid you as a transit provider because you can't provide the service. eventually becomes a money problem for you as well because PGPs about policy. Policy is about buddy. So eventually, we have to figure out what is the"
  },
  {
    "startTime": "01:02:01",
    "text": "balance that they can do, as you're saying, even if you don't understand things, if it is part of the operational toolkit, that people simply have filters that they have that if I'm ignorant of this feature, this is permitted. This is denied. I can do this across my AS without understanding the thing, this at least gives you the option to incrementally turn things on in a more safe fashion. Alright. Yeah. Robert. Nice work. So I have 3 comments One comment is to Ben's idea about dividing the attributes space. I don't think it could work because the same very attribute maybe by one operator, fine to be sent across his network to his peers, Upstreams. and by the others may not. Right? So that that idea to statically define something may not work at all. Second comment is, I'm actually surprised, Jeff, that you did provide on the slides some solutions. If you're gonna repeat the same in IDR and the the the fine. But I would say, let's say, using very simple attribute ASradius. America, and measuring this across the AS path, I mean, at the boundary. maybe universal way as one hanging fruit example. Right? And the last one, actually, Rudiger took over and almost said the same, today, even if you have make mistakes in your policy. If you are a good operator, you don't want to send crab around, you'll don't know if you send it around or not. So some form of even young model extensions. to indicate that your policy is still leaked some attributes which were not supposed to leak And it's actually operational. So maybe grow, it's actually good to working group for this kind of cushion work, proposals. Proposals In general, a number of customers I have been talking with the past and currently. complained that BGP doesn't have a BGP"
  },
  {
    "startTime": "01:04:00",
    "text": "history database. You have some implementation, some based on the BNP offline and on, This could be another way to to look at the problem. Okay? So hitting the points by the time. suggestion from Ben. You're correct the old implementations. We all we'll certainly not respect the new rules, but incrementally deploying them is still a potentially viable way to limit the blast radius as the new rule state effect if you know, this is an example. This is a case where each piece incremental extensions still play out, to the point about telemetry, you know, we'll be having better things Again, that's I think a very valuable solution do these things that end up at the IETF Beach being module. That's an example. They absolutely will end up in counter like infrastructure when we are the other. and, certainly, BMP is a great way to expose that sort of thing. as to solutions. Well, my my choice was when I was writing this 4 hours on Sunday. I was going to offer the three easy observations of here's things that we've already talked about have shown up in a lot of different forms. And one of these includes, as mentioned in the draft, generic extensions to the path attributes to provide scoping, and we take took this as, you know, wisdom from my communities originally. being able to do this, but makes sense. It's technically an IDR draft, but nobody has proceeded with it sort of the discussion among that set of authors was probably only gonna see the deployment of that if we actually go to PHP 5. So We have challenges. can only boil the ocean 1 liter at a time, so we'll go from there. Thank you for your time. teacher. Thank you, Jeff. Next up. Here. shared. Oh, Yes. So I should It's good. So it'll slide your way. Yep."
  },
  {
    "startTime": "01:06:00",
    "text": "the right ones. Okay. hopefully. Oh, he's a a premium grow member. So But he's Service is the 1. Right. Alright. Alright. Take it away. Thank you. Jeff Francois from. I'll present a quick update on the the bmp lock pure draft. So next time. So I'll remind quickly what we're doing now. I'll summarize the feedback that we received, present the updates, and then open the room for debug. site. So RC 90 69 provides us a view on the local rib. BM with BMT. And -- For some reason, the p rater is filled in the per p rater in lock rate is 0 field. So, basically, you don't know from which period you received that us that you installed in your earlier local rate, which is a little unfortunate. it it requires the operator to dig into data. especially in the case where you received that pass. So with that pass or if you have a BGP multi pass. And well, it's really, really unfortunate because in most BNP code, this information is readily available. so much sort of deciding to advertise it. So we would like to do this. Next slide, please. So the draft was initially opening 2 options. Either we update 90 69, and we said that we are going to allow the peer address field to be non zero field. And so the default behavior would be to keep it 0 field and through a config, the upper or could allow the BMP implementation to actually set that fit. or we would leverage the PMP v 4, should I call it this way? draft in order to introduce a new TLV would let us basically describe the PR address in that new TLV. And by doing that, we are also backward compatible because collector is not recognizing that TRV would just ignore it as per the"
  },
  {
    "startTime": "01:08:01",
    "text": "definition of of BMPTL. So next slide, please. So the feedback that I received was what what what what what It was not a no from Jeff Countingist that knows, but it was an I'm scared. feedback from Jeff, so I counted as 5 notes, basically. So, yeah, we realized that dating, 1969, it might be nice on paper, but it might make things a little bit more complicated. for the developers who were not anticipating this in their current implementation of BMP lock grip. And if the collector is a bit naive as well and and the operators does some mistake, we might break things. So okay. We let you guys decide, but maybe this was not the right option next time, please. I'll yet another everybody point that if I imported this pass from a VRF, yeah, it's nice to have so I mean, my current local rate I advertise that pass. I tell talk about that pass in BMT, And I tell you from which PR received it. But if that pass was imported from another VRF, well, that peer address is described in we don't know which context. Right? And so if I do not disclose from which pass this from which VRF this pass was received. then this PR address is not of any use. So that's very true. So we made an update to the draft in order to deal with this. I'm excited, please. Yeah. So the RXP address still is the same. So it's the where you have the where we describe the address of the platform which we received that draft that past sorry. And then we introduce 3 new TLVs, all optional, one with the code previous VRF or origin VRF and VRF and then sequence of this explain all of them. So next time,"
  },
  {
    "startTime": "01:10:04",
    "text": "So the pre the previously RF name TLV is basically a TLV that tells you I'm in the current ZRS, and I'm telling you about this pass, and I actually imported that pass from this previous the the RF where this pass was running. I don't need to add a new TLV to describe which currently RFIM because this is already provided by 90 69. to the next step. The next TLV is the origin VRF name. And it basically tells you in which VRF you received that pass originally or where this password was cell originated if it was a pass that was originated locally on the router. So, basically, if you receive the pass from in a VRF customer 1, and it was in import it into Global and then into V, and you're currently doing log ribbon VRV, what the origin VRF name for that TLV for that pass will be customer 1. And so thanks to this, with the peer address, you can finally know where this pass was. coming from? Next one, please. So if as a vendor, you really, really want to make life easy for your operator. You can also simply there are some implementation where I know it's gonna be complicated. There are some implementations for which it's just a matter of tapping into onto at least. But You could simply describe the chain of VRF through which that was traveled inside your box and give this information in one single BMP message. Alright. so so thanks to this, we do not need to correlate among the BNP messages that we have to know where pass was coming from, and we see the life of the pass all across the different VRF from the BG deep process. there's one like it. I know. So, obviously, this is optional. We do not need like this. We do not need this to be to to have the job done. So it's a convenience, but not really your next slide, please."
  },
  {
    "startTime": "01:12:02",
    "text": "So for self originated prefixes, you explicitly use the TLV, the peer address TLV, and you set it to 0. So there is no more ambiguity with the peer address. Is it 0 because it's a 4 region or residual because no one is set it static no. If you use that TLV and you leave it to 0, if you actually include it, that means that it was self originated in the corresponding VRF that we describing the other television. Next slide, please. So first feedback, I received the VRF name to identify VRF Sucks. I received that 30 minutes ago. I let you guys decide if you want to use something else. I just want it to be consistent with RFC 9069, which uses VRF names. it can be debated. I'm fine changing this if if needed. We only need the origin via FTLV if you want to fit the all the other ones because that's the only thing that we actually need for this Purpose of resolving the peer from which we received that pass, I'm fine with this, but 1 the previous VRF DLV is, I think, pretty useful too. And so I have a question is to the working group is should I completely cancel the idea of of updating 90 99 and the peer address feed, leave it as it is. Jeff, you were you said no. But you were the 1 not want to do that last time. So go to the white, please, and then next slide, please. I believe Tim Evans wants to Speak to us. Yeah. 3, 4, To Evans. So, yeah, I just wanna address the Pure address. Local route was never was always intended to advertise. Would your mind's"
  },
  {
    "startTime": "01:14:00",
    "text": "pointing the microphone towards -- This is work. Alright. Tim Evans. Tim Evans. Yes. Cisco. So the peer address was 0 because it didn't apply. still don't think it does apply. I think what you're describing and some of the challenges that you want to ad, to local rib is more information around with a local rib business always have. True. True. So I think a TLV does make sense to do that. I think it's gonna misuse to use Pure drafts because using, and peer dress never conveyed enough information about the peer for the collector, and the collector may not even be getting that peer information. may know nothing about that peer. So a TLV, in my opinion, is the right way to go. But, you know, file noise. that has any forms to come, I'm gonna contract him contrast him a bit. So I understand all the message types in BMB have the peer address there. So it would be nice to have it. there as well not to be exceptional for one time messages. And, also, I understand that might be not good for BMvvvv3. keep it as it is. We don't need to update it. But, anyway, in BMV 4, we have a new version. Anyway, like, your collector, And producer has to be updated. So you can also have time to clean this up. If you want to add additional information about the VRFs and so on, That's fine if you add this TLV because that's optional. That's extra. that you can add it in TLVs. but it I hate to see, like, bunch of bytes that are always 0 and send all the time for no use, like, in some time messages we are using and some other are just not used at all. for 3 okay, for 4 have chance to clean things up. Oh, great. Jeff, as I'm here to agree with many of the points that were just made. know? So We don't want to change the old one. have code that's currently using it. it is causing pain for our customers. So No"
  },
  {
    "startTime": "01:16:02",
    "text": "solving the problem is worth doing. we have the opportunity to do it in a new message for non backward compatible ways. think about what that should be. You know, what is the greenfield idea you build knowing what you know now is what you should be asking. includes the extensibility. So I wouldn't recommend You know, overloading things, but fixing the problem would be nice. but moving to the other piece here about the route leakage type stuff. I can see implementations wanting to know how to do that or where the origins of things m. where that leech you is an interesting set of dark paths because eventually, how do the various implementations handle where the routes are leakage? Do they That's why I said passing through the system? Do they have one level of some implementation it might be easy for some implementation. I know it won't be easy for some other. So I want to open the option to do that if your BGP and BNP code are low for it. to easily provide that. If you cannot while while while while So Yeah. And So I'm I'm gonna pick pick on this from 2 layers specifically. So like our implementation, only allow one leak, you know, so we can tell you exactly where the thing's originating. This is not a big deal. I have a little bit more concerned about is BNP was our sort of origin for talking about rib in, rib out in a more formal way, but low group actually means. So Ro accidentally became the source of truth for some of these things. The leakage discussions are also in the same level of mess. one way to view the leakage for libid and for low rib, is is the rib in in this circumstance for this route fundamentally attached to the same context? Is it in the original VERF? Now how do you have the traceability for these things? the question you're eventually starting to ask is, do I have traceability of this as it flows to the system potentially through"
  },
  {
    "startTime": "01:18:01",
    "text": "many tables before you go wanting to add this in as a core piece of functionality, Do yourself a favor and work through that. So valid question. Thomas Carr from Swisscom. I just wanna say thank you very much. I think that's very valuable what you're doing here as especially upbringing visibility into dynamic route linking. That's something currently missing in BMC k. Hi. This is Kagi. So I agree with the point Jeff made about trace visibility. And that's one of the reasons why I fail not just the origin TLB, but import information and also the pure address field it's important, especially for debugability and traceability. because maybe this worth was not supposed to import it, and it the misconfiguration happened on a certain device, but not on another. So having all of them When things go wrong, it makes it a lot easier to pinpoint. I don't know. if we Jeff, one question well, the question to the audio. actually. If we would decide to an implementation that would decide to not bring the the origin via FTRV. That sets the PR address. Shall we say that we must not set it if that IP address is not in that same routing context. Alright? We are kind of misleading correction Right? so the the conversation you're having you're getting advice for is in BMPV3, you have this field that we're sort of overwhelming with context and not working out because it's not good enough. It's okay. Okay. That's fine. Mhmm. we talk about No. BMT version x. what should it look like Well, in that case, we wouldn't put in this ambiguous pure address. We we did that because that optimization to hack it into low crib -- Okay. -- from what we already had."
  },
  {
    "startTime": "01:20:03",
    "text": "Screw that. We'll do the right thing. Okay. But now the right thing becomes you know, are we tracking leakability of these things. one of the things I'm going to suggest is No. And I I think I think Garvey's agree with me. I'm not sure. part of what we're discussing in the context when we're looking at these things as an operator, is partially traceability. This thing is coming from here. Here's the history of the routes passing through does that actually help me without the necessary related correlation on the route outs, sort of side of re bleaching, from that piece of the model. So we I said, what you're effectively asking the question of is, Do I have traceability of a route from the minute it pops into any DGP session on the box. or from local static configuration and then bounces around. And for low rib, in particular, one of the things that There is ambiguity about specwise and grow has it fully converged on, Low crib is that the active BGP route because that's what's in the 4271 RFC. Or is it the route that is the active route? Because that may be passing into my rib out. we we have a long debate about these sort of things don't have clean answer, and I don't think we have your universal agreement in implementations right now. So for that piece, a source of truth is this thing come from BTK? Is this coming from another protocol? that I think is actually a bigger annotation that most people want than, you know, what Verfit came from. You had an question about weird redaction. Yeah. We should definitely email the list Will do. Will do. One one quick comment on that. Right? I think it Alright. Awesome. would be useful to have both. Not not just, like, which word it came from, what pure came from, but also what protocol it came from. But it's the local trip, it's BGP transported or some IGP imported into that world. go."
  },
  {
    "startTime": "01:22:02",
    "text": "when these configurations happen, it's very easy for them to happen, but it's, like, Because really long time to troubleshoot and endpoints. I will keep Okay. Oh, then you have 23 seconds. Oh, really? Okay. Cool. I can do this, sir. So -- a -- Oh, oh, wow. For that, he has 20 seconds for the And and then as Oh, you are fair. He has been. Sorry. You're sure. Oh, yeah. I'm I'm going to be maxed off in a minute. So Did did that count as part of my 23 That's not fair. I wanna just attempt and answer at the question. I think I'd I think you just asked and didn't really receive a response to. which kind of boiled down to is it worse to put potentially ambiguous information into that field than nothing at all. I think that is definitely the case. I think the rule, if the shape of the protocol ends being the same. I think the rule need to be if the peer is not in sporting local rib for, then 0 it, or you must attach the TLV to tell you which VRF it did come from. Fully with you, but up here. Yeah. Okay. So I'll speak for MaxSold. It's 2 AM. He's following from his you really just fix if I'm saying something stupid. So what I'm going to do now is to we have a project to link improve BMP implementation in the FR routing. And so Maxence is Donna. huge amount of work on that topic. So we have BNPL wait. All the RFCs, you all know BMP are tripping.cribat remote, a bunch of statistics. uncertainty up until recently, if I'm writing all this as busy sequence for BNP. so the project is with the support from Swisscom is to support all all RFCs. and to also experiment with the ongoing grow working group documents. And and obviously,"
  },
  {
    "startTime": "01:24:01",
    "text": "could the dissectors in order to be able to figure out what the heck we're doing. Yeah. Next slide, please. So the current the initial status of the file routing was the following. We had a partial support of adrebin So it was working. But without that past support and no lock rate, no attribute, no support for BMP, V Four, and TLVs and no pass marking. And So the idea was to go through all these additional ERCs next day, please. So Maxon Sadi that pass support. We have on that pass a works ID in the an LRI in an object in a adriving pass, and we have the identification the VRF as per the as per the This is 7854. Next slide, please. We have lock it with the point of BGP MultiPASS and the identification of the VRF. We had a bunch of challenges there next slide, please. So implementation experience there, we have slide performance impact because with BMP multi pass, we have to compare to sets passing to instead of just one. And so yeah, if we dig deep, we can see that there is a little impact on on this. We also have a issue on the collection side is that without the draft I've just talked about, the pass ID that we Expose which would be the add pass ID that we have received. from which we received the pass is meaningless because we don't know from which was. And has the scope of an NATPAS ID is the peer on which with which we received the past, we cannot just interpret spot. So, yeah, we we can give it, but without the update to well, without giving the peer inside lock rate, you cannot do anything this. Or else we can regenerate this idea, So create a new ID that whose scope would be the local rib of the router, but then we lose the link with the retrieving with whom we"
  },
  {
    "startTime": "01:26:04",
    "text": "that path. So there is a bit of a delay here, and, like, we're trying to solve this. Next slide, please. We support Huddl's result with the past and VRFIDON application. Same way, Oh. Yeah. The shameful side. Next slide, please. I made fun of a vendor years ago for doing this and no one there. So in a file routing, we do not have an Yeah. we do not explicitly maintain pre policy report. So it just disappears. Right? I mean, it goes in to propose policy report, but do you do not have, actually, structure where you have your your pre policy report. so when we do a reconfigure of an inbound policy and the decision process goes through it will will actually don't know what it was in pre policy report. And so if we activate at past 3 about pre policy, well, we have nothing to compare with. Right? If it's changing the outbound policy, then we can anyway, we cannot compare with what would be on at past at on a BNP rebound post policy. And so sometimes we send up dates of past that do not change, and we see it on the collector and yeah. We rush it. We're sorry. Yeah. We could fix this, but it's in the FR routing code, it's it's work. Right? And there are some statistics that due to this as well cannot be done without a huge resource impact. So yeah. be honest with you, I'm not sure what we are going to do. If we are going to just leave it like that, to I don't know, the users of a file routing will tell us. Next slide, please. So for the BMPTLV draft, we added the BGP PDUs in the route monitoring messages. The code is ready to you to advertise group TLV code and capability TL and the capability TLVs, but"
  },
  {
    "startTime": "01:28:00",
    "text": "we have no feature inside FROS team using them. So the code is ready, but Nothing is using it next time. For past marks scheme, we have almost everything. So most and all the reason codes, the we are ready to do the EBITDA from Paolo, but it's not needed in the file routing. So it's ready if someone would fork if I'm routing and and want to use it, that are currently just there, but we're not using it. at the moment, we did the planning for Maxence's work. Ratarization validation was not available, so I had not put it in the list. Now it's kind of feasible, but it will require some time. and we do not have backup and best external in the file routing. So we We don't use that login. Yeah. They are yeah. You can get those sides and go to the dissectors if if you want to test all of this. you we have a pull request for BNP local rate. the pull request process on IFRS routing is What? I'll stay polite, and I let mimicking often the developer reaction to it. So, yeah, I don't know what to do about this. you could come help us on in the process if you want to. And, yeah, we have if you want to test this, do interrupt testing. We do it quite a bunch in the lobby at Swisscom. If you want to come play with us, feel free to contact us. Thank you. think that's it. Yep. Yeah. Right. Cool. Right on time? Question. What? Questions? Well, I I just have some compliments, I think, working towards running codes to to test the implementability and interoperability of standards like BNP is is"
  },
  {
    "startTime": "01:30:01",
    "text": "phenomenal work. So Thank you, Maximus. Exactly. Too too bad. the the the person themselves -- He gonna be there in front -- Yeah. Yeah. -- per day? will be there in front. Yeah. Yeah. He's Pierre, thank you. promised promised. Yeah. Okay. Thank you. everyone. I think this concludes the Chrome meeting at ITF116. The next time we come 117. Excellent. Off by 1. Never happens. next one is ATF11 8ths, in Prague, and we hope to see you there. Thank you all for attending. have a wonderful day. time for questions? Yeah. Sure. need to go person's ringing. Oh, okay. Where do you wanna meet? lobby, Probably either be outside the events hoping spirit or"
  }
]
