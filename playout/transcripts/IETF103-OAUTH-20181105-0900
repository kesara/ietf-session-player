[
  {
    "startTime": "00:00:04",
    "text": "a Chama scribe I think mad that were you know okay Chava scribe or at least relaying some of the questions and then Chris is going to be our meeting minute ago thank you Chris thank you man okay so you know that note well I took care of this as well so let me go straight into the status update before I go into the agenda okay maybe you want to say some words directly to regarding if documents since you looked at them we had a discussion before the meeting I guess I supposed to say Ricola ad for this group so there are five documents which are have made it out of the working group and are in some various state of like on publication the first is JWT BCP I said to review of that I think in August um so I\u0027m stating rate waiting for a revised version might tells me he\u0027s working on it so I assumed that I\u0027ll be impending I\u0027ve sent a review of em TLS this morning so I\u0027m expecting a revised ID if people want to chat about the review I\u0027m happy to do that sorry um was so close before the meeting okay um in any way what I defer to the chairs no they want to manage that let me just run through these and then we can talk about logistics the token is change document is on the member 21st tell a chat so everything seems fine there it\u0027s just gotta be you know tell chatted the the device flow document has been approved by the iesg there were a big pile of comments um so I\u0027ve asked the chairs to go through the comments and basically tell me which ones they think they\u0027ve addressed or which ones they have not addressed in a way that just makes a lot easier for me to make sure that things have been properly handled um none of this should be blocking um that is but there I you know typically I do want people to take IHG comments seriously um and on then last one is jws rec which for no obvious reason has been improved announcement to be send for 200 days so it\u0027s an maybe it\u0027s me but we can\u0027t figure out why it would be so I\u0027ve emailed the Secretariat nasan to send the approved announcement it\u0027s approved well as pin points out it\u0027s like it\u0027s not approved all the messages sent but as far as I\u0027m concerned it\u0027s approved so that should be fine so I don\u0027t know how you want to handle the TLS stuff the MPLS stuff um I mean like I said a long review if you won\u0027t talk about the next meeting that\u0027s fine or whatever really yes I think it would make sense to go "
  },
  {
    "startTime": "00:03:04",
    "text": "through the the comments in a in a small group and then see whatever you have some questions back for you doing this week I think it\u0027s definitely something we want to submit an update if some of the comments that are sort of low-hanging fruits and then see whether there\u0027s something bigger that we need to maybe discuss tomorrow so maybe having a short conversation today would be useful also as like I said before the device flow we would have to go through the resource comments and then see which ones got resolved by which text proposals in there in the document to get this finalized and get this out of the door so I guess after this meeting we\u0027ll sit together and figure out what use so when they have finally helpful sometimes is if you guys want to sit down with device for document as you walk through the comments without too bad to either one but on the device flow basically Richard now I did ask me the other day and what we did was we just pasted it the Google Doc and then we just went through them one at a time and like Richards able is dealt with this is dealt with and this is why and then um so if you want to write me an email or gee doc or whatever um that\u0027s fine but I\u0027m happy to sit down and do it manually you take about 20 30 minutes it just turns out to be like really really hard for the eighty this all sticker through and track all the mental illness traffic it\u0027s the people who did the resolution it\u0027s easier for them to say this is what I did and why I didn\u0027t do it or whatever so I\u0027m happy made time for that if at the author\u0027s on her sheriff\u0027s decision so I guess the will after this session is over we sit together briefly to find out what would be a good time to do this type of things how does that sound did you mention the token exchange occur he did that was the that was unintelligible okay I got some emails for agenda bashing and so I restructured the agenda slightly Prime\u0027s presentation on the dough combining our stock combining was moved to the first presentation and then we have toast and talking about the security topics the jwp introspection response Torsen had submitted a proposal for discussing a financial api and then i have at the end the presentation about the updated document and a pop key distribution "
  },
  {
    "startTime": "00:06:04",
    "text": "that\u0027s a gender for today tomorrow we\u0027ll continue we have the resource indicators document the mpls and dick is going to speak about reciprocal hours and distributed hours and then we have a remote presentation from OMA about the seamless flow okay that\u0027s that\u0027s pretty much it but forgot to the agenda is there or is any proposal for bashing their gender or another proposal for passionate just relaying for Aaron apologies for not submitting the sooner but he has another one prepared for consideration which is the oauth browser-based apps yeah it\u0027s a good point um so a few of us met that I aw I think it was two weeks ago and Mountain View California and we talked about different well as as always they talk about different OS topics and one of the sessions that Aaron let was on a PCB for browser based apps similar to what we have for the native apps and he promised at that workshop to put a draft together which he did it\u0027s just I think the gates are now open he can submit it and as soon as he\u0027s going to do that we can have a look at it and if he joins tomorrow remote or is he online now he hears on Java right now and it is submitted it\u0027s in the jabber chatroom the overall URL perfect so that\u0027s something we could if he has time he could dial in or log in tomorrow and paper short update on that give us a sort of a preview okay yeah thanks thanks Aaron for the quick reaction time so let me see how this would you mind swapping these first two oh I\u0027m jealous in okay never mind I was like my gender not mine is agenda setter okay yeah yeah okay Brian [Music] they have slides so I was just trying to ingest ecers review of them TLS this morning right before this meeting so I\u0027m a little luck trying to switch contacts here and talk about MTL or talk about "
  },
  {
    "startTime": "00:09:04",
    "text": "whatever the hell I\u0027m talking about this morning talking behind me good morning a little jet lag in there - do we have slides there is something but it\u0027s not my machine welcome to Bangkok everybody all right yeah so as I tried to set my own context here oh I\u0027ll to token binding do an update on that and yeah I\u0027m trying to switch contact so bear with me a second but here we go maybe all right so I want to give a quick overview of token binding the base layer is just to sort of set set some context about how the rest of this stuff works so what token binding is basically it enables a long live binding of cookies or other security tokens specifically OAuth tokens in this context to a client generated public/private key pair use of this functionality is negotiated in the TLS handshake via a TLS extension and then what happens is after negotiation on every HTTP request proof of a key or keys is proven possession of those keys is proven by signing the TLS exported key material and and a few other things and sending that signature and the public key in an HTTP header on every single HTTP request cookies and other tokens again OAuth tokens can be bound to that key and then on issuance and then the binding can be checked on subsequent use and that proves that the presenter of the token holds the corresponding key that it\u0027s bound to these keys are scoped to the effective top-level domain plus 1 so there\u0027s particular in the browser use case there\u0027s some privacy implications around that and they\u0027re not the keys are only scoped basically equivalent to what you could scope of cookie for they don\u0027t leak out and allow for tracking and beyond that and this idea of federated or cross domain use cases outside of that scoping are supported by what\u0027s "
  },
  {
    "startTime": "00:12:05",
    "text": "called the referred token binding and that\u0027s in contrast to the provided token binding the provided token binding kind of a normal binding the normal key that you use with a site directly beside the ever referred token binding is a key that\u0027s used with a different site with a different HD LD you +1 and under certain conditions you can have that revealed to us to another site you can set both of those bindings so that you can issue a token which is bound to the key that would be used with the referred site and basically allow them to combine into across the main case bind a token that\u0027s issued for use at a different domain and the ways though that actually works right now is in the spec there\u0027s this include referred token binding ID response header and if that\u0027s sent on any HTTP 300 redirect it tells the browser that it should reveal the token binding ID the referred to and binding ID that it used between itself and the site that\u0027s issuing the redirect as well as the provided token binding ID that it\u0027s going to send to the target of the redirect such as video get a redirect with this this ID to the token provider of the AAS and that in that redirect that tells the browser or whatever typically a browser to reveal both of the tow combining IDs when making that connection that allows the a/s to bind the token to the Rickford ID and then also in the implementation considerations there\u0027s sort of some weasel language around here that says token binding implementation should provide API is that generate token binding messages containing token binding IDs of various application specific tow combining types to be conveyed by the souks ecto combining header basically this is just saying for general purpose api\u0027s that do token binding there should be some mechanism in the API to signal to that when to include a refer to combining ID or other other types but specifically referred in the request so that the application itself can control when to send the referred and and allow for whatever the receiving party of that request can bind to the refer token binding ID so there\u0027s a kind of the two two ways that you can right now reveal the referred token binding either through this redirect mechanism or through some client provided API and whatever language you\u0027re using to develop to develop the function they make the actual HTTP requests and this would be on the the OAuth client basically it\u0027s making these requests next slide please really smooth thank you guys so then a quick overview of ofö combining building on that functionality we have Olaf - token binding and this provides an oauth2 proof of possession mechanism based on token binding that basically prevents replay or cross-play of stolen or lost tokens there\u0027s a couple of different things it does one and maybe the most interesting is binding access tokens using that referred token binding ID and this is there\u0027s functionality "
  },
  {
    "startTime": "00:15:05",
    "text": "specified or described in the draft that allows for binding access tokens that are issued from the token endpoint through normal grant type any grant type you send of the token point you can bind that way and then also for access tokens issue from the authorization endpoint via the so-called implicit flow we provide a mechanism to represent this binding in and access token if it\u0027s a JWT through a confirmation claimed that with tbh member that\u0027s just shorthand for token binding hash and basically it\u0027s just a hash of the token binding ID and that took a binding ID is an effect the the public key of this generated on the client there\u0027s some mechanisms describing how you\u0027d bind a refresh token how you\u0027d use pixie to do binding of the authorization code that are effective both for native app clients and web server clients the mechanisms are a little bit different and then just because we could really there\u0027s a some language and they\u0027re describing how to bind JWT authorization grants and client authentication so to take those mechanisms that we already have described and add a confirmation claim in there and bind those to the to the token binding key in the TLS layer that\u0027s the draft in the nutshell next slide please so some things that have happened notable happening since Montreal I\u0027m sorry I can\u0027t see my own writing very well actually just prior to Montreal a question was posed to lists and basically the the thrust of it was is it\u0027s not very clear how an access token and issued from the authorization endpoint the implicit flow access token it\u0027s actually took and bound had a little conversation about that but it\u0027s a it\u0027s a valid question yes metadata was went to RFC 8 4 1 4 and established a registry which we\u0027ve been waiting on for a while unfortunately a widely used web browser browser decided to drop its support for token binding which unfortunately I think is a major development towards the the long term sort of viability and usability of this stuff it\u0027s not the end for sure but it\u0027s certainly a blow to it the token binding protocol negotiation and HTTP so those the core functionalities described in three different drafts all went to RFC and then I published draft eight of tutto combining and basically all it did was update references to the RFC versions of ASAS metadata and the the three-quarter combining specs and then not long after that I got a question off the list but it was more or less the same question there was the first question up there which is don\u0027t really understand how the token binding ID of the RS is determined using these implicit laws so a bit of a bit of a thematic issue and in terms of the questions that are then coming up around how that works next slide how so how how does token binding of an access token in the implicit flow work anyway and the truth is it doesn\u0027t work very well and it\u0027s a little bit awkward but this would "
  },
  {
    "startTime": "00:18:06",
    "text": "be intended for an OAuth client that is running a script JavaScript in the user agent and the AAS is going to bind the access token to the referred token binding that is sent to the authorization endpoint in the authorization request and that\u0027s the token binding between the user agent where the client is residing and running and the protected resource or API or resource server whatever you want to call it in that request the include referred token binding ID response header on an HTTP 300 redirect is the only way currently within the browser landscape it\u0027s assuming the browser even supports it but if it does to have the browser send the refer to combining to the authorization endpoint what this implies then is in order for this flow to work for toe about access tokens through the authorization endpoint there has to be some HTTP request from the browser in a full page context to some endpoint or resource at the protected resource resource server which in turn gets full page redirected to the authorization endpoint with a properly formed authentic authorization request at the authorization endpoint there at the at the AAS and so that has to include the client generated State the client ID the proper response type the correct redirect URI if if in catface in fact that\u0027s applicable there and whatever else you need in a proper authentication authorization request another awkward bit of this not specifically related to OAuth but when you combine it with open ID Connect which has the concept of token bound ID tokens for login cross domain login there\u0027s some oddities that come up as well in particular the token and ID token response types don\u0027t really work together because you get tokens issued for different parties that are bound to the token binding ID that that isn\u0027t going to work in one context the other so if you have the form post response mode the access token love the wrong binding it\u0027ll be bound to the token binding ID between the client the the user agent and the client but it\u0027s actually being delivered to the client so it can\u0027t be used basically if you have the fragments response mode the token binding ID doesn\u0027t really make sense for the ID token since there\u0027s no channel that\u0027s being delivered to on a request it\u0027s just being delivered directly back in the response to the to the client unless it\u0027s somehow passed to the back the clients back-end and also then the bound access tokens are used to call protected resources that happen to be in the same ETL d effective top-level domain +1 as the client back-end so it\u0027s a little bit awkward basically token by name when you\u0027re doing it together token binding ID tokens and access tokens doesn\u0027t really work in this particular response mode it\u0027s just one sort of awkward variant of a use case that\u0027s not particularly well understood next slide though and then the the off list asked her the question "
  },
  {
    "startTime": "00:21:08",
    "text": "happened to be Torsten and in the course we\u0027ll explain in the discussing it he worked up this this flow diagram to help understand exactly how it would work to get access tokens bound when issued from the authorization endpoint and it might be helpful to just sort of walk through it and look at it visually basically you have the user agent the client they\u0027re shown as different lines here but they\u0027re running together so the client is executing a script inside of the user agent something happens the client then directs the browser to make this request in a full page context to some endpoint at the resource server that says hey please direct me over to the to the ass and it includes its state and probably also its client ID a and and other things to tell it how to form that authorization request as a result the resource server then does a full page redirect to the authorization server with state whatever for the authorization request and the include token binding ID header that redirects over to the authorization server with an authorization request and the the referred token binding ID because of that header that that told the browser to reveal it normal stuff happens authenticate approve etc and then the authorization response comes back with the state the same and an access token that has been bound to the refer token binding ID and you can turn around and the client can use that then to access resources at this resource server or really any resource server in that in that effective top-level domain plus one and it\u0027s the onus then is on the resource server to check the tow combining at that point all right I think it helps some to sort of visualize it this way but but basically it\u0027s it\u0027s it\u0027s really awkward because of the steps required to kick off the flow to make things happen such that the authorization can actually do the binding you have to do some some rather awkward steps sort of through the course of two three and four here to make that even possible next slide please so I led me to the question of what what if anything we should be doing about token binding and the implicit flow and I don\u0027t really know but I wanted to pose a few questions up here the first thing would be just leave it as it is now and let people figure it out on their own or not as seems to be the case so far like it hasn\u0027t really people have had trouble figuring it out another thing would would be to attempt to add some sort of explanatory or cautionary text about how it works and what would be needed or at least required to kick off the flow to actually get it to happen basically explaining what was just explained in the previous slides and the emails around it that have come up and then from there at least give people the tools understand what\u0027s necessary or what\u0027s what is it is impossible and then sort of leave it up up to them to figure it out we could also try to standardize some kind of flow that starts with you know a client in the browser making an xhr a fetch request to a protected resource get some sort of response and then figures out how to request some other resource at the at the RS with a "
  },
  {
    "startTime": "00:24:09",
    "text": "full page HTTP request that in turn is redirected somewhere at the particular resource which is in turn redirected somewhere to the authorization server with a fully formed authorization request the refer to combining header and then all the other stuff you need including stake client ID a response type redirect you are and so forth we could do that it seems super super awkward to try to put in the spec language there\u0027s a lot of discovery problems where would you even tell the client about this special resource at the RS how do you ensure that the client can make the request to the RS that appropriately results in the kind of authorization request that it wanted etc so I\u0027m not really proposing that we do this but it\u0027s it\u0027s out there it\u0027s something we could try to do I\u0027m not sure it\u0027s wise Torsten and toasting yes I\u0027ve come just one question because just have your attention option three more or less is the pattern that we would propose for native apps or any kind of OAuth client that first discovers the issues a pre-flight request to the resource server to obtain the token mining ID which is then used in the request to the authorization server to make that mint and access token which is bound to that refer to a combining option three is it is sort of like a preflight kind of requests sort of to to get the whole flow started with the right pieces in the right places but I think it would only be applicable to browser-based clients you wouldn\u0027t need to do and probably couldn\u0027t even do any of this stuff in native clients it\u0027s strictly for implicit type clients script script in the browser spot icons okay then I would suggest to also add some text to the spec to describe oh this is supposed to work for web apps and native apps so how they are supposed to determine the to combining idea of the resource over before they actually invoke the authorization flow you know what I mean I know what you mean and I think it\u0027s in there although perhaps it could be more clear that would be through the like a code flow and there\u0027s a discussion about how how the native client should or could get the refer to combining in in making the request for the token endpoint so okay I give it a read it could probably be better but it\u0027s covered Mike Jones Microsoft is part of the issue that there\u0027s not a standard token binding API for fetch I know that the non bit Google and Jeff Hodges now also at Google had worked on a pull request in the what WG to try to get that done but I don\u0027t know the "
  },
  {
    "startTime": "00:27:09",
    "text": "status of that now I\u0027m not sure how to answer that because it depends on what such a such API might provide I think that depending on what it is the the issue still exists for requests to the authorization endpoint but if there was a proper API in place around fetch that you could have a JavaScript client call the token endpoint directly and send the refer to combining ID then we would have some facility to make this work in in spa type script clients using a code flow and we wouldn\u0027t necessarily need any of the front channel stuff but I don\u0027t know that a fetch API would even accommodate this use case it depends on what it ends up being but I don\u0027t think anyone\u0027s thinking about it specifically alright maybe we should follow up with Anand and Jeff and see what Sharada so that is john bradley yubico so the there has been some work on fetch but you know the problem that we have doing Federation with browsers is that browsers are constantly trying to foil us because they\u0027re fighting ad networks and other things so there are probably going to be limitations in the origins that you can specify with fetch to include as the referred token binding value which might be limited to the origin of the JavaScript etcetera so the likelihood of the browser being as flexible with being able to do referred token binding in fetch as a native app is somewhat smaller we may need to for single page applications we may actually need to also look at other other options using web crypto possibly there aren\u0027t there aren\u0027t any other good options this is probably the best but again brap browsers so it may not be as cooperative as one would hope so that\u0027s number 5 here other ideas so prime so 1 \u0026 2 is is it would be a little bit unsatisfactory for a document so like we couldn\u0027t figure it out so let the reader figure it out kind of story in I was following whether yours played with the idea that maybe dough combining in the implicit flow is maybe not a good thing that goes to get out too well is that is that so that removes suborders number 4 so we did for 4 different but maybe similar reasons in in the Intel M TLS draft basically came out and said this this isn\u0027t support it doesn\u0027t work "
  },
  {
    "startTime": "00:30:10",
    "text": "you shouldn\u0027t try to do it binding binding access tokens to the client certificate when when for implicit slows we could maybe do the same here which is just take that out provide some explanatory text or not just have it unsupported which is sort of where I was going with this when I started making the slides that was my idea that I thought I was gonna put for I\u0027m not so sure now because of the note underneath that that basically noting that JavaScript clients can\u0027t really send the refer to combining ID to the token endpoint so if we took away short of some changes in the API that may or may not happen in the fetch spec they may not support it if we took away given everything that it the way it works now the api\u0027s that are available in the standards that exists if we take away token bound access tokens for the authorization end point we basically exclude JavaScript style clients from doing tow combining it off that\u0027s sure it so so so that would that would be a consequence of that and I don\u0027t know if that\u0027s a acceptable trade-off question Torsten the statement is true if you assume this JavaScript clients always use implicit right well but that\u0027s because of the third so you can do the token binding using fetch okay right so you could do you can do code with JavaScript clients but the way token mining works what\u0027s provided with such now you couldn\u0027t do a token bound access token through the code flow on a JavaScript client so prayin how do you think we should sort of make a decision on that it sounds like a somewhat unfortunate situation yeah I don\u0027t I don\u0027t have a I don\u0027t know at this point I just wanted to raise some of the issues I mean in all honesty this the future sort of validity and usefulness of this draft itself is somewhat in question at this point and and I don\u0027t I don\u0027t know how much time we should invest in trying to solve problems like this that in practice may never actually come up so tosin again so this year conclusion is we can\u0027t protect s pas using tool mining I just want to understand I\u0027m not sure it\u0027s that black and white but it\u0027s it\u0027s very difficult he and right now given the way things are written if your browser supports it and you\u0027re willing to go through the awkwardness of that we\u0027ve described before in flow three you could do it with implicit but that\u0027s that\u0027s a lot of ifs and otherwise then no you can\u0027t so Ben Caidic is the question can we not currently do that or is it the question can we not ever do that it was a it was "
  },
  {
    "startTime": "00:33:11",
    "text": "a little bit of both what browser vendors actually come up with in the future right it does yes which we don\u0027t know we don\u0027t know but it\u0027s not not a promising landscape right now and for some of the reasons that John mentioned even if there\u0027s a lot of support from the browser vendors the what they came up with might not facilitate a nice cross domain type of use case because of all the issues and concerns around tracking dick heart so are you saying there\u0027s not use for token binding for other clients I don\u0027t think I\u0027m saying that or you\u0027re sitting well mm I got up when you said doesn\u0027t seem like this draft is useful but it sounds like it\u0027s maybe not useful for need of plant our browser clients but there\u0027s lots of other clients many other types of flows where yeah that so it would be I think they\u0027re still potentially a lot of use for other types of clients particularly native clients or even web server type clients I am making a bit of a leap that may or may not be proven true which is without strong support from the browser vendors for the functionality it\u0027s unlikely to see really widespread API support for this stuff in programming languages and platforms both on the client side and the server side cuz I don\u0027t think the incentive structure to build that stuff is really there in which case even though it\u0027s useful for those types of clients I\u0027m not sure it\u0027s ever going to be practically possible to do that development that said that\u0027s just my expectation and opinion the the question at hand here really is more about what if anything to do about JavaScript clients itself given the state of the specs and what what you can do and can\u0027t do sure I understand the limits from the JavaScript clients but there\u0027s lots of other clients and maybe something different should happen either do something different for JavaScript but maybe all the other clients but you\u0027re thinking you don\u0027t think there\u0027s going to be value which piece do you think won\u0027t happen if there\u0027s not support from JavaScript I don\u0027t think Java and Python and node and and those sorts of environments are gonna build the API is to support doing tow combined in either from the client or the server side which which runners it pretty ineffective but that\u0027s my opinion I tried on Brian with would also be an issue in native apps because you are bouncing back and forth between sort of the browser sort of thirty into the operating system and back to the native app would that be a negative I sort of could have been impact as well so if I only want to build a token binding based OS implementation on a native with that bead and impacted by some of the developments in the project yes not "
  },
  {
    "startTime": "00:36:12",
    "text": "directly okay the way things are segmented you can do all the binding and use of the tokens through the interaction with the token end point so could it would still be possible presuming that the platform you\u0027re working on allows you to do that you seem unsatisfied well it\u0027s you\u0027re sort of saying that this isn\u0027t going to happen unless we have support for JavaScript and I want to poke at the value we get in a number of other environments you know like a native app you know the odds of native apps tons of you know just devices you know where we are able to do a proof of possession like flow and enhance the security of OAuth I without having to go and do proof of possession right into the OAuth itself yeah I agree and that\u0027s why I\u0027ve been interested in working on it a lot I just I\u0027m not real confident about that feature right now that\u0027s not for lack of value but for lack of incentive structure around implementation and making this stuff available you see Lucille intercept so I I leaned towards the remove it if it doesn\u0027t work for the JavaScript piece of this and in terms of your incentives there\u0027s a market forces argument here that if it\u0027s important for it to work in JavaScript that someone else will push the browser vendors and it doesn\u0027t this draft that\u0027s gonna do it no it\u0027s not that\u0027s true John Bradley yubico so I believe the the authors believe that the other use cases are actually really important in this use case would be really important the question I think Brian and some of us have is can we actually achieve critical mass with without broad support in the browsers so are people actually going to update their TLS implementations to support exported key material why happens when boring SSL removes token binding support is microsoft going to pick that up in their branch of chromium etc so there are many things still in play but you know people tend to put time and effort into things that they think are going to succeed and right now there are questions about you know how broad the support for token binding is actually going to be if it\u0027s only in perceived to be in one browser you know the other browsers you know that you know although Google may be removing it from chrome and chromium there are people of different minds inside of Google still for for various enterprise use cases so it\u0027s not entirely a ton issue and you know some browser vendors "
  },
  {
    "startTime": "00:39:12",
    "text": "as and yes as on other browser vendors have said yes it\u0027s on our to-do list but we have a million things on our to-do list show us people you know demanding it and we\u0027ll get around to it so it\u0027s really a matter of perhaps when we can get that critical mass it\u0027s not probably not going to happen as quickly as we had once imagined that doesn\u0027t mean it\u0027s not going to happen but to to Lucy\u0027s point if we can\u0027t reliably tell people how to do it from JavaScript apps we should probably not hold out the illusion that that\u0027s a practical thing in the short term we should look remove it and look for for other alternatives but we should continue on with the other types of clients where we do have ways of doing token binding you know we can do it certainly the Windows 10 platform supports it well and 20 points out does have visual basic support the so you know we could probably just declares now that it\u0027s in Visual Basic we can declare success and and I\u0027ll go home my my fears were misplaced I apologize it\u0027s not corrected um so we stand a better chance of you know and it\u0027s still in boring SSL and and other things that could make it work on both iOS and Android assuming those those libraries continue to be supported so if there is a will to make it work on those other in those other environments then certainly we can do that there\u0027s nothing that\u0027s actually standing in our way just I\u0027m leaning towards roaming support for JavaScript lines now and working towards alternative mechanisms I assume we need prologue browser vendor support for that to happen either in the fetch API or something like that but we should definitely some let me do that because there is as far as I understood no dependency and there on the response type it\u0027s just the environment that the client runs in so and my assumption is for JavaScript clients or any kind of client that runs directly in the in the browser sandbox we need browser and the support following up on the question that they asked for the other clients we can pursue this draft for the other clients but I would like to state if obvious right we\u0027ve got an alternative for all our clients right for native apps and web applications John you can you can even flecked on my comment afterwards but MPLS solves exactly the same problems that gives us proof of possession and it just works it\u0027s based on mature technology that\u0027s out there in the field and you can you can you can do it to a token binding with it and you\u0027re done Bachmann AWS I wonder how much the focus "
  },
  {
    "startTime": "00:42:16",
    "text": "on browsers and the JavaScript and whatnot is a little bit premature and that it\u0027s hard to imagine people clamoring to use token binding giving how much of the rest of the infrastructure just isn\u0027t there to support it we here we don\u0027t really have TLS stacks supporting it we don\u0027t have a web server applications supporting we don\u0027t have infrastructure supporting it if you\u0027re getting your TLS terminated somewhere not your end host so it it seems to me we should be thinking about how do we get those two entities of the system up to where people can start playing with this and experimented with this element disks I think that\u0027s the big blocker here right now it\u0027s incredibly hard for somebody did you start playing with this and discover hey this is really cool why isn\u0027t chrome supporting this I\u0027m gonna go yell at them that\u0027s certainly the different way to look at it having spent a lot of time on it myself at having having it readily available in a in a client that\u0027s widely deployed I think makes it possible to play with in some environments and I always felt like that would be sort of the the leading edge to drag other pieces of structure and functionality along it you know it\u0027s really really hard to find the incentive to build in the support in a TLS Terminator and when nothing else does it may be because that alone won\u0027t do anything the same is kind of truth for a web server so well well if those things were in place maybe that would help incentivize but but I always sort of viewed the browser support is sort of leading leading the push and without it it\u0027s hard for me to imagine those other pieces falling in place I don\u0027t know I\u0027ve invested a lot of time and I hope I\u0027m wrong but I I\u0027m struggling with seen how that would play out I think the emphasis is a little bit unbalanced in that like in order to make any of this work you have to have kind of the full end-to-end story and right now we really have only talked about one relatively small piece of it and if you\u0027re a service provider on the web thinking about hey how would I implement this you look around and you realize there is nothing in place for you to start playing with it like you could spin up maybe a toy application that you know plays with it in the browser and talks to one web server and you custom build a whole bunch of crap to try and glue it together but that\u0027s not going to get you very far so I really couldn\u0027t convince you that it\u0027s viable to the point where you\u0027re going to pursue talk to your vendors and say hey why aren\u0027t you supporting this so I guess I\u0027d say it\u0027s not that the browser site isn\u0027t important but we need to be we probably need to be thinking more about the full picture and how we get more elements in place ok so maybe um so "
  },
  {
    "startTime": "00:45:20",
    "text": "after this longer discussion maybe it\u0027s time to ask the room for feedback on whether we should remove that implicit what Oh companion for implicit flow for a moment and provide a justification or why why it\u0027s not there I think that\u0027s what I see where the discussions are currently meaning - it doesn\u0027t Costner I would like to suggest a deeper hole postpone that decision ok until after my presentation because I will come back to that topic and the security PCP presentation when it comes to implicit grants fair enough I don\u0027t think we have to make any decisions right now I just want to raise the issue I feel like it\u0027s sort of 1 2 or 4 ok but yeah all right next and last long I don\u0027t get out of here so who looking at how to frog one of the questions here was take some action on the aforementioned issue or not it\u0027s sort of an open issue right now maybe we just want to think about it for a little while at least raise the issue and have it on people\u0027s mind because I\u0027m not sure it wasn\u0027t necessarily a parent without spending some time looking at it so hopefully it\u0027s a little more obvious now I just wanted to mention I\u0027m not gonna make it to Prague so you won\u0027t have to hear me do this again at least at least that I\u0027ve got vacation which according to my wife of my family takes precedence over hanging out with all you lovely people I know I know last time I chose you all I got a lot of troubles oh and then I guess I believe this with what we really need here is implementation experience and feedback and that\u0027s the area where I\u0027m really struggling without the support from platforms from from TLS terminators from TLS stacks from client-side libraries from web servers without that support there\u0027s really not a viable way to do implementation and get feedback on it and a lot of what we\u0027re doing is talking about it in the abstract and I say that as someone that actually has done implementation it\u0027s a real pain in the ass given what\u0027s out there because because you have to do a lot of it yourself or you just can\u0027t do it at all and that\u0027s where we are yeah on that I think it\u0027d be useful and maybe building on what Torsen is going to talk about for us to go out and talk about what implementations need to be done to make a number of the proposals we have so we can get an idea around not just from a protocol point of view but what are the blockers of like who has to where\u0027d we need changes made in certain kinds of code that\u0027s out there in order for stuff to happen I think that could help us in evaluating what might be the most pragmatic path forward on solving some of these problems well architectural II there may be a preferred solution you know we put our pragmatic hat on around what has to happen to enable it that probably pride us a bunch of guidance so I would just take that as work item for the list as we pick up our moat or so talking about compare and contrast you know Torsten "
  },
  {
    "startTime": "00:48:20",
    "text": "stuff is going to be much more pragmatic and near-term and actionable so maybe it\u0027s a good transition into that thanks everybody yeah thanks friend so we\u0027ll give it another try with my laptop hopefully this works now I can you it\u0027s showing the the screen of the wrong laptop do you know how to switch it over to the other one okay apparently I know Thanks good morning everybody my name is Justin Loretta I\u0027m graffia SOCOM and I\u0027ve got the pleasure to present you three presentations in a row I\u0027m gonna start of the security PCP followed by the jot secured introspective response and I\u0027m will ending with charm right yeah just reflecting on what dick proposed I mean we could set together and here in a side meeting and talk about what or joint picture is on how totem bound stuff could work that would be I would I would strongly prefer that all right security BCP um I would like to present you the current status and the development that has taken place since Montreal can you turn the monitor on please the security BCP enhances the oauth2 data security threat model and security considerations and discusses threats that had been seen in the wild since Oh after that Oh was published in 2012 and along with the discussion of the different threads and and potential countermeasures we also distilled a set of recommendations that complement the "
  },
  {
    "startTime": "00:51:20",
    "text": "security considerations in RC sixty seven forty nine so that\u0027s just oh thank you so just to give you a feeling this is the set of recommendations we came up with and that we strongly suggest to any implement of off to take into consideration they mainly concern the the way the redirect flow is being used and OAuth and as we all have learned in the course of the last year\u0027s the redirect flow is is the source of most of the issues we have seen so token leakage why I refer ahead our open redirect us mix-up access RF and so on and so on so that\u0027s that\u0027s a point we focused on I won\u0027t go through all the details so if you want to get all the details please read the draft I would like to focus on the new staff that we have added in the last couple of months so besides all the the redirect based off we clearly state that we recommend any implement of off and that\u0027s something we have heard in this in the previous session to use TLS based math that\u0027s for a binding any access token to a sender we\u0027re not saying token binding because we you could use token binding you could use mutual TLS for all for that purpose what we strongly recommend to use this kind of proof of possession in order to detect if someone wants to replay a leaked access token and we also added to the draft some text and access token privilege restriction this is more or less giving the recommendation to use audience restriction for any kind of access tokens plus to restrict the action that a client is allowed to conduct with this particular access token which will prevent any kind of privilege escalation I mean in the end it\u0027s good good security practice for ID law that has been secured good security practice for some time but it never was specified in an O of a spec so we added that and we also put considerable time analyzing how we could secure the implicit grant and that\u0027s why I would like to come back to the topic that that Brian just discussed basically for the for the authorization code flow we could use pixie or nuns to detect injection "
  },
  {
    "startTime": "00:54:23",
    "text": "and replay for the implicit grant just due to the fact that the access token is directly issued in the front channel from the authorization endpoint there is no way to use one of those established mechanisms because there is no exchange of a temporary credential to something the access token is directly being issued so the only option we have today to really secure that flow is Towe combining and that\u0027s why I asked Brian to give his presentation first because he clearly Illustrated that so combining right now is more or less an academic option it\u0027s not really a practical option that can really be used in a deployment today as we speak and there are potentially other options but they are all in in a really really early stage of adoption so drama is one that I\u0027m going to present afterwards and that\u0027s why we came up with the recommendation and that\u0027s something I would like to discuss with you guys that\u0027s the recommended recommendation from our perspective from security BCP perspective is to not further use the implicit brand but to use the authorization code instead on all kinds of front-end browser-based redirect flow because the authorization code flow can be protected for against replay open connect of MIDI connect lines can use other mechanisms such as hybrid response types but for plain vanilla or we would like to publish the recommendation to the brawler audience the authorization code flow is the way to go and yes we have to answer the question how single-page applications could be implemented we had this session about that at ILWU as well and our perspective is that SPS can be implemented using authorization code because in the beginning and that\u0027s what people need to understand and remember the implicit grant had been employed been invented in a time before course cross resource origin sharing thank you so in the beginning JavaScript clients were not allowed to perform or sent requests to any host outside of their our region thanks to course that\u0027s now possible which means that a JavaScript application can send a request to the top main point so we can use the authorization code flow for that there are some needy greedy details that we need to answer so John came up yesterday with with the cage with the our browser cache management and so on but we think we are growing confident that\u0027s the better way to go forward because that\u0027s the root of the most robust way and I would like to get your feedback on that everyone everyone so I think it\u0027s a "
  },
  {
    "startTime": "00:57:24",
    "text": "fairly big I mean I can translate that take how I\u0027m saying get rid of the implicit grant the agree with that and about background AWS yes we actually that there was a panel at iaw a couple weeks back that were we talked about JavaScript applications and auth and so and and and best practices around that and one of the things that came out there was if you don\u0027t have to use implicit grant then don\u0027t on we talked a lot about ways that you can use an authorization code approach or other other ways you can design around that problem the general consensus was no one likes it no one thinks it\u0027s a good idea thanks for Justin richer he supports this and to add to tourist ins point goes even whoresons point goes even further you can hat you can say headers and GS now and a bunch of other things and as my self matthew miller i say kill it with fire john bradley yubico so the the conversation that Torsten and i have had really to be precise what we\u0027re talking about is killing the token response type so they the language in the spec around implicit is implicit and not really explicit so almost everybody has a different notion of what the implicit flow is means whether you know people make do native apps and try to do the implicit flow because they think the spec talk implies that if it\u0027s not a confidential client you must use implicit so eliminating the code response type I\u0027m sorry the token response type but still allowing fragment encoding probably expanding on how you would do synchronization between a session cookie for the user session and the expiry of a refresh token or there\u0027s a bunch of issues that people have for single page applications that we if we\u0027re using the code response type we really do need to dig into and explain to people how they can address the same sorts of things using the code but it would be getting rid of that particular you know token only response type which I believe pretty much everyone thinks is a bad idea the response type being a bad idea not the getting rid of it I really for Aaron +1 and the new draft which he could present tomorrow recommends dropping the implicit grant "
  },
  {
    "startTime": "01:00:25",
    "text": "as well benkei duck as irresponsible ad so do the chairs need to be asking for volunteers to write a implicit flow died I died draft that you actually writes these up I don\u0027t know um I don\u0027t know how to proceed with this kind of stuff I mean we are basically saying that RFC 6067 for them not for the nine is or we\u0027ve removed something from the core specification I don\u0027t know how to proceed with that I mean we can say that in the Security BCP recommend against it and give rationale for why before we go to try to update or it\u0027s some deeper end of the actual 16 whatever it is the core OAuth spec having the DCP just yeah let me explain why not it might be a more measured approach potentially it was it\u0027ll just make it die right now but to begin its phase out it potentially we cannot to talk to our intuitive Oh stenotic on an alternate loopy yeah Mike Jones Microsoft I was going to recommend essentially the same thing as Brian that I don\u0027t think we should try to kill something I think we should describe security considerations about when you do and do not want to use the feature which you\u0027re already doing so thank you so but let me ask into the room the question to confirm at least at the meeting on whether whether their proposed by Austin is actually the way forward so please tell me if you agree with those from Austin\u0027s recommendations to recommend the use of the authorization code instead of the implicit flow hum now in hum a few dis and hum if you disagree with that recognition I don\u0027t hear anyone so I I would say it was a very strong preference to follow what you recommend it to us just for the record there was one hum in favor okay okay can you move on to the next presentation because that\u0027s that\u0027s it for the security PCP so for the security PCP and publish a new draft okay next topic we today have a "
  },
  {
    "startTime": "01:03:25",
    "text": "row of token introspection RFC which allows a resource over to query the data associated with an access token with the resource server and what we propose with the new draft jot secured introspection response is as the name suggests to add another response mode which provides the resource server instead of playing Jason with a shot which in turn allows to sign and also encrypt the introspection response basically the motivation is there are some use cases I\u0027m working on for example that are high assurance for example electronic signature creation which require there is resource over to get some non-repudiation from the a s so the es takes liability of the data that provides the resource of a with fulfilling fulfilling a certain request and there are basically two ways to implement that either the a s issues a science a structured access token then you have the signature but that\u0027s not always possible especially in situations where you have an authorization grant which allows the client to access different services and then you might potentially do not want to have a token that contains all the data for all the resource server because this this employee has some privacy implications so what we want to achieve is that a client can obtain a handle based access token use that kind of higher service that has a high assurance level requirement and this service then call back to the a s and use token introspection to get this the introspection response works straightforward the resource server is supposed to use an accept header of type application JWT to actually request the JWT are formatted response and the AS answered with an JWT where it\u0027s get the bidding tricky is at the request processing so the a/s determines what algorithms to use and whether Jason or JWT is being used but the RS may set up a configuration that\u0027s not necessary for pure signing responses it\u0027s sufficient for the for the RS just to send the accept header JWT and then the RS is gonna use its key pair one of its key pairs to sign the response if the RS also wants encrypted response or certain algorithms then it is supposed "
  },
  {
    "startTime": "01:06:26",
    "text": "to set up a relationship a policy with the RS so the RS das knows what how to process the the introspection response the specification uses the same pattern for setting up this metadata as it has been established by the omadi connect dynamic client registration so it works quite similarly with one single exception that in our draft we used a the accept header to signal to the RS to das that the RS once assigned a job protected response whereas in an open Open ID Connect it\u0027s just based on the client configuration what has been changed since Montreal first of all in Montreal the working group were on shortly after Montreal the working group decided to adopt this work as a working group document so we published the first version as a working group document and then we mainly changed or an enhanced the text around the management of in CRO because it\u0027s been raised on the list I think it was Tony that it might have might happen that in the introspection response token that data could could leak which by the way is a issue that the original token introspection draft also has we can provide a solution for that because you either authenticate the resource service so you are sure that on the other side of the TLS connection is a legend a legitimate party that is allowed to receive the document or you just set up encryption and we have added some text that will prevent all kinds of downgrading attacks so that a client or an attacker could not try to obtain introspection responses that are not encrypted if the client had been set up to just receive encrypted responses yeah we changed the default signing algorithms and also added some text about claims so our as assumption is that why are the introspection response all kinds of claims including user data can be provided to the resource server yeah that\u0027s it that\u0027s the current status do you have any questions comments Jim Shaw darkest cellars okay you partially answered my question but I don\u0027t think it\u0027s a complete answer to what I want I\u0027m kind of curious to know why we\u0027re not going ahead and allowing a JWT request using JW\u0027s on the request side as well as the response side so that we can basically hide some additional information there in the case of things like referrals and whatnot so you\u0027re "
  },
  {
    "startTime": "01:09:30",
    "text": "asking why we don\u0027t use that jut on the request and their request introspection request that\u0027s the introspection request so it\u0027s a direct server to server requests typically or at least it\u0027s it\u0027s a request by a TLS connection so it\u0027s it\u0027s protected basically as I said a signature is mainly meant to to add a non-repudiation to them to the construct the request itself only contains the token so we could make a chart that contains the token I don\u0027t see a real benefit for that well I would also expect it in some cases you may want to put it non send for timing purposes in some systems I don\u0027t know it\u0027s under does an on signal request a refresh yeah I understand what the nonce is but I don\u0027t understand what we would achieve by adding a nonce to the request okay I mean I\u0027m worried about finish the cases where it\u0027s running around against multiple servers in the backside okay did you typically use a non-story play of detection right no and we rely on TLS to to do replay detection in that case because we are running on till as on the bio TLS connection yep Jim you may need to explain your threat a little bit more in more detail specifically the might of a server case which is which services I\u0027m looking in terms of multiple assets so that the message goes to a s one and think it\u0027s knocked off to a s two to actually do the real answer I\u0027m back FEA so on I don\u0027t think these do you think okay I haven\u0027t seen you schism well I mean this is this would be a standard resource owner the resource owner and the client on or our separate things so you actually need to refer it back to the client owner that the client a s to make sure that the client a US is still fixed as a valid access as well potentially we use different assumptions here I mean the basic security model of overt assumes that on an hour s is is bound to a single a s and a different ones so if you want to determine which a is to talk to out of a set of a different a SS you need more than just introspection you need to somehow determine based on the access token which a s to talk to and there is no no draft in the working group right now that would support this kind of use case well um we can talk about that "
  },
  {
    "startTime": "01:12:30",
    "text": "later on everyone we had a discussion about that but this is a really simple use case the RS knows which a s is talking to it knows the end point until as is used to protect the communication so that\u0027s that\u0027s the use case we would like to address nothing more any other questions all right I would like to ask you a question Justin ritual it suggested a in Montreal that we changed a draft which right now only covers introspection to introduce a general mechanism to enable jot based responses on other Olaf end points and I would like to to know your opinion on that topic relaying for Justin richer I think it\u0027s actually for the earlier point RC 76 62 requires RS authentication but has hand-wavy about it this draft will need to be clear that encrypting results to a key fulfills that Anabel Backman AWS well I like the idea of getting responses from Waffen points back as Jaques I like the idea of having that optional additional layer of security there for us to make use of one complication I see here is that some of these endpoints are called by clients and some of the points maybe being called by resource servers and that in and of itself isn\u0027t a problem until I think you get to the configuration side of things you talked earlier about a configuration step where the resource server is sort of posing as a client for dynamic client registration and they have separate parameters governing and algorithms and such to be used with what we\u0027re talking about introspection yes so that that could get messy if you try in general I suspect to cover these different end points that are possibly being called by different different parties or at the very least that\u0027s something that you\u0027ll have to clarify how how those parameters relate to one another Mike Jones Microsoft I\u0027ll point out as background something you know but a lot of the room may not which is you already have an open ID financial grade API draft for signed Roth responses that\u0027s an implementers draft meaning it\u0027s in reasonably mature shape given you\u0027ve already done that for "
  },
  {
    "startTime": "01:15:33",
    "text": "general auth responses it\u0027s not clear to me that also doing so in this draft makes any sense and as Annabelle points out there\u0027s some nuances about the different end points that among other things may require different key declarations and different kinds of specifications about what the two parties are willing to do that I don\u0027t think we should try to gloss over in a general way yeah I agree the call us are completely different so you will have different configuration models different security models I happen to present the other draft in the next presentation so we can then potentially have a discussion on the list yeah really and for Justin again unless Torsten does cover it more this is for back channel charm is charm is for the front end ciao so potentially I should post on the list hope I will post a question on the list so get more feedback from the working group you still have which may shed some additional light on that talking here alright next presentation please well he\u0027s doing that this is Brian Campbell from pain I just want to throw my two cents into that I think trying to generalize it in one draft across all types of responses would be to use your wording maybe more academic than valuable in nature and I would I would urge caution before we try to do that I don\u0027t think there\u0027s really a good use case for thin like revocation responses the token in point I think is kind of suspect and having something that that\u0027s very different for an authorization response I think it makes sense to have that completely separate and not try to use a completely sort of generic framework for the two so I would I would be against trying to generalize it in that fashion thank you for a feedback so am i for presentation today I\u0027m going to present a work that\u0027s being done in the Febby working group at the open ID foundation because I think that could be of general interest for the hoff community I\u0027ve written the draft together with Brian um as kind of a bit of introduction there are some use cases where we would like to have a signature over the authorization request and potentially response depending on the threat model and the API "
  },
  {
    "startTime": "01:18:34",
    "text": "we are gonna serve and we already have a solution for authentic authorization request which is the chart security authorization request which is I think should go into the RFC queue as we speak so it\u0027s just a secretary issue and we just administrative okay what we are nearly done with that but we don\u0027t have something to sign all for ization responses yet you might ask the question is there really a need for that in if you look in the wild you will see seem style seems like that because especially in the open banking area there our use cases where open addict open ID connect and hybrids response types are used to create a signature over the authorization response it basically uses the ID token and the response type ID token token as a detached signature which works it provides integrity and authenticity for the authorization response but it creates some issues because you somehow lose the ability to use real open and reconnect to obtain user data and that\u0027s the reason why within the financial great API working group at the open ID foundation we decided to come up with a new draft that more or less describes a pure signature over the authorization response without this coupling with an open ante connect and we called it Judge security authorization response mode why it\u0027s called mode I will explain in a second but let me first start with the basics the idea is in the same way as for the judge secured authorization request to carry all the response parameters in a jot we\u0027ve also put some extra data in there to further improve the protection of the response and this job then in turn can be signed and optionally encrypted in the first version of the draft I made it a new response type I think it called it signed underscore code or something like that and then Brian came up with the proposal just let\u0027s make it a response mode and the difference is the response mode is a spec I think it\u0027s also in the open ad space so far which allows to have different representation for the same response type it\u0027s being used for example to introduce a post method forum post method thank you Mike and we\u0027ve "
  },
  {
    "startTime": "01:21:35",
    "text": "built up in this functionality and introduced a set of new response mode values which allow to query response parameters for the different response types so it could use charm in combination with code implicit or we no longer need that hybrids response types and so on Annabelle Annabelle Backman AWS I\u0027m gonna be a pedantic jerk here and say that you miss characterized response mode it does not define different representations it defines different transport mechanisms the three response modes that I\u0027m aware of having been standardized our query fragment and forum post the the representation of the response and all of those is as a URL encoded you know query string basically is but it\u0027s where it it\u0027s being placed in the request is is what\u0027s going to vary between them I agreed with not with wanting to make this work with any kind of response type I think it makes sense to see this as sort of an envelope type but I said my question for you right is are you mandating as part of the specification that the Jah is transmitted via a particular manner is including the jot as the query string part of this or including the jot as a foreign post part of this because I don\u0027t think you can call this response mode if you\u0027re not also mandating something like that that\u0027s what I said we have different response mode values so the chart can be either in a fragment can be transported by a forum post or there\u0027s a query string parameter how is that specified oh just a combination of jot point I think it\u0027s it starts with the arm representation just as query period JWT for example so are you using the multiple response modes for that it sounds like you invented stats that\u0027s based on the multiple response type but it\u0027s not okay so you\u0027re you\u0027re encoding that this is a format this is a charge which is transported via the format post the form post method yeah I think I need to look more closely at what you\u0027re doing that I\u0027m please give me a rate and give give give us feedback I mean this is the reason why I\u0027m presenting this here to make you aware there is some work and it\u0027s it\u0027s still in the early stage even if it went through implementers draft already so please keep feedback on that yeah um right now it\u0027s best to give feedback on the fabulous because that\u0027s where this dis draft right now lives all right so just "
  },
  {
    "startTime": "01:24:38",
    "text": "to give an example of how this would look like for a code in bold you see the the well-known response parameter so you\u0027ve got the code you\u0027ve got the state value and in contrast to the ID token everything is kept within the chart because there\u0027s nearly designed there is no need to have a detection signature you put everything into the chart and then we also have the issue on the audience the issue is is needed in the end to determined that the key material that\u0027s being used to verify the signature but it\u0027s also very helpful helpful to identify the sender of this jot which is also a prerequisite to detect mix-up attack and the audience also adds to to the mix-up prevention um that\u0027s how the request looks like so you can just use response mode JWT in that case the default transport is used for the certain response type so for code it\u0027s a query parameter for implicit should be fragment but you can basically specify what you want to achieve it by adding a period and the transport mechanism and the response just contains the jot that\u0027s it and the client then is as opposed to first decrypt the jot and check all the all the different well use within the starting with the state so verifying the state ensures that a request it was really also issued on the same device that the response is being processed so that gives basic as he is a ref protection and that also helps to detect injection so there is a need for additional mechanisms to for example detect a code injection and audience and if you are being checked in order to to detect mix-up for example yeah what the drum draft provides the drum charm draft provides different mechanism it provides signing encryption as I as I said which also means that there is confidentiality over the data of the authorization response something we we didn\u0027t have before we\u0027ve got sender identification the identification and authentication we\u0027ve got all the instruction protection from replay leakage and mix-up and this all packaged in a single mechanism so no need for additional pixie nuns or something like that which I really like with the draft what I personally also don\u0027t like with the draft is that it somehow feels a bit like so XML stuff adding adding this to "
  },
  {
    "startTime": "01:27:39",
    "text": "the response mode that\u0027s my personal impression Brian yeah I just wanted to make you guys aware of that and I would like to know whether you think it\u0027s worth bringing that to the working group here and potentially making that a Roth specification Annabelle Bachman AWS again now armed with 30 seconds of having looked at your draft I I do think it\u0027s worth pursuing this in Roth I think the subject matter expertise is more likely to be found in this space as far as understanding how to do this in a way that is going to play well with other aspects that may come along a couple concerns I see with the way you\u0027re doing things currently is you\u0027re you you\u0027re defining sort of a cross product of two values or values right which means anytime you get a new value for either one of those things you have to have a new spec to you know update and add the additional cross products another approach would be to look at this as a response format parameter mm-hmm which feels a little bit weird because it\u0027s like reinventing it\u0027s essentially doing what the accept header is doing except we don\u0027t have a way of applying the anok the accept header to say the query string so we kind of need to fill that gap just a question would you are you proposing then to combine the response mode with a new encoding parameter oh I think response type response mode and response format are potentially to three different things entirely and any mixture of any different values for the three of them may be worthwhile but it\u0027s also getting very pedantic and potentially very confusing so you weigh that against everything else the other concern I see is that one of the mistakes that we made with Jah requests is that we made the assumption that there\u0027s no collisions between Jacque claims and request parameters with the result being now that like we have to be very careful about making sure that that remains to be the case and we\u0027ve had discussions in this very group where that oops that was a problem and now we have to figure out how to solve it oh yeah is it worth taking a different approach here where rather than putting the response parameters in the jot your root level as where they could collide with Jacque claims do instead want to define a Jacque claim for an object that "
  },
  {
    "startTime": "01:30:41",
    "text": "would encapsulate the response parameters so you would like to separate them a they don\u0027t write actual okay we had a pelo response and then the value of that being an object with code and state something along those lines is I think worth considering given our recent experience with jar and how that\u0027s played out colliding with I think specs from other work groups as well so thank you relaying for Justin so remember where it\u0027s throw your arrows he\u0027s not against this work coming to the group but would like to generally ask how much of soap are we going to reinvent before I admit that we bastardized HTTP in a horrible way Mike Jones Microsoft I think the way to handle the potential collision between chat claims and requests to response parameters is simply to augment the instructions to the designated experts for the relevant health registry is saying be sure to avoid Burton pertinent jot claims in those registries in practice the sign request format has been a standard since 2014 and has been in production so we\u0027re not going to touch that and I believe that you know this should use the same modality which is the simplest thing as you put all the claims in the top level I\u0027m against complexified things when it\u0027s not actually needed so Matthew Miller speaking for himself I think I mean and also after about thirty seconds of looking at this it\u0027s very interesting but I think the fact that there\u0027s so much discussion happiness Mike means that maybe this work ought to be happening here to cover some of these cases that seem to be cropping up with this audience even if there is a tremendous amount of overlap between Open ID Connect in here and about backup in AWS I think it as far as how do we handle putting the response parameters into the jaw ultimately I think it depends on what you want the scope of this to be if you want this to be something that is used within the OAuth space in our specs and nowhere else then yeah you you could maybe get away with saying hey just make sure that your response parameters don\u0027t collide with John if you want this to be something that is more broadly adoptable such that it could be employed with as a response "
  },
  {
    "startTime": "01:33:47",
    "text": "format for other protocols that already exist out there or anything that people might be building in the future we\u0027re avoiding collisions with claims may not necessarily be practical than I think it\u0027s worth avoiding that problem since it\u0027s easy for us to do so I think there\u0027s especially the case were pre-existing protocols Freud I knew I was going to say something else like Jones I\u0027ve seen in practice that people already developers get confused and do things wrong given we have the combination of response type in response mode despite the combinations all being well defined I\u0027ve seen implementations not follow the specs I really really don\u0027t want a third parameter called response format or something which you would have to understand all three values and the communicational permutations thereof you know don\u0027t know how to and could requests and or responses I think developers will certainly get that wrong too much of the toilet this is Brian Campbell I guess I like to agree with Mike although I appreciate the pedantic Ness i\u0027m annabelle I do want to read the the definition of response mode is the response mode determines how the authorization returns result parameters from the authorization endpoint so I think that what\u0027s being done in here is well well within the definition of that although it\u0027s sort of mixing the encoding and the generalized form out of it I think it\u0027s close enough to satisfying it and the possibility of introducing a new format burst mode verse type could could really have a lot of confusion and the possibility of sort of the combinatorial explosion I think is there but in practice is very unlikely to play out in a bad way so I I would very much like to keep it as a mode as far as the collisions go I the I don\u0027t know what to do the only practical collision we\u0027ve had is around odd in the JWT requests that came up it was specified in a standard that\u0027s still out there so it\u0027s in some ways it\u0027s sort of an academic collision we\u0027ve only had one actual instance of it and another way that this could deal with it is registering those parameters that are meaningful and jata in this context so that they\u0027re taken as response parameters I don\u0027t really know if that\u0027s better than creating like a sub map I think it\u0027s something that might be a more elegant solution but then it it then it\u0027s sort of different than the Saint then what we\u0027re doing in all the other ways that we\u0027re doing this it\u0027s especially different from the way "
  },
  {
    "startTime": "01:36:48",
    "text": "the response works and that\u0027s exactly if we could go back and do it all over again I think having that sort of separation between meta meta info and the job and sort of parameter from the job would be valuable but we don\u0027t let\u0027s call it envelope envelope I don\u0027t think it\u0027s as soapy is everyone saying I think it\u0027s just useful but maybe I\u0027m in the majority minority there I do have a I don\u0027t know how to say this I\u0027m a little concerned about introducing this work here because we\u0027ve struggled with sort of dual track specifications and the Open ID foundation in here when we try to solve the same problem and we end up with almost compatible but somewhat different things that do the same thing and not to say that having the input and expertise of this group wouldn\u0027t be useful but I\u0027m really worried about coming out of that with two jarm specifications that do the same thing in different ways and aren\u0027t compatible with each other so I don\u0027t know what to do about that but it would be a concern I understand that I mean we started we started at work and fappy because there wasn\u0027t sure direct need for this kind but it\u0027s obviously something that could live in the working group as well and the question was raised in the beginning of happy working group as well so I don\u0027t have a solution for that and I would like to come up with the same specification just working group referring to the other thank you Mike Jones two comments first I\u0027d like to agree with what Brian said as the primary author of the response mode specification that the use that you and Brian are putting it to is within the conceptual scope of what the response mode was intended to do second I just wanted to provide background information for those of you who may not be also in the ACE working group that the 100 auth parameter conflict that did arise live excites fixed in his perimeter strapped which was submitted a month ago or something I know Hannes and I have reviewed that and we believe that that\u0027s now sorted out the conflicts so I think in practice were in good shape it was it was odd I think yeah yeah okay thank you so um Boston and and Brian so I think you heard some good feedback about how this could be of generic use besides just the financial API so maybe you could write up a draft and then socialize it somehow since there\u0027s a "
  },
  {
    "startTime": "01:39:49",
    "text": "certain overlap of people with the Open ID Connect foundation is that is that a good way forward I don\u0027t know well it\u0027s again sir I just wasn\u0027t speaking I don\u0027t know where the second service but we could also first circulate a URL pointing to the fabbi draft in the wharf working group list sure that\u0027s simpler for us that\u0027s something you can do so where\u0027s the blue she did you guys sign the bullshit oh man you still have the perfect in time presentation-wise but make sure that you sign so next presentation is one that I\u0027m going to get from behalf of these people at the last IDF meeting we had a longer discussion on pop a yes to flying key distribution and it was in also in relationship to some of the work that happened at the same time in the ACE working group Mike hinted to that a few minutes ago at the microphone and we came up after some discussions in Montreal with a couple of suggestions for way forward one of the decisions that we took at that meeting was the adoption of the resource indicator document and but there were also some changes to this specification and then there was his Connors corresponding activities in in the ACE working group and the easte working group meeting is later this week so we\u0027ll capture this one first so this is sort of the picture taken from the document just illustrating the classic all stands augmented with some additional fields namely this is the resource indicator the request confirmation the RS confirmation regular confirmation and the token type we are going to talk about the resource indicator document tomorrow so I won\u0027t spend too much time on this anyway skip that there is the use of these so that a few parameters India which are the idea is that the document has the corresponding parameter just for a different encoding namely for "
  },
  {
    "startTime": "01:42:49",
    "text": "use with co-op and this one is encoding for HTTP which is what we agreed on in terms of work split at the last idea of meeting so the request confirmation is a parameter is only used for for the case when you want to bind an asymmetric key pair to the token and so so this is called the request confirmation in case of the response for this in the symmetric key case you the service actually generating the key pair so ordered unoccupied the symmetric key and he needs to send it back to the client and can do that in two cases or in two different formats one is ID encrypted it would be in any case encrypted using Transportation Security but him the authorization server may additional encrypted using a jwe or it sends it as a jwk in sort of over transport layer security and so this document now registers has a in the ionic conservation section has the request confirmation and the RS comes the comm parameter and a token type parameter registered as in the ionic consideration for HTTP the token type is actually the token type is something that we had already I believe earlier because it\u0027s the bearer token that we initially unused it so we only registered a new value which is the pop token type for this usage Jim do you have a question that okay go back inside please there was one case that we\u0027re having some arguments in the ACE group on the request see enough where we wanted to put a key ID and potentially for symmetric-key and the question that we basically had for the OAuth group is how much of a concept of there is issuing a secondary token with additional privileges on the same key and is that something we should be doing or we should be just replacing the token so you\u0027re essentially issuing you\u0027re talking about issuing two access tokens at the same time while issuing one access token and then issuing a second access token with additional privileges at a later date but on the same symmetric key okay so there is a case "
  },
  {
    "startTime": "01:45:54",
    "text": "where we\u0027re talking about maybe between the symmetric key in the request confirmation as a key ID so Mike Jones follow-up to Jim\u0027s question in standard OAuth the only way to get an additional access token is to use the Refresh token in which case I think it makes perfect sense to key it the same as the previous access token unless an explicit key rollover has occurred is that the ace use case you\u0027re talking about or is it a different mechanism that\u0027s not part of normal o auth we were actually looking at doing a slightly different way but if we can basically rewrite to use the reflect refresh token I think without any problems okay after that would resolve that issue so there are as I was preparing the slides I noticed that I had to still have a few bucks in it specification I would try to issue a new a new document based on this I just copy and paste errors there\u0027s also some the WebRTC guys are using a different token format so they I\u0027ve come up if their own token format a while ago which is published as an RFC which was reviewed by this group so I think having them review this document obviously makes a lot of sense and one of the the guys who joined as a co-author is actually part of that community so if it I Missy so I probably have already reviewed it but it would be good to get a confirmation we may need a few more detailed examples to illustrate the case specifically currently their argument is full of examples that use the JSON based encoding but this mechanism can also use with of course other token encodings like the CW T so there\u0027s nothing that prevents it and this is what\u0027s partially also where the relationship to ace came from besides having a sort of alignment with the parameter names when used in coop because one possibility is to just have for example a smart phone that interacts with an authorization server using regular HTTP but it actually when itself talks to an IOT device it will want to use a smaller token encoding using the the CW T and so it then basically talks requests they see WT using the HTTP based mechanism and passes that on so right some at the moment the examples don\u0027t sort of illustrate that and and maybe the "
  },
  {
    "startTime": "01:48:54",
    "text": "similar example should be for a web RTC in there as well to just give a a broader range of deployment flavors yeah and we talked about the alignment with with a switch we been sort of exchanging messages back and forth and and some of you are probably also registered on the on the east list and and I\u0027ve seen the interaction between Mike Ludwick and myself on that list and Jim yeah good I need any questions on that one maybe I should have put that on there one open issue that shows up once in a while is currently what the document talks about is really about binding the access token to a key and we obviously use the existing mechanisms for doing so it doesn\u0027t say anything about what happens to the Refresh token itself which we talked numerous times in a group and we may need to mention that in in some some way or the other is there anything else that comes to your mind that we need to take into account nothing so that\u0027s good um and I believe with this we are unless you have some other some other questions we are done for today\u0027s meeting and will continue in tomorrow with the agenda and I will add one additional item based on Aaron\u0027s document submission on the JavaScript JavaScript based application PCB Vicki do you want to go to the microphone oh no oh we wanted to talk we also wanted to have a side conversation and regarding MPLS and the stuff that akka talked about earlier so I\u0027m proposing maybe two since we want to we could give a brief summary or a brief update on this tomorrow at the meeting already so maybe we could get together for lunch that\u0027s if you guys have fun the decision okay okay do you think we can do some person dishing today you would be quick okay dick what what was the earthquake I interrupted you what was the question the javascript document "
  },
  {
    "startTime": "01:52:01",
    "text": "that Aaron was talking about I was told that he submitted it and posted it to the list is that correct he definitely posted it in the jabber room okay sure about the mailing list itself the the Aaron produced a JavaScript Ross PCB document the first draft and he send it to the to the Chava chat only no no no no no Aaron and Aaron predict the different Matt maybe you can the link to the or was meaningless anything else okay thank you Oh the blue sheep give me the blue shit back thank you did everyone sign the pledge sheet does anybody have the blue sheet up there next to them "
  }
]