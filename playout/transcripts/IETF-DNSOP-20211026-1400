[
  {
    "startTime": "00:01:20",
    "text": "all right good morning so it's a minute after [Music] and we'll we'll keep this short in focus hi betto beno's here this is i'm tim and welcome to a little interim adidas hop a very specialized one um we'll start off um suzanne's here as well she's in the middle of some icann week so um i'm not sure if a warren is here okay so good morning all um we got the jabber we got the minute paul's here i was going to take minutes if paul couldn't um but thank you if you can um here's our note well about"
  },
  {
    "startTime": "00:02:01",
    "text": "what you say is open please pay attention and read this i'm sure you all have read this reading the list of folks here i believe they have um so we'll continue our agenda is one item we've got today is roy's day um we're calling it so um it's all about the error reporting and i know people were questioning this but it's um he's got some very specific topics he wants to talk about he wanted to talk about it with implementers um and we thought this is a good way to get all the influencers in the room and just sort of chat about implementations and stuff like that so he's got some slides and we're not going to sort of get in his way and we're going to let him run this so um sorry so there we go it's very straightforward and that's basically it but we can um i'm going to stop sharing slides i think thank you yeah let benno take over um thank you roy you can run your own slides if you you request like no nope he shares that roy you can run your own slides all right you've got the you've got the wheel right please you know have fun there you go all right um you can switch on your video i will switch off my video i i i believe i can do this without video i just tried to do that and not consume any bandwidth and not having to have a haircut all right um hi everyone thanks for joining um and and i really thank you to um to the dns op chairs and isg to allow me to do this um this is about the extended dns error reporting um the draft is currently in zero zero status it's about to expire um i have some updates but i need to discuss a few points with you"
  },
  {
    "startTime": "00:04:00",
    "text": "in order to implement the extended dns error reporting i think it relies heavily on extended dns error to begin with which is the standard which is rc891 um i saw a discussion recently on matter most in the in the town square where peter van dyke asked who has implemented what already from extended dns errors and and he was quite pleasantly surprised i am quite pleasantly surprised so i've made a list i did some additional research and i asked to ask a few implementers where they are with these things um and i've put them on this slide so most implementations have it or are coming meanwhile some large deployments also support extended dns errors so that's on both the authoritative side for instance for godaddy but also the resolver side for instance for cloudflare quad9 and opendns i'm not sure to what extent they support extended dns errors but at least they have the capabilities to support it and what i mean by that is i don't know if all the errors that are listed in rfc8914 are are supported but that's not the purpose of this the purpose of this is to discuss the extended dns error reporting which is independent from rfc 8914 it's basically reporting the error um to a place that can potentially fix the error all right next slide so um i've got two main issues i would like to discuss um peter van dyke of of power dns um um explained to me that they're they're when you have an interaction with a resolver that does q name minimization"
  },
  {
    "startTime": "00:06:02",
    "text": "it really basically reports a few times the same error for a minimized domain um to a reporting agent which is an issue um right i mean because the moment you receive this this this error as as a reporting agent you don't know which one is actually the broken domain you could guess but that's that's a little bit too heuristic not deterministic so i have a suggestion to fix that is remember we have an underscore er label to separate the queue name the erroneous q name with the agent domain which is underscore er and we could actually start with it as well so now the q name is completely encapsulated and basically everything that comes in that doesn't start with an underscore er you can just ignore we're open to better suggestions not just for encapsulation um if you if you don't like the underscore er that's fine let's take it to the list let's not use precious time here um but i'd like i'd like to fix the problem of of dealing with qd minimization what i do not want to do is ask the result for implementation to switch qn minimization off when reporting the error i think that's too intrusive so and i don't think it's necessary if you can just solve it this way so that's one and the other thing is signaling extended dns errors and reporting support so in the current version of the draft that's version zero zero the resolver must indicate support via an edna zero option and if the resolver has indicated support then the authoritative server can actually return the edna zero option with the reporting agent domain in its in its option space"
  },
  {
    "startTime": "00:08:00",
    "text": "now um i thought that was the nice thing to do right no unsolicited information however it turns out that some authoritative servers will be turned forward or surveilled if they see an unknown edna zero option and yes that's a buck and yes that's annoying and yes that should be fixed if they actually support the indiana zero but the fact remains that some do since resolvers cannot yet discriminate between those that support and do not support they probably need to retry without the edna zero option which is which is cumbersome which cost extra delays etc etc so a suggestion is to allow the authoritative server to basically return reporting agent domain unsolicited and um while that seems a bit spammy um actually the extended dns errors rc8914 already does something like this when there's an error um it it it sends this option the ede option i think that's option 15. it sends it back unsolicited basically it doesn't need the resolver to indicate that it supports extended dns errors so we we kind of the idea is to mimic that that kind of thing um because i understand that results are far more resilient against uh unknown idiozier options um so i like to go ahead and do this um the idea being that an authoritative server can always send this option and without relying on a resolver indicating support for them so that's the two main things i wanted to discuss then i have one more slide"
  },
  {
    "startTime": "00:10:00",
    "text": "basically not all errors in rxc8914 are equal some errors are returned by authoritative servers and i don't think it's needed to actually report this back to the authoritative servers if a resolver receives one of these errors so for instance you have 14 not ready 15 blocked 20 another authority of 21 not supported those are um i think implemented by some authority of servers already um so well i leave it to the working group without me deciding what to do what to put in the draft should the resolver report these back to the reporting agent if a reporting agent string is present in a response so those are typical error codes basically the authority server can can be brought back then you have some errors in the rc-81914 that can only be completed after uh only being concluded after completely resolved after a complete resolving session so basically what you would normally send back to the client right and that's just basically there's no reachable authority so if there's no reasonable authority that actually implies that no authority can be reached um are we going to send it back and are we going to send it back to whom um so that's one of these one of these oddities where um ede extended dns errors and excellent dns error reporting are not aligned um then you have for instance when you have multiple hours let's say you have a single zone um that's still where all the signatures are expired and does the resolver need to send a report to each individual authority to each reporting agent and there's some room for optimization here we put that in the draft and then there are some errors that reveal resolver policies such as 16 censored 17 filtered 18 prohibited"
  },
  {
    "startTime": "00:12:01",
    "text": "um the reason i mentioned this it's already in extended dns errors that it reveals we've also resolved a policy um when you basically report that elsewhere um should they be should they be reported back to a reporting agent yes or no that's a question to the group and um that's actually yeah my last slide so these three things i would like to discuss i don't know um um i don't know how to um i'm sorry i'm going to address the first two already in the in version one and so there will be text in version one which will be out today or tomorrow um which which contains the the question that i posted here now in version two which i'll shall submit in a couple of weeks time we will have the results of the discussion from this dnso working group session and the reason um that i don't do that in one already is that the draft is about to expire and i don't want to let it let it leap all right that's it back to the back back back to battle all right thank you thank you roy um well first uh paul is in the queue and then we can go over the the different issues you brought in uh you brought up in your presentation but first i'd like to give the floor to people who have questions immediately after your presentation paul please go in uh hi this is paul hoffman so this is not a question on any of the technical stuff but roy the um the draft submission deadline was yesterday so you won't be able to do a zero one or a zero two until the meeting week i'm not sure how you wanna deal with that and that might cause you to want to combine them or such but"
  },
  {
    "startTime": "00:14:00",
    "text": "you're not able to turn in anything now well all right he can um we can get warren to sort of approve it um or something of that nature i believe so but um he can send something to the list also all right thank you thanks for that paul and thanks for that tim i will um i will i will make sure that whatever i said to the list is also sent to uh warren or to yeah to warn um so that people are aware thanks okay thank you um any other questions after the presentation otherwise i suggest we go we go to the uh to the three issues you want to discuss and ask maybe the implementers about status what they think yeah so rolf please go ahead okay um so can you go to the other slide because yeah this one so on which errors to report back i mean everything that goes wrong can go wrong will go wrong and i can totally see an authoritative server kind of not real i mean and management of an authority so not realizing some of their services and that data so asking if there is anything uh it has to be sent back even if it comes from the authoritative server and i mean that's what's on on that issue yeah that's a good point and then on the okay no sorry what what i i i agree um um if if anything the authoritative"
  },
  {
    "startTime": "00:16:01",
    "text": "server reports back to the resolve for the resolver should be brought back to the um agent's domain and on the last one i mean it is really part of the resolver policy if he wants to report back that your domain is blocked because i'm filtering it if i mean i don't think that the rfc should kind of uh i mean um have a kind of say there all right that's a good point shall i just mimic what says over the these few um errors um because you need to say something in the security section um which is which is which is basically that some of these some of these errors might reveal something [Music] hi uh i'm thinking along the lines of ralph's because basically the option is not anyway so the authoritative server can decide for every single response whether whatever the alternative server is sending back to the resolver should be potentially reported to the reporting agent or not so i think that basically what ralph said there is no reason for the rfc to prescribe whatever list of options which should be ignored because the implementation of the authenticative server can decide specifically for their case there is no need to prescribe it in rfc because everyone can do their own decision and if someone you know wants to get reports about zones they are not authentic for there is i think no reason to prevent the authentic server from sending back the the option with the reporting domain"
  },
  {
    "startTime": "00:18:01",
    "text": "so i think that we can have a text which actually makes it explicit that the authoritative server is allowed to send or not send the option on a pair answer basis and then all the rest follows from that i think [Music] okay basically that means um i can avoid uh discussing individual errors completely and um but there is a there is a small thing there there's a fundamental difference between um a resolver not being able to resolve something because it's our response or a resolver not able to send something back because the entire resolver session is over and sorry for the lack of the right terminology but basically a resolver determines at one point um there's an error and at that point it needs to send something back so there's a small a small disjoint that an error happens because of an authoritative server that sends something back or an error that's happened because all options are depleted if that makes any sense so do i do i specify something around that in this in this document or is it basically if you notice an error with the authoritative server and something that you normally log about or something that you would normally form an ede about report it back to the um to the reporting agent yeah i can see your point the problem basically is that if we have if the error is caused by the single message from a single authoritative server it's all clear because the server can decide on the per message basis whether it should be reported or not but if we have to retry the query"
  },
  {
    "startTime": "00:20:00",
    "text": "multiple times to multiple alternative servers then the problem is basically what um reporting agent value we take because potentially the every single alternative server and every single message can have different value and then we have to pick one out of n or zero from zero two to one uh so i think that when in any case we need a general text not necessarily specific about like policy decisions whether it's blocked or anything but we probably need a paragraph or two discussing how do you pick the reporting domain when you have like n options and how do you pick one when the resolution fails yeah so sorry answer but i think that we need to consider it and it should be mentioned in the text somehow all right thanks peter i've noted uh paul please go ahead thank you so uh i think that's an uh an interesting discussion that needs actually more in the text including possibly a new error that is it would i think it would be valued valuable to whoever's looking through this log on the authoritative side to know that the client actually tried all of the uh authoritative servers before generating an error that to me would be a valuable thing to know and that's not something i believe that we have in ede so i think this will take more discussion but um a fact like that i think is uh will um be super useful to somebody who just goes like oh yeah like if i'm looking in the log i might say oh yeah yeah i know i had a problem then and ignore it i"
  },
  {
    "startTime": "00:22:01",
    "text": "would be less likely to ignore it if i saw that the resolver said but i tried all of your authoritative servers so just a thought all right thanks paul hello i'm mostly responding to better here so a resolving session might generate 10 or 20 errors plus a 21st error that is none of the outer reachable and you may not want to send 20 error reports you also may sometimes even not want to send the one report you have because you're already busy enough so perhaps some sampling is in order where error 22 no reachable authority would have some preference over the others and then if a domain is popular enough and all of the outs are broken in various ways then over multiple queries to resolvers those various errors will still end up at the agents even though a resolver might be randomizing dropping a fuel petrol do you want to respond to that or shall i try to give a response to that i think it certainly makes sense to have some sampling and also the amount of you know messages we send out but i think that it's mostly implementation specific very much depends on particular conditions on the reservoir so i wouldn't be like prescribing everything in the draft i i lean more to like text which has says well don't forget to consider business and this and make you know decisions appropriate for your use case"
  },
  {
    "startTime": "00:24:01",
    "text": "and implementation then like prescribing how the sampling should work and stuff like that yeah i do agree which should never be too prescriptive so peter and peter um can i um i'll i'll send you some um some some some text um and um it's because you you both of you um actually implement this stuff and and i don't um so if and and ben are you as well um so if i if i can send you text and see if you like it and if not just just just mess it up and hammer it down and burn it and then then i'll i'll put whatever we agree on in the document for the rest of the group to to discuss all right yeah me perfect um i i still have the other two i'm not sure if we're done with this this with the um extended error reporting itself sorry with the individual errors itself but i would like to have some feedback about the um avoiding messing with qna minimization and just and just dump a label in front of it that says underscore er or whatever that needs and the other one is to have unsolicited um [Music] agent domains in authoritative servers and if if if there are silence all the way which i completely understand i'm gonna go with the suggestions that are currently on the screen um so that why the working group has a chance to discuss that on the list if that's okay with if no one has any comments yeah so i see that page has suggested it as an implementer i don't know about other implementers haven't thought about it"
  },
  {
    "startTime": "00:26:02",
    "text": "all right no okay so maybe later on the mailing list so i understand that um kind of related so so there are already some proof of concept implementations of uh extended error reporting is that correct um well i understand from yeah i know you happen to work there but i don't want to i don't want to point it out from william thought in a in a hackathon he actually implemented the authoritative side in an nsd implementation as a proof of concept so it's not part of any any release but there is a proof of concept and at the time he had that running so you can actually send it um you actually can query it and you get back a an agent domain where you can consequently report stuff um i don't have i i there is no proof of concept on the resolver side okay yeah so that was indeed why okay thanks should i go ahead no no that was indeed also uh so uh i i i talked with villain indeed so uh i understand that there was there is an implementation in nsg it's still running [Music] on the on the chat but i'm also very curious about indeed the resolver part but there also you're dependent on the ede implementations i see on your first slide that there are power dns recurser is there already and inbound is in the feature tree so so the the thing is when implementers will start implementing part of parts of your draft"
  },
  {
    "startTime": "00:28:01",
    "text": "for clarity and uh all these decisions is that already clear to them that's that's kind of the question here to the to the room no well there's there's something additional i want to point out the um i what i would love to do is um is um have a session at maybe not this um hackathon because that's that's that's too close basically and and the implementations are too fresh but maybe the next hackathon and the next itf um to to basically already start working with resolver implementations and authoritative servers to have a test session or a hackathon session around this and i understand from the list um and so this this this is nothing new that quad 9 um um they they um um woody basically already bill woodcock um has as i said we are going to support this when um when when this is a standard etcetera etcetera so it would be good to who to those who support this to help me out get a session during a hackathon excellent thanks villain please yes i'm wondering about the returning the reporting agent unsolicited so [Music] what's your intention to do that on every response or should the authoritative keep state and remember to which these offers returned the reporting agent name um that's a very good question um the idea was every every response"
  },
  {
    "startTime": "00:30:02",
    "text": "if space allows right the uh i think yeah go ahead so uh so you say on your slide that resolvers are more resilient uh against unknown edna zero options but maybe you could measure that perhaps that would be a good hackathon project for the upcoming hackathon that's a good point actually we can um i i measurement or something to send queries to authoritative that returns edns option and solicited yeah so it's not a question but the suggestion yeah yeah i i i that's a very good suggestion uh and and i'm sure there's also um you know the um the the the google ad guys that could do that could do this as well i'll i'll i'll talk to matt matt larson he's the co-author of this and she and happens also to be the um head of research um at ican um so i i'll i'll talk to him maybe we can get and maybe we can get both right and um and joao in in involved in this i know that joao was on the list on the yes joe is participating in the room so i'll reach out to you all separately if if if they're interested in helping me measure this thanks for the suggestion that's really good welcome that's it okay better please go ahead"
  },
  {
    "startTime": "00:32:02",
    "text": "i will react to what willam said because he triggered an alarm in my head and and the key word was state because i think that we should try to keep this draft as stateless as possible because as soon as we introduce some sort of caching on any level i'm i have very bad feeling that we will open a can of worms and introduce some security vulnerabilities because right now it's kind of easy to reason about the possible like ways to misuse the option because there is no state so you can see what happens for that particular query but as soon as we start tracking um keeping state it will be much harder because then one forged answer with the agent option might you know change the state of the system for a longer period of time so i think that we should try to avoid state in the protocol as much as possible because nightmare to reason about and i think it's not needed for the protocol itself i mean i don't see why it wouldn't work this way i i agree um to be fair to willam um he wasn't suggesting it what he was saying if you if you if you don't do this on all responses then you need to then you need to keep some kind of state um and and i think we all agree that that that it's better to do this and all these sponsors are not doing this so i'll not do this at all instead of keeping state okay thanks just relaying the jammer room so jau is happy to help you okay uh fantastic joao thanks i'll i'll talk to you absolutely after that after the session i'll send you a meal after the session yeah okay uh paul"
  },
  {
    "startTime": "00:34:00",
    "text": "please go ahead so there is a third option which is that the authoritative server sends out the announce the unsolicited announcement randomly that is just as a way of seeding it i don't think that's a good idea at all because i think that it is that it is safe to assume if a resolver isn't going to be able to do anything with that information that they will have put it in in the eating zero request but um it would i mean as part of the the eventual uh implementation there should be no prohibition on a authoritative server to choose when it uh does unsolicited announcements it can do them whenever it feels like it doesn't have to do them on all announcements i think ran you know like a very interesting experiment would be two years into this start start doing it randomly and see if you get more responses that is if there are resolvers out there that are somehow behind a broken middle box that is preventing their outgoing request coming but they can see the incoming going okay great i can give answers now so again just let's leave it let's leave it optional and not say it must be all or none yes good point thank paul okay let's see where are we um yeah um so any other things you want to discuss roy that hasn't been covered yet um no no there isn't the um"
  },
  {
    "startTime": "00:36:00",
    "text": "if anyone knows of any implementation that i haven't yet listed on the first slide i would love to know about this because then i can keep track if i if i have implementations that support ede i can actually ask them maybe they can support the ede r as well i'm really sorry about the bad technology here i think it's going to be called extended dns error reporting or either or something like that yeah i'm i'm not at all into the silly um ietf um acronym game and i'm sure if anyone has a better creativity than i have please go for it so i have not yet heard any pushback on starting with the underscore er label and if there's no pushback i'm just going to go ahead with it and then the wider group can discuss it and this is the third time i'm mentioning it so this whole should be the last yeah you had an opportunity oh there we are yeah you get what you're asking for now hello um there's no pushback but i do wonder we have to think about uh underscore er labels that may exist in the domain name itself it is not a prohibited label so you can have a broken test domain which is broken underscore er open and score er test whatever um that is correct but i i understand there's a registry of underscore labels maybe we can make use of that registry i'm not sure if we then be abusing it but um we could have a look there"
  },
  {
    "startTime": "00:38:00",
    "text": "that wouldn't prevent me to create underscore er labels in my name but no but to to be to be fair i mean what what whatever we choose um there might be an issue with that um um i mean i i know i know about x and dash dash and and all the other hacks that exist yeah it needs to be something so i'm happy to discuss this on the list but what i'm what i'm trying to get feedback on is the idea of encapsulation right starting and ending the cue name um with within with with a label in order to avoid uh the problem introduced by q name minimizers yeah i think you can do that but um i'm just pointing out that whenever you encounter the second uh underscore er going from top to bottom uh you can't be sure yet that you have the full q name and probably there should be some text about that yeah yeah good point i'll um i'll put that in oh sorry yes i was going to just point out to rory yes there is a registry stefan just put the link in the in the in the chat and we could define something and it's mostly the starting labels right so um while somebody could have something.fu dot underscore er it won't start with that so we could use that you know that would still just sort of slide through the without a problem i believe but yes so um you should consider that it's not that's actually i was thinking about that and then that's a that's a very good idea to sort of to sort of lock that name down right yeah the application people are all over this registry right so that was it thank you roy all right"
  },
  {
    "startTime": "00:40:02",
    "text": "thanks and thanks stefan for putting it on the on the jabber sorry putting it on the chat um i understand um vladimir um had his hand up but it's now down um and when you announced vladimir we got my thanks so indeed i'm not sure okay if i was still in the queue that was an accident no um both you and vladimir were in the queue so maybe vladimir uh also wants to say something or proposing there vladimir please go ahead [Music] we might have technical problems here you can grab you can grab the microphone if you like [Music] okay or maybe put it in the chats yeah of course yeah okay yeah yes a technical problem yeah okay sorry sorry vlad vladimir um tim you still have raised do you want to mention something you have raised your hand forgot put it down right here good um okay uh i'm i'm reading out uh vladimir's comments on on jabber he said anyway the null q type might differentiate it enough that's an argument but he also will post it to the list and it's minor okay [Music] thanks"
  },
  {
    "startTime": "00:42:00",
    "text": "um thank you if there are no other questions or this points for discussion i want to wrap up actually i like this a lot it was focused made some progress starting some discussion um [Music] and um well we i think there are some ideas for the hackathon and also well if implementations become available with ede we can also work with implementing extended error reporting that's good to hear um yeah i please continue the discussion on the mailing list so we can make progress and the the draft was accepted with a great enthusiasm by the working group so i also expect that we continue to work with great enthusiasm i think there are no other things to discuss right now um kind of start plugging uh the itf 1112 um we are still we have two slots of two hour and one hour and we're open for uh agenda requests so after submitting your updated draft ask for a gender spot or otherwise tim suzanne or i will ask you to fill an agenda slot um tim suzanne some other things to share we will yeah no i was going to say yes we will actually come find authors and yeah tell them to do stuff so exactly yeah yeah see really ahead of us"
  },
  {
    "startTime": "00:44:00",
    "text": "yeah yeah yeah yeah i think we made good progress in the past uh months with the interims and making progress on the drafts and we want to continue this well we want to keep the the uh i recall that in the in english keep things on speed that we make progress and and finish uh especially tim is really uh the bully here he really wants to have people uh finish their uh the drafts and uh tim is not a bully but we would like to keep the momentum going and we have found these to be you know from our point of view really useful but we also don't want to overload people or have too many meetings so if you have thoughts on what's the right kind of uh kind of cadence for these things um you know we like being able to focus on one or two drafts for just an hour rather than the sort of the the schedule we have to maintain during a regular atf meeting so if you have thoughts on how to keep that how to make that effective how to make that more effective you know we'd love to hear from you yes we like this idea of especially getting implementers in a room and just letting them kind of you know talk things out um for an hour that this has been this this was a great idea so we're glad rory had some plans on this um so thank you royce or for org you know and organizing the implementers as well i know there are a bunch thanks just like the implementers not me they did all the work thank you okay thank you all and see you in uh oh warren please please speak warren yeah i hope the audio is working yeah i mean i just wanted to say thank you everyone for you know we're making really good progress now um i think these interims have worked really well"
  },
  {
    "startTime": "00:46:01",
    "text": "um but you know it'd be great if we can keep up this sort of like getting all the documents done moved out of the way um keep up keep up the progress and stuff and that's it yep because we have people who want more documents to be brought forward so we're trying to juggle all that and warren's been helping us with that so thank you yeah yeah indeed so people don't stop thinking about problems and proposing new ideas so yeah we have to keep well this this train going and finish existing work and accepting new work thank you warren sorry uh of course i don't mean tim is a bully he's the nicest person i know so warren volunteered to be the bully so thank you warren um thank you all see you in two weeks and um well send feedback on the mailing list on this session uh contact the chairs if you want to have a gender time time slot for presenting your draft and and see you thank you thank you for your time and thanks for all your input bye you"
  }
]
