[
  {
    "startTime": "00:00:05",
    "text": "yeah yeah why not because I have this thank you where you looking for me please wait because this crappy laptop doesn\u0027t have so here is everything okay yeah just yeah I\u0027ll use it okay I started from where successfully I have everything here\u0027s that oh you want to copy it really you I didn\u0027t send a little message well maybe I was run this here I turn off the chatty chatty chatty yeah "
  },
  {
    "startTime": "00:03:44",
    "text": "so he used to just mention now of air pollution say okay sorry guys for the delay hey we\u0027re let\u0027s get started okay so so the this is the first session of faith to a OAuth sessions um and here\u0027s that not well so hopefully you\u0027re familiar with that already um so can I can I a-any minute takers kind of anyone can help with that somebody that is not presenting today normally takers blue sheet or yeah yes yeah probably one hits Wednesday on maybe it\u0027s a that previous right day so okay thanks so a can we get a jabbers card and a mini taker any anybody can help with that many takers nobody no taker we need somebody okay thank ya okay anybody anybody else with mini take her please "
  },
  {
    "startTime": "00:06:47",
    "text": "thank you and somebody in the jabber thank you okay let\u0027s say talk about status here I\u0027m so device slow a we will talk about that later today in discovery yeah Michael talk about that - a the jot a I think we had some may open issues a I think that sent a an email response and closing those questions so I occurred do you think we\u0027re we\u0027re done with that or satisfied with the yes my understand this is the this is jar right yeah my understanding is that you guys have it resolved those issues and I just have to like go through and make sure to like there\u0027s nothing no more nitpicking floating around and prove it I brought the ball okay thanks I think there\u0027s nothing makes it right and just it\u0027s I\u0027m here I guess tokens change if I remember correctly there were some back-and-forth and I have to renew document yep it\u0027s waiting for me thank you okay BCP will drop BCP we\u0027ll talk about this later until s same thing security topic and talking binding all of those will be discussed later okay so let\u0027s just quickly update on in the interim meetings so we we had to inter meetings to discuss distributed earth and reciprocal auth it used to be called module off M distribute earth will be discussed later a Wednesday and they for with regard to reciprocal off a we discussed this would occur and they we have an approval to move forward with this so that\u0027s a that\u0027s an update on that on the result of that discussion yes published on the mailing list already long time ago okay well chopped so we had an hour the latest our security workshop last week in Trento here\u0027s a picture from that wonderful place there we had there\u0027s a separate workshop webpage and I encourage you to look at the program which links the slides as well as position papers that had been submitted to that workshop we covered a number of different topics like in the previous workshops we talked about formal methods we had researchers coming along who did form an analysis shared exp experience "
  },
  {
    "startTime": "00:09:48",
    "text": "we talked about regulatory activities that impact o us um there was a Dawson spoke for example about the financial ABI in the work on the PSD to the ideas we had deployment experience related talks new ideas also Mike for example did absorb presentation on log of or log out we also had a crypto related presentations so overall I think it was very interesting for me was why that we did this workshop and it\u0027s a good to get the researchers into the same room as standards people to have an exchange and I was advocating for them an increased use of formal methods in IDF security protocols as well and played around it myself or one of the hours variants okay they\u0027re on the agenda so we have Brian at the beginning to talk about MPLS and token binding we have the Torsten to talk about security Dennis had few three topics to talk about here so and we\u0027re hoping if we have a then we have some time five minutes will allow Justin to talk about the HTTP signing if not we\u0027ll we\u0027ll talk about that on Wednesday okay so i\u0027m brian thank you all right be sure to read from thank you that is London from some years ago and we are in London yeah - does photos in here but yeah let\u0027s get started so um just want to give a little bit of context since I know everybody reads every single draft before they come in here when I give it a little bit over you that for someone that maybe hasn\u0027t so what is the mpls draft it\u0027s two things two primary things one is doing mutual TLS client authentication both client authentication to the authorization server and we\u0027ve got two main methods of doing this one is PK I based where you check the certificate at the end up to the you know to a change route and the other is a self sign method and then there\u0027s also a mutual TLS sender constrain access tokens for protected resource access another way to think about that is just these are certificate bound access tokens side so why why are we working on this mutual TLS auth client authentication which is something that obviously provides better security characteristics than the shared secrets in the normal Oh F is something that\u0027s been done in practice for OAuth from a lot of vendors and implementations for quite a while we\u0027ve never actually had a standard to support "
  },
  {
    "startTime": "00:12:48",
    "text": "it mutual TLS sender constrained resource access is something that binds access tokens to the client certificate so they can\u0027t be played or replayed by any other entity without the private key this is you know actual proof of possession access tokens which is something that\u0027s been a little elusive to the to the working group and the community at large I\u0027m told that banks need these for API use cases being driven by a variety of new banking open banking regulations they want stronger forms of security but they won\u0027t also be able to use OAuth and this draft even in its draft form is currently referenced by the Open ID Foundation\u0027s financial API working group fappy in their reading API security profile which is a higher sort of higher security profile around off as well as being referenced in the UK open banking API security profile so despite being a draft they\u0027re already being referenced sorry you can jump ahead ok so how does this actually work the mutual TOS client authentication is obviously to the authorization server typically the token endpoint but also any other endpoint at the authorization server that might require fine authentication works the same way the client let\u0027s see the TLS connection that the HT request is made over is established with mutual TLS client certificate authentication the client also includes the client ID HTTP request parameter and all requests of the token endpoint to to identify itself upfront and the authorization server verifies that that certificate is in fact the right one for the client and that\u0027s based on configuration and or dynamic registration information around that that particular client that das has and then there\u0027s some metadata supporting this that would be used in dynamic registration and/or as I think we all have come to learn the metadata basically implies the client data model so it can be used even in the case that you\u0027re not actually doing client registration so there\u0027s a new for the the PKI method there\u0027s a new authentication name that\u0027s TLS client off that could be used both for the client to indicate what authentication method it\u0027s going to use as well as the server to list which methods it supports and then in client metadata there\u0027s this TLS client off subject the end which specifies the expected subject distinguished name of the client certificate and then there\u0027s metadata also supporting the self-signed certificate method and that\u0027s an authentication method name unsurprisingly of self santi less client off and then the existing Jenny bouquet S\u0026J DB case URI really an or metadata parameters can be used to carry the client keys and certificates or hold them and just uh maybe it\u0027s not clear but the difference between those two methods is that in the former the PKI method the "
  },
  {
    "startTime": "00:15:49",
    "text": "client presents a certificate the authorization server you know validates that that certificate is signed by a trusted authority that it trusts and then checks the the subject DN against that which was configured so sort of more of a traditional PTI approach to authenticating the client whereas in the self-signed certificate method on the client just presents its own certificate saw itself signed and basically the the authorization server has trust chain validation turned off at the TLS layer so it proves possession the key but it doesn\u0027t actually validate the certificate chain and then the authorization server just matches up the the Rockies or the certificate to what it has configured for itself okay next slide thank you okay so how does mutual TLS sender constrain access work it\u0027s hard to find a right name for this because token binding kind of means a something else entirely as tourists in this you mentioned to me a few times or misstated but basically this is binding the access token to a client certificate so either sender constrain access which I think was a term nak came up with or certificate bound access tokens the wording is kind of used a little bit interchangeably in the draft hopefully in a clear way so on issuance of an access token the authorization server associates a hash of the certificate with or into the access token thus binding the access token to the certificate the TLS connection from the client to the actual protected resource is over mutually authenticated TLS and the protected resource matches the certificate obtained from the TLS layer to the certificate hash and the access token and obviously if they don\u0027t match it\u0027s rejected if they do then in proof of the corresponding private keys have been proven and this token bound or certificate bound access token has been used successfully in order to carry this information in jot we\u0027ve got a new confirmation method which is the x.509 certificate sha-256 thumbprint confirmation method x5t pound s2 five six this just carries the sha-256 hash the certificate itself and then there\u0027s a confirmation method also for token introspection that\u0027s exactly the same looks the same same name same same semantics it\u0027s just conveyed in the token token introspection response rather than its jot itself and one I think benefit or maybe not obvious side of this is that the the token binding piece of it that binds it to their certificate it doesn\u0027t vary based on the client authentication method so the actual access token is bound to the raw certificate itself and the resource or protected resource doesn\u0027t have to have any knowledge of how the actual client authenticated the server it just needs to verify that the key indicated in the access token matches the one that the client presented in the in the TLS negotiation and there\u0027s just examples of the two here I\u0027m not sure Museum very well but it has the confirmation method "
  },
  {
    "startTime": "00:18:49",
    "text": "with that particular what do we call it confirmation method name or member inside of a jot as well as inside of a token introspection response they looked at similar unsurprisingly all right next one so a few changes since Singapore published draft six and seven not sure which was just in each but a sort of an overview of all of them updated to use the RFC 8174 boilerplate which is just a little bit more wording around the the normative language that is being recommended pretty much everybody now so I went ahead and did that to get a head start on it references updated including the authorization server metadata or discovery document and move the security considerations up before the ioniq considerations I\u0027m not sure how I got those out of order in the first place but it looked really weird in the document most people stopped reading when they get to IANA and the security considerations here are actually pretty important so it ought to be better for it to be with the rest of the text I talked a little bit more about certificate access certificate bound excuse me access tokens in the abstract that part was not not really conveyed in the access in the abstract very much I thought to be worthwhile to to spell that out more so someone reading the beginning of the document could know there\u0027s sort of two main components to the document itself did something similar to the title I was just called MPLS profiles previously which I guess is accurate but kind of meaningless so this the new title goes on to basically say that\u0027s for client authentication and certificate bound access tokens added a tiny little bit more text in the security considerations around certificate spoofing or preventing certificate spoofing based on you know a constrained set of cas into the security considerations i was suggested by someone home at the last meeting i did add an explicit note also from the last meeting this came up that the implicit flow is not supported for obtaining certificate bound access tokens and finally added an appendix section describing the relationship of this back the MTL aspect to oauth token binding since there\u0027s some overlap there i tried to explain the situation and why they both exist and why at least you might consider one or the other and those are all the changes so next slide so what are the next steps looking at the minutes from Singapore there was this statement that the working group last call will be issued in December after clarification that clarification was actually that note about let\u0027s do it a little fast and not wait till December and so I with that I\u0027m sort of asking urging that we we consider working group last call at this point yeah that\u0027s what we\u0027re thinking right now and and we wanna see if anybody objects to that or you have any issue with that like I think there would probably are ready to go to work or plus call on this one "
  },
  {
    "startTime": "00:21:56",
    "text": "we have the technology all right Justin richer I actually don\u0027t object for this - coming - last call - you didn\u0027t give me any other option I want to talk anyway but no I do think this is ready for last call we actually just over the last two and a half weeks or so have gone through and implemented everything in this draft so both authentication methods and the sender constrained access tokens the non bound TLS bound access tokens whatever they\u0027re called right we implemented all of those in a in what\u0027s going to be a forthcoming product for one of my clients athletes so that\u0027s so there is going to be you know at least one implementation in the wild I know paying has some implementations as well I don\u0027t I was for drunk on the ball on this yet guess not yes there\u0027s another implementation it\u0027s the Nimbus library and they connect Ont product we used it at yes that come and use it into two ways we use it to actually secure all micro service based architecture and for our directly for the open le connector access for line parties so my perspective that\u0027s that\u0027s ready to be used another another note besides the two references you you gave on the first slide from the Pepe working group and they making you okay also the Berlin group\u0027s API specification for payment service directive to directly references this draft I did not know that thank you okay go ahead no god yes so so we just had a short discussion I think we we will start the working group called last coil today even because it will give us a opportunity to hassle some of you to actually do that during this week while you\u0027re here next week you will be super busy catching up if your company internal work so if you are interested or if you have time to review this document I think that would be please come forward it won\u0027t take too long I did look at it for the last meeting to see at what state it is and and with the clarification and you provide it I think it\u0027s very good that\u0027s what we\u0027re asking for last time so and would obviously work with eka to get this through the process as quickly as possible given that what we learned at the workshop "
  },
  {
    "startTime": "00:24:57",
    "text": "that there is a dependency from some of the bank open banking initiatives that want to use this work so definitely a new field where OS is used and and hasn\u0027t traditionally been used so so we are spreading out oh us in all sorts of new domains which is excellent thank you Brian more documents are Justin you\u0027d mentioned you had maybe an it on an understanding you can be on the mailing list in the last call yeah we can do that in the mailing list or I can just tell you it\u0027s it\u0027s minor potential wording clarifications nothing normative purely editorial of I garden path on a couple of things during implementation but I pretty sure I came up with the right answer so the information is there yeah if it can be clarified then who of you could be who is willing to take a look at it besides just in doing this week to actually or next week to provide some some review feedback apparently I\u0027ve been volunteered so okay well yeah you have already looked at it so I have and III will do a closed comb over the donkey and and come up with knits and things like that hmm Mike Jones it it matters so read it Torsten should read it to ya okay you should still read it yeah what\u0027s the most in bright only mode if do you have time to take a look at this document good okay next topic okay yeah I was confused so this one\u0027s gonna be hopefully kind of short because I know there\u0027s some other things out did the agenda leave some time for it is what it is all right Oh off to youto combining that\u0027s also London here we are again yeah next slide please so just want to give a little bit of an overview of what tow combining is for those of you that may not be familiar and having followed that working group it\u0027s something that enables a long live binding of cookies or other security tokens that part the other security tokens are the ones that are interested into this working group to a client generated public/private key pair the use of token binding is negotiated in the TLS handshake with a with an extension and then assuming it\u0027s negotiated on all subsequent HTTP requests over that thiele connection possession of this client generator the key is proven by signing the TLS exported key material the ekm and then sending that along with the public key basically as an HTTP header and every request cookies and tokens can be bound to that key I think I said that already and the key at least in the web browsing "
  },
  {
    "startTime": "00:27:57",
    "text": "case the kiyah scope to the effective top-level domain plus one so there\u0027s not a privacy issue necessarily at their scope basically the same way that cookies can be scoped so they\u0027re not set any broader it\u0027s not like a super checking cookie or anything and then this idea of federated or cross domain use cases like OAuth where the resource server might be in a different top-level domain than the authorization server are supported via this thing called the referred token binding versus what\u0027s normally called provide a token bonding which is a way for in in that HP header to send actually two different token monies to keys and prove possession of them so that the issue token can be bound to the other key which will be used for connections to some other service like the resource server next slide please so just really quickly in a nutshell for context here what is this document it\u0027s basically a way to provide an oauth 2.0 proof of possession mechanism based on the underlying technology of tow combining that\u0027s the defeat you know replay or play of tokens by unauthorized entities including a resource server replaying it or a lost or stolen token being played by another you know personated client all these things are prevented to the extent that the private keys are protected there\u0027s a few different types of tokens and OAuth turns out there\u0027s actually a lot of tokens and OAuth so we try to bind them all the the most interesting one is binding of access tokens using the referred token binding ID so when you request an access token when the client requests an access token it presents to tow combining keys and the authorization server binds to the second one which is the key that will be used when making actual protected resource requests and we also have a representation in jot for this based on we\u0027re not based on but as an additional confirmation method member this being the tbh token binding hash member and it\u0027s just a hash of the the token binding ID which in turn is basically the public key and that also is available or will be registered for introspection responses we also talked about how to buy and refresh tokens to the normal token binding key and there\u0027s two ways to buy an authorization codes one for native app type clients and one for web server clients and then finally went on recently to add binding for JWT based authorization grants and jadibooti client authentication and so in summary the changes since Singapore Jeff six was published also using the new boilerplate really trying to get ahead on things with that exciting change updating some references to the draft tow combining the discovery I think one of these is already out of date and made a few maybe just two really minor editorial fixes so if nothing really substantial has changed in the document but it\u0027s still there next slide and so we\u0027re trying to look ahead the the underlying three token binding drafts should be going to RFC this is I think the third time I\u0027ve said that there\u0027s one name I think they\u0027re "
  },
  {
    "startTime": "00:31:18",
    "text": "close buzzer so as I recall it happened is the that did the non HCBS ones were fine and I was done with them and then Dirk had produced an HTTP one that came in about a month ago so I usually have finished that and then we good microphone IETF last call has been completed on that and it\u0027s waiting for your write up oh okay thank you and then you know beyond that we really need implementation experience and feedback on this stuff and I think maybe just appreciate this stuff should be really easy once all the really hard parts are done and the really hard parts are that this token binding itself sort of crosses over layers that aren\u0027t typically crossed over by your average developer so you need access to pieces inside the TLS layer then that aren\u0027t always easily available so there\u0027s really sort of either some really really heavy lifting hard work to be done to make it work or a waiting game to get lower level platforms to surface the api\u0027s and expose the functionality needed to do this and I\u0027m hopeful that it\u0027s tough progresses at RFC status maybe that\u0027ll become available more soon but without that actually doing implementations is is really difficult and it\u0027s it\u0027s an unfortunate state where I\u0027m both sort of a chicken and egg problem if you will or rock and a hard place I don\u0027t know your favorite cliche there please insert it so let us get it and get an idea where we are Biff this so you\u0027ve been working on an implementation and used so you you have gained a lot of experience in that regard but unlike many of our other specifications which had lots of implementations also product implementations and even deployments that seems to be a little bit on a different level now I mike are you you guys have for the Microsoft has and is has deployed implementations of parts of it and it\u0027s working in in production mmm that\u0027s fantastic man ok so that\u0027s at least um it\u0027s something something but we had cases where we had reported in our in our document write-ups and like 10 15 plus implementation so we are at no huh this is definitely and even the work that I\u0027ve done has been largely at the lower layer are trying to make that happen in the platforms that I use and do we know how we how we could improve this situation or get there eventually because you you know better what what is needed from TLS attacks and in different environments and so we could reach out to those guys who actually make this happen also largely I think there\u0027s there\u0027s a need for you know the various sort of TLS layer API is to expose mechanisms to do arbitrary extensions as well as expose access to the exported key material which is that\u0027s in some "
  },
  {
    "startTime": "00:34:19",
    "text": "places and not others in some places make it very difficult Mike Jones at Microsoft from my point of view the biggest thing that we can do to accelerate this is just get the token binding specifications to RFC\u0027s yeah currently different implementations are implementing different draft numbers and therefore the one that\u0027s on by default and edge is not talking to you know the same services that chrome is because they\u0027re different numbers and so once you know Eric does is write up and we have one oh that unblocks a lot of developers from feeling like this is real we will do the library work I know that inside Microsoft you know some things are happening but some things are waiting till we have one out thank you Eric you\u0027re a good man okay thank you that\u0027s all I got thank you hi Anto sniper vs comm and I happen to be the editor of the security topics document the security dope is topics document is basically an update to RFC 6890 that\u0027s the security threat model considerations document for off to the dole because we figured it was time to together and capture all the all the security threats implementation issues security relevant implementation issues and the lessons learned over the course of the last couple of years next slide please so basically the document tries to give an overview on the on the current oh of security topics open security topics and tries to this systematically capture and discuss the threats and respective mitigations the goal or the objective of the working group is to turn this into a security best practices back to best current practice document and to provide implementers of OAuth client side as well as server side with recommendations how to implement a wolf securely or even secure next slide please so this is how the document looks like the majority of the after sections describe different threats implementation issues and give different options how to mitigate on this threat so for example there isn\u0027t the innocent section on access token or leakage and there is a comprehensive discussion what options exist from our perspective to actually cope with this kind of "
  },
  {
    "startTime": "00:37:20",
    "text": "threat so for example send the constraint access tokens all the instructions and so on and then in the end we distilled a section containing recommendations that we give to implementers for example in this case regarding token leakage the working group decided that send the constraint access tokens either by our token binding or M TLS would be the way we would recommend because this is the most reliable way to to cope of this kind of issue next slide please but we nevertheless we gave the whole discussion so everyone can can can give it a read and and come up with his or her own idea all right so this is a selection of the recommendations we we are giving to implementers it\u0027s just a selection so the redirect based flows are a very important part of the of this document so for example we recommend exact redirect URI matching this is something that Open ID Connect required implementers from the beginning but all offers it but bit more relaxed regarding that perspective which in the end this flexibility opened up a lot of a lot of issues regarding oaktree directions and so on and so on and so on so now we decided it\u0027s better to go that way to recommend exit video at URI matching because this is a good good foundation for having a secure solution and there are other other recommendations that we give for example to mitigate code injection armed attacks implementers are advised to either use pixie challenges or the nuns in case of open ID Connect or peace to prevent this kind of attack next slide please okay what happened since Singapore we published a new revision actually I published a new revision yesterday and it\u0027s complete now from our perspective so we completed completely reworked the section on code leakage and completed a section on axis or f3 for headers and so on I decided to remove the section on refresh token leakage just because there is nothing new to report right so refresh token leakage prevention is already covered by the security consideration sections of our C 67 49 so we don\u0027t need to update that and we added a section on open redirection based on a draft that John has published previously so for me you copy that text India from that draft or what what did you do no I took the liberty to - in entering a distilled version of that just brief description of the thread and a recommendation how to cope with that because the the open redirection draft also gives additional "
  },
  {
    "startTime": "00:40:20",
    "text": "threats that we are already covered in other sections of the document so I mean I would hope we will have another review round now potentially a working to risk also people can can check it and give us feedback on that what we also did is we removed all the text around this being a working document helping the the the working group to keep track of the current status of the discussion of the different security open topics because we think we are done for the moment for the moment I mean we decided to make it a PCP to be able to update it to update it too frequently and I hope I hope we will do so on not not again wait for how long five years okay yeah I think so yeah so it\u0027s a PCP so we are radians or it I hope it will become a BCP so we are we are well equipped to to update the document or no no more frequent basis from my perspective the document is ready now for Warner Bros Cole and yeah I would ask you to I\u0027m so obviously nobody has read the version that you just posted that would be a stretch but Android and John writes the version brilliant okay that\u0027s very good how many of you have read the earlier version or the latest version raise your hand all right sir five six seven eight if we wait a little bit long it probably that\u0027s pretty pretty good so I guess we should we should have a few guys reviewing posting or doing the review posting something to the list before we started working here and following that one and there\u0027s some new stuff in there so I do we have some some volunteers to review this document Tony William okay and if not and someone knows Brian pan you aware yeah the name please want to get home okay Travis Spencer was like thanks Sam perfectly thank you okay hi everyone I\u0027m "
  },
  {
    "startTime": "00:43:46",
    "text": "William Dennis I work on Google cloud here to give three updates today the first is the device flow this will be the shortest one so let me just quickly recap for anyone that hasn\u0027t seen the device flow specification this is an authorization flow designed for devices that have an internet connection but no browser or limited input options so the classical example is like a TV a TV app like the YouTube app and in this flow the user actually reviews the authorization request on a separate device and they can approve it there like a mobile phone or a laptop so the TV or the device would show a screen just like this directing the user to go to an authorization URL and enter a code the user then loads up that URL on their separate device such as their phone typically types in the code approves the OAuth request and then the device can get its tokens there\u0027s one additional optimization which which we\u0027ve added in the standard which is to allow for a QR code or any kind of non-textual verification technique this is presented separately to the and of manual instructions allows the user just to scan the qr-code and then typically they wouldn\u0027t have to actually enter the user code but they might confirm that it\u0027s the same code just to avoid kind of phishing risks so what happened since oh seven since the IETF 99 presentation I think we did an update the last one but I missed that one but what we have done since then is we standardized on the complete form of the verification URL those who were there may remember a discussion we were debating whether or not to have a kind of composed a URL where we would actually add the verification URL and the user code kind of in like a sort of structured composed way that was rejected in the end and we\u0027ve just adopted this simpler kind of option where the authorization server can just provide the complete verification year all for that like QR code optimized option we also added some security considerations around spying that was at Nats request so that\u0027s just covering the case where there could be someone you know behind you watching all your interactions you know given this is on a TV they could be like in the back of the room or something and we added some text to explicitly require that the device code is actually not shown as as part of this just in case that wasn\u0027t clear plus the text regarding the minimum poling intervals so we don\u0027t Dawson take down Justin\u0027s server again huh and then I just posted this morning but there was a diff posted approximately two weeks ago just a minor clarification around the entropy guidelines for the user code so this is this is an interesting code because because it\u0027s actually part of the user experience there the length is "
  },
  {
    "startTime": "00:46:46",
    "text": "kind of constrained by what what you can reasonably expect the user to type and the char set likewise so we just added a little bit of a clarification around the trade-offs there that the authorization server needs to take your account and we also document you know the risks of a low entropy code there if someone were to be able to kind of brute force that user code it kind of puts them in this sort of reverse takeover situation where like normally if you brute force standoff you\u0027ll gain access to that grant in this case if you actually brute force the user code you have given the victim the grant which would be to your account so it\u0027s kind of like a reverse takeover now it probably doesn\u0027t make sense for kind of like the the Play Movies YouTube type flow or make much sense because then the victim would actually have to buy things with your account but there are certainly you know very valid concerns still with with that attack such as the the attacker still may be out actually control that device and there\u0027s also the privacy issue that the attacker could see you know things of the user is actually then doing so it\u0027s definitely worth considering so yeah so that text went in on version ojeda which I believe resolves every single outstanding question and I think we have already concluded yeah so this is already with with Ecker so but we\u0027re gonna update the draft version with this one just to address that comment the last commit that that we had but at the otherwise it would be with that crafter so I actually sent some comments about this and I just got an email from John like 14 minutes ago I\u0027m struggling to assimilate so yeah I guess I\u0027m concerned about whether or not there\u0027s an attack pattern here and so I I guess after authors so I guess I\u0027m not sure the best way to resolve that now central assimilating John message in the middle of like listening to this um do you want to discuss it should we have a side meeting shall I read it like tonight and come back to you what we must they do so the the very short answer is yes you did actually identify a confused deputy attack gold star so the the attack is only possible if can you explain the attack for those people who hadn\u0027t seen that right so on so the idea is that if so the device does is an OAuth client if it talks if it\u0027s set up to talk to and server and that wot server is compromised ayiiia well it is compromised her inherently bad so assuming just for the sake of argument so that people understand the attack I\u0027ll use real company names but "
  },
  {
    "startTime": "00:49:46",
    "text": "that isn\u0027t to infer that there\u0027s anything nefarious about them so if you had a Roku device which uses this kind of flow for binding media subscriptions to it so if Netflix were compromised ie their own server had been taken over by a malicious person that server when it receives the request from the Roku when the person clicks on the Roku player clicks on the Netflix picture and the Roku would then you start off the flow to Netflix Netflix would then go yes but now I can go to Amazon Prime video and get their highly prized access token for this user at Amazon Prime so it would go and create get the challenge get the user code etc pass that back to the device the the Amazon 1 back to the device the user would then see on the on the screen please type in an amazon.com slash Prime slash authenticate or whatever the URI is and they would go there and they would put in their Amazon credentials and then they would see a box that came up please enter the code that\u0027s being shown on your device and they would put the code from the Roku into Amazon which would then enable enable the bad Netflix polling to then get the appropriate access token so essentially the user would think that they\u0027re logging in to start off the flow thinking that they\u0027re logging into Netflix and if they weren\u0027t completely on the ball they may wind up at an Amazon screen put in their Amazon credentials at Amazon so Netflix wouldn\u0027t be getting their Amazon credentials though since they\u0027ve used the same username and password both places it\u0027s probable moot they they would get the access token for the net for the Amazon Prime service so I mean it\u0027s unlikely that Netflix is going to attack Amazon but if you could easily see how that would work with other services so yes essentially as good as the least the lowest common denominator the weaken the weakest guy that the device manufacturer has allowed you to login to because right so I have John work on that text that you got 14 minutes ago I added the point that for this to happen either the device manufacturer is the attacker in which case you probably didn\u0027t want to buy their device but that or they are "
  },
  {
    "startTime": "00:52:46",
    "text": "trusting an authorization server that is the attacker or became compromised well you know all of which is possible but there\u0027s reputational things where you know you would get a bad write about it by your device now William wrote some text and security considerations earlier about trying to inform end-users that what you are doing now is authorizing use of your Roku device the reason you want to tell them that is if software has men in the middle of the whole thing or something and they don\u0027t actually have a Roku device maybe that\u0027s a red flag and we made an offer to be bub two of the security consideration subsections to discuss this confused deputy situation yeah I mean my sense is that like this is done constantly and we don\u0027t know how to fix it other than what you said and so like not writing it down it\u0027s not helpful like not publish the document because we have this problem is not hopeful um so I think like what I was expecting um even I understand it correctly um is like for you doing for the security concern so makes it clear what\u0027s going on and then we could move forward I don\u0027t think like I don\u0027t I mean if I know how to fix it like I\u0027ve you know fix it but I don\u0027t so like there we are um yeah I think we\u0027ll do that great thank you so in terms of running code there\u0027s a bunch of examples now and the most recent one I I heard about was Yahoo Japan and the air stick 4k which I\u0027ve implanted that adds to the The MITRE ID open source server implementation we have a client here proof of concept and and of course Google actually implements the server one as well yep Shepherd right up also contains four examples but we\u0027ll update that okay thank you which one do you want to talk about next incremental device posture all right now for something new well a little bit less move you if you\u0027re here at ITF no no but um okay so also incremental auth let me just give a bit of a recap in case you haven\u0027t heard of this before so the problem statement that incremental authors trying to solve is that effectively asking for the kitchen sink of scopes upfront is a bad thing and users should have the context of what they\u0027re authorizing when they authorize it so a good example here is if you have "
  },
  {
    "startTime": "00:55:48",
    "text": "an app that say combines you know an identity related scope such as with O\u0027Grady connect it might combine like a calendar scope for some kind of calendar integration and you know say I\u0027m like a email scope for some email integration the user shouldn\u0027t be presented and authorized and request at sign-in time asking for all those three things they should just be presented with the the thing that they\u0027re doing at the moment so scream like this is kind of the antithesis of what we\u0027re trying to get to you know these apps really shouldn\u0027t be asking for all these things even if they actually need them to kind of implement all the various features in the app each of these scopes should probably be requested separately when it\u0027s actually needed in the context that it\u0027s needed so the definition of incremental auth is the ability to request additional scopes in subsequent requests that results in a single authorization grant representing all the scope granted so far so without incremental auth you would effectively just have if you did multiple authorization requests you would just get multiple authorization grants that you would have to maintain several and so the the benefit of incremental auth is that emerges them into that one single authorization grant representing all the scope that\u0027s been grounded so far so typical orientation of this would be where the consent screen would only display the new scopes so if the user has already granted scope a and the app would ask for B it would typically show the new scopes go B or at least it would show that scopes a differently and then a cigarette fresh token is issued for the union of all the granted scopes so this is actually possible today with a confidential client you know auth what I call the kind of de-facto increment auth and the reason that\u0027s possible is that Earth actually doesn\u0027t stop you returning authorization grant with more scope than what you requested so in the case of a confidential client if the user has already granted access it\u0027s kind of plausible that you could actually return that access on a subsequent authorization grant now given that the the client in this case is actually authenticating however no such thing existed for public clients so what this specification really introduces and the kind of key point of its existence is a public option a public client option for incremental auth are also called up Kragh mental for which I apologize this consists of a new token endpoint parameter called the existing grant and how it works is that if you\u0027ve already done one authorization grant with some scope you can then do a second authorization request requesting different scope and then when you\u0027re going to when you go to exchange the authorization code for the tokens you can actually pass in the existing grant at that time and what you get is kind of emerged authorization grant that\u0027s why the parameters called existing grant here\u0027s a sequence diagram just showing "
  },
  {
    "startTime": "00:58:50",
    "text": "the the first request the response the top half is very typical all affair and then the bottom half is again very typical or just with that additional existing grant scope the existing grant which is the Refresh token from the first part being passed in now it\u0027s really very simple set 3 it\u0027s just you take the grant a and the grant B that we\u0027re done as separate authorization requests and unions them together nothing really nothing more than that so if you didn\u0027t have this specification the native app would be sitting there with both grants separately they\u0027d have to maintain those to refresh tokens that have to refresh the to refresh tokens and just keep keep track of things with this they get a simplified view of the world and they just get one so in terms of running code this has been implemented on Google\u0027s authorization server so you can actually try it out today I have a proof of concept code there using a port it\u0027s a fairly minor modification we also have a demo I don\u0027t know if you want to run the YouTube video here one minute let\u0027s go full screen yeah so here the user has performed the first authorization request the user granted access to calendars we do a token exchange let\u0027s introspect that token and you can see here that the scope was created to calendar within to a second authorization request in this case it adds the blogger scope user has allowed that we\u0027re going to introspect the resulting token and you can see that both scopes are included so this is running off that proof concept code I put a link up to earlier okay and so in addition to the public clients the specification also also documents some best practices around confidential clients it also includes this new parameter for confidential clients as I mentioned it is possible to do incremental auth with confidential clients already but perhaps that behavior of returning more scope than was requested is is not always expected so this extra parameter just allows the the user to actually control whether or not the request will contain the full scope that\u0027s already been granted or not alright so what\u0027s changed since IETF 99 basically based on the feedback then added a whole bunch of sections security section privacy one on usability and also documented some alternatives so that\u0027s incremental auth and ok and do "
  },
  {
    "startTime": "01:02:00",
    "text": "we have people that reviewed this who have any anybody that reviewed this document any comments on this who reviewed that document any anybody here one two three oh wait I just and I have not implemented this one yet I did read through it I think it generally makes sense I think that there\u0027s ways that it can be clarified and stuff like that I don\u0027t think there\u0027s done but that\u0027s not what you\u0027re asking it is I think an important concept and it\u0027s something that people are doing today in weird proprietary ways anyway and I think that this is something that we can do to encourage people to not ask for as you put it the kitchen sink or I think as store stood I used to call it the uber token right up front what was Issa as a better know chess and I just said you amended this term token okay I thought I thought you did anyway so no more uber tokens I think is a good thing or at least minimizing the uber tokens kitchen sinks whatever if the metaphor is so yes I do think this is a good document that we should move forward with John Bradley I think it\u0027s a good document we should move forward with it there\u0027s probably additional security considerations that we have to dig into like was that refresh token actually for the same subject our resource owner as the new one so there are things implementation things that people may get wrong that we have to sort of think through some of the the new issues it would be better with token binding obviously so that the Refresh token was actually bound to the client so there\u0027s a few things that need to go into it but other than that I think it\u0027s functionality that we did have can largely replicate with confidential clients but this allows us to have public clients do the same thing which unfortunately some of the OAuth implementations do do and it causes incremental auth currently with public clients causes all sorts of interesting side effects because you wind up authorizing a client on one device for something and all of your devices all this with the same client ID wind up inheriting that privilege which is also unanticipated but I\u0027ve seen in the wild quite a few times right I guess I guess I should have explained that that was why you can\u0027t do incremental auth with the public client at least you shouldn\u0027t I guess you can but you shouldn\u0027t for that reason okay is there anybody that thinks this is a bad idea okay so so maybe we\u0027ll ask "
  },
  {
    "startTime": "01:05:08",
    "text": "for hum I go for a hum and see if a the group is willing to adopt this draft right now so I\u0027ll ask if you\u0027re willing to adopt it and if you\u0027re against adopting this draft so a if you are a for adopting this document please hum now if you are against please hum now okay thank you that was good yeah so so summarize people are in favor of adopting this um can I can also write down a few reviewers so will obviously have to confirm it on a mailing list talk about milestone changes few hence the review I see just in tour stones John Sean as well excellent thank you oh it\u0027s a bet oh maybe it\u0027s dead testing okay so thank you for your attention so far this is the third topic and this one\u0027s device posture so I think John may have presented there\u0027s a couple times previously I\u0027d like to give it to give a cracker and and and see if there\u0027s some interest in this document let me start with the use case so this document is designed to address a specific use case and that\u0027s that\u0027s this BYOD phenomena mean enterprise bring your own device so this is where an enterprise wants to allow its its workers to just bring their own devices you know Android iPhone whatever into the enterprise and use their personal devices with corporate with corporate resources at the same time users sometimes will be hesitant to allow kind of these invasive mobile device management certificates on their devices mobile device management is sort of traditionally how the enterprise could secure those devices once they\u0027re brought into the enterprise environment but it has a significant drawback that the the enterprise can typically remote wipe that device so this is kind of a very uncomfortable feeling because you know you\u0027ve got your personal data on there like your photos and you don\u0027t necessarily want your company just to be able to wipe that and secondly there are there certainly privacy concerns as well in the sense "
  },
  {
    "startTime": "01:08:08",
    "text": "that it gives the enterprise the ability to read certain data off the device which varies case-by-case but it\u0027s also less than ideal despite that the enterprise typically only really cares about three things or they at least care about these three things they care that the user has a lock screen enabled on their device they care that the operating system is up to date they care that the phone is not rooted or jailbroken the reasons behind this is that for the first one they want to make sure that if the user just leaves the phone at a bar that the next person that picks it up can\u0027t access the company resources they want to make sure that the operating system is up to date to make sure it\u0027s patched against vulnerabilities and they want to make sure the phone is not rooted or jailbroken to ensure that the software on the device can actually be trusted so rather than the heavy weight mobile device management solution that gives the enterprise control over the device like remote wipe and and being out access certain data device posture signals are an alternative to that that can be used to communicate the devices compliance state to the authorization server and it works like this the device posture signals are simply bits of information they get sent along with the authorization and token requests and it allows the authorization server to make informed decisions based on those signals as to what the user can access of the corporate resources the spec creates and ion a registry for the common signals that we\u0027re defining which are then sent in a JSON DC area like this example here as you can see that a lot of the data it\u0027s just bullying\u0027s and streams it\u0027s kind of very simplistic there\u0027s a missing slide here so this this data is then sent in the authorization request as a hint called the device posture hint this allows the authorization server to guide the user into a more secure State so for example if the user requires a lock screen and the signal on the authorization request says they don\u0027t have a lock screen because the authorization request is like a user agent flow in the browser the authorization server could say display an error and say hey you need to go set up a lock screen that\u0027s in on what\u0027s called the device posture hint then on the token request the same dictionary assent again the reason it\u0027s sent on the token request is that unlike the authorization request this one can\u0027t be modified by the user in the user agent so it\u0027s a little bit more safe from their perspective and then it\u0027s also sent that that same jason dictionary is sent on every token refresh to ensure that the devices remains compliant with any of the corporate policies so from from an app adoption point of view the good news is that not every app would actually need "
  },
  {
    "startTime": "01:11:09",
    "text": "to implement this for it to be effective uuugh as long as you\u0027re actually using RFC 8252 news style authorization where you can actually tie all of the devices grants to a single session then you really only actually need one to buy a one app on the device setting this these signals for it to be effective it can apply to kind of every app or can apply to the session on that device so that\u0027s the good news as far as adoption is concerned you really need like a handful of apps to implement this of the enterprise suite for it to be effective in terms of what protection this offers you probably noticed earlier that that these words kind of unsecured strings and bullying\u0027s there\u0027s no kind of cryptographic security around it so what good is that right well it\u0027s this the the goal here is to protect honest users who may be hapless but but they\u0027re generally generally honest so this is the user that that is not trying to steal corporate but they might leave their phone in a bar it can protect against that use case because the user is not lying about their client state is not modifying their clients and this will help them get into into a good and more secure state it\u0027s not designed to prevent authorization tokens being issued to dishonest users someone who\u0027s actively creating like a spoof client and trying to obtain the authorization token that is not the goal here however it might actually possible to create a robust unforgeable system if you combine some advanced techniques such as token binding along with device out of stations like safety net this is supported by the spec because the spec is just defining key value pairs of signals so it is possible to encode this type of information in the spec it is technically out of scope we\u0027re not we\u0027re not trying to establish the exact way to do this and John Bradley has all the details if you\u0027re interested to learn more about that baby okay so that\u0027s device posture signals and and the reason that were so let me start with asking on who has looked at the document read the document so I guess did you try to implement this it sounds like a very simplistic implementation but it was useful information that you included which we haven\u0027t heard about last time of regarding sort of like what What\u0027s in scope of the document what\u0027s not and specifically last and there\u0027s a little bit of confusion of like how do you "
  },
  {
    "startTime": "01:14:09",
    "text": "manage to get these attestation information but then there\u0027s nothing said about it but I think that should be much clearer by now good I also me to clarify that have you hear that yes I think we have implemented something like this it\u0027s not this spec exactly but it is this technique yeah I guess we need to get reviewers for this document I think that\u0027s the only approach so okay sir yeah so so we may actually need to pair this with a BCP that actually digs into the operating system specific stuff so you so having a BCP that says how do you get a safety net attestation how do you get a Windows attestation what do you do on iOS so the core spec that that we\u0027re proposing here is focused on how you transport it to the token end point to the authorization endpoint and how you would possibly further pass it on and open ID connect to to an author as a authentication server because you may want to know what the app is something about the app when you\u0027re doing the authentication separate from the authorization in an enterprise scenario but that should probably be kept separate from the operating system dependent stuff which changes every 12 months so like we did with a pause where we have a BCP we probably need to have an implementation vcp how to do it but that shouldn\u0027t stop us from initially adopting the course back and moving forward with that yeah so so do behalf a few people who could they can look at this document do a review and so we can see any any what it is I see Tony and nothing not in the wrong way so I will reach out to some of you doing this week and do some untwisting and great I think it\u0027s a it appears to be a useful mechanism so one other quick point as ekor pointed out we have this problem of how do I know if I\u0027m talking to a fake app so this is the first thing that we\u0027ve actually talked about that may actually be able to address am I talking to the app that I think I\u0027m talking to which means that our ad should actually be quite keen on us making progress with this all right okay well thank you everyone I appreciate your time thank you thanks a lot we have time for Justin to talk about hdtb signing I am yes you should read "
  },
  {
    "startTime": "01:17:15",
    "text": "the title of the slide with a sigh okay so I wasn\u0027t planning on talking about this but I saw an interesting draft yesterday that kind of brought this thing back around and also there\u0027s been some discussion on the mailing list about ja sind introspection responses and things like that so anyway the topic of HTTP signing we\u0027ve talked about it before and there\u0027s this draft that I wrote years ago it\u0027s functional it\u0027s been implemented by several different people it works it\u0027s flexible but it\u0027s also expired and completely unloved by this working group so there\u0027s also this other draft the cabbage HB signatures cabbage apparently has moved on from this and somebody else has taken over editing it but it\u0027s kind of resurrected in the last six months I\u0027d actually didn\u0027t know that until this morning when I was pulling this information together but there\u0027s some more stuff in there it\u0027s got a lot of problems in it I you know humbly say that it has more problems than my own draft but you know whatever but it\u0027s it\u0027s a similar kind of approach tries to be a little bit more Universal and therefore runs into a little bit more Universal problems we looked at it in this working group decided back then it wasn\u0027t wasn\u0027t really what we were looking for and having skimmed the new version not read it in depth I still don\u0027t think this is quite what we\u0027re after you can always just use draw for everything we already made the mistake of soap once let\u0027s not make it again all right the new draft that I just found out about literally last night at the RFC lightning talked things is you ask an HTTP origin signed responses now this is a draft that adds a signature header to the HTTP message this is not something that is bound to any kind of like access token or particular style of API or something like that this is something that allows you to sign an HTTP response it does have some amount of crypto flexibility in that you can use bear elliptical curve keys or x.509 certain signatures with multiple signers which is important in a lot of HTTP systems because you\u0027ve got proxies and all this other stuff and everybody\u0027s gonna want to kind of do their own thing along the way the problem that this draft is trying to solve is especially in the world of HTTP 2 when you\u0027ve got a provider like Google that\u0027s serving a page they want to be able to do things like HTTP to push and include a bunch of little stuff that\u0027s actually from somewhere else but they\u0027ve cached it on the way through and they\u0027re sending it to you and stuff like that you want to be able to verify the content and all of that the interesting thing about this is that the signature is also over the request but it\u0027s only included in the response which is to say the server that is serving the response generates the signature but it includes like this was the request that made me give you this response as part of that so some really interesting mechanisms there downsides "
  },
  {
    "startTime": "01:20:17",
    "text": "is that this is response only it is written in such a way that it\u0027s only signing the response it is not the client the HTTP client signing the request which if we were to apply this to the OAuth space that\u0027s the part that we really want you know we want to have a signature protection and key proof of possession around the client that is making the request to the API in the first place this doesn\u0027t do that but in my reading of it and I sat down and had a conversation with the author of this draft earlier today it could be adapted or really the same structure be reused in this space now there is no body or payload protection this this is all like headers and URLs and stuff like that but there\u0027s another draft which I\u0027ll talk to in just a second that allows you to do that kind of stuff it is tied generally to certificates in PKI there is kind of this little additional thing on the side that says oh you can use a bear key if you\u0027re doing elliptical curves it\u0027s still a very early draft I think that the flexibility that\u0027s already kind of built in there would allow us to have more bear key use cases and of course most of\u0027 bound keys token bound keys which is nothing to do with token binding of course but we\u0027ve run out of words most of those are going to be bear keys anyway and not certificates with chains and validation reading through the draft itself most of the complexity that I saw again coming just brand new to this was in the certificate validation which is kind of not surprising is you know making sure that the certificate gets valid and it\u0027s in the right window and there\u0027s all these like cache timeouts and stuff like that if you\u0027re just doing this with bear keys it\u0027s pretty straightforward it\u0027s generating a signature getting in the right format putting in the right place with the right identifier the draft that is referenced from that in order to allow for content protection is giraffe Thompson HTTP mice and this is just basically a really clever way to use merkel graphs and digests and things like that to protect HTTP bodies in a not exactly in a streamable fashion but in an ependymal fashion you can kind of chunk it up and incrementally know whether or not you\u0027ve got integrity protection over the body it\u0027s an alternative to like the HTTP like full-body message digest thing not digest authentication but the other one downside of course is that none of this supports OAuth because they\u0027re all solving their own things and honestly that\u0027s that\u0027s kind of okay I never wanted to have to solve HTTP signing in the OAuth working group but it was if we were going to be doing proof of possession tokens which we thought we were a few years ago we were gonna have to come up with some way to do that other people turns out have this HTTP signing problem and have for years that\u0027s why we have the cabbage document that\u0027s why we\u0027ve got a bunch of proprietary implementations AWS has its own weird fragile thing I see Anna "
  },
  {
    "startTime": "01:23:17",
    "text": "nodding for that and so people are trying to crack this particularly tough nut I think these two drafts have some interesting promise in the way that they\u0027re approaching the problem and I think it might be worth while for us to look at that and if we did what we would really need to do is adapt the sign responses so that they can cover requests it\u0027s all HTTP structures it\u0027s all based on structured headers and all that kind of stuff it would be a fairly straightforward to define a request header that would be analogous to the response header and how those two play nice together and all that how that gets bound to the the keys to the tokens and how that gets represented to do the signing and we can still send our access tokens like we always have because now we\u0027re signing a header and we can sign like you know we can sign the access token header we can sign the the date header we can sign a bunch of other things that give us the types of security properties that you like in addition to having message level signature protection around that request that proves that you have a particular key that is bound to that token and we can also use the token confirmation methods that have already been started to be fleshed out in job and thanks to Brian we now have a field for that from the introspection responses due to the MT LS work we can add in ways to say like from the authorization server to the resource server hey here\u0027s the key that you\u0027re supposed to be looking for when you\u0027re looking at validating this message which was the pop model if anybody remembers that document from ages ago that was kind of the intended model of this all along so I figured the group should know that these things exist like I said I just found out that this is a thing so I just want to let people know this is here and is this something that we want to pick up again Thank You Justin for making as a way of this work one of the questions I have on what the problem we ran into packed in with this work was that we had these intermediaries and also for application frameworks that munched around with the headers and and the payload somehow that rendered the signature invalid we also had as we focused mostly on as the document same signing hdbuzz signing it sort of literally not encryption and so and maybe back then we focused on symmetric as well as a symmetric keys and our question for me is are we still trying to accomplish the same things or did we maybe change our mind in the meanwhile that we saw it\u0027s from your torque it appears that some of the guys are more looking at the use of asymmetric crypto not in a meanwhile with literally digital and digital signatures and not use symmetric keys "
  },
  {
    "startTime": "01:26:17",
    "text": "anymore or you mentioned the encryption format in Thompson maybe that\u0027s a another data point a finalist is that that\u0027s that\u0027s not encryption that\u0027s not Egyptian no it\u0027s integrity protection of the HD message part okay there\u0027s a Christian one okay so that\u0027s that\u0027s news to me so apparently there\u0027s an encryption okay okay it\u0027s so for on Mike that it says just do a IDI with that same key okay yes no there\u0027s already I think it\u0027s I think it\u0027s actually in our C or in the Q now Thompson draft about doing content encryption with pre shared key metric key um presume we would give you the because they ATO the integrity property she we shall have as well I mean so you wouldn\u0027t I don\u0027t know it curves the mice does the header was just how did the mice adjust had to do a signature as our call that allows you to progressively verify the data as it comes in rather than it verified it through yet right otherwise it\u0027s just as exciting right um I think you\u0027re wrong with the asking graph to discard that the askin draft does cover the body I can I think this is the point since the point is this is the point of it is to allow you to is allow you to have data which is in the origin of the person who\u0027s signing it and if you didn\u0027t cover the body that would not be very useful that seems unlikely so my understanding was that it covers the body by outsourcing it to either the mice draft or the body digest header header yeah yeah so yeah it so so to be clear this this the Gaskin draft does cover the body if you use another draft that covers the body and then spits out a header and then you cover that header using this okay so this is basically this this does the the verb URL and headers okay right and then the mice draft basically does a progressive form of a signature over the body okay and spits that into a header so maybe what what we should be then looking into is how to how we could tie this into the proof possession work with us for use with these existing documents that\u0027s what you\u0027re imposing yeah that\u0027s what I\u0027m proposing if we want to pick up proof of possession with HTTP level message signing this may be an avenue to do that this is new work this has not been adopted by the HTTP this working group at this time I know there\u0027s going to be a presentation on the ask and drive tomorrow I I don\u0027t know where it\u0027s going and I can\u0027t predict where it\u0027s going but people are trying to solve "
  },
  {
    "startTime": "01:29:19",
    "text": "this as well and if there\u0027s a general HTTP mechanism that we can then say oh instead of using you know a PKI search chain use your access token and associated key to generate that same signature that would really be the wind that we\u0027re after yeah so I don\u0027t think it\u0027s like super likely that like this is going to be adopted so in particular the focus on origin substitution that is allowing the the the the web peaky isert to sign the data which doesn\u0027t accept that is it for HTTP responses like not like super popular so um I mean maybe possible is someone like will do some trimmed-down version that just is tied to a pre shared key to like a rocky so I don\u0027t know quite a thought exactly but I know that the use cases Google wants like include meeting their like origins of solution feature so there was some question but there was a there\u0027s this meeting today it\u0027s or some of that stuff um so I don\u0027t know what\u0027s gonna happen but um I think if what you guys want is a digital signature over the system that is just tied to a key which is established them independent fashion that is not tied to you know would be high origins then probably tell me she\u0027d be that and and and maybe not trusted digital signature variant but also the symmetric key variant yeah so I guess you didn\u0027t is that you need to cover the headers I guess for brick Chris so funny you should mention that on I think so since they\u0027re using AED I suppose as possible you could modify it on the Thompson RFC to treat the headers as the ad keep me much but again like ah you know it\u0027s a little bit of work it\u0027s always working it\u0027s it\u0027s definitely work to adapt it into this space it is solving a different but related problem in a different but related way so it\u0027s it\u0027s you know it\u0027s it\u0027s not a simple turnkey kind of thing but it might be something we want to pursue that might be an interesting topic for dinner conversation doing this week so we\u0027re centimeter around not like independently having a dinner among the most folks I would be useful anyway so we could put that forward as a discussion topic thanks Justin for bringing yourself awesome thank you guys do you have anything any other topic that you would like to raise that we should maybe talk about at the second session maybe on how we could actually get the AC turned up to a level that I don\u0027t I\u0027m not freezing it in front of the room apparently not there\u0027s a microphone jack just come forward if we have five extra minutes "
  },
  {
    "startTime": "01:32:30",
    "text": "tomorrow maybe we could just give a quick overview of our assistant token propose you want to do that now do we have yeah I\u0027d rather have some slides okay and some some rest after travel yeah exactly oh we actually ran over time didn\u0027t yeah we\u0027re done okay yeah I also fought 5:30 so we ran over them sorry about not you what is he has slice or did I act I think he will it is called here terrible cold "
  }
]