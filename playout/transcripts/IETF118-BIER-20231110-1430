[
  {
    "startTime": "00:00:36",
    "text": "In, we have been already learned like push for showing the scars Yeah. Yeah. Right. You can you can cry a little. That's okay. Much. Okay. Jobs We're at the bottom of the hour. It's time to start. Everyone in the beer working group, know who you are. I figured if you stayed this late in the week, you're here for a very good reason. So, yeah, to I'm surprised there's as many as as there are, honestly. You you missed it. There were times when we brought beer. Yeah. Yeah. At Good. Good. Very good. Icon. There are more of them. Just wanna throw that out there. Alright. So, like, how do I start this thing? Go to next page. There it is. That's strange. I don't see that here. What is that? Change the deck."
  },
  {
    "startTime": "00:02:23",
    "text": "Yeah. Please sign in. So next time we get an even smaller room. Yes. Absolutely. That's a good point. Just because, you know, you may not be on your laptop. Connecting their phone, It's also the tool we use for benching the queue at the mic. It's a lot of remote people and for use that so we can manage it correctly. Mean, it's not like I can't see you there and wave at you, but was Tony pointed out getting our head count correct is important so that we get the right room size. The justify that. They don't just listen to our wants and needs. They look at our history. 6. Full agenda. What was that one there? 5 was agenda Oh, and these are good. There's just There's our actual it's 4 This is what you should be looking at. Are we there? The Anything you remember? Everything, Mars, Right. So we squeezed in the hackathon, presentation could be somewhere in the middle because that wasn't requested, but obviously of high interest. Media feed, what's it doing? Connection covered, permission denied, box is going nuts, but this is still here. Sandy gonna give the update on this? Are we gonna as you want, Missus Mayer. So we do have a stack of drafts in the STQ. I'm not one to hammer them about that. Last I saw they they were flooded anyway, so I wasn't going after it. I figured if it's there, it's their job. If there's some pressing reason for us to get something through because one of the references holding up to the doc, know, we can do that. But Otherwise,"
  },
  {
    "startTime": "00:04:00",
    "text": "their professionals. They know what they're doing. They're overloaded, and they'll get to it. So I'm keep him out of it until we need to Marcus said hello world. Thanks, Marcus. Alright. Now, this is the harder part. This happens continuously in every group, and it's, you know, and we're not gonna finding shepherds. It's an important part of getting the doc through. But as you've probably heard me say it so many times, it's an important part of being part of the process. Gotta get your head around that. So I always said, you know, if you haven't written a doc before and when we get involved in some way or we're more curious how the process works. It's great to be a shepherd And the shopper process is very simple. There's a list of questions that's in our RFCs you go from. As that confirmed, the document has gone through that that vetting that we expect. And then you ship it off with the document in ISGQ. Some point out yesterday is also a great way to understand that document process, which important part of being a chair. So wanting to get a chair, spend your time in this one right in shepherd's dock. So here we have for needs. For we have one assigned And, need 3 more volunteers. I'm not gonna look for him in the room, although we had someone yesterday volunteer as Shepherd somewhere. Yeah. I thought it was great. And it was maybe coming out of Pam just picked it up. So We'll take it as a list do the request after it's, past last call. For a shepherd. So that step has already gone out. I Have you ever signed one? Put can't, like, force shepherding on someone. It's like the we're we're here to to it's all a voluntary process. So to be part of the system, this is an important part of being part of the the overall success of the working group, if not the IATF apart. So please volunteer. Greg, if I may, Andrew Austin here, wearing my 80 hat. I would say with regards to some of the docs sitting in the queue, If reviews come out that you know, indicate there were issues or knits, etcetera, docs get stuck if people don't address"
  },
  {
    "startTime": "00:06:01",
    "text": "what comes out in those reviews, on, and I would really appeal to authors to keep an eye out when those reviews come back that do raise issues and deal with the issues because it'll actually leave your documents moving forward. Because otherwise, well, we end up in a situation where stuck in queues because the issues aren't being addressed, and there is one or 2 documents sitting there that have had open issues for a while where they're not getting addressed. Docs from our working group? Yeah. For example, I was actually just checking this now. The BROS PFE 3 extension docs needs some updates. Etcetera, etcetera. So if we can just, you know, keep an eye on that when reviews come back, and it'll make the process a lot smoother. This is the one way to and you can check that in this doc status. Yes. Okay. Perfect. Thank you. Right. That will there was an email 6 days ago on that Here we go. I think I have to request a second preview. That Beach VLS beer is looking for a revision as well, post shepherd, post review. Yeah. So we need a shepherd for OEM requirements. Andrew clarifications. So when you said the LSR working group wants to have a look, is it up to us to request a review. Yeah. Yes. And I will fire it over. Yeah. We've done We've been review calls, and we've also last calls on both lists before sometime. Maybe a level for that. Okay. Okay. And we have a new dog. Just gotta adopt it. A new baby in the front. Okay. And banks. Alright. So let me get back to the original agenda. I know which document's supposed to go next. Which is"
  },
  {
    "startTime": "00:08:02",
    "text": "there. The OEM is up next. That's correct. Just excellent. Alright. Thank you. I appreciate it. Okay. Let's gotta get the documents. And it's other than this. So There you go. Okay. Okay. So, just to give you an update of, how we progressing. The documents and, what's the status? Okay. So, we have requirements being emptied discovery, BSD and performance measurements, using the hybrid measurement node. Next So, all documents number of offers are under control. Which means 5 or less we addressed on OEM requirements, early up ops, operational and security comments. And, Yes, as chairs, noted, we need a new shepherd. I can volunteer to trade shepherd role. So if somebody volunteers to take separate role for OEM, I owe you one And I'll pay you back in kind. But okay. It's a minor sign up. Thank you. Thanks. Thanks. Next slide. So Put one on me. What came out in the notes when when I said that it says it's a minor sign up. No. It's No. No. It's it's not. It it's equatable. So shepherds were shepherds. Okay. Birping, again, under control, 5 or less. We address shepherd comments I not up I have not uploaded, this version. I hope that,"
  },
  {
    "startTime": "00:10:02",
    "text": "we'll get back from shepherd whether, comfortable with the proposed updates and then, upload it shortly. And then we'll be ready for the next. So we've shepherd this satisfactory with the address comments, then, we'll be ready for the next step. So probably IETF Nick Glass Call and then ISG. Next slide, please. Okay. Perfect. Discovery, had a good, comments discussion with Human many thanks. I send, some propose updates and responded to questions. So we're waiting for to hear back. And, I'm not sure we have we had the last call So, I might be lost the process a little bit with this. Church church Yes. Because if, yet not last called, then certainly that's ready. Okay. So next slide. Beer, Bfd, again, so it uses, point to multi point BFD and point to point I'll point to multi point Bfd with active tails. So, the first, variant of BSD is a center based, and that it allows for, leaves or tails, to learn, to monitor their, condition of their, multi has distribution tree. The 2nd variant with active tails, they have several options. We more specifically addressed unwarranted notifications. So where, the tails, React to, detection of"
  },
  {
    "startTime": "00:12:01",
    "text": "the, defect and notify, the root by using, poll sequence, messages in the AFD. So, That, something that we discussed earlier, in the group, and there was, the interest, to you, to cover that. This document is ready for their working group last call. I'm not sure if we have a separate So if it needs a shepherd, I can offer 2nd, shepherd, on the Okay. Next slide. So the hybrid performance measurement, some time ago, we had a discussion with the Alvaro when he was AD. And, he made some comments suggestions also, these, comments were, related to, BR OEM requirement document. I believe that, we reconcile and addressed all the comments and discussion that happened back then. So, again, I don't know what will be the appropriate step. How to proceed, but the document is stable, and we we are ready. If it passed last call, and it was a Shepherd. Right? It's always done Yeah. Okay. Right. So I'm looking at the status. Things have been lost, called, and there was, you know, couple of comments in shepherd stuff and you're interested now. So I provided last call. I think. Okay. I'll issue in that in case because that is has been ages ago and then all the come. Yeah. It it's it's good to remind people that, we have this work and, solicited there. Speak now or forever. Keep. So you have requirements the MTU and the double marking. Right? Yes. Yeah. Okay. Yeah. But, I think that we are doing a good progress, with the team. Yeah. That Okay. So"
  },
  {
    "startTime": "00:14:01",
    "text": "I I sign up for 2 shepherds. Duties. Thank you. So hello, everyone. My name is Michael Men from the University of Tubingen. I would like to share with you some experiences about before to, you know, implementation of advanced stateless molecules source routing. Next slide, please. So, Richard, all of you, I will motivate, why, we go into the into that direction. And then I will first, explain you the concept of advanced status multicast source routing. We are building explicit trees in the header, and we have basically 2 approaches One is based on bitstrings, bit string encoded explicitories, and another one is based on segments, and here we talk about segment encoded explicitly And finally, there's also a combination thereof, which is most probably were sweet spot combinations most powerful probably. So next, please. So, motivation is that with beer and BRTE. Bitstrings are typically 256 bits long. And that is not large enough to scale peer peerte to large networks. So we have to partition, pure domains into sets with at most 256 notes, using ident set identifier to indicate bit strings for that set. And that helps to scale peer to large domains. But large peer domains require many sets. And when we have a set and receiver in that set, we need to send 1 packet per set. And that leads to redundant tech copies. If receivers are in different sets."
  },
  {
    "startTime": "00:16:01",
    "text": "This, this may be an issue for beer, but it's much more an issue for BeautTE. And if you wanna have BRTE in, in in Malawi, if you wanna have 3 engineering in Muddlycast there is no good solution. We analyzed, how many additional packets we need and how many redundant packets this, generates depending on the number of receivers and depending on the bits swing size, and here are some numbers. And we see that this, essentially scales with the number of receivers. So those are the redundant packet transmission that we have compared with, IP monthly cost. Next slide, please. Next. And here's the concept. So the the idea is that we have a distribution tree So that is the that is the, figure in the middle on on on on on top So, it's the numbers 1, 2, 3, 4, 5, 6 7. That is the 3. And we can encode this, we can encode these tree structures into say, recursive unit. The red 1, the blue 1, and the green, box, those are recursive units actually also the gray one and support, but those are relatively trivial. So this is a multicast tree and, trees can be serialized so that, we can denote them in a serial order. And this could be this could be encoded into a header and, sent out to the network. And the challenge is how can we forward such as tree structure in in in in packet headers. Is that,"
  },
  {
    "startTime": "00:18:01",
    "text": "is that feasible can be done efficiently. Yeah. One constraint is, well, maybe the number of receivers does not fit into the packet. Okay? Then we need to send another packet to reach all the receivers, but this is something which is not caused by different sets. So this is only cost if you really have a large number of, receivers, and this is not treated a use case for that. This is when you have a sparse you have a sparse monthly class 3 and a large networks, then this is a good solution. So what is the forwarding principle when we have such a hierarchical such a multicast tree in the header. This is depicted on the bottom of this slide. So on the left, we have the the large multicast tree. We forward this to the green node to the number 1. The green road extracts the recursive unit, which is in blue, So this is attracted from the header. And, this is then essentially the next header can be sent to the blue note, the blue note, looks into the header finds 2 different trees. The green, the the gray one, which is a trivial 3 and the red one, which still really looks like a tree. And, these two packet copies are forwarded to the destination, which is, note 3 and note 4. A note for Again, that's the same thing, extracts the sub trees, which are the trivial threes, 5, 6, and 7, and they are delivered to the destination. This is the idea. A, in a packet, there is a that there are multiple subtrees. They are extracted from the subtrees. We make a packet copy and, put this"
  },
  {
    "startTime": "00:20:00",
    "text": "the individual subtrees in the the different copies, of the packet. Next slide, please. So We have basically we found 2 choices how to to implement that. The one is a bit string and a bit string encoded explicit tree. And the other one is a segment encodedexplicitry. So what's the difference? With bit string encoded explicitories, we indicate the next tops by a bit string. Like, on the left side. And you have seen, previous draft about that. These are the drafts from tourdes, in the last 2 years. It's a CGM 2 and RBS. And the new draft, about RTS, which has been proposed in the PIN group that actually utilizes, segments and segment IDs. So, on the on the right side, you utilize these IDs number 1 and number 2 to indicate the next, the next tops and do not utilize, bit strings anymore for that. So this is the difference difference between bit string segment encoded explicit trees. This is essentially what we have, what we have built on Tofino, we have a prototype, which we call more or less RBS light. So it's not the full, RBS functionality, but it the essential functionality. And we have also implemented, segment encoded explicitly tree on the p 4, Intel Tufino, which runs at 100 gigabit per second. This is not, There should not be a productive platform, but it should be"
  },
  {
    "startTime": "00:22:01",
    "text": "proof of concept because whatever is implemented with p 4 and intellituffino should also be simple enough for other platforms that are more flexible Next slide, please. So now I go a little bit more into details for the for the RBS we have implemented. How does the header look like? When you look at the header on top of the right, You see it. There is a next protocol field that points to the payload. And then we have a length field lazeroandr0, which essentially says that will follow a recursive unit of length L0. So, and the recursive unit may be large because this recurs a unit contains multiple other recursive units. So those are the subtrees I have been talking about on the previous slide. And in this recursive unit, what is there? This is a delivery bit. So and a bit string and some petting and then come length fields and, another another series of recursive units. Okay. Next slide, please. So we are already tight on time. Okay. Then, let's go to the next slide. So so What are the properties of this RBS? The advantage is, when you have a big string, you can do efficient replication at the leaf notes. But the disadvantage is that if you have a long line, you need to to you, you need to, encode each and every intermediate node and that requires lots of header space. So therefore, we didn't have a very long line, the RBS has some disadvantages Next slide, please."
  },
  {
    "startTime": "00:24:04",
    "text": "A segment encoded explicitories, utilized, node IDs that we call, segment IDs And you see it that the header contains multiple segments, again, this is a kind of, subtrees, what you see here. But it it works a little bit differently. Next slide, please. So What is in a segment? In a segment, there is an segment identifier that is broadcast bit, which is also in the, other version. A deliver a bit and some padding. So this is the part of the and and this part needs to be bid aligned for efficient processing. And afterwards, there isn't There is a length field which indicates the size of the nextsubtreat to follow And the next subtree may contain multiple segments. Next slide, please. And the forwarding here, works as follows, We removed the first segment and then re repeat until the packet is empty. 1st, We take the next segment and the next l bytes, which has been indicated, by the length field in in in in the first segment. And we forward the new packet according to the sit in the first segment. And then we remove the segment and the next l bytes from the original packet And this is done as long as the original packet has been processed This, by this way, we basically create the we extract the subtrees for the next tops and create packets for these next top Next slide, please. The advantage of this, segment encoded approach is that we can efficiently encode multi"
  },
  {
    "startTime": "00:26:03",
    "text": "cast trees with long lines. So because we can jump over many intermediate tops, And, the disadvantage is that, this approach is less efficient for replication to many neighbors. Next slide, please. Okay. Why is the combination of, segment encoder trees and bit string encoded trees, most efficient. For bit string encoded trees, we can do an optimization. Namely we can basically remove the all the header, we can remove the header the the the trees from the we we can, replicate at the penultimate top very efficiently We do not, need to have a recursive unit for all the leaves in the tree structure. And therefore, we can basically do a peer style, replication at the pen icon top towards the, you know, towards the leaf nodes, and that is very efficient So the idea is to combine both the segment and bit string based approach so that we have, segment encoded explicit trees in in in in the middle of of the network and, bit string encoded explicit, trees, yet the leaves. And, yeah, Next slide, please. To visualize that, here's a special case. We basically carry a packet, over a segment encoded trees paradigm towards 10 ultimate hubs here over 2 hubs. And, this requires 2 bytes, segment identifier, 1 byte length field, and 1 bit string and and and a bit string of one bite. To reach, to reach each of these, ultimate pen ultimate tops. And when you do the calculation, how many receivers"
  },
  {
    "startTime": "00:28:03",
    "text": "can be addressed, then with, 200 with a bit string of 256 bits or head up with 256 bits. We can reach 56 receivers. And if we go to a larger header, this is, 1024 bits. We can reach 243 receivers. The so however, you you may say, okay, we go to larger headers, but, doesn't this make problems? Well, from this large header, we need to parse only the first few bits because all the addressing is in there. We do not need to, to pass the very far bits because they are just COVID and, they are not, they're not really processed. And, the efficiency, can be larger, if we utilize the broadcast bit, because then we can, address many leaf notes that are connected to the pen out in the top. Next slide, please. So here's the conclusion. So in our implementation, we looked at bits string and code explicitories and segment encoded explicitories. And, they allow for generic multicast trees. We think that may scale better than peer, especially peerte in large domains, with sparse, multicast trees, We've implemented that on p 4, on Intil Tofino, and the advantages advantages of, segment and between encoder trees can be combined That means we basically carry a bit string over segment encoded trees to address leaf nodes of the tree However, this combination is not yet implemented. This is, work to do"
  },
  {
    "startTime": "00:30:02",
    "text": "and a technical report will be probably, finished by the end of the year, and I I would then send a pointed to the working group. Thank you. Thank you. Questions, questions, questions. Otherwise, I have one observation Nothing. Yeah, to make it snappy. So Looks complex, but, you know, as complex is nasty, if you want to achieve your goal, we cannot send the tree into consecutive packets. We cannot split it doesn't give you any guarantee of, you know, keeping sequence. That's not what the technology promises. I think through that, generic observation is that this is a solution that controls the replication points. Right? It's not only a solution that controls that tries to solve the problem of small number of receivers on a very large possible set. But it also controls replication. I want to encourage also people to think about the simpler problem, which is just prevent excessive replication without maybe without controlling, you know, duplication point, whichever value, but you see the involved. Yep. That you can control You can control replication point with any encapsulation. You know, in LSP over the top, you can do a segment running over the top, and then be part of the deodorant. So I encourage people to to single wider. I mean, it's a constant pretty Right. We are. We already have layered solutions for this. Can I, quick comment, even though I didn't do this doing thing correctly here? Yeah, so I'm at my You shall be forgiven Thank you. Okay. Yeah. So my original interest of course, was coming from BRTE, right, having worked through all that stuff, and, dead net, as the strict hop by hop requirement to, you know, really lock down the path. And when the colleagues said that they had done this"
  },
  {
    "startTime": "00:32:00",
    "text": "scalability thing in China Mobile comparing this, which I presented on Wednesday. I'm saying that is still a long I mean, all this simulation scale is a lot of work. And I think the only thing I wanted to put in here, which kind of I had this title was that we had this broadcasting. So that also this humongous tree for IPTV, you go to a large server provider. You have 8000 notes, and I don't wanna say, yeah. Yeah. Beer would be good in whatever film or fashion we have, but can't get rid of the stateless one for the big IPTV case. Right? And if I need to stitch down some tree, it doesn't matter what it is. Because I can efficiently do the broadcast on the edge, then so be it. Right? So I mean, the whole point is still to get to complete deployments in large networks, even though majority of trees is small. Some of them will be large. Mhmm. Right? Yeah. Thank you very much for this text or stuff. Very interesting. That we are before and Just previous redistribution. So I'm taking notes for the moment. This is poor showing gentleman. And ladies included. Yeah. It's too bad I was gonna buy beer for whoever took notes. Yeah. You're lucky. I have to bring it a little. Okay. Okay. Good afternoon. I'm sending down from the tea. This is a short presentation for the update of a pure prefix redistribution. The motivation of this chapter is to merge, several, IGP domains into 1 tier domain. And the maker, sir, forwarding efficiency. So we use the proxy to improve the efficiency next Thanks. Oops. Yeah. There we Yeah. Let's see. This is the update of the 5 version. this person teach, this draft has been printed in IETF one one time meeting. And we received the, comments from"
  },
  {
    "startTime": "00:34:00",
    "text": "see. And the she suggested us to add a paragraph to to make a clarification for the proxy range. So we add a paragraph to makes the clarification, and the the turf, turf, Paragraph is, there is maybe multiple border routers connecting 2 regions and the same VFR ID may be advertised in the a proxy range from multiple border routers. So in such situations, the 2 more bother rotors will advertise the same BFID. They just say, they can be achieved, by them. And they're not saying they have the BFI IDS. So So that's all updating, and, we'd like to see if this dropped can be moved on. And that this driver has been in working group last No comments. Who's read the draft. Who feels this is ready for last call? It it was over the last year. A great response. We have response already then. There I I I pulled out the last call. Yeah. There. So we're gonna need a shepherd Yep. We need a shipper. Hey. Yeah. Who is volunteering. That's the numbers. Get a volunteer right there. Yeah. Yeah. And we had Greg volunteering quite a bit too. I guess more in excellent. Are you? Thank you. Source protection."
  },
  {
    "startTime": "00:36:00",
    "text": "Hello, everyone. I'm Ethan Liu from T Mobile. Today, I Okay. Okay, sir. We are Today, I will introduce the, bare source protection draft behalf of my coworkers, Next up, please. Firstly, I will give a very overview of this chart The disrupt, the scenario is that the multicastor source connect the 2 or more ingressed routers That means we have, more than, 2 BFIRs to avoid a single node failure. And we have, three modes and, code and warm and hot. Most, introduced in this draft. And reference to the unborn D, ingress the route ingress rather than to ingress the router fare over. And, compared for the, BF ER selecting design that you image. And the associated, the detection and the switch over masters, analyzed. On the node failure and the work path failure. And, also include the bill specific detection method, like the bare BFT, bareping. Next slide, please. And this is the, chapter status and the next step And, this chapter is, has a relationship with the, just And I I think it's a a specific, protocol instance of that draft. And, which can, we should have a disaster the the bumblebee draft, discuss the general matticaster, redundant ingress for rotor failure issue. And this"
  },
  {
    "startTime": "00:38:01",
    "text": "but this job to give a a specific, protocol instance. And this draft franchises on the beer environment, And, the the 12th has the, adopted after the ATF 1 hour and, now the chapter had has stabled and, the authors would like to ask for the working group last call. Thank you. Good question. Human, ended? Fuse. I was reading the draft. I couldn't quite figure out what is, like, difference of this between this and redundancy. So, like, as as you know, today, when it comes to the different 3 types, we could have the picture that you were showing And then you can use something like a UMH redundancy with looking at the unicast route or the bandwidth monitoring of each one those pincis that is coming from the source to the receivers and figure out which one of those BFIRs are the active ones or the standard by So Like, this is some what implemented at least by Nokia stuff. I just didn't understand what is the difference between this and your message. The the the the stream modes, we have, give the think, information about the tracked in in in peer traffic, we focus on the how the the the master of how to detection the failure. A business specific, peer environment. The the swimboats we have very detailed information in that draft because I'm only draft I I I realize that. But I'm going to draft the, is the general multicastor. In It's not, a focus on the specific protocol."
  },
  {
    "startTime": "00:40:00",
    "text": "Right. So that that's that's my confusion a little bit on the the amount. It actually he says, like, there are multiple ways of doing this. Right? Do you use BFT? You use bandwidth monitoring. You use, you need to cancel out what are the sources being advertisers from the 1 or BFR 2. Like, all of the stuff already has spelled out. I I mean, may maybe I need to read the draft again. I I couldn't quite figure out, figure out What else is this trying to figure out, what other problems is trying to solve? Anyway, I'll I'll read the traffic. Thanks. Thank you. Yeah. Another question. Sanzality, post of the draft are all informational draft, and they wanted to provide some guidance or information for the, multicast deploy So, this structure is a focus on the beer technology analysis, such as BRPING and the BRPFT. And the things are dropped, or, it's general. Monetize for it. So some some general general methods are including, team or MLDP or something else is another sense in that and the the beer specific information has not been analysis in that draft. So, this that's the diff difference of the 2 drafts. Yeah. Both of, our information They wanted to they don't want to sew anything. They just want to provide information about the deployment. Yeah. Alright, ma'am. Montgomery Cisco Systems. I think we really have to think whether this whole use case itself valued for beer or not. So doing source protection for MLDP or any any technology where we are building tree versus beer, which is really not building any trier state, do we really need that kind of protection or we should we should think about it that how can we simplify instead of just taking those protection mechanism back to bear? Jeffrey, go ahead."
  },
  {
    "startTime": "00:42:05",
    "text": "Okay. So the n bungee travelers mentioned and it's directly presented here. I think one thing I want to point out that that may help explain the woman's computers, why is there is another RFC, in best about MVPN, the the protection. Basically, those three modes of, stand by. One may think that's beer is just a provider tunnel. That can be used for for for for that RFC. I think that that that that is something to to be considered. Just I just want to clarify. I think Manca's point is more might also be related to that. In fact, there is another draft in the past, also talk about ways of doing the ingress redundancy. So it's just a lot of things there. We we should, see the dates altogether. Okay. Thank you. In past, the, the draft has been standard, the SFC. Right? The best the best secret, signaling for the MVP. Yeah. Yes. We did for last draft and we borrowed this 3 modes. Cold woman cord from that draft and another size the beer provider side. Yeah. Hello? You're getting down. Alright. No problem. Right. Anyone else? Anything else. So like a lot of discussion take place. Before we even go to the history of last call. We've talked about this, I think, before too, about the idea of using what tools are in the box, you know, how to make things layered not depend an protocol solution for everything. So be busy. And some of that discussions at least take place. I didn't follow it all here. Necessarily, Mike, I'm so apologize. For it and all, let's go back to the list. And,"
  },
  {
    "startTime": "00:44:01",
    "text": "I guess from the notes, we can hash out Yeah. I'm I'm keeping the notes. My my generic observation, Ideally, we'd have one solution you know, people may have differ may have different deployment preferences. So don't restrict the discussion, you know, into a cat fight. Who has the best? Right? Go on on the list and check out what is pluses minus. Is it worth documenting? Because if some just if even some people deploy it that way, it's already worth document in my ass should Kirk, something quick. The diarpsy in the best we were talking about is indeed MVPN specific. So just just want to point out. Yeah. I mean, 20 different options means lot of implementation. That that's I mean, at the point that we are that we are trying to interrupt even couple of vendors and having all these options, that's gonna make everybody so confused. Complete finally agreed It's allowable goal to finish out with a single implant. Implementation, but if you start a discussion with, there will be only single implementation. It's not a starting point that was my only Okay? Sure. As as I say, if it's not broken, we'll fix Okay. Expects So next pre you you do this one? Yeah. Oh, great. Okay. I was just asking doing. And that's all. Jeffrey on there, but disagree. Thanks, Dick. Yeah. Hi. This is Tig. Ice couldn't be here, so I'm presenting for him. So next slide, please. So, yeah, I should say this draft was presented some years back in in beer. And then it's kind of been lying dormant, but now we figured it's it's it's good to have it back. So there's a new revision now. So the main idea is, you want to have some kind of Doctor orDF"
  },
  {
    "startTime": "00:46:01",
    "text": "but we don't have PIM deployed. What do we do? So, as an example, the RGP MLD overlay, we've been discussing before, you wanna do beer end to end, and there's no payment involved at all. So how do we determine who should be the forwarder like, the first top who should who should be basically originate originating packets into beer, and that the last top who who actually wants to be asking to receive packets in beer. So we would like to have something that doesn't rely on them. Also the the PIM, the Affiliction, relies on on the RP, which we don't necessarily have there's also some cases where we might use different routing protocols So today, pin is pin much the multicast routing protocol, but they have beer, and they couldn't theoretically be others. And it's good to have one single DRD of election that could be used regardless of which publico. So next slide. So this is by the way. So, yeah, now I can see worse than 1, they they kinda left it to the routing protocol to say who should be the Doctor. People realized that was a bad idea when they had multiple protocols. So in IGP worse than 2, there was, like, defined how to do very re election in IGP up. And, It's kinda the same problem we have here. We want something regardless of which routing protocol they have. So next slide. So, so the offers figure that, GP was a good place to put the DRDF election. So just like, yeah, we need our r g RGP in the way at the edge for, you know, finding the receivers And, urgent piece independent, which routing protocol you have."
  },
  {
    "startTime": "00:48:00",
    "text": "And, yeah, if you have multiple protocols, you've much selected the RDF first re regardless of the protocol and and and that DRDF can use whatever overlay they they have available. Next slide. So You have the IGP carrier election defined in IGP, and one easy way it could be to say, oh, let's just let the agent pick failure be that the r or the f But it's very loosely defined. This there can be court cases where 2 routers are Argentine carrier at the same time. And that's not really a problem for for RGP queries, but it's a problem for the election as you might get duplication. So, the attempt here is to define something that is more robust than, the IGP very And one thing is yeah, the RNDF you might use those as 2 separate terms depending on whether your first stop or loss a prouter and so on but here we'll just talk about the election. We will basically use the DF for both Doctor andDF. Okay. Next slide. And here's some more details about the election that can some So the main thing really want to convey is, like, the the use case for this, why this is needed, and I hope you might understand that. If you have any questions, I'm happy to at respond to them. Yeah, I can go more into detail about the election mechanism So, So one thing is that we do load balancing. So we do hashing based on the group address that allows a different TF for different groups. Also, there's still this list, though, candidates that is being announced. So it's like one router will basically listen to, messages from all the other routers and then construct a list and announce that."
  },
  {
    "startTime": "00:50:03",
    "text": "And by having a single router that announces a list that everyone will use, we'll make sure it will be easier to ensure that everyone actually uses the same list that you don't have any inconsistencies. Yeah, next slide. And, yeah, one of the things that, Mhmm. We do here is that there's this one learn flag. Well, the oh, essentially, the idea is that You can, You And I'm can. trying to remember this now, but, you can announce, like, I learned just about the router and and and, announcing it but but I'm waiting for the Roger to respond saying that I I got it before you accept that the router actually should be used there's some there's some retransmissions here as well. If a router doesn't respond, then we will send another hello to the router. It can hopefully respond to that. Next slide. But, yeah, there's some details here. I don't, like, 100% remember. Yeah, basically construct this d a l, the state that are an answer list that that are basically who actually should be the the candidates, and then each router will see if it is in the list and if it is It's oh, Yeah. Each each voucher will basically do this hashing based on the group address for each. So, the, candidate gaps that are announced, and then we will use the highest hash value as actual year for that group. But he has to mention the results of some acknowledgement and retry mechanism. To make it more robust. Okay. And that's next slide. And I kind of said this by having a single router possible for advertising the lists. It should be more"
  },
  {
    "startTime": "00:52:01",
    "text": "likely that everyone has the exact same list and we want have any duplication or or loss. Okay. Next slide. Yeah, there's no packet formats in in in this disbursed on the draft. The ID is most more important to get the idea across I was saying how this is, like, protocol independent So you could argue why it should be done in the gear working group at least that's where we see a need for it now. And So it seems like a reasonable place to do it. But we should also, yeah, present this in the PIM working group probably. Yeah. I mean, so if we do see this having this multiple router connected to the course or to the, to the leaves. Issue. Right now, like, as you said, Ping is is the way that we try to resolve the Doctor, so we don't have duplicated traffic. So I I agree. I mean, if there's something better, we definitely need to look at it. But I would imagine that we want that for all penses, right? I mean, for for all, trees, not pincers, sorry. 3 seat, whatever is be be basically wanna come up with mechanism that addresses all the trees issues. Yeah. And I don't know how it's gonna fit into your stuff like that. Can I say one one thing to consider maybe is if this is actually like a good mechanism and protocol independent, Should we consider using it for a pin as well? Yeah. Yeah. I mean, absolutely. As I said, right now, exactly the way we do that is that we create, like, EVPN or a layer to a domain, and we just send the pin between the two routers. To figure out which one is the Doctor. Right? Yep. I'm all for it if there's something that I I would not to work with you. That's great. Okay. Thanks. Them, man Kamna's Cisco. I think this question is for ice, and you are just standing in front on this behalf. So, definitely, this work is needed. To have some mechanism to have a DRD of flexion without"
  },
  {
    "startTime": "00:54:01",
    "text": "being really dependent on PIM. But sending IGP hello packet. I think maybe we'll discuss more that how exactly it should look like. David Lampter, there is an existing RFC for multicast router to covery. This doesn't solve the problem, but that might also be something to stick this on to additionally. It's RC 4286 from 2005. Maybe maybe it's good. Maybe it's not. I don't know. Or I Yes. It's in Okay. It's also an IP packet type and an ICP V Six of I could type Okay. Okay. Thanks. Yep. For the site. I think that's it. Let's see. For more. Ruth Van Kedik. I I actually thought that this, had gone through a long time ago. I think it would start 2016, 2017 or something. I really support that, this is being pushed through because I see you need to, to be solved here. The question for me is what are the offices planning to do with it? Is there is that in the shape where we can say working hoops does call or something like that. Sorry, not last call, working group adoption. It's still on individual track. Right? Right. Yeah. So, yeah, I'm I'm not an author for them. Mean, I'm sure the offers are interested and also for the GMPM of the overlay draft we are doing here, we really need the this solution. A quick call. How many people interested in working Who's with the doc? Yeah. Okay. So that's just such a few minutes. Get about who thinks it's ready for adoption? Okay. But, conceptually, I mean, adoption is one thing as the, like, last call. Personally with anyone on knee. There. Mean, the the people who read it are in support we can still take that to the list and get some response."
  },
  {
    "startTime": "00:56:00",
    "text": "Okay. My only technical observation quickly will be, I don't understand why the intermediate layer of the guys gathering, you know, the collecting whatever the offers and trying to figure out the best helps any, you know, stability, but this will be technical detail Yeah. So at least Yeah. At least the the reason for it try to make it more reliable, but it could be interesting to do some analysis and see if it actually now makes much difference or not. Yeah. Okay. X Thanks so much. Okay. Later on. Mhmm. Yep. The bananas. Alright. Here or the week. Oh, So some quick report on the interrupt testing. Next libraries. So, we had a informal interrupt testing this week. We'll have a server, for, who wrote a free router, his remotes, he we have a basic control plane plus software based forwarding his implementation seem potential can also support, DPGK or P4 programmed. How do forwarding, but what we tested here is the software based forwarding. And then, Juniper, I wish I represented we had, virtualized the platform with our new, ASIC And then, Nokia, woman, and brought in the SR 1 router here. Ice was there in during the, hack thong for emotional support Thanks so. Please. Yeah. Thank you. Yeah. So, the left side is the fiscal topology would basically have a rebound to, a laptop,"
  },
  {
    "startTime": "00:58:04",
    "text": "around MBMs. And it has 2 interfaces. 1 BLT, the 1 be done go either nets. On the Nokia sides, they have 10 gig fiber So we, in the in between, we're putting a switch to to bridge the gap. The right side is the, logical apology, basically ring, she's your shape. In the, naptop, we have 3, virtual or in, routers there. 2 routers are running as the MVPMP in the middle is a free router as a core router. The SR 1 router is also a core router connected by the hosting interfaces Next slide, please. So we, use the MTO S encapsulation, experience is 256. Number of sets is 4. I assess single level, We use the supplement 0 and supplement 10. MAPN is the overlay. The 2 PE routers, we use the aggregation labels, which means that's all the VRFs for a VPN. Use the same label that is from the default label space. This is actually different from the R see 85 56, which is MVP for a a beer for MVP and and VPN. In in the RFC, the upstream assigned labels are used That's, here, we use the aggregation label. To to for better scale, is also, almost an RFC now. Is the RFC editor's queue. We use inclusive tunnel due to the topology limits. There's only one bit in the bit string. However, we do use a static we'll add aesthetically BFPRs to the panel so that we can actually have more bits set in in the actual packets."
  },
  {
    "startTime": "01:00:01",
    "text": "Next slide, please. There is another setup, in Sharpa's home, It's, again, it's a Linux server running, his free router with the tuning parts of Vpx, it as the core router. He used the pin as the flow overlay. Next slide, please. We so we performed the ISI signaling an MAPM beam a team that's over the signaling testing. We did beer forwarding, very simple, forwarding, between the piece through that, a p router, whether it's a free router or ASR or or VVX. All worked well. After some fixing, we did run into some issues. We fixed them. Next slide. We did have a lot of challenges some of you had noticed my stress during the hackathon days. Mainly those those change challenges as you come from the virtual testing environment, for example, we in that, laptop, we have 8 VMs running and It was so it was slow. To bring up, the VMs and collections and I'm actually very new to the virtual, anization, end of, so to the free router. Really appreciate that Java gave me lot of help and we were on the call all the time. He was very patient with me to show me how to do things. With with with Yep. So the we've run running the issue, the bugs, bucks fix was quick easy, but it took a while to to get them build and, load it once those things were ironed out, We made very good progress after the hackathon. Whether it's virtual, under the VMs or with the nuclear physical routers. Next slide, please. So some pictures. This is Java. He's carrying his, latest latest box, in in his home. Next slide, please."
  },
  {
    "startTime": "01:02:01",
    "text": "This is, me and woman there, look at his arm. He's carrying his, he was carrying his, the router. We don't have a picture when when that voucher was on top of a Uber taxi. Was huge. If they couldn't fit it into the into the taxi, with the, shipping box, but they didn't take a picture. Too bad. You you mentioned you were a stress wait until you bring the real hardware through the custom, then then you're gonna be really interested, especially US custom. Yeah. Yeah. Next, a, And this is after we finished the all those basic testing. We're thumbs up. I wish you could Photoshop that that beer bottle into into our So the banana is declared an official beer working group artifacts, historical artifacts, just like the beer bottle. Unless you ate it already. Okay. Next time next slide please. So this one is actually very important. Indeed, in this, interview, we did very simple informal test thing. It was not intended as testing, events for robustness of the implementation we are considering, a formal and more comprehensive intro testing as part of the year NTC. In March. We want to welcome more vendors I know that there are more vendors out there. We, they didn't come this time. I hope we can all be all together in that EANTC testing environment. And, testing results would be presented in the MPOS work congress. Nothing is set yet. But this is something that we are planning. The last important point is that's We started beer. 9 years ago, even though I still say there is a new technology, but"
  },
  {
    "startTime": "01:04:01",
    "text": "We started 9 years ago, and The the the reason is last take this long is because of what I call the chicken and egg problem. The operators have shown the interest in deer from the very beginning but once they learn that, most of their existing hardware cannot do it. They back off. Once the operator's back off, the vendors kind of hold back. So we got into this chicken and egg dilemma. But now we actually have vere hardware capability, from at least 3 mainstream vendors, more maybe 5, and pass, open sourcing permutations. So and that is across access, aggregation, edge, and core. End to end. From multiple vendors. We have the card work capability. So now it is the time for the pioneering vendors and pioneering all preachers to work together to break this dilemma and really put this really good broadcast technology into use. Methallies, world domination, take time, no matter what you do, have engraving the bike. Yep. One packet of one packet at a time. Yeah. I said he Senateality, ah, if we have any plan for next beer hexam, In next year or some I think we can do it the next I ETF. Again, besides the IETF hackathon, the the AMTC is a more or formal, in help testing place. We are serious to con considering going there. But we're not limited by that. As you mentioned, another hackathon let let let let let let let let can certainly do that. Thank you. ENTC is also March. Yeah. So, I mean,"
  },
  {
    "startTime": "01:06:02",
    "text": "That, Neil's announcing the check size. I I I like your humor. But, no, I'm I'm really, really pleased to see the outcomes and, could no to all of you who took, took part and made it as possible. But, you know, second to your thoughts, that saying in Germany, how do you eat an elephant? One slice at a time. Yeah. So so, yes, I think it's great. And, I would really, to notify the elephants that does not go into the nose. Sick. That's okay for me. But, yeah, so we as you know, we are still considering, VF for deployment. And so I'm really pleased to see that, there's a progress However, I would also, I need to say no, like to see the other mainstream vendors to to chip in. And, I think you have set the bars jointly, And it's, now for the other vendors, to take up the challenge and prove that they're capable to, I guess, Don't call them to action. Roughly outline the check size, and the thing will follow. Yeah. The point like I said, Hey, distillation drafts. Okay. Otherwise, we'll be done. Yeah. Yeah. So really sorry I couldn't be there. I was there on and nobody was there. And, then on on Sunday, somehow other things popped up. It was really Super. So, yeah, special price of the jury to whoever, kind of carried the the the most heavy box. On the other hand, I'd I'd really love to see so there is at least one free implementation, right, these these these free router stuff, right, p 4. Yeah. Yeah. The free router. No. No. No. No. The free router with p 4. Yeah."
  },
  {
    "startTime": "01:08:05",
    "text": "But, I mean, so one of the demonstration vehicles that really worked well in the past you know, for people that don't wanna carry hardware is really the one single single big VM or so where you can set up virtual network with all the stuff. I'm I'm wondering if that free router stuff would allow you to do that. Right? So a demo where you're just run the application. It has a couple of virtual routers and you just can play around it with with with a complete network in your on your notebook does the free router would would give you that? Yes. It's part of that. It's part of this testing as well that you can run multiple, free routers in your laptop. Yeah. Yeah. Yeah. So, basically, it would be great just for any research or even, you know, in in in customers. Right? You just have a single VM image. You download and play around with it. And, when that passes you, then then they'll come and ask for, let me carry a box. Thank you very much, Jeffrey. Away. So just just a note, the request the idea for an interrupt went across the list. And, then I think it might have even rattled into a handful of people, but, you know, we've bounced back a few times. And still, some people said they hadn't heard about it. That's gonna happen. You know, I the the list doesn't materially pop out to you. You gotta go read your email. And it gets buried in the IETF noise. I totally understand. So if we do this again, I guess we'll have to do, like, formal bold type announcements over and over again on the list, get people involved, just make sure they or at least give them the chance to say no. That's more important, really. So everyone's been informed. Everyone can show up and everyone has a chance. And hopefully that the seats at the table continue to grow. Thanks, everyone. Alright. Next bit of slides. To USPS. That's really quick. Right? I can't print it out. I have run I'm talking about 2 extensions."
  },
  {
    "startTime": "01:10:00",
    "text": "OSB V2 and OSB 33. Next page, 1st, I would assign the AC last 20 Jeff and the Thomas for the comments and suggestions. So, basically, updates to the previous person including merging 2 documents into 1, and then some editorial changes. So, basically, a bit more emergent OSP of the 2 extension and, pfv2extension into one document, next page, So that's the merchant version look like. So this version contain most protocol extensions. Next page. So would like more comments and also ask him for last task course for this one. Jeffrey, yeah, go ahead. So, I see you merge the those 2, but, What about, is that only for bid position? Or what what about the this ID advertisement. Is that all included? Oh, yeah. Yeah. So just the in the list, Okay. I'll just order comments in the last last Everything. Okay. Great. Okay. Jorless? Your hands up for the queue. Is that Oh, I'm not remembering I can cut your hand off right here. It's gone. Oh, Andrew. So, yeah, forgot to use the queue. At me. Can we also just because this deals with OSPF also just get this one just just take a look at it in LSR as well. Just to avoid any complexity. So let me send that to MSR for review. Yeah. I lost the chase. On my action, items list. Yeah. Alright. Questions? You all next one. Yeah. So, continue talking about the BRG. For broadcast link. Next page."
  },
  {
    "startTime": "01:12:02",
    "text": "So first, thanks to Greg and Sandy for the comments. The updates to the previous version including 18 regions. For duplicative packet, pockets, and some, 84 changes. Next page, Basically, the two reasons for duplicate packet. So first reason is that a bit a bit of position is local to a note. That is that the position is for link from myself, to the other notes. Because of this, because of this, every node x Well, only handle The build positions in a pocket. That's for the link from that note. So for example, here, just look at the but because the tree here, So he's in in in green color, So node a, for example, at state 1, node a, Only handles, the peace position troop prime. Is the, you know, red color So you just, because this tool is for the link from a, to be and they should just send it package to to be. So that's only can do that can board the other bigger positions. And then at the number 2, only handles in position 4 16 then send a package to to g and c. And the edge step 3, know the g only handle positions 14 and the 19 and then use position 19 g was impacted to node h. And then this is the first time node age received a packet. And then it is the certificates 6"
  },
  {
    "startTime": "01:14:00",
    "text": "know the c will handle peter positions 12 and the 19. For p2p2p2p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p0p know that C was in the pack to know the edge again. So can see that not age. Receive Same packet price. Next page, So this, one reason, another reason is in the next page. Another reason is that missing information or not enough information. For port forecasting We know in IGP, we have DR and the DIS. For broadcast link. That means we have a pursuit node for each broadcast link. Here we just represent bypx. We can see that because in the be the position assignment, We only consider half of the link And then the other half link which connect pursuit note to the the notes connect to the broadcast link. We just don't know information for that one. Because of this one, And then That's the, I think, one of the region the duplicate packet So next page, So as soon as we add this mission information then just sign the the Peter position to the asset direction of the link which connects the shoot a note, to the to all the no effort notes on the forecasting link and then this problem got resolved. So next page, So this is just a good example, and then we have this new be the position assignment and then we go suit Egypt each procedures on everyone knows on the this tree and then we're are not having you put your package. Next page."
  },
  {
    "startTime": "01:16:00",
    "text": "So I would like more comments and also ask for for and calls for this one. I think this is a question. You know, 6 Yeah. Alright. So we issue adoption call. First, I'd like to make a clarification for, Jeffrey's comments. For the PRTE SPF extension. The gift idea advertisement haven't been merged in your soft. Which one? Vista ID. For key packets. Yeah. Check about check. No? I have updates. What are the comments? But that's the trick. Yeah. Yeah. If I'm missing that, I had no issue there. Yeah. Yeah. I remember it's a old every camera just really carefully. And then address her carefully. Okay. That's, for the previous job. Okay. And for this structure, a direct to see because if we read the the FC for 19 92.62. Carefully, and we will found that there are many duplications for in the PRT deployment, such as, for in order to reduce the BP reassumption. So many many age routers will share 1 BP. So this, your solution counts, solve these situations. And the your solution may be make it worse in case the PNC. Flag is used. ESC. Do know the clear flag. So I think this draft to cancel some information, cancel some situation, but not all the duplications situations in BRP. So I think if my opinion, if this drug has been, implemented"
  },
  {
    "startTime": "01:18:00",
    "text": "and the deployed, maybe you can go, go for EXP. And if there is just a paperwork, Please go information. Yeah. My opinion. It's okay. But that's I think this one, I carefully read through that RFC regarding to forecast link. The diff assignment, So I think in that RFC, pitassignment is only on one direction of the link. For connect connect to the pseudo node. So that's missing information there, and then we need to add the missing information. But that resolved the duplicate packet in for broadcasting. But for for the other duplication and then maybe that's out of sight of out of scope of this document. I I know maybe we'll have modifications somewhere out That's why maybe we need to work on that one. So just so, color pasting beauty. Right? Yes. Yes. Know. I know. Yeah. Thank you for you. Suggestion will commence. No. There should be a good discussion. So I encourage extensive discussion, okay, the stuffs worth doing, if it only solves, you know, partially the thing and the stuff that you mentioned where the stuff deteriorates. On the adoption call before we start to move and know, push it on the LSR and days burn cycles. Thanks. Right? Oh, got it. You hear the questions. Comments, comments, vegetables, All right. Thank you. Thank you for us, nothing. Really? Alright. Because we've got Yeah. You loop. So it's 1 minute behind. Alright. Good. Applause for the chairs for the incredibly tight time management. 2nd. And just push"
  },
  {
    "startTime": "01:20:05",
    "text": "Good afternoon, everyone. This is from HCC. Today, my presentation is a group. Avoid use segmentality. As I can Kendra, Well, there is a loop proper impure forwarding. As sure in a finger, the multicast, the per pector, same for R1 to R9 is initially forward along the path from up our end to up to to our street. Awful and, If, yeah, at night, When the link between R2 and R3 fails, ARPU will detect the alert to us rate is unreachable. And send a pack to backup enabled. Assays according to the f r. If the convergence of our seats is slower than let of Apple. During the low team convergence process. Went overseas. They save us multicast packaged asses was send a message that to up to this is a low if assist convergence faster than up tool. During the fall recovery. It's also a rule between up to and assist this app. To resolve a problem. We proposed a master. Using SR MPS and the S obviously is to ensure that be a message can be forward, loop furnace, furnace, during the ITP com convergence. Upon,"
  },
  {
    "startTime": "01:22:00",
    "text": "to approach change it. PFR performance convergence process as corrupt. Step 1. After calculating a new path to if we are in, interval BFR installs BifT for Naval. That can still speak to to PFE. Yeah. We are, is Brexit pass. Within the interval, much faster, packer. Forward along the espresso pass. When it when when the interval elapse BFR. Install the normal poster convergence forward entry. The the in the finger. Within the intros, interval. Our one will forward the love to our night. Along the link between our selling and the r a. This the question, Torless. Yeah. So first of all, correct me if I'm wrong, but I don't think we ever get a real loop No. Just once. Yeah. It's not even looping because we're resetting the bits. Alright. Dropped, dropped, dropped, different to this queue here where, you know, I'm getting in the queue and I need to delete my bit myself, but So unicast has worse reaction on the microloop problem then beer, and then the problem is when we're starting to build workarounds, that workarounds get into conflict with the CPU time that we actually spend to resolve the micro loop first. Hold scar tissue to know that. Right? Yes. No. No. But continue. This is our, method. Country. We have 2 Mesa. MASA 1 is"
  },
  {
    "startTime": "01:24:00",
    "text": "BFIR user concept of pqspace for TRIFA to generate a s r MPLs, and the SWC space is the is press pass from p node to q node. The second semester is, PFIR. Electry generate and, express the path from BFI are to, kill you know that. For, for marijuana repair list of SRM PROS is know the state of PE and the urgency state. Of p to q. And the fall, for paralyst is and the set of and the and the x of p to q. To, for master tool. The repair list of simpires is a general set of, a general set of of what BFIR to kill and the the of sservices is and the acts of, BFIR 2Q. This is not his lease is it's an an example. With their useless finger. The source is connect to connect to R1. They are 2 PFE. Our night and our time. The broadcaster same from R1 to R9 and R10 is initially forward along the path. Our up to us to be asked for and the online and, and the app attend. When the link between R2 and the R3 4 false. Or the lingo fall recovery. Uh-uh, we'll calculate a little repair pass for each the"
  },
  {
    "startTime": "01:26:03",
    "text": "step 1, calculate the the PQ node for on that and the RPM. The result is long result is both both BFES have have a same PQ node our aid and our server this tax theory. So, so, like, 2 so 2 the 2 BFS, online and offline were useless and repair parts. ITP Convergence process. R1 were forward. Packetor to, 8. 1st, after, our ad received the message it will copy, packet packed to online. And, Ahpen. Let's wrap his this is our per limited idea. Any questions and the comments are well Jeffrey so regarding to comments, whether beer can loop. I think, when we say beer to non because here to be so as we forward. The here, the situation is that for the same BFER, you forward to next hop. And if the next hop somehow has unicast roofing problem, he missing back. I think that's the problem. So as long as the unicast does not have the loop or or or your loop problem, we we we we should be fine. Even if Unicast loops, you're extinguishing the bits So when the stuff turns around to where the previous node, the bits are not set anymore. So we'll you know, we will not try to look Without that beer would have never happened. But the clearing, if we're talking straight beer. The clearing is the end bits. So, they don't get cleared. Until you've divided them out. So if it went from 2 to 6, is still has 9 in the list. 9 didn't get cleared."
  },
  {
    "startTime": "01:28:02",
    "text": "Right? Unless it replicated something to 3 as well. However, 6 is shortest path to 9 is not changed with this failure. I don't see how 6 would send it back to 2. So, to be honest, I I eat on the spot to talk about that, uh-uh, possible open condition I I will have trouble to to do that now. So my my main point here is actually that's even if the do do problem exists then the the unicast a solution for the loop or, microloop that can be, applied to beer as well. Basically, peer just follows the unicast as long as your unicast does not loop. You should have no problem. I think that's the the the more important point I want to convey. And here's my observation. We actually don't have to extend beer to do that. I mean, if you're really that you know, concerned about this scenario, you can basically and fall back on rapper to go to everything directly with an SR tunnel. You don't need any special beer, you know, magic, magic, Yes. My phone is locked. Ah, okay. I mean, there is a little bit of of, a sad history, which So, Stewart Brian and I did did all this, you know, ordered convergent stuff. For, the multicast. And, then also we had, ice and others, this whole make before break based on that, but the unicast people kind of didn't wanna have that unicast stuff, but rather LHA and other stuff. So, yes, We know how to do things much better in unicast, but what they did for unicast themselves wasn't adopting these things that work best for unicast and multicast. So I mean, I'm I'm really not sure if if this problem is really that relevant as far as, you know, overcoming the issues. So it's if if people send up and say I have the use case, I need the performance, the"
  },
  {
    "startTime": "01:30:00",
    "text": "that's fine, but short of that, So, just wanna share We got a minute. Shared just something anecdotal when when I was at a large court 3, 4 years ago and that had enough of me. We had implementations, and we did test and my my primary interest in testing was convergence time. Mean, that's one of the many things that drove us to beer, but that's one of the the biggest changes operationally, especially at MVPN, you get all this layered state, all that gone. And it used to be All this management of your network state multicast to ensure that your replication, or excuse me, your convergence time would be acceptable. What you get now is deterministic. Convergence. That is it does not matter how much flows state you have. It's just apology changed it. And we're seeing, like, just a pointer shift to a fib change after unicast changes, and it's it's you know, microseconds. Yeah. I think one of the common things that you do have in route is for a long while. Has been the ability to prioritize a certain type of, prefixes. In in convergence so that those are converged first or rather downloaded to the forwarding hardware first, which is where the problem lies. And typically when you do have an IPTV or other important multicast deployment, yeah, you can put prefixes into that list and your conversions will be very fast. So that it just added beer allowed us to layer replication, on top of unicast forwarding instead of you know, integrating all that stuff together. So if you've tuned your unicast, Well, beer's just gonna ride right on top of that. You know, like I said, it added some single digits of microseconds on topic conversions. So I would be fascinated. Those who have implementations, it'd be fun to see some of that data actually here if you could sometime. Another point about whether we will have loop or not, I just realize one thing. For a particular Copy to to eventually reach a particular BFER."
  },
  {
    "startTime": "01:32:00",
    "text": "The bid for that BFER will never be set reset and on the past. So because of that, there could be loops, uh-uh, if unicast is loop. But once you address the unicast loop, We're all set with beer. Yeah. Correct. So if this it's basically a single rep indication point that these guys can reach. They will be flipped off, but if it's multiple BFERs at the end, yeah, the beats stay on. So it's correct. So it was a fallacy thing. K. Tortoise, I saw you had your hand up. Did I just chop it off, or did you actually okay. Top A more questions, comments, anyone's staying till flying out tomorrow. There we go. Alright. I think there's gonna be a beer crawl around here somewhere. Thank you. There we go. Alright. You can get a happy handshake and a slap on the back. Thank you guys very much. Thanks, good session. We're on time. Good content. Thanks. Alright. Let me put you on my next night. Yeah. Yeah. Yeah. I'm heading for the airport in 15 minutes. So"
  }
]
