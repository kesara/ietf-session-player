[
  {
    "startTime": "00:01:01",
    "text": "Also, some tips regarding the meat echo usage which I guess you are all familiar with because we have these regular conference calls And so you have been trained in using Meet Echo in the meanwhile. but there's a blue sheet wandering around. somewhere, and that contains a QR code if you haven't scanned the QR code yet. Please do so. So you can actually add yourself to the queue, and we can also record your attendance That's quite important. this slide just shows a couple of pointers with meeting material, meeting minutes, etcetera. what is probably more important is meeting minute taking. So I'm going to take some notes, but I would appreciate if you could help me"
  },
  {
    "startTime": "00:02:00",
    "text": "complete those notes specifically, and if these discussions get a little fast, I might have difficulties catching up with all the discussions the The links It's also found in a meat echo. as you you foresee seen during our weekly conference calls. Is anyone who is going to join and help me out Awesome. Thank you. Roman? Hi, Hannes. I just wanted to to to out of administrative thing kind of very early. You were talking about meeting minutes from kind of previous meetings. I know this working group has a very successful weekly cadence I just wanted to remind folks there's a thread on the larger IETF mailing list. that as a reminder to certainly working groups that have these high cadence regular meetings please be sensitive to the fact that folks check agendas kind of advance and may make decisions about whether to join the meeting. So, again, all the right things are kind of happening, but just as a reminder, make sure agendas are out, minutes are are kind of done. And so this is all kind of very important Hannes kinda pointed out. It's important for the transparency in the organization. So -- Yeah. That's that's that's important. Yeah. We try to So we had some problems scheduling the meetings and putting stuff out there, Those will largely technical problems. Just didn't show up on the list and these type of things. but it got better recently as and I've also posted mails to the list, to explain what we are going to talk about and some of the topics, obviously, surface on the meetings before, but we highlight this, in fact, actually, just yesterday, After discussion with John, we have send out another meeting invite for next week is Monday meeting, if they attend that topic of a kind of a postitf"
  },
  {
    "startTime": "00:04:01",
    "text": "discussion. Just checking on what has happened who has what action items? What do we need to do next and so on? Okay. So the updates updates since last IETF meeting as as mentioned, we had these conference calls. It took us a little little bit of time to get those scheduled because there was We want to give everyone a chance to waste their opinion regarding the the date of the day of the week and also the time slot But in the end, it turned out that the most preferred slot was actually the one we were already using. So it turned out to be a little useless exercise, but I think it was still worthwhile to do that in case someone or a larger group of people suddenly decide to that they have now changed their schedule and so on. So I think he was he was good. Yeah. Honestly, and and and to John, I'm gonna share. So I wanna kinda wanna thank you for that. I mean, this is some of the substance of the discussion on the bigger community thread that work in groups that need regularly regularly kind of check for new participants. And so you are following kind of all those processes and Thank you for leading my Yep. It's required a little bit of extra effort 51, but I think from a perspective of being inclusive to participants throughout the world, I think it was important Okay. folks in the group updated the architecture document in time for the deadline thanks a lot for that. and we have a discussion later on and agenda about this. And then the use cases has not been updated. So there, will bring this up again in the in the in the discussion slot on whether that I document is maybe close to being wrapped up. So So that may, of course, be good. We remove the reference to or we move the text from the use about the use cases from the architecture document pointing to the use case document. So I think everything in"
  },
  {
    "startTime": "00:06:00",
    "text": "in terms of use cases and now concentrated in one document which is Good. Okay. Another thing in terms of outreach, we obviously have been talking to various and folks over the last, let's say, a year from different communities who work in supply chain security, areas. and have invited them to join our conference call to share what they are doing. And and, of course, if you know someone and know a group who's working on that topic, we're happy to have a presentation or some discussion about what they are doing and how it relates to what we are doing here, And it was most recently, we stumbled across a ISO Group 22373 and that there is a working group in ISO, a working group 4, which works on at this authenticity, integrity, and trust for products and documents and they are working on a framework for supply chain trustworthiness And John and I have been talking to but this depends in that group, the convener of the document, if that's the right term, of this framework document And we are going to Work out the maybe presentations of, like, presentation to their group from our side and vice versa. So we are all on the same page, But my current understanding is that the this work we are doing here in this group nicely fit into or aligns well with what they are doing DES is a more abstract framework while ours is a more specific instantiation of that framework. kind of an implementation of what they are doing. So But looking forward to that information sharing. Will Skechers something doing, like, next 2 months or so. Yes. Sorry. only before 1 certainly before 118. Mintura Just get a guy. Okay."
  },
  {
    "startTime": "00:08:00",
    "text": "Yeah. We plan to continue holding these conference calls, they have been quite useful people. It's like, obviously, we also ask them whether those who participate in those calls thought that they were worthwhile or which we change the scope of the calls, And then we got positive feedback and Yeah. And, also, we will run them through the summer vacation period even though some people may not be able to join, for some weeks, but we would any decisions that that are made will have to be confirmed on a mailing list anyway. Okay, last slide, And so this is, again, remind about the agenda. So next is the hackathon report, which John will walk us through from what happened during the last 2 days, then we focus on the main topic for today's meeting, which is the architecture, And then we have some buffer. buffer time to talk about anything you like. that's it, and that's it. almost anything you like. Any agenda patching, any feedback you good? Are Okay. k. So, yeah, I could do that under 1 slide. Okay. Yep. So to be again on the hackathon, because I don't get to write a lot of code in my day job. So do it at weekends here instead. just just just Is it? Dicky? Okay. Thank you for flying flying Spirit Island. This way, Okay. This is not I'm learning every day. Absolutely. Okay. So if you hit the hit the button please, Hannes."
  },
  {
    "startTime": "00:10:01",
    "text": "Yeah. It was a very active hackathon again. go always have this sort of mixture of spec hacking and code hacking and idea hacking. So lots of stuff happened. I'm not gonna go too much into what happened in the spec hacking because they are sector update later, we'll we'll we'll cover all of that. But it was a a great active team. Lots of people taking part, and I just have the privilege of of presenting what sort of came of that. So the hit the button again, please. So it's worth remembering or explaining for people who are less regular members of the Skip working groups, what we fundamentally set out to do. because it can be sort of distracting or confusing drawing a line between technology in applications or drawing a line between security and privacy and transparency. And these are different, but only subtly different things. And skipped fundamentally is defining some building blocks. It's not a full application. but it's defining useful interoperable building blocks for enabling sort of supply chain type use cases. and the fundamental promise? Is is it just a quote from near the top of our architecture document, there are 3 fundamental things that we're trying to do. making sure that you have authenticity, making sure that you've got proof of origin, of your artifacts and statements making sure that you got non pudiation. So people can't yeah. There's no no takey backies, no shredding. If you've put something into a supply chain process. then it it stays there and it's reliable. and and so on and so on and then down to the the other issue of non equivocation which is a big a big difference here. People often ask why aren't we just signing stuff A big reason for that is non equification statement. So you can't say to one person, hey. This is the contents of my software package, and then you say to your hey. No. This is the coffin, contents of myself and package, and everybody goes away evenly happy, but you've never actually, you know, made any improvement in the world. So"
  },
  {
    "startTime": "00:12:00",
    "text": "important to remember those those promises, and these are kind of things we're trying to prove. So button, please, Henness. I've got don't see that really hit again. It's my my cute trick. of highlighting. So the intent of the code hack bearing all of that in mind, was to see if we can actually build, a useful supply chain integrity, transparency and trust application. on top of the the building blocks. And, again, I use those words advisedly, you don't create a whole application out of the building blocks because they're not enough on their own. But, you know, is it possible to do something useful using those as a sort of critical key interoperability point for the necessarily multi party and multi application world of of supply chains. And a couple of things I had really started surfaced in our regular cadence calls over over the last few weeks. in the area specifically of indexing, This came up a little bit at 1 16, but it it it's really come up in in recent times of how do I Is it elf? No. It's still not enough. okay. I don't think it's picking up here. So the Yeah. It's the BTECO. That's why you have the on-site tool. but but but fine. So get my foot back. So so one one thing with supply chain evidences. You've got multiple different ways of finding and assessing and relying on it, sometimes you might have a thing in your hands And the question you wanna ask is, is this the right artifact? So did it come from the right place? is it still, you know, has it been tampered with? it been superseded or revoked? That kind of thing. So I've got it in my hands. very simple. I simply check it. in that case, the cryptography is kind of easy and straightforward and everything worked. But there are many, many more messy situations where you maybe don't have the thing in your hand,"
  },
  {
    "startTime": "00:14:00",
    "text": "or you know what thing you're looking for you don't know where to look for it. or, you know, variations on this theme. So we absolutely didn't want specify in Skit itself a generalized deep semantic search feature. but we do want to make sure that applications are capable of having deep semantic search features for this silos, are then translatable and relatable and deterministically bound to or related to things that end up in the skit. Transparency service so that the world the world carries on. So it's a bunch of those things. And where we'll see in the architecture section later. some updates on sort of very specific wording or whatever. where the outcome of of this hackathon opposed to land at is, you know, where do we actually draw that architect were lying. What is the boundary between very low level, Cryptographic primitives and little building blocks that allow you to create a mercury proof and things that are able to search global registries of software and decompile them and exquisitely determine full, you know, from binary s bombs. And, yeah, in between those things and, you know, where do we draw that line in in in skips? So hit the button, please. Nanis, So I had a a plan. I posted this to the to the to the mailing list. I hope that you will all saw that. sort of pre committed to what I was hoping to do. and the outcomes that we were looking for, was to show end to end demonstration, attesting and verifying a vendor response form, again, for folks who haven't been in the meetings, this won't mean anything to you. But Dick Brooks, one of our more active members, has a use case, for medical devices where similar to a lot of the software transparency, regimes going on right now. They're not necessarily going as far as having or automatically"
  },
  {
    "startTime": "00:16:03",
    "text": "verified s bombs and so on sort of in public on on transparency ledgers, but they do have to make very strong attestations to claim, yes, we've been through due process. Yes, we've done the right steps. And here's where you can find all of my information. So if you need the s bomb or you want my security reports, you go. Yeah. I'm I'm I'm living in some degree of public. Here So we agreed that was a good test case. It is generalizable to many other test cases. and we wanted to show that you actually can can you skip to assist that that process of publishing and verifying VRFs. We wanted to drive the spec forward understanding where particularly company identifiers come up, so this is a subtlety as a little detail of what we're working on in the in the working group. But the idea of identity is in in one sense, super duper important. And in other senses, kind of irrelevant. And what we need to do is unpick why we have identities specifically in the sketch layer. So, again, when you've got a application and businesses running applications, It's kind of obvious why we need company identifiers and and and logins and all sorts of things like that. But very specifically, in the supply chain integrity components, What does it mean to have a company identify? Do I actually need to know next to the cryptography, what the Dun And Bradstreet number of a company is or what their tax status is. Or, actually, do I just need to have something in the syntax allows me to ascertain that a statement coming in today, was created or issued by the same entity for whatever that means, tomorrow. Right? And and and these are very subtle and go go I see people in this room who have been wrestling with this for well over 20 30 years by now. and and we'll never solve that problem, but we can solve the problem what part of that layering skit is concerned with, and that's what we wanted to push forward."
  },
  {
    "startTime": "00:18:04",
    "text": "And then, yeah, the the other big one, as I mentioned a moment ago, indexing and storage and search and all of that stuff. It's definitely an application layer question. There's no question about that, but how do we act support it with the skip building blocks underneath in a way that is sort of commercially supportable and maintainable. and if you hit the button, please, Henness. Fast forward to the good bit, that should be ticks. Meet echo needs to have unicode support. So did all these things. All of all of those things were proven to some degree. So I didn't actually manage to do One important thing which was interoperable submission of plain claims. That's a thing that was left over from last time. I didn't get that into the interop client, and I failed to get it into the interop client again. but we did prove lots of these other other things. So, yep, button, please, Senes. So what we can see on the screen. Actually, just hit it again. Nobody can see the detail here anyway. So what you can see on the screen here is there's slides are downloadable. Right? So if you wanna see the detail or spend longer, see the detail, get a microscope out on the on the slides. You can do that later, but for these purposes, all we need to show is in my application, which is very much a hybrid application, so it's kind of you know, Mongo databases and and all sorts of regular web 2 cloudy stuff on the top, and then it's Merkel Trees and things all the way down on the bottom. I was able to pretty easily plumb together sort of search index. and then a test that through standard skip, cozy envelopes. and then go back around the other way with the interop client and pick up the, you know, retrieve the signed claims and get a receipt and and verify the local tea proofs in that receipt. all the way end to end. So so Something that's not on here. Maybe I'll record a video or something."
  },
  {
    "startTime": "00:20:02",
    "text": "if if people are interested, but something you can't see here, but is is important. that using the application level searching by certain keyed indexes or indeed by hashes payloads and things like that. that you are able to search for those 3 promises. So it's not simply here's a receipt for something that's still very equivocal. because But rather you can actually take that payload, assess it in the higher level index application and see, you know, this is the only one we ever had. and by making other signed statements or by putting out other we've had a a a rather joyful conversation about QR codes recently. You know, if you wanna put QR codes physical one on a box somewhere. So something that some of my customers already do. then you've got a fixed We call it feed. of the attestations and the signed claims against a particular thing that then can't be equivocated or changed because people just see this one set of stream of statements. which which is kind of the the the last missing bit to making this VRF ultimately, which is what we're doing, trustworthy because you can be sure you've got the right one. and you don't have to keep doing those manual processes or checking for, you know, second versions or or or whatever else it might be. So yeah. So we've got it working, and it's cool, and it's completely demonstrable people want to see a a demo as I say, mate, I might just put a video up. So like, please send us. So Dick has kindly provided some some updates of this. We did say end to end, And again, you know, many of us here, I I worked within a former life doing things like end to end or point to point encryption and, you know, the question is, well, what happens either side of points or on the other end of the end, and it never ends. So we've got a nice self contained skit end to end that I did during the hackathon In this room, which just shows the registering of the signed claims, turning them into"
  },
  {
    "startTime": "00:22:02",
    "text": "goes envelopes and then seabor receipts. Dick then took that a stage step further. So what we've used here is a real vendor response form. Again, you know, you got rid on the screen, but it's all checked into our GitHub and things. So treat this as a Yeah. And it was on a million just two. It's on the mailing list as well. So you can get these and and look at them if you want the detail. So Dick actually went and took it a step further and plugged in my implementation from the room downstairs, into his real software, software, attestation and trustworthiness verification software. And if you the button, please. and one more. It's kind of a build here. You can see as part of lots of things that are going on because, you know, this is still a messy world, and there's lots of processes you have to go through. but in amongst the pile of evidence that's being assessed by the REA tool, that that Dick's working on. It's actually able to use the they are tested properly recited properly, sketched, I don't know, armored, whatever. reliable file from our from our registry. And, obviously, The more things you start to put into the registry, the more of those can be automated and and trusted shared around between tools. So the the upshot of the of the hackathon, you know, successful collaboration. I mean, Dick and I didn't really speak very much during the the weekend. but we were able to collaborate using the Skip primitives using the implementation to get a fully end to end example of a searchable, middleware, a skit, underlay, and an actual commercial tool, tool, that's able to use this technology to better prove trustworthiness in digital supply chain I think is a is a great thing, and thank you to Dick for for for doing that extra work. So one more."
  },
  {
    "startTime": "00:24:03",
    "text": "Yeah. So just to to summarize, the VRF use case was was proven end to end, and I think that know, as I said, it's very generalizable. you doing doing that kind of thing. It's it's notable that it's a complete payload. So something that might not be entirely clear. We we put of XML files, and we put up JSON files it is obvious to say, obviously. It is It is clearly maybe use that word. It is clearly easier to generalize cases where the whole payload is sort of consistent or self integral, meaning it's kind of all or nothing. it would be much harder to maintain the kind of clean architectural layering that we've proven in going through, if you had to actually look inside each individual element The VRF includes things like tax numbers and email addresses of contacts, and it has a a set of sort of product codes in it. So the software supply chain assessment tool, the risk assessment tool, the CICD systems, whatever you wanna call it, the thing right at the top, the application that actually processes this data Obviously, that has to go through and look at the detail and pick out bits it's interested in and go off and reach across the Internet to look for VEXXs or, you know, VDLs or whatever else. what we managed to do in Skit is as long as that is a discrete payload, This generalizes perfectly well to any tool or, you know, more or more recently. lots of tools all picking up the same thing, knowing they're working with the same thing, knowing they're working with same data, and then whatever their special application cases or their business logic is, they're able to do that in confidence without having to request another copy or, you know, having lots of bilateral signature arrangements or something like that. That was very good. couple of other use cases. So Ray I think has Ray gone home?"
  },
  {
    "startTime": "00:26:01",
    "text": "Yes. She is. Yeah. Ray is not here today, but Ray was Ray luck another of our very active members was here for the weekend. and his primary use case is actually looking after the integrity of votes. citizen voting in particular. We had a good chat about applying this sort of proven technology. His use case seem to seem to work and make sense. And we also had some some good sort of first time second time I've called you out. I'm gonna keep doing it. First time, participation from AJ looking at again, that higher level issue of, yeah, let's say I've got vulnerability information or something. or a bunch of s bombs or 10,000 CVEs, looking at digging into the detail of that and working out well, given that I now have a trustworthy source for CVEs and so on. can I use the the interoperable skit emulator to to work that out? And I think We haven't answered that yet, but it it's looking like it's trending in the right direction. So challenges I'll assume I'll recognize you after this slide. Sorry? was hi, Roman Daniel. I was just asking about the election use case. I was Okay. I trying to crosswalk that against the narrow charter scope of software only. That's an interesting question. It's it's digital. So there are software elements to it. there are non software elements to it as well. So it's It's a good question. It's not it's a it's a thing we haven't worked on yet. so we could We could look through that. We got Roy 2 now. Actually, it's Roy Williams. when we chartered we actually expand it out past software. Saying the building blocks are valuable for other. Yeah. scenarios and that's what what why we pull in some of these other use cases. this is perfectly acceptable as far as my understanding. Yeah. Well, so my my recollection, and I think my recollection is documented is that indeed. And we have the the use case"
  },
  {
    "startTime": "00:28:03",
    "text": "were accepted with the with the cold chain use case, I think, as as as evidence of that. But we did commit to the solving of prioritizing, let's say, the software use case first. And I and I think that's what what Roman's getting at is that if we don't have that done, then we can't very well move on to the other I think we are very close to having that one done. and then hopefully, we'd be able to move on to other ones. Ray, are you are you in the queue? Ray? Yes. Yes. Thank you. And and thank you for pointing out this this application area, any use case, I will just say that that there isn't any real fuss that's required for supporting this within the structure that I've seen so far And so it isn't really going to require any special extensions or any anything else. It's a very simple thing really to to capture the data from the election and just post that and provide the you know, the hash value of everything up to the skid servers for visibility so the public can see it. And and, you know, that's that's just pretty much it. I I do I will jump in later about the identity issues and and the different flavors. because I think maybe some more work needs to be done there in order to to lock those down a little bit more, but but that that really is beside the point. but I there's really no worry. I don't think about dis diverting the focus. Thank you. Yeah. Thanks, Mike. Yeah. like, Thank you. This is Henk. So there are other Yeah. things that are very software life cycle specific like the secure self attestation form that is now out for review, that's a PDF Right?"
  },
  {
    "startTime": "00:30:01",
    "text": "And I think you can print it out and checkmark things on that. but it's also very much about endorsement of the quality of your software of what's called a station that's I'll talk about that. And And I think that's part of the software supply chain use case. scenario. So so there's a lot of things that I'm actual software that are, of course, part of the software supply chain. And if we reach a border where Roman Fields, actually, a little bit uncomfortable by us pulling in Aden I think, rechartering that part of the charter should also be another big issue, I think. Yeah. Gola. It's always worth having we come up on our year mark, I guess we should do a quick quick check anyway. It's just good to do that. help with that. But, yeah, the the the ultimate good news is that, actually, it seems like we sold the software supply chain, everything else just fits. as as Ray said, there's there's no intention, and we think no necessity. do anything that would derail that I can't see the queue, Heather. Yeah. Neil? Hi there, and thanks. And congratulations on on that progress. So I just had a question for for really all of you. I I mentioned it in the chat, but Sig store is doing some similar work and, especially, for this kind of simplified one off, you know, self contained document. I wonder if Sigg Store would also fit the bill for both the ballot images and some of the other things that you demonstrated. Well, if they won't so they're welcome to pile into the interrupt clients, And and if it works, then then great. I think we did some weeks ago now, we did have that discussion with some folks, I I don't know a huge amount about their integration looks are. So there to speak on their behalf. But we did have a couple of discussions"
  },
  {
    "startTime": "00:32:00",
    "text": "folks who work on it, and it seemed like it could work So I guess it's a motivation question, So we'll take I think we've got one more in the queue, and then we'll take Christopher. Yes. Christopher was first on Okay. Will they get? Yes, sir. Yeah. I'm Christopher Allen with watching Commons. I don't know. This may be more appropriate for the the architecture document discussion or whatever, but it seems to have come up impedively in these in these questions, which is I have some real concerns in regards to engineers as people. and having human rights and other challenges with over identification and correlate unnecessary correlation. And I'm really earns that we're not including them. I mean, we have 2 RFCs, what, 6973 on privacy consideration. but also 8280 research into a human protocol considerations that we're all supposed to be considering, but I don't see anything explicit in any of these documents about that. VRS were specifically designed to allow some kinds of privacy but don't address signature correlation. I saw that there was some work on, say, Jose Merkel, Kose really wasn't designed for data at rest. It was really designed for data for So I'm a little concerned, and I don't know. Maybe you guys in the heck on. When you did the Merkel stuff, we're able to to do some illusion or some other techniques. but there are very specific use cases. I mean, there are engineers in India right now that are being monitored as they write their code, and every time they use Reddit or"
  },
  {
    "startTime": "00:34:02",
    "text": "use, you know, a Google not Google, a Microsoft code AI or whatever is monitoring their usage of all these sites and basically logging it so that their employers can know, did they actually write the code or did somebody else write it or did an AI write it? I I'm just seeing lots of these kinds of intrusions against individuals, especially in India, China, other subcontracting realms of things. And some of these have definitely are costing problems now. I know of a Iranian software engineer who is not in Iran. who whose family was threatened because of the work that he was doing in the US. around human rights software. So you know, what did you consider in the hackathon and what you know, how did you use the Merck trees and the BRFs? And is there what can we do to make this solve this problem. Thank you. So I think other other people, I think the architecture section might cover the the details. But just to say, couple of things. One is that we we at the skit level, which is a very low level set of building blocks are interoperable. proof of of lineage effectively in Origin. We are strictly payloaddiagnostic We do not dig into what's inside the payload. We do not semantically interpret what's inside the payload. And so it is completely neutral. on if a thing is it includes that or not. It'd be a different a different layer on the keys and correlations and so on. Yeah. We we are really looking at the company level. So the the likelihood is the correlation you'll find, in many cases, is some kind of service credential for CICD system we really don't need to get into the details of exactly who did the Watson and committed thing and was get blamed for wherever the the commit came from. So"
  },
  {
    "startTime": "00:36:02",
    "text": "hear what you're saying. I think we're compatible with what you're saying, but the specific concerns would be handled in a very different layer, I I'm just concerned, I mean, if you don't have a fundamental capability of doing things like some form various forms of illusion and proofs, whether or not they're illusion proofs of inclusion, ZK proofs of inclusion. you know, various ways of using VRFs in other ways to do kinds of verification without actually having the data. If you don't have those fundamentals, at the bottom layer, you can't fix it in other layer. that have you know, at least have to have some basic capabilities to support these types of things. or BBS signatures or I don't know what the right answer is. Actually, Yeah. I So I I should clarify that the BRF Christopher is talking about is the verify of a random function, which is totally different than what John was talking about the BRF which is the vendor response form, which is essentially a collection of response. and some other metadata. So of course, unfortunately, a 3 letter acronym sort of collision here, but They're also Yeah. But But point is taken is definitely something we should double check specifically, like, in context of discussion we have with key trends on their use of BRF on their crip graph the cryptographic function And whether some domains require additional privacy features beyond what we are currently looking into. And I think that goes a little bit into d diverse set of use cases, and we've been focusing on software use case and then maybe very different privacy needs in other areas. and maybe privacy for individuals and privacy"
  },
  {
    "startTime": "00:38:04",
    "text": "in quotes for corporations where it's more about intellectual property type of stuff And Business intelligence kind of things, Yeah. So so point taking, definitely definitely worthwhile, we should bring this up on our meetings and talk about it. Mike? Yeah. Just wanted to comment quickly. My per rock here on a I I'm glad Christopher brought up some of the concerns around privacy, I they're important. I I think though some important things to note. Jose was designed and does work great with offline and at rest use cases. That's one of the reasons for task 6. So works wonderfully there, especially when you're dealing with Jose signatures of large assets, which is often the case in software supply chain. it's also important to note, and we'll touch on some of this in the architecture slides later. but the identity question for SCID is much more around the application level. right, and and what's going on there. So it's it's really sure. You can you can go in and abuse this stuff in ways potentially, but I think that's the case for any kind of technology or data store. Right? So I think it's something, yes, we should be mindful of. but it's a little bit out of scope. Yeah. Good. Okay. So thanks, Mike. So, Ray, I think you're next in the queue. Yeah. Thank you. I forgot to introduce myself I'm Ray Les, Citizens Oversight. and I'd like to speak to the last two well, I guess, the prior to comments, regarding sick store and this identity issue. and I think it's one of the reasons that that we are not we can have you know, it looks to me like the skit, layer that's been defined now, is will handle the this"
  },
  {
    "startTime": "00:40:00",
    "text": "the Sigm store app type of application. but there's a bit of a problem that that they've identified with SIX store and that it includes very frequently, the email address of the user. I think that's one of the things that could diverge into of the issues that were just brought up by some the speaker regarding a Christopher regarding you know, human rights and so forth as to to this is not a good idea to to add the email address into permanent you know, immutable storage somewhere. So that's why really need to look at, not at this layer, but I think it's appropriately. taken out of this layer, the identity question which is very, very It's a little bit more complex And So I'm looking at this in my mind, this low level that doesn't include it. but provides the hooks to to use it, you know, have identity included in those things. And then the next layer up, would be including identity of the company and N, the product and so forth. And above that, I believe you should not dig into the art effect until after you've cover that next layer up because really sick BS bombs have a lot of whole tree structure inside. Sometimes you'll have many s bombs related to a a product that you have to now Hatten. have to dig through. And and that should be, you know, way above, you know, that's definitely the application lane soon as you start to dig into an artifact, So -- Yeah. -- so I think that that's my comments on those 2 things, and I I do wanna say that that I'm very sensitive to the to the human rights and and privacy issues is especially within this election area that I'm concerned with is one of the key key things that we're always worried about And and so, yeah, we've got our our antennas up about that and appreciate comment. Thank you."
  },
  {
    "startTime": "00:42:03",
    "text": "Yeah. Thanks, Ray. Cedric, you're next. Hi. Yes. Thanks. I'm Selik Frohniv from Microsoft. also wanted to briefly comment on 2 of the recent I questions here if it goes beyond the lack of hands. So So in privacy, I think, they are very interesting more advanced construction than local trees that provide same integrity guarantees that feed stronger privacy. And I believe that the way we are moving the choice of cryptographic algorithms on our country. or Merkel TriNet algorithms to too cozy and the geographic agility we are adding for that. is going into that direction. So we don't have any algorithm. that is specifically about privacy that I think is room to define algorithm with additional or privacy features if need be. the the other comment was on the relationship between 6 star. and the skit. I think both of them are related to many applications with So if there's supply chains, but the the focus is really quite different. So so 6 star is primarily about the transparency of Cignature and Cignature. using IDC signing for signing for people who cannot maintain the long term standing key, which is very important usability feature, while assumes issuers would be able to sign possibly using traditional CHL, specifically even using sick style. that focuses on the transparency. of the series of 6 months. relates into artifacts. a given supply chain. So the So the two focuses are quite different although It seems"
  },
  {
    "startTime": "00:44:00",
    "text": "Great. That's a that's a very Yeah. great observation, I guess. If if if you look back on my first slide about the three promises that that quite nicely elucidated what what Cedric just said. So we have Mike ounce worth, and then I think we have the physical view. Did you not register yourself in the queue? my thought. What do I need to do? at Well, well, let's let's save it from click -- -- accounts worth, and then you can -- No. No. You you you it it should be click queue or something? Yeah. Yeah. Try it again. You're you're pro. that Mike Elsworth, EntTrust. So I'm a tourist here. Please forgive the ignorant question. I could imagine a scenario where we discover the via code compiler version x has a Trojan in it, where we wanna find and kill with binary binaries that were built with it. but that also has, you know, huge privacy implications if we're tracking tool change to that levels, thing debt developer, workstation fingerprinting, all that stuff. curious if that's been discussed here as explicitly out of scope. in scope or our our deeds being discussed in this group. Yes. At at@greatlength. the to speak to your yeah. I just think Roy Roy has more more inputs on this, and we'll gladly take them. But to speak to the broader question, about the size and scale of challenge, if you find a problem in the compiler, let's sort of squash everything that was compiled by that. it can only be better by having more quickly or to basically verifiable sources of information on that. than than the opposite. because if you're getting unverified vecses or whatever else. still have to validate those and you're still working slow time with security engineers. So to some degree, that scale and that proliferation of of point to point alerts is is a thing that we're solving very nice"
  },
  {
    "startTime": "00:46:02",
    "text": "on the duds and the rotations and that sort of stuff, yeah, it yields to Roy. So This is where I weigh in. the definition of the document formats for software supply chain dealing with the US government are handled by number of different committees and their definition the current s bomb format is what's shipping in the package and the ingredients that go into it excluding the tools, that's this discussion of using that in the e bomb -- Right. -- layer, and the e bombs are not discussed as whether they're gonna be public or not because there's still a lot of complexity around open source tooling and who controls versioning and so forth. the level of deal sale that we're trying to get to is potentially allowing people to go off and track. questionable tools, injecting stuff and making endorsements, and claims against products Those are all sitting on our backbone of what we're talking about here for Skip. we're just a mechanism for for notarizing holding data and holding relationships with verticals the use cases that whereas Roman pointed out. sit on top of it, we're gonna have additional set of capabilities and so forth. It does get into the search capabilities, and and some of those are customized by the vertical in which we're Yeah. That that that's a a a great point. Again, you know, we don't we are absolutely agnostic to the payload. So we don't care if it's a vet or a custom CVE or a printout of a fax of handwritten annotations from one security engineer to another. We just make sure that what you see at at the one end is what was sent from the other end. the one small caveat to that that that is relevant to what you said. is this discussion on origin identity because we do need to make sure that you get to choose. If you get 3 security alerts or you get one thing that says, well, I looked at this, and it was cozy bear. and somebody else sends you one to say, well, I looked at this. And, actually, it was, you know, it was a software bug. you need to know reasonably well where those statements came from in order to know whether you trust"
  },
  {
    "startTime": "00:48:01",
    "text": "or not. So there's a there is a tiny overlap just to making sure you have that consistent reliable But beyond that, we don't go into the application specifics Okay. That's good. Right. A lot of the flip talk now. Yes. Yeah. But get closer to the microphone. like this. I was super excited to come across this working group and the work that's going on and read through the charter I think some feedback. If be good to understand what's in scope and out of scope. and understanding, like, who's solving the other problems of, like, figuring out the dids and where the service is gonna be, you know, you're doing a hackathon, but I'm kinda wondering like, okay. But what chain did it go to and what did was used and all of that type of stuff. I got up here to talk about the identity aspects. it's a super complicated topic. And you're into a realm of identity that's rarely been worked to standardized. because of the temporal aspects, if you wanna know who made the statement say, a year ago or 2 years ago, And unlike people, which are the same people, Organizations merge, go away, come together, change their name. Right? That's a very fluid identity for organization. and there's not really a global mechanism for that, you know, what DNB number, is great in certain systems, but not in other systems. So question is, is that in scope or out of scope? because someone's kinda gotta figure that out at some point. I'm I'm wondering whether I should answer or whether -- in the queue behind you is gonna Yeah. -- the gentleman anyway. Yeah. Yeah. Let's send just to to to make because I currently have my chair hat off But I should put my head chair on for a second just to say, In terms of running the group and the standard and being a good citizen of IETF,"
  },
  {
    "startTime": "00:50:00",
    "text": "and and everything else. Yeah. We we are we've managed to make such quick progress US largely because we're almost entirely just a a collection of conventions over other IETF standards like cozy and seaboard and so on. which is nice and works. amusingly. towards the end of yesterday, one of the things we decided we need to do in our draft documents is include an out of scope section. to answer some of those questions. So we will we will be doing that and kinda tidying up the document, make it easier for less active participants of to consume Yeah. But still on the company identification aspect that you'd were asking about. We just had a longer mailing this discussion about exactly that topic, which repeated that this is a complicated area It's I'm Unsurprisingly, But we like, the group basically asked us to reach out to other folks in the IETF during this meeting and to act actually get a better understanding of, like, who is doing what in that space and what could possibly be reused because the group has not been chartered to solve that problem because that would probably exceed our Something. yeah. So so But Numerous technologies on numerous efforts have been mentioned on the list end Yeah. If if, actually, someone here is working in that space and would like to share what what they know and what the impression is. obviously, we'll be very It would be great to hear about that. And, also, on the scope in scope out out of scope. We probably have to bite something down somewhere To explain that better, also to pile on to what John was talking about that they hackathon because we have been struggling about this kind of layering issue that Christopher brought up Like, what is done at the application domain outside of what"
  },
  {
    "startTime": "00:52:00",
    "text": "the building blocks are being developed here and what specifically provide the building blocks. And how do they interact And also, Christopher mentioned, like, if you don't put certain features in the lower layers and the building blocks in the foundational pieces you can't then fix it at the higher layers. And, obviously, Those are some of the things we want to understand very well in in our, like, approach for layering So Good questions. Point taken sense, sir. Yeah. So Ori Steel Transvi You guys have basically covered everything I stood up to say, but I Just wanna for Pete, you know, we we have a layered approach here. There are interfaces that help us think about identifiers and that come from the other IETF standards we rely on And I wanna emphasize the the building blocks component because the question Mike asked, which is triggering requires these higher order applications that make use of these building blocks to consider and whether or not that's a good idea seems to be Not really for us to decide as we try and build these effective building blocks, but, obviously, we have to keep all these considerations in mind and There's a whole section identity that I will be going through in the future. So of if we could keep the identity rocks for when I'm up there. You could throw them at me. Perfect. Actually, in the very near future, we you were -- Yes. bucket about this. So if you if you don't have rocks, now is the time to go and get one. So yeah. So I'm I kind of consciously gone into the extra conversation time. This seemed like a good conversation, but I think kind of well over well over the slot by now. So if we could just have Dick Hart is in the is in the queue. just didn't come oh, sorry, Dick. You didn't come out No. So he he spoke already. He didn't I"
  },
  {
    "startTime": "00:54:00",
    "text": "Right. here. Okay. Good. So just to say I think we've lost the the the other deck, but just to say, you know, outcomes Yay. Yeah. We got the application working, and it's cool. But there is know, the reward for success is more work. And the more work that we got was to recognize actually a lot of the issues we were finding with working out the layering problems. we think we can fix that by being much more careful, let's say, diligent about how we define what a feed really is. I think we all have an intuitive sense of what feed is, but all of those senses are slightly different. So we need to actually write it down and and work out some structure for those. And yeah. So that'll be the next the next phase of work. And the other thing is just to say I didn't commit some of this stuff to the open source repo. but I will do in the next couple of weeks so that it's all, again, out there and try if somebody else wants to make it into a an implementation, then. Stay safe. they can do. They can do. They can do. They can do. They can do. They can do. So good. Thanks so much, and we'll move to the next thing. Yep. And if someone thank you, John. If someone is interested from those who went attending the hackathon ready anyway. to see sort of to set up their own local kind of demo come to us and work something out. Maybe we provide a a reasonably good description on how to get there. Just to get up sort of look and feel. Okay. Architecture, who's up first, Mike. Cool. Thanks, Haunas. Hopefully, that microphone pointing roughly the right direction also take take it out. Take it out. But Or you can I can't. Yeah. I I hate holding those things. I like walking around and yelling at people but ITF's not great at that because we don't have little clip ins. Next slide. I got I got volunteered for this. Thanks to Hank. So"
  },
  {
    "startTime": "00:56:02",
    "text": "Don't show up early as my advice to folks for next year. Let's roll to the first slide here, and we'll talk a bit about skin. So You know, rolling into 117 couple of big concerns. I mean, one obviously is kinda opening doors that we can't close or it can never be solved. And I think the other one is going down path that leads us to dead ends, and some of us have been out on excursions with Some of the folks involved in this working group and found it in. So that's why we have photos of that. But I think probably more importantly, despite the stickier conversations as things do feel like they're coalescing. Right? We've been able to use the emulator pretty clearly in a lot of different ways. We're seeing interoperable stuff in a lot of different areas, which is cool. Like, this is actually getting to something almost usable. And I think there's kind of a key area couple of key areas that we're gonna highlight today as we dive in. Next slide, Hannes. The key theme to bear in mind as we proceed through the architecture discussion today. is that Skitt will not be and will never be the curator of a 1000 different semantics. there are people that go after all sorts of stuff and wanted to find every detail of, like, you know, what does it mean within an app payload, etcetera. We're not going down that path. This is very payload agnostic, very, very intentionally. Next slide. So for kind of the recoupper for folks that are new two skit and folks that have not seen that, we're really after kinda setting up kind of this core data layer. Right? How do how do we go through and put stuff into a transparency log, ledger, whatever you wanna call it. Right? I think we're finally standardized in vocabulary now in the drafts. put things have moved around a bit. But it's really around how do I know"
  },
  {
    "startTime": "00:58:03",
    "text": "what software, you know, and what components in that software exist. so that when there's vulnerability, I can backtrack that stuff and identify it. cleanly pin it down, get it replaced, and move on to the next railroad problem. the nice thing, and I think there's a good call out. Right? portability, implementations. These are good things, but the good news call out point that quote right off the slide. if we need semantic interoperability of the data that is going in and out of these payloads, There's already vocabularies that handle a lot of this stuff. There's already welded find concepts. And a lot of times, regulatory stuff that tells us for certain cases what that data structure needs to be. or at least what fields exactly need to be there. And we have to abide by that. That's that's the world we live in. Next slide. So with that, couple of things in activity going on, 117. So couple couple of spec topics. identity thing is gonna come up again and again. the feeds thing probably more importantly, I lovingly get to hand over to Ori and just slide or 2 so he can introduce that topic for us all to talk about gonna be an issue. We've gotta figure out, is this a URL? Is it not? Is it a CRI? there are some nice ways of doing this. There are some things that are less nice ways of doing this. none of them are perfect. but we need to figure out a compromise. That's the joy of standards. Also, at 117 so far, we've got some great code proof. Right? Dick did some great work on this stuff. We've seen some other things. I, Brandon, was able to run some tests that'll probably show at 1 18 around machine learning assets. on things going in and out. That stuff's working really, really well. This is nice. This is cool. So I think probably more importantly, there's another area that we've seen the beginnings of thanks to John. coming from a search heuristics, you know, machine learning background, the indexing is coming along really cool too."
  },
  {
    "startTime": "01:00:02",
    "text": "like, you could do some nifty stuff, especially when we look at embedding. So we're enabling a lot of capabilities off of this stuff. Next slide. So couple of three slides, and then I'm handing it to Ori. So recent updates, if you have not been following drafts, use cases, I this stuff got refined a bit. you know, basically, the focus is around, like, core terminology of append only logs really what we're doing dealing with. We're really focused on producers and consumers of software. And then we cleaned up the use case placeholders. Right? We We cleaned up some areas and dropped in actual use cases. I think my opinion, I think a lot of opinion of a lot of folks in the group is that the use cases seem to have pretty good consensus. at some point, hopefully, during this meeting today, we go ahead and figure out if we could take this to a working group last call and move it along. So -- When maybe we can have to review as to sort of goes through it. we we obviously looked at it, but we want to have to ideally noninvoice people to actually tell us somewhere that they think this is readable. And then we would if they say yes, we would issue working group last call. So to hand get 2 hands. up some people are now disappearing. Okay. What's the time frame? I see pitch processes. Yeah. Yeah. No. Okay. Next month? So to so I see deck hold on. Well, the only thing is that you are volunteering No. No. No. No. After that. But that's better. And as you can put my name down too, this is Elliot. Thank you, Elliot."
  },
  {
    "startTime": "01:02:01",
    "text": "Asking for 2 and getting 4 is always a wonderful thing. especially when they're all folks that actually can read this stuff and tell us if we're idiots or not, which oftentimes the case at least when I'm involved. So next slide, please. channeling my inner Rory here. Couple of couple of other things going on from the overall advancement, especially in the architecture. stuff, and then we'll see some beginnings of some drafts, we'll look at later. But think key thing is text on registration policies is significant can leak cleaned up. This this is actually readable now. the there's still some open questions. Right? There there's a current baseline that, you know, the you know, stuff coming in registration wise. She can be gatecap by the issuer. That's that that that is what it is. Right? We gotta gotta figure out is that sufficient or not. The other thing around some of the transparency service items is that implementation is completely up to the provider. That's probably not a bad thing, but it's an open question. Right? So it's something we have to go in and resolve. So feedback on these items, especially on the list, especially from folks that are now looking at this work coming from our other areas of software engineering would be excellent. Next slide. So the third piece and this is kind of part of the key thing that lets get work, which is this whole notion of receipts. Right? So we now have a skip receipt is now an actual profile of a signed inclusion Right? So we've got got some nice things to go point at. So thank you, Ori and Hank primarily for doing all the hard lifting here. But we basically have a nice clean structure that is the receipt structure. You could see there. as a version number, TS identifier, and approve. which is a signed Markle tree proof. Cool, nifty. there are some additional protected headers at rebutes that are gonna be coming in. So we we might look at some of that, I believe, in some of the later slides, but that's just an area. Definitely dig through the"
  },
  {
    "startTime": "01:04:02",
    "text": "detector side. If you're looking at what's coming back when you get a receipt after you've checked something in, pay attention to that stuff, especially if you're then taking those receipts back and indexing on your side or hand the 3rd party Right? We we have to hand 3rd over to 3rd party a lot of times in security reviews, so it's just something to be aware of. Next slide, and I believe at this point, Ori's up. Oh, we got one more. This is the additional header attributes we did add. The slide up. So couple of things to be aware of. The skip receipt version, did transparency service to the actual version of the the the actual ID pointing you know, public key for that transparency service. That's a key thing. additional policy information. I think that's still being beat around, but we've got a place for it, critical headers, PID, and are we linked back to an X Five Zero Nine searching. And I think these are all good things. So just be aware go plug in through definitions of that stuff in the architecture deck open issues there on GitHub or file comments back if we need to clarify or improve any of items. So now with that, I'll hand it to Ori. Actually, can you leave that one more second? Sure. Alright. I'm I'm Maurice Steele from Transmute. We're we're gonna gonna leave the world of protected header parameters that are interesting for digital identity and identifiers. and we're gonna talk about some of the challenging topics in this space that touch on how to use identifiers for indexing, what are some of the guaranteed interoperability points that might be available to services that are consuming transparent statements and The reason I asked for this slide to be left up is a lot of identity identifier information is in the protected header with registered claim names, and so this is this is gonna be a topic that we're about to"
  },
  {
    "startTime": "01:06:00",
    "text": "dive into as we start to look at some of the identity issues in the space, but I wanna be very clear again. We are relying on other IETF work for identity things, You're not you're not we're not doing identity in Skit, but we have to understand identifiers and identity issues that come from the broader ecosystem that we are apart us apart us Next slide. Alright. I think this this may have actually been one more for you, Mike. but I I where where our API is going? We are breaking out from our architecture, some of our API specification work, the interoperability client that you've heard mentioned is is essentially a client side software tool that communicates to a back end API and helps us establish some minimal interoperability around the envelope formats and back end transparency services that might use many independent technologies to implement the underlying ledger technology that supports the proofs that are necessary for skit, So stay keep keep an eye on this. This is gonna be evolving over the next, you know, couple months as we start to focus our attention on the API and interfaces for interoperability and exchange. Next slide. Alright. Yes. So You've heard this word feed. several times And here we are with our we are not the curatives of a 1000 semantics statement again, It's important to say that upfront with for feeds because they become An entry point to so many interesting conversations is very easy to get lost. So know, essentially, I like to think of feeds as a lens into the supply chain value network"
  },
  {
    "startTime": "01:08:03",
    "text": "hypergraph. There are certain questions you have about supply chain infrastructure And feeds are a topic that allows you to gather information that's relevant to a question that you have. So that's basically most of what we know about feeds today. They're they they encode an interesting an interest for a party. And there's all of these different interesting content types that might be associated to a feed topic. So think about vulnerability disclosures and and vulnerabilities on software artifacts, and s bomb is is this a bridging technology that helps us start to start with one artifact and start to discover interesting statements about that artifact from other pieces. other other artifacts, like the VRF, the NVD, sticks, x, cyclonedx, these technologies, If you're up a transparency service that's included many different content types regarding a software supply chain a feed can express a common topic or collection of resources that help answer those kinds of questions. Bottom point on Link Data is not out of scope, but is not a target. it's worth I don't know how much folks know about linked data and graphs and these kinds of systems, but There's a a lot of reasoning and and logic that kinda comes from graph analysis when you are looking at the supply chain ecosystem, you're tracing relationships between artifacts, content identifiers, And there's a lot of value in experience from space, but it's also a dangerous infinite pit and we don't wanna fall into it forever if we can stay focused on our software security mission objective. Next slide."
  },
  {
    "startTime": "01:10:02",
    "text": "So this is where I was planning to start. identity. So identity, That's okay. Why why are we gonna talk about identity? even though I've just spent all this time talking about how we're not about identity. We have issuers, these are organizations who create an artifact In the software supply chain scenario, artifacts are like an abstract concept be like a binary It could be statements about a binary or files or printed out faxes of PDFs that have been scanned and rescanned in PDF and rescanned and You know? artifacts are things that come from organizations, and you wanna know who are those organizations what identifiers are present for those organizations artifacts. These are these products produced over time. statements about products produced over time, And the challenge in the space is, you know, I want These these artifacts represent intelligent sources I want confidence that those intelligence sources haven't been tampered with in transit as they move through a supply chain. So I care about cryptographic keys that verify the authenticity and integrity of artifacts. But then I also care about the identity associated with those keys. So I wanna know, you know, it's not just enough to verify signature or need to have some reason to believe that that public key is The private key is managed properly associated with the right entity identities, etcetera. So we get into these challenges with identity around how our keys bound to identifiers over time power keys represented in key formats, Jason web keys, X 509 certs, Cozy Key, how our keys discovered for those identifiers. Next slide. So we're gonna start this conversation on identifiers And here at the top, you can see"
  },
  {
    "startTime": "01:12:02",
    "text": "this sort of left to right pairing. This is how I like to think about this particular problem. The left hand side are the registered claim names that are identifiers for looking up and discovering keys. And these are identifiers you see in existing envelope formats today today. So you see a key identifier You know it's supposed to help you discover a key. you see X Five View, you know it's supposed to help you discover a certificate chain. how you actually go sure. is done in many different ways. Open ID connect is gonna do it one way. Other are gonna build new ways of interpreting these parameters. And this this decision point at the bottom is important, like, we enable interoperability with these existing identity ecosystem technologies via these your eyes. And that reason we're doing that is the envelopes have these boxes where you can put a URI. and it's gonna be understood as URI. And so this is an important part. Like, we're not inventing anything here. We're just using the block the building blocks we have from cozy. We're not gonna open a can of worms that is defining identity and skin. but we we will Hank. We will. It doesn't typically we will for sure support existing envelope formats that support identity representation identifiers, identity representation identifiers are different things They're very, very commonly conflated. and you're gonna see some slides soon that are gonna hopefully get into that I didn't talk about the right hand side that much. of the top examples, but those are media types that represent key formats. at The fundamental level here, we're talking about an identifier that you can use to get to a key format that you understand."
  },
  {
    "startTime": "01:14:02",
    "text": "so you can verify the integrity of a signature or proof. And so Just clear your mind and think about an identifier that brings you to a media type 6 represents a key that you can use to verify something and the rest well, we're about to get into it. Next slide. So issuers, You've heard a few times, you know, organizations are producing software artifacts, They're also making signed statements about the SARO software artifacts or other software artifacts The ISS field is another header parameter that we inherit from using Cozy. And we wanna I wanna be clear about ISS field, the issuer concept, identifiers for issuer like vendor0.exampleorvendorone.example, they could be both owned by owner dot example, and that might change over time. So we already had question come up. What happens when 2 software providers that are competing both get block by another vendor and then that vendor gets bought by another vendor in a different country, and then that vendor gets bought by another vendor in a different country. these legal entities and the concept of ownership are different than the concept of stable identifiers you can use to obtain key material And if you're interested in, like, traversing that graph of relationship between identifiers over time and legal entity you might be interested in signed claims that help establish relationship between identifiers, and there are existing systems out there that work in the space And so at the bottom, you can see a decentralized identifier representing a particular company and a URL representing that same company in a different format. These relationships between identifiers are part of how you establish"
  },
  {
    "startTime": "01:16:00",
    "text": "the organizational structure that is extractable from integrity protected artifacts. So This is not really our our our space, but we're acknowledging that in these signed artifacts, you're gonna have claims like this and know, you know, because this question keeps coming up, we're trying to explain that this isn't really our business, but this these these identifiers are going to keep showing up in artifacts. the various places. in particular, If you start digging into the payload, you might find PII or other sensitive information in the payload and our what we're making transparent is not the payload in our building blocks. And this is a point of, like, a lot of confusion. So wanna if you wanna make it clear We make sign statements transparent, If the payload is stored or not stored, that is application layer above our building fuck. Please. Bye. Dick Hart, again, aren't identifiers. A challenge I see you have is that when the ISS claim was created It was in a context of how do I go and verify a token, that in the context wasn't super long lift. compared to these potential statements that are you know, potentially years of length. Yeah. And and so I think because the use case of what you're doing in Skid is different than how these types of identifiers came up, I think you need a double click down as to how are you going to like, that needs to be thought through I mean, it's it is we're doing engineering here, and that's gonna be a problem that we need to engineer and think about. arn it. That was the statement. I have a question from your previous slide, If you want if you wanna go back. Of course, I won't. This one?"
  },
  {
    "startTime": "01:18:00",
    "text": "Yes. Yes. So in almost all the use cases I've seen for KID. It's just some random number. right, that is associated with the bundle that I got by some discovery process from the issuer so I'm kind of confused on this slide's And because it's like discovering identifiers, but a discovery have, like, your order is kinda backwards. I would start with the issuer, and then I would get a group kids, and then I would go and figure out which one was used to sign this thing. Yeah. And, of course, in typical applications, right, those get rotated every once in a while. And so the kid that was used to sign it, 2 years ago isn't around anymore for you to verify the same I mean, there's just a whole bunch of gotchas when I think how I've built and deployed a bunch of stuff that's using these things. as to how they actually map into the use case that you have now, which is It's not how these things were designed. Yep. Yeah. So just briefly the hosey world, which is adjacent object signing encryption, and Cozy have sort of similar ancestry and similar identifiers, but different degrees of support and header parameters ISS, you can't even include it in a cozy header parameter yet. There's draft work there's work. establishes that the cozy working group that's still ongoing. So presence of header parameters you might expect from Hosey, you don't always actually guarantee that you can use those in cozy. and the rest of my slides address a lot of some of the questions you're raising. So, hopefully, Hopefully, they they'll be better. Yeah. Please. I'm standing up here trying to figure out how to make this Understandable. But if you the next slide, I if you, like, take the next slide. Next slide. Yeah. So I I agree with the approach. I think it's the probably the only probably the only approach you can take."
  },
  {
    "startTime": "01:20:03",
    "text": "But beware that every time you introduce one of these name to key mapping problems, we also inflate the attack surface. And I was thinking a little bit about sort of the duality founcy works together with the CAA record. that allows to see a record is sort of an important complement to the certificate transparency in in the sense that it allows the the consumer of a certificate service to state You know? These are my suppliers. Right? And I'm thinking maybe you want something like that in order to make it sort of less likely that of these named to key binding you're gonna probably introduce many of them or or less less hard to to to attack. Yeah. It I agree with everything you said. Hopefully, some of the next slides dig into this better. Next slide. So we've already started talking about identity providers. when we start to talking about discovering keys for an issuer, And I'm backing up for a second, you know, one of the reasons we're here to have this conversation is to sort of stop talking about identity and skip by talking about identity once together here and on the mailing list, We've been talking a lot about it. there's a certain amount of sort of background in the space that you need to have Dick's definitely got a lot of experience in that space, in the space, And once you understand that these technologies and these other IETF building blocks exist, you might not ask for Skip to go invent another view of them. So I'm repeating information here not to say this is work that we're doing. to say this is work. It's already been done, and we're trying to rely on it and support it. and this is me repeating myself again from the beginning. But but but essentially, transparency services can leverage identity providers"
  },
  {
    "startTime": "01:22:00",
    "text": "understand the issuer and subject identifiers. identity assertions establish relationships between identifiers and names, and keys, and there are lots of examples of this in the software supply chain and identity ecosystems And ID tokens from OpenID Connect are one example licenses for barcodes is another example. developer certificates in App Stores is another example There are lots of these kinds of ecosystem components and because they exist in software supply chain today, We are required to understand what making parts of them transparent means, That doesn't mean we have to reinvent them or say that they're bad or, you know, but we have to understand that these kinds of some pieces of this information are gonna make their way into transparency service. is And we need to be cautious about how that happens. Next slide. So This is a a description of what a URL is, and it's borrowed from a GS 1 standard called digital link, which is related to expressing URLs as QR codes, And so we've been talking about these feed concepts And one of the things that we've been saying a lot is that a feed is like a URL or URI. or a CRI, So in other words, it's a structured identifier. This isn't an opaque string. This is a structured identifier. And so The first question is, If it's a structured identifier that's a URL or URI or CRI, what are the components make up that identifier And how can we use those components to express properties that we can use graph to find the interesting pieces that were looking for in topics that are relevant to a security question we might have about supply chain. This is an overview, again, of what a URI URL is."
  },
  {
    "startTime": "01:24:03",
    "text": "I'm not gonna read to you these each of these components, but some of these pieces have been applied consistently over and over and over again, and it's kind of worth just just thinking about in the software supply chain scenario whether, you know, for example, the path component, you can see a directory structure. And before we started talking about how Sest bombs have this tree structure. So if you're building a feed, you might wanna think about that because you've got tree structures showing up two places, is this is this a interoperability point for feeds. or is it not? like, If we say we know a feed is a URL, and we know the path can represent tree structures Well, well, Maybe there's interoperability there that every transparency service could leverage Maybe we think that that's a bad idea. We want the issuer to always be able to determine how they're going to do that mapping. And so one issuer might use the path component for one thing, another issuer might use the path component for another. is that flexibility we want, Or is that destroying an interoperability option that might help two vendors identify they're talking about the same peace. the consistent way. don't have the answers. I'm just saying URLs and your eyes exist. and they're relevant to feeds. See Elliott is on the queue. Hey, thanks. Just a cautionary note about this slide and your question. Hannes may remember or other people in the room may remember. There is a DC p that states Mark Nottingham wrote it, and it was the draft was called get off my lawn. So be careful about What you are standardizing in in other people's Name space is particular on a web server. That's the base that's the basic concern that"
  },
  {
    "startTime": "01:26:02",
    "text": "that Mark has. So I I won't say more now. It's just a cautionary comment because the document if if it it proposes to do that and the ISG will get bounced back. Thank you. Yes. And in particular, you know, your eyes with web origins and host names that domains versus other structured identifiers your ends, what working group's definition of what a URL is, like we need to be very cautious if we say that a feed has the structure and your yeah, I agree with everything you said. I'll I'll just I'll just add one comment to that. to that, which is and Mark gives you an out. Right? Which is if you really want to standardize this, there's the dot well known URI, for instance, that you can take advantage of. If you see value in doing so, as a community. Thank you. I think the the enough of a recap of what URLs are. Next next slide. So we just have maybe you have, like, a really fuzzy feeling about what a feed is now. It's the structured identifier helps us helps you lens into interesting questions about the supply chain graph, This slide is meant to help evolve that feeling over time And I wanna be clear, like, these examples that we're showing here are not, like, This isn't us saying this is what it should be. This is to try and communicate the concept and Like, you saw in the header parameter examples that the, you know, the issuer of the transparency service and the feed can all be, you know, header parameters that might sit next to each other The fact that they're next to each other relates them You can also think about turning that side by side piece into a"
  },
  {
    "startTime": "01:28:00",
    "text": "a deeper hierarchical relationship So if we say the transparency service and its registration policy control what Sign statements with feeds are gonna be made transparent. The transparency service is a natural route over feeds that will be present in it. So This is a logical thing that I'm I'm doing here with transparency identifier. It's just to say, The transparency service decides what it's gonna make trans parent, and therefore, it's the beginning of a structure of a feed even if it's not literally encoded in the feet. I identifier. This is confusing part of this slide, and I apologize for that. The goal is to say, transparency service, knows about feeds that it'll accept. it might know about issuers that it'll accept signed statements from And the most basic concept related to that is about what public keys are gonna be bound to those issuers, those identifiers, When you think about this it's not a URL, but it's sort of hierarchical structure at the top and it's an identifier for a collection public keys for an issuer over time, And we know about content types that are gonna be relevant to answering that question so we could ask Can I get a feed of keys for an issuer over time? And is that key parentcy, if the content type is a well known key content type. You might need to do where your rolling keys often from an issuer. You might also not wanna Well, Speak. Be careful using OpenID connect for things that it wasn't built for. So so I'm not I'm not I don't wanna say much more about it other than, like, we have identifiers that that that transparency service is kind of the natural authority on whether that's structures can be acceptable or not And those identifiers in turn include further structures that might relate issuers to other relationships that"
  },
  {
    "startTime": "01:30:01",
    "text": "to the issuer, such as the keys that are related to the issuer or the products that the organization the issue represents produces in one country and produces in another country and the sub components of those products and order to make sense of those signed statements about this sort of in complicated identifier space, You might want to witness, these public keys that the issue is using for these signed statements over time, so you can say, you know, if an auditor comes, Yes. I have that signed statement. Here's the inclusion proof. But, also, here's the key that I verified that signed statement with, the the time I made that statement the rep. This is a thing that you can do just by because you're gonna have that public key when you verify at the registration, registration policy layer which we've we've not talked about this this IETF, which I'm grateful for, But If you're confused about it, please read the architecture. This is an important topic, especially over time, like you were saying, and especially in a in a long lived environment, just knowing that this key was used for this identifier at this point 10 years ago, I might need some other information to go along with that, for a certain scenario. So Next slide. So I did keys first because the keys are verifying the sign statements. Now we can think about the products So the organization's producing software artifacts, Those are products that might be made of other products. They may have deeply rich, very confusing subcomponent structures and of the things we looked at during the hackathon was the CPE identifier structure regret choosing orange. I don't know if you can read this. but it has a feed like structure in it. So"
  },
  {
    "startTime": "01:32:01",
    "text": "someone has encountered some version of this problem before. You've got the vendor actually, the asterisk here before open SSL, is saying, like, any Any entity distributing open SSL versions that I don't even know about, So these wildcards have a meaning in this structured identifier sort of like a ye/ar end it has a kind of a concept of a organization product version. So that's like a sort of sort of permitive feed concept right there. built into this particular identifier. And then at the bottom is wonderful xsdregular expression for parsing these things and and thinking about them. And one of the questions we asked at the hackathon, it really truly hurt me was, you know, is a feed like the CPE identifier, or is it Like, how are these how are these concepts related? And If I'm interested in endorsements over time from various different vendors about the same product what is the sort of space of the ureric or I identifier space that helps me answer that question. That's a information representation problem in a structured identifier. Just just a thing that You can spend a lot of time thinking about think I wanna go to the next slide. So in the interest of motivating some thoughts around that, this is a a slide that is borrowed from EPCIS, which is a standard that is sort of related to supply chain information and it's it's Really, it ex the the point I wanna make on this slide is that We're doing software supply chain work. and there's a lot of physical supply chain work that has a lot of lessons that we should be paying at pension too. They've had similar problems of Providence. They've had similar problems of"
  },
  {
    "startTime": "01:34:02",
    "text": "a tax on physical supply chain that look very similar to attacks on software supply chain that There's a lot of overlap there in terms of defense in-depth security analysis, you know you know modeling, threat modeling, etcetera. And so EPCIS has some some interesting ideas for us to be considering along the way. And The point here is that you can think about feeds as being at the beginning or the end of these the higher order concept of workflows, We've all seen barcodes on, like, everything these days. You all scan this blue sheet That was the beginning of a process interaction between an authenticated user, and identifier, and it was part of a tracking experience that leads to IETF being able to tell whether we're being successful at Skid or not. You will when you scan this QR code as an authenticated user, you help the IETF realize that Skit is has at least some attendees. Like, this is a good thing. There are more complicated workflows that aren't just people cated scanning an identifier and registering themselves in a database But are a lot of simple workflows that kinda look like look like that. there click click the one that you've participated in, So you think about This identifier, this QR code that you scanned a structured identifier and you interacted with it, And then at the end, there's this feed of all of the people who interacted with your coat. So that that's so so you could create a URL for the collection of people that scan the QR code or you can create a URL for just the QR code. So feeds can be at either side of this picture, and there could be very complicated processing in between But the business problem that IETF has for feeds is, like, they wanna know how many people came to the session. they're interested in the feed that comes from"
  },
  {
    "startTime": "01:36:00",
    "text": "all of the people scanning the QR code that feed at the top of this picture. But in order to enable that, they created this QR code at the bottom of the picture that you are all scanning as authenticated users to participate in this process, for the the details in the center are probably good to get off the the screen before people get too lost in them. But we This this this concept of, like, where are feeds in the software supply chain and is QR code a thing that I slap on a product or, like, of a car or a tank and it tells me the complete history and provenance when I'm authenticated. versus a feed as a is a thing that thing that I scan, and I'm By scanning it, I am altering the data structure that that feed represents. So one of the things that we talked about at the hackathon that also hurt my mind a lot was thinking about feeds is a query that updates when the sign statement that it includes is registered it's sort of a self updating identifier in some sense. Feeds are really painful to think about. Next slide. There's no more slide, but I have a question. Yeah. So On page 3. No. The screen's definition now. Yeah. there's currently the the definition or the text on fit is pretty Smart. It says it's an identifier chosen by the issue for the artifact. and then it defines a claim which says it's a string. How do you want to change it based on what you described Now -- Sure. So I think the proposal is We want it not to be a strength. not really sure We're"
  },
  {
    "startTime": "01:38:00",
    "text": "what structure we want beyond that, but we're sure that letting people call it a string is probably going to not be as help is giving them some structural requirement. And then the other part that we're interested in is Actually, could you go back to the URL Adam Adam breakdown of what a URL is. The other question is, okay. So if we say it's a URL or a URI, Are there parts of this structure that we think our interoperability targets that all issuers should understand gets back to the point about these header parameters. Like, why did we create ISS? Like, what was the purpose of registering that claim. And can we register parts of this URI space in a way that issuers can exploit consistently to be interpreted consistently. so that they can communicate more effectively with each other. don't know the answer to that, but I if we say it's a URL, the next part of this is are there any structures inside of a URL that will always be interpreted same way by issuers and how do we communicate that. Okay. might actually, you are not Yeah. Well, sure. Mine's short. So any my probably smaller than me, so he'll let you add some content. I'm just gonna make a comment But I do have quite a lot of experience of this specific question of how how those things are done and back in the early days when I was very dead set on things like NFTs, Oh, very yeah. Not not not the yeah. Not the monkey kite. but the the ERC 721 type. it is very appealing have this idea that a feed is somehow the calculated accumulation of all of its sub experiences. for certain use cases, this works brilliantly well and even sort of poetic literary use cases, it works brilliantly well."
  },
  {
    "startTime": "01:40:01",
    "text": "you think of your personal identity. It is only the collection of your experiences. to date or at least the ones you remember. So It's a great model for some use cases. It is a terrible model. for others. Because if you've got a a if you wanna look for things like the non equivocation promise, and you've got a receipt in your hand. What is convenient and and actually what I did yesterday to to make the thing work. is very convenient is to say, well, if I've got a receipt from a feed, so I'm dealing with an authentic artifact, that feed should tell me every other statement about this artifact so I can make a completely informed decision. And in those is you don't want it to mutate, or at least you don't want the identifier to mutate. So we we we need to yeah. It's another question of this sort of use case specificity that we need to be super careful of. Yeah. Thanks. And and, John, I think you hit some big things because I think we have both use cases to deal with here in the scenario of Skit, and so we need be very mindful of that. I think one of the dangers is is that if we don't provide at least a path to interoperability around feeds, we will wind up with vendor a, vendor b, vendor c vendor d, all doing things completely differently, and then analysis becomes useless literally. It just becomes so much noise that we can't go through an 5 patterns in a clear way, much less actually mitigate an issue once been identified, and that's kind of what we're here for. There are some options. We can also do things like, say, yep. we're gonna keep it a string or maybe say it's a string or CRI, right, going down. We'll better. Yeah. Just go down the Cozet path. Right? You keep doing that, but there's some options there, but then in a separate draft, perhaps to find some mechanism by which approaches we could take for feeds so that they are interoperable here are some between vendors, and that could be quite a helpful path to come. So Alright. Throw the rocks now. Oh, no rocks. Dick Hart again."
  },
  {
    "startTime": "01:42:02",
    "text": "I I think the, you know, what was the who brought up the comment about, you know, stay off my lawn. I think you wanna let people be able to go and have stuff that's gonna map to what they wanna do. The term fee is I'm I think I know what we're talking about, but I don't. because I I I thought we did, and then I just read the definitions. Like, well, now I'm super confused. because when I hear the word feed, I think RSS. Right? a whole bunch of meanings come to mind around RSS. And which then has some cautionary tales having recently tried to find the RS feeds, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed speeds, speed speeds, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed speeds, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed, speed a whole bunch of news sites and realizing There is zero standardization around how do you do that. Like, you can't. Right? Like, we literally went by hand and did them all. and to the previous person's comment. Right? Like, I've written connectors to almost all the issuers on the Internet today. and everyone is at its own and unique snowflake around how Right? And so if we really want interrupt, right, which I think is super important for this work, You're gonna be need to be very opinionated around something so that's stuff just works, and everybody knows how it works as opposed to letting people do whatever they wanna Thank you. have somewhat knowledgeable about the PGS. And As I remember, the focus on the use of the PGS is kind of the live feed. So it is trying to retrieve information from the body RF ID data's information towards the EP shares. The EP shares feet, light duty to the applications. So my understanding of this kit is that not the live feed that was my impression. But how"
  },
  {
    "startTime": "01:44:02",
    "text": "what is the use case of the kit to be I mean, the is it used as a length to some of the application to receiver live feed over -- Yeah. -- continuously clearly, Yep. So it's a building block. Mhmm. And the application that are built on top of it might implement real time Hub sub for vulnerabilities on software that's known to be in a specific hardware component and Mike's Mike owns Onsworth's awesome question and the all of the issues that come up with it are at that higher where application layer, but feeds is gonna be one of those things that sort of similar to Christopher's comment. Like, if it's not if there isn't some in our integration and our operability point that's consistently leverageable, some of these higher order applications will not be able to rely on it. So, Okay. Hi. Dave Pultmeyer. So Mark Nottingham also works on something called Adam, which was supposed to be a accessor to RSS. Yeah. The way Adam actually handles feeds is it uses relationships to declare like, how you go to a next page, how you submit a new entry, You know? it's extensible on the way that you can you can augment the metadata for feed to basically describe how you navigate through the feed or how you navigate into the feed. Maybe using something like that here, is a way to make these URLs more opaque. but to still provide the actions that are needed to you know, to interact with the feed in meaningful ways. Yeah. I I agree with everything you're saying and the comment about Link Data and curation of a 1000 semantics comes to mind, like,"
  },
  {
    "startTime": "01:46:01",
    "text": "hard to look at this problem and not reach for some of these technologies that have applied to it, this kind of thing before. Hey. This is Ben Gearing. from protocol Labs. just wanna plus 1 the idea for using URLs through this and basically I like this specifically, I like the idea of structuring, like, the past information. at work. We do this thing called UCAMS, which can represent certificates. And so that path increment like, because we encode those sometimes as, like, thing called IPLD, that's path path information can kind of compose with that to select individual elements of the certificate like, the certificate itself is represented as a military suggest. commenting plus one on, like, URLs and path information. Thank you. So I just one more comment is we didn't talk about the cozy merkel proof stuff and verifiable data struck and new types of proofs on verifiable data structures. But Later today, the cozy session, there'll be a the draft that covers those cryptographic details. If you're interested in that, please come to the cozy session to learn more, but that's part of why you don't see it in this presentation. outside of, like, a few pointers that it exists. with So you talked a lot about that entity. what is in a document right now is there are 2 aspects. One is the issue needs to be identified. It signs the statements And there you the sort of recommended way is to use the wet, method, And then you also have the transparency service side, which kind of loosely suggests that that"
  },
  {
    "startTime": "01:48:00",
    "text": "should also use the same technique, but it's a little bit dances around the issue. Maybe that needs to be fixed, but or at least decided on whether it's the same or not. They did web. is conceptually quite simple. I would I would say, But in the discussion that you presented to other topic that you presented today, how would you change what is currently in the document to to Sort of accommodate that thinking. So so We wrote a lot of text on identity in the architecture document because we kept having people bring up questions of identity. Christina pointed out that this was maybe a mistake that we should just reference the existing specifications and write less about identity, like recap less about identity. I agree with that. And I hope that after this IETF and after this long discussion of identity all of you, we can remove some of this lots of text that we've got in our document and Some of it might go to the REST API, document. Some of it might just go away and then be referenced directly in line references asked questions about did web, I think the identifier security scheme for transparency service and the identifier security scheme for the issuers don't necessarily have to be the same. you could have a mix that's your Rich, your transparency services policy is what to describe, like, You get to decide that, but be interoperability and interpretation of things needs to be consistent, and it needs to support the identifier schemes that our securing software supply chains today. Just a quick add on to that But I think from a purpose of interoperability, it should have one sort of, like, recommended way to do things rather than So it's obviously something we should discuss, but"
  },
  {
    "startTime": "01:50:04",
    "text": "Hank, do you want it? But, yeah, maybe maybe we can pile on that and let Yeah. I was I was gonna say with identities for folks publishing software. Right? there's a couple properties we need for that. We probably need a common data model for exchanging that, did may provide us that. I did web being 1 simple example of that. but we also need a history of public keys. Right? If you go in and rotate, Right? We need the ability to go back and say, well, who, as you, as a public or what what have you done previously, right, prior to that breach or what other other thing changed. Right? Maybe it was just a time based policy force rotation for some weird reason. Right? So there are other properties we need to account for. We also need to account for the fact that especially in the open source world, We tend to have oftentimes individuals or repos. right, you know, going through and publishing Maybe we're tracking at the poll request level. Maybe we're not for certain things. So there there are things like that that we need to account for. that I'm not sure that did web covers perfectly. There are a number of us looking at that, including a of the editors of the did working group, and I have been talking about that lately. So we might put some thoughts together in a draft, obviously, consulting with Ori say, hey. Here's an idea of some ways that we can go beat it up. But I don't think did Webb perfect for our use cases as it stands today. This is one of the few people that gave or either headache yesterday. so that the gaps that we see with DIDweb and DID mechanisms Led to the question that Rory was trying to solve yesterday, which is the is there information? We have to plum out of neurization system and an over review system. and allow us to do some of the complex things we need. in cases that I gave him here is 2 auditors,"
  },
  {
    "startTime": "01:52:02",
    "text": "are approved by your organization. wanna know if any of them have given me an endorsement on a product. It's not the owner of the product, it's auditors of the product. and they have the same problem that Mike was talking about. They just rolled their keys. And how do you build together that document of the identities they possibly used to efficiently come back with the last statements of support or negative support for a product. And that's what's leading to this discussion of Is there something we have to do to staple it together or do we have to come out at a different way? and Unfortunately, unfortunately, I didn't get 48. aspirin at the end of it. Bob Musk, Scoods. Sorry. I'm not in the queue, but my phone keeps on dropping the connection. I have been identity discussions for at least 25 years. actually pied back to when I was eleven years old. is another story. But perhaps avoiding this problem of solving Too many levels of indirection. We can go to classes of identities. I was talking about a person, Are we talking about an organization? Are we talking about software? I was talking about a device. and just go to some general classifications of identities and then solutions for those classes. As just was we're mentioned about auditors, is it the physical auditor who is doing it, or is it the auditing company that is the important thing that we need to have in here. So if we instead step back as you've tried to do early. Try to step back in this. Let's step back and just go to a generalization of classes of these things. And then let the the the chaos follow"
  },
  {
    "startTime": "01:54:03",
    "text": "the classes because it will be chaos. And one thing I'm very concerned about is that you have so much in there and somebody looks at this thing and say, How am I supposed to I to figure out to trace this identity back Is there enough information from in listing for them to identify the person who did this. We recently had FAA pulled back a declaration of compliance for remote ID from a from a Jdl drone And they and JodiOS says, that person was dismissed from the company. relation with just that that declaration compliance being called back, and we have no further information about it. But is it that person's body step that that person stepped out of bounds, or is it just a scapegoat? We don't know. it gets it has just another example of this whole whole problem space. that we're dealing with. And I said, I've lived this for at least 25 years professionally. and probably over 60 years, The That's how and that's all I have. That's too much saying too much. Just one more comment on the idea of scapecoats and developers, you know, was mentioned earlier, there are developers who their personal identity gets encoded in software artifacts as they produce those artifacts on behalf of an organization. and it can cause to it can cause real problems We just had that discussion before. Exactly. So -- The primacy is just that. And and that's why, you know, We really want these payloads to be opaque, and we wanna really wanna be careful about indexing into that kind of information, but we shouldn't be naive enough to believe that those kinds of identifiers don't leak into these assets every now and then. Yeah. And am I Bob, am I Robert, or my roommate? What is my identity? depends on the domain of applicability. Yeah. If I can just respond very quickly in the interest of getting our work items finished. well, so we are very short of time as well, but I like"
  },
  {
    "startTime": "01:56:02",
    "text": "that's a a a great suggestion. The classes of identity helps us on one side and the responsibility of each building block. If you put those two things together, what we wanna say is the appropriate level of identity has to enter the building block and absolutely nothing more. They're all because, otherwise, if we try to solve the the the messy chaos as it was a it will never ever get solved. The important thing for us here is to make sure the building blocks are coherent and that they don't disallow things. because in the case of critical software, in my former life. is absolutely essential that you know when you receive a software payload that the person who reviewed 8 is a qualifier properly qualified, identified but who is able to check that this vehicle software is actually suitable. but we don't need to define the mechanism for you reaching through it. That's not relevant to the skit building blocks. We just need to make sure that it is possible for appropriate chaotic applications on top to to to do that. keep it short. Hey, Minh. It's Ben Gearing. you I heard a bit of small proposal to switch something from, like, a string to bytes, which was either k ID or ISS the the that think you're advocating for Orange. Does that sound right? We we can't change the definition of the registered claim names in their type system. They're like, you say you had a preference for being able to refer to, like, the issue or the KID by as as as like, a bite strain versus just a string, or did I Our preference is for the feed identifier to have And since that's a new identifier, we have the opportunity to to do that. Okay. Thank you. the card again. I'm have I've read through the stuff, and I'm a little confused on the role of the trans guarantee server and wondering Why are we Why is it It would seem to me if I was to start detecting this in my head, not really thinking an awful lot about it, but that the transparency server would verify what's in the statement, And then it would"
  },
  {
    "startTime": "01:58:02",
    "text": "sign it, and so that we're not having to worry about the keys and things used on the initial issuing that that's all on the immutable ledger, and so we know that A validation happened at some point in time by the service, And so we don't have to worry the consumer doesn't have to go and do that verification. at some point in the distant future and be able to find the keys that are now gone. earlier versions of the work, at discuss this concept and related transparency services sorted in notaries. They're Purpose WAS TO authenticate THE ISSUE OR NOT TO REVIEW WHETHER THE DOCUMET THE ISSUE OR sign was authentic or legitimate. That's policy information that's out side of the scope of permission. Chris Farrellam, blockchain Commons, In the spirit of keeping the agenda short, we do have a hour and a half, side meeting scheduled today at 3:30 in Golden Gate 4, on the topic of what are our potential requirements for this type for some of these challenges. So and we we don't have a Internet draft. We have kind of a pre Internet draft that we're circulating for advice on on how to write up some of these requirements. So if that's something you care about, we're gonna we have an hour a half. Do you want assistance there? Yeah. So famous last words if anybody because I know we've had some people coming in and out. anybody didn't sign the blue sheets, please do. It helps keep the community healthy. and there's a QR code at the front here that you can just scan and and and check that. at was my last word. Thank you. Thanks. Thank you for coming. Okay. That was Right?"
  },
  {
    "startTime": "02:00:23",
    "text": "Hi."
  }
]
