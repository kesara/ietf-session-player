[
  {
    "startTime": "00:00:06",
    "text": "foreign right all of the administrivia playing with the data tracker playing with the data tracker yes yeah all right great you've got structured headers structured fields with you want them or not yeah yeah but a few groups have them some of the bigger ones and this is also because yeah Daryl's first time at the its senior chair also so what yeah he doesn't know about the ceremony he doesn't know about the ceremonial dunking in the Thames yet so we are done we are let us begin okay everyone good morning welcome to the HTTP API working group yeah oh okay all right all right is this better okay good welcome to the HTTP API working group uh contrary to other ITF acronyms that is not easily pronounceable uh it's"
  },
  {
    "startTime": "00:02:01",
    "text": "Say it'll you know like Bronx cheers as they say okay can we confirm people online from here yeah can somebody online please like get on the Queue and then leave we have 23 people well including locals all right so Francesca rad okay so people come people came and left so good I have a cold uh only a cold so oh and people are screaming it so all right um this is Tuesday Morning you should have seen the QR codes they are outside also up there have your phone please Point your phone to it that will get you the lightweight client if you want to talk you will have to press a button on that client to or Tap a button on that client to get entered into the queue we will manage the queue through mid Echo all right everyone's feels like a rock concert influence you know holding their phones up yep okay shall we get we should go for it uh oh I'm sure I can do this one I'm sure we'll use a scene by now uh the net well here it is once again please follow these rules uh yeah I think Richard said most of these things the only other thing did you mention the mask burn in the room unless you're at the mic please keep hurting us and we need a volunteer to take the minutes"
  },
  {
    "startTime": "00:04:01",
    "text": "of the meeting do we have evolved here please foreign I can do it sure okay so uh I shall let Rich get to the place in the notes and then uh Ben are you ready to do your presentation he says not being able to see the chat there and then on that video good morning good morning just give rich just a moment we started thank you to the chairs for letting me uh put this presentation at the top of the session of course it's 4 30 in the morning here so I don't know how great that really is but uh I had a conflict with another working group so this is not a top priority item for HTTP API it's just scheduled here due to a time and conflict okay floor is yours uh I've requested slide access I am looking you want to try that again where is I do you see it I don't see it um yeah all right here we go okay got it thank you thank you"
  },
  {
    "startTime": "00:06:01",
    "text": "so uh this is the same slide deck for consistency sake this is the same presentation that I I gave to oauth yesterday um I will be saying some slightly different things uh but the these are the same slides that you saw in oauth so feel free to uh you know to to eat your croissant if you're um if you were already in oauth yesterday so uh interactive authentication of non-interactive HTTP requests that's a mouthful I call this pop-up Authentication and the the key idea is this the the web today has a rich login experience there's a whole panopoly of different ways that you can log into a website you can use complicated single sign-on things to use one account from one web service with a different web service and then when you're actually logging in maybe you can use a Yuba key or a pass key or any number of other tricky second Factor things that give you a lot of extra security there are password recovery flows if you've forgotten your password and all sorts of great stuff uh and this is what login looks like if you're trying to use HTTP and you're not actually on the web there's a a server address field maybe and there's a username and a password so basically if you're outside of the web login is stuck in 1996. we don't even have we don't even have a password recovery option we don't we don't even have any reasonable way to rotate these passwords which are usually hard coded into the settings and forgotten uh and oauth uh doesn't really today get us what we want"
  },
  {
    "startTime": "00:08:01",
    "text": "because oauth is designed for a client that's registered with a specific service that already knows some proprietary details about how to communicate with a specific service in advance and what we are really trying to get to here is a way for clients like that caldav client that I mentioned that I showed on the previous slide to be able to speak a standardized protocol to uh to any compatible origin so uh this is the kind of user experience that I'm imagining we could achieve imagine that you have some service configured on your system uh you've configured it basically by dropping a URL into some settings field probably and then this service says actually I need authentication so your system pops up a little notice uh that you're going to need to authenticate and then takes you to a browser like authentication experience that shows you whatever that service wants to do maybe it's a captcha maybe it's single sign-on maybe it bounces you through a couple different Origins before determining that you're authenticated and then you know eventually that browser closes itself when it's done and you see a notification that authentication is complete you know so this is the the draft protocol that's listed in the document but I should say that um Aaron perecki of uh of oauth uh helped me out yesterday to understand"
  },
  {
    "startTime": "00:10:00",
    "text": "a bunch of oauthings and actually added a bunch of slides here to describe how this would work in oauth um so I'll try to keep this very brief but the idea here is um the client tries to do something protocol specific like this is a an initial caldav request it gets back in HTTP 401 and it gets back some kind of nude www authenticate response that indicates uh no open away I know you're not allowed to do this and you can authenticate by opening this web page and then so this web page is open now in a different essentially by a different user agent in a browser and then the user again gets a 401 unauthorized in this in this version they get a 401 unauthorized uh and then they do some other stuff um maybe get a cookie for that get a 200 response that that is interpreted as meaning you can close the browser you've successfully retrieved that authentication resource and then uh in again in this version of the protocol the um the sort of non-interactive client you can think of it as like a command line utility maybe steals the cookie um reaches into the browser browser State steals that cookie out and uh and then uses it to successfully reach the cow Dev server um so I don't want to focus too much on this specified procedure except to say that it has this it's based on this idea that the client in question can sort of spin up a browser context into which it has privileged access cells of the requests and responses okay yep I'm sure we'll come back in a sec"
  },
  {
    "startTime": "00:12:06",
    "text": "hey my my network connection to meet Echo has been somewhat unstable uh can you reapprove thank you so uh that's this version and I'm going to skip the details of that spec so the bottom line is that I want to solve this use case um and let me Skip One More slide ahead and I'll come back so this slide is from Aaron um who proposes a an alternative approach here which essentially takes oauth 2.0 and a couple more extensions beyond what exists today in oauth 2.0 so we would have to write at least one or two oauth extensions to Define specifically the new thing here is this location parameter which just like before tells the recipient I need you to authenticate and here's the web page that you can open to be able to authenticate so um so I think really and we can I can just briefly um show you that this is a now looks more or less like an ordinary oauth flow um and uh and again this opens an oauth context that eventually um that will result in a the in the original request the in this case the caldav request carrying a bearer authorization token so the main thing I want to present to the working group is is this function do you do you essentially view this as being something that's best thought of as"
  },
  {
    "startTime": "00:14:02",
    "text": "essentially a very strange oauth variant where we solve this using oauth and a bunch of oauth extensions to to get to a very special oauth behavior or is this actually kind of a core HTTP function and we should basically Define a very simple HTTP extension that that gets us to to this ability um and so I'm seeking adoption but um I think which working group this goes in definitely depends on on the technical aspects of the the solution Martin so Martin Thompson I think you probably skipped a step there um I I'd like to talk a little bit about the use case before we start talking about how we might sort of address that sort of thing when I first did this draft it was pretty horrifying I have to say to have the the notion that you might have arbitrary pieces of code that that might pop up browsers in in various contexts is a little bit scary um we spent a lot of time trying very very carefully not to have pop-ups appear in in various contexts and this seems like a pretty smooth path to that for someone who wants that that capability that said there may be some ways in which you can frame this that might make that a little bit more um acceptable for for people I I don't know uh I I didn't see any sort of discussion of sort of abuse or any of those sorts of other things have you yeah well so my here's my um here here's my sort of Nod to the abuse problem um that anytime this happens uh in my proposed ux here you are directed to uh you're presented with a pop-up that gives you the option to actually accept"
  },
  {
    "startTime": "00:16:00",
    "text": "this pop-up or to basically go to the settings that is triggering this and get rid of this thing that is sending you pop-ups yeah so you're gonna pop up to manage the pop-ups status yeah this is exactly the sort of thing that I think is is really important to discuss because these sorts of interaction models uh are difficult to understand I think there's there's a number of use cases in which this sort of behavior would be very very useful I I just uh published a rust crate this morning and um I haven't used this machine to publish them before and and there's a command line process that ultimately asked me to go off to a web page and copy and paste a token from the web page and that sort of error prone and fraught and and and concentrating on that use case would be I think reasonable uh in that context you would probably just fire up the browser and everything would be fine but um I'm not sure that um that's the end of the story here I think we need to talk about what it means to fire up a browser context in this in this whether or not you really do want to have the application in control of the browser context to the extent necessary to do the sorts of things that you're talking about here or whether there is something else that is uh more appropriate for signaling back to the application I think there's probably more to be said also about the nature of the the signal that you use to determine that the authentication process is complete as well so those those are the sorts of things that I think we we should probably concentrate on before we sort of talk about whether there's whether this is oauth or not I think perhaps I'm leaning toward an HTTP thing but that's because I'm an HTTP um familiar person and not no off person uh it seems more General interesting so thanks thank you Martin"
  },
  {
    "startTime": "00:18:00",
    "text": "um I'll just say that I'm I was just slightly surprised by your your last note because your other comments sound actually a lot like what I what I think of as sort of the oauth perspective where um oauth has spent a lot of time thinking about the the ux of transitioning between these different contexts about uh the different signals that indicate termination um that's that's all I've been sort of discussed extensively in the oauth context right uh Mike uh Mike Bishop um I'm sympathetic to the abuse concern although presumably this is a context in which you would have gotten a pop-up anyway asking for username and password so we're swapping one pop-up for another so as long as an app is already able to do that pop-up I'm not particularly concerned about them being able to do this pop-up instead um I'm a little less happy about the whole reach into the browser and extract the cookie part uh I correctly if I'm wrong but I think the current way to do this if you need a rich sign-in is to launch the browser to it oauth and give it the completion URL or something on the local machine is that correct uh yeah so one of the standard patterns for this is is to say there's something called a redirect URI which you declare to be a server running on localhost and that's how you get a signal back from the login flow so I'm so I'm trying to understand what this solves that that doesn't is it simply that the the thing that's launching the pop-up doesn't want to have to host its own server on localhost so in in oauth today uh your client has to know out of band what the authentication flow is for the"
  },
  {
    "startTime": "00:20:03",
    "text": "service that it's using oauth does not standardize that okay so uh like for example in it imagined in like a I don't know if you've run across J map it's like you know kind of HTTP API for foreign you have a general purpose jmap client how do you configure it uh you know ideally you would just put in a URL for a jmap endpoint but now you need a way to log into that service um you know currently I think you would you would have to your client would have to have out of band awareness of the specific authorization page that's used for any given jmap service in addition to the jmap URL so that really feels like you just need a way to pass the URL then oh wait so win test URL on a way to deal with the the redirect URI when it's done yeah and and we can if we sort of go all in on an oauth model then uh then we can just use the oauth redirect URI stuff and uh and maybe that's all we need so to me that feels like the the simplest way to get to this UI which I agree this is this is a UI I would want to enable for more things um that feels like the simplest path so I'd kind of like to see this land a new off from the oauth group um yeah I just wanted to say can you actually go to that slide the first slide that I sent you um so after uh after Ben presented this to the oauth group yesterday I was uh looking at it and I said I feel like we have almost all the pieces already put together in oauth itself except for this one piece"
  },
  {
    "startTime": "00:22:02",
    "text": "which is driving the location of where to go log in given the location of the server you're trying to access so in this example it's dropping a calendar URL to the client and that's the only thing that you plug into the client and then you need to sort of Drive the login from that so this is essentially the only thing you need in order to then just use the rest of oauth to do the flow and I totally agree that there are security concerns and issues around pop-ups and phishing and all sorts of things that need to get sorted out but a lot of that work has already been done in the oauth group and thought about there and a lot of that experience is there so I don't think it's an unsolvable problem and I think there's a lot of experience there to draw from so that's why I put this sequence together showing um what it would look like to just to leverage the rest of oauth to do this and oauth has the answers for things like what if you're you don't want to spin up a local host server for your redirect URL it answers things like how do you know that the flow is done what's the signal for that like all that stuff is already done there so it's not it's not these aren't particularly new problems really so that is why I um wanted to put a sort of alternate proposal together that gets to the same end result here and I guess I should mention there is one other piece of this that does that would need to get solved which is the fact that these clients would be previously unknown to the authorization server as in you download a random calendar app talking to a random caldav server and um they don't know about each other ahead of time which is like been mentioned not normal in the oauth world in the oauth world things kind of get deployed all as a cohesive system that's why I put this note on here about the client ID where um in some scenarios actually the client ID could be pre-registered and there'll be"
  },
  {
    "startTime": "00:24:00",
    "text": "plenty of scenarios where that would work just fine and in other situations you may need to do something more dynamic or more um on the fly or just straight up Anonymous and there are also starting to be some proposals for that kind of thing in the oauth group coming as well so again it feels very suited for for that uh that world foreign group I mostly I think my one option observation around this is just be very very thoughtful on the security side to re-emphasize some of the other call uh call outs um one of the areas that I really focus on is the human factor side we see that as a very big Vector for attacks and exploits and I think the moment this gets uh this proposal if it gets connected to the oauth universe there's sort of all sorts of other interesting opportunities now for lateral moves and attacks right so if this becomes an entry point where I can trick somebody to give authorization I can use that set of authorization to start moving and doing lateral attacks and I think these are the kinds of things that I'd really encourage you to explore very thoughtfully um you know you're not only and I'm also sympathetic with the fact that there's already a big um uh you know there are some there's already pop-ups coming up but just thinking about thinking through that and see if there's an opportunity to actually make it better in general my Guidance with this would be one if you can avoid having the customer make a decision or avoid having the end User make a decision please do so if they're making a decision give them the best possible information to make that in decision with and then they will make bad decisions please do you know in your design make sure that there is stop gaps and mitigations for when the end user"
  },
  {
    "startTime": "00:26:02",
    "text": "makes a poor decision because they will I think what we're seeing um is incredible cleverness on the side of attackers into using these pop-up type experiences to really confuse the user to engage in social engineering and it's actually become a major entry point people are not so much attacking the protocol as the end user so just use this opportunity and and be be thoughtful of that thank you uh Eric Kinnear Apple so I would I'm a little bit curious as to what mechanism we're trying to Define here uh we actually do something almost identical to the flow that you had on the slide earlier uh if you go in the mail app on your Mac and you ask to add a Gmail account it will pop up a thing that uses oauth uses a custom URL scheme as the redirect URI that causes it to deliver everything back into the app without having to go through weird localhost localhost bounces um so I don't know that like having the user put in a particular URL or identifying it that way is as interesting as having the user be able to just use their normal flow which is what it already does uh so I think the the the distinction here is that instead of uh having the client know that it's um it can talk to Gmail and having a button that says Gmail um I'm imagining a world where in in the mail example we have a j map rest API for communication between mail apps and uh and male backends and and so the user paste in just once an identifier of their mail server instead of Gmail whoever is providing mail for them and now I want exactly the same kind of magical authentication flow potentially still with single sign-on through Google"
  },
  {
    "startTime": "00:28:01",
    "text": "um but now using that to cross authenticate into whoever their actual mail provider is uh and then using a standard uh protocol for that communication excellent yeah so being able to have anybody put that in I think one of the things that would make this super compelling is if there's a way to reduce that kind of bouncing around um and maybe that's hard because by definition we've kind of defined this as a pop-up um but to the comments around social engineering even just from a user confusion like suddenly I'm in settings suddenly I'm in a browser suddenly I'm somewhere else if there's a way that we could do this that doesn't mean we have to bounce through several different screens really quickly especially screens that involve putting in my password for something that would be really really cool all right um so Peter reminded me that this is far more challenging than than even I had first thought uh when when I have an application that's asking for this permission that goes off to the website um what is the website know about who is asking in this context we're talking about a random application that's sitting on localhost or a random application that is essentially uh an arbitrary binary that's running on your machine and and to Peter's Point earlier I think that's really scary and I think there's probably a case here to be made for uh simply saying that um that this requires some sort of server infrastructure so that the server knows who it's talking to and then um for example in the cargo publish example that I was talking about before the the cargo published binary knows me and can talk to crates.io which is their server infrastructure and can authenticate to that and it's crates.io that's receiving"
  },
  {
    "startTime": "00:30:00",
    "text": "the authorization token in this case and then it passes it back down to the command line client in that case otherwise that is that is essentially the the architecture that I imagine um you know one thing not what I'm saying here okay okay um so one thing that I wanted to note here is that the in this version of The Proposal um the the location of the of the authorization page is only given as a path so it's meant to be on the same origin as the as the actual service you're trying to reach and from there maybe you'll go through some series of redirections to get you through a single sign-on type flow but um but what your your authenticity too is is whatever you started with so so that that doesn't necessarily help because the application that the server thinks that it's that that it might be providing this information to and the application that the information ultimately ends up in may be two different things because uh let's just say that I managed to get some some bad software on your machine and then the service handing out for that instead yes well so if you believe in open source uh you know then uh unless you're going to invoke some kind of like client-side attestation trusted platform stuff uh you know the the server no server ever actually knows what uh what software is running on the client client to server oauth uh always has some version of this problem and this is also how the web works right like servers don't get an attestation proving what browser is being used to access gmail.com um we just that's just the world as we accept it is this is sort of a web-like view of non-web stuff that's that's not really the the sort of problem that I'm looking to to address here you've got um you have clients authenticating to"
  },
  {
    "startTime": "00:32:02",
    "text": "servers all the time this is this is not a particular particular challenge um but what you're if this was the only way in which you're authenticating to to the server and then um because you're using the the interactive session in order to authenticate the user to the server the service storm doesn't know anything about the application that it's providing this token to and to the phishing point earlier that that becomes fraught whereas if you had a scenario where you have an application where a user is authenticated to a server and they're looking to access secondary resources on others other services then this becomes a little bit more interesting because then you can use that first authentication session as the basis for knowing that the this is a particular user that's receiving information and then then you're talking about interactions between the two different servers and then it becomes a little bit easier for the the server that's giving out that token to to to be assured of where it's going as opposed to random pop-up that someone just happens to to spawn off on the on the um on the server so so maybe to close this conversation I think there's two questions here to this group is HQ API um is there a concernses that this would be useful to http API uh world um then the second question is but it's probably the old folks that have all the security knowledge to make this work securely and so Aaron Ben probably you're the best folks to talk more about um how to move this forward but but there's an interest I think in the HP API space it's just I think the a lot of folks have the tools to make this happen if it can happen"
  },
  {
    "startTime": "00:34:00",
    "text": "okay uh well so yeah I think the most likely outcome here is that Aaron and I will um hopefully try to put together a now a more oauth flavored version of the protocol and uh and we will probably try to to run that by oauth again I'm sure that oauth as always will will be looking very closely at questions about um user confusion and and leakage of tokens and that sort of thing so I I did lock the queue you you were in the Q Aaron since I kind of handed it over to you do you want to have last word sure I just wanted to respond to some of the stuff to Martin's I agree that there are concerns around unknown software talking to unknown servers um that is the kind of thing that gets discussed in the oauth group and there are valid use cases for that and there are also valid use cases to prevent that and both of those are deployment level decisions to get made all all the time if you look at what Google's done they've locked down they've really locked down who can get access to be able to do an oauth flow at all and depending on the scope you're requesting so they've gone like super hard on that in the Enterprise world it's extremely locked down only the Enterprise admin can create a client ID in the system both of those scenarios would work with the oauth version of The Proposal both those are enabled by it so if you want those policies you can still have those policies if you want to open it up and allow your random calendar app developer to publish an open source piece of software that's you know lives on GitHub that someone downloads and there's no binary signing anywhere that's great and if the server wants to enable that to happen that's also cool and think think of also the WordPress"
  },
  {
    "startTime": "00:36:00",
    "text": "model anybody can set up a WordPress server anybody can write an app to use the WordPress API obviously there's no prior link between the two Developers there's no registration that can happen out of band there's no signing that can happen but that is a useful use case if you're okay with the assumptions that or the the consideration is there so I just think writing that all down and capturing that as like here's the assumptions here's how you can deploy this in ways that make sense for you that's also stuff that can be worked out in this draft cool so we should move on do you have a very quick comment yeah just a quick comments group chair um I agree with the with the with that with Aaron others that this is probably fits nicely into the earthquake group they and and then got great feedback from their group work group interested in this one so this is the right place for it excellent thank you very much Ben okay and thank you for staying up until the middle of the night to come talk to us these kind of newborn he's used to it okay see if I can navigate my way through here actually rather than me sharing my screen and then Roberto are you going to be sharing your screen hi can you hear me yes we can okay I'm trying to share my screen okay it's coming so it's a very quick presentation the yaml media type is almost uh complete can you see everyone can see it right the Yemen media type is almost complete"
  },
  {
    "startTime": "00:38:01",
    "text": "it's a very important specification because it allows other media type registration to be filed the Json schema of an API and Json LD media types will be addressed uh subsequently so um structured syntax suffix is complete it is in word group plus call and there is positive feedback from the media type folks uh we changed just one thing actually we specified that that yaml is the preferred extension while yml is the Legacy one and um we acknowledge that the relation with median and suffixes does not require any changes for the rest API we need more feedback so we are not addressing in this uh in this meeting we just have one open issue that is related from a clipboard identifier for Windows and Macross what we propose is to eventually merge pull request 70 that addresses the Windows clipboard identifier and Skip for now but it can be addressed all right Apple folks so we really think that we"
  },
  {
    "startTime": "00:40:05",
    "text": "need to publish this specification that is complete we have positive feedback and well let us know what should we do with a program 70 uh well that's it thanks from me and the other editors and what questions welcome this is Greg I'm glad to see we're making progress on this one and it was probably a good idea to do that split that we did uh from the other media types because they seem like they have a few more things to sort out does anybody have any questions or feedback on the ammo media type uh see somebody walking to the mic Alexi hi Alex yeah um I had to look at this um need to double check the um the template itself uh it looks fine in regards to things like clipboard names and and you know this sort of information is useful if you know it but I understand there aren't that many experts for this so if you can find out what should go there included if not I don't think it's going to be a big deal yes I did try reaching out to Folks at Microsoft and looked around with the clipboard registry and it was seems like it's kind of a first come first serve and yaml is a fairly unique word so uh it doesn't appear to already be used so are you saying that there has to be an action with Microsoft there doesn't"
  },
  {
    "startTime": "00:42:01",
    "text": "appear to be any action right with Microsoft at all uh with regards to clipboard identifiers okay I'm looking forward to approving this excellent okay uh thank you Roberto after we match these two reverse eventually we can just uh start the publication procedure yes and I I have already started writing up the beginning the shepherd document okay so there we go okay uh so the next part of this we are going to just go through the other um working group documents um and have some discussion around the open issues uh of course because I shared a window I can't just change it I have to re-share the other in the tab give me a second not used to working with only one window yes ah let's just go into our screen and"
  },
  {
    "startTime": "00:44:04",
    "text": "so uh go up there okay so we keep track of in the HP API working group we keep track of the issues uh via the GitHub repos and there is this common project that lists all of the different uh documents that we are working on uh that surfaces all the various issues and we have status here to give us an indication of where these uh issues are within our um shepherded pipeline uh the deprecation header unfortunately Eric was not able to join today unless uh unless he is on the call so I didn't see him on the call and I tried to get rid of those windows that appear at the bottom and I can't so they'll stay there uh the one open issue that comes still really remaining from uh ietf 114 is we ran into challenges with regards to the formatting of the date field in the uh deprecation header which amongst the suggestions to move to structured headers also ran into a challenge with well we want the deprecation field to also be consistent with the sunset header as the two work in parallel uh the outcome of that was well should we instead of having two separate Fields just have one life cycle header um and I believe the some of the last words from itf14 is oh that would be a really easy PR to write it shouldn't require a whole lot of changes do you remember that comment mark thank you"
  },
  {
    "startTime": "00:46:02",
    "text": "Mark Nottingham yes but we didn't actually decide to do that okay so in that conversation I maintain my position excellent uh are you aware of any discussions that has happened around uh whether we should do that no excellent well there we go that is the status on deprecation header so to avoid this happening again in Yokohama yes we should probably have the discussion now let's have that discussion now cool awesome uh one head or two headers do folks have an opinion in so far as whether or not it would be valuable for us to be able to have a let's say a dictionary style header for life cycle to be able to maintain the states of an API over its life cycle or do we stick with Sunset and have a new deprecation header does anybody have any opinions that they would like to share nobody has any opinions Mark go ahead I I think it's worth trying I think the worst case we come up with a life cycle header and people still use the sunset header but my impression is that the sunset header isn't terribly widely deployed yet and so if we're going to do it don't get sooner rather than later would be good so that"
  },
  {
    "startTime": "00:48:01",
    "text": "we can capture some of that adoption got it before you go back Mark I have one other question for you there was some conversation with regards to the date header and whether it would be a human readable textable Type Thing versus uh a Deepak based integer oh that yes that yes um so the as I understand it the consensus in the HTTP working group is that we will be creating a structured date type it will be inserted into a revision of the structured Fields specification so we're going to revise the entire RFC to add it um and it will its representation in HTTP 1.1 text will be uh a an at symbol followed by an integer and that integer is a Delta from the common Epoch January 1st 1970. um there was a discussion about other textual representations uh there were uh personally I I think that a more human readable one would be a little friendlier but that's because I'm very bullish on binary structured headers where that in the efficiency loss isn't so so great and it's not at all clear that binary structure headers are actually going to happen sorry Fields sorry Julian Fields um so uh uh the the Feeling by far was that by by using an integer it would improve not only efficiency but also uh remove a lot of chances for errors date parsing is is nasty and uh uh adds a lot of questions that people thought weren't needed so it was"
  },
  {
    "startTime": "00:50:00",
    "text": "a fairly strong feeling that it should be an integer and so that's I think what it's going to be now I shopped that around uh with the folks discussing I think both the deprecation I think that yeah the deprecation header and uh was a little surprised to hear that that that seemed like it was okay if I interpreted the responses correctly that having one way to do it and having uh that integer representation would be adequate could be wrong so is it a fair to say that if HTTP API folks in the future want to use the date in a header that is readable then structured Fields is not an option I that's jumping to a number of conclusions um first of all that it's not readable as an integer I think that in some contexts it is I think that tooling will eventually present that as a more readable in a more readable form I think that tooling will emerge especially as we get more headers using it and uh if if you do want to have a textual header that on the wire or the bits on HTTP 1.1 mind to HP one point I'm sorry 2.0 and three if you look at the bits in the water you're going to see gibberish no matter what you do uh in in age to be 1.1 if you want to see an actual you know human friendly Sunday comma December 5th you know uh you could put that in a string if you wanted to it just wouldn't have a date type yes and you'd have to specify in detail the parsing and serialization of that date as well as error handling see that's why I asked the question because I knew you would clarify it thank you I'm here to serve okay so that's where we are with the application header um I Heard it let's try it we shall talk with the editors and uh uh and get this easy PR done so that we have a life cycle header and get"
  },
  {
    "startTime": "00:52:00",
    "text": "feedback on it if I yes could you join the queue Roberto please yeah I I think that for life cycle the point for me internally is that it should be human readable so if uh it will be if we decide not to use to move to um uh structure fields I think the value should anyway not uh should not use a non-humor readable serialization Mark's gonna reply to that so um we had a discussion about this and I thought that that I didn't see any other feedback to that effect that people felt that an integer would be adequate but we'll we'll have to have that discussion when we look at the pr um I I think their arguments to be had but we need to come to some sort of consensus on it keeping in mind if if we do choose not to use a structured field type that is tailor-made for this use case we'd better have a good explanation when we go to the isg uh in last call about it because whilst we might get consensus in this room for one way or another the larger consensus of the ITF may be different and we need to be able to defend that I got up originally just to say could you please assign that issue to me so that I can remember to do the pr and if you don't see a PR for me in about two weeks can you ping me because my mind is going yes I can definitely do that and and just to remember to just to you know reiterate what Mark said I think that the important thing there is"
  },
  {
    "startTime": "00:54:01",
    "text": "um we are moving into a world where you don't look at HP headers uh without using some kind of tooling that does presentation and it is it with the value of structured headers and the at symbol indicating this is a date it can definitely present those headers in a human readable format so we our our world is Shifting underneath us uh in this space okay moving on to item potency uh we have one minor uh issue that is left here uh there's been a number of issues that have been closed just recently uh and this particular request I believe uh was just um resolved yesterday and so this should be closed up which will close all of our issues on uh the item potency header um does anybody have any feedback have had a chance to review the adminton theater and want to share any comments with editors just as a sense of the room is there other folks in the room who feel that they would be interested in using this uh ad impotency header or see it as a valuable thing I've got a few kind of yeah maybe sort of won't do any harm I think we have a person coming to the mic uh Mouse collider um with the HTTP working group we're working on resumable uploads and we're thinking about maybe using the item potency key here there in there it's still like only a proposal and there"
  },
  {
    "startTime": "00:56:00",
    "text": "hasn't been a lot of discussion if we actually end up using it but it looked really interesting for the problem we're trying to solve so yeah we're definitely like to see where this is going excellent it's great to hear thank you which brings us to the link template header um I have not seen a whole lot of feedback on this draft from Mark which means either it is wonderful or nobody cares um there is uh one I see it has been moved to structured Fields that's great there's a PR I added a tiny little comment on there Mark um and so then the only open issue is this anchor parameter in URI templates which is an interesting problem that we have run into a number of times in the past you have thoughts um I I think I'm probably gonna do this and unless it doesn't you know there's some unforeseen problem I just I frankly haven't gotten to it I've been a little busy with other stuff but yeah I think once these two things are done we can go ahead and do a working group last call I still from time to time hear people saying yes I'd really like to use that so we'll see excellent we're just ripping along here uh so we've already talked about media types from the media type yaml uh both the yaml RFC and the restful media types for Jason scheme an open API are two different documents in the same repo so they're kind of mixed we are still waiting on a whole bunch of feedback from the Jason schema folks uh fragment identifiers get a little funky uh and the Jason schema world so they're working to resolve those and um there's a need for security considerations for the open API spec which we have had conversations uh in"
  },
  {
    "startTime": "00:58:01",
    "text": "the open API initiative about this and we will be writing those up and they'll largely be um what the Jason schema says Plus uh so uh expect to see hopefully we'll get these resolved uh in a few months but we're kind of locked on the Jason schema Folks at this point in time uh right which brings us to uh actually before we do rate limit headers because I'm feeling that will have us a bit of a conversation uh 7807 uh is going through area review is that the right term um and I see uh there was a whole load of issues that were opened up yesterday um hence why I don't have any status on these things um Mark you have more things that have been added to your plate um so but many of these issues I think that have been brought up have previously been discussed so uh hopefully we'll be able to resolve these I didn't see any in here that were tremendously controversial more than they have been in the past and we've solved them in the past okay which brings us to rate limit headers and uh if that this is possibly one of the larger GitHub issues that I've seen in a while uh and it boils down to structured headers at the moment um the rate limit headers are defined as separate fields uh with a separate field for rate limit remaining rate limit reset and rate limit limit and there is a proposal or there is a conversation that's happening about can we move this into a single header"
  },
  {
    "startTime": "01:00:02",
    "text": "but there is a disagreement and there has been feedback from the community that they like really simple headers that are just scalar values but there is also the future where of structured headers and uh there is a there's also the value of them being in a single header as they are related values and so um there is not consensus uh I don't know I'm trying to find a particular issue that summarizes that best here was an so this is how it is currently used in the wild with rate limit limit rate limit remaining rate limit reset um and there's a desire from some folks to merge it into a single header we're using structured Fields um Roberta you have opinions I know do you want to um Make Your Case yes the problem here is that the industry works with three fields in a previous release with of this draft we tried to conflate to to combine uh some of the provided information in one field and folks ask to roll back this kind of change and provide different information in different fields one of the issue in general is that intermediaries API gateways and proxies do not have a natively the ability to process structured content and since many of these kind of mangling is done"
  },
  {
    "startTime": "01:02:03",
    "text": "by configuration and not by development the current tooling makes uh very difficult to work with information that is combined in in a single field we have even one case for example it is the Kong API Gateway where they adopted our internet draft but still provide the information we combine in in the policy header in different fields because they prefer for this kind of information to be split and managed atomically because it's how the the current tooling it's what the current tooling support so the risk we see in combining Fields free fields in just one field is that we will release a specification that has that is significantly different from the industry practice and that nobody will use since it is not what the current tools support this is the the the main the main issue we want to standardize we don't want to uh make the the 14 standards out of the 13 that exist before so and this is the reason uh we created this specification"
  },
  {
    "startTime": "01:04:04",
    "text": "so you say that um intermediaries don't have the ability to parse uh structured content uh but that's what headers are I mean headers are structured content they're keys and their values and you split them up and you parse them and so an intermediary that has tooling that can parse structured content uh we're dispelling the structured content in a different way and so I think I I'm sympathetic to the point that intermediaries may not currently have exactly the parsers that we want them to have um but I don't know that I'm persuaded entirely that uh they won't and that if we spell it this way uh they're just going to throw up their hands and say well that uses semicolon instead of equals and I I just don't know what to do with that mark uh yeah Mark Nottingham uh with all respect I think Roberto is focusing far too much on the very short-term uh deployment of the specification and and the path to that rfcs are supposed to be relatively long-lived documents we're supposed to be creating infrastructure that lasts a long time and and and if we focus too much on on the the exact current deployment patterns down to syntax we're going to be so constrained uh that we're not going to be able to function I I I just I I think it's just a different Viewpoint I think uh for for internet standards we need to be focused on what's the right long-term pattern to have here um and then you know I look at this I look at the what's on the screen and I think well if we'd taken the approach that Roberto was talking about for the cache control header we would have cache control max age colon 30. cash control"
  },
  {
    "startTime": "01:06:03",
    "text": "private cash control you know and and it would lead to an absurd design just just putting aside the issue of deployment ease of deployment putting aside the issue of structured fields and whether you know we should use them in in what fashion we should use them as as just as header Design This just is really you know you're spreading the smearingness information across multiple headers you're having the chance for it to be uh desynchronized it doesn't make any sense to me now if if there are legitimate use cases where you have multiple parties touching these fields and they're and and so that there are slightly different semantics to them by all means split them into separate headers but let's have a discussion about semantically what makes sense to put in the same header versus different headers rather than just saying let's put every discrete value in a separate header because that's it's not good design so so Roberto in this issue you added a a comment here where you talked about a Gateway that is trying to modify a single field um could you just talk more about this scenario where there's an origin server that defines uh some kind of right limit header and then a gateway then wants to modify that rate limit header before returning to the client what is what is the use case for that for example if you haven't um if you have an application that is served through together as one external and one internal maybe those two getaways want to adjust the published direct limit depending on the client and assign different scales different proportion of the complete quota of a single application one for external traffic and one from kernel but again the point is that this kind of"
  },
  {
    "startTime": "01:08:00",
    "text": "field is are actually used in in industry and infrastructures in many possible ways that we don't even know and my concern is that if we um make some distance from uh if we diverge from how something that is actually used in different ways that we may know or we may not know uh and that is already present in the industry we take the risk of creating a specification that is not adopted because currently people already use custom weight limit fields and we should provide some selling points for them to adopt this specification which is the selling point if they don't change if they don't need to change anything they are sold and actually they have been already sold to different gateways because they just had to change the field name but if we need to change if we ask them to change the structure we don't know if they buy them so we can take the risk of providing a specification that is not adopt not adopted uh easily but I really would like to have some feedback from implementer that say okay for me it's um it doesn't take me any effort to change the new structure field and I will do it because the problem is that we have an implemented"
  },
  {
    "startTime": "01:10:02",
    "text": "will they follow us if we change the syntax these I don't know for current exchanges my feedback was generally that they are not interested to change significantly they're actually deployed code but if you have some feedback from implementers that say okay I will follow you in structure fields and they do it for me it will be okay but we need I I would really see this feedback okay Chris or do you want to go yeah I so hi Rich Saul's no hats um right now the industry is apparently using x dash rate limit they're going to have to make a change anyway you're argument is or your concern is two characters is a lot easier than supporting structured fields but structured fields are coming anyway um there's nothing that prevents existing applications from using x dash rate limit a b c d e um the future direction of HTTP is clearly structured Fields I'm hoping more than hoping not with my head on I think the working group should adopt something that is headed toward the future direction of the HTTP specification we'll have to take a working group consensus call and of course Roberto thanks for emphasizing that you will do what the working group suggests because that's your job and our job is to figure out what the working group suggests and wants but clearly the advice we've gotten from HTTP is structured fields are the future so uh with that Chris Chris I think I may be reiterating points everyone else is making but we need to"
  },
  {
    "startTime": "01:12:02",
    "text": "decide whether what we're doing is documenting Uh current practice or designing something for the future and we should be really specific about what we're doing and why we're doing that mark foreign we can do that I will let you lead that okay we have discussed this a couple of times I think everybody has made has had a chance to express their viewpoints so um I don't know do we do the poll tool or the hum tool there's a difference yeah okay we're gonna home in the room and we will take it to the mailing list just because I miss not humming after two and a half years so the questions are the question is there are three parts do you prefer simple do you prefer three Fields with a numeric value or structured fields in a com compound header field whatever or do not know yet so first please hum if you are in favor of three headers please hum if you are in favor of a structured header field Style thank you please hum if you are not sure yet okay so we had very strong consensus to go with header Fields some are still not sure structured Fields some are still"
  },
  {
    "startTime": "01:14:02",
    "text": "not sure and we will take that to the list to confirm thank you thank you very much everybody um okay are we saying that the decision is that to go with structure field or are we going to discuss still because some people are not yeah clearance so the the way we'll phrase the question is in the room we had strong consensus does anyone have concerns or questions about that okay and could I suggest that that because there are some people who are uncertain you know let's go ahead and decide the question get to PR and get it in you know and if people who were uncertain before have you know new information to bring we can always consider new information afterwards but let's see it in action let's get it going and yeah okay I I think that is the uh that was really the main issue that was holding up the the rate limit header work um if we can get an answer to that we can definitely move forward with it and that brings us to the end of the working group documents that are yes Rebecca I apologize no no problem uh I it would be great to have some help with the by um the other folks to reach out implementers in ensuring that the structure fields is a sensible Choice even for them since I think there is people from cloudflare"
  },
  {
    "startTime": "01:16:01",
    "text": "and other all right Roberto correct this is the working group is open to all this is the working group decision if somebody wishes to propose something else they should this is the venue to participate so I understand your concern and I we the ITF wants to make standards that are used but uh we're not going to reach out to Industry it will be vague you know if you have people in Industry who will feel strongly about this they should read the pr and comment thank you okay and with that uh let me just I believe we have a any other business uh agenda item does anybody have any other business you want to show your workflow thing uh I can do that uh just as a uh informational thing if you now go to the uh let me figure out where I'm going if you go to the website that corresponds to the HPA working group HP API working group um we now have a little kind of flow diagrams that attempt to indicate where in the process uh the each of the working group documents are we have a lot of people in the HP API Community who are not necessarily familiar with how the ietf works um these diagrams and I will try and find a way of changing the color the circle currently indicates where this um document is in the flow but it's a"
  },
  {
    "startTime": "01:18:02",
    "text": "little too subtle so once I figure out how to apply styling to these mermaid diagrams um we'll be able to make that a little bit clearer but you can see here the yaml media type is in working group last call and the status of the other uh media types and so uh this is a way for us to help communicate to the broader community see the process and make it clear to them also that even when we say working glue glass call there's a whole bunch of things Downstream uh because there is an expectation that yep we're done and then there's lots of other review that happens that is as I'm learning extremely valuable uh from from Upstream folks and so uh yes you can you can see this uh on our GitHub i o website any other comments from you rich nope then we should consider ourselves adjourned thank you everybody for coming thank you for a very productive session have a good week thank you all thank you for the chats bye bye thanks Roberto hi Roberto um everyone yeah I figured I should play the bad guy but I need to learn how to use the hammer hey yeah it's kind of really cool you just specify the black dependencies like"
  },
  {
    "startTime": "01:20:01",
    "text": "different printers automatically this one I did add an eye on a review is yes no yeah everything goes here and most of the reviews are nothing for us to do here uh yeah no I mean Ayanna says there's nothing for us to be stupid all right welcome this is yeah sort of seeing"
  }
]
