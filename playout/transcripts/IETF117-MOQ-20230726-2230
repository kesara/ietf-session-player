[
  {
    "startTime": "00:00:00",
    "text": "if people are coming in and out in the first few minutes, can you just make sure that it gets closed? Appreciate it. And just another reminder for folks who haven't yet signed the blue sheets QR. There are only fifty people showing in the room that I count more than 50 here. So somebody hasn't So please make sure you sign in. And, you know, this will change the name so that it Ian's last minute. Yeah. Yes. We we've had a discussion with ISQ on intro resolution has looked to be arriving in So, hopefully, Nice. Okay."
  },
  {
    "startTime": "00:02:09",
    "text": "have the notes as one document? The same document is fine. Just put a note at the start of the date. You wanna go? Buddy, folks. Welcome to the media over quick working group If you were not expecting that, we would appreciate it. You scanning in the blue sheet before you leave because obviously, we want a bigger room next time. This is a little tight for everybody else, please do remember to scan in the blue sheet so that we do get is big enough for the group. without hopefully giant posts in the middle that prevent us from seeing half of you. So thank you to everybody for remembering to do that. here is the note well. Since we showed it to you at the beginning, this is really for the information of anybody who wasn't joining us earlier in the week. We'd also like to remind you that the IETF does have a code of conduct, and we do expect you follow the code of conduct at these meetings. which means being very careful to value the opinions of of your colleagues and to Here are the meeting tips these, again, have not changed since our first meeting. and they reference how to use the mid echo clients, clients Here are session Details, the notetaker is Mozzanedi, who is selected a lovely chocolate. If you would like to be back up notetaker, and select another chocolate you can rush up and claim that now. Otherwise, we will thank Moe and appreciate his service. We've already done this agenda, and this is our agenda day 2."
  },
  {
    "startTime": "00:04:02",
    "text": "We'll have warp issues followed by mock Transport issues follow-up. Obviously, we didn't notice there was Ian sweat, not Anne sweat. So in this case, we will also be uploading a revision to these slides with so that our embarrassment does not can continue into into the long term data tracker thing. Then mock usages with Suhas, Moe will be giving us a recently renamed WebCodexcontainer thing. Ali will be presenting a bit of work on prioritization, and then we'll chat about possibly getting an interim Thank you all for joining us. Those who are just joining us. Please do remember to scan the blue sheets as you come in because that helps us make sure that we get a an appropriately sized room. So thanks very much. And next up is will unless anybody would like to bash the agenda. seeing no one bash in the agenda Will, are you gonna present from your own thing, or do you want me to just Okay. Okay. Yep. Okay. Good afternoon. Will or Akamai? and welcome to our first section here on issues relating to walk draft. So just to set the context a little bit, walk draft is the streaming format that's sitting on top of mock transport. So it's the layer that knows about audio and video and media and sequence and time stamps and cops. is the core transport does not. And we have a number of juicy issues. to be debating upfront that really will set the direction for a lot of development. We're very much at the PowerPoint stage of this protocol."
  },
  {
    "startTime": "00:06:00",
    "text": "And I was told to remove animation, so there's, unfortunately, no animation in any of my slides, Lightning the chairs. next next step. So We had some sideburn meetings. Right now, we have a monolithic draft for war. We're going to break that into smaller pieces, pieces that we think makes sense. On the left hand side, You have what we're defining is some core drops that don't exist today, but will exist shortly after this conference. The first is a catalog draft. We feel there's enough commonality In catalog behavior, that we can create a drop that can be referenced by other streaming formats. Then there's packaging drafts, one relating to CMF. that tells you how to take CMF content and package it for distribution over Moktron's Another drop that was called luck in the prior meeting is really WebCodix. So it's a draft for how to take output of WebCodix, and package them for transport over mock transport. And then to keep us honest, one for moving text, just as a as a reminder, that mock transport doesn't only have to move audio and video. then on the right hand side is how we would use these. So I'm showing 3 streaming formats here. there is warp, which itself will be a draft It has business specific logic that's the red the red block, anything not covered by the drops that it refers to, which would be the catalog draft, CMF packaging and WebCodix because WERP intends to support both those packaging for There'll be another drop called locklowoverhead Maybe the name will change. I'm not sure that leaves out the c map. particularly for IPR reasons in this case, but there might other reasons you might not want to include packaging formats, and it it would but it would still use the same catalog format and work chodex draft, And then, Alan's chat might use the text packaging and specific logic that Alan said he doesn't want to use. catalog, and it doesn't have to. It's not a requirement to use it. It's just a convenience. to use it. So hopefully, that gives some example. These were discussions yesterday. We're just showing this"
  },
  {
    "startTime": "00:08:02",
    "text": "as an output, so it's a chance for anyone to give feedback would say this is an irrational approach to arranging this. Okay. We'll go on to questions then. So in the current draft, The catalog the catalog is the document that describes the tracks that are being produced it describes the the media format of the tracks, how to initialize the traps, and how to select them and to subscribe to them. So it's the binding agent. The real question is, Do we need a system which advertises formats to blind clients? In other words, does the client say I want to watch something? Tell me all the formats you have the system must send you a list of formats you then choose from them. Or can we reasonably assume that the client will know the format it wants to consume before attempting to subscribe to it or or to consume the content. And there's this the answer to this question then Thanks subsequent question. No worries. Welcome. Good morning. The And I would point out with modern media today if pretty much the latter that the client If you're playing HLS or dash, you know you're playing it before you go and ask for the m three way or the MPD or the RTMP stream. or the SRT stream. Any opinions here? Someone was in the queue and then 1. Okay. Okay. If I suggest that it's reasonable that clients know the format they want to consume before they join the network, would anyone object to that? Ian will object. I'm not here to object at all. I actually think that's the most rational I would but I do I am curious, like, what happens if that fails? So, like, is there a fallback path? because I think what you're saying is exactly correct?"
  },
  {
    "startTime": "00:10:00",
    "text": "best majority of the time the clients know exactly what's going on. Does there need to be a fallback or, like, basically, a response, like, you know, 500, that didn't work, but, like, here are things you could subscribe to, or is it just, like, fail. I don't have a strong opinion. I'm asking that question. So my answer would be you ask for something that's not there. You get a the equivalent of a 4 4, It's not available. it's up to you or your CMS or your application space say what's before back or your or your failover. Sure. More of a clarification question, Sohas, Cisco. So are we talking about catalog format or the streaming format? I think this question has 2 things. Right? It I think we're using this question was written. Okay. When catalog was not being used by multiple streaming formats, the intent is probably a streaming that. Right? Right? Because if you're a player that only now knows how to play lock, You don't wanna get a war cruise. work catalog even though they're the same catalogs. Right? You can't play the content. So wanna be able to specifically ask for lock, But the question is, do you know you're asking for lock before you ask for it? versus do you ask the system to give you a a menu basically of all the formats and then you pick 1. I think going with the solution where we know what to ask for, would would be the 1st natural way we build the systems. And if we really need the case where want to I'm building a client that's aggregated of multiple things. and I would want to know what can I support, having gateway into different things. can add that functionality. Luke here. This is similar, not exactly the same thing, but I would like a a URL or some way you can just say, hey, VLC. Here's blahblahblah.mock. so it knows that this is a mock. It initializes the decoder. it doesn't have to just you don't have to specify as a drop down or something. And so it's similar. It's like there should be a way to identify the format. But it's this is clear, you wanna identify loaded. Yeah. To be the format based on the URL"
  },
  {
    "startTime": "00:12:02",
    "text": "or a connect string that's used to connect. Right? because You might not have a URL if it's real quick. I have a client that's responsible. Alek? And this is Ali. I agree with what Luke is saying, but then I have another use case where the client doesn't necessarily know which one of the I mean, which one of these formats actually is going to offer maybe a better experience So lock might have in it. standard definition resolution, whereas CMF might have something else. higher or better, multichannel audio, all kinds of stuff. So maybe you know, the client instead of asking for each of these options separately, maybe there should be an option to get what's really available is the service so that then the client decides, okay. I wanna pick this one. Okay. actually have an example of that coming up in the next slide. So So it's just like when you go to a restaurant, you I mean, maybe you wanna eat fish. but you don't just ask for the fish menu. I mean, you get the whole menu and then look at maybe other things as well. Spencer Dalkin I I I will say this and sit down. But It seems like to me that where we are now, It's starting to be useful for us to look more seriously at, for instance, the architecture draft and try to talk about architectural questions at an architectural level. and don't let me derail anything you're doing 6 months, but just kind of reminding the chairs that we have that on our deliverables thing. So That that would be there would be a good thing for us to talk about offline properly. Thank you. Colin James. I totally happy with this or various versions of it. And first, I was gonna get up"
  },
  {
    "startTime": "00:14:00",
    "text": "say, well, like, I'm flying on the format being there, but maybe you'd want the version still in the document. And then I'm, like, Wow. This is not why I'm commenting on any of this is all fine. But I do feel like you know, we still need to figure out, like, what's what part of the walls is going to hold the roof up and this seems more like, you know, where the doorknob's gonna fit. we will need to figure this out for sure and, like, any of these would work. I think I think to me, it's more like, do we need doors or not? like, that type of decision because Yeah. but I think the next slide makes it clearer. Hi, Raul. This is John. This is question of how many options you have. If there are only 2, is reasonable to say that, okay, if one didn't work, take the other. there are 227 That's not an option. The client needs help to figure out what the other possible supported options are when its main options didn't work. and if it's 227 then it's also a fingerprinting thing that the client is revealing something about themselves that they might not want to have revealed. So plenty of trouble. Thank you. So I ended myself to the queue to just ask whether this would work as a solution can we add a layer of indirection here so as the client does know what it's asking for, it asks for the the media directly. And if it doesn't know, it asks for a different media type essence a list. and that would allow you to treat the list as a media event that's requested in exactly the same way and just kicked off other media events. potentially. if you do that, it seems like you kinda don't have to decide now as to us was suggesting you can kind of see as you go whether you need this list thing and what it needs to have in it, as we get some implementation experience, etcetera. That would be a catalog of catalogs? Yeah."
  },
  {
    "startTime": "00:16:01",
    "text": "k. So it's great if if we can go to the next issue. We actually have an example of that. So on that one, I think there was some consensus that clients have an idea of what they wanna consume. So here's the question. assuming we have multiple catalogs now. oh, sorry, multiple streaming formats. How can a client ask for a specific one? So there's 4 parallel solutions squashed onto the same page so that you can compare them all. On the left, We've given The catalog's unique names, So you either call it catalog walk, catalog, Allan chat, or you just call it warp, These would be strings that are in in a Nienna registered table. So we avoid collisions, or we could go numbers if we partner. that's solution number 1, is that you give explicit names for these things. It's solution 2 is catalog of catalogs, as was just mentioned. So you ask for this top level thing that's always called catalog. And in it, it can then say, I've gotta type 0 that's on a registered type of streaming format. and here's the track name. will get you the catalog of the entry point to that. and you could then choose. And that presumably would collapse down to a standard catalog if there were not multiple formats available. Solution 3, is, again, a single catalog but it always lists all the tracks available on all the catalogs that it's producing. So it's a one stop shop If you're producing things across multiple flavors, you put them all in the 1 doc So you don't it there's not another round trip to request another catalog. An example 4 is we give fur knowledge of the format to the CMS or the application. And in this case, everything's called catalog, but the path here is dictating the format. And it's actually reasonable we can build solutions that work in this as much like HTTP requests were today for content."
  },
  {
    "startTime": "00:18:02",
    "text": "So of these 4 solutions, what are the preferences? So has this call since since the cat catalog cannot stand on its own, right, it's part of a streaming format. So if if I'm I'm a client who's supporting a streaming format or log streaming format, I want to get the bundle as part of the stream format. So option 4 is the closest one where you say I'm interested in the WAP. a streaming format, get me the catalog for that one. or a building. Like, I'm I'm inter I'm interested in using Alan's chat streaming format allows for the catalog for that one. I think going with option 4 would it's like more restful way of naming the things, and that should be so a different option. To be clear, option 4 is All the catalogs are named the same, and we require the authentication space to figure out some talk difference. Right. I would say, like, it's a streaming format slash catalog. Just the so you wanna mandate that? Yes. Because you you are a client that scope. trying to support a watch streaming format, then I would not need catalog as part of the streaming format. I don't think so we have a use case where we have a standalone catalog has nothing to do with the streaming format. It's always part of some streaming format. The first boxes that you showed scoping it as part of the streaming format is more natural that way. next week. Hi, Phil. I'm Baker. Yeah. This reminds me of when we face with HDs, we fee. think we've tried all 4 of these, and we found all of them didn't work. I think I would go for 2, and here's why. Yes. You might end up with 200 streaming formats. But you're gonna try and avoid that outcome. If you end up with 200, you've already lost. So you're gonna want to try and guide people into a small number. of formats, And"
  },
  {
    "startTime": "00:20:01",
    "text": "If you If you can get that catalog so that it is the recipient can get what they need in 1 or 2 packets in a single round trip That's a win. If you end up having more packets Well, The sender's got to start making decisions, and they're going to be thinking how to optimize it. So two, where you want the hierarchical thing where where I can put the things that I think are gonna work. And then for the things where you're doing weird stuff, Yeah, here's a link. can follow that for more. I think that that covers everything without boxing you without boxing you into one particular solution, and you can't get out of it. and without having a silly overhead that you For extensibility that you don't need, click it. Bye. Luke here. So, I really like Ted's suggestion. where We basically do option 2 if you have no idea what's going on. It's a 2 pole. From last meeting, everybody loves tuples. Tuples and Florence. You have a format and you have an opaque blob as the the name of the track. If you already know the format like you negotiate out a band, then and, you know, it's warped, then that blob is what you request. So, yeah, I think 2 lets you support both. If you don't know anything, you You get that catalog. It tells you all the possible formats. you already know a name, and you know it's typed just requested. don't need to request that to at all. So clarifying Christian, if The catalog is then a deterministic name. You can always ask for a catalog. a reserve string and anything publishing content must make something available at/catalog Is that what you is that -- then how do you know to No. because -- -- not How do you know to ask for that thing in the first place? And why couldn't you have simply asked for the thing you really want."
  },
  {
    "startTime": "00:22:00",
    "text": "Well, so if you already know what the thing you really want is if you already know this this URL like, think of an HTTP. Like, if you're making an HTTP request, and you already know that it is an m theory weight. Even without the extension, just treat it like the MTV weight. If you don't what it is, you need some descriptor that tells you this is an HLS playlist. the answer to our first question was there was some consensus that clients know what they want to 0. So the client knows what it that it wants to consume a chat or a certain catalog then do we do we really need this introspection skip where they some other solution that lists all the catalogs, and it does it all the time. again, I think it's comes down to the previous discussion. Do you support clients that don't know what they want. And if the answer is maybe, then you have to support both. Or, yes. You know? k. Victor. Victor, Google. I don't think Those are entirely mutually exclusive. Okay. Let me explain. So first of all, we always have to kind of support 3 or some version of 3. That is to say, your catalog may have entries that you are interested in, and it also may have entries or some codex that you don't understand and stuff that you don't need, so you'd have to skip it. Now I is is people have pointed out the 2 and the 4 kind of complementary in the sense that if you can do 2, you can also do 4, if you know, in advance. the exact path. So I think that this right way forward. And I guess the the big question is, like, what do we mean by wharf/catalogandhs/catalog. because in most cases, like,"
  },
  {
    "startTime": "00:24:02",
    "text": "Warp is a forward, but it's also you would usually pick some format based on your use case. specifically, if you have a you're doing class trimming and you're try to watch arbitrary live streams that would be one endpoint versus if you try to publish something or do video conferencing, that would be a different name. So Zoom name here it does it's not necessarily tied to what Europe's packaging but might be more tied to what you telling the server what you're trying to do. Ian Swift, I think there are 3 different possible situations, and it's clear that we wanna support clients that just know exactly what they want. Like, that's very straightforward. I think I, as individual, would probably wanna support, ALPN sort of situation where I'm like, I have a preference list And I'm like, I can do use this type or this type or this type, but, like, give me whichever one, like, works the best for me. I'm not sure if that's actually a requirement, but, like, it seems plausible. Maybe that's too complicated. And so I guess we have to decide as a working group. Like, do we care about the case when, like, the client doesn't have full information or not, and it seems like at this point where we're at, it would be easier to support it. which would, I think, favor something in the shape of 2. And then as Ted said, we can always drop it later if it turns out to be totally useless. but but are my thoughts. So I think this is very much a question of, like, what are working group requirements? Like, what you know, And and I think that will hopefully direct us in the right direction. Good. Cullen, just about everything I've heard of the mic makes a lot of sense to me. I'll say, I'm not really the thing I don't like about 3. One downside, I see a 3 for sure. is I think often when I think about, like, you know, you know, lock and and work or something,"
  },
  {
    "startTime": "00:26:00",
    "text": "These could be generated by completely different systems. inside of a given provider or or service provider platform or different platforms. So I think that stuffing the catalogs into the same thing. That seems like a disadvantage of me. I sort of prefer these ones where it's either meta pointer to the other catalogs or the catalog or in in some way separated for the the 2 different formats or however many different formats it is. So, you know, let me let me put a slight slight vote in for not 3. Spencer Hawkins, and I'm glad that I got in line behind Cohen. I agree with his observation. I did have one question. you you actually called out registration in IAnA for option 1, but not the other ones. It was that intentional? No. That's inferred. So anytime you see type 0, type 3 in the other examples, those would be INA registered Oh, okay. Okay. Okay. Thank you. That that that was that was that was what I hope the answer was. Thank you. The the the question is, are we gonna register them? Do we register a number, or do you register a thing. it really doesn't matter. Thank you. Can I insert myself in the queue? So, actually, we're gonna do Victor who next, and then we're gonna Do a show of hands tool. Those of you remember humming, you may also hung to yourselves while we do that. But first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first first big, big, Yeah. I I think I kind of a small counterpoint towards calendar service. perhaps the fact that they can generate it by different entities means not just we have to add linking, but we have to have some well defined story for how to merge catalogs. because, like, at some point, you would have, a small catalog from 1 life from one media conferencing participant and you want to figure out how to merge that Okay. After"
  },
  {
    "startTime": "00:28:04",
    "text": "Makes sense. I meant more that we'd have a version that would like, let's say there was a broadcast and there was, you know, one subsystem that encoded it as HLS dash and distribute it out that way. In another way, it was gonna do something that might be, like, that type of systems. your point that, like, we wanna be able to think about how these merge seems Valid. Yeah. You know, on the point of merging them, we've already shown examples where catalogs are either JSON or binary. You you can't merge those 2 things. They're They they have to be listed as an object I I just wanna insert my own preference, which Given that we've had preference for 4 and 2 and not 3, I actually prefer 1. But here's why. I think the use case where we clients are having a confusion about the formats, or in fact, you have a distribution system that's Multifoment are gonna be very rare. they're gonna be so rare that I don't even want to make it primary design kits. I think vast majority of the time The client just wants to ask for something, and it wants it explicitly. that's why I would give them clear names like warp, an a chat. And any time I ask for walk, I know what I'm getting If I'm debugging the network and I see a request for walk, I know what it is. I don't see this a paid container enough to go in it. So I like the determinism that comes from just a registered name for the format and I get that catalog. And if you're if you have a client that doesn't know what to ask for. You have another out of band system to give it a menu or a list listing them, and then it can go ask for them explicitly. That's my pitch for number 1. Okay. So in order to to judge this, what I think is actually going on here is we're still kind of going around the question of the client. And I think you just put it as you believe that the blind client is gonna be vanishingly rare. that it's going to know what it wants. And I think therefore, we're gonna start a 8 start a show of hands tool. Those of you who remember humming, you may hang along during this and let's the that Raise your hand was this use case, the blind client use case should be supported"
  },
  {
    "startTime": "00:30:03",
    "text": "Do not raise hand if you believe it should not be supported at least for now. We can always add it later, but the that's the show of hands tool here. please fire up your coins and get ready to answer the question. Sorry. I'm lost. So there -- I want to make sure that I want more time. Sure. Raise hands means I I support the blind kind use case and it should be part of the design space now. The blind client is the one who doesn't know what it's asking for. That's what he called it in the first slide. discovery. Yeah. You you didn't understand the question. You want everybody else to start over? Okay. If you just wanna raise your hand, if you did the wrong thing, I'll count you separately. k. 1, He's gonna to So so two people actually raise their hand for the wrong thing. Okay. Okay. There are 90 something people and 32 of you expressed an opinion. I'm gonna say going once. going twice. more person expressed an opinion. Thank you. Okay. We're gonna close this out. This does not look like strong consensus one way or I would say, there is a mild preference for supporting it. So I would say we don't wanna make any design decisions that rule it out But it'll come up with reasonable solutions for both of these, and then Exvolving then explore them for you. Yeah. Okay. Let's we got 8 minutes 40 seconds left, and I got Yeah. 6 more issues. Mhmm. Are we gonna have a vote on the this one that's on this slide right now?"
  },
  {
    "startTime": "00:32:01",
    "text": "simple, where we you mean between yeah. The blind clients Oh, sorry. It's changed. the the prior issue, I I'm not clear on what our position is. We had votes of support for 4, 2, 1, and a general consensus not 3 but but but but I think we did have a general consensus 23. The decision between the others depends, I think, on the client 1. So you're not to rule out the unknowing client at this point in the design phase, but we're not otherwise making a decision at this point, you can put a proposal in, and we'll discuss it in the context of the specific post. Okay. Thanks. Okay. Okay. Moving on to next issue. this was a question, and this is actually preceded by events, but it is an issue, so I wanted to raise it here. I think that we have a very clean answer already. Should the catalog be a separate draft? and not part of this streaming format. showed you a picture where it's a separate draft. We give an arguments for why it should be a separate draft. I think it should be a separate draft But I'm open to opinions at this point as whether it shouldn't summers. if we feel if if reason it shouldn't be is that there's enough commonality in what catalogs have to do that we can write one catalog that rules the moral for all future use cases, and we just do that right. That would be a reason and not to have it as necessary. Luke. I'm just gonna say keep them separate think every live streaming protocol has them separate. Like, the HLS playlist is completely from the container. in theory, even RTP is the same SDP and RTP they could be using interchangeably. So keep them in these 2 separate layers. The catalog layer and the container layer. Victor."
  },
  {
    "startTime": "00:34:02",
    "text": "Yeah. I I think the catalog should be a separate thing because this means that we can do once solve all of the both simple interest for catalog. and possibly more complex issues like encryption at, like, the layer where you specify it as like thing between catalog and the specific containers that you're using. Okay? any other thoughts on this? I think fair consensus there. Okay. Next issue, please. SBC. So current drop said tracks must be independently decodable. because it's supporting CMS. in in That's CMATH. and SVC is not supported. So should we add SVCs support to work, or should we create a separate streaming format that only supports SBC, And the third one actually agreed to do, which is merge blowover can container an SBC. So that's passed by events since these slides were written But I do think it is SPC is very we we always add academic arguments for see. I just don't see it used in production and I would rather make a format that adds what is used versus and then create a separate format for SVC later. win, win, is a real production use case at the table. Suhas, like, should we and Sohar Cisco, should we add SPC to what or not is kind of Pavel question is that, like, the catalog format today, you think about lock it supports SVC, but it's an optional extension. if only if if the streaming format format wants to use it, it has to define that one. So I agree if SVC is something on on all of those things don't know if we want to use in recent time So it's more like"
  },
  {
    "startTime": "00:36:01",
    "text": "I would say not until you have real requirement for that. Okay. So to be clear, you're suggesting leave it up until we have a real requirement. Don't put a place folder in. when you put a placeholder in and we write test suites, gotta test them Right. There's anything that's in there. Right. I was like, the catalog defines it. Yeah. And it's an optional, so it's not mandatory even in catalog. and if a streaming format needs it, they have a use case. then you go and add another point in time. Sorry. I'm gonna try and take figure out and get in the tool, but I'll try that. mean, I mean, like, I understand SVC is not used widely in the streaming world. But in the real time world, Microsoft has a limited use of it in pretty extensive production at this point. So there are some some use of it. in places. or or variants of of an species like thing. I I don't I've never stood very strong on the tracks must be independently decodable. I mean, obviously, the audio and the video have to go together at some level, yet they're different tracks. Right? And I've always just thought we should you know, decodable is a vague term here. Right? And so the different layers of a layer Codec could possibly be in different tracks or the different tracks? I don't think we have to worry about certainly not arguing that we should put SVC into warp at all because I in the warp context, I think you're clear that it's it's not used and let's not add it until somebody has a use case sending for it. But I don't think would that that I I would I'm fine with that, but I think that's a little bit different from saying we're going to be, like, 100 dependent on dependently decodable tracks have to always be the way. That's all I'm pushing back on a little bit, if that makes Is that fair? As a clarifying answer, the the the question here is within within the syntax for the catalog, we have a relationship key value pair. Right. And the relationship is time aligned, but should there be a relationship which is this track is the dependent upon other trucks. Like, you you need you can't call this by itself. You must always it with something else. I mean, I I think that we are going to need"
  },
  {
    "startTime": "00:38:03",
    "text": "that somewhere. It could be an ex I think we have to allow that extension if nothing else. I think that we are going to get to describing relationships between tracks. including this audio ought to be synced with this video being the simplest version of that. I think that we need to allow for those types of relationships those will will end up on some of the ones that end up in scalable or simulcast codecs. which are widely used. But I don't think that that should complicate it. I don't care if it's the base comp base version of the you know, it can be an extension and whatever. Like, This is shouldn't be a big deal. Is that a fair do you agree with that? Or that's -- Absolutely. Yeah. Yeah. Okay. -- put a placeholder, but not do a a ton of work right now. No. No. No. No. No. Yeah. Yeah. Yeah. allow for anyone. You acknowledge this might happen in the future. Yeah. Okay. I'm just gonna say we've only got a couple minutes left in presentation fairly long queue. I locked it, but try to be brief Victor as well. So one thing I wanted to point out is ignoring SVC. I don't think it makes sense to, like, always start art for tracks to be in the the codable because depending on what your format is. the codable business. might totally make sense. Oh, Whether we can allow on track, depend to another, that's the problem of the container format. That is specifically, if you have containers, it tells you that this is, like, an overlay on this track, the container has to deal with that. And if you're able to parse it container, you will be able to parse that dependency. But I don't even think the catalog needs to know about that because this is not something you will care about until you reach the coding. or, like, you for formats that you don't understand. You don't need that information. Okay. Ali? I will say no need for SBC support in work. But if there's a need for SVC support in a lock, Soviet. Good. I think MP 4 supports SBC in theory. Like, what Victor said, the container"
  },
  {
    "startTime": "00:40:02",
    "text": "just delegates, and there's just this relationship that these two tracks depend on each other. Question is, should the catalog tell you that or should be up to the container, And I think we also need to decide if layers are within a track or if layers are represented as tracks, and I think is the bigger question here. because if layers are tracks, then they must be related to each other somehow. an extension is also a good idea. I think might be the right answer. Harve, Huddl. I think you can safely ignore this. because you can't avoid as we see because all modern codex define it within the codec. The idea of transmitting layers as different track tracks is Not something you really need to care about. So Just let the codec handle it. Christian, Christian, we're not seeing or hearing you yet. Okay. There you are. Well, we can see you, but not hear you. Please. Do you hear me now? Yes. We can. Can you hear me? Yeah. Yes. Something something close to the mic, Yeah. I'm going to disagree with the hard From a transport point of view, it makes a lot of sense to box, the output of the correct and to put the various layers in different tracks. Because that's the only way you can manage is what Also, wise, you get a different kind of warm in which you have to have The truck,"
  },
  {
    "startTime": "00:42:00",
    "text": "managed as a set of of layers, and then you make the in the the relay, cognizant about this. and I would rather not ask the relay cognizant about these things. And if you don't want to make the relay about the structure of your to exit multiple layers, then it's much cleaner to have each layer in a separate track. So I I think we have to have Maybe, I mean, I understand it's easier to do with an extension, but we should definitely not OT. Okay. Thanks. Moe, I think the the the comments that just leave this to the streaming format. CMF does define how SVC should be signaled in in CMAF. There is a profile for HEVC and VVC SVC objects in CMF. but it also mentions about how there are impacts to the manifest because of this. So I haven't looked at a a dash HLS manifest to see how they signal any kind of SEC because with me, like I said, they don't do it. It's just theoretical. So but but from a high level, I would think that The whole purpose of the manifest is to know you know, how how to consume the resource and how to map it to your decoders. And you can't get to the point of parsing the first thing to know, oh, I need another decoder or, oh, I need this other track into this decoder. So I think there must be something at the manifest level that says, these three tracks have to go to the same decoder. you can't send different layers to different decoders. It all has to be in order, and there has to be some you know, sequence numbering, continuity between them. So there must be some something that specifies the exact order if there's multi track"
  },
  {
    "startTime": "00:44:00",
    "text": "SVC happening. Whether anyone wants to consume that, that that complexity, is maybe questionable for the narrow use cases that that it solves. but I don't see any way that it could not be in the manifest or or the catalog and have a a client work. Right? Okay. So that during the q, and sort of out of time. You mentioned a bunch more issues. Are you okay just surfacing those on the list? I just show them at least. Yeah. Why don't you why don't you just run through them quick to raise visibility and then it'll just go what what are some of the high level ones Actually, this we have an answer for. Does catalog need to be CMS Pacific. Again, these issues were written over the last 3 months. and we've had consensus in the last few days that No. We're gonna support more than CMAT. So I think the answer clearly here is No. We'll we'll have other formats, other containerization, and we'll have drafts for those in case you wanna reuse them amongst different streaming formats. So conteprotection and encryption, two levels of this. One is within the format, you can sports, DRM. we're not going to mandate DRM or even describe it here at at IETF, but it is described by CMAP and common encryption with CMF inherits. are multiple modes within that. to One of the biggest problems with OTT content is diversity in those modes. counter versus CPCS? And we have a chance in self formats brand new to stop that and just mandate one of those motes. So there's an option to do that. The second option is Sorry. And the second one is do we define our own content infection. This is some type of envelope encryption. just encrypt the whole object. and come up with a schema. And it would be there for people to use. If you want to roll your own, you can go roll your own. But at would have an interoperable one that that will be available. Those were two questions about protection and encryption. Next issue."
  },
  {
    "startTime": "00:46:00",
    "text": "And then if there's time Should we describe quality parameters for CMATTRAC instead of the We've had some agreement, yes, because it provides a consistent mechanism for discovery or for selecting track segments. Listing all the knits in the CMAF with base 64 for adjacent container gets gets verbose. So the idea is in knits can actually be tracks of their own, and you subscribe to the knit and you get track It's a cashable track, so the edge should have it. think it's a good idea and we'll look at that. And then thirdly, Are we comfortable with the JSON catalog for now? because it's very easy to described to show for people to read and to debug And then we can look at a a more compact binary schema later in the development. processes. Those were the issues, but I think we need either the interim or online as a means due on some Yeah. I think if there's information here. I mean, it sounds like some of the some of the issues are will have been overtaken by events. So I would suggest, tick that issues that you're looking for feedback on in order to make progress. send them onto the list and say, what do people think? See if we can get some asynchronous discussion going. And if not, we'll follow-up at interim. I remember to skip over. and great. Yeah. I think so. It's okay. Let me we can just pause here for a moment. I can talk to her for So there first, there are some minor organizational updates. I created a naming tag as I discussed last time. Everyone just does decide that the name of the naming tag was not the right name. which I cannot even getting to say ironic is. And so is now called terminology. up. And I think that's a great interaction with this working group."
  },
  {
    "startTime": "00:48:05",
    "text": "I added an implementation blocker tag. for issues that need to be fixed before you can plausibly actually, like, implement the spec. this is partially because as an individual, I think it's important to, like, surface these, like, fairly early, like, We can discuss a lot of various points, but if you can't, like, implement the draft and have 2 people at drop rate, and it's, like, not even plausible. than, like, I think we should spend some time on those issues to try to get point like, people can like, right code. Right code. that's kind of a personal opinion. Folks can disagree, but And then these discussions is basically for stuff. needs to be discussed here or in a interim just to try to make sure, like, we get through the most important stuff. and try to, like, allow for for Qs like that. Two slides forward. So this is kind of a strong input forward, but based on discussions with others, the idea was to use the mail in this and GitHub where our places were design decisions discussions can be made, PRs that fixed design issues will remain open for at least a week this for now. is the intent. Plus they require some approvals, and that's to give the entire working group time to comment review and so on and so forth. A week is not. a long period of time, but it is enough that, like, those who are interested in an issue, you should be able to to get around to it. And, obviously, now these decisions are permanent. and, you know, we'll review them. at the next in interim. So large design changes will definitely be publicized on the list. And so, you know, I I think we'll try to get that balance right, so it's not too much information. But, certainly, I think we think entire working group really is gonna wanna take a look at or permanent list. and cut a draft before each interim or plenary. just, you know, we have a new version, and I'll operate or summarize the changes"
  },
  {
    "startTime": "00:50:01",
    "text": "at those months. This is my story. I'm proposal. Do the chairs or the working group have suggestions or thoughts or changes they'd like to make to this Obviously, nothing is sentence down. We can start with this and Go forward or not. Not seeing anybody else in the queue. This looks reasonable to me. Right? Oh, we did we lock it? Yeah. who were originally scheduled. You have that, Spencer. Spencer Hawkins, who will not send the note to the so the ping to the chairs asking if if it was closed intentionally. I just wanted to say about the opened it for at least a week before merging. This is now where group where the GitHub repos are some are being summarized weekly, and that's reflected in the mailing list. which makes the weekly thing a lot more eligible for, I think, I think, for anybody. surly for me. I haven't looked to see if all the dresss that are being added to the mock organization. mock part of the IETF Organization are in the in the activity summary yet, but That's something I've talked about with the chairs before, and we can make that happen. That that's a good point. The 1 week was kind of my suggestion because the intent is to have editor plus plus author meetings every week. And so the hope would be"
  },
  {
    "startTime": "00:52:01",
    "text": "get to the point you have a PR that theirs and the authors are reasonably happy with. and then you don't let it's too long because I've seen the other yeah. Yeah. But maybe we can get it so those come out in a time frame probably like Monday ish. and then the summary emails get sent, like, Tuesday or, like, maybe we can get time synchronized said to give people the maximum amount of time and visibility. I don't know if that's possible, but, like, that's something we could look at. Oh, okay. So so it could be Okay. So maybe we can just try to time those to, like, we give people the maximum amount of time, but I think that's a really good come. So I don't think I have a ton more time, but I do have some issues that are tagged as this discussion, and I guess I will present. my doing great thing. Did I I think I granted you think it did you wanna share your screen? It did Pick it. ass than on that. Yeah. That's but you wanted to share preload slides. So -- It's the 3rd icon in the top bar. Like, there's the hand and then oh, you're on the I think 19. to get a job That's okay."
  },
  {
    "startTime": "00:54:02",
    "text": "room. There we go. See and I was just gonna ask everyone to if they missed humming. Let the notes show. that people home to Would people like to start with the oldest person or at the news Yes. New newest first. Say it again. Okay. trust me. You don't wanna read the oldest. No. No. These are all the ones that, like, were were tag. So I wanna open this issue only 2 hours ago. Yeah. Do you want me to walk through it? I thought it would be wonderful. I Okay. So as I was so I've tried to write this mock chat call, which uses the pubsub mechanisms in mock transport to move text around. And as I was thinking about it, I've got a about a, you know, chat clients, there's a single chat server that produces a catalog, it wants to use announced messages from clients to authorize them and then when they join and then add their tracks to it. The catalog it is publishing. However, if there's a really involved and one of the clients announces to the relay, like, I'm want to join, the relay has no idea where the server is connected. another way to put it is that the announced message tells you where you can route a subscribe But nothing tells you a relay where it can route announces that someone who might be interested or capable of authorizing. So I I think some of this had been vaguely discussed before, and I my recollection is that there are people sort of like the idea that, oh, this is just business logic. It will be determined by prearranged agreements and relays will you know, you have a contract that says, like, this relay will route these kinds of things to this origin. So that's one option. Another option that at least for the chat protocol, I would like"
  },
  {
    "startTime": "00:56:00",
    "text": "is there was just a message where the server can say, I if you get an announced for something that looks like this, send it to me, and I will accept it or reject it. And then I was just discussing with Luke who was implemented to relay, and he said, oh, the way I handled that was I get an announce, I send it to everyone who's connected. And I'm like, oh my gosh. I don't want that So that that's the issue. and there's cue, Victor. Wonderful. Well -- All of those. I mean, option 1 is kind of like the ZIP. the only correct answer in the sense of, like, Zoom. receiver can do whatever they want was announced to some extent. And they there are I see roughly, like, 3 ways announced can play out. 1 is, like, was the server you're connecting to is, like, an ingestion server that we will transcribe out the data. So it's a server just immediate, like, and it seems that that's 1. kind of server the second kind of server is the ones that works like HTTP proxies, so it will just proxies that announced to some downstream. And the third one is, like, any as a few kind of that just forwards analysis. So if you're building a chat network, in the simplest case, you could, like, have one server that just makes us all chat messages. or maybe you have a message, the servers that, like, you have 10 mixing servers, and then you would to forward the chat message based on the hash of, like, the name of your channel that 6 Yeah. Okay. They want you to just make it make it bigger on the screen. No, ma'am. Okay. Yes. I Okay. I will also point out that there are already multiple people in the queue, and at this rate, we'll for exactly one one issue. And if Is that? more, special Okay. The queue is gonna go Suhas Luke Colin Will, so don't be too far from the mic when churn. Churn. Churn."
  },
  {
    "startTime": "00:58:01",
    "text": "Sohas, Cisco. So I think I I this In in in my implementation, at least, the thing that authorizes the catalog is outside the mock trans transport protocol is not part of the transfer protocol, announce is basically pops up. When when you do announce, that relay basically makes a note that for these tracks, who's my where is my publisher or media producer coming from? And when subscribe comes, it'll be routed to that relay in in in in my mesh of release that I have. So what should it be done? I would say this is a business logic which should be outside of mock transfer protocol. Okay. Look. See, yeah, don't do option 3. because announce I I interpret it as a kind of a discovery protocol. But very quickly, if you gossip analysis, it gets bad for so you don't wanna do that. mentally, I'm treating it more like kind of like a push promise in HTTP terminology where it's like a please send a get for this this URL, Just plea please do that. then it's up to the relay. Does it forward that? please send the subscribe, or does it terminate it, or what does it do with it? So I think it's just a request. It's a please subscribe message is what I'm trying to announce as. Okay, Colin. So we were really careful in chartering try I mean, people wanted to keep the description of how the relay were implemented and the internal relay, how the relays talk to other relays. as as out of scope for the working group. So I think the right way to think about this for us is to be Very clear on what the promise the relays are making as a as a block. which is you know, somebody sent an announcement given name space that a subscribe matching that namespace would make it to them. Okay. We maybe I got that phrase slightly wrong, but roughly something along those lines. And the question that we should be asking here is"
  },
  {
    "startTime": "01:00:00",
    "text": "for the way you want to think about doing this or the client you're doing, Is there any information that should have been in the announce that was not there that you needed? and that's what we should open a bug in if there's anything that was missing there. And I I I suspect there's probably not for a text client, so sort of done a text client as well. But I I think that that's that's the right way to think about it. And then, you know, how the relays decided to flood fill or deal with or a centralized database. There's many ways could deal with figuring out their internal routing information, but one way or another, they have to deal with how to figure out how they're gonna route information. And I think we want that to be basically So just to clarify, I totally agree that everything within the relay, I want to be out of scope. if I think of the relays, I'm or cloud, and I have two clients and a server that are all connected to the same cloud how how do the how do the clients find where the server is? Do I need to if I say wanna do an interop with Luke's server. his relay, do I need to make a business arrangement with him that's, like, okay, we're gonna set up a chat, and your relay is gonna point announces that look like this to my server Or is there a way that the protocol can tell like, when my server connects and it's like, hey. I'm starting a chat, and people who wanna join since So, I mean, I guess maybe I'm not sure the details on that. We'll go on further but if we if your client can't come out to his relays for yours and hers or whatever. I mean, we fail. Right? That's not inter Obviously, this as a working group, we're supposed to deliver. that my client can work with somebody else's relays. That's the fundamental interop we need. So if we're not making that, we're failing. So yes. Okay. Thanks. Well, Yeah. I'm just backing up the the business logic approach. There's so many other decisions that have to be part of other structure like how how does the relay even go forward with any What does it go forward to? all of that is not part of mock transport. That's part of the implementation of a more transport compliant network. So I think announce the client should announce the catalogs. It is willing to produce. That's what it announces. I am the source of these catalogs. What what the relay does with that is"
  },
  {
    "startTime": "01:02:00",
    "text": "business logic in the Relay. But that one of the fields and analysis is an authorization field. which sometimes the relay will be able to validate, and sometimes somebody else is supposed to validate. trying to figure out how the relay knows where to send that information, who's gonna validate it. because, like so if I'm a building a relay network, work, I will tell the relay you're allowed to validate it because I want my edge to validate it. I'll give tools to do that. other ones might say, nope. Forwarded to some centralized authorization check. -- second one is out of band. Like, there's no -- No. The second one's allowed. We we can't dictate what how the network should behave. All we can say is the announced is a single We will guarantee a client connects, to a relay or some an endpoint and says, I am I am announcing, I am the source for these error looks. that's that's what it has to do. And if if necessary, it supplies token to say, and he has my authorization to be the source for them. But we we should not constrain what is done with that information. So I also I think it didn't mention this whenever I read the issue, but the the the business logic is always an Right. Right. nothing ever precluding. They're they're a particular relay network can be configured to do a certain thing with announce. the question is should there also be a sort of more per programmatically? Anyway, Christian, I have locked the queue because we have 2 minutes left total. And as as I said, with this number of people we're getting through maybe 1, Christian. I think we have to consider the case of having several with the networks of Redux. because all the business logic decision assume that you get the name of the track and then you're sending the truck name 2 Somehow, the right network of few days. That doesn't cover the cares of all those things that you're sending that truck them to say, a local cash server. which is independent of things, which would be something in the small business decision. And in those independent real scenarios, they will have to figure somehow"
  },
  {
    "startTime": "01:04:00",
    "text": "hard too. hope I get the unknowns. to the right place and know whether to do it or not. And have to be At least explain how that will work. Given the amount of time, probably I shouldn't even dive into another shoe, but I will just go back to the list of needs discussion items, and you know, ask the folks take a look through them, and if they have strong opinions, please follow-up on them. And Alright. and Thank you. Thank you all for your time. And yeah. Thanks, Ian. Who is next? Is it Suhas or it's or Cullen Suhas, your hair is so much longer than I remember. Not to mention Sula's spelling just got much worse. you have to actually stop sharing something like that. Okay. You better name up? And I'm gonna stay on schedule with these because So which which users? the usage? Usage. Okay. So Suhas Mo and I have been working on sort of the the monkeys, such as stuff a little bit. band. We're we're we're we're we're not gonna make some it's gonna be a little bit of a meta conversation versus the standard. But jump on next slide here. So the you know, this working group at some level, we need to figure out how media goes quick. And transport doesn't actually do that. It it it I'll talk a"
  },
  {
    "startTime": "01:06:03",
    "text": "about what it does in a second, but it provides and tracks and groups and these sorts of things, which is great. But we need to figure out how the the actual media audio video that we're talking about lands into those different things. And we need to talk about how those things then land on to quick streams. Right? Because there's there's many many options on that. And this comes back around to, like, well, the the complicated cases like simulcast and SVC and some of some of those things. So I don't expect to make any forward progress exactly on any of those things. is 10 minutes here. Okay? What I wanna just queue up a little bit is the technical decisions that I think that we need to make on some of that and how we might go about doing some So next slide. So, When we're doing this, a lot of these things the reasons why you want to arrange these things differently, largely have to do with the latency and the reliability characteristics that you're gonna get by arranging it differently. And a lot of these are deeply coupled with you think you're going to prioritize things as well. Now my assumption is that we will be able to, if nothing else, One of our limitations on priority is for a given stream, we can only set one priority for it at the sort of quick level. And I I don't think I mean, I guess, you could the quick working group could theoretically change that. But I'm working on that assumption right now. Okay? and that if we want things to have effect different priority levels and how they're going. we will probably need them to be in different strengths. some other things sort of come up as, you know, the the the the impact on on lost their latency or something. I mean, obviously, if you put your whole complete you know, you're doing streaming media and you're gonna put the whole moo movie into one stream like a single t connection? I mean, it it might be sort of good from makes your loss recovery stuff easy, but it might be bad from a head of line blocking and latency point of view. It's trade offs on that. So Next slide. Next slide. The just as a reminder of what all of these things are for us"
  },
  {
    "startTime": "01:08:05",
    "text": "we we're we're basically arranging things into tracks, often correspond to a video at a given resolution. Video, different resolution might be or different quality or encoding point might be a a a different track. The audio might be a different track. If if we get to the question of what it is in a scalable video codec becomes becomes much bigger. But to Harold's point earlier, at some level, all needs to go to the same decoder, at some other level, if you want the whole reason you were using scalable video was to transmit those layers at different priorities. And if you couple that with the assumption that they need to be in different quick streams to achieve that. you know, it gets a little bit more complicated. So, you know, we have to figure out those types of things. the things we've agreed on that's in the mock transport draft. is that We have objects, that that the the media will go in an object, some portion of the media, and each each object, We'll put those into groups, groups form low you know, these these are law joint points, some things you can catch up and come to. And then a whole bunch of groups are arranged into a track, and we will have multiple tracks. catalog will help you find all your tracks. Next slide. So and we're gonna skip through a bunch of Sure. Next slide. I've sort of covered big chunks of this. So I'm not going to go through each one of these slides, but you could see in the in the draft in these slides. And this type of thing I'd like to slowly fill in and figure out as time goes on here. is we have a bunch of different proposed models and ways of doing that various people have been brought up at various points in time. And it might not be that we wanna do all of these probably wanna do more than a single one of them. But, you know, one is like one encoded frame per object. Right? And so we look at that. We think about what's in that object. We can write some pros and cons of it, sort of figure it out and start having some implementation variance on these. Because as you implement these, they often turn out. They work differently than you thought they were gonna before you implemented"
  },
  {
    "startTime": "01:10:00",
    "text": "So let's skip through a bunch of the slides here, but you sort of get an idea of flavor of the different ones that I think that we need think about over time and help fill in these things. Don't take these pros cons too seriously. I didn't think about them all that strongly. Like like, one of the things we need to do is collect the data and figure that keep skipping forward here. or more more on the skips, you know, So let's stop here for a second. So go back one slide. This is such a speedy system forward and back. I love it. So The next issue we need to do with is you've got these objects And, you know, you need to describe how they get mapped into quick streams. And, again, this is different based on what you think the priorities are and what we're doing for those in the screens. know, things we've heard is a quick stream per object, per group, you know, multiple track various different ideas have been have been done on this, but we need to experiment and play with those things, see how they all come out in pros and cons. So let's go to the next couple slides. We'll probably skip a few because they mostly relate to looking at those types Thanks. Yeah. So do pros and cons of these. We'll talk about what they are, how they are, Next slide. SVC, there's a couple different possibilities here. All layers in one track was proposed earlier in the session, next slide. know, one track per layer, you know, was proposed. Next slide. I mean, know, which one of those better? I'm not even gonna So here's my last slide, actually. And this is the one I wanna actually talk about with people. So my actual proposal on this right now is We should not be just trying to decide this today or tomorrow. that what we need to do is we need to implement some of these things. And Some of them we need to just think hard about, we can implement on a piece of paper. Some of them we need to implement in real code. Maybe it's not a full running perfect system that does the protocol, but it's enough code that it has exhibits characteristics similar to what Moc would do if it did this. and we need to sort of document the results on those."
  },
  {
    "startTime": "01:12:03",
    "text": "And then at that point, try and pick which one of these really makes sense as the code points for us. So the thing I'm most interested in getting feedback on is, like, Do people agree on that? disagree? What are the things they wanna implement it, what are the ways that they want to characterize and think about the quality of these implementations. What's the data that we'd wanna before we made really good decisions on this. So with that, that's basically my end. And let me open it up from there to collect info. whatever input people wanna get, and we'll try and make that happen going forward in the draft. fixed fixed Bernard your first. Yeah. I wanted to back colon suggestion that you can just go implement stuff and figure out what works. I mean, I'm not I mean, I've implemented SBC with mock and it works fine. It doesn't require a lot of complexity. need to understand what's discardable and what's not So It doesn't have to be a huge deal. Okay. Thanks. Jonathan Rosenberg? And I since we only have a minute left in 2 other presenters, I I did lock you. I tried it. Jonathan Rosenberg, 59. I think there are an important difference between the questions you're asking here. The question about how we map Mokt, objects, groups and tracks into quick. is something that when we do it, it's locked. It's like so I think maybe Luke said this idea of separation of church and state. Right? One of these things, which is the stuff the relay network is doing, once we spec it and deploy it, this extremely hard to change. and we wanna give flexibility at that layer so that the application above can, you know, constantly be mucking around with this. different different applications can make different decisions, and that's the second issue you're describing. which is how we map, for example, codec frames and slices and whatever, into the objects that Mokt exposes. So I I think it's far, like, the most important property for me is a system that we're in the relay network allows the Apple location to make delayed decisions."
  },
  {
    "startTime": "01:14:00",
    "text": "we can change in the future about how this mapping works. Sorry. It went and the so the the one that you wanna make sure that we have that future, like we carbon stone for future extensibility now is the sort of mapping of objects to quick streams, not so much the mapping of media to objects. That's right. And the primary property for that one for how we map Moktita quick, Yep. That has to just give flexibility. so that we can use it and however we wanted the application layer. Sounds good. Looks giving you a thumbs up. So up and wants people are nodding. So Quick question. You know, 9 months ago in in Mark, we were talking about streams and data grams. And I noticed in this presentation, there was it was all streams and no data grants. have we is there consensus that we can make this work with slices of very small streams. Or is there still interest or in experimenting with dataograms. Okay. I'm definitely going to experiment with data no matter what this working group says. Because the general law of people the people who've seen pro, we can do this all with Allstream's only. think that a single object per stream will be the same as Datagraph. that's the argument that's made. Okay? And that may be true. may not be true. will point out that Clubhouse's deployment suggested it certainly was not true with Quick Stack's appointing time that was deployed. So there is but I think we need to experiment with that. Certainly, I wanna see Datagrams. I have not you know, I just got so much pushback on Datagram, so I like, I'm not even gonna bring that up until I have some data that backs. There might be a need for it. But, again, it's back if I can bring a con then I'm speaking, you know, I I suspect that streams are a streams of a single object are not going to work as well as Datograms for audio. And I'm interested in the audio use case. If I'm wrong about that, awesome. I'll just use Stream If I'm right about that, yeah, you'll be hearing from me. And, like, you know, you guys got front of me there. Altani? Altani from Sisko Meraki. I'm I'm curious what kind of metric are you using in your decision making process to evaluate these very many options."
  },
  {
    "startTime": "01:16:04",
    "text": "That's a really great question. I was hoping people are gonna give me good versus to that. But I what I would say is that's sort of evolving, But certainly, latency is really one of the key ones to me. and then also artifacts and artifacts at a sort of human user experience how good you would rate the media quality experience. And that is really hard to, you you know, taking figuring out what a a human perceptual score is, would write a given video quality in an automated way. It's always been a hard problem. that's never perfectly answered, but we're trying to sort of figure out how can we just have something that has low latency, not a huge efficiency overhead bandwidth in how much extra bandwidth we use, particularly an audio only case. And when there are artifacts due to packet losses, and I'm really interested in not random packet losses, but the type of packet losses we see on cough Meraki Wi Fi equipment. No. But done Wi Fi and other things like that. that that that the that the visual artifacts an imperceptional experience for the end user is is least bad. So I hope that's sort of That does answer the question. However, it could be very much related to the kind of codec that you are using. For sure. So Okay. You're right. Alright. Suhance real quick. And then, Moe, you're gonna be up Thanks. Thanks, Kevin, for presenting. Thanks, Sohaz, for presenting. So I I I I believe it Jonathan that One of the from my earlier experimentation with supporting the brush warped datagrams, and now the mock models that we have what at least myself and Christian and some of the people who develop a prototype learned is that having this flexibility at the transport level is important. especially when in some of the use cases that we are considering where where we have a well engineered relays. and we would want Relay to be able to modify the transport mapping because you are using, like, a bulk bulk"
  },
  {
    "startTime": "01:18:02",
    "text": "GS enabled packets, and you don't want to kind of have a mapping that's really all and works only for certain use cases, having that flexibility at the transport level is good. And at the same time, more and more, I talk to people. They have different requirements coming from either VR space or the space. They won't have really not or finalized anything at the application level mapping, and then we need to keep that totally open as well. Thanks. So if I could say one last request as we wrap up and thanks, is just, you know, there's a lot of options in that I put in, you know, in the draft whatever, there's a lot of different possible combinations. If there are 1 or 2 of those that you think yeah, I think that that one's gonna be the winner. or there's 1 or 2 of them you think there's no way that could ever win. Like, give us that information so we can eliminate a bunch of those out of the draft. That would be really helpful. Thank Okay. Well, we have 2 more presentations and a decision about interims to make or at least to start. So Moe, speedier than speedy. Good. This is the WebCodex media format was called low overhead container or lock. and it's an alternative to CMATH. and it's based on WebCodex and the re the current draft has a catalog format too, but that'll be changing. By lower head, we mean minimal encapsulation. So on the wire, high efficiency. And for the application, little overhead when you're interfacing to web codecs. So minimal application overhead minimal run time. Next. Okay. So why are we doing this? Why not just use CMF? Smith has is pretty chatty. a lot of bites. There's a lot of nested headers. It's well over a 100 bytes per frame. it could be way way more than that in in some configurations. For audio, that's a nonstarter. You already doubled the audio bitrate. So it's not efficient if you're only transporting audio. If audio is a minor you know, drop in your bucket and you're sending giant video streams, maybe it's still acceptable."
  },
  {
    "startTime": "01:20:00",
    "text": "But if you're only doing audio, it's certainly not acceptable. And it's also just complex for the application to manage all of these these nest things this seen a big you know, matroshka multilevel, you know, thing. it's it's a lot of work for they have to they have to parse and and decode and then build all of these these different nested boxes to eventually extract frames. So why WebCod? Because the authors are lazy, we didn't start looking at by looking at WebCodex, we were just gonna go with the raw elementary bitstream of of the codex that we cared about, and we realized WebCodex has already done this. So there's no reason to go back and redo that effort. There's no reason to have a INA registry all the codecs we care about and their elementary streams because WebCodex has w three c registry of exactly that. So we're using WebCodex directly. And the side benefit of that is now if you're application is a web application. It's using WebCodix. You can very easily consume the output of WebCodex with a low overhead low application overhead and low wire overhead. So we refer to the WebCodexregistries But, really, those registries, are just the underlying elementary midstream of of the a a few popular codecs. It's not all codecs. It's not all the defined codecs in the RTP formats with just a few of the most popular ones that are use the browsers for sure and use the most other applications. And this is not tied WebCodex. So you could use this outside of a web browser. You can use it outside of WebCodex. Again, the reference WebCodex is just for convenience and not having to reregister a lot of things. Next. It's a simple format. So inside of a mock object, you have the the header and the payload. the mock object payload will have the lock header and payload. The payload is just literally the internal data of WebCodex Encoded Video and audio chunks. are just frames. the raw element of bitstream frame the underlying audio of your codec."
  },
  {
    "startTime": "01:22:03",
    "text": "The low header has metadata, things like sequence number or time stamp. And there's questions, open issues about whether or not those things should migrate up. to the mock object header itself. Next slide. So some updates from discussions on Monday Tuesday. will be removing the catalog from the current draft. There'll be a common catalog format draft. we'll be redaming it to WebCodex. so not lock. And then there'll be a separate section of of the low overhead profile that combines all of these things together that combines the common catalog format, the WebCodex, media format and some application logic that you need to bind all these together. Open issues remaining. Luke brought up a very good one that Arthur struggled with for a long time. when writing this is the in band parameter sets versus out of band parameter sets. We still don't have a good solution for it. We'll we'll work on that offline. like I mentioned before, there's some header fields that could potentially move from the lock header up to the Object header. We need to talk about that's a good idea. Several people have commented about the time stamps where there should be a coordinated, you know, common time stamp format or whether it should be open to applications to do whatever they want with a blob. needs to be decided. And then in concept protection, multiple contact protection schemes, including S Frame, still an open issue as well. So Okay. There are two people in queue. I'm gonna lock the queue now. we'll go to our -- if go ahead. But very quick. Thank you. Very quick. two things. First, oversimplification doesn't help. And the frame marking graph is an example for that. So I would suggest follow application layer framing principles and don't say it's video, but say it's h264, it's h264, it's whatever as a container."
  },
  {
    "startTime": "01:24:00",
    "text": "and make those containers specific to the codecs. That's that's number 1. Number 2, Number 2 is that for later. Victor, Oh, Victor. media container enthusiast. I want to say I very supportive of this work. One thing is we need to there are 2 things. 1, like, the danger with this is that oh, we might have to specify much more things that we're currently missing, that the like, the entire reason I will support you for CMF originally is that CMF lets us punt our problems to somewhere else, namely ISO. And here, we're hunting our problems to some more errors, so this is w for c, but we still need to be very careful that the layer the difference between those layers is not things that become manageable. Okay. If you need to write that up to the list, please do. We have closed the queue on the use the chair said they would discuss whether this was going to be moved the quick the working group directory or no github repo? So We will we will take that to the list at this point. We're also gonna tell Ali, we don't have time for you we're sorry. We only have 5 minutes and we need to make a decision on whether we're going to try and do an interim. So we have been talking A lot today. There's clearly a lot we need to cover. hopefully, we can do a lot of that on the list, but we also wanna ask people's appetite for doing either an in person or virtual interim between now and Prague. And so the first question is, in person at work. interim, and then we'll try and find time. If we're doing an in person, it would probably be 2 days long maybe a day and a half, but definitely plan on being wherever it is before it starts on day 1 and being gone late in the day of day 2 or day 3. How many people"
  },
  {
    "startTime": "01:26:01",
    "text": "by a show of hands in this room. We will ask on the list as well feel like they would be able to set aside that amount of time at the end of September or early October sometime We have an offer for Boston, but it's not set. So that that would be the potential where, but it might still change. So Please raise your hands if you think you might be able to set aside that amount of time. Okay. Please raise your hand if you believe you can only do a virtual. Boston with a beef bravo. Sir, Okay. So did you just raise your hands for the second question? Was you can only do a virtual did you Okay. So we'd moved on. Please raise your hand if you think you can only do a virtual. Okay. 1, 2, Hope. problem. Okay. So I think we will con given given that balance, We'll continue to to look to see if there is particular timing on an in person, it would, of course, be hybrid. all in person at this point would still have the same mid echo or similar support. So we would not be leaving out remote participants. And I think that's kind of the way forward there. Okay? There's Victor Smith. queue. Victor, are you in the queue? Okay. So that actually cleared up a little quicker. So let me go back to the question that was asked by Cullen. What we did with the warp draft is we didn't adopt it right away, but we did say it's gonna move into the common repo so that the issues list, etcetera. could be managed there. Are we ready to do that for WebCodex now? Does anybody have doing that for web codecs. Okay. So we'll ask the authors when they readmit it with the new draft name. to put it into the the common repo for the working group."
  },
  {
    "startTime": "01:28:00",
    "text": "so we can manage all of the common tags and management there. Okay? Ali, I'm really sorry about this. Please send the a Dulson. the the information to to the list and it will be in the proceedings and please make sure it gets sent Oh, and, also, I think you're presenting at the SF video meetup also. Same information. year. blower Yep. Yeah. Yeah. If you've got a if you've got a a video presentation that we can watch, that would be that would be great too. Okay. Okay. Can you can you circulate to the list where that's gonna be so that people have and awareness of it. Thanks, and and my apologies again. Just for the shares, could you put the numbers of the people that were available in the in the minutes Okay. So the I I saw about 25 26 people who said that they were available for in person and only 2 or 3 who said they definitely could only do virtual So, again, that's that's not great given we have a 100 So we'll it's still possible that we will go back to virtual, but the we'll keep trying on the physical interim at this at this stage. Thanks, everyone, and see you on the list. unsurprisingly, several people who said are currently virtual, said they can only do virtual. So check the chat. I will check the chat, and we're gonna have to take it to the list, obviously, anyway. It will go to the mailing list for final decision. I think a lot of people undecided and they it was no option to say, I just don't know. I can't commit to one of the other. Okay. And and and and that's why Yeah. I my question for the repo. So we wanna make a catalog top. Right? Sue has started a cattle on on on It's outside I'm gonna modify the work. and then create a c map"
  },
  {
    "startTime": "01:30:02",
    "text": "those blocks we spoke about. Do do we do that directly in the log of a fuzzy drink or do we do it outside, and then we vote on them, we bring them in."
  }
]
