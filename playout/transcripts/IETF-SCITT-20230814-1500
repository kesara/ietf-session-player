[
  {
    "startTime": "00:00:05",
    "text": "folks hi everyone can you hear me Yes sounds so good okay hi Ray John hi Steve Neil I see also Andrew I think a new participant and I have no idea who owned you kiss let's wait a few more minutes I expect uh light participation giving the summer vacation period foreign"
  },
  {
    "startTime": "00:02:42",
    "text": "thanks for the feedback Andrew uh glad that you joined okay John are you are you also ready yep I'm ready I'm just putting a skeleton of the minutes together in hedge dock right now oh good point uh yeah I have lots of big uh meeting minutes we can always do that collectively so we actually make some we capture as much as possible yeah exactly I'm just putting the agenda and stuff in so that we don't waste time on yeah and thanks for [Music] ahead of time we as you all have seen on on the meeting is we had to cancel last week's meeting because we failed what I failed to distribute the uh meeting invite with the agenda uh in with enough in advance notice and so we had to cancel that meeting and then give it another try but now John has set up a recurring meeting um in case you have seen that with the from the IDF um meeting website from the working group meeting website and so I think that"
  },
  {
    "startTime": "00:04:03",
    "text": "should be a non-issue in the future but uh if you never know but at the end of the meeting we are going to spend the last five minutes um to just talk about like maybe two items that we want to put in the agenda for next week so we we are safe on that side John do you do you want to say a few words about the agenda and maybe do well we do a little bit of batching maybe some of uh the folks here on the call hi Ori I Hank uh I can't see um yeah definitely want to do a call for agenda bashing and also bash the agenda bashing um myself so I've got an item um does anybody else have um items outside of the published agenda that they want to talk to to tackle yeah actually I have maybe um a discussion for about five ten minutes about how to uh how to mold what we saw from uh anyway so uh yeah what we saw from dick and what I see above what the structure that we have now and sort of that data item thanks what what would be the the name of that agenda item let me I'll think about it and put it in the chat thanks Okay cool so sounds like that's the only one so mine I will put a message out on the mailing list as well to make all of"
  },
  {
    "startTime": "00:06:02",
    "text": "this very fair but just um it's already time to start thinking about 118 in Prague the session request tool is open so if anyone has any strong requirements or opinions on the session for 118 if it should be at the beginning of the week or the end of the week um or wants to express um Clash avoidances um we if we collect those early it'll be easier to accommodate obviously uh Hank yeah interesting um just coming back to an item that I heard before earlier before which is that this skit is now reoccurring interim at least the data tracker tells me that's not true ah just highlighting um so I'm synchronizing the data tracker into my schedule but maybe something was async so assumed it nothing showed and I looked at the cited safe and nothing shows just just uh just as a cross check yeah let me double check that I clicked buttons to make it recurring but maybe that didn't happen or maybe they need to be approved separately who knows I'll make a note to double check that's actually happening happy man uh should be um uh re-ordered reorder the agenda items a little bit um because for example the progress reports are probably shorter than the review of the aprs and the issues but also regarding the feed structure I'm talking a little bit about the where we are with the feed structure uh kind"
  },
  {
    "startTime": "00:08:00",
    "text": "of progress on that yeah I figured that one should go last because it's that that's the likely to be the never-ending chat okay yeah um but yeah we can do the other three yeah um in whatever order we see fit so ori's ori's here I'm here and Hank is is here so um we can certainly do Scrappy you do um uh Ori or Hank any particular feedback or updates or comments for the group on on Scrappy so far I think yeah so um I I added myself as a reviewer and was um then blocking or or locking on on orange comment uh or your question what's the payoff for having a yaml version um um I can I can reflect a little bit of uh the uh sibo working group's opinion here I hope um constantly correctly if I was wrong later um that um Yama is actually a good uh um alternative or optional diagnostic language possible so um so I'm not entirely sure if you want to send it over the wire because line breaks and line breaks so I I once before sibo I once did a base64 encountered line of yaml to put another base64 encoded message that is all these lines of yaml because it's line break oriented and it was it was a nightmare and um and just because it had to go through to some binary in the end and so yeah I think I'm not against that as a as a uh um because this is a media type a comment"
  },
  {
    "startTime": "00:10:02",
    "text": "um as really putting that on the Via I mean I don't know uh I think it's a representation problem um not a transport problem or a encoding problem but uh that's maybe just me but I know that the again sibo working group uh is is uh is basically uh in front of but never really came to um using yaml as a diagnostic representation for sibo for example what would be the benefit of uh of using Yammer like it's a for the API right we're talking about the API are we um yes indeed uh so this is for the API and um and the API will have a control message or the protocol messages of course and and yeah I think the studio is coming from Ori he also gave a comment but always also here maybe he can apply for that if he is listening in not distracted yes um I'll just jump ahead uh so with cozy and seaboor you often have binary formats that you're moving around and a lot of developers will parse the binary formats correctly perfectly with no armoring or encoding in a human readable or text safe representation um that's the ideal case in my experience most of the time they will misparse the binaries OR at some point be making some kind of binary parsing mistakes and at that point uh they may fall back to encoding the binaries as text to move them across API"
  },
  {
    "startTime": "00:12:00",
    "text": "boundaries I think that that encoding as text thing is maybe not always a great thing that happens in apis but at the same time a lot of API tooling is it's not really ready for Seaboard or cozy and so you might want to when you're building an API plan ahead for the fact that for example open API specification might not handle uh cozy or seaboor content types as nicely as it will handle string encodings and so what you can do is you can say you know here's the content type for cozy or seaboor and here's a Json or yaml representation of the same kind of response types and the yaml and Json versions can be really really helpful to implementers um it's again like you know it's gonna make payloads more you know expensive it makes the API interface potentially more complicated you could have cases where maybe you're negotiating for Content Types on the API you know and then there's different API considerations if the API isn't over HTTP you know how are you handling your different content types Etc uh with all that being said my experience working with cozy uh structures that we have today with apis is that I just prefer to wrap them in yaml or Json before I do anything with them um I just find it easier as a developer to work with uh API representations that are like that maybe that's uh maybe that's just the test or development mode thing that goes away when you get to the production case um but I think I would be concerned about how much adoption you might get if you stick to an API that's pure seabour and"
  },
  {
    "startTime": "00:14:01",
    "text": "cozy uh it just it's difficult for developers to work in that space sometimes that's it so it's um I I have to check if it would essentially be a way to define this so would uh an issue a potentially use um like a Json representation uh of the of the sign statement or would that still be a binary person representation as today and then kind of behind the scenes on the API it would be the binary version would be translated or transcoded into into sort of Json Style I'm not really sure I mean I think that the main experience that I've had so far is when I build the open API specification documents to describe the skit apis if the response type is seaboor then I need to handle pure binary formats across the wire consistently and you know maybe it's just that I'm tortured by living in the web platform but web platform binary support is not that great and so you end up having to do you know you you end up feeling the different binary representations um right at the API boundary in a way that is not as comfortable as having a kind of armored serialization for binary that's it okay okay see I see rayon in the queue Ray ah yeah let me just say I I completely"
  },
  {
    "startTime": "00:16:01",
    "text": "agree with that and uh the reason is because uh you know we're human beings and ultimately we have to work with this stuff and the closer we can get to making it always something that we can understand uh the easier it is to debug it um time and again I've seen things that were were very much uh you know binary encodings but eventually you have to be able to follow that you have to be able to decode it and and put it into a format where you can say okay this is what we're working with uh so that you can you can check it all the way through um indeed you know once maybe everything is locked down that can go away but likely um you know unless we see a real need for it um I I don't know I know that you know asn.1 was the sort of precursor for packing things into a really tight binary format and um that's sort of what seabor replaces um but that came from a time when computer memory and and bandwidth was really in short supply um today we don't have any short supply well we have everything is limited but not to the extent that it used to be and so if we could leave it in Json I don't I'm not a fan of yaml so I'll just be honest with you it's the syntax is not as clear-cut so uh I I would promote Json it's obviously the absolute leader in terms of interface um you know syntax and why not just leave it in that it's a good question to ask why go to seaboor is there a reason and if there's not a reason um you know it you could leave it the"
  },
  {
    "startTime": "00:18:03",
    "text": "structure or whatever it is right now we're re-encoding into um a Seaborn and and then encrypting that uh you could just leave that in this as a Json block and and do the same thing with it as long as the Json was had limit you know special uh and indeed there are some fields that are are going to have to be if you put that into an encoding that is um you know human readable some parts are not going to be right so so the binary you know um say signature is something that's still very opaque I don't know you know you can't read it so that it can be encoded in something that is still transportable but if what this is a question is there I I I just think that yeah I'm going along with what Ori is saying in that that the apis should not the thing that are obviously going to be used by human beings which is the apis to do this should not be should maybe there's a way we can have the Json Co a standardized Json for everything that is what we mainly Target and then if necessary it's turned into to uh cozy and Seaboard but you know I I'm I'm not going to be pushing that point of view I'm just saying I agree with the idea that it should be human readable and I'll shut up at this point thanks thanks Ray John uh yeah just a quick note um thanks for the previous comment so I get it now and I've not resolved because we didn't have that turned on but yeah resolve my comment on on the pr and approved it I think that's fine I think I got hung up in a similar way to Rey of just wondering why we don't just stick with Json um but yeah everything else about portability across the boundaries and"
  },
  {
    "startTime": "00:20:01",
    "text": "readability and debugability um makes a ton of sense I've had to do that in working with the emulator and implementing this thing already so I think um all that makes a lot of sense so thank you um yeah so one reason to stick with one thing at least for the authenticity and the three part of course is um the um homogenicity uh the the uniform uh method applied for a signature checking so for authenticity uh checking um that makes a lot of sense it's that's why we decouple the statements media types from the surrounding authenticity representation which at the moment is cozy and there's good reason for that so um so we have already the Liberty to to render the statements as ever we want and we can also uh do the API calls as however we want we can write proprietary protocols to perform the exact same actions as the reference API and then you create valid uh um I want to say verifiable data structures now sorry not only trees and uh and then uh work on them but in order to provide the insoppability between all the trees sorry again verifiable data structures you need and this one authenticity representation and and uh the the the the most useful common denominator we think is uh cozy because we can't be stuck in a representation problem uh now we will make a decision for some time into the future here and and going with Jason which is and I have absolutely feel you are a little bit of web platform problem yes the support might not be great but"
  },
  {
    "startTime": "00:22:02",
    "text": "again um we could also improve on the tooling for the web platform representation to debug things like for example I heard from Ray I think not so great uh Json nice um sibo dayak literally is Jason with a few things that Jason never ever cannot express so it has to be tinkered a little bit to make it uh uh representable so sibo diagnostic representation basically is Json plus plus for humans to read it the C board um so maybe that's already good enough maybe that is not highlighted enough maybe that is not known well uh that is a co-wg problem and it should be fixed um having said that uh I I think that that the real uh challenge here is uh when you start to include uh Jose as the authenticity envelope um you will Splinter the validation procedures and uh interoperable verify verifiable data structures and that is a problem assume um you can work around that I I think with more more complexity but then again other and more severe mistakes can be made thank you Hank uh Neil oh yeah I I think I agree mostly with Hank um I'm concerned I mean just having seen all the problems for decades that have happened in the world of canonicalization the notion of having kind of two different ways to represent something seems um fraud with with problems I mean I have to say I don't haven't looked at the API um so I'm not really sure what's going on but uh and I'd love some specific"
  },
  {
    "startTime": "00:24:00",
    "text": "examples but um it it seems that sticking to something and I don't know what it should be is better than having um one way that the data shows up when you're signing it in a different way that it shows up when you're passing it around [Music] okay thanks Nick um yeah I'm so I I can obviously understand sort of the the desire to to use also something like a json-based version uh giving the the way how various languages support json-based structures like you can find as a developer you can find hundreds of tutorials for different languages like Google or whatever and how easy it is to to pass all that data structure so so I can certainly understand what I would like to avoid is having two different encodings because we can't decide uh so having having post works I think that makes it uh even worse so we would have to decide fairly soon I think functionality wise uh we could do all the things we want uh and and the functionality we need in Jose and in kosi so so that shouldn't be an issue and at least that's my understanding but uh yeah would be good to decide that sooner rather than later Ori so we should be careful there's a difference between you know a media type or concrete representation of a spec concept like a receipt"
  },
  {
    "startTime": "00:26:01",
    "text": "and a representation of a response from the API you know the the response from the API can just be uh the same as the spec representation or it can be a different media type that wraps the spec representation it can do that and stay in seaboor or it can do that and cross media type boundary so you have a seaboor object that's exposed as Json in as a Json structure for example so the the kind of question that I have we kind of come back to what's the purpose of the API if the purpose of the API is just to maximize the adoption potential the API could just be you know essentially only there to increase implementer uh experience and the number of implementations it could be there to make it really easy to test the data structures that are required by the protocol and in that case like the API isn't really meant to be consumed in a production environment with its representation sort of acknowledged as you know normatively in specifications that that kind of API is just there to help with adoption on the other hand there it could be an API that you know you're expected to implement this API exactly as it stated and then you really would not want to expose uh anything other than the highest performing representations possible and so I would say if the skid api's purpose is to actually be like implemented um outside of a testing environment and in production you know high volume critical security critical infrastructure environment then I would say yaml and adjacent are completely off the table and you have to do everything in seabor and you've got to get your Seaboard perfect and you probably want to register media types and go into some extra details to"
  },
  {
    "startTime": "00:28:01",
    "text": "make sure that that production grades git API is really doing a great job for a pure binary format because as as you know apis for Pure binary formats are not always exposed super nicely so there will be like a lot of potential work you might want to do to make that really comfortable on the other hand if the purpose of the API is really just to help get you a receipt and you really want it to be very readable and it's okay for it to be space inefficient and you know the expectation is everyone's going to go Implement some higher performing you know potentially proprietary or different API after they kind of use this Scrappy API to figure out how to implement skit it's a different set of considerations so I'm not sure exactly what the mission objective is for for the scrappy API I think we would need better Clarity around that to give better design recommendations around it so my expectation for the API was that this would be a mandatory to implement API for the production environment this is not a oh there's a test uh application and so on so um it's like for interoperability between the issuer and the transparency service you need to have some some form of API and I don't I don't think per se if you like Json would be off the blade as you said uh for such a production level implementation that that needs to scale uh because if you look at like how web services work today they also like they also production quality and they they use Json so so I like all the the beautiful web services we use uh more or less use Json uh so I wouldn't dismiss it as as such but think"
  },
  {
    "startTime": "00:30:01",
    "text": "yeah I have to uh amend my comments obviously um yeah I was talking about authenticity layer I think what I heard is already said yeah don't don't touch that it's about the protocol so API here means protocol message representation and you can do whatever you want I I think that is absolutely fine um I'm not entirely confident that um a siboa API is mandatory to implement but it's a very strongly recommend then recommend it to be a global interoperable um in the end and um and therefore uh it might make sense to to have that uh always in your back pocket somehow uh but I I I I see no harm in in using HTTP 1.1 as the transport protocol implementing something in uh Json uh uh protocol messages that then include a base 64 URL save I don't know um represented Civil War to to send that around and to get that get that one validated work receipt with the server Library so I'm sorry my daughter is ringing um but this is my my reply so yeah on the on the protocol level which I think we have to somehow check maybe here in this group do we mean the API protocol and and on that level to do the thing that moves the messages around you can you can definitely use Jason I think as an addition to the to the original origin um that is sigma you you were asking whatever you're talking about the payloads like for example the sign statement versus the protocol the protocol doesn't that doesn't have a lot of Seaboard to begin with uh what sibo or what uh Json or what whatever like a restful API doesn't have a lot of like it's not like soap where you encapsulate lots of messages like all you maybe when like if"
  },
  {
    "startTime": "00:32:02",
    "text": "the existing API description like it has maybe a structure for a response if there's an error response it has a type and uh like a human readable text also so they are I think like the question about like how should I encode that response is is probably less of an issue but uh but maybe I'm seeing that wrong um Ray okay so um like if you look at the major you know API situation today like like if you look at AWS and all of their services they're all Json interface uh and you you know you submit they have a very simple you know submission mechanism and you submit some sort of Json chunk and you get one back and it may be pretty extensive um you know and so uh you know that's in the idea that something needs is a little bit more capable than Json I would say just whatever that capability is can be can be can be simplified and made into Json because that's that's the going thing but I wanted to paint a little similar picture to what they did with QR codes in Europe um for the covid uh you know document you know card or guess will you carry around so of course a QR code is something a human can't read but a computer can't and you honestly don't care what the conversions are until you get up to the point when you can read it So eventually you've got to be able to read this thing uh and so what they did was they took a simplified Json structure with very simple you know keywords two letters or three letters and then whatever the you know value is for each"
  },
  {
    "startTime": "00:34:02",
    "text": "one and that gets wrapped up in seaboor that gets wrapped up that gets I think they use base 45 encoding or something and eventually it gets turned into a QR code so honestly at that low level nobody really cares how this thing is converted from the QR code encoding which is way way different and then you know read Solomon whatever and then you you go through the base 40 you know you undo that you go through base 45 you go through seaboor eventually you get back to this human readable form so that somebody can can not necessarily human read it but you're going to have some piece of software that somebody has to write and they have to take these fields and remember what the hell they mean and you know do something with it the same is true here where we're going to have people who are going to be you know looking at the fields eventually in their software after they get through all the API and you need to do something with it and at that level it needs to be unwrapped from all of whatever encoding is required I'm not saying that that we need to change from uh you know even think about changing from from the structure of of cozy and Seaboard those are cool but once you get up past that and especially the API of what what you submit to this thing and you get a thing back that should all be just plain Jane um uh Json and I'm not talking about a horrible amount of overhead here you know the Json chunks are are usually you know just a number of hundreds of bytes or maybe a thousand bytes or something um and they can be trimmed down for iot so it it's not now on the other hand I see the need for if we're talking to Merkle tree and what goes in it uh I'm not debating anything there that should be you know very much"
  },
  {
    "startTime": "00:36:00",
    "text": "a minimalistic kind of thing because the thing grows without bound uh and so you don't want to have something that's that's in there that's very big but I thought I'd paint that picture to say that that the the the definitely the API needs to be me I in my view I would fight for you know Json as a way to do it the stuff that you pass in and out you may have you may have you know encoded what is binary but it's encoded so that it's something that uh can be easily gobbled up by um you know a an API in interface okay thanks thanks free uh hang yeah just a quick um I'm absolutely with Ray here um the European Union digital covert certificate is a cozy C bus structure that is base 45 encoded in a uh QR code a 2d code and um and that's it and then it shows even text labels that are two string characters because they are small enough uh to be a human readable so to speak so you do not see a zero and the one there you see a two letters that make sense to you like first name last name f and Ln and such um and so to make sense uh in a diagnostic notation and and then they uh have that representation thing uh and then when you put a show to some scanner and scan the QR code it decodes it for the human to be readable and that's exactly what's happening here and I think uh on the on the on the payload side we are saved on Authority I think we established because it's fine and I also think on the reference um API um we can we can have uh the minimum is super one and we can have other ones and and show how they would be uh implemented as reference I think there's"
  },
  {
    "startTime": "00:38:01",
    "text": "no harm in that um as long as we understand that the uh that the uh yeah the the cost structures that are defined by architecture and cozy uh IDs are all uniform foreign so I mean just for the sake of making stronger statements that are potentially more triggering I would say there should be a mandatory to implement seaboor API and if you implement this specification for the skit API you should expect mandatory support for seabor and that should be all you you need you shouldn't need anything else if in support of that mission we add optional yaml encodings for readability and Seaboard diagnostic Etc I think that is nice to have implementation detail that you know if someone's excited to do that work uh let them let them do it but it should be completely unnecessary to ever ask for yaml or Jason from the skip API and I think implementers should not expect any interoperability around yaml or Jason from the skip API so I'll make the strong statement and and maybe uh it will sort of help us move move beyond the sort of place that we're at right now like again the data structures returned from the API are not always the same data structures that protocol other documents Define could be a c board wrapper around a list of uh you know receipts for example so a list of receipts in seaboor is not a seaboard receipt and and so the API data structures that are returned"
  },
  {
    "startTime": "00:40:00",
    "text": "are not necessarily always going to line up perfectly with a cozy sign one or a skip receipt but if we say that the API is HTTP and the API will only expose seabor resources for the mandatory to implement endpoints um I think that that makes it a lot easier to think about what this API is supposed to be doing and it also is gonna potentially really drive a lot of interoperability around consuming resources uh that are URLs to this API so if you know that our content type is always mandatory see more by default you can build QR code systems around that that are going to process that really well any kind of Link sharing you know is going to be a higher degree of interoperability so I think it's you know my argument would be mandatory support for seabor on all of the endpoints optional support for yaml and a debug capacity and no support for Jason whatsoever that's it thanks Ori and you may have seen that I closed the queue um because I would like to would like us to think about those ideas and then um and John and I may have actually sort of sent a mail to the list to have a little bit of a discussion on this to make a decision to see where the group is on this uh on this topic on what formats are preferred to what the proposal that origin said is a good one or whether people have some other ideas but I think it's it's something that we need to think about a little bit more um and um we have a few other agenda items and I would definitely like to um get progress report on the emulator because we talked about this during the"
  },
  {
    "startTime": "00:42:00",
    "text": "IDF meeting at the hackathon we also talked about that topic uh the week afterwards when we had our sort of like wrap up discussion um and then we need to talk about the gender topics for the next week's call uh John can you can you give us an update on the emulator uh yeah it's probably um a good cap to the last conversation and lead into the agenda writers for next week so um I have committed everything that implements the hackathon stuff from the last hackathon now which is working nicely um we have highlighted you mostly Ennis noticed that um the terminology in the emulator didn't keep up with the big sweep and update of terminology in the spec itself that we made shortly before 117 um so I'm hoping that we'll be able to get that fixed maybe before the next meeting certainly within two weeks um so that uh yeah we use the correct verbs in in the correct places um for people who are watching the spec changes before 117 um the big sweep uh I think that yogesh made mostly to correct things like transparent and signed and stuff uh consistently that that wasn't updated in the code so we'll get that updated in the code um very shortly so it's in reasonably good shape um I would say as far as 117 goes but needs updating um and when that's ready for a bit of a maybe a show and tell um the archivist implementation of that actually does rat all the seaboar structures in armored Json um for transmission across the um the the services interface so we can have a"
  },
  {
    "startTime": "00:44:00",
    "text": "look at the subtleties of of what that means so I'm certainly not advocating for Json in the receipt or having multiple serialization formats as as Neil rays that would be a disaster but for expressing how we transmit those seaboar structures between entities um I think it's very useful and we've got a new implementation of that so we can just look at it and discuss if there's anything else any further to go there Prince um thanks John um on this issue on the emulator code uh apparently you have write the permission so you if someone contributes code uh you could basically merge it is that correct uh yeah so I Steve Ori I think Hank maybe um we we all definitely have kind of reviewer and and write permissions to that I'm happy to open it as well it's just it's it's a hangover from earlier organization that it's a relatively small group okay so that that's excellent um because I think it's it's definitely a useful activity to have that reference implementation so that uh anyone sort of particularly those in uh working in the group could showcase something uh to their to their friends and peers and whoever um have a kind of running code type of example of course this is a this is sort of like a a playground um rather than a full-fledged uh production quality implementation but I think it it's uh it serves the purpose well so thanks uh thanks for doing the work um so that was faster than I thought uh Ray"
  },
  {
    "startTime": "00:46:00",
    "text": "do you want to briefly mention um or you you want to withdraw your agenda item well um I was thinking um okay well if there's any time I guess I can just mention it uh here's the deal so what's happened is the skit machine has has um kind of been pushed down to a lower level where um we have minimal um descriptions so like if along the lines of what dick provided in the vendor submission file I'm changing it from vendor response file um where we have a description of the vendor we have a description of the data and a link back into skit to the data which is kind of a little bit of a wrinkle I didn't expect but um essentially everything is in the block and um I had previously done a little bit of research when I first started with this group on data packaging trends and a lot of the trends uh are now um uh I guess um kind of represented is not quite the same Trend that I wanted but the open container initiative um which has a little bit more than than I wanted in the in the packaging but essentially you know a lot of that information is in there so if we take a look at what dick dick had where there was a there was sort of a header of the um of the vendor information and so forth um maybe even the public key of the"
  },
  {
    "startTime": "00:48:01",
    "text": "vendor maybe even a lot of things in there that that would be possible to put at this high level including references to data artifacts maybe many of them but somewhere else and so there's this chunk of data and that thing is then right sorry if I interrupt you uh but are you so like uh dick proposed that structure um yeah a few months back uh and are you suggesting to create a different structure or you are working on a structure that you plan to submit to the group or where you do okay that's excellent or do you absolutely I'm circling around this right now I'm still haven't gotten to the point where I wanted to dive in and make a proposal but I I just came to the idea actually last night that that maybe it is a good idea to put it all into one document like dick proposed including all of the identity information and everything else and then have maybe one thumbprint or something that would go into this the certificate of the of the because it seems like we would need to either have a standard structure like this where where you could find out more information so that you could search or deal with the information that skit is you know organizing or have something in skit like the way skit is right now it's very minimalistic in terms that there it's just like a hash value of signed hash value of something and that goes into a miracle tree and so climbing up above that um my current thinking was to Branch off of what Dick had done in a very very heavy way in terms of adopting kind of like what he was saying and and yes including a lot of that stuff in every single one so maybe there's a lot of redundancy where you say well we're just going to identify the person in full uh and each one of these"
  },
  {
    "startTime": "00:50:02",
    "text": "but certainly suitable for things such as source code and stuff where where size is not an issue um if you're talking about via data item being a s-bop so I'll tell you what uh I don't have anything like prepared yet but um that was kind of the direction I I was thinking of going I I on the other subject I don't know why they're I did post in the thing a link to this other subject yeah on the other subject I I posted a link uh the one we were just discussing and I brought up the Json seabor cozy zlib base 45 conversion chain that they use for the EU QR code for um covid and also a link to that um which describes you know actually why they made their decisions and and had to actually come up with the space 45 encoding I guess to do it and you know QR codes are usually used for URLs but they don't have to be they can be any kind of binary data and it's better to make them non-binary so that you can actually you know shine a cell phone on it and read it and see what it is sort of but um they're either they don't have any restriction and so what they did there was they just had this change so I thought I'd bring right I need to cut you short because otherwise uh but um but are you working with the conduct document because ideally we would like to have something in front of us um to look at and then you have a discussion right yeah I know I I I will and I'll I'll write something up I just didn't have time to do it and that's why I pulled it off the agenda thank you okay okay uh dick you have three minutes then we need to talk about the agenda okay thank you hanas and thanks Ray for taking a look at that uh I'm I'm all in"
  },
  {
    "startTime": "00:52:02",
    "text": "favor of anything we can do to improve you know what I call the brf one thing I do want to point out though some reasoning behind the particular structure of that vrm uh you know I work pretty extensively in the software supply chain and so one thing we see a lot is this concept of systems integrators and they are vendors who provide multiple software packages and so uh that vrf was really designed to be set in many ways to accommodate that reality that we face and and so uh the the things that you will see in there like all the the vendor data at the top basically represents what could be a systems integrator and then all the products that they would provide within a contract so that's some of the reasoning behind the structure that you see just just so you uh aware of what's happening there thank you guys uh dick I'm going to contact you probably in this week so we can we can have a pow-wow about that thanks happy to do that Ray and I'd like some other ideas I'd like to see it added to it as well so good okay um yes usually takes us a little bit uh longitude discuss items understandably because there are so many different viewpoints uh so we didn't manage to get through all the open issues or to get to any of missions uh but at least the ones in GitHub um so uh agenda wise uh what should we put on the plate for next Monday um uh I I think um some discussion on the feed structure would be appropriate um I also added some new issues um to the GitHub issue tracker in the hope uh that we could um maybe during the week resolve them uh"
  },
  {
    "startTime": "00:54:02",
    "text": "I can only create bias if I understand what the direction of the group is because it always takes a lot of time to write the text and if I'm on the wrong track then it's uh words for nothing um so what what about doing the feed structure next week followed by the uh looking at the GitHub PR open issues how's that what do you guys have some like want to talk about the API a little bit more for other topics feed structure will be good it's kind of been sitting there for a bit we haven't actually tracking it yeah I would agree with that sorry um um yeah I think that one dedicated session that looks that does a screen share and and we can go through uh closing updating or um actually handling issues nprs is a great idea um because I think we are always kind of skipping that and therefore we have to uh consciously deliberately still deserve some time for that thank you Hank uh not that any other views dick yeah very quickly just uh I'd like to see if we could focus on the API just to be able to wrap up uh what comes back after putting a payload into uh a registry and then that URL hopefully it's a URL and that can be distributed for others to pull that data out of the registry so I'm hoping to focus on the API a little bit more thanks yeah okay uh that's perfect yeah we didn't go too far today on the API topic but uh yeah that sounds excellent so we"
  },
  {
    "startTime": "00:56:01",
    "text": "have already like kind of three items already I think that's good enough for next week and I would send a a pointer to the GitHub issue track again with some of the new issues that I that I added maybe someone of you has some views about this and I would also like to remind you that um you promised to do some some work at the last IDF meeting or around it before the submission so uh please look at that and and help us make progress so that we also during the the summer vacation period actually Advanced the documents accordingly hi Roy John has his hand up first yeah thanks Roy yeah mine's super quick uh thank you Hank for pointing out the meeting issue I found the bug and from this point forward it will be a recurring weekly um so I'll stick that new agenda in and we'll start it from there awesome thank you John right I want to raise my concerns here we're still skirting the charter very closely here the API we're talking about for the The Ledger and for the for transparency statements is a submission or an audit capability if you want query and storage we're gonna have to reopen the charter right there is no ad hoc query capability Against The Ledger as it sits today yeah uh that's true but uh we we wanted to extend the API to use the feed at least that was my collection to dip into them I understand the feed I have John and I have talked about this before but you know talking about the specifics of software supply chain and the document formats and so forth which are being"
  },
  {
    "startTime": "00:58:00",
    "text": "controlled by sisa and nist and a bunch of others is getting into a couple of gray areas where we're not chartered for so I just wanted to bring that out okay thank you uh yogish hi I just kind of I won't take too long so I sent a link in the skit working mailing list where like CPU government organizations in uscisa and department National cyber director of Technology and other organizations are asking uh how to secure open source software they're asking for a feedback so maybe it's good time we have a good amount of time to prepare something and suggest something and kind of advertise kit in a way that suits us as well and them as well so just one thing I wanted to mention that here I think that's a I think that's a great idea yeah I don't have much and it's back to you uh thanks your wish okay cool uh I think we are done for today and uh so you will see a few emails uh uh John will sent around the meeting invite for next Monday um and for the weeks afterwards and will stay there in the ITF location itself right this for this today's meeting as well said it again the recording is a meeting recording are naturally posted there as well right where the agenda is next to the agenda this today's writing yes the same the same same old story yeah thanks cool okay"
  },
  {
    "startTime": "01:00:02",
    "text": "perfect yeah I would say I think we are done for today thank you all thanks yeah thanks Thomas thanks John thank you take care thank you thank you very much"
  }
]
