[
  {
    "startTime": "00:00:04",
    "text": "foreign all right okay all right let's slowly get started I see people on the back of the room maybe grab one of the chairs okay welcome to IC energy this is um this meeting is spending the globe I think so it's in UTC time zone I'm plus eight Davis minus six I think and uh I know that Mark is there from -9 um if you have someone from Australia that would cover this completely"
  },
  {
    "startTime": "00:02:01",
    "text": "um but I think it's gonna be fine okay um before we start the usual um housekeeping things so we're here in the internet research task force we follow the ietf IPR rules there's total rules so let us know if there's any IPR related contribution that you make or that you see or that you are aware of in this context and um okay um the most important thing here is um The Mask policy um it sounds a bit strange because we're not wearing masks but we are just by ourselves and so we just got reminded to um announce this again please keep your your ffp2 or n95 mask up um unless you're already speaking at the microphone and you cannot be heard otherwise okay um usual agenda hints and a quick reminder this is the internet research task force we are not doing internet standards here um we are doing research and um the RCs that we produce are typically of informational or experimental nature to enable future experiments and then generate some insights for the um like larger community okay um yeah um my question is David I'm I'm the Kucha and um before we move on we have to find a note taker and if you're new to this this is a fairly light um job so we are not capturing"
  },
  {
    "startTime": "00:04:01",
    "text": "um all the presentations uh just did and just of the discussions and it is quite informal so it's just important that we kind of capture the technical content and yeah it's all the other groups we cannot move on without a notaker doesn't have to be someone in the room it can be somebody remote yeah of course yeah but it can't be one of the chairs since we have to run to me right so what you're thinking about it maybe just one other thing um please use the media Collide tool even if you are in the room um and to form like the queue management so that people can get your name it makes it much easier also I don't know taker foreign and it doesn't hurt to just say your name when you're making comments or questions okay Duke and then I do it if no one H volunteers thank you very much yes I got it thank you Matthias okay um that's great so um this is our agenda for today so um we are going to have um like two"
  },
  {
    "startTime": "00:06:00",
    "text": "presentations on uh manifest container topics um then one on the um C4 ccnx implementation and its application to um Cloud native use cases and um and then I'm going to talk a bit about some ideas for rest for ICM and then we can discuss any other business is there anything else that we want to talk about today or that you would like to change in the agenda okay um then let's look at our research group status um so we have a couple of documents that should be published soon um so CC and info is sent to the RC editor um things not yet published we last called time tlv and it's now waiting for uh Colin to initiate the irs3 review I think um flick we're going to talk about in a minute and um then we have ICM ping Trace out and path steering and um yeah Dave can give us an update on this since he's heavily involved in those yeah so um as most of you know we last call both ping and Trisha quite a while ago it's been through irsg review successfully uh got some very good comments from Chris Wood and a couple of other people um and those have been revved um and checked back through and are pretty much ready to go to the final stages of iesg conflict review and uh final Ayana processing um but we've had a conversation with the ir3f chair um and because both of those"
  },
  {
    "startTime": "00:08:01",
    "text": "uh capabilities for management are significantly enhanced if they can make use of the capabilities of path steering um we sort of jointly felt that we invest to progress all three of these to publication uh as rfcs together so we're going to hold up uh ping and trace route from the sort of the final processing although of course please go ahead with you know modified implementations and experimentation on those uh so we can finish up paths here now status of pad steering is as follows it was an individual draft for a while it's been went through a number of revisions it's been looked at pretty carefully by uh people in both the CCN and in the end communities uh matter of fact the last version had some uh major changes to how we do the nvn encoding uh to bring it up to date with the way the ndn protocols have gotten partitioned um into to combined protocols and um a little while ago it got entered as an RNG draft so um it's fairly mature although it hasn't been an RG draft for a whole long time but we'd like to progress it very rapidly so that we don't hold off ping and trace route very much so our plea is to have everybody in the RG please look at the current draft review it send comments we would very much like to last call this um soon like within the next month or so and get that done before the holidays so that we can get it to IR ski review expeditiously and have everything wrapped up in a few months so thank you and in advance for uh your help on uh on moving this forward yes thanks um so I mean this is um yeah pretty useful and but also cool technology so I mean past steering um is"
  },
  {
    "startTime": "00:10:02",
    "text": "a really nice feature um and um I think that would be really important and valuable output from IC energy all right um with that I'd like to hand it over to mark for his presentation on um flick and um just let me okay bring your slice up so um do you want to run near the slides yourself Mark um what's the best way for you uh yeah I could do that um let's see how this is gonna go here this hasn't been approved by my system actually um if I but I can do I can um I can bring them up and then give you control over it and that's maybe the best way sure um just a moment sorry I didn't realize this earlier foreign so now you should be able to control the slides with your cursor hey look at that clever people right making that product all right um so this is uh the uh flick draft for file like ICM Collections and uh the active authors right now are uh Dave and myself uh and"
  },
  {
    "startTime": "00:12:00",
    "text": "uh Christian shooting and Chris Wood have also uh contributed quite a bit in the past so in this presentation uh I'm gonna talk about the background for flick and review uh some of the history and then I'm going to walk through the main flick features that are in the 04 draft and then conclude with issues uh that we know about for the 04 draft I'm not really going to do a Delta from the O3 I could talk about that if someone has specific questions but uh I decided it was better just to go over what is flick um uh since it's been quite a while since we've uh had a had this in the meeting so uh the the history so flick was first conceived uh long ago maybe around 2014-ish you know that time frame 2014 2016. uh the first draft was in 2017 uh and we're now uh in the 04 draft in 2022. um the the uh uh content of flick is is is that it's a manifest and uh it's meant to make it easier to use hash based naming uh which can be used for you know one within CCN we called nameless objects or segmenting large objects or doing collections or offloading uh signatures so there's a lot of very useful features for it uh it's been implemented and used um you know in several of the CCN uh iterations before So currently uh Dave and myself are the main authors uh Christian uh has contributed you know a fair bit for the I think two or no three drafts uh and uh Chris Wood was active with the earlier drafts"
  },
  {
    "startTime": "00:14:01",
    "text": "um the 04 draft uh cleaned up a lot of uh uh the style uh Ken Calvert gave us a lot of useful feedback uh hopefully we'll get some more feedback on the 04 so we can tidy it up for the final o5 that we can submit so what flick does is it provides a manifest of hashes so you can retrieve all the segments of a piece of application data using hash based naming the hash is higher or the sorry the Manifest is hierarchical so you know you don't have to fit it all in one uh object and the pointers in the hash can point to either more manifests or to application data there is a canonical traversal order uh and there is metadata that could provide other traversal hints such as for video uh flick has its own uh encryption mechanism uh I mean it's using standard product you know protocols and all that but it is specified how you would encrypt a manifest uh there are also several interest construction techniques so these are depending upon the way that the publisher has decided to create the application data that is referenced by the Manifest there might be different ways that you construct the full name to put in an interest and flick has several techniques and we could add more techniques later on so as a manifest uh you know using hash based naming is is very efficient because it's an exact match name uh and in ccnx that's also very important since you know everything has to be an exact match name uh uh manifest techniques have been around for a long time uh to distribute hashes uh so this is a uh the current you know"
  },
  {
    "startTime": "00:16:01",
    "text": "hopefully standardized way of doing it uh manifest can also offload authentication because you only need to sign the root of the Manifest uh a flick manifest has one or more hash groups and each hash group can have its own naming convention and its own metadata so we'll talk about those name Constructors in a few slides so the traversal order in flick we've defined to be pre-order which is the basic top down left right style of traversing a tree a consumer of course can retrieve the pieces in any order that they want uh but to reconstruct the original data as intended you would follow the traversal order some applications uh might not care about perfect reassembly and they might use metadata or other hints to skip around the content you know for for example video playback the hash pointers can point to other manifests or application data and the publisher is free to put those in whatever order they want so you could do all manifest first and more data data first then more manifest you could intermix them you could put all interior nodes having only manifests and leaf nodes having only data uh and so forth you know it's entirely up to the publisher how they do that there are what we call metadata and annotations so metadata uh generally applies to Hash groups or the overall manifest um uh content object and these can be things like uh the size of the sub tree rooted at the Manifest or the size of the sub Tree in a hash group the amount"
  },
  {
    "startTime": "00:18:02",
    "text": "of and and these sizes are the application data underneath there not counting manifests you can have digest of that information uh you could have sizes for the immediate Shield application data Children of the node there's locators for routing hints uh and so these are the you know metadata that we put in the draft uh but it's entirely extensible by more tlv tags uh annotations can be applied to individual pointers uh and uh the only one that we've put in the draft would be the size of the application data underneath a specific pointer um uh though we have tossed around ideas about you know uh uh video hints but those are not in the draft and these are the definitions of the things that I just said so I'll skip that locators and name Constructors so a locator is a routing hint so in ndn of course they have a uh you know an explicit routing hints for interest uh in ccnx you can uh if you're using nameless objects you know the the the name of the interest is essential is essentially your routing hint so these can be used by both protocols the mechanism differs uh but the publisher or someone providing the uh content can provide the locators uh to use in the interest Construction uh how you name an interest and all the other flags that might go in the interest uh can be part of what we call a name Constructor so the Manifest will specify uh the scheme that that a consumer should use you know based on either the locators or other names and we've defined four of those that are um I didn't go to the details of those here but they are in the uh draft"
  },
  {
    "startTime": "00:20:00",
    "text": "yeah uh so a hash group is the collection of uh pointers and you can as I said you can have one or more of those so an example of why you might want more than one would be if uh for example child manifests are under one namespace and application data is an under another name space so you could have a hash group a first hash group for the child manifest and a second hash group for the child data and those can have the different name Constructors um you know and and you could intermix these or interleave them uh however you want uh there is a default name Constructor so if you don't specify anything there is a default Behavior Uh locators and name Constructors are inherited so one could only Define them in the root of the Manifest tree and then as you Traverse the tree you would just keep reusing the same values as you go uh the encryption for a manifest uh was designed so you could do In-Place encryption and decryption and then just swap a tlv value to say it's encrypted or it's plain text um you don't have to do it that way but it it should be possible with the AES encryption that we Define we Define two keying mechanism one is a pre-shared key where there's only a key ID and a nonce in the um uh manifest uh content object or there's a wrapped key technique uh and it is you know extensible you can Define more and hopefully we will get more than those two for pre-shared Keys there's just the key ID and it's assumed that you've either done out of band or key exchange protocol to know about those key IDs we"
  },
  {
    "startTime": "00:22:01",
    "text": "use unauthenticated encryption authenticated data mechanism with AES encryption I'll just be a very standard stuff for the wrap key approach um you know the the intention is that this is wrapping the AES key that's being used by the pre-shared key mechanism to encrypt uh the Manifest so you don't have to have a key exchange protocol um and there is a you know then just the kind of standard you know for ICN there's a key ID the wrapped key and a key locator for the key ID if you wanted to um uh fetch it instead of having it wrapped in the uh uh manifest uh it uses RSA oaap and uh future extensions could be for you know full key uh encryption uh data encryption mechanism uh or for using elliptic curve so we've we've defined this um to be usable by ndn or ccnx so really flick is is a grammar and a structure and and and and a set of you know techniques for using the Manifest but they would be natively encoded in either ccnx or ndn uh We've provided uh encodings for both of those uh so hopefully um you know the the ideas of this can become standardized and you would have uh hopefully even you know a standard library implementations for it between the two protocols foreign so in the draft we also talk about our Root versus a root plus top manifest so this is um uh so the the the root manifest approach is is basically as simple as it sounds right you have the top level manifest where you have your signature you might"
  },
  {
    "startTime": "00:24:00",
    "text": "have your name locate and your name Constructors and locators there and then the rest of the Manifest is just normal stuff um another technique that we've described as having a root plus a top so you would generate your content manifest you know uh as normal and you have the root or the top level manifest of that structure and then you glue on a root manifest on top of that so this means that if you want to be changing your locators or your signature or um uh other things uh name Constructors that are in the Manifest you're just swapping out the root and all the rest of the Manifest stays the same all these hashes are the same alvet you know about pushing out to caches and so forth is all the same so uh that's that's the intention between having a root plus top versus just a plain root again this is entirely up to the publisher what they want to do about it and they could even use some other technique that you described in the draft uh and uh so still to be done um we have some python prototype code um that's really just about building um uh the the manifests and the trees uh it's not really a protocol implementation but that prototype is behind the draft so we need to bring that up to the draft um flick actually supports acyclic digraphs not just trees so we should have an example of that um the the kind of uh standard example of that is you have a deduplication so maybe you have one content object that's like all zeros uh and you could refer to that content object from multiple places in your tree uh you know if that's a common content object for your encoding"
  },
  {
    "startTime": "00:26:00",
    "text": "uh the next two are are really around the nonce and salt and and kind of the some of the differences between the RFC descriptions of those in the nist description so uh this is more so just a note that we need to make sure that how we describe these things is is clear uh given the standards uh and uh there were there were some usages of the nonce where we weren't exactly clear about how the salt and the explicit knots get used so we will clarify those in the o4 draft um we might also want to consider using a kdf to ensure that there's no repeated nonses uh between manifest nodes or entire manifest trees of the same keys are used uh and uh so that will be put into the o4 draft um we have the Ina consideration section to go over they did send some feedback on the draft uh so we need to review that and incorporate it in on into o5 uh of course security considerations uh needs to be worked out more especially since we are talking about uh having a specific encryption protocol uh in in this draft and the ndn section uh I'm sure is stale uh because it's it's you know three or four years old so that needs to be touched up uh for recent nvn changes and I suspect that is the end of the presentation thank you Mark questions comments help we could really use some help from the rest of the community to review this and contribute to it foreign"
  },
  {
    "startTime": "00:28:05",
    "text": "solid piece of work lots of effort went into it and at the same time it's also a very important mechanism right any um ICN application any system that wants to share larger objects probably use something like manifests and and so it's kind of like a key part of the system and we really want to publish this um soon I see Ken as a as in the queue so can what's your question uh can you hear me yeah okay uh Chrome and I are disagreeing about whether I gave permission for my camera so um but uh I will go through and and review the 04 draft thank you for the updates and um I just wanted to say I have a student uh who's working on trying to implement it from the 04 draft for in the end so uh we may have some feedback for you on the ndn section um he has had some personal challenges this semester so we didn't make as much progress as we wanted but I'm hoping we can get to that early next year um but anyway I will try to get feedback before the end of this year for sure okay that that's excellent and and you can have uh the student contact me directly uh and I'm you know very happy to help them along as best I can great um and uh uh the uh they're I'm trying to remember whether I sent the email to the mailing list or just just to the uh other co-authors but you know there is kind of a bullet list of of updates that I know"
  },
  {
    "startTime": "00:30:00",
    "text": "needs to be made um so uh uh you know if the student has any questions about um you know the encryption in particular or other things you know reach out to me rather than spin your wheels because there might have just been no mission in in the 04 hmm so Mark are you aware of any other implementations um well there there there was an implementation in in einc of an early flick version maybe like or or something like that um but I'm not sure of the um status of that knowledge okay so I actually have an implementation myself that is I think maybe on the same level as the python prototype um if anyone is interested or has a student who likes to program some closure so this let me know I'm happy to hand over this implementation I currently don't have time for that all right um yeah anything else any other question foreign for giving us the update let's move on um so next we have um Jen's finco is on the agenda and um so how are we going to do this now with this life you give me right yeah I don't I don't know I don't think I have control over the slides can you do that for me can you"
  },
  {
    "startTime": "00:32:00",
    "text": "forward them sure sure okay that would be awesome okay yeah that's like this is just title uh you can skip all right um yeah so um yeah maybe you can introduce your work yourself I don't need to do this um you have to yeah thank you could you could you skip already to the next slide sure sure thanks um yeah okay so I I mean twinkle as I run a very very tiny r d company you know non-profit actually in internet technology right um so this is a building block container format I don't need to tell you too much about the purpose there um it's work done under ngi0 which is managed by an element foundation and I guess I guess the reason I'm I'm talking here is because I'm taking a very different approach from a manifest and um when I started out actually the approach was to use a manifest and all that kind of thing but then I did some parallel work for the iso foundation and that sort of influenced the design a little bit so I mentioned them here as well that they did not actually pay for this work um thank you can you go to the next slide okay so I have very different goals um my background is not on the slide but I want to tell you there's anyway my background is in in peer-to-peer video streaming so um video uh is a very very high use Case High high priority use case for me um which means I wanted to make it streaming friendly um also to include the ability to Multiplex different different content types into the same resource um if you if you look at how a Blu-ray is in terms of in terms of files on the disk then you have different files that sort of need to be processed in parallel and that should also be possible in a streaming context um I wanted to support offline first usages"
  },
  {
    "startTime": "00:34:00",
    "text": "um not everywhere in the world has connectivity I don't know if you've been to the tube here uh when I was last using it this little while ago there was it was just a black hole and you know you might want to do some work on something and then come back out of the tube again and it actually merges with what you with what you had before um another use case that I have in mind is collaborative editing some having multiple authors do the same resource you can solve this in a container format you need something like for example a crdt which was something we're also working on um but the container for Tacoma can help with this a little bit and that's what we've tried to aim here for um it should be end-to-end encrypted by default yesterday I was speaking at dinner G why I thought that was my important other than the obvious privacy and security concerns um but yeah that that was an important um part from me where I've seen some proposals say well basically encryption is more of an application concern um so that's from my point of view and a very European thing I suppose is is the gdpr we have this this derived right to be forgotten which means content deletion was a very important use case for me which is not something I see most of the time and that leads to a very different design um next slide please yes so yeah we're we're right I read through I was I wasn't really aware of the details of ICN before you know before a couple of weeks ago I I read through the RFC 7927 was concerned with name data objects in our case an object name is I as I interpret the ROC right an object name is not just a hash there's something else to it I'll go into details later um vessel does provide data original authentication as per section 4.1 we have a powerful solution it needs"
  },
  {
    "startTime": "00:36:02",
    "text": "more work for Distributing public key information or key information in general so that also um we can deal with with that part and other sections there for for uh what is it um yeah encryption and and what was the other doesn't matter you know you know you know this document better than I do uh next slide please okay so um alternative approaches so you this is just telling you what you already know um there's a lot of this going on that that object names have a hash as an identifier it's very elegant and robust I really like it but it doesn't really fit well into the goals that I've outlined in the beginning my understanding of flick I've read through it as much as I could before this talk um is that it also uses the talk just now was very useful in confirming most of this I've looked at DMC I've looked at a couple of others that all seem to be manifest approaches and of course you can get beautiful things such as Merkle trees for validating a resource out of this which which I don't have um next slide please um so my problem with manifest is is I have a couple of problems with manifests from the gdpr and rightly forgotten perspective um in a manifest in order to delete something with a manifest approach you just do not reference this anymore that's not quite the same as deleting it it could still exist everywhere in the network and it's still retrievable with an old manifest basically um I wanted to have something slightly more robust I know I can't guarantee anything but I can try to to be a bit more robust than that um the streaming problem that I see everywhere with manifest is that you have to have real-time updates to the manifests"
  },
  {
    "startTime": "00:38:01",
    "text": "as as your resource grows streaming maybe disambiguate this a little bit so you can stream an existing resource right or you can live stream something like a broadcast video and it's more the second kind of situation that I'm concerned with and most of the Manifest approaches the completely consistent finding themselves but the idea of of keeping this ever-growing manifest updated at the at the consumer is not really a problem of of the Manifest approach as such so it needs some other Solutions um when you have multiple authors and you sign your manifest somehow becomes the question who does the signing and at what point um I find that a little bit unsolved there usually there's just no support for this which is also okay right it's just not not what I needed to to go towards and when you do have multiple authors you you also have this this problem that you can create conflicting manifests that are equivalent equally valid for a given time Point um and then when when node starts synchronizing then you have to have the mechanism for merging this and that's probably it's a new manifest which again has to be synchronized so I see I see problems coming out of the Manifest approach um when you have multiple authors as well as streaming as well as deletion um next slide please so I tried to get rid of the Manifest basically and the approach is is it's not particularly magical it's just very similar to something like git dust or even a blockchain without proof uh kind of thing um I just uh oh yeah by the way um these these um content Parts I'm calling them extends from file systems um the first one in a in a resource has a"
  },
  {
    "startTime": "00:40:00",
    "text": "random identifier excuse me and then I just um create every subsequent identifier as a hash of the parents parents extend identifier and the author identifier and you have a verifiable and deterministic and also conflict-free uh way of of just allowing multiple authors to to create extents in parallel the problem is that this Con if you just don't give a mechanism for choosing the best the ideal parent then you create a then you end up with a tree that's that's that can be very very very wide comes harder to merge into some consistent State later on so I added section on choosing the ideal parent identifier which is based on the the leaf node with the longest or most linear path I don't know how to better explain explain this other than in the next slide um uh yeah so here I have this is from from my my pre-draft if you want I haven't submitted it so I haven't created an ID yet um as an example um expanded tree that might come out of this each each sibling is basically must be created by a different author under the scheme right um so you have at minimum three different authors in this year um and if you look at the longest Parts well visually speaking it's going to be uh one of the one of it's not going to be the one that goes through through node B B1 at the top but then the question becomes is it F1 F2 or G and that's that's what the mechanism is solving for you next slide please so basically it's really simple I mean I'm just taking the the uh weight of the edge between two nodes as the as one divided by the number of siblings uh I I"
  },
  {
    "startTime": "00:42:02",
    "text": "add all the the individual segments into a pathway and that that gives us a result by the way there's a small mistake here in the in the uh table that I've fixed in the documents but not here yet um in line six you have a b2d and then in line seven it's ab1d that should be B2 and then nine eight the same thing and then you end up having two um equally weighted paths and then there's a simple tiebreaker um bitwise ordering really very simple between the the last um extent identifier and that shows F2 uh next slide um so extends must be signed but the encryption is is optional you either have a signature a public key signature when there's no encryption or aad when when it's also encrypted um as this RFC says there's a key distribution challenge here um the way I'm hoping to solve this it's not quite there is that because um I also have this multiplexing um uh feature here we can do some key distribution also just multiplexed into the same resource um next slide please so Multiplex means that that the content isn't just binary data um at all it's it's data sections um now there is of course a Blog section for binary data but that's uh just one of of of a few um having this section also makes the the format very extensible to other use cases um the sector has a type"
  },
  {
    "startTime": "00:44:00",
    "text": "self-explanatory and the topic the topic is more of a context in which to interpret this this also creates resource substreams if you want so you can have a topic that's dedicated to to your video content a topic that syndicates to your German language audio and so forth um and you can have a topic for future play of course that's not in my draft right now I have some thoughts on how to do this but um I've just reserved the topic slot for that's in this draft um and you have a content type section which works very much like in HTTP you define the type of The Blob this is that's that might follow in this in the same topic uh next slide please all right editing and deleting um with this scheme you can't really um rearrange the tree right that's not possible um it's this there's a permanent order to to the extents um so this whole idea of just forgetting about one is not going to be be viable um which is on purpose um so every extent also has a kind of version I quote the version thing here because in in the document actually there I use version for two different things already so I didn't want to introduce a third one it's it's a sculpt counter sculpt to the author um that the author increments whenever they create a modify an extent and that means that actually if you if you want to be precise the the object name is uh talked to pull off the extent identifier and counter because that gives you the specific version of the extent um and if you have that kind of scheme then you can start updating your your um extend with empty and empty content right so erasing is just deleting the content section overwriting the content sections but keeping the extend identifier intact and they can resign it"
  },
  {
    "startTime": "00:46:02",
    "text": "and update it um next slide please that has an effect because with um the Manifest approach if you forget about if you exclude a block from from your manifest if you forget about this um you can of course out of band notify caches that this is no longer relevant it should be deleted but it's very easy for cache to just ignore this I mean it's it's easier to not add functionality than to have it right that's why this is actually a bit fragile for my taste um whereas if you have end to end encrypted extends and deleting is nothing but overwriting the content then a cache cannot really distinguish between an editing a deletion and that should make it more likely that they accept the deletion as a valid operation that they want to support because they don't know about it um of course it's still possible to find ways around this you know Cache can keep all versions of an extend but that incurs in cost and I hope that that helps get these things actually deleted um next slide please so from the collaborative editing point of view which is where we we sort of start or one of the angles for which we started the container format doesn't actually solve that much um but at least it does a couple of things in the single author use case you don't even have a tree you just have a single linear list of of of extends and you don't have to update the Manifest so you have a slightly improved stream friendliness there in in this um in the multi-auto use case because of the ordering scheme I explained earlier um you have partial ordering"
  },
  {
    "startTime": "00:48:02",
    "text": "what you can't guarantee is that within a group of siblings um what the precise order of sections should be but you can guarantee that uh all descendants of a particular extent come after the parent and that can also already already help with with ordering things like crdt operations um and other than excuse me other than um then that um I I really do think that that something like end-to-end encryption and the ability to embed AAA content is um is very fundamental to how we want to shift data around in the world and so I I really think it should be in a sort of an infrastructure thing that when the upper layers like this here the T or whatever you're going to use there um Can can then use um next slide please next type is right so what we also have um is nothing to do with this is is something called Caprock it's capability-based system with cryptography um yesterday in energy we had a talk about power of attorney I I urge you to look at that because the approach is almost exactly the same um just independently done um that's something we worked on under the iso Foundation Grant um and really the the work that needs to be done as well but that's a separate sort of document as to her to specify how we can put these tokens into AAA sections investors so that comes part of the um um authorization scheme let's put it that way that we can send authorization"
  },
  {
    "startTime": "00:50:00",
    "text": "information along with the data we might I don't know yet exactly um also provide key exchange in either cap rock or an additional AAA sections investor the there's still a bit of fuzziness there so there's definitely some future work um next slide please oh yeah that was it any any questions no not from the room some oh yeah um yeah um hi hi my name is real um I am at the University of Glasgow um thank you for interesting talk um so the scope I'm just trying to double check that my understanding is right um so you'll so the scope here is sort of uh data container to be used on a sort of ICN of some sort to bring those features that you mentioned to for like right to forget forgotten and offline first features and that stuff essentially I mean what we're doing um is we're building our our own software stack that reads very close to an ICN type solution right and it's really for that but it has the potential of having having other users of course no so if we extracted the sort of the design the architecture the mechanism into sort of maybe potential as a sort of proposal to sort of say essentially look this might be useful maybe it is okay exactly this okay it might not be useful to any of you in the room right and so so um I know that you don't guarantee that um right to forget and forgotten is actually you know enforced but um yeah I I I don't know how you you approach this sort of I couldn't fully understand how you would want to"
  },
  {
    "startTime": "00:52:00",
    "text": "approach the um have the right to forgotten and the uh offline kind of well offline first kind of use do you could you maybe elaborate a little bit about that so that I can get my head or not yeah um what they're sort of they're sort of unconnected in a sense right but uh um uh when when they do connect it becomes interesting you're right about that um so offline first is simply the the notion that um i i in our system we don't want to have uh constant connectivity as as a requirement right so that's that's that's really it because we have locations in the world where there is no connectivity you should still be able to work on something and when you work collaboratively on something and at some point this has to be merged which is basically the same sort of problem that that gets or or solves for for text right um but in a in a you know more broader application if you want um the right to be forgotten is is no orthogonal to this um it's just trying to take into consideration that um asking a cash to to delete content or asking a cash asking the cash to delete content is very difficult because you don't know which caches are involved and and it's sort of impossible to know right so um yeah you can start sending hints out maybe in a different protocol but that seemed more complicated to me than saying well actually deletion and overwriting with zero bytes you know it's kind of the same and if we hide the fact that it might be um a different operation from the caches and they're just more likely to go along with it that's that's really the whole thing there past that I can't guarantee anything so does that make sense so it's it's a sort of a attempt to sort of allow"
  },
  {
    "startTime": "00:54:00",
    "text": "deletion off the network on the in the context of the caches but then obviously as a consumer once you have it it's yours that's of course yeah I guess okay great thank you you can't take that away no yeah of course of course thank you very much so you're welcome all right yeah my questions uh in the same vein um doesn't necessity of Fool's Aaron to try and delete data in a large-scale distributed system uh I mean this like every bit that's ever been sent over a wire was stored somewhere so yeah so I I really don't understand the idea that you tried to delete things from caches the caches won't have the encryption keys anyway a well-behaving cache uh is not a problem it's always a malicious cash that's well you have a malicious cash the malicious cash won't have the decryption keys so it doesn't matter whether it's holding the bits that that is uh that is that is the hopeful version yes I mean I I agree as long as the cryptography holds you're right at that point we don't need it but if the cryptography doesn't hold none of none of stuff works anyway true true okay um one other it seems to be um working towards some of the same goals you do is a system called secure scuttlebutt I know I know I know it's I mean I don't know every detail about but I don't know it yes yeah it seems to have this uh distribution properties is your system that's why you know partial ordering single Source chain data um it has similarities Horizons you know all that kind of stuff yep yep yep great thank you thank you okay"
  },
  {
    "startTime": "00:56:01",
    "text": "um okay um other questions um yeah thank you very much Jens um of course so um yeah we do this from time to time um say having presentations and say in the broader context of if if you like information Centric systems and um it's also sometimes quite interesting to um you know understand their particular constraints and uh as yeah we just mentioned scuttled but we discussed earlier so let's keep doing this um but now we come back to say a core ICN topic again and we have um talking about ICN as a service using the C4 implementation and let me bring this up hi thank you for introduction is from NSD Japan uh today I'll talk about uh CFO ccnx based Cloud native that talk functions for deploying the ICN as a services so is the next starfish so this is the outline of the my presentation and the first I'll explain the motivation in the background and we introduce the sephor and Pico which is developed by the nict and there and that maybe we try to integrate simple with the docker platforms for deploying the ICN as a services and and we explained some summary scenarios and the final conquer my presentation so next please so a thousand year has been passed since"
  },
  {
    "startTime": "00:58:03",
    "text": "the original concept of the ICN is advocated the concept is changing an end of our network from the host Centric to the content Centric and the icing is a country forked to the several Concrete Network objectives ccnx uh as specified in the iot overseas and the ndn name data networking by the NDA project and actually we and ICT are developing the servo which is combined uh with the ccnx 1.0 and uh so what is an open source software platform and enabling a ccnx based Communications and uh yeah and the the software there's a lot of the research is uh about the routing and farting and the caching and now security has been proposed by the some uh several uh many uh research communities of an ICN but the one missing a piece might be a development Solutions of the icing modules into the existing internet infrastructures so next please so in my presentation uh first I will introduced the Sephora which is open source software platform for enabling assistance specs Communications and also therapico which is a application development on tools and then we try to integrate the CFO with a Docker platform and for easy and love it the deployment of the ice and so we'd like to introduce a method for easily deployment icing as a micro services and a quick quick constructing the icnbs networks so next step please so now I introduce uh say for ccnx based"
  },
  {
    "startTime": "01:00:01",
    "text": "extensible pocket one NG and the server Pico so next please so therefore stands for the yeah I see it's going to base the X and pocket Warrior engine and which is compared to visual system is 1.0 and sorry it is originally designed in 2016 and six years has been passed and it can handle the interest and content object file and caching and it the source code of the C4 is our previous so scores of the answer foreign URL so you can download it from the web page or GitHub okay thank you next sorry please so simple sets us throwing a free design policies find the right weight and usability and extensibility so most important thing is a lightweight implementation so the software's platform should be uh usable for the resource concerned devices such as a sensor node and also depending on the situations or network requirements we need to extend it so the platform should be easily extensible to the accommodated novel functions to the satisfy the future network needs so next please support has in order to realize that this policies so Sephora has a plugable architectures so as you can see the Sephora will continue consists of the uh two quadamus called the 78d and the Cs manager d now certain things is a packet firing engine and the Cs margin D is a caching engine so depending on the situations uh for in the case that you require the high Network networking performance uh we need you need to prepare some high-end"
  },
  {
    "startTime": "01:02:01",
    "text": "machines such as the routers and enable the second D and the Cs manager D and there is some various programs so you can deploy the full icing stack node but but you require the lightweight implementation such as a plus value by implementations you just enable the second ID with some minimum uh programming so researchers can install necessary eyes and functions depending on the situations under their requirements machine requirements for considering the uh there was in resource course right so next please next slide please so so now it's always ready for providing the origin package for the ccnx based Communications I mean according with the extensive Province and consumer product our consumer utilities uh and the producer utilities and also we provide a network management tools CCN info so this is for our own package so you exercise please is a simple person compact package and which is open in the following URL so and the same Pico is a python-based wrapper program that helps development systems X applications so and it can enable easy coding of the Python program as compared to the original C language for example you want to send the interest packet you need to write the 33 lines in C language uh answer in the left figure but we're using a server Pico we can reduce it to the core lines"
  },
  {
    "startTime": "01:04:00",
    "text": "just imported as a optical library and just create a Honda 100 and just call the center in this packet so self Pico is a very user-friendly implementation so next slide is no now I enter the main top and Docker Integrations so what is a doc aziro the docker is very famous platform for computer-based virtualization Technologies for the quick and the scalable Network Services so there's some features and benefits lightweight and performance and scalability so the most important point is uh local doesn't have the uh OS so it is very uh lightweight and you can enrich the evaluations over the scenarios and you can facilitate the Comfort double test of the develop the ICN services and also scalability also so next side Breeze so this is uh just a simple example scenarios with a several Docker based networking so in this scenarios a consumer download a file from the producer the producer responds to that they are request and the send back the data and the resistor X router uh the course definitely stores relationship data into the Cs uh so uh such as a CS manager ID so this is a very simple scenarios so next time please uh this is a how to uh lighting a Docker file so but I'll show skip my details of the uh this uh how um just interesting is uh we use a we Define the three services one is the base Services which is a base functions"
  },
  {
    "startTime": "01:06:02",
    "text": "as I say node and the next slide please and then we use a minimum function serving as a ICM node uh that is uh installation in the application vibrations Next Step please and also the we need a cache services so you can Define the sketch Services as following the docker file so we totally use a free uh this uh so we type over the talker file and there's three types of microsources so like so please and also we leverage the docker compose tools which is very useful for defending defining and learning and multiple contains local applications so it's very easy configurations we're using a yamra style file uh as shown in the light figure and it can create the and starts the or the services from the configuration with a single command so in my experience it is very easy to conduct a scenario based evaluations such as immigrations unlike uh metal oxidations such as nl3 so the answer in the right figure so in this uh example we Define the producer services and my router services and consumer services and each service are built from the cache or the minimum images so next step is okay now I'll show you some sample scenarios next breeds so this is a video streaming use case is over the internet and we uh in the city had the icing summer workshop last year which is headed in the fully online Style and we demonstrated the Marcus video"
  },
  {
    "startTime": "01:08:02",
    "text": "streaming using a simple Docker platforms and in this demonstration the producer is located at the nicth Tokyo and the consumers are around in Japan and let's see with the video streaming from their home or schools or companies so what is important here is the old purchase participants are including the beginners such as a larger students can uh construct icna node on their laptop and they can receive the video stream successfully so this is very uh I think this is very uh comfortable based ICN networking is very comfortable and useful for the special beginners and which is very uh kind and uh yeah comfortable for uh IC network over the internet so next slide please yeah this is a my conclusion so in a future uh we are now passing a possibility of a collaboration with the emerging orchestration technology such as kubernetes and we believe that this as a whole Docker based networking can be a one possible options for the easily constructing the as a networks over the existing internet infrastructures so thank you for your kindness this is my in the representation okay thank you very much um do we have questions"
  },
  {
    "startTime": "01:10:00",
    "text": "hi thank you very much for uh interesting talk uh my name is Rio from University of Glasgow um so you mentioned um using this on a sensor node what kind of sensor node have you looked into running it on a real Hardware have you tried it so far I I'm just curious about sort of using Docker based system on the sensor node I don't know what kind of like power you like scale you were talking about so I just wow so uh I introduced a simple is running on the doc uh sensor node such as a Raspberry Pi but uh I never I'll try to do the uh integration in the sensor but it can be used on the the act because uh several uh says Raspberry Pi is a very uh uh what should I say uh capable capable yeah Constructors very lightweight so it can be uh easily act so the effect you're talking about sort of the the kind of modern Raspberry Pi with like quite powerful ones that are that's the kind of the Baseline at the moment of sense and all that we're talking about yeah okay thank you very much thank you very questions sorry one more question okay you said you said um only one package then you also said that the the you can have subset of it to make it more lightweight to um adapt to more less powerful devices are these all Impact only one as in like the there's one binary that contains everything and you switch it on and off or you have like a lightweight binary that you create for the cases of using on a low storage device is it the fomo or the latter oh sorry it what is yours so the form so I I'm wondering whether you have one binary that has switches or are you building for smaller ones for the sensor nodes yes okay so"
  },
  {
    "startTime": "01:12:02",
    "text": "that so the last okay thank you very much so so which one is is it the first one or the second one the first option is the switches so like a command line option yeah okay yes okay it just switches then so okay so in which case then then the full size binary is used everywhere including the little devices oh no no just I'm sorry though later on this right so for building the uh support uh that's a could you back to the docker fire constructions that's right [Music] so when building this C4 uh previous one please yeah so as you can see they when configuring the uh server and the building is whole uh we can configure uh What uh we want to use the other options enabling the cache functional HDs manager functions so you don't have to or building all the binaries so then you can effectively have a smaller binary to run on smaller devices with a smaller storage capacity okay great thank you very much okay we have one more question from are you soon thank you for your presentation my name is from physio2 research of Europe very very interesting work indeed my question you mentioned the video streaming use case what was the difference between like normal monster video streaming like application such as a HTTP or some other serving applications so uh in there thank you for your question so"
  },
  {
    "startTime": "01:14:01",
    "text": "I mean ICN uh the Lotus can act the Hope by hope matter so on the they can do the in-network uh they can provide inner functions such as caching and such as uh transcoding or something or some intelligent function is uh can be equipped if it means the each router so recovery of the packet is also so we can uh enhance the quality of the uh story streaming quality compared to the uh uh conventional HTTP or some other approach we I think have you tried to compare the performances that you achieved using your uh API oh not not yet yes not yet thank you very much foreign thanks again for spending your work really interesting and let's move on okay thank you yeah thanks a lot okay um yeah this target is about a few ideas how we can build relevant applications um with ICN and then protocol mechanisms that we know and yeah obviously one important application is the web and and so Dave and I put some say initial thoughts together"
  },
  {
    "startTime": "01:16:01",
    "text": "um the background is that um so we we started this as a so-called statement or a vision paper to the ICN conference in September and um this is like a short two-page paper so it doesn't take long time to read it and so this was somehow put in a context of meta works and um so it wasn't really presented at the conference but um appeared in a panel which was fine but um so we thought it could be interesting to actually present the idea and get get a bit more feedback and maybe also kick off some work here in the group um the other background is that um you know currently there's you know lots of talk about quick hdb3 and and so on and um so here's an interesting um blog posting by Bruce Daly um who is characterizing quick um basically as the um say long missing RPC mechanism in in the in the Internet Protocol suit so for efficient RPC communication and it's not casting you're not as a TCP replacement but more like an IPC system um which um TCP isn't really good good basis for in his View and um so we we tend to agree um and when we when you talk about um web communication you have like two elements so you you need something like efficient say RPC style communication but you also need something that is typically called rest um so some kind of state Evolution on servers and and clients and then some protocol framework to manage that and so whereas quick is um say admittedly much better than um"
  },
  {
    "startTime": "01:18:01",
    "text": "say the like previous protocol Stacks it's um so the the approach that we take in this paper here is that okay can we maybe improve it even further with the data oriented design so quick um reminder or intro tool to rest um so um the idea is that you have clients and servers and you have um say well-defined protocol mechanisms that allow you to say setup State on a server and then via interactions modify the state and say if evolve it both on the server and the client side and um so in reality um yeah even HTTP is stateless but you need some mechanism to refer to this state in your interactions and um so in reality we have used things like cookies for example to um you know identify um clients and then indirectly also the client stayed in invest for communication and if you look into this this the like state-of-the-art systems um they are so you could say they are not quite as optimal as they could be so first of all they are something like implementation complexity so you have several layers of um of of Stacks with their interactions um so several protocol layers in in this deck and um um you're on the other other hand if you look at the interactions um say using like modern HTTP 3 communication um of course you have quite a few messages going back and forth and you have request parameters cookies and so on and um so the key idea for HTTP 3 and quick"
  },
  {
    "startTime": "01:20:01",
    "text": "is of course that you have the quick connection context and then potentially several streams in there and um so we well okay maybe we actually have a very good tool um to come up with a say even better approach um that tool is uh is ICM of course and um so we thought okay what would we need for uh for building a platform for rest for communication and then by extension maybe for future modern web protocols and so what we want to do is um say do rest Communication in an ICN idiomatic way so not you know blindly copy all the interaction or message flows but think what it's really needed so for a rest you would have clients and servers in a session so it's uh you could say yeah it's a it's a um an implementation of of this larger concept and you need some understanding of the state Evolution and of course it needs to be applicable to any different applications um and yeah you cannot ignore security and privacy um so if you want to use this for any relevant application you want to have a similar security features as HTTP and TLS today but um so can we do this better than like HTTP 3 over over quick today can we simplify the protocol Machinery can we maybe even have less overhead on The Wire um without losing um all the nice ICN features that we um appreciate and okay so if you kind of start doing this in a naive approach you would say yeah well we have interest uh data interactions so we could just map the"
  },
  {
    "startTime": "01:22:01",
    "text": "say HTTP or arrest requests onto interest packets and then we get data back and we could invent some naming scheme perhaps even the URI like naming scheme and so on so we have discussed this earlier this is not really a good idea right so because as we have seen earlier in this client server communication you typically have to transmit lots of data so you need to negotiate Keys you have context information Cookies all these things you really can't stuff this into interest packets right so we we have this flow balance concept and we use interest something like the um equivalence to X and TCP acknowledgment and TCP and um so that would kind of screw up this concept we have a product uncontrolled uh uncontracted not contractual data in the network also if I can send um say any large blob to any server is not really good from a security and robustness perspective so you open up the door to computer and overload the text and so on um then also um in ICN well our interest data interaction um is kind of controlling things like interest rates on the client so it's it's operates on a network time scale so we um kind of time out these interests uh eventually and this triggers um say re-transmissions and so on um when I do an RPC like communication uh well I we can't predict how long the server takes for the computation so these things operate in a different time scale and um then also I need some some say other security concept around this and so we"
  },
  {
    "startTime": "01:24:03",
    "text": "have talked about this in the context of uh reflexive forwarding uh and and Rise where we um proposed a mechanism where a um say client um can initiate um say RPC like requests um but then we use um ICN idiomatic um interest data in the opposite so reverse direction from the server without exposing um any client identity and so this is an ICN forwarder extension that it's needed there I'm I won't go into this today but we talked about it I think last last time and so the design that we um came up with is basically about enabling this client server communication with a series of request response interactions in a session context so like in HTTP you can say um we employ reflexive forwarding so directly for RPC communication and so a lot all kinds of parameter passing and we also apply this to the key exchange that we are going to talk about in a minute um to set up these sessions and um what we want to do is um this restful communication um but not say inside connections or tunnels so they say response data that we get um should be ICN data objects so they of course would be encrypted in most cases but we apply the usual ICN security mechanisms and we don't want to use any tunnel mechanism and um so of course when you do this and you want to have good performance so comparable to to http um yeah you have a"
  },
  {
    "startTime": "01:26:02",
    "text": "series of requests in a session you want to avoid setting up context State again and again so this shouldn't require more round trips um and so the challenge is that we want to establish and maintain this shared assessment session State um in in these sessions so what we do is we use the key identifiers um in in this session and so the associated security context that we set up in the negotiation phase and through to identify the the session stage and then we use the recording parameter passing for clients to refer to previously created application State and this you could say emulates something like HD cookies and um of course when you do this you have when you think about so um so what is is kind of the um say root of the shared application state so we decided that we tie it to the key IDs and um so because this is kind of an essential um say agreement that the client and server have have to establish so it seems to make kind of sense uh to use this basically as the session identifier um the drawback could be that um or if you if you change Keys um then or um if you Wiki then you have to reset up your your context um in this system you also you have some kind of coupling or binding between client and server because server has the security context and of course also the application context so we have to make sure that your say subsequent interest reach the same server"
  },
  {
    "startTime": "01:28:02",
    "text": "um this is a kind of maybe a bit um yeah something to take care of in an ICN environment um or you need to implement some kind of server back-end State transfer or state synchronization system for that um so uh Mark and colleagues earlier specified ccnx key exchange so um in a draft here as well and and what this does is basically TLS 1.3 like key exchange between two peers that is basically following what TLS 1.3 does for establishing a shared forward CQ key which you could use for confidential communication the main use case at the time was something like a tunneling scheme so you you can have a wrapping in a ICN Communication in an outer TLS like context so for applications like you know tele banking or something you would show any kind of commercial thing you would you would use it and um so it was designed for this client server scenarios um and um it's but in the end you still have interests and data so it's orthogonal to reliability and congestion control and um so what we did here is we we used this um exchange protocol but we don't want to use um this say tunneling approach so in this paper we kind of describe how we are now implementing the season X key exchange part with reflexive forwarding so because we wanted to avoid um you know sending interests in both directions so we want to do it in the reflexive forwarding"
  },
  {
    "startTime": "01:30:00",
    "text": "um so in our view more ICN native way so that's that's one part and then we basically derive um a key for encrypting the the data objects later in the session maybe a bit too intricate to go through all of this right now because we are also running out of time um but um yeah I would like to refer you to this paper and I mean this is is the first idea like a sketch essentially and we haven't really implemented it yet um but what we think is that it's now a really good time to think about web over ICN so clearly um it's not enough to say well we just use interest data and so the key idea here is to leverage this um what we think really useful work on key exchange coupled it with reflexive forwarding and then use it for a data oriented ICN communication and so we roughly approximate the capabilities of like HTTP 3 over quick but um if you do this correctly um the resulting system implementation may actually be simpler because we don't we don't have this relay approach we can leverage some IC and optimization we have all the other ICN benefits still like caching and general and a name oriented system so it could be potentially easy to implement of course the devil may be in a detail and um so we think that could be a really interesting basis to build like the next generation of ICN systems um admittedly there's some some work to think about um so I mean one issue here is of course name privacy um so that's not solved by this approach um so you there are some other proposals um for dealing with that but we haven't"
  },
  {
    "startTime": "01:32:01",
    "text": "really spent a lot of uh work on this and um so what we really like to see is like someone picking this up trying to build it and um so that we can do some further experiments with it okay um that was our quick heads up on um on restful ICN we don't have much time unfortunately for questions um it'd be great if you have questions if you could direct them to the mail list and um before we close um so Dave and I have so I'm not sure if you were aware there was a side meeting on Monday at the ITF in London um on networking for metaverse so distributed AR VR applications and um a bit of the Mind share there is actually um going in the ICN Direction so and um I also Blended um say some some ICN ideas in that concept context and so we thought maybe now it could be a good time to um say in this group here think a bit about a research agenda and and also recapitulate a little bit what we have in terms of in technology is things like multi-destination multi forwarding and multi-pass forwarding um and what is potentially missing um so for building this uh say which are social arvr applications and so we thought it could be good at nice to have a interim meeting uh in the not so distant future um perhaps end of November beginning of December um so if you are interested in that please feel free to talk to us of course we will also um send a message on the main list and um yeah see what it's kind of try to negotiating um the interest there"
  },
  {
    "startTime": "01:34:03",
    "text": "all right anything else we need to talk about thank you very much for attending and hope to see you all very soon goodbye and thanks matters for taking notes foreign [Music] sorry sorry I just pressed the wrong button I didn't have a question okay foreign"
  }
]
