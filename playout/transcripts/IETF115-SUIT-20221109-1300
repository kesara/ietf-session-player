[
  {
    "startTime": "00:00:04",
    "text": "thank you Taro will you do it may you take notes no come on man no okay I'm trying to open the ether ad and it's giving me this proxy server encrypt failure so Dave are you gonna do it remotely I'm trying to but um I can't access it for some reason yes it would be nice can somebody please watch it to take anything that Dave misses I I can't access it so I won't be able to take notes you can't access it all right got it um please I mean honestly everyone I mean we're active in this working group we can't have this meeting without minute taking please I mean there'll be multiple folks in The Ether chat it's about key decisions and Milestones thank you thank you for the recording thank you Michael Richardson I should have done that okay um remind you of the note well please uh if you're going to contribute know your rights Privileges and"
  },
  {
    "startTime": "00:02:01",
    "text": "responsibilities and please uh treat each other with respect and uh we'll we'll make better technical decisions that way we just did the administrative tasks and here is the first part of the agenda um and the second part of the agenda are there any agenda bashes um day favor um I have to present in the room next door for 10 minutes about 45 minutes in and since our usual rule of thumb you don't see times up here and that's because the things that are the most well Advanced documents we let them run until we actually get them done because we want to ship them or whatever so that's why you don't see times on here so that means we reserve the right to do Dynamic swapping towards the end so that the things that uh teep does not directly reference are the ones that might be done during the 10 to 15 minutes here so for example I have to be in the room for the firmware updates because Russ is an author um whereas things like uh mud and MTI to might actually move up depending on where we are after 45 minutes or so so that we'll do that uh real time any other agenda bashes okay we're gonna start with suit Manifesto we did not get any slides for hackathon does anyone want to share um the results yeah I think for an interested time uh any of the hackathon stuff can be done in tip and any of the uh actual outcomes"
  },
  {
    "startTime": "00:04:00",
    "text": "I've already think been rolled into these slides on the various documents and stuff so we did have several people working on suit there but there's a hackathon report in teap which a cure is going to cover in teeth which kind of covers the relationship between deep and suit and so on so we'll cover any of that stuff and so we can just focus on the time here for the getting our docs done all right awesome great Dash 20. yeah that's 20. I did not expect it to hit 20. uh right so um there have been sorry eat the mic or eat the mic oh I don't need all right okay now you should be able to hear me um right so they're mostly editorial changes in this version there's not a lot of technical uh churn uh primarily these are uh coming from feedback from the the well I I guess it was the list from feedback from the list um there were some things on uh naming Clarity so what we've gone for here is to rename run to invoke because there was already a run sequence and the idea here is that we want to make it clear what's happening so that was just a minor editorial naming convention there the same thing in um common sequence versus shared sequence the idea was that common and command get a little bit too close together so by separating that out um it becomes a little bit clearer that we're saying comments or shared Suite sequence versus Command sequence you can see how there might be a little bit of overlap um I've added some uh clarifying text in a number of places uh and the uh those are around run sequence when strict order is false which is more applicable on uh large systems than small systems so this is not a microcontroller consideration in general this is more of an A-Class system kind of consideration"
  },
  {
    "startTime": "00:06:00",
    "text": "the entry for suit invoke there it wasn't clear that it contained could contain image verification so there's some text to explain that that's possible and the try each which is used for some decision making purposes uh doesn't didn't have a clear explanation of what its stop conditions were so the stop condition explanation has been added there was a minor technical change um I even actually asked for a way to write a small payload directly without needing to have a separate payload argument and the idea behind this is if you've got something that requires I don't know 32 bytes you don't necessarily want to have an entire separate hash and everything to make that work you probably just want to be able to put that small payload directly into flash now that required the addition of two commands one for a direct write and one to do a direct content check since there won't be a digest to compare against uh next slide please so we had an Ayanna early review and obviously we've had a previous Ayanna early review uh this one is pretty minimal there was one comment and that was uh since we have standards track ranges do those also require uh expert review as is the norm in the cozy style hybrid approach and for that I will take that to the working group how do you think we should handle this so my thought is that if there's a standard track document it's gotten plenty of expert review okay so I uh if that's the consensus of the working group then we need to put"
  },
  {
    "startTime": "00:08:00",
    "text": "some text in there to give Ayanna that guidance does anyone see it differently I guess someone does State explicitly which register you're talking about the one this document creations the ones defined in this story right yeah customer the problem is that over the life of this document the people who will do uh standard strike the documents that are based on this will not be limited to the people who know what they are doing and I say that as a designated expert with several registers uh so I actually prefer the expert to be involved okay I mean the the response of the expert can be very short sorry I didn't put myself in the queue Roman denilio uh as the kind of AD to share similar field experience with Diana on other documents they have previously in collaboratively identified some issues where it was uh just in the standards track range and there was no de and it would have been really helpful to have remembered and had some of that knowledge as Carson was saying when the registry was created Boy you really should kind of think about this kind of as a as a gut check and so thinking about that the registry will endure after the working group is closed all right so you good point okay I guess so that reaction is counter to my original reaction so that being the case um should we adopt the cozy style hybrid standards plus expert review model sounds like and I should comment one of those places where I was talking with Ayanna and they pointed out to me was on the Cozy"
  },
  {
    "startTime": "00:10:01",
    "text": "okay so we'll need to add some text to the document that explains that there's a standards plus expert review model moving forward well will we have to recommend uh you know some individuals to um to be those experts Roman denili again kind of by process it would be the isg that would choose those designated experts but uh I would certainly welcome recommendations be great I think someone just pointed at me uh seems plausible okay quick uh this is your last slide yeah uh quick reminder please uh if you're not currently drinking something from your soda put a mask on and this this is the last one I have for this draft so um unless there's any more questions or comments I think we can continue right so this is uh suit must multiple trust domains this is primarily um in support of tip at the moment there are a couple of other use cases that are important but they haven't gotten quite as much exercise as the team specific ones have uh next slide please so just in summary what we've got in here is three key Parts um we've got um or three key needed features rather um key delegation being the first one um we want to support explicitly and then there's the use case for mutually distrustful signers this is where two different parties own two different"
  },
  {
    "startTime": "00:12:00",
    "text": "pieces of the system image and they don't trust each other to see uh to authorize their code and we need a way to deliver those packages while still expressing software dependencies between them next slide please so summary of features we have we have cwts for key delegation that part is is defined currently but I'm not sure how accurate it is so cwt experts please have a look if you're a cwt expert please check that out for me um in we have the unlink command which is a specific requirement of teep as well as the uninstall sequence and then we have dependencies which are a way of expressing these multiple signature scenarios next slide please so there's been a number of updates so we're no longer indexing dependencies separately from components the Indus index lists have been merged this is intended to make uh the whole thing simpler to handle it does have some significant implications so digest of manifests are over the Manifest content itself not the envelope but this treats the Manifest Envelope as a component which means that doing an image check will digest the wrong thing so the current implementation or the current definition in the spec rather just says that the way that this works is that there is uh a test done in the image check command the feedback from the hackathon was that perhaps it would be better to implement a separate command for this I see Ira in the queue"
  },
  {
    "startTime": "00:14:01",
    "text": "Brandon you're using a highly directional mic unsuccessfully and up to this point your your audio will not work in the recording is this better much better thank you for myself yeah okay you know I mean I can substantially hear myself more is that better all right is this okay is this working okay okay this is okay challenge accepted okay so uh right as a better solution to the the approach that we've had so far with uh with joining the two lists of components and uh dependencies is to um have a separate command for verifying the uh the digest of the Manifest and we also needed a test to determine whether or not the the currently processing uh component was a manifest or whether it was a uh dependency or a a an image and the the idea behind this is for handling batch processing so this is where you have a um you're using the true variant of the index and this is so that you can go through everything at once giving it the same commands uh the problem is we used to have a way to say handle all the dependencies handle all the components but now components are depend our dependencies are components so now we need a way to split them apart and so that's what this uh this test is for then finally there is the process dependency command and that is of course the the thing that allows you to say go and execute the command sequence that lives in the dependency um we don't currently specify or I think I"
  },
  {
    "startTime": "00:16:02",
    "text": "do specify that it needs to check whether it's processing a manifest and fail if it's not um it's possible that we could just not do that and have it just fail on a parse error I'm I'm not sure I like that I think I'd prefer it checks but I will be happy to take feedback if anyone has a specific preference um the uninstall command sequence is the mechanism that tip is going to use from what I understand to say that it is time to remove all of the things that were installed by this manifest and so that has been added in here in support of team uh next slide please I can comment on that one Dave Taylor um so not only is it usable by teep but uh the other scenario and this is much less for constrained devices than it is for say uh devices that a a human can uh you know type things into for example the other scenario is we're a local administrator wants to uh physically on the box go on and uninstall something and so you can do that if you've already have the stuff that's in there and just follow the uninstall command sequence so that's the first scenario would not be for constrained devices but it's for a larger thing so there's a deep scenario was done remotely and there's a local install scenario the two um okay so for open issues what we've got other than what's already been talked about and the security consideration section is not particularly specific to this document it's the one that was originally in the suit manifest draft so that definitely needs to be updated um so there's a bit of work left to do there um the component another issue raised in the hackathon was the component ID for the root manifest now this is an interesting problem because um in a constrained system this is irrelevant if you receive a manifest you know where to put it you have one space to put it in you put it there um in a dependency enabled constrained"
  },
  {
    "startTime": "00:18:00",
    "text": "device this is still the case there if you receive an unsolicited manifest there is one place for it to go however once you're starting to deal with devices that have multiple independent manifest trees that Define individual applications probably this is most common when they involve trusted applications that are signed by someone else but when we have that scenario then there needs to be a defined place to put it um and that's where the question of a component ID for the root manifest comes in because that tells a device that's receiving it where it goes um there's a slight challenge with that which is that if we have that there's going to be an interaction between it and the component ID that's specified for that for a dependency so if you have a a root manifest but it doesn't matter what's in it for the current moment but it defines component IDs for its components now if one of those components is a dependency manifest which contains a component ID there's a contention between these two uh the the best idea for the the thing that I've come to for the moment which may or may not be the right answer uh is that anything defined in a dependency component list should override whatever's in the Manifest and that's just not going to happen and there are other arguments we could make but I think that's so far I that's the one I found the least arguments against uh thank you so this is actually one of the long discussions we had at the hackathon and Brennan summarized three choices which aren't on the slide and so one is where so this is where I think they actually following slot okay then I'll wait then um right so I believe I put those on a following slide we'll come back to it um oh there okay yes so there we are where should a dependent manifest be stored ah okay and so there there are in single"
  },
  {
    "startTime": "00:20:01",
    "text": "image devices as I said this is clear in single system configuration devices still clear um but when you have a system with multiple independent independent manifests not clear um so if we give dependent manifests a component ID that solves one of our problems but the question is do dependencies also get to declare their own component ID um I think I just ran through these choices the three the third one was actually a hybrid of two of the others so I left it out um so the dependent component list would this is the what I'm saying I think is probably the right answer the dependence component list overrides any declared component IDs and the other option of course is that the uh designated element of the dependence component list is concatenated with any dependency self-declared component ID I'm a little bit worried about some of the security considerations around that one whereas the other seems clear to me um yeah so to this day favor uh so to make it clear the uh thing that is the in the override case right the outer one gets to override where the inner one goes correct and so the scenario is you can have one inner one and it couldn't talk about some of the things that Fran and I talked about at hackathon um the uh the same dependency could actually need to be installed in multiple places on the same overall device okay and so for example if a device has say multiple tees in it right then it would be exactly the same suit digest exactly the same dependency or whatever but you may need to install it separately in two different tees and so where would you say that you'd say that in the outer one with different component IDs with one prefix going to one te one prefix going to their tee right so that's an example where the person that authors the Manifest of the of the component that's the dependency doesn't know where it's going to be installed these creates a default list right but then you have to be able to override that to say it go is open this"
  },
  {
    "startTime": "00:22:00",
    "text": "one it goes over in that one okay and so the concatenation aspect could have done that but it means you have less control over the full path right and so the override means you have full control over exactly where you want it and so it can be installed multiple times in more complex devices and so that's why you know I agree with that as the uh as the proposal and but I just want to explain why okay yeah uh thank you Dave next slide please it says six of seven there should be one more one more oh this is the rest of it yeah okay I think we just talked about that yes okay I think we're done uh the the optical part you haven't mentioned that oh yeah the the point is that declaring your own component ID is optional that's not a mandatory field in the Manifest and the idea there is that um dependencies just omit it does uh anyone no we're on this is this is trust management this is multiple trust domains trust domains right so does anyone disagree with the conclusion that uh was just made here between Brunson and uh Dave just so that if there's any disagreement it's it's aired now I'm not seeing any online and I'm not seeing any in the room yeah this is the conclusion we came to with the hackathon but 100 at the working group to see if we could get working for consensus right your examples because it's two sleeves up your suit before you go on to the next one Brandon did ask for somebody that is um a cwt"
  },
  {
    "startTime": "00:24:01",
    "text": "expert to be a reviewer of this one so I just asked is there anybody who considers themselves to be proficient in cwts it would be willing to do a review for uh for that aspect of the document um how about Carson thank you so let it be noted in the minutes just to be clear for the notes which document or are we referring to that was multiple trust domains and uh everybody pointed at Kirsten after Hank raised his hand first in case you're taking notes thank you all right so this is our viewers reviewers for the cwt aspect of the multiple trust domains document all right okay uh so now we're into uh update management so it just as a summary there are several extensions to suit in this document the first is uh it currently contains a coast wood um I would prefer it to contain a co-rim uh it has uh mechanisms for version comparison for uh Loosely coupled dependencies rather than ones that are coupled by Digest uh it's got some things on deployment constraints like timing priority and authorization and a couple of commands to enable more compact encoding for setting parameters next slide please so the primary changes since v0 are adding the override multiple command the point of this is that if you've got a lot of components this saves you two bytes each uh then there's the copy parameters"
  },
  {
    "startTime": "00:26:02",
    "text": "command which uh when more than one component uses the same value for a parameter cuts down on the encoding this is primarily important for hashes because if you copy a hash in the in the current version of the suit manifest draft if you copy a component from one place to another you have to declare the hash for it more than once and that is uh not great for something that's supposed to be encoded small so this is to resolve that problem and it allows copying from one component to another with a relatively minimal encoding next slide please oh that's it no is that it one more just waiting for it to advance okay um so there's this is definitely not a full list of update management actions if there's something missing that you need for a use case please uh let us know let me know let someone know um if they're uh for sorry uh version comparisons um there was an open question from the previous uh meeting about whether it should be possible to use a manifest sequence number as a version comparison in a manifest my instinct is no because we already have a way to check however I have had the request for that um and then that request Dave went strangely silent so um I'm not sure where we go from there okay uh sorry then um are there any other uh open issues that anyone's aware of it's the first time I've ever witnessed Dave have a cash Miss cash overflow in that case I think that is it we we do have I'd be interested if anyone has"
  },
  {
    "startTime": "00:28:02",
    "text": "review uh or is interested in reviewing the uh this document I'd appreciate reviews in general but also specifically on those two introduced new commands okay this one didn't come up with the heck though this one didn't come up at the hackathon but I I have the Instinct that it will at some point if I don't do it foreign so are you able to are you able to uh say more about what the actual issue was or should we just take that offline okay perfect okay I don't see harness in the room no I believe that Ken is gonna do the firmware encryption live okay yep thank you okay uh Kentucky of this document the next slide please yeah uh we are still uh improving our document uh yeah and David Brown uh joined of course as and uh we have some dependency on other documents uh we are still discussing in quasi working group like causing hpk and also called the AES and ASC CBC mode uh and as you can notice the title is changed uh the software encryption with suit manifest into encrypted payloads in suit manifest and we are still improving the text uh"
  },
  {
    "startTime": "00:30:01",
    "text": "in the document and we have new uh example approach to uh delivery the integrated firmware into to device next slide please uh simple uh this is old approach and I don't want to explain it so next slide please yeah this is new idea uh the uh the Manifest is uh signed by the Manifest Creator you know so the and now the encryption aim for is inside the Manifest so it is signed by someone and uh it requires uh if they also create the Manifest nobody can not change the Manifest so it requires distribution system to create a second manifest uh with a dependency resolution mechanism and so this is another story but so I I explained it later and yeah in this draft we do not uh exemplify the dependency solution so just simple one the author creates uh encrypted firmware and its manifest and deliver it to the device so next price please this is the example up could you tilt the microphone okay yeah that helps perfect yeah next right please uh okay at next slide please okay hello yeah uh with this case as you notice the the uh"
  },
  {
    "startTime": "00:32:00",
    "text": "oh it's so so tiny oh yeah so the as I said the encryption info is inside install uh command so this is signed by author so the device can decrypt it with this parameter next side please and now we are trying to export in this example to multiple trust domains draft so this is a little bit complicated uh that they also create a go firmware and it's manifest and then deliver it to the distribution system the distribution system creates uh encrypted firmware and it's manifest so there there are two manifests and encrypted firmware to be sent to the device so first of all the distance systems manifest contains a command to fetch or such manifest and encrypted firmware and how to decrypt it and lastly that it triggers also's manifest the osis manifest is quite simple so just check the validity of the decrypted firmware maybe that's all right uh we are still tackling to create it and also improve our example manifest because uh with this scenario the the author have to uh Trust on the distribution system because uh the they also have to disclose the raw firmware to this to the distribution system and also the device must trust the distribution system because to process the uh the Manifest which is created by this distribution system uh"
  },
  {
    "startTime": "00:34:02",
    "text": "it requires to depend trust the uh the Distribution Systems public key so it is uh it introduces uh more new uh security considerations so maybe we we have to improve these Solutions yeah that's all and any comments and advices are welcome uh this is a day favor um case there's any way that wasn't following this what are the reasons for the rename that Ken mentioned at the beginning is that uh teep uses this not just for code but also for what type calls personalization data so in other words the code itself isn't necessarily secret but the config file or the config data around that may need to be encrypted and so this abstracts it because it's just a payload it's a file that could be placed or something that could be stored in storage whether it's code or data doesn't matter for the purpose of this is that was why the rename because T needs it for both code and for data yeah this is so complicated I don't want to explain this that's your last life yeah you can check this one but uh yeah uh any questions or any concerns with the shift in Direction which is a significant one in this draft all right thank you Ken foreign at the mic I guess the the only thing I'd note is that we probably could revisit a more distributable version if"
  },
  {
    "startTime": "00:36:01",
    "text": "that's something that's uh that's demanded from the working group I'm not saying that we would change this draft I'm saying there's the possibility that we could look at a um compatible or the one that doesn't use dependencies but uses a key distribution mechanism instead Independence we're going to change the order now because Dave just got his five minute warning to go uh next door so we're gonna do um mud and then we're going to do uh MTI while Dave's gone yes are you commenting on the last one no no no I'm doing the time machine thing again uh sorry I really forgot and there was this comment about when you have close with that you wanted program instead that would be perfect that would be a blocker because it would take way longer yes accommodating for that is fine um but don't expect as of course what is basically done so maybe if you want this done and if we want this done maybe not wait for Quorum but you know yeah that that's the reason that it still contains a coastwind today okay uh wait a minute how does that affect the working group last call this was for the uh update management so sorry when he jumps way back on the agenda I've got to follow the gotta snap the pointer"
  },
  {
    "startTime": "00:38:02",
    "text": "okay um you you could go in the YouTube pad and fix it we're jumping to the integration between suit and mud uh next slide please so the just to give a summary of what this is for anyone who hasn't looked at it before the idea is essentially this uh mud files are a mechanism that allows devices to point to a URL which contains a document that tells Network infrastructure what they should and shouldn't access over their intranet and possibly over the internet um what this does is provides a new reporting mechanism for those URLs the argument here is that uh it would be nice if your network infrastructure knew what this was and had those files available before it ever sees that device and if you're receiving firmware updates those access requirements can change so having those two things coupled together again makes sense further to that some of the reporting mechanisms that were defined for mud originally are unsecured and leaving an unsecured way of reporting security information doesn't make a lot of sense to me at least there was one mechanism defined that was secured but that mechanism was done through device certificates and while that is a one way to get the job done there are other ways to do it as well and particularly the interesting thing about this approach is that it allows us to link it in with attestation as well so you can attest the software that a device is running and using that information about the"
  },
  {
    "startTime": "00:40:02",
    "text": "software you can then determine what network access requirements it has I've lost the slides yes we have okay I'm trying to figure out why so so this is the the idea behind it um I I can talk probably off of part of that first slide from memory so I'll do my best uh the the what we've defined in this draft is mostly just um a mechanism to report either a URI and a signer key or a full copy of the mud file um and that's it this that is the draft in summary there is precious little else that's there so it's got similar benefits to certificate bindings but it doesn't mean you need device specific certificates um it does require device fingerprinting or attestation in your network so it's just different ways to solve the same problem um I with different trade-offs uh next slide please last slide and also last slide there's been very little activity on this I don't know if just no one is interested in it in which case maybe we don't need it um there is an open issue about how we handle updating mud files um specifically if you deliver the full text of a mud file does that imply it never changes or is there a way to override it so that's that's essentially the one open issue around this foreign Richardson um I I did read the document some ihfs to go um so you just I was going to say something positive and then you just said well you just said we're delivering the full text of the mud file I didn't don't remember that ever being the case"
  },
  {
    "startTime": "00:42:01",
    "text": "an option to do it that way well I think that's probably a silly thing okay um so that probably solves your problem um don't do that um but um so there's a document in opto AWG which which uh I think will finally get to where can we last call this morning um on once you have one securely how do you update and what are our reasonable update path and you can do it relatively securely um so I think that actually solves most of the problem but I think that you can deliver a unique URL per firmware I think that's the right way to do it even if the I would say it's the right way to do it even if there's no functional changes in the firmware okay just you just say this is the new version and this also lets you do because as you may know you can also now Point there's multiple ways of doing this now you can point to an s-bomb from the mud file and so while that might not be like we could do that through suit as well there's multiple ways of doing this I don't think it's a terrible thing to have a variety of ways of being able to tell the owner operator Network this device may be vulnerable to this dve right that's what we want to do yeah I actually just go I think you're done you're getting the reviews because I think you're done okay cool sounds good does that mean it should go to working group last call I'll ask that when people are through common things so hi this is Hank I was just um I was writing modifieds for rats back in the day so mighty rats there will be Paul postponed them because uh um the implementations were not there a year ago were there now so that we're returning to that so you are not explicitly fire defining a mod file here no yeah so um um isn't there a need for that why is"
  },
  {
    "startTime": "00:44:00",
    "text": "that a no just as a nutshell why do I need to define a mud file if I'm just pointing a URI at it because maybe there are some suit specific cards no that's not what this is for this is for uh giving your network infrastructure infrastructure so it's the native okay that's fine thank you so it sounds like the action item that that Michael is suggesting is to remove the the encapsulated mud file and stick with just a URI and signer that's what I heard okay so I think we need to implement that before we do uh working group last call what I'm hearing is get that update done then do working group last call should this be blocked on the the last call of the Manifest it shouldn't complete before manifest completely understood okay student report no now we're doing MTI last one oh and I've got the wrong date on or oops next slide quick before anyone notices I was just gonna say on the last Point um if if um the timing is right we could submit them as a bundle it'll get bundled whether we do or not okay okay so the point of this draft is to ensure on interoperability with a minimal crypto Suite now I want to prefix this I think I'm going to say this again multiple times but the important thing here is that this is specifically for constrained node firmware update I'm not saying anything about uh mandatory to implement algorithms for tape I'm sure Dave has"
  },
  {
    "startTime": "00:46:00",
    "text": "ephemerally heard me somewhere um so that's that's an important consideration in this discussion that this is specifically for constrained node update that we're talking about these crypto Suites um so it's an asymmetric problem unlike many of the interop algorithm discussions we have mandatory to implement means something different for the author than it does for the constraint node the important thing here is that your manifest author should be able to make a manifest for any device sorry the Manifest author should be able to make a manifest for any device an intermediary that processes a manifest should be able to process a manifest for any device but a device does not need to be able to process any manifest it only needs to be able to process the Manifest that's aimed at it and if the Manifest author can't work out which crypto algorithm to use for that there are bigger problems problems that we can solve with suit report um so the that's the the fundamental consideration here in that this is an asymmetric MTI it means something different for the author than it does for the recipient and if we don't have appropriate choices for constrained nodes they're just going to ignore this document that's one reason that it's been separated out of the suit manifest the other reason is that it's likely to change over time and be obsolete a bunch of times next slide please so the current status is we're defining four MTI algorithms they're all mandatory to implement for manifest authors and intermediaries but manifest processors are simply required to implement at least one it's scoped specifically as I said to iot Firmware"
  },
  {
    "startTime": "00:48:00",
    "text": "deployment use cases and constrained nodes at that uh one of the questions I have for the working group is whether we should require all authors and intermediaries to implement the symmetric algorithm Suite that's defined I'm not sure that's a good idea so if there's any feedback on that maybe that's an option and that one's not mandatory then next slide please uh unless there's events I was thinking that if a cipher Suite is implemented we probably want it to be one the one in firmware encryption it's since it's already bundled there why I say anything here I think the point was that the firmware encryption draft won't need to be obsoleted each time we change algorithms it won't it's got the algorithm identifiers there you can do anything from cozy but confused I think I'm I'm misunderstanding something here okay um ask your question okay so are you saying that we're defining an algorithm Suite in the firmware encryption draft and therefore we don't need this yes but what happens when we decide that that algorithm Suite is wrong then there'll be another document that comes and replaces it or it just you pick something else from the Cozy libraries uh the algorithm registry and as long as the code points are there it just works but how is that mandatory to implement right if you're going to mandator if you're going to change the mandatory to implement you're going to have somebody at the dock yes the update which document the firmware encryption document I think that Brendan's point is that it that he would rather just rev this document and"
  },
  {
    "startTime": "00:50:01",
    "text": "have all the things in one place like we've done an ipsec I see okay so um where we've had to define a new mode you're still gonna expect the new say block Cipher with the same mode as a future yeah that's the idea okay I don't have a problem with that okay um welcome back um so you've defined four profiles yes uh one of them is has HSS LSM yes right um which I'm very enthusiastic up Russ and I had a back and forth about LMS excuse me I'll never get if I could have you know simple syllables instead of lots of letters to say I'll remember it um Lucy in the Sky with Diamonds whatever something like that right um um so Russ and I said so who actually implements hsms with LS HSS LMS see I can't do it now right too many letters there's at least two so you told me to open source okay you told me to um one of them is defunct I had a long conversation with Randy and and um Rob okay it's really defunct you really can't get the hardware uh okay that was a third one the the cryptek is the third one okay so the third so there's a Cisco implementation and there's the pi uh HSS LMS okay well okay so let me tell you what I I know okay all right um the cryptek one is at this point sadly defunct yep okay the hardware is unobtainable the the revision to it uh got killed by pandemic and now Russian sanctions yep okay because the guy who did the work is there so and they're not likely to ever get new hardware out is what I got if their spares you could use it there another company was one in Ottawa correct who uh surprisingly has"
  },
  {
    "startTime": "00:52:02",
    "text": "an office Three Doors Down from mine there you go you should be able to find them yeah so a of course no one's been to that office in three years um uh but actually I suspect no one's been to that office ever that was a a tax uh uh office registration for r d credits uh so I don't know any of the people involved right maybe you do um so you know that's interesting okay they exist and you say there's a third one a Cisco implementation I think that that I think that just the community needs Assurance a feeling of of safety that there's stuff that we can go and get that are going to be useful otherwise we're going to get a lot of push a lot more pushback and I think we've got that already and I would just like to see people relax and go okay it's all right we can handle this okay that's the point so would you prefer to see this document revved when a more available pqc signature algorithm comes out don't I don't want to wait for that to publish it okay I'm happy to to rev it in whatever that period is 18 months two years six years whatever okay um yeah of course we should do that right and and if and if we obsolete one of our profiles that's okay too because we the purpose was to get an upgrade path that was the whole point was to get the upgrade path and I'm very very concerned that people are not going to implement the the PQ safely one if they feel at all uh anxious about you know what they're gonna do they're just like oh it's too hard and throw up their hands right yep I I agree with everything you said is there an action item from that yeah I have to introduce something okay and he wants an introduction next slide"
  },
  {
    "startTime": "00:54:01",
    "text": "please so these are the algorithms that are defined um we've got one symmetric one post Quantum asymmetric that's only kind of post Quantum it's post Quantum hybrid because there are no standardized key exchange algorithms yet um the classical asymmetric uh we've got es-256 and eddsa uh both of them with hpke because uh that seems to be where things are headed I think uh they're currently listing aesgcm but it sounds like AES CTR or AES CBC should be coming so I'm not totally sure CTR seems to be the direction at the moment okay uh so there you are um so those are what we have on the plate at the moment next slide please there were two that were obviously missing um those there might be a need for a specialized version of eddsa there I don't think there's a Code point for ed25519 and cozy um but that's kind of an important consideration because on a constrained node you can handle it differently uh day Fair can we go back one slide I have a question not a request but it's a question yeah um all of the MTI ones actually require encryption uh that's a sweet that's so sweet yeah if encryption then that's what you use okay so you're not actually requiring all constrained devices to have encryption if all you're doing is Distributing public firmware and things right no no okay I think right now the security consideration section says to do I think it would be useful to elaborate on that point fair enough to do well it is to do next slide please I"
  },
  {
    "startTime": "00:56:00",
    "text": "mean you can at least fill in the entire document is about security I mean that's what most people do but yeah I think I probably will um I like that even better so here's you know there are a couple obvious things that uh get used a lot in iot that are missing from that um maybe they shouldn't be I I've seen at least one argument that if we're going to have eddsa we might as well put Chacha poly with it and that's an option those that set seems to get used together quite a lot which is the argument for that um so maybe that would be a good change I don't know oh I've got a thumbs up from at least one person okay so uh that that might be one change to make um and that's it if you have any feedback please let me know I'd be welcome co-authors as well if someone wants to do some of this write security considerations Maybe so should we do a uh Poll for adoption how do you want to do that because I think he needs to do and an update to address that point you made before we adopted uh it's adopted before we last call it um no I'm saying right now it's an individual estimation it's not a working group document the MTI MTI I think you're right I think that's right it is and so um uh I think we have the action item to call adoption so I'm asking can we do that right now and say can this it's not done right can we at least rename it from uh individual to working the question is does anyone object to adopting it we'll take it to the list but does anyone object to it in its current form I've heard several people saying just just adopt is the next step right just making sure okay so uh technically it's within our race to just adopt it without asking the list but we like to ask the list so or ask the people so the assumption is it will be adopted and the next version of it will actually be a draft ietf suit"
  },
  {
    "startTime": "00:58:00",
    "text": "um so when you grab it post it as a new one unless we tell you otherwise okay we'll do that sounds fun okay I just wanted that minute okay I think this is the one Dave wanted to be back for so this is a suit report next slide please so a summary of what it is the idea behind this is that you want to know what your device did when you attempted to install something or try to secure boot uh so what it contains is a reference to the root manifest so that you know exactly what it was working on then you've got a record of each decision it takes there are relatively few decisions in a suit manifest so this is a small list uh there is also a record of any critical information that's identified in that process this is done through the uh the reporting mode hint that goes with each suit command that feeds into the construction of the suit report but it is a hint suit manifest processors are welcome to override that behavior however they see fit uh the result of this is this so what it gives you is the result of an a procedure there are were two procedures but since the changes to the uh suit multiple trust domains there is now a third procedure which is uninstall uh invoke in case it's not clear is equivalent to either secure boot or running the code that's in your tee next slide please uh so this has a relationship to rats and uh we didn't quite have time to talk about it at rats but the idea here is that a verifier in rats could take all of this information and construct your device State out of it and by using that they're able to uh discern information"
  },
  {
    "startTime": "01:00:00",
    "text": "they might need to determine the uh the trustworthiness of the device they can also extract the system property claims and by extracting the system property claims they can construct the information that would normally have gone into an attestation report so this can be used in appraisal and the the one important consideration here is that this is not the kind of information that a relying party wants to get so there is an onus that gets placed on the verifier to translate this information into more conventional eat values um it is and so what I'm saying is it's attestation evidence but it's probably not attestation results next slide please so there were a couple of changes um I noted in the original version of this uh draft that it's very convenient on a constrained device to do reporting through a single append-only log and if you have multiple places that you have to put data mistakes get made serialization is hard what this does is it allows you to just keep a pending and serializing to a log all in one go so you don't have to do a post-processing step before you can cons before you can send or store your report uh what I have done in this one is merged the system property claims and the suit manifest records to try and join that together to go from two logs down to one and the mechanism for this which is not entirely clear here but the idea behind it is that one of these elements is a list or an array element and the other is a map element and by doing this a verifier that wants to extract only system property claims just takes all of the maps out of that list and it has the system property claims without having to worry about parsing anything else next slide please"
  },
  {
    "startTime": "01:02:01",
    "text": "I've added suit capability reports we talked about capability reports a number of times in this working group and we never quite got to doing it but I thought that a report draft might be the place to put a report so I've added a suit capability reports in here and it essentially breaks it down to the things that a an author needs to know about a suit manifest processor and it's just a list of lists of integers it's fairly simple in that respect so oh and component identifiers which are not integers so so that's that's the overall structure on the rough idea of what's in there between these things you know what a suit manifest processor can do modulo any ACLS that are applied by it which you won't know from this next slide please your last one oh that's my last one okay well then that's it um so uh that if there's any feedback on that I'd appreciate it if you want to do a review I'd appreciate it um go ahead any questions comments yeah you want me to go first yeah go first okay um so two what one question one comment I'll give the comment one first um that I think uh some place we need to write down how you might carry a suit report in an eat yes so that is a big to do on this yeah and I think that what it boils down to is that we need to Define an eat claim yeah just eat one yeah manifest which would not be this right there's an e-claim for measurements which maybe you can squint and say it goes there or maybe it's a new claim that's specific to suit manifest my preference would be to Define this as a single new eat claim which is just a"
  },
  {
    "startTime": "01:04:03",
    "text": "suit report right that that would be my preference as well and Russ is also nodding um as part of where that wherever that gets written down whether it's in this document which would probably be my preference but it doesn't have to be um should also consider answering the question of okay assume that your suit report has sensitive information do you encrypt the suit report or do you put it in and eat and encrypt to eat I suspect it's easier to say the latter because the eat may contain other sensitive information from that device besides the suit report in which case not having a mechanism to say encrypt the suit report for use and eat is probably not necessary but that's what the security consideration should actually discuss that so I think there's a response coming to the mic okay I do have a separate question but I'm happy to go after Michael so this is all my first one so okay but if Hank wants to respond to this we can cover this one so I would this is Hank I would not assume that we offload the responsibility of encrypting something to eat because but that would imply that we always send suit reports and eat that looks weird to me yeah yeah I was not making that assumption I was saying when sending a suit report and eat right but the implementation then is that what do you do when you don't know how do you encrypt it when yeah I I agree that you need a different mechanism when not covering it well you need to also answer the question of what if it's not an eat I agree with that yeah okay if that's fine then yeah on the eat one if you imagine that there are uh five different claims of which you preferred as one and all of them have sensitive information do you encrypt five things separately and then put them in an eat or do you put them all in and eat to encrypt this whole thing that I'm saying that's the discussion that should be put into the security considerations right last question and possibly yes okay so if you didn't"
  },
  {
    "startTime": "01:06:00",
    "text": "hear that remotely Russ said uh that's a discussion I should go in the eat document or yeah so uh Michael Richardson here so I'm really happy to let you go first um because because um now I can ask my my question in a much uh more interesting way um so um up to this point we are the whole status tracker has been sort of out of scope for the working group so my question is how do we get suit reports back in the first place given that we haven't even told people how to get you know manifests and stuff to the device that's of all a device specific thing so how do we get any of this back and it actually answers part of the question huh and that's the same way the same magic way but but you see at that point if you say it's the same magic way then the the privacy considerations for that thing are also the same magic way okay so that actually is my bigger question is that I think that this document has pushed us very close to saying it's time to for a small recharger to have an ietf standard status tracker with encryption that can collect this information okay I have a counter proposal that's fine I don't care how we do it but as long as we do it okay because otherwise I think that that well there's some places some verticals like teep where they have the problem solved I think there's a whole bunch of other places where people are just uh okay and they're going to wind up in some very proprietary uh vertical at that point so so I have a counter proposal can I tell you about it in an hour in an hour yes at some other place okay so but I'll sorry I'm just joking uh the what we've realized that this is that there really isn't anything in tape that restricts it to Tes there's nothing in the T protocol draft that would prevent you from using it"
  },
  {
    "startTime": "01:08:02",
    "text": "outside of a te and when you squint at it just hard enough it looks an awful lot like that status tracker so I think that's really cool and I think that for a bunch of things um that are of the you know Raspberry Pi and larger devices I think that's probably the right answer um and then the question is whether that's usable below that and that may be the case that it is right and the reason I I think that tees don't have that problem is that they also have a typically a rich execution environment that can do all of the heavy networking stuff you know that is you know no longer possible on 16-bit CPUs for some reason but anyway I'm just kidding right obviously it is right there you go so what I'm what I'm saying is I think that it's worth exploring that but I think that it would make sense if we already have a protocol and and so on that does roughly what we're talking about to evaluate it first okay um if it's a follow-up let karaoke first okay well just to Russ's Point um about where encryption discussion should go I think it should go on and eat profile which is where ER says things should go now absolutely agree okay so Dave Taylor now my other question um uh on the slide here it says they're broken down into supported component identifiers and and you uh pointed out that you know they're not integers and stuff so what does supported component identifiers mean for a non-constrained device is my question so there is a wild card thank you does that answer your question so you could say here's a path and then everything after that is a wild card record support arbitrary components if you choose to install them as long as it goes under this path that's correct okay that answered my question thank you"
  },
  {
    "startTime": "01:10:06",
    "text": "are we done let's just make sure no we didn't uh we need to talk around okay I don't remember what the charter question was oh yeah yeah you're right um uh on uh so Brendan's answer here about an hour I was referring to like the tape meeting um and uh I will observe that earlier in the suit working group right we had a discussion of can you use suit for so I can use a suit manifest for things that are not iot devices okay because you know software update for internet of things and we said yes for a chartered to make sure that it works for iot but we actually put language in this manifest that said it is not restricted for that purpose okay you can imagine a similar discussion go that might happen in deep fair enough all right so we've covered you cover the hard case because otherwise you wouldn't right and then if it happens to be useful for the easy case go for it right all right so just making sure since we jumped around the agenda this page we covered all of them this page we covered all of them so we arced out to the any other business that would anyone like to raise some foreign thank you we're done already they're probably not out yet thank you I'm surprised but we definitely needed more than 60 minutes right so it means you know we"
  },
  {
    "startTime": "01:12:01",
    "text": "picked the right number at 90. the fact that we used 71 effectively yep I don't think we had any unless something happened there was no non-essentials interesting things while you were next door foreign I hope it went well next door um my part of it did since I'm just advertising a side meeting so apologize called a generic prospector API okay generic and everything yet another layer because there's so many they're just a bit you know so there's there's so much or root of trust which is similar but nice definitions document I'm pretty sure that actually means busaker and so they want to manage that for validation procedures of course and uh and the uh I will propagate the TA profile for Quorum Edo platform because I have a relationships that concise da stories again they can"
  },
  {
    "startTime": "01:14:00",
    "text": "slice CA stores documents they have uh they have a common size yeah I'm saying make sure they know about our consolidation they have also a cozy key store they built a CE implemented and they use cozy Keys as the interface messages and then the score is 88. they don't why so wait a minute I don't know if they want to be capable of supporting a lot of this I'm worried that you they made a vodka oh"
  }
]
