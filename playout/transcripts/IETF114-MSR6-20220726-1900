[
  {
    "startTime": "00:00:33",
    "text": "which fight thank you so what you're doing here that's good good okay good afternoon welcome to msr6 both please take your seat put your chair chair in upright position put your phone in your airplane mode or at least to silent mode please because this session is being recorded and we don't need any musical soundtrack so we have busy agenda so i guess we shall start yeah and please scan this beautiful qr code so you're on the blue sheets so note well i guess you've seen it so many times but i'll keep it on a screen for another few seconds so everyone can read it it's on the slide deck as well so you can download it so agenda"
  },
  {
    "startTime": "00:02:00",
    "text": "we are i'm going to talk for five minutes maybe less then we have 45 minutes to talk about requirements and use cases we are going to talk for a bit about proposed solutions but i suggest we are not focusing too much on this and and during those parts please only ask clarifying questions like i don't understand what you mean by that and keep questions like i don't think it should be done that way to the second part of the session we're gonna have open mic discussion then we'll talk about charter and hopefully make some decisions uh please because we only have two hours and i suspect most people here could talk about on this topic for like a couple of weeks please keep your comments focused and if you notice the first slide we do not want to talk about how before we discuss should we right so what we need to actually agree right now is is this problem worth solving okay is it a problem do we want to solve it do we want to solve it at ietf and if answer is yes then where exactly are we going to solve it are we going to use existing venue or we need to create a new one and if you answer if you find answer to that question we can discuss about uh charter and deliverables and all those things so please keep this in mind right let's refrain from discussing details of the solution because if we decide to form a working group it will be working group job not the task of this both uh so i think actually that's all i have any comments uh so just one important thing like if you're going to join the mic line please"
  },
  {
    "startTime": "00:04:02",
    "text": "use the meet echolite client if you're local to join the line uh so we can kind of manage between the remote and local lines thank you very much okay and the first presentation let me msr use cases right please come here stay in this pink cross so people remote people can see you i and i will be your voice controlled interface to the sides timer 15. [Music] if you want to look at the slides can you hear me hello oh yes no uh okay okay sure uh good afternoon everyone here on behalf of the author list i'm going to talk about the msr6 use cases i'm a tng and this is some work just is derived based on the mailing alias the the sun meeting and all the contributions from different uh people so here i'm uh presenting uh can you do the next one next slide yeah please oh yeah um from the meeting uh one one one two and also the melee discussion about the the use cases and all the"
  },
  {
    "startTime": "00:06:01",
    "text": "requirement objectives and the team has already have already laid a solid foundation on uh what will be uh achieved what will be pursued and all the you know objectives and uh requirements so for the problem statement so um hopefully is uh you at least to get some background about that things here i will just uh give a uh some sort of a summary of what will be the objective requirement to be achieved uh what is uh we want to get the uh the first one is the native so basically we want this one to be done on the native ipv6 so it's not likely in cap over in cap over incap the the second one is the stateless so this case here we do not want to get the gigantic number of software states to be refreshed every sometime in the multicast domains the stateless the third one is a large skill so it's like we want to handle a large scale of networks not just like a small and in the large scale network we're going to have a new numerous multicast streams and also we have some other requirements like the the especially what we're going to uh when i mentioned about the technical domain is some extreme dynamics in the subscriber uh drawing and the living and and also we want to use the msr6 this type of mechanism to get some add-on value and the features that can be coupled together okay so for all the objective requirements in mind uh today i'm going to present four cases uh from different categories the first one is from the telco domain it's like a 5g transport network the second one is from the idc network for"
  },
  {
    "startTime": "00:08:00",
    "text": "the large-scale dc the third one is for the enterprise network it's like the vertical uh is a is the case for civilians cameras the last one is like a holistic use case that is called sd1 but it's going to span the teleco domain network uh cloud network in the price and also public okay i can go to the next one the the first use case is the the multicast for toggle as we know uh with advancement of 5g technology and its commercial deployment the multicast communication start to become a challenging issue for mobile operators 3gpp has already 3gpp has already defined in the ts23247 enhanced mbs architecture to handle to handle the different cases if you look at the top left picture that is the one in the 23.247 i'm not sure if the the function small or not but you can focus on the right circle throughout the bottom part of the top left picture and here you can see the mbupf and look at there this uh n3mb interface is at the very bottom line and toward the left side to the g node b that is the for the multicast communication if they zoom if you if we zoom that one in into a large picture that will be shown at the uh the bottom left but the bottom left is a still a uh very high level architecture like a thirty thousand football view of a it is a real deployment but here we just give a very high level view so you can see all kind of the the ring from the core from the backbone from aggregation from the edge"
  },
  {
    "startTime": "00:10:02",
    "text": "until the g node b if you look at the the magnitude of order on those type of rings okay the you know the ring you can consider this one is like a multicast tree but instead of a stick or branch of a tree here you can consider it like a ruin so each ring has a branch and then this is just like a a chain of rings but it forms a tree and rooted on the right hand side like a ups okay and then when you put everything together here it's on the ballpark around the 30 000 level okay so it's it's so huge it's so huge it's not just so simple to handle this type of things in the regular uh you know our existing uh solution of multicast okay and remember here this is for the taggle domain you know for tempo domain and also for 5g you can consider there are a lot of requirements for the dynamics like the mobile subscriber their tendency to move uh between uh from one g note b to the next one where 5g has specified the different ssc mode service at the session continuity mode one two three so for those type of things you're going to have some anchor pd the psa on the ups side so this one will introduce another dimension of dynamics so in that case even if you try to you know you can you want to do divide and conquer to put this like a 30 thousand node network into some clusters but the thing here is like it's going to be very dynamic it's not an easy job maybe you need i don't know how many csies but unless something to handle the whole thing so it's going to introduce the the burden of opex"
  },
  {
    "startTime": "00:12:02",
    "text": "remember 5g capex is already a big burden for mobile operators so but put everything together okay so you're you're going to know okay what we want to achieve that is on the bottom right there's like to avoid poor flow state to uh prefer selective over uh inclusive just this one just so you can consider like the dvmrp or the pin dense mode those several things or worse the sparse mode and also uh we want to avoid unnecessary pack the in-cap okay this is a tackle domain since you know it's it's it's a real and it has a lot of requirements okay including the tackle side the mobile side and the transport side okay yeah next one next case yeah okay uh this one no no not this one the dc okay oh yeah thank you this is another case it's also a real things you know probably are familiar with the the global uh the mobile network operator especially north america or europe and normally they're going to have their own network cloud to run the 4g or even 5g virtualized support but in in mainland china the mobile operator actually owns both a network cloud and public cloud here in the public cloud is owned by public hyperscalers so in those things we have extremely large dc networks to handle the 5g core network you can consider you know the subscribers in our case you know we are the largest uh mobile subscriber in the world in terms of the numbers it's like a a billion so about a billion subscribers and then we have some number of uh"
  },
  {
    "startTime": "00:14:02",
    "text": "dc network to handle the 5g cores so you can you can know on ballpark uh how large it will be and also there are some other like hpc uh applications that require the large required multicast communication to improve the efficiency so when you consider this one uh together so this is another you know we put a number there like a 30k uh switches layer three switches with the links on 60 k so when you put everything together and also consider requirement we specific we specified at the beginning scale scalable and stateless native ip dynamics all kinds together so this is another challenge use case we have to face next you know for this one is for the enterprise or the vertical so this is like the civilian camera um there are some public stats i can i found uh google it's like uh in in beijing it has like eight million cameras in uk london it has close to a million uh surveilling cameras so depending on the government regulation or local governments or policies so the the data captured by those uh such a large number of cameras will be stained towards some places are some analyzers this is the picture on the left hand side so if those information stand about those analyzers this amount of information will be very large and the number of modern streams will be huge so for this case for this case we do not want to we do not want the network itself to be burdened with the states so uh for this particular case is also a real requirement case now we want to have the host the host can be the camera or the analyzer to associate together"
  },
  {
    "startTime": "00:16:02",
    "text": "without going through the the regular ignp drawing mld join those type of things but this does require the pre-config to associate the host together okay yeah you know consider all the three cases you know in the teleco network in the in a dc network and also on the enterprise of vertical so the last case is like a holistic use case with add-on feature and values we are talking about sd1 sd1 itself is is nothing new but here when the skill goes up you know this is another real for one large enterprise company in china it has cpesd1 node up to the national uh the nationwide up to 100k cpes and those cpes will be connected through like a tow code domain through enterprise because they know they have the uh their branch office and through uh the cloud they may have some uh virtual uh cps running on the the the public cloud and those things will be connected to the public internet so this is really a big you know a big deployment and remember you know when those things are connected uh together this through they go through the public internet so there is a requirement for the uh security you do not want to expose especially for the enterprise so in this case so in this case we want to have some sort of way to encrypt okay so remember we have the uh requirement objective to use the native ipv6 so for msr6 it's going to have the advantage just to um to leverage to to"
  },
  {
    "startTime": "00:18:01",
    "text": "leverage ipv6 v6 extension header the esp and the eheader to do this type of encryption so for this holistic case you have all the things uh you want for the scalable stateless the native dynamics of msr6 plus the uh the natural encryption decryption embedded with the ipv6 extension header the next one so the next one is the summary so here is the use case problem statement has been uh laid down by the colleagues and on the email alias and okay and you know here it's just like the the summary uh what i want to achieve the one is the native ip6 is the required and also the status is important but remember you know everything together we have like the dynamics and some add-on features so this yeah so this important things it has all the objective requirement clearly a setup so yeah hopefully it's uh yeah hopefully you'll be yeah you'll get it yeah thanks go ahead no greg your mic is not on i think it uh no it's not okay better uh my name's greg can you define what you mean by native ipv6 do can you please define what you mean by native ipv6 oh it's just like uh using the activated header using sv header without the end cap you know it's like are you forwarding on the v6 v600 exactly exactly like sources yes and all srv6 all kinds of native but but you're replicating there's nothing"
  },
  {
    "startTime": "00:20:00",
    "text": "replicating in ipv6 you're using it extension so it's not necessarily native you have new forwarding information that's really no different than an encapsulation putting it in extension header doesn't make it native it just relocates it in the header yeah you can't consider but normally most of the native part is we're going to expose the epiphysis header throughout the rotting side so when they look at is not looking at some tunnel okay there's something and then decap and find some inside so that is you know yeah go ahead hi andrew alston i'm just wearing my operator hat um in the you referred to non-encapsulated now if you go back to the previous slide that shows the public internet that there is by my reading a violation of the limited domain as specified in the srv6 standards and so i'm trying to understand how you've got a use case there that does clearly violate a current rfc uh which are here well remember the extension header is something like like a proposal uh like uh proposed solutions and the the colleague earth and will be giving well i'll be giving some uh description of those things so which after talking about that in rfc 50 um i think uh andrew right like i think you have a point but can we have that in the open mic discussion because i i think like the use case itself doesn't violate like maybe a proposed solution might violate like you know not encapsulating it but that's a use case it's a use case right so i i do get your point but we can have that in the open mic discussion right there's nothing that can be clarified and i'm happy with that okay thank you okay thank you let's take go ahead"
  },
  {
    "startTime": "00:22:02",
    "text": "uh stigmas uh just a clarification i hope you can clarify um you talk about the size of the networks they didn't say anything about the size of the multicast tree or or bandwidth or how many flows you would have in the network so they have some thoughts on that you want well are you talking about the network slicing to divide and conquer to make a large domain into like sub domains yeah i think uh his question is like what is the size of the multicast tree yeah oh the size of multicast streams okay if you look at the the first uh the use case for telco and then we have to give the ballpark oh can you uh can you go to the the the teleco case uh we have to give the ballpark uh no yes oh no uh one more no no previous previous yeah yes this one if you look at this one the bottom left one and then the ballpark for the the ng-run is running as ip uh uh it's a run ipv6 clear three it can up to 30k yeah and then look at all the rings like we have like a 10 for backbone 100 on aggregation and for the excess and 1k so this is like a chin of rings it's like a tree but instead of the seed or branch of a tree each one is like just like a ruin and you like a ring instead of a branch but those rings will form a big tree yeah but let's say for a specific flow we're talking about maybe 10 hosts receiving left flow or we're talking about 30 000 hosts receiving oh there's there's a bunch you know if you look at well it's been discussed in the previous assigned meeting that the two itf meeting ago regarding people talk if i remember correctly the receivers i think at least the 10 million or something i i i it's not in my mind right now but it's about the 10 million level or maybe about okay"
  },
  {
    "startTime": "00:24:00",
    "text": "you know i think it's important to think about you know for the the solutions for use cases like right right small trees really big trees just a kind of sparse receivers like spread out or if almost everyone wants to receive right yes receive a spread out and also remember these mobile subscribers they can keep moving among different g note b and also 5d require ssc service and session continuity the mic line is closed just make a street brief statement if you have a uh way past the time i'll answer to the questions raised in my uh part of the presentation okay thank you thanks go ahead yeah so 10 million receivers i am assuming they are host not the end points so they will not participate in actual tree actually they are viewing the same streams but on different you know if you look at this on different genomic on different aggregation of access aggregation those type of rings so it's distributed remember here you know i can i can see one more thing this is within a city it's not a province or state yet okay perfect thank you i know we have the remote participants so please stay here oh uh yes no no please stay here there's like more questions yeah uh human go ahead please yeah can you guys hear me yeah thanks okay a couple of comments please first thing on the 5g use case as you know the g note b's or the e note b's they do are hosts or they do igmp or mld join to the sell side router and the cell start router is where the trio starts so really you shouldn't be counting the g note b's or e note b's because they're just hosts and for the tree you should start counting the cell side router because that's where the pim or mldp or the tree starts but uh my question is that this problem has been solved for centuries like all these alerts that you folks get on your"
  },
  {
    "startTime": "00:26:02",
    "text": "cell phone for earthquakes for uh you know bad weather child abduction etc etc all of the star stuff are embms and they're multicast so every single major provider in the world uh does have multicast running for this emdms type of application which is very important for each government within the world so that's common number one and comment number two is with regard to your camera uh diagram if you can go to that one or it doesn't matter if you go there or not but my understanding is based on the multiple smart cities that we have put together the cameras they usually do unicast to a server so there is a server that is recording all these cameras real time and the cameras do unicast to the server and the reason that the cameras are doing unicast is because of security so the camera starts a ipsec tunnel to the server which the server terminates ipsec tunnel and any of the operators on different areas within the country that want to look at that a stream they do a join to the server that is recording those cameras so those cameras are not part of the multigas domain usually within the smart cities because of the security issues they are unicasting to these uh four or five data centers that they are recording all these uh streams uh live and then any uh any operator police ambulance whoever that wants to look at those streams government they just do a joint to the server not the camera right like but that's a different use case that's not the use case he's talking about so yeah i think you made a point thank you i think both the points are noted thank you thanks hi jen"
  },
  {
    "startTime": "00:28:12",
    "text": "here i want to give another example for the uh for the lives for the multicast request requirement from the for a large large network arjun we cannot hear you like can you um you know yeah can you shout or get closer to the mic or i'll come back we'll take uh vichang and then we'll come back to you go ahead chuck could agree with me yeah go ahead okay i just would like to provide a little information about the native ip6 so as you know ipv6 traffic in telecom network is increasing rapidly cited channel mobile as an example our 4g 5g network the ipv6 traffic has exceeded 42 till now in the near future we will have the opportunity to see the uh purely ipv6 network so if we can have a native app this ipv6 network there will be a good chance to simple uh simplify the network and the second one about the en bmis in fact in channel mobile we have already provided the yam dms services"
  },
  {
    "startTime": "00:30:00",
    "text": "in china and for the backhoe network we have to support multicast because the multicast traffic is really big for 5g i think that would have the similar uh requirements so i didn't hear a question do you have a clarifying question for tianji or are you just agreeing with what he said because that's what i understand i just want to the response uh some people write the the question about the mud cast in 4g embankments solutions i think i've got it got it and we do have time for the discussion but this is right now for clarifying questions only for this yeah right so we can talk about it in the discussion thank you yeah thank you hello yeah yeah go ahead yeah yeah uh so uh here i want to give uh another example for the uh for the um multicultural service within the large-scale network you know currently the live stream are emerged on the internet service and i think the largest live stream not exists not only within the 5g transport network it it can span the multi-domain you know in in china we uh our we operate held uh several domains several several net several domains connect together so the the the multicast source uh always located in one metro uh meta network under the receiver located on the other side of the metro network so the livestream will span the multi-domain so i think the this such services are"
  },
  {
    "startTime": "00:32:02",
    "text": "sold currently by the uh syrian uh cydia network i think and if you have a question for tng or you're also agreeing because uh your audio is very poor uh if you have a question uh please type it in the chat otherwise we'll take it during the discussion time like we do have an open mic time okay i will type my uh my information really in the chat okay okay thank you thanks thank you okay sure please thanks yeah great um sorry i didn't catch that was the end of the presentation it was still up uh greg again um i'm a little baffled that we're not starting with a problem statement that we're actually looking at a unique set of requirements that can't be solved with existing solutions that are out there to justify some additional work what we see here is a whole list of use cases that are really not any different than what's already been solved or can be solved by existing solutions so we've asked this work in the past to provide a problem statement and we never got one so i was hoping today we'd actually see some effort to show what the gaps are what the needs are and justify this work and i have not seen it i i think you like you you should wait greg right like at the end of this like presentations block we should get something and if not we'll go get it at the charter right because like we cannot without a problem statement we cannot charter anything so i agree with you yeah but i mean you go into use cases without a problem statement it just sounds like word solid good thank you thanks go ahead"
  },
  {
    "startTime": "00:34:10",
    "text": "hello my name is gion mishram with verizon and i'm on this slide deck what i plan to go over is this this state of multicast for usa domestic operators and then how how the um from a technological perspective how uh how the current state of multicast applies to msr-6 and how msr-6 can at a minimum meet these base requirements that that are used with technologies that are deployed today throughout the united states with operators next slide so from a video transport perspective use cases um we have uh and this is just typical uh distribution so we have the contribution network where we got uncompressed video and then from a technology perspective um the what's used there is rsvpte and within the contribution network uh for um for for a seamless and lossless video delivery at the source as well as at the primary distribution state as well rsvpte at the secondary distribution on the right secondary distribution network we have rs and that's going to um the access networks fixed broadband and as well as mobile broadband access networks mldp as well as pim next slide so here we're also sharing uh the ver the variety the distribution flow from at the very left showing the uh uncompressed stream so the higher"
  },
  {
    "startTime": "00:36:00",
    "text": "bandwidth video delivery uh at the left and then it's the primary distribution network compressed video and then at the very right uncompressed video you know so the stream of of how how the tr how video flows from left to right and the uh and the technologies used on the left side rcpt primarily has been used uh for domestic operators for the primary distribution as well rsvpt and then as you get to the secondary distribution it's it's majority mostly um mldp uh for the for the uh distribution next slide this slide shows as well similar and it's it's showing the distribution structure starting at the very left contribution so rsvpte at the contribution layer primary distribution rsvpte and then mldp at the secondary distribution layer and then out to the access networks mldp and going to enterprises as well as fixed broadband and um and mobile broadband next slide this in this slide shows just a depiction of the of the public internet an operator network in the center showing the core core network access aggregation and then the access network mobile broadband and fixed broadband so so uh with that mvp mvpn um uh pmsi ptas that are deployed mldp is the primary i would say majority of customers in us use mldp and point to multipoint that's probably the primary pta that's used uh rsvpte at the so at the source uh at the at the primary contribution network as well as the uh the prime primary distribution"
  },
  {
    "startTime": "00:38:01",
    "text": "and then mldp point to multipoint uh multi-point to multi-point mldp is used in the financial industry primarily um and there may be some other smaller use cases but uh point to multi-point uh mldp is really one of the primary use cases that are used pre used for most customers within the us can you stay close to the mic because people cannot hear you at the back oh sorry thank you sorry and um so as as far as um asm uh versus ssm you know from a technology perspective and and uh pim binder uh majority of uh uses from customer networks asm is still what prep you know widely used on customer networks um there have been a lot a lot of enterprises as well as uh customers migrating from asm to ssm still rarely not use as much with the bi-directional trees uh point to multi-point to multi-point pea trees within the core so overall primarily it's really mldp point to multi-point is really the primary uh technology that's used you know for the p-tree within the within the core um out to the uh from the core to aggregation out to the how to enterprise customers um within the united states uh next slide so this this slide shows this private mpls uh so in here just very similarly uh the uh as far as the uh mvpn use cases for uh the types of uh pmvpn um p trees that are deployed and it's still primarily primarily mldp is really the primary and asm is still is used"
  },
  {
    "startTime": "00:40:01",
    "text": "primarily for uh customers enterprise customers as well as uh customers uh you know through provider customers that exist for um the other uh the other mvpn uh ptas that are used it's not as widely uh mdt safy and some of the other ptas are not as widely used and here in this case as well uh multi-point multi-point for uh pin binder trees that is not not as widely used financial industry is really really the primary use case where uh pim bider is used for multi-point to multi-point trees next slide so this this slide shows uh msr6 requirements for ipvtv delivery uh so really so here what uh what i'm trying to depict i guess is uh lossless video delivery and uh fast reroute that's really one of the primary uh you know primary technologies used for rsvpt fast reroute is really a critical requirement for uh primary distribution as well as the content distribution networks where the source feed comes in and then as well as with mldp multitask only fast reroute next slide here we're showing as well with msr6 requirements for legacy technologies uh uh mldp and rcpt so here as well we're just showing the uh requirements so mplc fast reroute link node and paths path protection 50 millisecond reroute and then uh for mldp um mo multigas only fast free route as well as local protection next slide"
  },
  {
    "startTime": "00:42:03",
    "text": "so in this slide uh what i would like to show is here uh a um the preferred choice of transports has been really for for operators in the us it's really been between mldp and rsvpte and primarily majority of the use cases have been has been used as mldp within the secondary distribution networks the primary distribution and content distribution has been rsvpt for the uh path protection um and and with link node and path protection for um disjoint trees as well as um where you have we're requiring triple play services where you have multi multiple pads um next slide in this slide what i'm just showing here and this is just for as far as msr6 requirements it's a comparison between mldp and rcpt and and just showing the benefits of mldp which is really scalability and as we're looking at our as we look at msr-6 and how how that is its similarities with rcpte and and the scalability which is important which which mldp provides where you can have a single tree with with mldp point to multipoint where our cpt requires entries so it's a tree per vpn so not as scalable so a requirement that we'll have to we'll we'll play into at msr6 as we when we go through the summary of requirements next slide this slide shows as well comparison so the so the benefit of rsvpte and that's really where you have redundant pads and you need and you need uh link node and path protection uh for triple play services as well as live live protection um the use of um rsvpte with that 50"
  },
  {
    "startTime": "00:44:02",
    "text": "millisecond uh failover and lossless failover next slide so here as well we're kind of digging into so with rsvpte the live live protection requirement and this and with that you know have being able to have the lossless zero delay failover with live live production where you have redundant pads very similar to live live i guess very similar to net pre-off where you have where you're not having a replicated stream uh from the uh from the ingress to the egress uh pre-off mechanism where you're actually uh sending two streams down to the receiver end so having that that ability and protection with the rsvpte next slide this slide shows the entire just the overall end to end stream just for going from the from the left side from the contribution network uh from the source uh through the distribution so rsvpte in the core network and at the distribution layer and then as you get to the access layer and then and two enterprises and large medium small customers uh their mldp primarily used and then as well uh i mentioned their triple play services so wherever we have require live live protection use of rsvpte for for path protect link node and path protection next slide so a summary so the goal of this slide deck really is try really try to look at uh the use cases and really the state of multicast within uh the us domestic and and the requirements that at a minimum that would need to be met by msr-6 and and so in summary here we got fast"
  },
  {
    "startTime": "00:46:00",
    "text": "free route protection um injury engineering separate protected pads uh scalability as we see with mldp as compared to rsvpte the live live protection loss lossless zero delay and then lastly uh triple play services next slide so um this slide what i what i wanted to share here is like you said the state of uh with usa domestic operators and then srv6 deployments and and as as well as migration towards an ipv towards ipv6 so so operators we understand in the in the us you'd understand the benefits of segment routing and moving towards an ipv6 data plane however the deployments have have been limited and and here what i what i've thrown out in a few bullets really what the requirements and kind of the benefits of srv600 and pls and reason why you know operators are looking but we have is has not has not been as widely deployed in the u.s and really and just kind of just throw it just looking at the bullets here that i got laid out um native srv60 airing capabilities with srv6 with with us with an srh the benefits of ipv6 flow labels so having an ipv6 data playing the gains there as well as data center um deployments where where you have you're using an nv nvo overlay vxlan type overlay ip underlay where you know you can take advantage of srv6 in the underlay and then ipv6 benefits with qos and then lastly mpls elimination so there are there are some gains that usa domestic operators can gain with srv6 and having an ipv6 data plane next slide so here's the last slide just a summary of solutions that exist today"
  },
  {
    "startTime": "00:48:01",
    "text": "for multicast i've just related as related to srv6 so so today mldp rsvpt they can be deployed in parallel with our srv6 we do have segment routing related uh solutions that can be deployed such as tree sid and then bgp multicast and bgb multigas controller those are as well options that that exist today that can be deployed with segment routing um and then as well bit beers available and then lastly and just kind of really a segue into the solutions for msr6 is is the new technology that we're going to be going over today in subsequent slide decks thank you okay so we're opening the queue but please clarifying questions only if you agree or disagree with the presented cases we can discuss it during the open mic thank you greg uh go ahead greg mursky hi uh gregory erickson um i have the question about one of your requirements lossless and zero delay uh switchover sure how you envision to achieve it sure so i think the lost lossless and zero zero delay that would be achieved with uh redundant paths uh which is which is some which is something that is is deployed today that you can if with redundant pads where you have a replicated stream similar you're going into the solution space so um i think if i can refresh a question greg is that a non-negotiable requirement would that be a fair phrasing of your question"
  },
  {
    "startTime": "00:50:01",
    "text": "yes okay all right thank you greg okay thanks hi tom hill bt i was curious really in in the sense that i think a lot of the use case for this is obviously going to be in video distribution um a lot of the benefit really from doing this will be in video distribution i was curious how you envision msr 6 helping with tivo style services so pausing live television for example pausing live streams and catch up on that um is this the suggestion that we continue falling back to unicast or do you feel that there's some benefit here that can be made out of a new protocol with regards to that i i think that as well that question may be answered as we get into the solution space but i think with the questions here require regarding the requirements if you could rephrase the question i think let's say related to requirements as we will be talking about solutions i think in the subsequent slides okay can i give a quick answer to that yeah they're we're attempting to to restart work on exactly that solution description we started that in beer so the stateless options all have ways to improve those solutions and we haven't put that specifically together for msr6 right now okay thank you greg go ahead thank you so i'm just trying to understand what you presented here like i said in the in the absence of a problem statement what you showed us what the current art is and your objectives are to be just as good as opposed to gaps that you're trying to solve well i think in this slide deck what the goal was to show what what's what's deployed the state of multicast as it's deployed today and the requirements that we have today and then and then in subsequent solutions that are presented how these"
  },
  {
    "startTime": "00:52:00",
    "text": "requirements match up and at least at least at a minimum saw you know provide those you know meet these requirements so i was actually just laying out the requirements so i'm hearing yes the objective is to be just as good of the existing solution yeah that's exactly yes is that an admission then that there's no gap there's no real problem to solve well i would say in this in this deck i was not actually the goal of this deck was really to show existing and meeting the requirements and not not gaps i think in the in the previous slide i think they were showing some of the gaps so actually i didn't see any it was again just all solutions that we are have already seen yeah so again so what you're saying here is you have no goals to do better you don't have gaps from existing deploy to what you're trying to achieve and your objectives are to be just as good what we currently have i i don't see any other answer from what you've said and what you've presented thanks craig thank you yep understood thanks greg thank you thanks uh tell us please go ahead thanks i i think uh on the agenda point itself you're running a little bit late so like any time is going to cut into the solution which you're totally fine with okay so just we'll try to get the use cases requirements stuff nailed down as much as possible thanks okay um welcome i wanted to get down a little bit from all the details of the use cases to what i'm extracting as the operational use case requirements based on my uh kind of staying around for 30 years with this technology multicast and um what what i learned from that next slide so i think there's really one core requirement which is that we want to have a simple ipv6 integrated end-to-end stateless ipv6 multicast for ipv6 only networks and what ipv6 networks i think all of them we saw a lot of them being listed here in the prior slides but i also think that this technology is"
  },
  {
    "startTime": "00:54:00",
    "text": "quite valuable beyond the large service provider networks but maybe not for this point in time i did send notes out to the iot working groups which i think should have interest but maybe another time next slide okay so um beer has often been more or less implicitly being brought up in the questions raised here so let's do a quick refresher on what beer and ipv6 networks how they would go together without new work um so the beer architecture was not specific to any particular encapsulation but the working group i worked on one particular header which is pretty much in my view of the world optimized and designed for mpls networks to go along with them so it has all the necessary header elements to support mpls networks from the label uh to the traffic class field for mpls the qs and so on there's also additional header fields that are not needed in mpls networks just in case somebody would want to deploy the same header in a layer 2 forwarding network only that's to my experience mostly stalled because all the people working toward getting that deployed are really interested in mpls networks so the solution for supporting native ipv6 only networks that are not running anything else is not to be native ipv6 only networks but to run the beer forwarding plane hop by hop in parallel to the ipv6 forwarding plane and that basically depending on whether you can implement beer hop by hop on every router or just on a few routers is either two layers or you know if if only some routers are upgraded you are running end to end ipv6 over hop by hop beer over then hop by hop ipv6 tunnels so three layers of encapsulations so that is that is working quote in the way fine as a lot of other technologies we've done is working fine next slide"
  },
  {
    "startTime": "00:56:00",
    "text": "to the end that my experience has been that something really is working for ib multicast when operators want to apply use and deploy it successfully when it is trying to be as close as possible to the unicast technologies that are being deployed in the network and so i wanted to give some very high level elements to say that what beer is doing is just not the right solution for a native ipv6 network because it doesn't match these expectations so we started in 89 with native ipv4 multicast and by adding that to uh ip with exactly the same packet headers and as much the same behavior somewhere we needed to sneak the replication in of course we were allowed to reuse and extend the whole ecosystem of ip and later in the same way of ipv6 starting from the sdks the socket apis the qs diffserv insert rsvp acls all the layer 2 encapsulation that ip headers were built for ipfix ipsec i can go on uh i've actually spent part of my career of implementing or you know architecting a lot of these add-ons to ip and i'm just you know really scared of having to do all of this uh you know four beer every time that comes around if we have the option for existing ip networks to have a native ipv6 solution as well that would allow us to have the same benefits of reusing all these ecosystem elements that we do understand how to build them for ip we also did try to come up with cool new novel multicast routing mospf and dmvpn and after a couple years we figured out well that's going to be not of fun for the operators so we had to revert to a multicast technology that is using all the deployed unicast routing protocol just so that multicast became operable then basically we had perfectly well working mvpn services for multicast in mpls networks which wasn't using mpls"
  },
  {
    "startTime": "00:58:01",
    "text": "encapsulation but which was using ip multicast encapsulation they said yeah the customers are buying it it's fine but it doesn't meet our operational expectation of our network which is purely mpls forwarding plane base so we spent another 10 years to build native mpls forwarding plane for those mpls networks well done total duplication of ip but that's how the market space works right you have people who run native ip networks and you have people who run what i would call native mpls networks and i think in that respect the beer has kind of evolved over the time that the working group has been trying to be focused to deliver something running really on the mpls solution and the proposed draft for this you know ipv6 over beer over ipv6 is kind of an add-on that is really not meeting the requirements of native ipv6 networks clarifying questions yes uh greg asked already what is native ip yes next slide thanks for the intro right um so wait a second was it the next slide go go back did i go back maybe no okay i'm trying to yeah i have my homework my dog trying to remember which slide it was on let me get back to it if it's not i'm sorry i'm maybe a little bit confused here um all right that's that's next no no i'm just trying to remember which slide it was on right so um the stateless stuff is was was the other big thing right so let's uh talk about three key parts right so me um the most important part is the operation simplicity troubleshooting and everything else where you eliminate a lot of complexity of the stateful so um there's a lot of of aspects here in details that i think we can revisit if we had more time in the solution slide but of course it was also the core reason for beer the scale and convergence is where effectively the"
  },
  {
    "startTime": "01:00:01",
    "text": "same applies and in the solution slides i think you should see that by going away from what i call the flat bit strings that be introduced into uh you know more advanced processable encoding of the destinations or the destination trees we think that we should be able to achieve a lot better scalability which we need for the large service provider networks and that would obviously also be considered to be one of the core requirements the the additional thing that people often forget is that when we want to replicate the ecosystem we want to get all the way up to the application layer and that means we need to get into socket apis and socket apis have been extended to support ipv6 extension headers for ipv6 20 years ago with that rfc number that's barely visible on the slide whereas extensions for other new technologies um that we have done would be much uh yeah would have to wait another 10 years that's kind of the minimum time we've seen next slide no sorry can you i can i'm kind of no you've got the old slide deck i i i gave you a new slide press i gave you the one one so that's what you have"
  },
  {
    "startTime": "01:02:02",
    "text": "yes okay looks sorry for that okay there we go yeah okay thanks that was the slide i was missing sorry okay so express divs over over beer right so native ipv6 networks means ipv6 networks with or without srv6 obviously the srv6 networks are the first one that understand the benefit of stateless traffic steering so they would obviously like to have exactly the same type of stateless traffic steering for the multicast traffic but in the end native ipv6 source routing by hop by hop end to end native ipv6 multicast hop by hop and end to end so that basically means on every hub you're forwarding the packet based on the rfc 8200 rules including the rules that apply to ip multicast packets the rules that apply to source routing and the fact that you're doing that source routing based on a route header with the source routing segments like we have two of them for unicast right srh for um srv6 and the other one being the ripple header for the iot networks so in the same way we would have an extension header for multicast source routing that meets exactly the same native ipv6 hop by hop routing requirements i think it's also important to have the daywi day one support for path steering and strict and loose hops which basically means to be uh equally efficient in the stack whether you have a support by hop by hop for the technology or only on a few incremental hops and then um you can lose the loose uh loose hops so the more scalable i mentioned before that's the best effort and what we call the traffic"
  },
  {
    "startTime": "01:04:01",
    "text": "engineering path steering solution the modes and that's where i mentioned the flat bit strings have in our simulations been shown to require more copies to be sent to receivers for the same set of especially small receivers things so i i detail that in one of the solution drafts that we have and then of course very important as you saw from guyan's slide deck the integrated support in the header for service guarantees beyond best effort which so far has been punted off to other working groups so combining these things is really difficult when you need to do these things hop by hop and you only have or one routing header that actually can be processed hot by hop so that's why i think it needs to be integrated and the rest is terminology and and and a sample picture next slide which is the last slide there um i think the really cool thing that we can do with ipv6 by being something that has been defined all the way end to end is also for these constrained control networks like a data center enterprise iot and other spaces go all the way up into the host using ipv6 um socket apis and then the typical use cases you start with are the big data center servers that are routers themselves so they have all the existing routing requirements to to be able to apply the existing technologies and then there is uh additional requirements when the hosts are not routers so that's kind of the these last two slides the two high-level requirements derived from the operational experience and the need to have a native ipv6 network where stateless multicast isn't a second-class citizen by using some you know non-ipv6 native technology i think then there's the magic inside at the end so yeah right that's what we would like to have right msr6 keep it simple and make ipv6 multicast great again um so native state is multicast for all ipv6 networks um stateless ipv6 multicast into"
  },
  {
    "startTime": "01:06:01",
    "text": "applications data center industrial so on and reuse and share all the good things that beer has done all right thank you questions thank you okay thank you uh greg mursky um i have one question okay first question is what is alternative to native ipv6 because it appears that in your definition in native you include support ipv6 and a service 6. so no i'm saying native ipv6 means forwarding hop by hop on rfc 8200 whether it has an srv6 extension header or not okay and then what is opposite to native ip well if you're not going to do forwarding hop by hop on rfc 8200 rules then what do you do um i don't know i for example beer right beer is a different forwarding plane it could be mpls it's a different forwarding plane if i'm going to do forwarding based on an mpls header that's not native ip if i'm forwarding based on beer it's not native rfc 8200 forwarding but then we call it mpls network if we yes if we forward on ethernet it's ethernet if it's call an mpls it's intellis it's not native ethernet it's not native to mpls i think that's that's why i'm having this picture up we've used the term native for ipv6 and multicast and so on for for a long time to basically recognize that we're doing the forwarding based on that particular um forwarding technology so ipv6 network okay then second point is that stateless and simplicity of operation is counter to each other because it's much easier to debug and troubleshoot stateful network rather than stateless that's a statement and i think we we we can make votes for that or so but i"
  },
  {
    "startTime": "01:08:00",
    "text": "think there are people on the other side of that equation as well thanks greg thanks dolos thank you steve so a lot of people are not joining the uh thing so i'm just like keeping it in my head so i apologize but greatly appreciate if you can actually join the app on there so i have stig tony p uh greg joel that's what's in my head thank you yeah stigma yeah i'll remember to use that sorry um so it sounds like this is very simple and just plain old ipv6 but i suspect that you know you have to encode new things in the packets you need to process them and how you do that processing is very different from ipv6 i know we haven't took the solutions yes but no no i mean it it it is basically a a steering header where we need to represent a set of destination or a tree not necessarily through flat bit strings but through better encoding for the scalability you know it started with rsv sorry with brte you know me recognizing the scalability issues but then we did the simulation comparison so that's one thing the other thing is the other header elements that we want to make sure obviously it needs to be native v6 so we need to have the multicast destination address in the header and then i'm thinking we also want to have the qs header elements for example from what we see we would need in a stateless mode of operation for that net but that's a lot of details that i didn't want to put in the requirements they are requirements in my opinion but i just had them very high level yeah i suspect that there are some complexities once you start digging into yeah they're the solution drafts where where more of these details are being being set so that's the other side yeah thank you tony p i don't know if you just went away but okay joel halpern from erickson if i hear this claim that somehow this is native ipv6 and somehow that means this is better one more time i may scream"
  },
  {
    "startTime": "01:10:01",
    "text": "doing forwarding is hard there is a thing called ipv6 forwarding this thing that you are asking for in this bath involves representing a tree and involves replicating packets along different branches of the tree properly processing some different representation whether you put that representation in an mpls stack in an srv6 stack that doesn't yet exist or in an extension header it is still not the same as current native existing ipv6 slides and [Music] [Applause] go further back further more further yeah further further right so um joe um we we can argue about the native um you know i think nobody here rejected the term when we were running around for ten years saying uh go native for ip multicast and we called it native ip multicast so you know i'm calling it native ipv6 um that's that's fine if if if the discourse gets down to how we call it let's just call it you know uh rfc 8200 forwarding which is what ipv6 does which is what this solution does it does rfc 8200 forwarding rules and then um basically no not all the type of encodings are the same if you have you know ipv6 in beer in ipv6 that is not matching um what and uh i'm still calling it a native ipv6 operator with an ipv6 only network wants to have right so so that is i mean why the heck are we having srv6 stateless source routing if we could have done that with mpls as well thank you very much right and that was of course not acceptable for operators of native ipv6 networks they wanted to have a native ipv6 source routing solution for unicast that's as simple as it goes greg shepard representing me uh i can't match what joel won at his"
  },
  {
    "startTime": "01:12:01",
    "text": "you joel um i feel all of that watching this presentation so much misrepresented of what happened in the beer working group what happened with this work along the way but we can go specifically to the host stack because beer is not a routing protocol it's a forwarding paradigm beer says nothing about ip beer says nothing about mpls so all these all this baggage you're hanging on the discussion is a is a fabrication and there's a misrepresentation at best what's happened in the other group but in the host stack when you say this you know can't be done take 20 years it's been done i'm not employed currently and i'm actually unemployable and after this conversation i'm probably going to make that concrete but uh we had an aws uh beer overlay infrastructure four years ago all host-based so to say it can't be done or it takes 20 years is is at at best it's black's imagination and at worst is completely disingenuous um greg um can i ask you a question like as like your chair so uh can i interpret your answer as like you know beer is kind of open to other kind of encapsulations than what is defined like you don't have to answer it like as like the chair itself but like do you have any thoughts on it oh i'd love to okay because we when this work was first presented it was presented as transitional and we made it clear we're not changing the forwarding plane for something transitional when they admitted the authors that they they wanted to go to native beer and when that didn't work and get their work actually accepted we had this whack-a-mole process around round round round but what i made clear is that an encapsulation sounds great we're not changing the encoding the the ads were clear when we had the beer buff this is probably a not an exact quote uh"
  },
  {
    "startTime": "01:14:00",
    "text": "from aaliyah but the message i got was don't with a forwarding plane so we had to get it right and when you get it right and you cut it in stone you're protected and taking those bits and shoving them somewhere else and violating layers and calling it integration it's not it's not honest discussion and it doesn't represent good architecture it doesn't represent the layered architecture that's have made all of us successful here so i'm i'd love to have a technical discussion but i have yet to be able to maintain a technical technical discussion on this topic when there's so much disingenuous garbage being flung out and it just becomes word salad until what we through attrition we finally just give up i'm not giving up i don't understand how it is a uh you know architectural garbage or what the other words were that i forgot uh in in your words when we are having an equivalent you could say of a multicast version of an sr v6 routing header for ipv6 packets so which is not markedly different than encapsulating over v6 hot by hop with the next protocol pointer no i mean it's basically still hot by hop beer rfc8279 based forwarding rules there there is no reference for the forwarding from you know uh a received beer packet to send out your paper required please let me finish it so please let me finish you the sentence have an encoding that can stand independent it can be encapsulated in any way it makes it flexible for the entire community when you integrate it and violate layers you create a dependency i can't answer because you didn't let me end uh finish my sentence okay uh so just a point of order here i"
  },
  {
    "startTime": "01:16:00",
    "text": "think we are way over time for like the solution thing so we need to have the discussions because i think it's more important that we hear about the problems requirements disagreements and hear about some solutions so we're cutting all the solution presentations from the agenda and turning this now into an open mic so um queues are open uh everybody makes statements and uh told us if you want any other proponents to come join you here that'll be good as well well i think everybody from from the team can say that obviously the majority is remote so it would be good if you if you show that it's the queues are open so i think i think one of the important part is to see that obviously we have a strong opposition from the people who want to protect their market segment um with what the beer solution has done um what whatever you say around that and so one the solution draft intro slides for example would list all the vendors operators um and and and people that we have seen to support our direction and i think in the past and you know in recent work many people in the ietf stood up and told me that obviously you know when there are differences about interest in solutions then we just should check if there is a critical mass in support of a particular solution and if it's technically viable and then you know if a competing solution is there the same thing applies to it but uh not using um more or less shame arguments to try to um suppress uh competition i think that's what i've been seeing here thank you maybe perception john go ahead hey um i'm sorry for the uh non-technical content but there's two things i need to say um you remember the note well that we all look at the beginning do you guys remember the part about addressing each other respectfully i appreciate that um everybody here feels passionately about the subject i don't appreciate people calling each other's id you know"
  },
  {
    "startTime": "01:18:00",
    "text": "ideas garbage etc please don't do that [Applause] second point um i was really uncomfortable with the cultural appropriation in the graphic on the final slide i don't know if other people feel that way but um i it made me feel bad we actually had t-shirts in 95 that we've been handing out you know native ip multicast so i thought it was a reminder of good old times if good old times has become culturally insensitive i apologize okay 20p juniper so we had this ongoing conversation you know because when i look at the solution draft it's basically beer packed into you know extension header that's all there there is to it when i looked at you know what was in the material for this buff so can i answer to that no let me maybe you know make a statement so we had this running conversation for three years and i don't think none of the stuff that we said that the process you know was run through resonated much but that's still you know that needs to go into the minutes okay so i understand you know people in love with srv6 okay i understand some people may already have the stuff in silicon as was i think admitted in the last bath all right and as yakov said nothing prevents you to take an itf standard and do unnatural thing with the stuff and you know deploy it the point of idea is not to wide wash silicons and not you know have people fall in love with technology and just build yet another thing because they love it okay the substantial problem i think that you have is that those use cases can be all solved with the stuff is there today okay and you better really show a good gap analysis because then i'm all open right but there is no gap analysis all these use cases can be solved and we can start to drill the stuff but it will take too long"
  },
  {
    "startTime": "01:20:01",
    "text": "having said that um and we had this conversation violating layers always sounds like a great idea okay but it isn't the costs later in deployment are insane if you really care about running this ipv6 native implement something like beer on ethernet and you can send an ipv6 frame over that over a beer header without or with less overhead that what you try to create here okay doing all these layer violations as was explained i think we went through the whole rigamarole at the end and we wrote the technical justification and we laid out what you you know causing with all this stuff this is most likely violating six men and it's clearly violating beer architecture doing that stuff all right it stomps probably on three different charges of three different groups but you know it's out my pay range that's the 80s so that probably should go into the minute processes have been run we're like fourth or fifth time at the same place my point is made and i don't need an answer because we had this discussion and whatever came back was always the same thing right the discussion about encoding the encapsulation took forever took us nowhere so tony thank you so like if i summarize your comments you would want to start with the gap analysis for the existing protocols before you go any further would that be a fair summary of what you said yeah because otherwise what are we working on just another variant because somebody likes it blue rather than red and you know additionally breaking seven layers with always you know like this it's more efficient this is like the first thing i fire my junior development developers about right if they go to the code and start to make it more efficient right so but i mean this discussion has been going on for three years so we"
  },
  {
    "startTime": "01:22:00",
    "text": "didn't make any point obviously the parties are pushing the point but that is for the minutes no s no without any motions as the technical layout and someone that cares because this stuff fed me for 30 years and hopefully will feed me for 20 years right and i will have to clean up this stuff operationally with people deploying it thank you let's go ahead and um greg if you can step up to the mic uh i think you're first in the line okay so when told us answers um 20 piece question thanks you're on the mic line yeah sorry it was so much and i just took the notebook a little bit later so i may not be able to remember all the points you were trying to raise right so now this is not meant to be beer this is meant to learn from beer and it's meant to be what i call a native ipv6 solution call it just an rfc 8200 compliant ipv6 network solution and yeah i think many people also tried to sell into ipv6 network traffic engineering with mpls and ipv6 network operators on the unicast site didn't want to have that so that's why an rfc 8200 forwarding based solution was done for traffic steering in unicast and this is basically um you know one comparable option for multicast right and as far as layer violations um no it's not about the layer violations it's about the functionality that you get and the operational complexity of having to troubleshoot fundamentally different forwarding planes right and i i gave the list of functionalities in the ecosystem that are being used in conjunction with ipv4 and ipv6 multicast that long list that i had there and if you don't have hop by hop and ipv6 or ipv4 packet header with multicast then you can't apply these ecosystem functions hop by hop forwarding wise for your packets and that is what applies to beer sorry"
  },
  {
    "startTime": "01:24:02",
    "text": "um the shoe song of the song go ahead hi can you hear me well yes okay thank you some response to uh previous comments the first one is that uh i think maybe people just remember some arguments or discussions in a beer working group but the msr work is uh very very beyond what we have done in beer before and you will go into the solutions there are multiple different methods of encoding uh based on sales routine and that i think that is not belongs to the scope of beer and the second point is that ipv6 is not relevant it's it's not only one type of encapsulation and it's not technical preference ipv6 has its capability of extension which is more friendly to the host initiated case and also more friendly to the flexible encoding we want to support here so i think the these two features are the core of this uh this bulb so i think people can give more uh pay more attention to the solutions and they will see the benefits there thank you okay hi there tom hill from bte there's a slightly concerning trend of claims that are being made and they're not just being made within this both certainly the first two presentations made this claim but it's been made very far and wide in a lot of standards organizations that operators such as myself fully understand the benefits of srv6"
  },
  {
    "startTime": "01:26:04",
    "text": "this is very common at best that statement is contentious at worst it is an outright fabrication this is not clean cut yet it definitely is not cleaned up so whenever we get told that lots of people are really interested in this i don't believe it because i don't see it via any of the other means by which i speak to my peers and the other folks that run operators run networks in an operating fashion around the world my problem with this is a lot of that has been used as a foundation for what you've presented here today and my concern is in doing so are you starting from the right position or are you starting with a poison chalice can i you tell me when you're done so no no i i think this is an excellent point and i was using so first of all i've i've been just fighting for these 30 years just to get you know equal treatment for multicast in the networks wherever they are and not be degraded to a second-class citizen as far as technology service is concerned for the multicast right and that basically was learned from the examples that i said where you know we started saying hey we think this multicast technology is better why don't you just use ipv4 multicast and mpls network works perfectly fine we don't want to re-implement the stuff for mpls and mpls networks didn't like it by the way what are you running mpls or ipv6 in your network for the forwarding plane of unicast it depends on which network but okay for them for the most part the main core network is mpls forwarded yes with respect to um srv6 i i don't have any strong opinions right i'm just caring for the multicast solution i think it's important to understand uh that the way that uh ipv6 not srv6 or so um consider to be source routing to be done is with the source routing extension header we don't have only sr v6 we also have an equal extension"
  },
  {
    "startTime": "01:28:02",
    "text": "header for constrained iot networks using exactly the same mechanism some interesting routing detailed differences right so this is not only proven once but proven twice if you don't like it um and and and and you think there's a lot of problems with it but let me ask you this is this a reason that you want to forbid other people who want to have it and want to have an equivalent multicast solution to not get it is that is do you think that's that's the correct prerogative what you have what we're asking about here is forming a working group right yes right so how much work should be invested in something where one of the foundations of this has been up to seem more important or more useful or better than it is right but and for for us on the multicast side right it's it's uh on one hand uh using the srv6 example as as the most easy way for people to understand that this is you know what what source routing is doing the reason for doing stateless multicast um is a lot more foundational and a lot bigger you know stronger in my opinion than for the source for the source routing in unicast srv6 and a lot of these things can be shown with the benefit that beer gives you an mpls networks i i completely appreciate the the use case for stateless multicast forwarding completely i also completely appreciate the use case for ipv4 should be a service and we should be building ipv6 only networks everywhere it is the the long long contentious problem that srv6 has caused within this industry and to make statements to say that operators really like it is is troubling at the beginning of when the work starts so we really need to make sure that we don't rely on statements like that right we really need to make sure that they that we aren't misleading anyone here in the sense that if there is already a"
  },
  {
    "startTime": "01:30:00",
    "text": "protocol that has problems we don't want to build on that again yeah but this this is not i mean except for the rfc 8200 mechanism of using extension header um in ipv6 as the code native however you want to call it way in ipv6 to do source routing and then you can have kind of up with your solution right if you don't like like like srv6 that's fine but nobody it tells you that you have to use it you have to judge i think the benefits of the mrh header that we're proposing for stateless multicast based on the benefit of of those multicast use cases right and so i i gave a couple of of these things right the statelessness as the biggest benefit operationally and then the new encodings that what we want to do 10 years after we've done them for beer right which was 10 years ago what's the best we can do now we think 10 years later we can do better right for those ipv6 network for a longer term solution right so so there are a lot of technical details that to a good extent would have been in the solution drafts right and not only the requirements there were scale requirements and so on that drive i think a significant set of differences and yeah the the native forwarding is is a big important one i mean there are all these ecosystem things right i've done all these qs thing diffserv insert acls ipfix all these things and it's just terrible to having to repeat that for let's say just a beer based forwarding plane instead of an actual ipv6 forwarding plane that just has source routing added to it right that's it's it's the whole bloody ecosystem that that you're starting to replicate it's already hard enough to replicate the ecosystem from unicast to multicast believe me i've done it for all those those pieces from unicast addresses to multicast addresses and you know but now we know it after after 20 years having figured that out for multicast you know we know how to do it and the source routing is you know just complimentary for that good luck"
  },
  {
    "startTime": "01:32:00",
    "text": "thank you tom andrew go ahead because uh you are in line before the other people got on thanks thank you um andrew um liquid telecom um wearing that hat and purely that hat um so if i'm going back to the previous point that i was making can you hear me now that better [Music] okay there we go um so going back to the previous point that i was making the fact is that that particular use case i was referring to earlier shows srv sex over the public internet unencapsulated that's what the slide showed right that is a clear violation of 8754 clear clear cut it's got nothing to do with the solution your use case is premised on a violation and you refer multiple times to 20 years ago x happened 20 years ago we looked at source routing and went this is a bad idea and we deprecated it and the security issues when you are showing me use cases that are premised on a violation and then when people say but it might not be srv6 but the simple fact is is that that's what this is called msr-6 right and i also have to second what tom said because i keep seeing people saying srv6 wonderful everybody's using it here etc but there was a slide in the deck earlier that said there is very little deployment in the united states that's what the slide said and to me i read that slide as"
  },
  {
    "startTime": "01:34:02",
    "text": "we came up with something people aren't using it now maybe this will get them to use it this to me reminds me of a solution looking for a use case and i i cannot see how that is in the benefit of the industry i cannot see how that fulfills the ietf mandate of make the internet better i don't see it thanks andrew so first of all i don't think we have any kind of i would call it native multicast and i think that term has been established by you know all these contributors in the ietf 25 years ago when we started doing pim um we have very little of that in the internet the best uh that that we have are kind of research networks and everything else is in controlled private networks including service provider access networks to deliver iptv to their customers and so on right so as far as the extent of where multicast today goes and could go with source routing i think it would be very much the same spaces and i think that's a great and excellent discussion to have and if one of those slides was misleading to say it's the random part of the open internet that's not part of the places where for example we have existing uh multicast solutions that just don't scale and are you know harder to operate than the stateless versions that's fine then i think there is a mistake in that slide um as far as judging the market space and the set of participants in the ietf that are proactively working toward the solution because they believe in it i think that's certainly one of the things to figure out i would just like to understand to what extent um people who prefer a different technical solution and all their arguments why their solution is sufficient should have a significant impact in the decision um i think it's secondary"
  },
  {
    "startTime": "01:36:00",
    "text": "anything that's technically not working is fine but you know if we have competing opinions about market space solution i think we should just vet for each of them if they're technically solid and if they have enough support in the ietf uh positively but not kind of you know count the negative against it if it's not technically but based on a different you know market solution preference for the use case it's not just like we have msr6 and then we're looking for some real deployment or something like that no it's a very wrong because the especially for the first case for the teleco domain this advancement of 5g technology and commercial deployment and then we with them like the tick tock just like the the chinese version of like instagram youtube those type of things social media and you are going to see the receivers on the 10th millions maybe i don't know it's up to 100 million or not and also over the 5g network so we are seeing the problem with that and seeing the dynamics scalable those type of things and then we uh we try to get the you know something to handle it's uh we're looking at existing uh schemes solutions and then we found some discrepancies and then that's why you know this and also for some other use cases the same thing thank you thank you attention yeah uh david go ahead you show at the bottom of the cube but you are on the top so goodbye uh david lamparte um i'm just gonna offer my confusion in in case it helps i i came here to working well to a session called multicast source routing and i feel there's a huge piece missing where there's actually a discussion about what how exactly does changing the"
  },
  {
    "startTime": "01:38:01",
    "text": "the location of determining the the receivers for the multicast group how does moving that to the source actually help us how does it was it what what does this provide what is where is this coming from i'm seeing like uh a half solution maybe that is prepared work in progress um but where did this start why why is it better where is it coming from uh so so yes so i had some more detailed solution slides so when we all started the beer work right so what what was basically happening is that um at that point in time service providers were saying hey um you know this whole multicast stuff is so difficult because we have to troubleshoot multicast state on the p nodes in a service provider network so you know right now we think we have enough bandwidth we're just doing what we call ingress replication so you're sending out every packet that enters the service provider as a unicast copy to the egress and then we said that doesn't scale right um and we can give you a solution that gets rid of that multicast state on the transit hops right and that's basically what beer became and as i said in my you know evaluation of how the working group evolved is it's just the way it implemented the forwarding plane aspects especially the encapsulation very optimized for mpls networks and there i think it's great right so but but but but this all goes back to what we recognized after we did all the mpls multicast natively for 10 years and then service provider came back and said well thank you for spending 10 years in the itf on doing mpls multicast but now we decided not to deploy it right so um that's that's basically one of those you know at least my origin story for beer okay but um so now i'm asking myself is this just moving the problem from source discovery to destination discovery like the argument chain is not computing for me that is the what i'm trying to say i"
  },
  {
    "startTime": "01:40:01",
    "text": "mean i'm happy to take it offline so we i think you know i don't think this answer fundamentally would be different for beer and msr6 right so this is this is all about you know i think high level um about the ipv6 networks versus mpls networks and then also newer and better encodings of the source routing things kind of if if we break it down to you know fundamentals thank you thank you david um uh yi song please go ahead you song is remotely yeah mobile and as an operator we have uh deployed at more and more and as introduced in the use cases we have a very large network and the potential multicast services that uh should we do live streaming is also very huge and the existing flow state solution for the multicast cannot afford the overhead for so huge days for the funding cost and the existing stateless multicast cannot afford the large-scale network topologies and come combine all of these requirements we i think we need a simple and unified solution to solve this and that can uh bring a new opportunity for the multicast i think so uh we want to uh form a new working group that's all thank you you need to speak up your volume is really low"
  },
  {
    "startTime": "01:42:00",
    "text": "oh can you hear me now hello yeah we can hear you jinbin go ahead just speak up a bit shin bin will come back to you uh chang go ahead hey chang hello hi uh thank you yeah we can hear you go ahead okay okay so uh i'm muchan chung from channel mobile uh here i would like to provide the two points of my observation uh the first point i think ipv6 traffic is increasing rapidly for example i just mentioned that channel mobile's 4g and 5g network ipv6 traffic has reached 42 percent about two years ago this number was less than 20 so i think it the uh the traffic ipv6 currently ipv6 traffic is increasing dramatically so we have reason to believe that in the near future almost all traffic will be ipv6 uh for operator we should prepare uh for the situation so"
  },
  {
    "startTime": "01:44:00",
    "text": "i think a lot of discussion we have done just now i think ipv6 native network is a good solution for operator in the near future and the second point is that the multicast traffic is increasing rapidly especially some internet live video services such as tick tock in china which brings a large number of multicast traffic but the zoos traffic are currently using unicast solution in telecom network this has caused a huge waste of bandwidth and but you know the existing multicast solution cannot support cannot solve this kind of issue so from my point of view we need to embrace ipv6 and support new multicast service we need a proper multicast protocol for this situation i think itf should prepare for those new requirement new situation and as a operators engineer i suggest i have considered the new solution especially"
  },
  {
    "startTime": "01:46:00",
    "text": "friendly for ipv6 on multicast protocol thank you okay can you hear me yes yes we can hear you okay okay now uh in fact because there's no time for the presentation of the solutions i here just to give some this the suggestion about this the solution in fact in the solution it shows in fact in the used case it shows that the prt is not a skill enough to satisfy the requirement and the user cases presented so in order to solve this in order to solve this issue we in fact we need a solution to combine the srv6 segment and the beta stream to propose the new multicast solution to satisfy this requirement because this solution is based on the ipv6 so this in fact there is the new solution uh cannot covered by cx mark sabrina and uh and the beer so we think we need a new venue to dis develop this the new solution so this is just a consideration for the msr both okay that's just some this is the thinking about from this the solution and that's the proposal for the ms r6 thank you harley yeah this is the hall from mrsa we think ms6 is a meaningful topic as discussed today"
  },
  {
    "startTime": "01:48:00",
    "text": "appreciates the presenter clearly defined applicable scenarios for rmr6 and its native ipv6 nature so as a vendor i believe it will be great to form a complete solution or music and believe that a separate working group is more helpful to promote the process with this matter thanks go ahead genji yes um here i have four points to to cover here basically it's for the the both goals the first line is just based on the use case uh based on the gap analysis that being done before and on the meeting alias so it's going to say to answer the question is the problem is a real problem yes it is the second one is like well unfortunately the technical solutions um have no time to be presented but also those things it's going to show you know uh this is something should be done in igf and also it can be done in itf but the third point is like uh people you know from today's participant to their discussion and also from the alias discussion from the sign meeting discussion it shows an its sma's subject matter of expert are showing a demonstrate a great amount of interest on the topic the fourth one actually is like uh is that the reasonable to deliver something yes it's actually you know if you look at the uh the sunni hexa there the team just use p4 i think they did the implementation and the emulation for the msr6 uh uh be i think so basically means it can be done so for out of forcing together well i try to answer the question for the boss goal so yeah we do hope uh this one msr6 um can be accepted or in to be done in"
  },
  {
    "startTime": "01:50:02",
    "text": "the idf thank you okay i'll abuse my chair power and hijack the queue to relay the message from the chat from dinner fairness is saying what does multicast scale because receiver state is not tracked if you require the source to know about the receivers it's a non-starter look at st2 from mid-80s where source initiated trees failed yeah go ahead yeah so i think one of the core understanding is that um in large networks most of the multicast is sparse that's why we started with what we call pimp sparse node right so the total number of receivers isn't you know the same as the total size of the network the size of receivers typically is fairly limited and they're randomly distributed based on the service that you have and you don't want to have for each of these small groups relative to the size of the network a state on every hub that you need to troubleshoot that is one of the core value proposition exactly what you basically you know started doing beer for and so i i think putting this into question would equally put beer into question do you know like is it the same topic you're talking about okay please go ahead this is dino well torilis your core author said um your co-author said that they need to support 10 000 receivers are we going to put 10 000 receivers in a source route give me a break okay so maybe it's maybe your answer is it's not 10 000 receivers it's a thousand receivers made off of 10 routers okay so at that point the replication has to get to the 10 routers and then they each replicate to 1 000 maybe over the ram that supports native multicast that's achievable but that's not native multicast you'd have if if you are sensitive to the native multicast state all over the network for"
  },
  {
    "startTime": "01:52:01",
    "text": "those 10 routers then you have to use overlays it's that simple that's the trade-off no so i mean the way we're thinking about it think of a simple service provider core network with whatever number of pes is the number of um you know uh destinations that you need to do source routing for right and one of the recognition that we had is that um obviously it it may often be good enough to just have something like um 256 bit which which is kind of the most likely standard in beer and then we get a uh an improvement by a factor of 256 by just sending as many copies as we need to reach all the destinations divided by 256 but obviously you can now have the easy problem that especially when you have small groups um you're sending to 10 receivers but you actually need to send 10 packets so you didn't have any multicast benefit because you're using flat bit strings and each of the 10 receivers is in a different bit string and that's basically what we run for a large service provider topology as simulations uh to show them but it's it's it's you know easily understood when you need to break up um the receiver space into flat bit strings so and those things can be done better if you do better than the fat bit string encoding which would be the next generation of the encodings there i i think there are way too much detail yeah i think so yeah thank you thanks for listening thank you responder you want me to sit down i think sit down would be good thank you thank you uh uh shuru zhang please go ahead i don't know if i got your name right please go ahead thanks yeah can you hear me yes please speak up yeah here is zhang jieru from china unicom um there are there have been about uh 40 smart micro networks and some byteball night work notes are built in isrb6 they are unicost we really need new multicast for"
  },
  {
    "startTime": "01:54:02",
    "text": "srv6r ipv6 for me msr6 may keep the knight work simple this is meaningful for the operator uh this is the we need the use case okay that's all thank you thank you no no we will we'll get to it like please we have some stuff to do um sigily please go ahead can you hear me um i i i think you have some feedback issues so if you can type it into the chat it's probably better we are really running out of time so we cannot troubleshoot this so please just type into the chat thank you uh no is that okay you're coming across very low but please go ahead uh okay thank you uh i am sijali from beijing university of uh post under telecommunication occasions uh we would like to make an introduction about our project uh in over a minute but uh we didn't have it enough time so we put it in this section in the this classic okay and we had a hackathon a project for msrbe solution in this ieft introduction uh it means in includes two parts the first one is gp4 implication of msrbe under the emulations of msr6pe based on intel tofino sweeties we have brought the value"
  },
  {
    "startTime": "01:56:01",
    "text": "validation of mrs r6 based on open source and we hope to see further progress of this work in ift itf that's all thank you for listening thank you uh so we just want to have uh tng did you want to make like a really really brief statement on that thank you for mentioning about the 1027 receivers consider it's like a reasonable actually it is for our first case and you look at the 5g 20 uh 24 23 247 after the definition about the five uh five mbs nihana architecture from the ups and upf up to ginobi and you look at that one that link will be used to multicast and then the number of genovi can go like ballpark 30 000 and beyond so it is reasonable thank you thank you thank you so i just want to do like a quick poll of the room because like i think a lot of the disagreements coming from the problem itself like not in the solution space like even though we did talk a little bit about the solution space so i just want to run a poll like please get on your phones computers to raise your hand or not raise your hand um based on if you think the problem statement itself is clear so the problem to me is always clear so i'll just run it for another minute or so to figure out where to go next because we don't want to do things too ahead of like what we have to do so thanks can i ask what do you mean by is the problem clear the is the problem to be solved clear from like as as in you agree that it is a problem or that you understand what the statement of the problem is do you understand what the statement of the problem is right like as described by the proponents like so you may or may not agree that's a problem for you to solve but do you understand what they're trying to solve thanks that's what and hence the question right"
  },
  {
    "startTime": "01:58:01",
    "text": "if you don't believe you understand what's a problem to be solved then you do not raise your hand or pick do not raise your hand which is equal under not raising your hand or raising your hand for not doing it another minute okay going once going twice pull close so um we have a very i would say um evenly split room and like remote room as well so it's i think um our conclusion as shares and uh uh to be confirmed by the ad is that the problem statement requires for the development um before we go any further with this without like you know going to a charter or something i think we need to spend a little bit more time um like narrowing down the problem statement right and we can continue the discussion on the mailing list and try to make progress over there instead of like trying to go through the working group charter questions because it does not make sense right because if people don't have a common understanding of the problem it doesn't make sense for us to ask questions like do you want to form a working group right because we don't know what your former working group for so thank you all for coming we'll continue the problem statement discussions in the mailing list and i hope to see you in another meeting thank you [Applause]"
  },
  {
    "startTime": "02:00:04",
    "text": "thank you like and like make it"
  }
]
