[
  {
    "startTime": "00:00:00",
    "text": "fun, and I just thought Yeah. I'm the pets, you know, You can't really see the whole Yes. Okay. Cool. Welcome to, 6 man. Flip and you seem to be getting That's me. See. Because you what you can do as a backdrop. There we go. That's better. Welcome to 6 men. So getting used to the new meet echo interface. This is Jen. This is Oli. Next slide. This is the note. Well, we assume you have memorized this from all the previous IETF sessions by now, so we won't go over it. Next slide. And these are some hints for how to use Mead echo. You should be running the the, in room version to, Add yourself to the queue if you wanna speak. Because we'll be managing the queue from both local and remote presenters. Next slide. Oh, yeah. So the important thing is"
  },
  {
    "startTime": "00:02:00",
    "text": "we need immediate minute taker. To need someone to volunteer to take minutes and we'll see if we can just keep asking until someone volunteers. It's not from Jody, do you want to take minutes? Is that a positive? Yes? That's interesting to guess it. No. He's he's we're moving along, you know, we'll continue to look at your heart until some of that sex. To take longer Lorenzo. Okay? 2. Thank you. Thank you. Thank you, Hubert, Tim. Towation. Proceed. Okay. Next slide. So, this is the agenda. We have set of working group documents, and then, active internet drafts, the one agenda change is that since there weren't any more comments about the hot, hot processing. Draft, we will there will not be a presentation for that today. So we have more time for the other talks or get done sooner. Next slide. And these are the active individual drafts, any comments on the agenda or agenda changes, k. Next slide. So we'll go through document status. So we've not no, new, RFCs have been published or any or no new"
  },
  {
    "startTime": "00:04:00",
    "text": "No documents are in the RFCQ since the last IETF. We have 2 documents we've submitted to the ISG. One that's been there the longest is the RFC AEs 6874 biz. And this is currently has 2 discusses and, Eric is, working to try to find some resolution for that. Seem to have come to somewhat of an impasse, I think. It was interesting to attend the working group chair session. We're people talked about discussed first. Process in the ISG, but I resisted coming to the mic. We also have segment identifiers, which is recently been submitted to the ISG and is I think the status I think there's, Yeah. Yeah. I think there's an I and a change. So there'll be a new ID coming. Shresh, Hi. Is there a question I couldn't sign on yet? Yeah. So there's like 2, directed reviews and 1 INR requests. And I've put the changes into the draft submit as soon as the, AD asked me to get Okay. Good. Which I think he probably just did. So Yeah. I'm I I would be surprised if this takes a lot of time to get through the ISG, but see what happens. We've had one document that is completed working group last call, the hop the hop processing document And I think that's now waiting for the chairs right up and then it'll get to Next slide. And in working group last call, we have the extension header limits draft. And the chairs did"
  },
  {
    "startTime": "00:06:01",
    "text": "one review and then a review of the updated documents was sent out very recently. Tom will be talking later about it later today, but I I I think this will take a bit more time. But but but I think we're making good progress. We've very pleased to see a lot of improvements in the current draft. In adoption call, we have the CRH draft. And so I think the adoption call ends early next week. On Monday. Monday, like, midnight. K. So If you haven't commented or expressed your opinion on the adoption call, please do. We have, 4 working group documents that are you know, not listed anywhere else on these slides. The I owe and conference date, the 6724 update VPN, BTN IDs, ipv6 over wireless, Next slide. Now this when I was working on these slides, on the data tracker, it lists expired working group documents. And one of these, first one, the slack renumbering expired very recently and I I'm suspect we will get an update to that pretty soon. But, but, but, some of the others, especially the the last one here that I'm the author of, which is back from 2007. So what is that? That's a long time ago. So, my proposal for the working group on these is there's a state we can call them work working group documents that are dead or something like that. So I'll send them something up to the list"
  },
  {
    "startTime": "00:08:02",
    "text": "or we'll send something out to the list, but I think we proposed, except for the first first one on the list. These should all be marked as dead. Because I don't think they're going to progress any further. Actually, one of them seemed to be called IV V Six hope I hope extension had the handling So I I guess you can mark it as replaced by Strictly speaking? Yes. We could. Okay. One thing we noticed here is the doesn't seem to be a way in the data tracker data tracker to make them not a working group document. Yeah. At least that that I could find. So it seems like, Seems like something the tooling should support So which is in the queue. Tom, yes. So, 2000 7 is pretty long time ago. I thought there was, some sort of policy that if a working group document doesn't get any activity for a year it would go into kind of, query mode to find out if it's still active. If I'm not mistaken, Well, apparently, it's not automatic because didn't happen. Alright. Actually, I guess that's what 7, almost 17 years. Correction. We did find a way to release, documents from the group so we can do that. Okay. I was about to say, yeah, there is something ID exists, and that's it. Okay. Yeah. Because I think that's the right thing. They should just go back and then become an individual draft again. And if you author which to pick them up. They can't And I can confirm, yes, we will send the update for the the first one. Okay. Good. Okay. Next, Yeah. And this is just a reminder that there is other work that happens relating to ipv6 and other working groups. So any other comments on the intro"
  },
  {
    "startTime": "00:10:02",
    "text": "we'll proceed to the next talk. Alright. Thank you. Tom. The room is yours. Okay. So my name is Tom Herbert. And today, I'm going to talk about the latest version of limits on sending and processing ipv6 extension headers, Next slide. Changes in the last version. I think the most significant is it was changed to DCP k previously was proposed standard So this was feedback. We got from several points including the chair review and the ADs We standardize on some of the terminology, including router, nodes, ipv6 nodes and such. And added a terminology section that describes that. There were some explanations that seemed unnecessary So we remove those. We clarified the applicability of default limits. I think this was also pretty significant. So there seemed to be some questions around that. And then there were various other Addits, edits, Next slide, please. So on the default limits, I do wanna clarify this, this did generate some discussion. So the default limits that we specify only apply when sending on an unknown path. So basically the way I think of this is when you're sending into the intranet What the what limits does the sender start with? If the sender knows her sending to a known, network then these limits can be freely exceeded."
  },
  {
    "startTime": "00:12:03",
    "text": "One of the questions was, for instance, segment routing there's no way we can fit in a segment route list into 64 bytes. But, in the case of something like segment routing, the sender knows that it's already sending into segment routing domain, So, therefore, the limits obviously need to be much greater within that domain. So the 64 byte extension header limit that's describing the draft would easily be be exceeded in that case. So Again, these limits default limits for sending only apply when the sender doesn't know what the attributes and the capabilities are of the path and the destination. Basically, it's when it's sending to anonymous notes on the internet. Any other cases where we're sending into any sort of limited domain, Presumably, the sender would would know that the limits can be exceeded and can use larger limits. header chain default limits, for routers. So the idea here is that we want to specify that routers must support at least 64 byte header chains beyond the ipv6 header. The reason for this is or the reason we even need this is because some routers actually require to be able to look into the transport layer the 64 byte header chain is really any headers including the ipv6 header, the, NEIPV 6 extension headers and potentially any encapsulation headers It's any headers that the router needs in order to get to the transport layer. And again, this is only certain routers that need to process the transport layer. If they don't need to process the transport layer, then this limit isn't applicable. So the important thing to understand about this is this limit is based on"
  },
  {
    "startTime": "00:14:01",
    "text": "the constraints and capabilities of routers, not on the types of extension headers, So, This is a case where size actually does matter. So the size of extension headers, matters it's the size that's too big that pushes potentially pushes transport layers to deep in the packet, these routers are doing deep packet inspection into the transport layer that can't find the layer 4. Therefore, they can't do port filtering. They for some of the policies they have are to drop because they can apply the policies. So again, to summarize, the 664 byte header chain limit is independent. Really of the types of extension headers, It's really about what the routers can support in terms of their processing capabilities. And, again, that's applies to the whole header chain not necessarily just the extension headers. Now obviously in the extension headers draft, we do set the normative requirements for sending the length of extension headers not so much normative requirements for sending the the full header chain without, considering are including things that aren't an ipv6. But for a router's perspective, there's really no difference if if there are concept of a heterogeneous exceeds their limit they can still drop the packet or will may drop the packet. Next slide. So next steps, as Bob mentioned, we did get feedback from the chair's, review of the update. I did look at it briefly. I have some questions on some of the the points I can either bring them up here or respond on the list also, there was, some feedback from Eric more about the 64 by limit"
  },
  {
    "startTime": "00:16:03",
    "text": "that we're setting, I believe, and whether or not that was appropriate for BCP I think it is, and I'll respond. To that thread also. Okay. I think that's it. Kim, are you in the queue? Hi, Tim Churnra. I've realized now gonna make the same comment that Tom's just said someone else's need That's, I'd be very concerned that that 64 sort of baked in as something that you would never exceed once it's published as a a BCP, and it does seem like a very small number. For example, I was in the Cion meeting whatever day that was, and they said they had her if they do it this way would need to be like a 100, 120 bites. So Well, So so It seems like a very small number, but bear in mind, This is support over the internet. It's a default limit Also, if you look at, existing solutions, IP options, TCP options, this actually have a smaller limit by default. The date limit is enforced by the protocol. But in terms of amount of data to be sent over the internet, I think the principle is it's it's pretty much the other point that I did respond on that, threat. Was that even now The data shows that routers tend to have somewhere around a 6 the fight limit, So they've already kind of enshrined enshrined this. In what they've implemented. When we So in the ethnic, experiments when they sent 128 byte extension headers the drop rate went up to 90% for destination options."
  },
  {
    "startTime": "00:18:00",
    "text": "For think it was 48 by extension headers and your operate was only 10% So the the size limit again isn't something that we're deciding from a protocol perspective. It really is what's there. So if we say that, router vendors, for 256 bytes, No. It's not gonna it's not gonna happen. They they they have no motivation to change all the employed Technology. I think there is a practical implication here and and why it's appropriate for, BCP. The other point I would raise is RC 9000 quick. Actually specifies some limits on extension headers also. And their default limit on extension headers is for Fry PV6 is a grand total of 32 bytes. So It it would be great if we lived in a world where we could set whatever limits we and we can make this completely extensible. Future proof and allow arbitrary number of bytes, but all the data and the current implementation and deployment suggests that it won't be that big, however, I think the key here is we want the limit to be something greater than 0 when router is implemented limit of 0 for headers. That means we can't use extension headers are in that path. And that raises the problem if even a few routers do it, a small percentage. It makes it really difficult from a sender's perspective to use extension at all because then it's hit or miss. So the goal of these requirements is to try to find a ubiquitous number, such that if I'm a sender, I have a high confidence that my packets will go through if if I do this. So Yes. It's true that in the future, we may want larger limits that presumes that we actually have extension headers"
  },
  {
    "startTime": "00:20:02",
    "text": "But for the current deployment, in situation. I don't think that there's any path here to using a larger limit. I'm looking at some of the comments, like Eric Klein's comment. It's it's true. If we don't set something, the default limit's gonna remain at 0, which means extension headers are unusable. So it's always gonna be a balance Right? This is a manifest constant. It's a best guess but we're trying to find a a a mix between something practical and something extensible. But the flip side is is essentially gory's draft, which is maybe if you're working with the last 4 weeks. That's fine. The minimum of what should be supported. And I fully support that and like that. Just see a danger if you're trying to prescribe a maximum based on evidence rather than what you think is necessary. So for example, if you look at the last three hop by hop. Had a extension, had a RFCs went through and what was there. There was the half minimum, m g u. There was alt mark, and there was something to do with IOM. Do those 3 require more than 64 bites. Are we just saying those are gonna be unworkable? Those things that published as RFCs. If if you send those today, it won't go through the Internet. So And and, again, this is a BCP, and we are explicitly saying this is a minimum limit. So the the alternative is set a a bigger minimum limit But then that's not practical for vendors to support in the foreseeable future. Other alternative is don't set a limit but then some vendors would take it upon themselves to infer a limit, and that limit could be 0. So I guess my question is what what's the alternative here? You're saying Like I said, if we don't set a limit, we don't win. If we set a limit, then it might not be the right one. But again, we don't win. So what we're looking for here is a practical"
  },
  {
    "startTime": "00:22:00",
    "text": "answer more than anything. Are saying practical for on the internet, but really you mean practical for everywhere because there isn't another Rooter I could go and buy that sits in my own network that magically has more capability. You're suggesting that no routers I can get help. No. No. On the insert privately. That's that's not true. The draft is very clear. This sort of limit is a default and would only be applicable when you're sending it to the Internet for any other type of network, any limited domain, The limits can be much greater. Now there could still be limits. You know, certainly we we need that. But these would only apply when I'm sending to anonymous destination on the internet. It's it's the it's the lowest level, least common denominator of sending So if I'm the sender and I'm sending to some unknown destination, I need to know what size of extension headers I can get through with high confidence right now that the answer is 0 and we can't use headers. So it it the the draft says this multiple times. These limits only apply when you're sending to anonymous destination over an unknown path based when you're sending to the open Internet That makes sense? No, but I'll get out of the way. Winters QA Cafe. So Tim when we put some of this text and node requirements about extension headers, I ran some testing. Over generic routers, didn't run into a lot of these problems as individual Blackbox, with these extension headers. Right? Now, we didn't custom under load Right? But they were able to forward the traffic where we found the problem is almost clusively in policies. And load balancers and other things outside. So I'm wondering if this should be a V Six ops draft instead of a 6 man because it's telling people to have happen and not individual routers would be my"
  },
  {
    "startTime": "00:24:00",
    "text": "I would ask people to think about that because I get the limit part of this, but our experience with individual routers as a architecture component isn't that they're not able to forward this. It's because someone either configures it, or there's a policy or something in front of it, it causes that problem. It's not the individual router. So I'm not sure you're gonna get what you want. If you just target routers and their forwarding ASICs is my my only commentary on this. I think that's actually, I, I have to disagree in that case because the problems we're seeing It's definitely clear that the size of extension headers is relevant. Some policy for for some things, that's true. Pop by help options are dropped by policy. And that's something we're not gonna be able to change. However, the uptick, ethnic data, in particular, shows that destination options pass if they're of a certain length. And the length I believe is in so policy. It's the capabilities of the router to find the transport layer. It's the the parsing buffer sizes and routers the problem I believe experience with this has been individual riders do not run into this problem that if you just send them the packet, I'll be clear it's not under load. Right? If it's under load, this is a different story because it goes to CPU and Once it goes there, it's a totally different problem. But found that people weren't just dropping these packets on the floor it's something in a firewall, something else. I don't know. I know you're saying routers are dropping it, I think it's something in the network is dropping it. I would question if it's actually a router based on our data. So so that might be true. However, for Nando's RFC. I forget which number it is. On the reasons extension headers are dropped. One of the reasons was that they're too long and they force the transport layers too deep in the packet. So may maybe we just need more data on that, but I do suspect that's there are routers that have this problem because"
  },
  {
    "startTime": "00:26:04",
    "text": "by router design, they have limited capabilities to process, a lot of headers. The Okay. Bye. You know, we closed the queue. It should have to Lawrence. Now John link, but no headphone at all. So I thank you team for saying most of my comments, my experience as well that is is or, obviously, the hardware limitations which are changing. What I'm curious is you we basically set in hard coding limit, which is probably based on the common denominators because my home recipe, it's a router. Right? So if you section a limit based on what devices could do, we basically put in the same limit for, like, $50 CPE and, like, big high end, like, background. The right So I'm not sure it's, like, practical. And also, yeah, I'm concerned that we put in a hard limit, which gonna change with the new, like, line card degrees by vendor. So, yeah, I'm, I kind of share a team concern and Eric's concern about we might actually make it slightly worse because a lot of people will believe that it's all the same I need to support ever. Yeah. Well, like I said, So, I'd like to respond to that. If we don't set a limit, then what is the expectation? If we don't set a limit, router vendors, aren't going to volunteer to make things bigger anyway, And and like we said, then they may choose ad hoc limits that could be 0. So It's it So I think we have to do something here. The question is if it's not trying to set a limit as a BCP, practical limit than what's the alternative."
  },
  {
    "startTime": "00:28:00",
    "text": "Parents are really, few observations. I think so first of all, I think your, your argument would be a lot more convincing if you showed a graph of the data that you cite in, like, you're talking about the data, and you're saying, you know, 64 bytes, 90%, you know, 128 bytes, 10%. That's pretty compelling, actually. If you wanna do something in the real world, So having that graft there in your presentation or what I think would have would have helped the room and folks last thing. So I am sympathetic to the, to the argument that if you don't if you don't set a minimum floor, you won't get anything. And I think saying that if you support 0, you're out of bounds, I think that's a useful statement. What I think we're sort of getting tied up into knots over is oh, but if we say it's only 64, then it'll never be more than 64 and you're saying, well, better 64 than 0. Right? So so To be clear, I don't have a magical solution here, but, one thing one some things that we could do are saying that, like, yeah, you must support at least 64 and should support more. You could say that. You could also sort of over and this is the kind of thing that happens over time. Right? If if you If by saying must support 64, you get at least 1 or 2 use cases of extension headers, Then they won't be this alien mind sucking parasites that people say, oh, no, no, no, we can't do it's really weird. We we don't wanna support that. Gonna be a use case where you can build more functionality over time and it's gonna be something where people are gonna get used to use And then as more use cases show up, then maybe people support them better. And, the other thing I wanted to say to you though, is that if you wanted to find working, then the only number is sadly 0. Because there are networks that will drop. Your, your 90% number is much better than I saw it ever would be. It's still 90% and not 100%. So maybe you might wanna about think about, you know, what is an app gonna do about Is it going to be happy eyeballs or it gonna So anyway, like I said, I don't have any solutions. But I'm sympathetic to saying we must have a floor. Otherwise, we can't ever do anything."
  },
  {
    "startTime": "00:30:01",
    "text": "Super. Thanks. Thanks, Lorenzo. So to wrap this up, So the chair's talked a little bit about this draft, Tom, or breakfast, and we sent a fairly detailed chairs review And, and this is a document that is fairly sort of fundamental to the core of e 6. So what we would like to see what to suggest is that Tom, you do a new revision based on the, on the chairs review, and then we would like for to people from the working group to also do early news, mean, this slide here is wrong, right? It isn't working with last call, and it has been for a while. And with those reviews. So I hope we can close the document off and and send it off to the ISG. But we would need to passionate people about limits and extension headers to raise your hand. For this to proceed over that. But, Tom, does that sound like an okay Sean, for you. You can just note or, or blink one eye if you can't speak. Tom, can you hear us? Are you, We cannot hear you, if you, sir. Oh, I'm sorry. What was the question? Oh, the question was if if you were okay with a plan of doing a revision based on the chair's comments, then before proceeding the document to the ISG, we would have 2 more reviewers from the working group. You know, detailed work through the through the documents and and then, you know, hopefully we can advance it. Sure. Reviews are always good. Yep. But we need to We'll take that to the mailing list if no one is Okay. And one thing I heard is that someone used the word floor, I think. For requirement. Limit sort of his"
  },
  {
    "startTime": "00:32:01",
    "text": "ambiguous in a way that it's is it the maximum or the minimum limit? It might be good to use words that separate those ideas out but we should go on. Okay. Thank you. Thank you. So Chirmin, the floor is yours. Do you want to click her? How to use He should be able to do that. Okay. Hello, everyone. It's a Xiaomi from ZTE. This presentation is on ipv6 query for, enable agency to OEM capabilities. Here, is it a a rig cat up there? Draft, this draft defines ICMP V Six extension to achieve I am capabilities discovery in IP a 6. Networks, This chapter is a companion, document of, obviously, that you see 59. This job to Yes, I've seen, 46, 20, RPV 6, you know, the information pirates as a basis 5 island capabilities, objects, defined in this document you you can see the details on the slide. This chapter was presented at a lastitf, IETF 1, 17. At that time, David, Lamparter raised good comments regarding, amplification attack threat. To adjust his comments way, submitted the updated draft before this meeting And,"
  },
  {
    "startTime": "00:34:00",
    "text": "reservation in the separated in uptake draft. That attempt to, adjust David's comments, at the same time, we also incorporate to the sum, editorial changes. Into the updated draft, number 1, we arrived revise the, abstracted to make a stronger connection between, I've seen ninety three 59. And this document Number 2, we change the terms from, node the I'm information query to note I'm request. From node IIM information reply to, know that I am replied. Because in the new terms, same, more common and more concise. Number 3, I I changed the the reference. To, ipv6 I am over at 56 encapsulation draft. Because that draft has already been, published. As obviously, 94. 86 here's the, new tech introduced in securities consideration section, in the updated draft. To address, David's comments. And in multiplication, that supports this specification, master, support an option of adding a node I am in a past package, to the past MTU or the minimum ipv6mtu That's, 1280 bytes. In that way, it can be ensured that the note"
  },
  {
    "startTime": "00:36:01",
    "text": "I un reply packet would not be larger then, invoking know that IOM request the packet. And, network operators can choose to enforce the padding option or not, in their networks, The intention is to, make a requirement for the implementation but to leave the flexibility to the operational use Doesn't work. Okay. This slide shows the new text to abstract, This document describes the recognition of mechanism of the stubbering ION capabilities. Described in, I would say, that is 359 can enable IIM capabilities, IPV 6 networks, as I said before, the intention is to make this make it a stronger connection between, obviously, that you see, 59 in this document So we made this change to the abstract next steps, we ask for more reviews comments. And we'll revise this draft to to adjust your comments to improve it, And then then maybe, or can we last call? Thank you. So any comments? Eric, you are"
  },
  {
    "startTime": "00:38:00",
    "text": "You can entertain this. No no hats. I I'm I wanted to ask about whether there's an upper bound on the information that could be put into a reply. Sorry. How big can her reply? Bb Is there is there a a protocol limitation for Yeah. For bounds? You mean, the the the package size on the reply? Yes. I guess we put a limit on the sides of the though that I am website. That's, minimum, MTU for IPU 6. On the I thought they're you're petting to the request message to that link. You're saying there's also a limit on the reply. Yeah. The intention is to make sure that's the reply would not be larger than the request because we want to avoid the amplification, attack That's a So we made a this limit And it it's, for all of the foreseeable use cases of IOA information. 1280 is enough. Or MTU is enough? Do you think? I don't really know what what goes in those things. So I I I think in it's suitable. Okay. But but if you have a different opinion we can discuss. I'm not deeply familiar with people who want it use this stuff. So Okay. Thank you. Thank you. Okay. So if there's no further comments, thank you. Oh, yes. That's a good point. Let's do a very quick Race show of hands of how many people have read this draft. Oh, high red. This straw. Chance of getting the spelling right on this. Yeah. Twice Yeah. Yeah."
  },
  {
    "startTime": "00:40:09",
    "text": "Yeah. So just for the very quick results here, I think the, try to get some more engagement on the mailing list. I think So we have four people out of 100 So Okay. Yeah. 5%. Thanks a lot. Thank you. Okay. Team Chow. Can you come up to the pink box, please? Cross. I know. Used to their books. A clicker? Yeah. It might have the latest. I'm not quite sure. I was it's a Okay. Good afternoon, everybody. So I'm here to present an update on the update presented in San Francisco on RFC 6724. So it's myself, Nick and Jeremy have been writing this. There was a o three version that's just being posted the last couple of days, actually, just to correct a typo. In So the motivation for this, I'll try and be as quick as I can, and we'll get to the end and then just take the questions. Is that 6724 is now about ten years old. We've got a lot more operational experience through its use and one of the things that's come up is this issue of preference for ULA's versus V Four addresses in a local network. What we're trying to do here, our goal is to make ULA's work their original use case that you use them within a site network, within a local domain, to talk between hosting that domain using those And the problem at the moment is that if you have ULA to ULA or V4 to V4, as options, the address selection mechanisms will come back and you'll be using V Four"
  },
  {
    "startTime": "00:42:01",
    "text": "and not ULA. So highlighted involved there. One of the things that a number of sites you're trying to do is just stop using V Four, remove use of V Four, without necessarily turning it on first, just getting confident that it's not needed. So actually promoting URLs to be used ahead of the 4 addresses within the site. Certainly has value from that point of view. And the the root cause of this is the precedence for ULA's within the default policy table. Changes made to the draft 6117. We've tried to streamline it I had a chat with Jen before, the session. I think we can probably streamline it and make clearer further. What we hopefully can get through today is that the intent of the draft is agreeable, and then we can progress forward. We stripped out, information about all that the arguments for greater configurability, to streamline it. We've removed the text about the next top here router here stick, but I'll mention that again in a moment. And the example of the GAI.com for I think was just people were saying was confusing, and tweaked a couple of other things. We've clarified that the preference here is for within the site over all V Four addresses, not just RFC 1918, and added, some comments on the relationship to to other RFCs as well. There was also a note added about the fact that now we may have some hosts that have no address selection, mechanism implemented. Some may still be stuck on 3484. Some may be on 6724. Some may do what we propose here, and some may do other things completely. So there's a whole lot of interrupt that, maybe needs to be thought about here. So this is what we would change in the default policy table so that 3 highlighted lines are the ones that would change. So as you can see there, the the precedence for V Four is lowered, and the precedence for ULA's is raised so that they would be preferred."
  },
  {
    "startTime": "00:44:04",
    "text": "And, also, we've changed the 6 to 4. So it's on a panel with the El Dorado. Pre just one note here. The question has come up three or 4 times on the list just to clarify. Not here trying to promote, the use of ULA or there I say the word in that here. The use of ULA, guAPaaS over V Four. If you have a candidate pair that's ULA, and the candidate pair that's before before it will pick V Four it'll use v4 ahead of any, unmentionables. And it'll also, of course, prefer ULA to ULA over any for to any of these course. So those are two behaviors that you will will have. And I think Jen also made the point we should probably clarify that further in the draft to emphasize that And I did say I I would come back to this. Those of you who saw Jen's talk yesterday in V Six ops about V Six mostly, use of rule 5.5 is a very important part of this. And at the moment, in 6724, it does say under the 5.5 section, a little discussion paragraph, about implementation not being required to remember which next ops advertise which prefix is. But, actually, if you want this to work, you you do kind of need that. So I think it was Brian Carpenter's text below that. Apologies that it's somebody else. But we could change that text to say what is said there, that it's required to remember which next hop's appetite, which prefixes. This is also something that comes up in RFC 8028 about selection of of next top routers. There's talk, there's text about 5.5 in there as well, and we could strengthen it here to compliment that. And then finally, last slide, there has been some related list discussion that come up as I think I can't catch it someone like 450 messages. Not all about the thrust of what this Draft is about, which is"
  },
  {
    "startTime": "00:46:01",
    "text": "the preference for your laser with V Four within the site. But there's all sorts of other suggestions and helpful, maybe one helpful comments that have come up. You know, the idea of inserting and observing slash 48 ULA prefix into the policy table. That actually might be a interesting thing to do, and it may help that I think it's offered somewhat at a tangent. The idea of adding a new label for private V4 address prefix at the moment will be for address is in the policy table have the same label there are some potential benefits of having different labels for, private address space. I think it was Brian again that suggested you, maybe there's a a different function that should be written to replace Get out your info. And if you have that, then it's 724. May not even be required, but that's, you know, that's It's a little bit more esoteric maybe, but it it's it would be something that would be useful to have. There was a whole load of stuff about Nat 66 and MPT. 66, and the proposal to have a new, prefix for translatable. Your eyes, so you could if you knew you were going to use the unmentionables. You would have a prefix that would be a translatable ULA. So that's this is the sort of thing that was coming from the list. It really got so carried away with that that he went home and, changes home network to be ULA only and use NETNPT. So 66, and now I see MPT 66. The the status of that is being proposed to change. I don't know that's such a result of your home network. Well, something helps. Another thing that came up was the the suggestion to make 5158 historic as part of the discussion about demoting 6 to 4 here. A whole lot of other things, wider changes proposed about making source and destination address selection work better with multi homing and then happy and so So I think what just the final final slide what the authors here would like is hopefully, the blessing that in principle, what we're the intent of what we're saying here and what's written in the the current draft is good and you're happy with that."
  },
  {
    "startTime": "00:48:00",
    "text": "We can streamline it further and make it a lot more clear exact what those behaviors will be as per the slides there. And if that's good, we can progress that, hopefully. Sort of sideline to that is whether we do want to also come back and change that text about 6724 about rule 5.5 And then finally, there's a whole bunch of other things that have come up on the list as a result of this issue being raised, and what do we wanna do about those? There's presumably some new drafts of you written. And if so, about Watson, who's going to do them. So that's everything I have to say. So over for questions. Again, again, now Yes. Uh-uh. So I read this draft twice this morning. I was slightly confused And I, yeah, I think it would be really beneficial if the make clear is that we're talking about ULA to ULA, not just APBC, ULA. In general because it's not very clear unless I Doctor. Your, before the session, I think it would be really nice to have a section saying what how it worked before, how it worked now, and why, and maybe explicitly specifying, maybe showing the logic why you will not break you relate to global Yeah. Yeah. Like, not be working. And, also, please clarify or remove your about repayables. Because there is a section which literally saying, yeah. And if ULA is chosen for global destination, hope they both will be covered. It may be simply just for a minute or so. Make me see made made me think that, oh, Yes. So, like, sorry. It does rather than yeah. we probably could be phrased as if for some reason, as a client does not do the right thing and still uses So kind of your Yep. Yeah. And speak in the rules. Yeah. And for all 5512. I am biased. I obviously would like to see that, especially because we have 80, what, 28? RFC, which Brian and Frederick,"
  },
  {
    "startTime": "00:50:01",
    "text": "which already say is that client should Well, we had the do that. So I mean feedback last time to streamline it, but having seen your presentation on Monday. That that's making us think now we really do need to emphasize this. Yeah. So, like, practically, it's like, we need to do Right? If you want to deploy not just multi home. Right? If you're actually doing reasonably a complex, network, when client can move, you have to have this. Right? Otherwise, things will get broken. So I would support a change in good pursuit, especially as I say, we already have an other if he sent So, yeah. Yeah. And we'll we'll also add the reference to 8028 in it as Tim Winters QA Cafe. So was a young student, I wrote some test cases for address architecture, the original one, and I missed that note about implementations needing to track the next top for rule 55. And it went really poorly. Because nobody tracked it. Like, at all. So it's a test case. We don't normally run. Because of that. Now what it is looks like today, I don't know, but I suspect a lot less people track the next top they're getting prefix from than we hope. So I don't know if required it's gonna work there. I would think you're gonna have to get away with a should. We can get into the conversation of low end boxes here. That's where this problem comes up. Like, a generic Linux box is not gonna do this. Do we want a phone to do this? Yes. Do we want every device that's got Linux embedded into it to do it, I don't know. I think I should is gonna be pragmatic. Alright. I got people behind me saying, yeah, I mean, if if you wanna do that, I would put Musk instead of required and just drop it and say we're we're doing but I will say this went very, very poorly for young twenty year old Tim winners, so be careful. Yeah, I mean, if it's the what was that going So, yeah, I mean, the, at the moment, 6724, it's it's has rule 5.5 and then sort of"
  },
  {
    "startTime": "00:52:03",
    "text": "little discussion note under it that goes, well, it doesn't really matter, but it does. Think, and that's what we want to say somehow. Yeah. Lorensically, to be clear, I mean, because we want it to happen doesn't mean we can, will it to happen. Right? So saying must and causing all Linux implementations fail whatever ipv6 conformance test Azure. I don't know if that's the sort of useful outcome there. Definitely should is is is sort of, at least, I would say, desirable. Yep. Okay. So you can well, okay. So then so that does not mean that, like, because I can't do 55, I'm not gonna implement this other stuff here. Anyway, just And, yeah, it limits is the 1 is the god one out here. David, please fix. I know that someone in the room has code. Anyway, so, wish she wasn't laughing like that. A few, well, a few things Let's not say we own wanna we don't make any recommendations about Nat. The only recommendations that we can't make about Nat discard it. Let's remove the text from the draft to different agreements. Jen said the same thing, and I agree. Yeah. Yeah. There is some sort of what looks like a bit superfluous text. Like, section 6, 7.2, maybe it could be sort of streamlined and deleted. Such in 6 is sort of I think it's like a bit fluffy. It doesn't seem that much, but, yeah, And, 77.2, actually, not even sure that true. It says that, well, you'll get an ICMP unreachable, and you will, like, move on and assumes the RCP unreachable was generated, that it didn't get rate limited, that you got it, that you that your TCP stack processed it, all stuff that I think is sort of So, yeah, if we just remove that, it it's probably not a use case that's gonna happen anyway. So But other than that, I I I do think this makes sense. Okay. Thank you. Ted Lemmon. So I just wanted to respond to the should versus must discussion that we just had the fact that something that must work in order for fun in order for things to function"
  },
  {
    "startTime": "00:54:00",
    "text": "doesn't work. Is a problem and The fact that that thing fails a conformance test is not a problem. It's exactly the correct behavior. So I think that that should be a must and all of those things that don't implement rule 5.5 should fail. And that will motivate people to fix the bug. Well, presumably the three platforms that Jen mentioned on Monday all supported. I I 2 platforms. Sorry. Don't know. Honestly, I don't know whether we support it. I haven't checked recently. You do. That's why it works. Thank you very much. I don't know who did that, but now you can stand there and say must for you. No. That's not why though. Why is because the re the way you get stuff like this fixed is to is to say it's broken. And embarrass people. I mean, I don't really want to embarrass them. It's just like, you know, it's a bug. It needs to be fixed. Not a big deal. Let's fix it. I mean, it fixing it might be a big deal, but One second. Found that role. Anyway, I just think it should be a must. Don't think I think making it a should sends exactly the wrong message. We want these tests to fail. Okay. Okay. Gurney. Ted, do you have a proposal on how to reach consensus on whether to put should or must in this document? I mean, I know you you would would would advocate from us, and I I I can't actually see that. I'm just saying, hey, how do we get from, you know, the current text to must just like cola homeless. I don't know. I mean, I I I think that's a for the chairs to decide if they if they agree that this is worth pursuing, why not just ask the question to people really need this to to be a should or should it be a must? And if Sorry. It must be a should. No. It must be a must. Nice try. Well, So so, I mean,"
  },
  {
    "startTime": "00:56:02",
    "text": "this is a serious point. We need to get some resolutions. I mean, the the the the technical point here is that if you don't implement 5.5, then bunch of stuff doesn't work. And I think that is like, consensus is not who votes for what. Consensus is, has a technical objection been raised, And if so, have we addressed it? One way to address it is to say, look, this is too hard. We're not doing it. So the working group should decide. Is this too hard and we're not doing it, or should we just do it? If we're making all of these changes anyway, I think I think we're already saying that we should do some stuff. Why not have this be one of the things that we do? So 8028 says a lot about 5.5. Is that performance of that, Tim's at the Is that sort of conformance It's it's a conformance of that tested. Is it the right level to be tested? So And if so, do things pass it? So a lot of people assume all of this actually worked today, as Ted is indicating, a lot of people think that post will actually do all of these magical things And that sentence is why a lot of hosts do not do. Those magical things because we, as let them out. You know, you know, both of the US government test program Ready logo doesn't test this. The US Gov test program has this the way it's written says, you know, if you don't track the next hop, you can skip this test. Everybody skips this test. Like, almost everybody. Because they don't track this. So if you want this to work this way is Ted is suggesting then you need to change this to a must. This should, I think we could test anyway and tell people they don't do it. But I a lot of people assume this works this way. They read this RFC, missed that note, like I said, it's a hard one to find. And what happens is is that they they don't do it. And here we are You know, it does break things because people have the expectation that rule 55 is gonna work. An entire cell Okay. Yes. Send the queue. Again, no hats on, but I always read, like, must means if you violate this function gets broken. Right? Should means"
  },
  {
    "startTime": "00:58:02",
    "text": "We we want this in most of the cases, but I can imagine scenario when we don't need this. Right? So, yeah, I kind this case, it's kind of borderline because someone might say the If device never moves, if it's only connects to one network, right, you basically a lot of sticky tape around it. It never changed the subnet. It never changed the physical port. Then, yeah, we don't need that thing. Right? But, yeah, I'm kind of well, I just think, yeah, a must would be nice. I just don't think if it's I, like, like, realistic. Because I talked to a freelient person, yeah, I have some concerns. Yeah. But the sentence, we did not have the youth use case until recently. Right? Nobody, like, we do we do not have multi home deployments when it's Yeah. Not so many people are apparently doing dotonex. On the 6, and not just that, yeah, each might change subnets and so on. Right? So, yeah, I I understand why it was May like, not even saying my right. It was if you do this, you also probably do that. Right? So I We definitely need to make this happen before we start going to people and suggest them please deploy a PB6. Because otherwise, they will deploy PBCs. It will file miserably and people will continue to say, oh, this V Six thing is not ready for the market. At as an implementer, I I do wanna say, you know, that you know, the the what this draft is trying to do is, I don't know, three lines of code. 5.5 It's a mess. So, I don't know how many lines of code data's implementation is, but I I guarantee it's more than and it's kernel code and so on. That said, so so I guess one question is, if we tie these together, which, by the way, I mean, I think, actually, maybe the right way to do this is to is to go with that suggestions. Like, okay, Moss, if you implement this specification, you can always say, well, we don't implement that yet. And then some tests fail, and we're like, well, we don't limit that yet, and that causes some amount of back pressure. And maybe that's the right way forward."
  },
  {
    "startTime": "01:00:00",
    "text": "If, I mean, because the other thing is, like, if we never say anything, then nothing that will Right? So maybe we can get consensus on that thing saying like, you know, you know, host implementing the specification must, you know, also do 55. The question for the authors would be if we go that way, would you regret it bitterly? Because people are just gonna say, ah, that whole LRC is too hard. We're not even gonna That's sort of question for you. I would sort of you know, I guess I guess maybe, you know, trying to take my implement or hat off for a second saying, okay. Like, we have must here, actually, it would be better. And so but, again, right, if that results in, like, the your ULA changes not going through, would you regret And Again, because there are only three lines, maybe those would happen anyway. But there is a risk that tying two together would lesson. Another question is, if we don't say must here, when are we gonna do that? Yeah. We're gonna when are we ever gonna or the, you know, the muster the strength and make create a must. But, anyway, when are we gonna write? And our document says, okay, must 555555 Well, I think we need to clearly elevate the importance of this make it more widely known, as Tim was saying, as he's missed it. So, yeah, as the question is whether we do that here coupled with that or it's a separate document. So you need be done. David. Oh, sorry. I'm sorry. It's nobody important. It's just me. Hi, Nick. So as one of the co authors, you know, 1st of all, thanks for having this fruitful discussion, I just wanted to give an anecdote of a someone who is not an implementer but is tasked with doing things like turning the 4 off across, you know, large portions of big networks, I can say that when Features are not required It becomes a very laborious task to go to each vendor that you're"
  },
  {
    "startTime": "01:02:02",
    "text": "doing procurements from and ask them to implement something that isn't a requirement. So for example, you know, buying a a set of hardware you know, let's say you're buying 200 device Right? It's not a huge amount. It's not a small amount, and it doesn't do one thing that you need it to do. Of all, you have to convince them that they need to do it which is a, you know, often a a herculean task. And second of all, you've got probably a lead time of of minimum of 1 year to get that implemented. So, probably too, depending on the difficulty of it, which it sounds like this one was fairly difficult. So I'm not trying to sway one way or the other, but that is, you know, that is a a consideration for making something, you know, must required is that when you actually need it and it isn't available, it's often very, very hard to get it available, especially if you don't have a lot of leverage. Like, if you're not, you know, a may like, a cloud, you know, a huge hyperscale or something like that. So With that, I'll stop talking and, the next person can come. Developer. I'm I'm strongly in favor of making this a must. And for would rather pose the question as do we want to introduce the must in this document or do we would just want to start a new document that is a two page document that just changes as one thing. I'm not update to 6724, so this effectively changes sure if This is an 7 20. 4th. So Well, we can have a separate document would at least emphasize it more. You can point someone at that, I suppose. Okay. I guess that answers the question I was trying to ask you, which is how much overhead is doing except the document for it wouldn't take long to do, but it's up to the chairs. I mean, they they can guide us to I did a a quick search for, in both to see if there's an implementation section. I was just gonna ask you"
  },
  {
    "startTime": "01:04:00",
    "text": "people implement this or, unit test a policy table parser to verify the get the results you want. Good question. Not that I'm aware of. Maybe Nick, if he's listening as, an answer for that one. I did a lot of testing early on. With, with Linux systems in particular just because that's what I have access to. And the behavior was mostly what we expected. So I don't have it in front of me. It was actually about 18 months ago when I did it, but My testing of it was fairly straightforward. I believe Brian Carpenter also did a fair amount of There were some comments on the list as well about people who Yeah. There was no form. done likewise, but not formally, but it's I guess, you would probably politely call it Thank you. May I quickly comment on this? I recall that a few years ago, you know, I did some sasting on default address selection. Okay. I don't remember if he tested the particular set part, but you might want to give a presentation a drive on the 6 group. I I can't remember as a year, but I Thank you. From the operational point of view, This would massively improve the ipv6 implementations all around the world and the quality of communications of the end users. So please implement this as as fast as possible. You weren't quite at the microphone, but I I heard you. The remote people might not have. Okay. So so Thanks, Tim. I think what I'm hearing is that we will need a new revision. I think we probably would appreciate a implementation section. I think it's worthwhile that we ask the question in the room if there is support for a must 4 real 55. So we'll do a in the tool, unfortunately. You can inside of yourself if you want to. But yes. Means must if you implement this specification, No means"
  },
  {
    "startTime": "01:06:00",
    "text": "that we keep this should Exactly. And we have no option for no opinion. So please don't choose that. Oh, that's sucking very loud, loud sound. Plus one left side because I don't have my phone. That's Yeah. Great. Yeah. I think we have a have an answer? Yeah. There's a good steer there. Thank you. Was I was confirm that on the mailing list, of course, but at least I think that's it. Great. Thank you. I loved him. So the next man for the Pink Cross is Lorenzo Colette the Right? Okay. So singling the issue with 6 prefix delegation availability. Now if you think you might have seen this before, it's because you have several times, in fact, next slide. Actually, can I oh, okay? So it is a companion to the, exciting and and much discussed, DHP PD per device draft, which has been just made it out of last call. Just to recap, we are trying to find a way to hint to the device, whether it should use PD whether it shouldn't use PD. Okay. So the reason is that in some networks, for various reasons, scalability, for example, you might want to assign a prefix to a device. It's called it a rooter, most usefully. But it could be something that looks like a host is actually a router. And, So this this might be the case in large enterprise network. For example, like the Google enterprise network, you know,"
  },
  {
    "startTime": "01:08:02",
    "text": "we have have loads of address space. We have lots of slash 30 twos, and C route is plugged into our desk and so on. And we have enough we have plenty of space. We can assign a 64 to every host if we want. On other networks, like my home network, which only has a 64, Niro, if you're listening, please fix. So we don't have an arrest scaling problem with individual 128s. Definitely don't have enough prefixes to hand out a 64 per device. And at the moment, when I say 64, it's a Brian compliant 64, which means a 64, but if we change slack to another value, it's that other value. It's whatever value slack is supported so the, again, is we add a new flag to the PIO that says don't use this PIO for slack. But instead of doing that, start this PPD, get a prefix and do whatever you want with that prefix. Is it sign addresses? But also, you know, that prefix will be yours. It's delegated to you. But most importantly, don't do slack on the online prefix. Has to be in the PIO. Because it's got to be available to the device before it runs Slack. Otherwise, it will run Slack. And it's specific to that prefix because you might not want to do this for your LAs or you might have different upstream different, you know, addresses assignment policies. How many okay. I well, I mean, it's difficult for me to Yes. Yeah. Till he Okay. So your chairs don't wanna hear from you. Not yet. Not yet. So what what changed recently? Why am I here again? The PD per device, drafts is passed, working group last call. It's on its way to the shepherd right up. And also we've made some changes. There has been some confusion from a fuse putties saying, you know, is this prefix the same as the PIO? Why is it different? Is it different"
  },
  {
    "startTime": "01:10:01",
    "text": "and we clarify to say, yes, it is absolutely different. In fact, if you if you do PD, don't look at the PIO at all for the purposes of address assignment. You can still might want look at it for on link determination and so on. But don't use Aflac. Treat it as if the Aflac was 0. And, we also added text to ensure that source of their selection works reasonably well. That text is new. Will they pointed that out, obviously. And, our employment kinda cheat on this at the moment. So that we need to fix that. But, other than other minor changes. So we changed host to device, because the V Six ops document talks talks about device. Hopefully, this is all controversial. We have Rudy's hosts somebody coined hooter or whatever, how to, but, yeah, so but basically minor changes. And so what we are really doing was we were waiting for you know, the PD per device drop, which is the network side of this, to, pass working group last call before we could sort of come here and ask production. Which we are now here to ask for. So so Any questions? I see one question. So Martin, Please go ahead. Hi, Martin Munich. I would have several points here, just, one thing is if, the house should really disregard slack. If is just the p flag set. I would say that I understand that he wants to, eliminate the issue of multiple addresses per host, but I should, I think that, it should also consider our flag. So if the operator wants to have, only in connectivity between the host It's probably, for some reason. So"
  },
  {
    "startTime": "01:12:00",
    "text": "to disregard a flag only if the l flag is not set. It would be the one point the second one would be, if, the p fluct shouldn't be more global. Than the para prefix because if you don't have any, prefix, for auto configuration, and you want to use, PD for hosts, It's probably, more suited, along, M and O flag. On the RA. Yeah. If if you also change the behavior of the l flag, concerning l flag, So you could also do, this only for some prefixes, which are not on link. Yeah. Yeah. A global flag is tricky. Right? You have a very difficult problem when 2 different rutas, 2 different options have different policies. The ARC is very clear that, like, the last global flag or 2 we received wins, if you put this in the RA as a global flag, and then you got 2 routers. One of them says you can get PD from my bat. So if you have 2 rooters from the different administrative domains like a Comcast and an AT and T rooter, if you if one of them wants to say, yeah, I support this, and the other one wants to say no, you can't use a global flag because they will fight each other. And so There are still 22 rotors. No. The the flags are global. That's very clear in the RC. The RA for the the 4 4862 says the host receives the latest value of the flag from the latest our rights received. And, basically, every time it receives a different array, it will change its mind Okay. My my best. Yeah. And for the online flag, I think we can talk more, the I think you're proposing that if l equals 0, we wouldn't know. If the link is, off link, the the prefix off link, then, okay, just use PD. If it's on link, then, just, then also use a Slack because you want them end to end connectivity. And how would we prefer. Yeah. Go ahead. Not yet. So"
  },
  {
    "startTime": "01:14:02",
    "text": "I guess it's actually interesting because if you have cool one. Right? You still can ignore Slack, but you know that those addresses are on link. And you can treats them as a lead. Right? Have you ELSlack doesn't mean you you could have L equal 1, and a equals 0. Right? So basically, pflag is basically making a 0. It's all it does. Right? It doesn't change millions of l flag, So you still can talk to your neighbors using your local address or global address online. And actually V6 of graphs, talks about a bit about, to peer communication, And if you have peer to peer isolation, anyway, does murder, if it doesn't, if you want peer to peer, you might kind of rely on a CMP a redirection in one direction. For return traffic. And for I would go in, traffic. If you just treat l. If it's Swan or Kales and they put discovery for that address. Yeah. About it then, the behavior of, how for the host could be different, in, peer communication than other health. If Alpha uses PD, and half does not. Then the only communication behaves differently. But but it has to be because you can't just send NDA on the link. You have to send it up the rooter anyway. So let let's take this to the list, I think. I mean, l configures routing, not address Right? So I think that's also something where it's Yeah. Kinda weird to reuse it for that. You can also have it both, PD for a offline communication. And slack for online communication. Yeah. Yeah. But but it's overloading the behavior of l So it's, it's true that, you know, anyway, Let's take that to this. Yeah. Oh, and then there is also one, thing that auto configuration on the downstream is not just slack. So It's specifically, the draft, say slack, but it's maybe any of the configuration. So maybe just, Oh, it could be any mechanism at all. Yes. I agree. Yeah. I agree. Yeah. Yeah. Just like 666 Yeah. And, last thing, a little bit elephant in the room"
  },
  {
    "startTime": "01:16:04",
    "text": "is the claim behavior for smaller than 64. Yeah. I know that, currently, this is necessary for Slack, but there might be some, implementation that do not rely on slack. So they might also want to to use a similar approach So, maybe, just cross out the dislimitation yeah. Alright. Yeah. No. I mean, I think that also is think that is, you know, that question, I think, I hope, will be settled, you know, when when the IETF last goal for the for the PD draft. Right? Think it. That draft explains why there's this limit. And as it turns out, this is the only working group that can change that 64. So I think it's more productive. If we really think that that 64 is a problem, that we actually roll up our sleeves and try to change it. Okay. Thank you. But but we have to do something if we wanted that to happen. I don't think we should think we should compromise on the functionality of this mechanism. Just because we think 60 fours do wasteful, I think we should maybe plan that this mechanism is successful, which it may not be, then maybe we'll have to eventually change if we see that it's using up too much address we should change the cycle limit Yeah. Just one note on, that, maybe there should be also some behavior of of the host, published their what to do if it is declined. So for example, if, ISO operator wouldn't, give you such a 64 and you would, part of your implementation or, the host would actually need a little bit less than, Okay. Should it just ask for a different length then? That would be a violation of the RFC of the PDR receipt if it was published. Right? So it wouldn't happen. Okay. Thank you. Yes. Yeah. Thanks, Martin."
  },
  {
    "startTime": "01:18:01",
    "text": "Team you have the last word. I'll make it quick. The l flag discussion. There's a lot of unnumbered networks in particular in broadband space that gonna be problematic if you make decisions. So we careful. What you do with the outside? So, okay. So Before I ask for the rooms view on the adoption call. Can we just get a physical show of hands of how many people have read this draft. You can delete the slides now. K. 1, 2, 3, 4, 10. Yeah. Let's fair enough numbers. So let's, let me press the tool here. And we'll confirm this on the list, of course, regardless, but at least we get the sense that we And among the people who said no, Would you mind coming to the mic and and stating your objection? Cause that you know, that's very interesting to hear. You know, or you can take it to the list for sure. But, The mic is open for Objectors, at least at least Corey, you might have to open the queue for that. Objections have, retreated to 2 and number, I think. The threat of asking themselves explain themselves on the open mic is sufficient to then take it to the mic and post anonymously if that's possible, but we did more to scare anyone away. Apologies for that. But thank you. Thanks, Lorenzo. Confirm that on the manual Chain. Then I think it's Margaret 2 And I just wanna emphasize that since this is has been a slightly contentious topic in the past that Let's try to be gentler than we have to be"
  },
  {
    "startTime": "01:20:00",
    "text": "It's a Please go ahead, Margaret. So this one advances the size. So, I just wanna start by saying, this was not you know, all my ideas. They're 4 of us listed here who've been talking about this and started with people other than me. In fact, but I agree with it. And somehow got the hot potato of presenting these slots. So RFC 6296 is the nptv6 specification. Let's go on to the next slide. Oh, I do that. We need to set some terminology to have a useful discussion. We're not trying to shift opinions, but, Nptv6 is this proposal. Okay? It's a 1 to 1 stateless algorithmic checksumneutral prefix translation algorithm. The primary use cases are address independence and site multi homing for site using provider allocated addresses. NAPT. You can have it be 66or44 or other choices. Is stateful math with port translation. K. That allows you to share an IP address between multiple nodes, using different ports, etcetera. Nat is stateful address translation without port translation. And net 66 is an ambiguous term. All over the Internet, you can find things that say Nat 66 is this specification. Or that Nat 66 is napt 66. So maybe we could try during this discussion because it's ambiguous. And if we wanna specify one of these things,"
  },
  {
    "startTime": "01:22:01",
    "text": "actually specify it. So these are the definitions we're using in this presentation. Next, I'd like to keep doing that. The, the background from, you know, 2010. Was that ipv address shortages were not the only issue scaling issue threatening the internet there were a lot of presentations at the time about the growth of the global routing tables and how In fact, the growth of global routing tables might threaten growth of the internet before Address exhaustion. And so there was a lot of talk at that time, about how to fix the growth of the global routing tables. And most of that growth was not because we had very large entities, and there were so many of them. Okay? It was long prefixes, being inserted into the top level BGP routing tables, because of the way people were doing site multi homing, or the way they were using provider independent addresses and moving between ISPs. Both of those involved inserting addresses for Small and medium sized networks. Into the global routing table to make them work. And That was what was, identified as the source of the problem. We moved toward provider allocated addresses to slow that growth. The swamp space in ipv4 was still there. But we stopped allocating provider independent addresses, two sites and told them they had to get their addresses from their ISP. And we also made most of the IPV 6 address space provider allocated."
  },
  {
    "startTime": "01:24:00",
    "text": "With the idea that only people who basically are their own ISP could get provider independent addressing. But edge networks, that small and medium organizations, people who weren't their own ISP. Still needed address independence so that they could change ISPs if they wanted to, without having to re number their home network, or if their ISP remembered them, which happened with disturbing frequency. So we started to look at how to fix that IPV 6 without resorting to network addressed port translation, like most people were doing in ipv4. To resolve this problem. So Let's go to the next slide. There were a number of proposals I, in my mind, group into 2 schools of thought, about how to solve this problem. Most people agreed that these issues were largely caused by the fact that the IP address conflate the location of a node the topological locate location on the internet, with the identity of the note. And that both of those things were squished into 132 bit value in ipv4. And a much longer value in ipv6. We didn't really change the way routing worked. It was still The prefix was used to find the network the node was on, and the there was a subnet that was used to find which subnet inside that site. And then there was a host portion was used to identify the eventual host. And people started talking about how could we split these things. So ID locator split in order to solve Some of the problems that were causing the exponential growth of routing tables. And these proposals stones are 2 categories. Some of them did rewriting of the address"
  },
  {
    "startTime": "01:26:01",
    "text": "or some portion of the address at the edge of the, edge network. And or the border of the edge network. And some of them did tunneling, like, list is probably the best known one of those, but there were several at the time. For ultimately, these categories form a continuum they're not really as different as you might think. Because address rewriting mechanisms are similar to And if if you think of them, they can move right up to almost being a tumbling solution a degenerate tunneling solution where the information to build the outer or inner header is configuration at the edge And tunneling solutions can come toward Nat Solutions by doing things like, coming up with ways to compress the inner header, and to some sort of transference at the edge, in order to reduce the MTU issues and so forth caused by tunneling. Okay. Yep. So, anyway, there's trade offs between Address rewriting, and tunneling. Address rewriting, which nat is one of the things that can do address rewriting nodes don't know their global address. There might be a need for ALGs or the use of DNS names. In applications, transport layer, check some corrections needed, There's stateful, translation issues with brutalness in the network no connection, continuation if the router reboots, for instance, and poor answers for asymmetrical routing and dynamic routing in the Internet. And you need to have a topology aware or split DNS. For this. Tunnels have MTU issues. And they also need a mapping function. To go from what outer address should be mapped to what in her address, etcetera. They're not incrementally deployable, which was a huge"
  },
  {
    "startTime": "01:28:01",
    "text": "problem with those solutions and continues to be. Because because you don't get any benefit unless the other side has a a tunnel endpoint and They also need topology aware of split DNS. So go ahead. So we proposed Nptv6. Which is a 1 to 1 prefix translation It's algorithmic, and it is checks of neutral. So, notes still don't need to know their global don't actually know their global address. And there's still a need for topology aware or split DNS. But most of the other problems with Both kinds of solutions are eliminated. So next slide. Document history, originally published in 2008, discussed in behave, republished in 2010. Discussed in 6 man v six ops and elsewhere, the the name was changed at that time by Fred Baker, who's a very smart man. To to, emphasize the significant differences between npTV6 and traditional IPV format, whether or not it's a port translation, And, Fred also wrote the code and did the proof that the algorithm would actually produce 1 to 1 results. And it was published in 2011 as an IETF experimental RFC. But there was no specific defined experiment or term of the experiment, which was typical of experimental RFCs at that time. And it said that it was published for examination, experimental implementation, and evaluation. Next So how did that experiment go? Over the last 12 years. It's been implemented by many vendors. And widely used to solve the problems it was intended to solve. It's been implemented by Cisco Juniper Huawei. You can read and PTV 6 has been widely used to predict edge networks."
  },
  {
    "startTime": "01:30:00",
    "text": "From, ISP renumbering and ISP changes, and it simplifies deployment of multi home edge networks. All without needing to insert a long routes into the running tables. There's no other solution to these problems that that doesn't have some compromises. Okay? And nptv6 is less disruptive and it's incremental deployable. So we think the experiment was a success. Next slide. Why a biz document instead of just writing a little doc saying we wanna move this to the standards track. It's because we need some minor document changes. The ICMPV 6 error handling is not up to current snuff. And we would wanna do that. Probably taking some language from RC 5508. We need to clean up some editorial issues. There's a few typos in the sentence fragment, incorporate the 1 erratic that we've received on this document since it was published. Why move it to the standards track? The experiment has been successful. It's technically mature and widely deployed, and it's well understood. We're planning to do a document update, and we think it makes sense to publish that updated is a standard check document. To reflect its widespread implementation and deployment. And now you can ask this question because your chair like human. I'll probably let Bob Cherry, but should we, we can run through the microphone queue first. I think we have Julius Lawrenson and Eric Julie, your 1st. Okay. So First of all, so I already told you some 10 years ago. Close it to the mic. Okay. So I already told you some 10 years ago, how grateful I was that you wrote it down so that if people implemented, at least they will implement it. Right? But I think I'm not alone in thinking that we rather wish people did not"
  },
  {
    "startTime": "01:32:01",
    "text": "implemented. The draft is very in assistant. In fact, it goes on for 6 or 7 paragraphs saying don't implement this. Use this. I know. Don't even wanna misuse this, but people agree. You get to the bottom and there are still a couple of issues we don't have a thing to point to. Order to solve. It's not introducing any new code points and any new values. So there isn't any really strong reason for it to be standards track. The since standard track, I know that's not what standards rights means that it's sometimes taken to mean that means the IETF wants you to implement it. And in order to avoid this kind of misunderstandings, I would much rather prefer it to be published as information. So Okay. Lorenzo Cleary. I I don't see a reason to republish it at all. I I don't wanna be violent. I'm not gonna be violent. But I do pretty strongly disagree with this, did have will, I think. I think Most importantly, I see you know, one thing that that is important to note was ipv4 couldn't do multiple addresses per host, and it couldn't do renumbering in any reasonable way. And those 2 are things that you need for multi homing with PA space. Right? I think if you look at and the other thing that in, when this a document that was originally written since then, we have made a lot of progress in multi homing solutions that actually involve PA space. I mean, I think Jen has 3 or 4 of And I think we need to I personally believe that implementing something like this or relying this on this would essentially be admitting defeat, in terms of our ability to give application developers a transport that can give them end to end connectivity. Something like as simple as if I tell a remote pair what my IP address is, will it be correct? And w w w with MPT V Six, you can't do this. So I think I think I would much rather first of all, I don't think there's any anything that needs to be done here,"
  },
  {
    "startTime": "01:34:03",
    "text": "I would also if if we do, I do agree that we have problems that we have not yet solved, network extension being 1, which we are, believe it or not, how to work on, actually. In in our in in the ITS in a minimal way. But also, I think multi homing I think we would be, for example, much better off, pouring effort in implementing world 5.5 and getting sort of the the multi homing stuff that Jen has already published. Implement it, implement it, and and used. Right? I think yes, there are cases that we still don't have an answer but I think we are not too far. And I don't think this is gonna help because Yes. It might solve those cases, but a terrible price. Did not think that was violent at all. Thank you. Disagreement is not violence. Sorry. Eric Vinc here. No headed on, so I don't have my cowboy hat. Fair to the chat. When I saw this, I say, wow. I will invite you, but respectfully disagree. Right? But I think, yes, why not? Would be nice to ever propose alternate standards or propose default solution or something like that. Doesn't exist, of course. So I don't object To move it forward, If you do move it forward, please add an implementation section to have approval later. If I look forward to go David Lampter. The one thing I'm concerned about with moving this to Stanos Direct is that it's going to end up on requirements lists for government entities, whatever, and it's actually going to prevent people or force them into implementing it even if they don't want to. And that is the for me, the the concern that pushes me against wanting to put this in standard tracks. I'm okay with having the feature. I think this draft is Alright. The the the experiment is enough to describe what you should do. And I'm I'm low to put it on Sundar's tracks because I know people will require it, and I"
  },
  {
    "startTime": "01:36:01",
    "text": "still wanna be there. Yeah. I mean, this was an answer to the fact that ipv6 Nat was already on requirements lists. And that we did not want that to be implemented and we said if you must implement this instead. We are really sort of out of time here. So let's yet. Nick, and then I'm gonna do a poll, and then to move on. Nick. Oh, there we go. So, I think the my point is really quick. Basically, like, those requirements lists are already there. And for the most part, they do not consider what track the RFC says they need a feature they put it in a RFC or, I'm sorry, they put it in an RFP I've written a million RFPs to know that that is very often not considered at all. So I wouldn't be terribly concerned about that. And that's really all I had to say. Okay. So Starting a poll. Cool. Seems like there's more support, but there is done. Opposition. We we will take this to the list. That that seems reasonable. Thank you. Okay. Okay, Tom. So it's, in flight removal of ipv6. Let's get your slides up, and you can see if you can figure out you have a pink box at home, go. I think the same thing applies to this presentation. So be gender than necessary. This is a topic we have discussed before."
  },
  {
    "startTime": "01:38:01",
    "text": "Know, different flavors. Go ahead, Tom. Okay. This is a new draft for removal of, hop by hop options and routing headers in flight. I'm gonna focus mostly for this presentation on the hop by hop options. I'll mention the routing headers, but the draft does cover both of these Next slide, please. So the motivation for this starts with the drop rates of hop by hop options. I would talked about in the previous presentation. I did, there is ethnic data that was recently collected that shows pretty sobering results. The picture on the top the all read for the whole world, shows that a hop by hop options are pretty much dropped, universally when they go out onto the Internet. So then the data is greater than 99% drop rate for hop by hop options. Picture on the bottom though is destination options, which clearly fair a lot better on the Internet and help by help options. So that then raises the first question as why are destination options looking better than hop a hop options. And I think RFC, 1998, goes a little bit into that. Fundamentally hop by hop options, target, the infrastructure. So when we send help by help options, the intent is it's actually processed by routers in the network, not just the end host. And given the history of hop by hop options going back to RFC 2460, and the requirements that 5, nodes have to process them. The slow path, that resulted from them. I think what's happened, pretty clear that hop dropping hop by hop options is now a matter of policy as opposed to capabilities or requirements. So that being said, I think"
  },
  {
    "startTime": "01:40:05",
    "text": "It's unlikely that this situation will change anytime soon because we'd fundamentally change the policy perspectives of All of the providers Next slide, please. So with that, question is how do we move forward to make hop a hop options useful? So one of the things I would, propose is that we assume hop by hop options really only use unlimited domains. We those drop rates, it's unlikely we'll ever see hop by hop options that are universally useful across the internet. So If we assume this, the hop by hop options are relegated to limited domains, then if routers of that limited domain process hop a hop up, because they're providing a service like path MTO or IOM or one of those, that within that limited domain, they will make sure that help by help options are viable. So if they're providing the service and it kind of follows logically that they're actually support them throughout the whole limit of domain. So the question then becomes how do we limit help by help options, to limit the domains. And, again, this will also be applicable for, routing routing headers but the motivations are slightly different. So, again, I don't wanna go into that. There's 2, kind of rules of thought on this. The first one is have this under not use hop by hop options if the packets if it knows the packets, they're gonna leave the limited domain. So the question then for the sender is how do you know that that the help by help options are are not useful or useful. So one we could determine this by looking at the desk an agent address prefix, which works if there's a prefix that identifies limited domain, here. In complex networks"
  },
  {
    "startTime": "01:42:04",
    "text": "at scale. This doesn't really work because it could be many prefixes the limited domain, So there's a lot of, complexity and scaling there. Second one, We've proposed this before. Do a sort of happy eyeballs probing. To see if the ex extension header is viable to the destination. I've come to believe this would force a lot of complexity into implementations. We'd have to recreate hoppy eyeballs, but this one would be for extension headers. There's a lot of state that has to be tracked. It has to be bidirectional communication. Thinking about all devices, especially low end ones that would have to do this just for using, basically, a a feature that's in an internet standard, This seems like it would be, very costly, and probably not feasible, easily, and implementation. The third one is if we get the information about viability from an external source like routing protocols, that would also be feasible. But the problem there is kind of the same thing. We now have to have host participate and routing protocols or add additional protocols So this seems like a a really difficult problem with not an immediate, feasible solution as far as I can tell. Next slide, please. So the other alternative And this is usually brought it pretty quickly whenever we talk about compatibility, with limited domains, why don't we just tunnel across limited domain? The idea of being when we tunnel the out outer headers could use things like hop by hop up options. And then when packets leave the limited domain, we can remove the tunnel and the hop by hop off the internet. So in principle, that works, but that raises a few questions. So the first is"
  },
  {
    "startTime": "01:44:04",
    "text": "If we do say an IP IP encapsulate from a source with hop by hop options How do we know what the destination address of the tunnel is. So this is tricky because in this case, we really want to know what the egress router address is For packets, host don't typically have this information. They might have it if it's some if it's a routing header. But in the case of just using generic hop, hub options. Would have no way to know this package even going to go to an Egress router, much less which one it is. And, actually, the network itself if they're doing, sort of next hop routing, it wouldn't even know that even the first hop router wouldn't know what the ultimate destination is. So it's really difficult to find what that destination is. Another proposal. This was mentioned, I believe, by Brian, on the list was why don't we encapsulate packets at egress? So if packet comes in to an egress router with hop by hop options, we could actually tunnel that without hop by hop options in the outer header, to a destination on the internet, but then the problem becomes we have to decapsulate in all host on the internet. In either case, the other issue with tunneling, obviously, is it does incur a fair fairly significant in overhead. So It's not, I believe a preferred solution. Flight, please. So this draft proposes that we allow routers in particular egress routers or ingress routers to remove hop by hop options and routing headers in flight. The benefits of this is packets, that started with hop by hop options may in factory the destination. They wouldn't have them, but at least we have communications established across the internet as opposed to them being dropped. The hop by hop options actually would be applicable up into the point they're removed. So"
  },
  {
    "startTime": "01:46:03",
    "text": "when we send a packet in a limited domain with help by help options, the hop by hop options would be applied up until the point we hit, for instance, an egress router where they're removed, Also, this is pretty efficient to implement. It's basically just a copy, or we can use some gathergather list. I don't see that routers would have much difficulty implementing this. Next slide, please. So there are consequences. Rc8200 does clearly say not to do this. However, thinking about it, helping options are already kind of best effort anyway. From RC82 100. And more importantly, I haven't seen a case where this breaks anything. So correctness and the spirit of the law does seem to be maintained with removal. Help by help option removal can only and routing header can only decrease packet size So we shouldn't see any issues arising with, path MTU. The destination doesn't see help by help options. That's true. However, if the packet was dropped, they wouldn't see see it either. So kind of a psychology, ICMP errors wouldn't match what was sent I don't think that's the worst problem in the world. We already have cases where that's That's true. ICP errors for that. Don't really work and besides that people tend not to accept ICMP, from the Internet anyway. There's always a chance that bugs could allow packets through a configuration without the help by help option removed. That is a policy problem and configuration problem. Not a problem of the protocol because it's it's still correct to send hop by hop options, out of the limited domain. Next slide, please. So next step so this is pretty new. Please comment I would like to do a PSC. I think that's pretty straightforward."
  },
  {
    "startTime": "01:48:00",
    "text": "And possibly if there's interest, we can ask for a working group adoption. King, king, I'm No hats on. I just realized actually that there is another a result of are removing. You would never be able to measure hope by hope propagation anymore. Right? Well, That that's true. Right? But We don't have to remove. Can certainly, do the measurements There there's no rule that says you ever have to remove. This is and optimization for traffic and practice. The other point I would point out The term limited domain is fairly, brought here. So if we happen if, say, we're dropping help by hop options at an egress router, and we happen to know that some destination does support hop by hop options in the past does. Then we don't have to drop in that case. So logically, we extend the limited domain to include that And if if if if if vendors and and providers do start to support them, then this gives us a path to incrementally add those expand expand hop by hop options. So I don't think there's it's so inflexible that we couldn't do measurements, or we couldn't have fallbacks. But this is just, I would view it as an optimization to try to make these, helping out options more useful. Just clarification. Currently, if I block them, you see that the measurements, if I start removing them, it would look like I'm propagating them, So it might really look very, very green on monitoring while it's actually not. And if you okay. So I'm for the sake of time. There's there's another thing here. Next person in the queue. Or out of time. Nicole. Hi. Hi. Nicole seniority, sign association. So, I did not really,"
  },
  {
    "startTime": "01:50:01",
    "text": "understand why you want to re also remove the, routing options and I think if you do that, you basically preclude any into domain use cases where you use, routing options, And, far as I remember, these routing options are not dropped as much as hope I hope options. So I was wondering why is that? And Well, I I think we might have, a use case. So we you're gonna have to take this to the list. We are out of time. So, to get to the last presentation. Yes. Please ask that on on the list. Thank you. Of small. Okay. Hello. This is, John Pujang. Okay. Today, I want to introduce the basic sport, such as the IP, but it's over by the GPU to exit next to select. Next. Oh, I mean, okay. So you can see, this figure shows the 5 g core, and later accessing network, architecture, to support the, fiber GPU to So the B2X means, and the beaker can communicate. Also, the beaker and their own and the peaker, motorcycle, and the scooter, they can communicate each other. So in this scenario, you can see, nowadays, you know, autonomous beaker, luxury beaker, or scooter, or many, you know, smartphone users that can communicate for some security or other import payment services. So this is the, abstract vehicle network architecture. You can see the, strategic PP, detector. They support a multi hub using pie, PC5, reference point, if she means that to be a link. Also, beaker to, infrastructure case"
  },
  {
    "startTime": "01:52:03",
    "text": "the beaker and that, you know, the be can communicate. So we want to clarify this kind of a vehicle and infrastructure on the tow, integration, we should be considered. Next Okay? Oh, oh, next. Okay. Next. That's right. So, we needed to consider, a previous line So, Now several things that we need to consider for, IT analytics over, biweekly to the first one is that the mtu2nd frame format and link a local address, and the subnet structure and the slack. So we needed to clarify even though 5 g so the 50 document, they specify something, but there is not a credit or some of the things that we need to clarify. So MTO case, we just Can they reuse it from, IP such as, I think that's the over, go to the 11 OCB. RPC, we can reuse it. And the frame format case, we, so the find the radio and, logical Incholayer, and IP was in 6, so we can, that advantage deployment. And the legal local case, we can use, and Also, so this PP talking about the saying, depending on the situation, can be, the delay that can be skipped structure case, you can see this figure shows a multi hop vehicle at our network case. So we should consider certain cases, the nature that the case, affect IIID should be used. In that case, some complete of interface ID, happens. So we need to consider certain on TAD, from time to time. So the question is, select cases. You can see here, it is bigger children, right, car BACD, right? So d is not connected this vehicle. So, in the past,"
  },
  {
    "startTime": "01:54:02",
    "text": "Cardi used the green color, but certain cases in the highway, the card CNDs merged somehow, can get some pretext from a car seat. And then can configure, global IP or unique, local IP, uniqueness address So we have, you know, a forecast chance here which means if, you know, the multiple speaker are case, some vehicle can pray or lower over the router. So in that case, which yeah, feature, you can be, the router. And the secondly, what if I give us the prefix is available for the speaker. So how we can select also, hitch, node will be on vouchers. So we need to clarify. And the lastly, some you can see, if the beaker car decays, doesn't have any connection with only having a local order asset, but certain cases, in the middle, speaker can, attach and then multi hub connectivity can be provided in the case how to hamper this one. So, current set of PP, they don't consider, but of scenario, just the AMF, access AI manager of the function case, but single hub the mobility management is considered, but we need to consider, this. I brought this one because the IP wave case, we clarify this problem, but we didn't make any extension at 2006, but I want to make some, some draft if this is, the value we're working I want to. Yeah. Work with you guys. Thank you. Any question to comment? Any comments? Encourage you to read the draft and comment on the list. Thank you. Okay. Thank you, Bob. Well, I think we are done."
  },
  {
    "startTime": "01:56:00",
    "text": "So thank you very much. Even a little early. So, And then it will have a session in Brisbane in next spring I think. So fall whenever it is. Well, it depends. But it's probably the spring in Brisbane. Oh, I the other way around. Yes. Thank you. Right. I thought that would Is that tonight? Track. And good month. She she's at work. Destiny, the option would be despite this very. It's like 7 seconds before. That was very Yeah."
  }
]
