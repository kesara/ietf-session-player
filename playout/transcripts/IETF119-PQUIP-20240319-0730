[
  {
    "startTime": "00:00:01",
    "text": "I'm Paul Hoffman. Sophia is on a remote And, Let's get going? Actually, did I just get something from her? So this is the note. Well, you already agreed to this. For some of the working groups, this is and and it's in your registration pack and such some working groups, this is sort of proforma. On the other hand, We know in this working group that patents are important so is a lot of other intellectual property. So please If you're if you don't feel like you have read the note well, please go read it again. Your contributions are important, but they're very relevant here. And there are some other things that other people put up for, at the beginning of working group meetings, the let's be nice with each other and such. That hasn't been an issue here. But definitely, It's Tuesday. Go read the rest of your of the welcome packet. So we've got a fairly packed agenda especially because the the last bullet item, the remainder's gonna probably run on. So I'm not doing any agenda bashing. We're just gonna get into it And, if there happens to be time at the end, we can do open mic for everything. I suspect there won't be, some of the the last two have a lot of slides. So with that, let's start a with post quantum cryptography for engineers. Oops. And it does I'm confirming. And you can just tell me next. Oh, yeah. Hi, everyone. I'm Mauritra, and I'll be presenting PCC for engineers today. Yeah, it's been a really interesting day. We have received a of reviews and a lot of comments, and, Let's move forward"
  },
  {
    "startTime": "00:02:05",
    "text": "Yeah. A brief overview of the draft. To somebody who is new, it explains why engineers need to be aware and and post quantum cryptography. And it emphasizes the potential impact of UCs and the need to transition to post quantum algorithms to ensure long term security. It was adopted after the ETF meeting 117 And since then, we have had many iterations, for that, Yep. Yep. Yep. Some changes since the IT of 118 meeting in Prague, we have added in, section basically, there's a subsection where, We provided the signature sizes for LMS schemes as a comparison to, basically stateless scheme, which is sphinx we are reading a small cipher text on the caution of, basically, cipher commitment in canvases, Diffie Hellman, we had it in a point of hybrid games being CCA 2 robust. That means if you want your hybrid schemes to be in CCA 2, you should have at least one in CCA to, scheme in there. And we have finally changed the names to, mel camimality as a SLHDSA and event DSA, which will be marched quite soon. Yeah. The elements key and signature sizes, we have defined according to 4 parameter sets on the hash function, the length of the digest the tree height and as well as the wind and it's coefficient somebody familiar with RFC 8554. And, we further tear for the draft. We have a table of, the largest size of 32 bytes. And please go ahead and look at the table and please provide some review if needed. Next sentence, we'll probably sync name change for the PQC algorithms and we'll merge the latest version. And will provide some minor updates soon via PR. On GitHub."
  },
  {
    "startTime": "00:04:04",
    "text": "And, yeah, that would be all there has been too much for significant changes, and we don't foresee many significant changes. Only minor in the future. Thank you. So he went very fast, which is great. So instead, I there might be some questions of could this be in the draft and such please don't bring them to the mic That's great on the list. Does anyone have any questions on the updates that they've done, you know, like, the the updates since the the last two versions that he covered. Okay. It this has been this has been doing well on list a lot of people actually have concerns about should we be going this deep? Should we not be you know, should we be going less deep? Those are all great discussions on the mailing list. It's a longer document than where it started. Yeah. It was it's around 40 to 43 pages right now. Yeah. However, what many people have discovered is people have lots of questions, and we don't know if we're answering too many of them. So let's keep the, keep the discussion on the mailing list going. We're not in a rush to finish this, but at some point, we will, you know, call it baked and send it to IETF last call. Thanks. Thank you. And Next up is terminology. Oh, Sound alright? We can hear you, though. Yep. Awesome. Well, hi, everyone. I'm Flo, and yeah, I'm just gonna talk hopefully, equally briefly about the terminology draft. Next slide, please. So this is a very simple context slide to the one I've shown at the last few meetings, this is a information draft to standardize a glossary for post quantum traditional hybrids, So constructions, which use both post quantum and traditional algorithms, I'll note something here, which is why it's an information draft, It's"
  },
  {
    "startTime": "00:06:03",
    "text": "it's still information that is important that it stays stable. Because a lot of the protocol drafts are relying on the definition staying the same. Because they're using them. So the aims are are there. You can read them. I guess the big change since the last meeting, is that we had a working group last call, which finished last week or the week before. And the conclusion from that was that it was not ready for publication yet. But I just want to say thank you to everyone who contributed to that because as always, a really good thing about working group last call is it will pull people up with work to tell you, what they'd like to get changed and that's all really valuable feedback. So what I was gonna talk about today, I wasn't go into kind of changes that have been made in the latest version of the draft because you can go and look at the deaf. I'm happy to talk through them if people would like to. But what I was gonna focus on was the kind of I think of the major considerations following work and group last call I'm also very happy to hear others' views about what their takeaways are of those major the durations. So next slide, please. So I think there are kind of three things that came out of working group last call. Plus a bunch of small things which will just be updates. So the first is There are there are kind of various things that we've achieved from this draft think that we can probably all agree that, Language around post quantum, language around hybrids, is gonna develop probably for the next decade. We're never we're never gonna be finished here. But there's a academia and an industry to evolve. And also the language and also the concept to evolve. Versus. Trying to get this published so that we've got some stable terminology for those drafts and those papers to use think I think there's a balance here, and it's just a choice to be made by this group."
  },
  {
    "startTime": "00:08:03",
    "text": "I'm interested in others' views. I'm interested in any experience that have of doing work like this, but that's something that we need to bear in mind. It might be the case that this just sits aside, and we wait with it. Mike, did you wanna come in now? Or Yeah. Test. Yep. Yep. My password. Yeah. So, I mean, if this is the goal, then I wonder if if we should remove some of the more academic y stuff that's only been coined in the last year. And sort of strip it down to the stuff that's older and more stable. I've, I think that's a really good point, and I've been wondering about that. In particular, I'm not sure exactly what you're thinking of, but to my mind, the most academic language is the stuff around signature spectrums. And given that that's now in a different draft, I don't think they'd be much lost to the IETF as a whole. That was removed. So I think that's, That sounds very reasonable to me. Yes. Exactly. So that that was the first kind of big, big question timings. And I think this this kind of comes to ahead a bit once, once NIST published their draft probably next IETF meeting hopefully, and but, yeah, discussions ongoing there. So the second big thing, which has come out a little bit on the list, but also in and separately is the trouble with the word composite. I think there's there's lots of drafts that use use for a word concept, it seems to be a kind of helpful concept but actually pinning down exactly what composite means versus what hybrid means. Where you define things as composite, where you define things as non composite. Turned out to be a lot more complicated than it appeared at first. There's discussions ongoing about this."
  },
  {
    "startTime": "00:10:02",
    "text": "Those discussions are mostly not on list just for ease. If people have fought and are interested in included, please do let me know. This has been a challenge since starting the draft. So anyone with any really bright ideas is incredibly welcome and I can go and find more detail if people are interested. And then I guess the the third point is sort of related to my comment, but also to some of the feedback on the working group last call, what what words do we actually want to find here? So of that might be how academic do we want to go Some of it is, is this language actually going to be used or are we you're just making it up for the sake of this draft? Some of it might be I don't like this idea, so we shouldn't give people the language to discuss it. Personally, I think I disagree with that. I think if people want to use phrases, good for that to be clear. I guess what I'm asking for on that final the point is that if you're working on a protocol draft, that you'd like to have definitions for, you would or you wouldn't like included, then please do let me know. There were some really helpful feedback on this at the last meeting about turns around certificates and certificate chains, But, yeah, any strong opinions, do do let me know. So next slide, please. No. Next steps. So yeah. So I'm haven't updated the draft yet, but I will be making updates based on the work loop last call comments and any other comments on the list. Before, hopefully, the April interim meeting. Give people time to feedback on that. And, yeah, and then I'm sure there'll be lots of discussions to try and add precision to what composite means where we use it. I think the next slide just says get in touch. Yeah. Please please do get involved, if this really needs to be a joint effort, particularly,"
  },
  {
    "startTime": "00:12:00",
    "text": "from individuals who are working on other drafts around post quantum hybrids? Steven. Yes. Steven, Hi, Steve. So what are the one of the comments I had was that I think Some of these new kind of forms of being hybrid, great new kind of anti patterns And I suggest it would be good to have some names for those. I don't know. We don't need to figure out what that should be now, but Is that something you think is worthwhile or something you think is not worthwhile? I've as I said before, I think naming naming things which are people want to be able to grasp is useful. And if that includes anti patterns, it wasn't some, then I'm happy to do that. It wasn't something I'd fought off before. But, and I, like I said, I haven't really thought through the details, but your comment a work group last call flagged it. So it's something that I'll I'm certainly not opposed to, and I'll, see what we can do and the updates. Great. Thanks. I I mean, I just I think it could be useful to to save people time elsewhere when talking about, you know, reusing a a classic, private value multiple times for different things. So some terms there would be good, I think. So, Steve, can you I'm not gonna say send list I I the whole you know, to the mailing, all all of the ones you've thought. But can you prime the mailing list with at least one anti like a named anti pattern that you think of? I'm I'm not sure you'd like my name. No. No. It's fine. But, I I Doesn't matter if I like it or not. I I think I did that in the in the comment. I already Okay. Okay. Just I I would like to see people go, oh, well, if we're gonna talk about that, we should also do this and such and get that going. It's basically you have hybrids and you could reuse the classic part Yep. Self, you know, signature standalone and as part of cars, Yep. Yep. Okay. Great. Thanks. Yep. Great. Thank you, Flo. Thank you. And then coming back to chair slides."
  },
  {
    "startTime": "00:14:00",
    "text": "Suboxone. Spectrum. Yep. Okay. So this is the quick update on this. Oh, Rita. I didn't know that you were you didn't have slides because this was gonna be fast. Do you do you want to do you wanna say where you're at? Quickly give an overview. I know we have about a half year. Okay. Thank you. So the I'll give it a quick First of all, overview and reminder of what this is. The high res the signature spectrum's draft is really aimed at providing a trade off overview. For those who are looking to implement hybrid signatures, about what the different ways of doing this are and what does security properties are and so forth. So a reference point because there actually are quite a few trade offs in a different place. That, that, people come about this. So what we've done so far is we did an adoption call that's it, went feedback, which was fantastic. Thank you for that, and I want contributors. We are incorporating it. It was all very straightforward. To have a new version available in the next few days. And then we'll do another obstacle, and thing. We go from there. Okay. Very good. Do you wanna explain the weapon behind your head since it's related to the IETF? Oh, that's the secret. Great. again, So, 1 once the authors put in a new draft, that would there'll be another call for adoption and discussion and such like that. So that's how we will go. Okay. So, Alexander, I do. Or I believe I do. I should. Testing."
  },
  {
    "startTime": "00:16:00",
    "text": "This is you. And you have 5 minutes. I'm Alex. I present this on behalf of the other people who coauthored this thing. Next, please. This is a document that aims to create a exonomy, of use cases where post quantum crypto is relevant as well as a taxonomy of approaches we can apply. And the idea is to give you some sort of guidance to which tool to choose for which particular job. And a secondary objective is to start a discussion about the subject Well, the discussion has already started quite a while ago, so maybe just, you know, foster and keep going. Next slide, please. What has changed since the previous IETF? We got some feedback. We incorporated into the document, As a result of that, it became smaller and easier to read. We hope And we introduced, category, of of use case. A cat a categorization based on 3 different criteria. That the first one is how long does your thing have to be out there Shortlift, or very long lift The second criterion is What kind of protocol type you have? Is it something that has some sort of negotiation functionality inside, or is it you configure it and then you set it and you forget it. And the 3rd criteria is, do you have to be backwards compatible? So you take those 3 elements, and we also put together a flowchart Which hopefully will help you go through reasoning such as Do I need Becker's compatibility? No. Do I need to have it out there in a long, for a long life cycle. Yes. Use x. So should be easy. We hope this flowchart might be useful at least to start discussions within teams, or if you strongly disagree with something,"
  },
  {
    "startTime": "00:18:00",
    "text": "that flowchart. Then, of course, go ahead and provide feedback. Next slide, please. The next steps as we see them is, I would like to collect more feedback from everybody. Whatever challenges you encountered in your attempt to solve the problem, I'd like to hear those stories. Whatever questions you've encountered, I would like to know what they are and perhaps in the next iteration of this document, we formulate solutions that address those specific questions. And I would I want to point out that I would rather prefer to treat this as an anthropologist talking to people from different tribes rather than an auditors scrutinizing your actions for the past, year, you know, a very high level detailed. So it should be a relaxed type of interaction. And you can use whatever mechanisms IETF offers for a feedback collection. There's also a GitHub repository where all this stuff is available. And I'm here all week. Just find me, talk to me, and I'll be glad to listen to your stories. That's it. So this is not yet a working group document. We will, it, it, there will be a call it eventually at some point if, if you actually want it be in the working group and such like that. But It's okay to discuss it on the mailing list as a pre working group document. And, Chris, you're in the queue. So the the the draft is, the title is Post Quantum migrations. Mhmm. when I'm reading the document, it But, seems focuses main mainly on, digital signatures. Is, is it, is the goal to fix on this? Or Yeah. So post quantum is a big thing. Yeah. Within that big thing, we sco the scope is narrowed down to digital signatures in particular. Alright. But if you have an exciting story, which is about, let's say, something else, scams, I would like to hear it too. Great. you. Thank you. Thank"
  },
  {
    "startTime": "00:20:10",
    "text": "Could I run the slides? You can run this slide. Except I think I just lost you, here. Hang on a sec. Brantz. There you go. Hi, Steven. I think he will also see them. Yep. Okay. So I'll just if you jump into it, Yep. We need you have a lot of questions. I know. a 5 minutes because I know Hockey them our memes, Don't worry. This is Okay. So High space signatures. Schemes, something you've probably heard of in the context spontum, and together with a bunch of people, we got together and sort of sat down town, run these things, but let me acknowledge that I have co authors and then move on. Is a stateful hash based image scheme? Basically, there are lists of one time use signature keys. And if you just reuse one of them, Once it's completely game over, you have to auxiliary signature forgery. It's all very, very, very bad. So keeping track of which signatures you've already consumed is really super important. That is what we call state in state for hash facing. It's signature schemes. In this document, we sort of set out how do you deal with this? Dealing with state is very hard. It's very scary. I mean, there's a large Really big problem. If you just mess up just once, and it's like this divine commandment thou must not use the key more than once. How do you do that? Well, probably avoiding stateful schemes in the 1st place, if you can."
  },
  {
    "startTime": "00:22:00",
    "text": "But you're an if you really have to, then you probably should buy, like, special hardware, but You don't solve all of your problems just with those 2 things. How do you reliably deploy these things and how do you run backups and is the sort of thing that we sort of try to give handholds for in this document. So we introduced bunch of terminology on requirements, we document operational considerations, we have a sort of an inventory of potential solutions for state management, the backups, both within them outside of the scope that and this SP80028 allows And we for very specific scenarios, we show you how of and a lot of these things have come up for my other people how run, things slightly differently. One of those things you could do slightly differently is, for example, Instead of using, state, that you need to save and store and protect you just provide all the clock. Unified target box, all know that I have one signature per each book. And then if you need to restore backup, you just know Okay. It's not this time, so I know that these signatures are still good. But, I mean, people are probably familiar with the reference material I'm going Yeah. Keeping things with some time is actually very, very hard. There's there's not one, but there's 2 different explases about this. And we continue to see that particular time is just very difficult. This is for a few days ago, lease day is still very hard, and it's not just limited to, fuel pumps in New Zealand. This is what a friend at the at a Dutch Bank, told me, last week, that their HSM vendor told them that they"
  },
  {
    "startTime": "00:24:00",
    "text": "please not roll out any configuration changes on lead day. And for those America with with daylight savings time, it gets worse. of us in I believe that we can fill entire working groups with the drinking. Associated to time issues. Anyway, this sort of Aside from the means, we have, like, what you should 16 other PC14 keywords to make such an approach work. This is just one of the examples we have different things like tying into version numbers for software, etcetera. And Very brief introduction, by no means, this is just document finish, I think that this is very much a sort of wisdom of the crowds things. So we very much like to book them, ideas discussion, etcetera. And, yeah, with that, I'm, outer slides, So we do if if since this is, again, pre preadoption, work that people have expressed interest. If anyone wants to do a quick question or comment now. We've got we we still can do a little bit now, but There'll be more on the mailing list and such like that. And I'm not seeing anyone in the queue. So thank you, Tom, and there'll be more on the list for this. Yeah. I'll send an email with a brief introduction of the documents. Great. Thank you. Thank you for releasing it. I don't know how to force you off. So, Mike, are you giving the talk? Is already giving the talk?"
  },
  {
    "startTime": "00:26:01",
    "text": "Agree both? That's right. Okay. And if Rita wants to jump in, she can as well. Is also here. Yes. Or he's taking a long way around? Get up there. We've rehearsed this, not at all. I don't know. I was just thinking I wanna gulfillers. Okay. Alright. So this is an attempt to demystify some of the, I think Flow correctly pointed out that composite is overloaded as term, we're trying to sort of demystify some of the very closely related concepts. Here. So let's Yeah. Let's go. So the talk outline here is we're gonna We're going to go into words co composite unlinked mop. I forgot to change this one. Unlinked multiple signatures, linked multiple signatures and counter signatures. In in the way these constructs are showing up in different working groups. And how these are slightly different. And then we're gonna go into existing RFCs, labs open PGP Jose, Jose, then show that some of these things actually already exist some of them don't. And so the question then is do we actually need to define new things or do the things that already exist cover all the needs? It's it's basically, though, the point of this talk is do we have enough multiple signature mechanisms, or do we really need new ones I don't know when Laurie's gonna take over, but you have your own mics. So I guess you can go. Okay. Definitions. Okay. Manager FDCD. Verticals. The point of this mandatory, you can't punish the earlier ones for not having an escape CD. Think we had a CFRG in Japan where every single talk had a Randall Monroe in it. Alright. So we're trying not to define anything new in this slide deck. This is not a research talk. This is a what already exists talk, that we had great fun putting the slides together and, being very diligent about not inventing new words. Okay. Next."
  },
  {
    "startTime": "00:28:04",
    "text": "So, first definition is hybrid or we're calling multiple algorithms scheme, So this is the sort of generic top level umbrella term, a this is borrowed directly from flows draft, a cryptographic scheme that corporates more than 1 component algorithm where the component algorithms have the same cryptographic purpose. So you have 2 signatures or you have 2 chems or you have 2 key key trends. Same with same. There's some examples. A traditional, traditional, a post quantum traditional, a post quantum quantum. These are all examples of hybrid or multiple algorithms scheme. Next next Okay. So within the family of hybrids or multiple algorithm schemes, we're gonna talk about a few here, and we've tried to sort of picture them out to show at what level the binding is happening. So unlinked parallel signatures, comes in 2 flavors, and you notice the picture is the same for both flavors. The or modes or the and modes, and the important property here is the verifier. And what the verifier thinks and how the verifier has been configured. So whether it's an end mode or an or mode is actually structurally identical, but the the the The verifier has been told to treat it as an or treated as an and. You have linked parallel signatures where there is some structure. There is some evidence on this this cross links with, Brenda Hale's, spectrum's draft. In that in the if you remove 1, it will leave evidence at the protocol layer that it renewed. You then have composites, which is somatically a single key and a single signature. You can unpack it to discover there's multiple inside, but semantic weight is a single object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object And then finally, you have counter signatures, which are nested in some way. So protocol is, you know, you form a signature and then you wrap it with a second signature. Alright. So then moving along, unlinked parallel signatures, it's it's exactly what you expect. It's"
  },
  {
    "startTime": "00:30:03",
    "text": "2 completely unrelated signatures. Sig 1 is done with 1 algorithm. 6 is known as another algorithm. There's no cross linking whatsoever. This does not achieve any non separability property as per Graft hail. There is protocol layer linked parallel signatures. The document contains 2 detached signatures with some sort of linking information. Between them. And so the example here, sort of the simplest possible example of this is I'm gonna sign the message m, and then I'm gonna tack on the end also an add to if I19 signature exists. An mutual forensic environment to talk on also an NLDSA signature exists. So this is, you know, your most basic attempt at an end mode. If you, if you just drop 1, that it leaves some sort of artifact that it was dropped. This aims to achieve weak non separability. Next. Counter signatures or nested signatures. So here, you're you're wrapping them in some So the first one is is performed with bear on the message. The second one you sign over the original signature. This is sort of some weird, like, half end mode. In in that you can strip it in one direction without leaving evidence, but you can't strip it in the other direction. So in general, this doesn't achieve any non operability properties. But depending on your protocol, how you're using it, you might maybe be able to argue it does in one direct and Nate maybe. Next Okay. Here's the weird one. Composites, which We spent, I don't know, Laurie. How many hours spend on the phone making these did we slides a long, a long time, So we're this is maybe a bit invented language on this slide. We're calling this cryptolayer linked parallel signatures. So we're trying to make the claim here that the word composite is equivalent to cryptolayerlinked parallel signature. So the goal is to bundle 2 things to look like one thing to achieve"
  },
  {
    "startTime": "00:32:03",
    "text": "protocol backwards compatibility. Look. One key. Look. One signature. Put it in your existing signature field. It's it's not 2 things. It's one thing. And the the security property here is that Their this the composite signature values are bound to the composite algorithm I So the verifier has been told to verify a MLDSA at 2509. Signature. It knows that it's both components are supposed to be there and in protocols that sign over the algorithm ID, it leaves the evidence that way against stripping attacks. These are we're considering composites that aim to achieve weak non separability, there's a lot of devil in the details about getting the implementation right to actually achieve that property, but the I think Anyone who's doing composites, the aim is to achieve that property. Otherwise, there's no point in doing it. Thank you. This is where we switch. Keep on my chair. Motas. Alright. So we're gonna cover, instantiations of these examples and just you can actually can you go back one slide for one second? This is where Mike and I spent the most amount of time talking, and here, you see this crypto layer piece. And the the crypto layer piece versus the protocol layer piece is, like, I think the key topic that we spent the most amount of time discussing. In the examples that you can advance now, In the examples and protocols, you're gonna see, places where a protocol layer piece might fit in place protocols where they can't do anything unless you give them a crypto layer construct and Next slide. So the first is the unlinked parallel signatures, and, these are references that we were able to find, within lamps and open PGP."
  },
  {
    "startTime": "00:34:02",
    "text": "Not an expert on either of these. So, Hopefully, they're correct. Next slide. I'm sort of an expert on these, although I've made this slide very small, and it's hard for me to see. This is, Rfc7515 Jason Webb signatures, which supports multiple signatures over the same message. And, RFC 9052 seabor object signatures where you have a similar construction of signatures over the same message. So this is the unlinked parallel signatures use case at the protocol layer with algorithms that are registered for hosie or algorithms that are registered for for cozy. Next slide. So, from a procon perspective, unlinked parallel signatures, mechanisms exist. We just mentioned a couple that are out there. There's a single algorithm that communicates the signature type. Keys can be restricted depending on, you know, they're actually we we spend a lot of time kind of paying attention to the differences and keys and signatures across these different protocols. So some of the comments on the keys are if they're they seem weird to you, it's probably because it's my fault. Yeah. So the the the the key thing here is, like, you're, you're adding, you can add these parallel signatures over time because you always have the same message that you're able to sign and then add another signature and sign add another signature. And The order isn't known between them. You know, you don't know which one came first and you know that all the signatures are signing the same message so the the the con there is like, you know, gonna have to manage multiple keys. I can just take the signatures off. At any point. And the verifier has to make sense of, like, I was expecting 4 signatures, and there's only 3 or you know,"
  },
  {
    "startTime": "00:36:00",
    "text": "other issues with the signature algorithms that they were expecting, because they're all signing the same message. So there can be, complexity on the verifier side for handling these. Next slide. Uh-uh. Russ Housley, is the comment you made about you can't tell when they were put on there important to the later discussion. No. I don't think so a there's one on the counter signatures. I won't delve into it. But there is a thing, a natural route called signing time. In CMS. That's talk Yeah. That Alright. As I said, the the if you just if you just prefix ori sentence with in general, then. Okay. Yeah. Yeah. Yeah. Okay. I don't understand CMS. As I said, anything that's wrong in the slides is my fault. Next slide. Right. So now we're gonna talk about protocol layer linked parallel signatures This is my favorite one because it's in CMS, and we couldn't find any examples of any of the other ones. And Yeah. CMS is you're gonna see CMS is, like, everything. It's super cool. So this is, so this is a mechanism that already exists it allows you to cross reference. So one signer info can say, by the way, there's other signer intros. Here's a hash of the first one. Here's a hash of the second So the it turns out CMS does already have a protocol layer linked parallel signature where if you strip 1, it leaves cryptographic evidence that there should have been one more and which algorithm should have been there. So so bravo CMS. You've got it. Excellent. Use that mic from the table. It might be better if you were a little closer. Someone else can't hear you. Eat the mic. Ethan Mike Moore. Yeah. Basically, congrats CMS. You've you've done this where you've crossed you can all have multiple signer intros. You can cross link them. You can,"
  },
  {
    "startTime": "00:38:00",
    "text": "indicate that, you know, I'm a RSA signature and also an MLDSA signature exists. And if strip, you know that there should have been an MLDSA. That's that's what this extension does, and it's, yeah, call. Got CMS. You did it. Next slide. So, basically what what Mike just said protocol layer link, parallel signatures, mechanisms exist CMS. You can use this, mechanism, with single algorithm key construction. So, like, You've got the building blocks there. And, you know, this would allow clients to continue using existing traditional certificate and add a PQ certificate. So like, it's it is a building block that you you could start to use to add signature schemes of varying strength or against different problems so you can start to come. Level up the combination. That challenges the multiple keys and certs approach still. And, The hybrid security property has to be enforced at the protocol level layer rather than the crypto layer. So, like, the point where it's making at the beginning, like, This is a protocol layer binding. A raw crypto layer binding, you know, would is, is at a different layer. So you know, cool that CMS supports this, but like, if we were to go back to that other slide and see all of those other nuns, It's possible each of those nuns could be filled in with a very, very different construct that was kind of offering the same properties. Next slide. Sorry. I'll add one point to that is we've had debates a lot about, you know, cryptic. There's algorithm. There's specification writers. There's cryptographic library implementers. There's, and then there's protocol library implementers and how the higher you up you go, the more people there are more people that are doing that, more people, more room from takes more implementations. If we can get it lower to the crypto library, there's more expertise."
  },
  {
    "startTime": "00:40:02",
    "text": "2. Do you want a quick one? Yeah. Yeah. Through Nokia. What happens if an attacker removes 1 of the protocols if it's done at the protocol level? So, you mean, CMS, do you wanna answer? Right. So I, yeah, I don't wanna spend a lot of time on this specific draft. You can can talk about the draft after, but it so you have ones you have a signer info. In fact, you've 2 signer Infos, and they're cross linked. I think they hash each other. So the hash of each signer info is cross included. And the signing algorithm of the other is included. So if you if you strip one out, you'll have signer info that says, Owen, by the way, there should be a second signer info on this algorithm. And the verifier will say, okay. Well, where is it? Right. So the verifier has to cash that. Basically. Got it. Yep. Excellent. So counter signatures, They're pretty well supported in, in several different protocols, Don't we left this red piece and do I I thought I don't know. Maybe they're they might be in open PGP. I don't know. We don't know. They definitely exist in these other places, and, you know, versions of counter signatures also exist at the protocol layer, like, in message structures, especially in, like, hosey and cozy and you know, Kind of domain specific applications of, like, signatures that have hashes that point to other signatures. So This is definitely a thing that exists Next slide. So, similar set of pros, you know, they're they're Constructions exist. Single algorithm keys. Did they work with them? You can start to do that layering, but you have this one and stripping problem that Mike was mentioning. So, like, If your second layer was a PQ cert, And I just take that off. There's a problem there."
  },
  {
    "startTime": "00:42:00",
    "text": "Yeah. Yeah. I'm not gonna comment on the weak non separability piece, I mean, this I don't know any of the security properties for for what happens with this. But I know that it's, like, a thing over time. Like, so Russ's comment about time for the other one. I mean, There's definitely an order to these, and you can definitely take the latter ones off. Right. So this is kind of the main summary around linked, cryptolayer linked parallel signatures aka composites. So when we looked at at all of these, we thought, you know, this was, like, the strongest. And it was at the right layer, basically, because if you had this, every protocol that had, signature that had the interface of, like, Kigen sign and verify. Could use this and wouldn't have to deal with these multiple keys and, you know, if you have a good construction for this, you're gonna be able to drop that in in a place where you previously would have had just a traditional signature scheme. I don't know that I wanna read all of these words. Yeah. I I will read the will be the second to bottom 1, though. So this is this is an interesting point improving interoperability through IT have a registry process because we can actually name them. We can call them. We can say, here's two things that are allowed to be combined. We can implicitly say, here's a bunch of things. You're not allowed to combine because we're not registering them. So it gives IETF the ability to control combinations. Yep. And we could share them. Right? So we could say, you know, this combination is Actually, Cozy's gonna ask for a code point on it. Cozy's gonna ask for a code point on it. CMS is gonna ask for a code point. PGP is gonna ask for a code point. And they're all actually used they could all potentially all use the same underlying cryptographic library that would would give that capability and we could share security proofs and all that other good stuff for doing the"
  },
  {
    "startTime": "00:44:04",
    "text": "this work at this layer. However, as I can see in in in the queue already, like, there are lots of good reasons to maybe not do this. And so I think we're gonna kind of There's, like, maybe one more slide hopefully. Steven, do you wanna comment on this specifically or Okay. So the protocol, linked parallel signatures These are the ones that we we know, that we can see drafts for that are, that are out there. And, you know, just a concrete example, like, mldls MLDSA. With, P250 6 ECDSA, or, MLDSA with ED25519. Like, that kind of construction. Again, these are protocol layer linked parallel signatures. So the thing that I was just talking about, like, We don't have that, but we do have these. Time. Health. Aaron Aaron Whistler? No. It's Erin? Teddles. Right. I think Hi. Yeah. So Open BGP, I think the red text fits pretty well because this draft is like provisional and this is the hot topic of like tomorrow morning's discussion that is exactly whether we want to go in this direction. So, this is the this is the author's proposal But, it's not yet in the it's not yet fully in the work group. Like we've had a 100 plus email thread, about this. And, yeah, there's gonna be like a half an hour discussion tomorrow morning if you want to join. To be fair, that's also true of the lamp's draft. Cozy and Hozy don't have a draft that's like that."
  },
  {
    "startTime": "00:46:01",
    "text": "So here, we've got a summary table. Again, I mean, CMS, like, basically winning all the awards. You know, you can see they've got a check mark for all the things we could find basically except for this Support for at least one code point of this crypto layer linked parallel signature thing No. No. We're we're saying you should call composite. And, think that's basically it. Yeah, I guess Yes. This this part. I don't know if there's know if there's 2 of these, but Mike and I as we're chatting, we we we said I don't we should, we should, Give the give the group, like, a a strong statement around, like, to think about this stuff or what do we think, you know, we should do or, Should we just keep talking about this on really, really long email threads, or can we can we kind of drive it to a point of consensus so we can kinda close off? And I hope Stephen will will chime in on that because he's been a big part of those conversations on the list. Do you want our bias position now so you can react to it or Stephen had his hand up on it. Okay. Let me and but I I do wanna note We are done in 12 minutes or so. So let's you know, like, like, keep that in mind for Mike Line and stuff, but go for it and then Steven will. Excellent. You know, to the slides in this. Is there are there 2? Is there one more after this? Because I I did shorter one. Oh, yeah. Already didn't see these. Yeah. I wanna do the I wanna do this this short version. Mike can do the longer one if you want, but You know, basically, my view is, you know, if if hybrid should or should not happen, you know, CFRG or other parts of the IRTF or IETF should help answer the why and the with what security properties part of this so that it's not just continuously debated. We should try and get to consensus on this part if we could."
  },
  {
    "startTime": "00:48:01",
    "text": "And if hybrids are happening, protocols should be able to share crypto libraries cryptographic module verification, security proofs, So that's if they're happening, then we should be able to kind of build on a common security, foundation and, all share, review, and benefits of that process and the registry point that Mike made before. And the open question is, you know, Should this registry process be part of what allows us to kind of constrain this and drive consensus around it. That's this is my biased problem statement for you all to consider. Unless you wanna go back, you can No. I think that this is right. So this is very similar to what I said at CFRG yesterday, In regards to hybrid chems with, RSA is, like, we know people are gonna do this. We know people are gonna do this with or without IETF consent, should we try to make it less bad? Should we try to provide you know, sound construction, sound combiners. We've I think 2 years ago, we all sort of will be trivial, and we're now learning of greatly thanks to Britta Hale, but it's not as trivial as we thought. So, yeah, should we should we try and help do it correctly? And sort of reduce the amount of role your own that people are gonna do when they try and build themselves migration mechanisms. So the open questions here are what are the security property that various IETF protocols need from hybrid schemes. And do those properties mechanisms, or do we need to define new ones So why don't we just just those 2 were we're gonna die. Yeah. That's it. Steven, Hi. Steven, can was gonna be smart as and can ask, could you put up the slide about combinatorics? But there is one. Can you go back to slide 19? So And I'm not claiming I know the right answer here, but I I"
  },
  {
    "startTime": "00:50:01",
    "text": "think, if you look at that bullet that says, put responsibility on crypto lived developers etcetera. I think that's ignoring the the the complexity that you're gonna end up putting on people deploying things because we end up with dozens, of different, code points for all sorts of purposes, And it's very possible that that might just make interoperability worse. And make security worse. I don't think that's been properly weighed in these discussions so far. Does that off the top of my head here, does that mean it's a it's a valid point. Does that change is that specific to the crypto layer linked or does that apply to all of them? I I think it applies particularly if you as you're calling crypto layer, but if you if you implement this composite need a crypto API I can't see any way to avoid this combinatoric explosion in terms of the number of possible code points. And therefore, Adding a lot of complexity and confusion and possible non interoperability. And even Yeah. Implementing management systems key with that many options for how you sign something. I think is a lot of complexity That's not reflected in this slide. Yeah. So, I mean, the the the point about the improve interoperability through normal IT registry process. I agree with everything you said. You know, The only way that I could see constraining those combinatorics pieces is to say a Here's here's the 1 or 2 that you're supposed to do. But even if we were to say that, you can't really stop people from doing whatever they want. And, and, you know, stop there with We stop can't ourselves anymore. We've got a lot of people in line, and we do need to be out of here in 9 minutes. So, Russ And and there's plenty of other time to talk about this as the end of But Russ, Russ Hausley, we do not have the"
  },
  {
    "startTime": "00:52:01",
    "text": "problem the higher up you go. Because you're just assigning one code point, for each of the signatures that are then being used in the and or the or construct. So, I really think that whenever we Whatever we do at the crypto layer We do need to make sure it works in all of these protocol environments. So that one crypto library will work in all of them Thank you. Aaron. Personally, I'm not really scared about, cooking combinatorial problems. So, as long as it's well find. And in the crypto area, we say, okay, here even are up to 5 different signatures that we want if that doesn't really, I don't think it is a problem because they're all trans print the upper layers. On the other hand, I think that Stephen had another argument that is the backwards compatibility. That in most cases, we still need to implement multiple signatures on the protocol level, And therefore, that's, in my opinion, something that is not really reflected in this slide that is let's say, a con of having crypto error in the signature when you already have to have the complexity of, of, that you already have to have the complexity of not signatures on the protocol level. Great. Thank you. Michael, Yeah. Mike Perrock. I'm a little terrified when I see things like let's let the implementers at the library level handle it especially when we're saying, let's go jam weird things like keys that that they'll probably try do weird strange compression things regardless of how we specify them. So just one of those things that concerns me from, like, implementation bug nightmare things that will roll out inevitably. I do wanna follow on, Ori, I really like your idea saying, yeah, we should make sure we're getting good guidance from CFRG on some of this or maybe"
  },
  {
    "startTime": "00:54:00",
    "text": "decide that you know, so see if they say this something we should even touch or not. Right? There there's some things here that we might wanna just avoid or come out and say, yeah, we maybe don't wanna touch some stuff at all. Very good reasons. Okay. You wanna respond? I've, I've learned recently we can't dispatch stuff to CFRG. So, I think still, like, worth, chatting with the folks that are there that interested and I agree with what everything you said. Rowan? Ruin May. If you In terms of having this proliferation of I I'm not I'm not a fan of having a every combination or a, like, a a large number of combinations. But, particularly, I just wanna say if there are any combinations that include RSA, I think we should make sure that we ask that that we have a much higher bar terms of existence proof that it's actually gonna be useful. Because because because because a lot of the arguments that I've heard the rest of this week about Oh, well, you know, if if I have RSA and I wanna use it in such and such environment, I think when you start to poke on it hard, it starts to fall apart, and it's not actually possible to you know, that that what people want to do where they say, well, we're just going to add this thing on the side. When they're using RSA, either for Kims or for signatures. That it actually falls apart when you and analyze it further. Thanks. If the word just is always dangerous in a room like this, So, we have a few minutes, but we also I I think we have run this fairly well. We can certainly have more discussion on this. This isn't like a draft. This is a what do we want to do? And I think that, so for the working group. That's a perfectly reasonable thing. For us to be using the for the list"
  },
  {
    "startTime": "00:56:02",
    "text": "If some drafts come out of this, we can work on it But, so for next steps for the working group, we've, got a few things coming up we will have 1 or 2 interims in the in the coming months before the next IETF meeting, not completely clear what those are and when they are, that will be discussed on the list not everyone wants to be at all the interims and such like that. Stephen, you'd have a last bit. Hi, Steven. Yeah. Just to kinda echo what Aaron was saying earlier open PGP working group will be discussing some of this tomorrow. Oh, right. I think I'm I'm on the co chairs of that working group. So, one one of the interesting things will try and figure out how to get towards consensus on some of these it's not clear that we know the answer. But, that's something that we will be thinking about as maybe other working groups will be trying to figure out how do you reach consensus on these topics? Without kind of waiting years or without Yep. Annoying too many people. So if you if you get experience on how to get consensus please send that at least a Pequip if not the other places where it's pain point. Sure. Yep. 1 sure. Jump in the queue. My account's worth. So I what Yeah. I am the queue. So the, one thing that was in the slides that I wanna highlight here is word is what do the protocols need as security properties? I think, like, I would love to see this come from that direction. Like, PGP to state. Here's if we're gonna do hybrids, here's the properties we need, and then figure out which mechanism provides it. Is the direction I would like this to go. Good. Thank you very much. This was, sorry we assumed that almost no one wanted to come that are, that all the photographers were staying away. And we're because they're going to real world crypto, we won't make that mistake again even if there's competing things it would have been nice if there was more time here. So we"
  },
  {
    "startTime": "00:58:00",
    "text": "we won't try to jam stuff into a 1 hour, meeting in the future. So thank you very much. Recent timing. Yeah. You did. And get we didn't I stopped wrong with that. Next, I would"
  }
]
