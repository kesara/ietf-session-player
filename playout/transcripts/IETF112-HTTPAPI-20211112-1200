[
  {
    "startTime": "00:00:57",
    "text": "you i couldn't hear you i hear you all of the technical checks and then realized i turned the volume on my headphones down"
  },
  {
    "startTime": "00:02:31",
    "text": "all right get started in a couple minutes all right i like the way the screen slowly gets back in sync okay ah thank you braun brown is taking notes i assume you're gonna do it in the head hedge doc people can look great when you get a chance just post the link where you're working there in the chat"
  },
  {
    "startTime": "00:04:09",
    "text": "okay uh we'll start i'll do the overhead daryl will steer the content um welcome to the first session of the last day of yet another virtual ietf thank you all for coming i see we have a little more than a couple dozen people here so let's get started uh by now many of you will have seen i'll wait for the screen to catch up oh slow oh dude i am i'm alexi says don't use the acme link that's what's in the slides yeah um that's okay i took notes for the rfc editor and i added an extra letter so we were also bifurcated across two hedge doc docs um all right is the screen fully correct for anybody i seem to know well no no all right i think i think it works a lot better if you use the slide share instead of sharing your desktop probably never having done that being old school and all right that's why you see the t-rex luckily there's not much all right how do i use the slide share go to the share pre-loaded slides to the join view"
  },
  {
    "startTime": "00:06:00",
    "text": "button yeah all right stop sharing share slides great okay that was easy thank you meat echo great okay so we're doing off to slightly so start yes much better thank you martin all right this is the note well many of you itf folks will have seen this a dozen times so far pardon me it's a reminder of the policies and practices for intellectual property contributing at the ietf a contribution is speaking up saying something writing on the mail list personal information we have a policy privacy policy that we take very strongly and try to you know follow second page of the note well um pardon my throat uh is links to the documents um as francesca pointed in the slides that you can find as jessica pointed in the chat you can find the slides online there which would make the links active apparently next time around meet echo will make links actually work for screen sharing which to me sounds pretty magical one thing to know is the bcp things if you haven't seen them they are indirect references to rfcs bcp 9 in particular means oh these following eight rfcs uh maybe that'll get updated at some point but anyhow the current note well um the note really well"
  },
  {
    "startTime": "00:08:01",
    "text": "pardon me uh this session the iesg the technical leadership of the ietf um has really asked working chairs to emphasize more of the soft skills of being involved in the ietf so treat colleagues with respect speak slowly limit the use of slang it tends to be hard to follow if you speak too quickly or you use words that are you know not well understood uh if you have a dis disagreement about ideas use judgment don't just say oh that idea is stupid and how could you have thought of it um the goal is to use your best engineering judgment and find a solution that works pardon me for the whole internet certainly having things deployed shows proof of concept at least but it may not be applicable to everyone and the goal here is really to get everyone to contribute to the ongoing work of this working group of all the working groups and the ietf and whole over as a whole please keep these things in mind in mic and messaging and chat rooms that doesn't mean you have to be you know boring engineers with no sense of humor but try not to make it personal okay online meeting tips richard read 0.0 richard refresh himself make sure the video is off unless you're sharing or presenting that means daryl you can turn your video back on please mute your mic unless you're speaking and the controls for all of the controls for all of that um sure most of you aware by now are in the upper left hand corner just above the chat dialogue on the left hand side"
  },
  {
    "startTime": "00:10:02",
    "text": "you're encouraged to use headset earbuds and so on it tends to be a better sound quality the blue sheets or the blue she's whatever they are um are automatically generated by meat echo when you sign into the video conference you had to sign in with your ietf login your data tracker login blue sheets are used to record who attended those are used for planning capacity for future online meeting uh future in real life meetings should we ever be able to go back to that hopefully um they are also have been used periodically when people sue the iatf about patents oh so-and-so was here he never said anything well here's the list that shows they were there but think of it mainly as capacity planning for the future chat rooms in meet echo the bar on the left are connected to the jabber chat rooms that are listed in the data tracker agenda so if you go to dt.iatf.org wg for working group slash http api you can see the chat room um there is a meet echo guide it's from the previous ietf session obviously it's a little late to be showing all this stuff now but we're asked to agenda first part is administrative um oh yeah acme uh the note well that's the few pages that we just covered uh minute taker braun has gwanda has asked as offered to take minutes um he'll be doing it at notes.ihf.org notes ietf112 http api not acme obviously i was jet lagged in anticipation of doing these slides"
  },
  {
    "startTime": "00:12:03",
    "text": "agenda bashing in sec so look at the other bullets so first we have an intro a note well about a query method that's happening in http bis a discussion of linked templates other document updates and then any other business does anyone else have things they would like to add or shuffle around in the agenda okay bang the gavel so it's noted query method mark you want to talk can you hear me yes excellent um so this is just a heads up uh about a draft that is in the http working group um it's it's uh for a new http method originally this was we were reusing the search method uh which was an old web dev method but uh the most recent version of the draft changes that for queer where we thought that had a little bit better ergonomics and uh it was more clear that it wasn't just for web dav and so we're trying that out to see how that goes and see if people like it and and so this is a new http method that is has similar semantics to get in that it's safe and item potential but it allows you to put a a request body on the get which http either doesn't allow or extremely strongly discourages and we know that some people out there are using gets with bodies because they want certain attributes they don't want to put some data in the url or you know it it might be that the url the data they want to send is really long and they're not sure that it's going to be url is that longer to"
  },
  {
    "startTime": "00:14:01",
    "text": "put some kinds of data in a url it has to be encoded and so for various reasons people want to to do this but they still want it to be for example cacheable they want to they want those get semantics and so this method is designed to kind of fit that niche to allow a safe and unpotent and cashable request potentially cashable request to be expressed with a body um and and so uh the most recent version we introduced uh caching semantics for it uh to some guidelines of how caches should treat it uh we change from search to query as i mentioned and and i'm talking about it here because the the probably the biggest use case for this method is folks using http apis i know that i think elasticsearch uses get with bodies in this fashion and a few other folks do too so if you know of apis or you have apis that need these semantics we'd really be keen to have your feedback over in the http working group because we'd like to make sure that we're on the right track with it any questions okay maybe we should get some initial feedback right now mark can take back so darrell said he prefers query over search which fair enough and eric says looks very useful phil is absorbing the query there are definitely lots of equals that i work with but i could use this in the forum as it's described cool phil hey mark um yes sorry i've just you know seen this so just you know to say absorbing what"
  },
  {
    "startTime": "00:16:00",
    "text": "you just said um there's nothing here i i hope and knowing you i'm sure it's true there's nothing here that defines the format of that query it's just i'm sending you a query here's some stuff that i'm hoping you understand right and this actually falls into a similar pattern that we had with patch we defined the patch method but we didn't find it to find any patch formats and so it you know uh that was unfortunate especially for patch people needed you know application specific patch formats we eventually came up with jason patch and a few others came down the pike uh jason margepachen and maybe one or two others but uh um the question is whether we need a common query format for this method i tend to think that that's probably out of scope for the http working group just because a whole new query language is you know it's a pretty big undertaking and it has a lot of application semantics kind of in it you know there are different kinds of constraints you might want to uh make uh we're just giving you a method to do that in um so uh but it's a good question and certainly if somebody comes up with a draft for a standard and really interesting query format um that's something i hope the ietf would consider taking on yeah it was it was really the fact that um in the query string you have you know name value pairs here you've written a sql query so that sort of indicates that well you're thinking this is how you put this is how you send a sql query which may or may not be what you intended but that's the impression i get by seeing something that has a recognizable format of your query makes me think uh-huh this is what you want to do i didn't write this slide just to be clear all right sorry you you in the general you know tutor um yeah the query could be anything it could it could just be a you know name value pairs you know in the in the common query format that we we see um i guess the interesting thing here is is that it is kind of mirroring that lack of definition in the uri query string because although everybody in the"
  },
  {
    "startTime": "00:18:00",
    "text": "world seems to think that you know the query format in uris and httpr's is fixed to you know key equals value and key equals value and key value that's not true that's standardized by html and specific to html it's just that it became really popular um and and so it could be the same thing happens here maybe somebody will come up with a great query format we don't know thank you thank you i have a question so acme uses a concept write post as get right where we say oh we have to post because we have content but it's really intended to be you know more like a get i wonder if would query want to be generalized to that or is it really intended to be queries um this is is you know if we had a better name that was more generic i think we'd take it we were concerned that search was too specific um the the nice thing about query is is that it mirrors the query string in a uri and that's how often people are using this um they they just don't want to put it in the query string they want to put in the body and so that's kind of a hint that hey if you could put the query string and you want to put the body this is the method you should use um you know we could also call this method get underscore with underscore body if we really wanted to um but you know that's not the direction we took in the current draft okay i i'm not familiar enough with that me to answer the question specifically but it sounds like they could use it all right yeah i mean you know if you were fat cat i like that fact yeah if get with if get with body makes you know is not out of line then um i'll mention this to the acme folks sure"
  },
  {
    "startTime": "00:20:00",
    "text": "okay oh that is a good idea thank you eric can you possibly open an issue on the repo for that eric that'd be really helpful thank you okay any other comments questions thank you mark for bringing it to our attention no worries i think i'm next too yes oh thank you i didn't have to make slides for this one it's fantastic which is great no daryl daryl oh okay sorry daryl daryl's great too um so uh this is a draft that i put together a very long time ago and it was just you know almost a thought experiment to say well you know the link header i think it was around the time that we did the link header the first time in rfc 598 and uh you know it's like well we have links in in headers and we have this framework to put links and headers what you know why and then we had ui template come along which was uh me and a few other folks roy and dave and someone else we put together the ui template uh format and so this was just a thought experiment to say well you should probably be able to put uri templates into links as well into into headers so that you can do interesting things and especially since the web is supposed to be generative you know this is that that's a really nice property here that you can convey the template for something and then the client can generate new uris"
  },
  {
    "startTime": "00:22:00",
    "text": "based upon the information you give it and so this was a an attempt to do that and i very purposefully didn't push it very hard i wanted to see if people were interested before i you know did anything with it i got a few sniffs of interest over the years but but recently it seems like i've seen a lot of people come across and say oh that's something i need or say can we have this without realizing that this draft is already there and so i guess the question is is there enough interest to maybe pushed across the line now um i think there are a couple of open issues in my repo about this one of them being you know people have asked what vera base is for and some people are confused by another say that could be useful so we probably need to at least clarify something there and and there i think the other big issue if i remember correctly is that uh it's a good question as to whether we should use uh structured headers for this or structured fields rather rather than duplicating the somewhat wonky link syntax and and increasing the amount of monkey headers in the world but um i guess the question right now is not you know how to address those issues the question is is there interest in adopting this in the working group thanks um my point of view yes i think this fits very well with what uh we're doing with uh gs1 digital link um i'm worrying you know especially in this in this environment god this is this is like being um in lots of standards bodies we talk about the huge cultural differences and the fear that a lot of people have of looking idiot in front of their peers so with great trepidation right my in front of you i'm going to make yourself look an idiot one of the link relation types we use in our work says don't ask me ask him in other words a general redirect that says i know what you want i understand what you want but"
  },
  {
    "startTime": "00:24:00",
    "text": "i'm not the person to ask go and ask them and the link relation type we have for that is called handled by the query you're asking me is handled by them over there so i want to use this template to say it's handled by them over there using this template is that the kind of use case that you're going to cringe at me for or am i okay with that i i don't know enough about the specifics but conceivably yeah you could you know generate a uri over there to you know and kind of pass some information along with it um yeah so that you know that you you can possibly avoid a round trip which is always nice right that's what i'm trying to do yes exactly yeah now that that sounds that sounds quite reasonable okay that's really thank you but yes certainly um this is something i think we would very very likely want to make use of thank you yes cool i think the example that always comes to mind for me for this is you're making a request for something that returns a long list of things and you won't be able to have links construct links for off each of those things so rather than embedding link the like basically duplicate links in every single item in the list this template would give you a way of being able to generate links um for any of the items in the list and that avoids that common argument where everybody says oh hypermedia but think of the bytes over the wire well helps mitigate it who will think of the bytes and is it fair to describe var base as basically a way of"
  },
  {
    "startTime": "00:26:00",
    "text": "creating a unique globally unique identifier for parameters and uri templates exactly it's a way to create a namespace for them i'm not sure that's the right solution to that but it seemed like something that might be useful to do because otherwise how do i know what a widget id is in this particular instance chris please i don't have a whole lot to add but um uh i think this work is useful i think the problem is well scoped and worth doing um i support this particular approach thank you i guess the other merit of this is it's pretty straightforward it's not like this is a big speck any other comments mark what is it you are you at the point where you think it's ready for the group to consider adoption or you just bring up something back from the work in progress you could do a call for adoption if you wanted to i think um i could i'm happy to noodle away on it but i'd rather get people's you know feedback and make it part of an open conversation rather than me just continuing to noodle at it um [Music] so we heard some positive feedback we'll confirm this on the mailing list but is there anyone who thinks this is not something the working group should adopt and work on speak up martin raised the concern and the chat the var base isn't straightforward i'd agree with that i think there's some some interesting design decisions to be made there there's a there's some subtlety in there"
  },
  {
    "startTime": "00:28:00",
    "text": "okay all right so sounds like there's work to do which is what we'd want and that the folks here are in favor so we will uh ron mark did it's movie put for call for adoption in the minutes and we'll confirm that on the list thank you mark thank you thanks mark so [Music] i figured i'd slip eric's stuff in here are you ready to go eric because we can go on to the other slides and come back to you if you don't know there you go okay yes i am and i think the safest way might be to just use can we use the uploaded or the available slides instead of me screen doing screen sharing screen sharing didn't look too great i don't i didn't see a pdf of your slides oh i sent one too rich but um anyway so in that case i'll do screen sharing okay i missed it i apologize it doesn't matter it's just because the last time it was not perfect um okay [Music] i do see some warnings basically okay you should have it granted okay um do you all right i don't see my screen being shared or is it um"
  },
  {
    "startTime": "00:30:00",
    "text": "you have to go on the pre uh share screen on the upper left after you got permission which you may have to stop sharing before you can start oh yeah okay there we go that sounds reasonable yep thanks mike okay ah i think yes okay okay good is it working hello see your screen you can see it okay um okay so let's go back i don't want to go through all of it basically i just put all the kind of history and the overview on slides so link set is that slide that hard fun sample and myself we've been working on for a while the idea pretty simply said is to say the links that can be represented in a link header field and http also should be able to be represented as as a resource as a standalone resource and we've been working on that for a while we define two media types one of them uses the syntax of rfc8288 which is the normal syntax everybody is used to for links in the http context"
  },
  {
    "startTime": "00:32:01",
    "text": "and the other one which took a little bit more creativity so to speak is a json based representation which is intended to represent the model of rfc 8288 but does so in json so that people use two processing json and easier time processing those link sets and i again i won't go through all of this i think we've seen that in previous meetings um very broadly speaking it looks like this this is a json example so this is one of these link sets in that case it has two links in it two anchors link relationships of next and it's http example.com relations buzz and then two link targets and since we've working on that for a while already there actually are implementations out there already probably the biggest one is gs1 the gs1 digital link spec phil archer has been working with us on that he's on this call as well and they are using it already which is why we're kind of a little bit itching to get it stable so that they can also refer to a stable spec and it also is being used in the fair signposting profile specification for scholarly resources which is around having links for scholarly resources which sometimes can be a lot of links with references to papers or references from papers and all of this then makes more sense if you don't have to cram all these things into an http header field since the last meeting we have produced a number of new versions so we're currently kind of working on our six but o5 is the one that's currently being published or it's currently published"
  },
  {
    "startTime": "00:34:00",
    "text": "we have addressed 26 issues we have i think we have discussed all of them appropriately at least we haven't had any complaints that people said you didn't address that and we are at zero open issues so in our mind we're actually looking pretty good we had some discussions already on the list we had very good input from uh mark um had a lot of input for us and we had some other reviews i think daryl also gave us a couple of inputs so we did get i think a good set of inputs from the community already and um we think we've addressed them and then currently we have no open issues we have added a couple of things so we added support for profiles we also added the ability to have newline characters in the in the syntax that use the http header field syntax because that makes things a little bit more readable better formatted and if you have those as text files we also worked a little bit on the extensibility model that also were some issues around that how that is and we also had to work a little bit on the json ld mapping editorial updates and where we are now is as i said we have published version number five of um this draft so we we have had many more versions because we also have kind of a history of transitioning between different versions so overall we had 17 versions of that draft in the meantime so it has been around for quite a while and that's about it so so the one thing that is still open but that is not really i would say something that is specific to our specification but with the json ld mapping the problem is that if you map what else json lc does for those of you who don't know it so well jason ld"
  },
  {
    "startTime": "00:36:00",
    "text": "defines a way how you take json representation and basically turn it into rdf and and we can do that but the problem is that if you do this for this example then if you have link relation types that are ietf registered link relation types then these are just strings and they're not like right so the extension link relation types are these uris which is something that rdf can work with but the registered link relation types are just strings and that means that it is a problem to turn that into a proper rdf model because rdf is realistically constrained and what it can deal with as identifiers because identifiers always have to be your eyes and in that case the identifier is not a uri it's just a string so that is the one kind of open issue it's not technically an open issue for the github repo but that's the one issue that we still have with json ld but as i said there is nothing in my mind that you can easily do about that because that's just kind of an incompatibility of how the mechanism works for links with with these strings as registered values and with what json ld needs as identifiers which are your eyes and these two things just fit together but apart from that apart from that um we're done i'll stop sharing my screen here um so yeah that's the status on link set so as i said we are at zero open issues so we think and hope that this at some point we can really turn this into uh something where everybody says okay this is ready to become a specification yeah that's awesome to see that you're"
  },
  {
    "startTime": "00:38:00",
    "text": "down to zero issues and i don't see any reason why yes published before you just lock it down no this is great to see um then i will i will let rich guide me through the process of how we take next steps on that i believe that these go on list there's the last call right right so um i see phil's commented that it's currently implemented by the sacrifice of goat no mark we don't do that anymore the ietf's new rules are vegans um so uh okay so the process is first of all thanks eric and others for your patience often the way things work right like probably most of life ietf is deadline driven so someone says here's my new draft and i think it's all done and then people come out of the woodwork and they make a whole bunch of corrections or suggestions issues that have to be dealt with um what will happen now i'm assuming everyone isn't you know everyone here is in favor of the working group last call we will issue on the list a working group last call we'll decide you know it's typically one or two weeks um and then uh what happened that's sort of a last-minute chance for people to say oh this this issue i just thought of this issue now um okay sean we'll do two weeks so we'll do a two-week last call yeah especially because it's getting into the us thanksgiving holidays um so we do a working group last call this is the last chance for the working group quote unquote last chance for the working group to make substantive changes and"
  },
  {
    "startTime": "00:40:00",
    "text": "then what will happen is our we will have a document shepard picked i'll explain that in a sec i guess it makes sense with the goats and our responsible area director will take a look at the document and they will give their feedback it's francesca who is in the chat francesca halumba saying her last name wrong um the shepherd writes up in essence a history of how it's been the discussion that's thank you francesca palombini okay sorry uh writes up history there is a format to follow you know what is the intended use of this it's a proposed standard the discussions there weren't any notably difficult discussions the working group is in favor of this it's already being implemented as i said there's a format of it and then after francesca has approved it it will get put on the iesg addenda agenda it will also go to ietf last call where the whole ietf gets a chance to look at it assuming all of those pass or pass without substantive comments then it gets put on the queue for publication publication is currently running a couple of months then the most important thing is uh you get to what's called auth 48 which is 48 hours 48 days 48 weeks depending where the rfc editor looks at it and they make editorial nitpicky suggestions um hey you said was and you should say where or things like that it's it's really english language wordsmithing um and"
  },
  {
    "startTime": "00:42:00",
    "text": "then it gets published but the point is once it leaves once the iesg approves it and the less ietf less call has happened um then the boss the document is basically done and you can say this is now in the queue to be published as an rfc that last process takes you know given the holiday year end season the isg might be a little slower than we than usual um and the publication system is they're back up to their normal speed now having gotten over the xml v3 conversion pump so it should be fairly straightforward any questions about the process what i will do is i will probably write this up as this i'll probably do the shepherd write up it gets attached to the data tracker so people can see what's involved and consider doing it for other documents as they come to our system it's very common that the chairs are the ones who do the write-up because they have to summarize what's happened in the working group and how they feel all right we will issue this as a last call um thanks for the offer eric i will probably post a draft of the shepherd write-up to the working group after the last call has passed uh so there's two questions just a very brief question so so we did start version six um which has i think super minor editorial changes but should i then um publish that one so that we have kind of the latest and greatest version out before you do the writer sure why don't you yes do that and then we'll when you publish that one then we'll say this is the one we're going for last call just has editorial changes okay will do thank you thank you all right great that's uh"
  },
  {
    "startTime": "00:44:00",
    "text": "well first with the slides and first and to last call i figured we'd start on a positive note yeah thanks for the explanation rich okay so um if we want to slide to the next slide uh what i did is i took each of the the documents that are currently going through the working group and went to the github issues and found what appeared to be the most contentious issues so that we could just surface them here and get any other conversation and encourage folks to go to those get up issues if they have strong opinions um looking at rfc 7807 biz uh the two main issues that seem to be attracting the most attention was this conversation around how to integrate warnings uh and there seems to be two distinct threads of conversation uh one which is around well how do i describe a use the hp problem to describe what is actually a warning and the other being well yeah i want to do a regular request that comes back with a response but also attach a warning and i believe the um the latter uh suggestion or the latter issue we are punting to uh either a future spec or a separate spec but i will let mark speak to that as he jumped into the queue yeah i i just um closed this one uh because the the conversation seemed to conclude that that would be okay um if if we need to reopen it that's fine it just that seems like the date we were in so yep that's that's how i read it um the the second issue is the uh"
  },
  {
    "startTime": "00:46:02",
    "text": "multiple problems um and uh i believe sanjay has created a pr based on a suggestion that was made in the thread that says uh it's a certain type of error that has the potential for multiple reasons why it occurred within single request and that describes that uses the extension capabilities of hp problem to list out a set of causes um this wouldn't if i understand correctly this isn't actually uh won't need to actually be part of the spec itself it's just using the natural extension mechanisms of the spec is that correct mark so i think the place we ended up here was that we decided to to document some more examples in the spec at least one if not more than one uh to uh kind to illustrate how this could be done uh and and what the parameters are around it so um i think you know it in some ways it's very similar to the stuff we did for the most recent draft we you know clarified and kind of explained and gave examples of stuff that was already there it just wasn't adequately communicated uh in 7807 and so uh i think that's the direction we're going to go in i know that that sanjay has a pull request that he's been working on that i think he's getting closer to to being ready to merge so i think we just need to continue discussing that it's a little delicate because if you make the the examples too realistic then people might just use those as templates almost you know and cut and paste from the spec which may or may not be a good thing uh so uh we don't want to invent new mechanisms necessarily there that are just for the purpose of an example"
  },
  {
    "startTime": "00:48:00",
    "text": "uh so i think we just need to keep on working on that and i think we'll get to a pretty good place i see sanjay's here i don't know if he wants to say anything eric is in queue eric you want to go first okay yeah thanks yeah so i basically just wanted to kind of support what mark said right so right now i think the state is that we have this example and it looks like an actual mechanism but it's not quite clear whether it's just an example or an action mechanism and i think we in my mind we have to go either one way or the other but some in the middle is not it's not great right because then people like mark said they might think this is an actual thing but it isn't and then we end up with this kind of everybody uses that however they think it works i think that would be the worst case scenario for us and just be clear i cut and pasted this example from sanjay's pr and my understanding was this was purely an example of how you might use that causes is not uh an official part of the spec but sanjay you want to take that yeah so thanks it is an example and uh i can based on the comments i can put some more words cautioning that it is an example for an extension it doesn't look like the swag is saying that but as mark was saying we had to give an example that's what we agreed on so i think we can do a couple of things one is the example for the multiple problems and i think where more comments are is a second example which is uh using json pointer to point to a a problem in the request"
  },
  {
    "startTime": "00:50:02",
    "text": "itself i think that needs a bit more uh review it appears so looking forward to those comments thanks sanja mark here i think one of the things that came up in the discussion was the difference you know they're different kinds of classes of multiple problems and and one is that uh you might have you know multiple instances of the same problem type um excuse me and in that case um you know it's it's probably the you know the type that's here in this example the multiple errors is is not ideal what you would really want to do is is that have you know the the valid validation error type allow multiple instances to be you know communicated of where it is in the document um so so it's you know not so generic at the top level type another example would be what you see here which is there are multiple different uh uh problem types in the document and you need to convey them all at the same time you don't want to just convey the first one they have the person make the request and convey the second one and so forth and in that case you do need this this multiple errors type but but there's there's two different kinds of of two different ways this can happen one is where all the different problem types although they uh are different problem types they have the same recommended http status code uh for example maybe it's a you know 400 which is quite common uh it you know it things with something's wrong with the request and hear the details of that and in that case you should use that status code the only time that you should use 207 multi-status is when"
  },
  {
    "startTime": "00:52:00",
    "text": "there are multiple problem types true you know you have this multiple errors case that we're coming up with and uh they have incompatible recommended http status codes and so you need some way to you know convey that one example would be to use 207 multi status but i would say that even if they're all 400 4xx status codes for example you'd probably send it as 400 because that's the most generic for xxx status code and so i think we need to have some more nuanced guidance here about these multiple status cases and i'm i'm really happy to write text about that i just wanted to to while we have the opportunity to do this quote unquote face-to-face or at least as face-to-face as we can be in 2021 that it'd be good to kind of talk through those different cases if that makes sense to folks sanjay i think i was uh when i i wrote this i was wondering how many examples at that early section that we should write so i i kind of tried to combine these two but i agree with my mark that we can have separate examples this was on the top in the earlier draft so i thought maybe introduce these things right there but uh we can introduce them in uh proper sequence like you just have one type of error give example of that and if you have cases like uh different kinds of errors then and 207 could be used and that would be a separate example so mark uh yeah feel free to uh have an update on that no no that that sounds good and um i'm totally with you i i'm not a fan at"
  },
  {
    "startTime": "00:54:00",
    "text": "all of specs that are just big walls of examples that you have to fight your way through um so if we can find a way to balance that to convey the nuance here without you know having too many examples i think that would be a good goal to have here excellent well i could only fit so many examples on the slide and this one look this particular example looked like it would provoke conversation so i'm glad it did uh are there any other items uh on 7807 biz that uh you believe are [Music] would benefit from further participation mark that you want to call attention to i think the the multiple you know since before we started this the multiple problems was clearly the the most um impactful potential change um the ld jason ld context i think we we probably need a a proposal for that i think ashborne uh volunteered to do that if i remember correctly um the uh 32 the extension to show source of problem and request for exact class of errors i think that's just kind of a part of the example you know processing and getting that right so we'll get there um i think the other question that's kind of been the back of our heads is do we want to standardize any uh register with the so the last uh revision we introduced the idea of a registered problem type still a uri but it's it's in a registry to kind of promote good practice and so forth and i guess the question is do we want to go to the effort to define any of those like you know the multiple errors or a validation error problem um and i think that's um something we could do i i do think that that's you know not a trivial design task it would take some time but it's you know we so there's i guess the decision do we want to try and put any in this document or do we want to punt that to to maybe a"
  },
  {
    "startTime": "00:56:00",
    "text": "follow-up document and i i don't have strong feelings that's something we should do with purpose either way excellent well if there's no other comments on this draft we could move on to the next one which i may have to wave my hands a little uh because uh roberto i don't believe is in the call um the rate limit headers uh they the roberto did publish a new update to this uh document just a few days ago uh the items that are seem to be the most popular uh of this conversation around naming of the headers at the moment there is rate limit dash limit rate limit dash remaining a rate limit dash reset um i know mark has suggested that maybe shortening those to rl dash uh there is a interesting conversation about compatibility with existing deployments because this spec is as much as anything is a an attempt to standardize what is current practice um but the current practice starts with x dash so it's going to break compatibility anyway which then opens the door of well well why not rename the fields as well so if you have opinions on that particular topic there is an issue open there throttling scope uh is an interesting conversation that"
  },
  {
    "startTime": "00:58:01",
    "text": "there was a discussion um i believe in the hp working group around whether retry after should have any scope qualifications and it was that it that did not lead to anything other than clarification around retry after i believe here because there is a lot of flexibility around determining um quota policies there is an opportunity to define scope and what's meant by that is is uh is are you being throttled for just this particular resource are you being throttled for all of these resources for your company are you being throttled for just this particular mailbox or this particular website um so there there i believe the extensibility mechanism is is going to be able to address this uh with quota policies but uh there's definitely a conversation worth having there mark just on that um in my experience scoping the applicability of a header is one of the worst things to to leave out well no no that that's not true sometimes it makes sense to leave it out but if it's left out and and it's ambiguous it can be really pernicious to figure out down the road and we you know for retry after we didn't define it because it's already in deployment and it's undefined so we can't just define it by fiat and break some people you know and their idea of how it applies um so if you know to me the the intuitive thing to do here would be to not define a static scope but to say that the scope is undefined but also to define maybe a vocabulary of scopes that people can apply and say well this is scoped just to this resource or this a scope to this entire site or you know carve out the right"
  },
  {
    "startTime": "01:00:01",
    "text": "kinds of of uh primitives that people can use to declare this if they want to declare it yep that seems to be the direction that is is being headed to in that particular thread uh the define header dependencies is uh an issue that talks about um do you need to provide all three rate limit rate remaining rate reset uh are there interdependencies can you define one but not another uh and that conversation is ongoing um [Music] the last item is related uh in two ways it's it is uh an extension to the standardized behavior and refers to the use of a structured field header list as opposed to it's currently using a list because you can apply multiple uh quotas you can say in the next 10 minutes you can make 100 requests in the next hour you can make 10 000 requests so you can define multiple but that is again not compatible with um the existing implementations and so there's questions around capability compatibility with the past so if you have thoughts but don't want to bring them up here please go to github and add your thoughts there and if there are no other comments we can move on to the next"
  },
  {
    "startTime": "01:02:03",
    "text": "oh wait um are you back in the key mark or still in the queue from previously oh he's gone uh defecation header um eric do you want to speak to these or do you want me to sure yeah i can um thanks daryl yeah so this one um we actually we have not um produced a new version since the last meeting um we had we had a couple of open issues still so we have not been i would say super good at closing all of these um as i said there is no new version of the draft mostly i think i would like to encourage everybody to look at the draft if you're not aware of it it's very simple one it's very similar to the sunset mechanism that already is an rfc or deprecation is a header field but you can say this resource still works but it's deprecated so you should think about alternatives it may get shut down all these kind of things it's a very simple mechanism and it can either say this is deprecated or this is going to be deprecated with a date in the future one of the i think most contentious issues we had around this was this question of um scope so is deprecation always just for the resource where you say this whole resource will become deprecated or is there some kind of more fine-grained model i think we still might have some um some issues around that i'm not quite sure to be honest i know that daryl has his own opinions about that"
  },
  {
    "startTime": "01:04:01",
    "text": "taking off my chair i i think you've made a good case for um there's value to just keeping it focused at the resource level um i'll have to go back to our team and say hey that header that i suggested you using you're not using it for the right way and find some other way of doing it but i am i i i think we're getting close to being able to close that one with no action okay that's good to you so the point being there i think that if you think about partial deportation you want to point to particular things that are deprecated or are going to be deprecated you kind of need to have a model how to do that or it doesn't make a lot of sense to do it and and then that that goes pretty quickly very deep into the realm of the representation that you're sending because you somehow need to talk about that and since this is an http header field um we're not really kind of intending to go to that level okay so martin has a question in the chat um to answer your question why says retry after has an ambiguous scope why this not also this scope is not scope as in how many resources did this apply to it the the the desire was to be able to have the deprecation header say there is something inside this response this representation that has been deprecated the entire resource isn't going away but one of the data elements within it is uh is being deprecated so it's it's wanting a much more fine-grained than with than a resource okay it seems like the comments are mostly about retry after so"
  },
  {
    "startTime": "01:06:02",
    "text": "you don't have to worry about that um yeah so that one um then the question was yeah can you redirect to a new location there was just a conversation as to whether or not this was a a valid example and and i think they the issue was tending towards yes this is a valid example yeah and then i so that number 12 that you're i think that one was raised by mark if i recall correctly uh saying that it's just not not such a great design um to do it like that and i to be honest i don't i haven't thought so i think my main point was that i agree that maybe is not a great design but that's how sunset works so it's a design out there in the wild and we could either mirror that design which at least was the starting point for that or we could say okay there's a better way to do that but then then it works differently mark this one uh just waiting to there it is um yeah if i remember correctly in the semantics revision we documented that as a bad practice always at least if julian got his way we did so it it causes ambiguities it causes parsing difficulties and just yeah yeah i mentioned in the chat that because sanjay called out well this is this is uh open api uses deprecated as a boolean and i think mark was suggesting why not just use just a date and if the date is in the past then consider it true and i wish we'd done that in open api so please don't use open api as a model to start to follow for this particular thing you know right now we're using sunset right which does that so and uh"
  },
  {
    "startTime": "01:08:02",
    "text": "complaints about that but i agree that it's probably not the best design and we have a chance to make it easier to work with so um yeah so i think it's a good suggestion but we still have to address that um i was just thinking that you know the api developers were writing the contracts uh not to confuse them too much if there is some um between the open api spike or you know even we have been discussing with async api also and the http header but i agree you know i'm not saying that we follow that if i was just thinking from people who write the specs you know we don't want to confuse them too much yeah it's just when you map it to programming languages having properties that can be two different types just makes devs have to jump through hoops because not everybody's using javascript cool uh if there are no other comments about deprecation header you know where to find the issues yes so if anybody has any additional um input or comments or whatever please of course you're free to raise an issue ideally or comment on the existing ones we still have to go through the ones that are open i think there's a total of six open issues in there right now so it's not it's not huge it's also not a huge spec but we definitely still have to do some some work"
  },
  {
    "startTime": "01:10:06",
    "text": "excellent okay i am potency key so uh i i think mark just went through all of the drafts and just added an issue he restricted fields um and i think it's a great suggestion and as i mentioned the chat before we should just that should be the de facto suggestion with specs moving forward use restrictory keys unless there's a really good reason not to structured fields structured headers uh the other the other uh issue that came up right at uh ietf 111 was the fact that there is this existing specification for oasis called repeatable requests um for doing a similar thing um however uh from my reading of it uh the beatles request is is somewhat more ambitious and puts signific an additional burden on the server side uh so it is an interesting question as to whether or not it makes sense to have these two things two different specs live side by side depending what requirements are sanjay you want to speak to that curious i am seeing first of all i want to apologize there are no drops since last uh meeting uh bad on us but we definitely would produce one before the next one um i am [Music] looking at the issues and there was one"
  },
  {
    "startTime": "01:12:02",
    "text": "i think eric you you have sent an email to order or data comments list did you receive anything do you have any updates for us on that uh i wasn't sure that's one issue that just came up right after we released the draft and we haven't made any progress on that also yes if i may jump in here so yeah i did receive some so the problem or problem the issue with the oasis repeal request aspect is that it kind of has a bigger scope but it's not just the item policy key they also have these correlation keys so that you can correlate requests um more easily and some specs do or some of the practices out there do both some of them do only item policy keys so in terms of the practice i think that's out there the oasis repeatable requests method has more applicability or is something that uncover more possible scenarios what people are doing [Music] but that would also mean that if if we did wanted to align those or say um there there is a mechanism for doing that then that would also mean that we need some kind of correlation identifier correlation key and we we don't have that right now so yes i heard back from that and basically what we ended up with is saying yes there's overlap but there is also a difference in scope so one question i have is if the repeatable request does some more advanced things what is the better place in the world to end up with a repeatable request spec that says hey if you want to do something more sophisticated go do it that way"
  },
  {
    "startTime": "01:14:01",
    "text": "or do an ietf spec that would like the item potency key which allows you to do it in a simple way but also adds in additional semantics to allow you to also do the things that repeatable requests effectively keep creating a competing spec for those for the with the repeatable requests that's a good question and i don't have a good answer to that sanjay so before writing this up uh i did a bit of digging and i found so many instances where uh what we have so the draft comes after a lot of implementation it seems right it's not like uh i think the application is bit different where we don't have as many when we started writing it we didn't have as many implementations out there now they have increased a lot but in this case it was already used by so many uh api developers so uh it was more about standardizing and honestly i didn't come across oasis's draft then or or usage so i don't know eric has been looking at a lot of apis also he might have uh seen it but i had not seen it so i was just wondering um uh we can refer uh this but uh this deserves its own uh place uh since there are lots of implementations already using it without it being a draft yeah i suppose there's there's no harm whatsoever in"
  },
  {
    "startTime": "01:16:00",
    "text": "creating an initial version of the item policy key that just serves the basic requirements and limit the scope and if there's demand for more value more sophisticated scenarios then address that as a later concern i i suspect the reason why the oasis repeatable requests it can't have more independence in implementation dependencies is because it's largely targeted at people who are building our data apis with our data machinery for implementation hence they can make some implementation assumptions so probably a safer bet to keep it closely scoped to the current implementation requirements of people who are using item policy key at least that will get us the finish line quicker uh so the only other item that uh was listed in the item policy key repo that had uh activity on was um a request to add an appendix about how this relates to conditional requests um there seemed to be support of that and i didn't see any objections other than the fact it will take more time awesome cool um so that brings us to the end of uh"
  },
  {
    "startTime": "01:18:04",
    "text": "the notes on [Music] the documents and the only thing that i want to just call folks attention to is uh mark created a repo to have github discussions and has filled it with we could do this we could do that his he has no shortage of suggestions for work that could be done um and one of the the uh specs that was raised and that might be interesting for this working group is this health check api um [Music] and so if you have scenarios in your working environment where having a standardized response to health check would be useful i encourage you to take a look at that spec and uh go take a look at the discussions and um i with my very newbie chair hat on a little reluctant to suggest hey let's just take on another one and i'm very happy to see link set go into heading to last call so that we can shepherd some documents out and make room for new ones but i would definitely love feedback or whether you think that this health check api is worth adoption mark so to be clear i i created that repo so hopefully other people will put their ideas in there too um but yeah i do have a few um and from my perspective i'm looking you know when if if things get upvoted a lot or if you know there's a lot of discussion about something that to me is an indication that i'll put more energy into it um you know there are a lot of different things i could write um but if people aren't interested"
  },
  {
    "startTime": "01:20:02",
    "text": "i'm not going to put the energy into them so if folks want to put what they're interested in that would be really helpful or down vote or or say this is a bad idea that's that's helpful too and and of course put their own ideas in there yeah sanjay yeah so this one uh i came across this while uh looking at uh spring boots uh inbuilt uh implementation on health check and uh i think i have asked this question to the author um because he has referred that he has looked at different uh i think assure health and spring boot and all and try to accommodate those things but what i couldn't find was uh spring boot is used a lot in enterprises right and have they adopted it or not and if they have adopted this then it's a very strong case but this is a very general problem and to have that defined in a standard form would help a lot so i think it's very relevant but uh i had some questions about you know where it is adopted because there are lots of implementations and if this is different than those popular implementations then adoption may take uh some uh you know it may not be as good so so i thought that maybe we can ask the question invite the author and find that out and yeah i really like that discussion group thanks mark"
  },
  {
    "startTime": "01:22:00",
    "text": "eric yeah and so in terms of um adoption right i think like with some of the things that that we're doing in this group it's it's always the same we look out there and we see that there are 20 different ways how people do stuff and then we come up like the good old xkcd right we come up with the 21st way and we hope that it is more convincing than the 20 ways but it always is going to be something where it takes some time until um some specific approach of doing that gains momentum but i think for the health check part we we do see that is a pattern that you see in a lot of apis so the pattern is definitely something that is pretty popular so i think it definitely is something that could have quite a bit of impact and just having one other building block that you don't have to come up with um by yourself but you can just say okay health check apis if we have an and health check endpoint in our api this is how we're gonna do it i i think one thing that's appealing to me is it's another um example of a media type like http problem that addresses a horizontal need across http apis and demonstrates the value of putting a chunk of semantics to solve a particular problem in a media type which is not a concept that many ap api designers are familiar with they largely see media types as well that's applications like json right and we just put all of our semantics inside application slash jason um so i i i i'm definitely enthusiastic for supporting these kind of semantically rich media types"
  },
  {
    "startTime": "01:24:28",
    "text": "you do anything other than go to the chat tab say that again braun i didn't catch the beginning i'm confused okay move on um okay operator perfect uh next step on this i think we have uh do we have to invite the author to [Music] some what what i think that probably needs to be conveyed on that discussion that's good call uh eric yeah so i i've spoken with iraqi and he's he's kind of interested but is also something that that i think he hasn't looked at for a little while so um if we're interested to maybe add this to our list i'm sure we can um we can get him to join as a guest or something like that so yeah he's definitely he's not focusing on that anymore so it's kind of just sitting there but i think it is something that is useful and could be a very useful thing for the group to produce"
  },
  {
    "startTime": "01:26:04",
    "text": "and to answer your question sanjay i think i need to talk to uh folks because i have i have uh rich nodding when i say we shouldn't take any more things on and i have mark in the chat saying oh you can take on lots of more things so we we will we will get consensus on our capacity and then we'll go chase iraqi agreed we need to i mean it's not totally our decision you know if the working group buckles down and finishes off the existing drafts quickly and certainly eric and other and sanji and others have been trying that's great but we don't want to overload people and have a bunch of things in draft that don't progress but it's up to the group martin so you can finish something before you take more work on and that's that will certainly and because when we charted the group one of our statements was you know let's we didn't quite know how to run this working group and because it had such a broad scope and we were like well let's try it for six months and see how it goes and we are somewhat further along than six months and we need to as martin says show we can finish something so"
  },
  {
    "startTime": "01:28:01",
    "text": "if there is no any other business for many folks uh it looks like we can end early go ahead so i have a question about the query uh method if it would also i can't find the draft anywhere um but or maybe i misunderstood but uh i wonder if there will also be a corresponding head method so uh where you have a query on the payload but you get only the headers back and no payload did you understand my question yeah i'm thinking though it's it's probably hard for head to do something because you didn't send the body but i'll let mark speak to that microphone working yay um yeah it's uh so to be clear this is a draft in the http working group and we've pasted the um uh link into the chat a few times now uh uh it's not called draft anything query because we're we're not we haven't locked down the the method name so it's the safe method with body and it's in the http working group um i like daryl i think daryl's on the right path there i think if if if it well you'd send the whole query but you don't get the response back that seems weird and honestly you know i say it's i see it as a dry run basically you could have a"
  },
  {
    "startTime": "01:30:00",
    "text": "it work as a dryer on them to know if your career would get accepted or not but maybe it's just yep um i see your point um i i do wonder if maybe that could be triggered with a header on the request for example i just know that you know head adds a lot of weird corner cases to http and and i'm not 100 sure that if we were designing http from scratch today we would still do head acknowledging that it's useful but you know it's it's having two methods that are supposed to have the same semantics and supposed to operate in the same way except that one doesn't return a body create some weird corner cases so um yeah sure if you have a requirement for that uh please open an issue on the repo it's certainly an interesting discussion to have okay i'll do it thanks thanks so i'll mention the charter there's some discussion going on in the chat the charter for this working group is different from how most working groups are chartered they're given specific tasks and uh and you know uh advisory deadlines milestones as to when we would meet them uh this group um thanks to mark was deliberately left open and so there's very few specifics in it and it's like well let's see what the group needs to do it's supposed to have been revised a while ago francesca says yeah that's um hard to do but we are unusual from other groups in that we don't have specific things to do and mark you can speak next since i assume you want to talk to that kind of put a poison pill in this charter because at least for me personally"
  },
  {
    "startTime": "01:32:01",
    "text": "my goal for this was to make sure that we created a group that was connected to the http api community and and connected to real world implementation and deployment um and if it was just a bunch of itf folks sitting around a campfire chatting about what they thought about http apis i was not interested in perpetuating any such thing um i think we've we've done that to some degree we have some participation from the hp api community um and and what i'm going to to you know we have taken a little longer than than we originally thought to get something out the door um but what i would plead with our area director who i see is up next is that if i strongly suspect that if we get a couple of as they say runs on the board if we get a couple of specs shipped that actually add value to the hba api community i think that will feed more energy into the group and get us some some new people uh who are more connected to the hp api world involved not that we don't have people now it's just i i want more of them um and and so i i think it would be great to see us ship a few specs and see what happens next but i do feel like we have a fairly uh uh successful and and i've been happy with the nature of the meetings i've been wondering a little bit if maybe we should hold in from meetings once in a while it's something maybe the chair should discuss or talk to the community about but yeah i'm pretty happy with where we're at now hi um yeah i just wanted to repeat what i was saying in the chat which is there is this requirement in the chat which is to assess whether the group is functioning well and it it explicitly mentions not only me but the asg so i think that there is an ip for me to bring this in front of the isg and have some sort of um discussion i don't know if it needs to be like a"
  },
  {
    "startTime": "01:34:01",
    "text": "telechat or an informal telechat but i will make sure that this happens just so that we are complying with the charter text i personally think that the working group is functioning well even though that's very subjective so it's kind of hard to say is it functioning well if we don't have a um like very precise um details of what that means or yeah but [Music] yeah this doesn't mean the working group is on probation this is just i i guess another um um another moment to be able to discuss how to uh how things are working for everybody i guess for the community as well um and it is working well if we ship good stuff yes i guess that's the the main thing but but it also takes a little bit of time to do that so no documents yet doesn't mean necessarily that it's not working well um and i agree with mark about possibly possibly having interims that would be nice and coordinating with http um which i know you're already doing but yeah they have interims to replace um itf meetings like week meetings so okay and um i don't know if we want to like start a discussion in the main list about well so that i can bring that to the asg if that would be useful at all or um or it's just maybe not that useful cheers do you have an opinion and mark and everybody else sorry i don't know if it was just me but francesca you cut out there for part of that"
  },
  {
    "startTime": "01:36:04",
    "text": "um okay i i don't know which part um but the last thing i was saying is that i don't know if it would be interesting to have uh uh start the mailing mailing list thread um just to get feedback from the community that i can then bring to the isg to have that discussion about easy functioning well or maybe that's not useful and i just have that informal discussion with the asg muted rich you're muted rich my view is you know if the if the icg in the discussion has concerns then we can probably have some discussion but i don't know that we need to i think the idea of having interims in particular co-located virtually where other api working groups are involved you know w3c and or you know what working group or whoever it is you know open graph that would be a really useful thing interesting thing to try doing um so we can talk amongst ourselves or down on the list as to where you know instead of saying what's a venue we should go to what's a place that we should you know schedule our video interim nearby to help encourage other people so we can certainly do that that sounds good to me yes since i don't hear anyone bringing concerns i think i can just have this informal chat with the isg and and then we have done our job from what"
  },
  {
    "startTime": "01:38:01",
    "text": "the charter said thank you sounds good okay are we returned to the mailing list i believe we are we are thank you everyone for the participation um and the continued good work stay safe stay healthy see you soon see you on the list and then github bye folks"
  }
]
