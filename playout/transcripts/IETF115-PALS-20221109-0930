[
  {
    "startTime": "00:00:05",
    "text": "no all right well I suppose I suppose we could at least do the preliminaries can't we so yeah just don't find it again I'm able to continue the session what do I done here foreign documents gone so much"
  },
  {
    "startTime": "00:02:06",
    "text": "all right so this thing seems to have got itself into a very strange state oh yeah yeah um right shall we shall we kick off so welcome to the pals mpls detnet joint session at ietf115 uh come on so why is this not it's not sharing on this end here right so the usual note well you have um seen this many many times by the time you've been here just remember that um yeah I can see that I can't see it on here um just remember that um uh anything you say why has that disappeared why has that disappeared no share preloaded slides share shares intro sure what am I connected to"
  },
  {
    "startTime": "00:04:03",
    "text": "I've connected to IHF hotel isn't right here let's see if that works any better so just bear with me share right welcome to ietf115 the pals joint session and please read the the note well actual leisure uh meeting tips I'm sure you've read this most important one seems to be to keep your mask on um don't forget to get into the active queue rather than just line up at the microphone so purpose of this meeting this is a meeting is a joint session of Pals mpls and debtnet and it's called to discuss the basic architectural issues and solution proposals um arising from the need to improve mpls support for new applications and uses so the agenda is we there will be a report on the open design teamwork and then we will look at um some updates on requirements the m a header and the ioam encapsulation and then there are two debtnet drafts that um we've been requested to include on the agenda because it is felt that they need a wider Community review and so we're going to put them here in this joint meeting and then there is um some open uh microphone time to discuss issues of Interest"
  },
  {
    "startTime": "00:06:04",
    "text": "um so I had we had hoped that the Thursday open design team uh sessions could be drawn to a close and that we would revert to normal working group procedure and normal working group sort of timing and stuff however um breaking news because we only realized this last week much many of our environment many of us are being embarrassed by this we don't believe that the solution properly describes how to do non-ip payloads and how they will be carried over an m n a enabled LSP so we're proposing to keep the open design team Thursday sessions running for hopefully a short while longer until we have a consensus position on uh how we're going to do payloads other than IP so um we are um we've done the um chairs uh introduction um there's going Tariq you're on next with an open design team report um then we have um a bunch of um net specific sorry uh m a specific drafts and then we'll go to the two dead net discount drafts and uh he was a bunch of useful resources that I suggest you consult at your leisure oh well let's take me to change deck um so Tariq over to you please okay sounds good uh can can you confirm you hear me well yes okay great hi my name is uh Tariq and I'm going to report uh to you about the mpls network actions open design team"
  },
  {
    "startTime": "00:08:00",
    "text": "activities this is report number four that we give out and uh obviously it's the product the work is the product of the mpls m a open design team um I don't have controls so you need to help me a little bit with the pink slides uh right you tell me when you want me to move you want to move to the next one yes please so a bit about the uh the design team itself uh it's a joint activity between three working groups um mpls spells and death net um we meet on Thursdays 11 A.M eastern time as of now uh the open design team chairs also meet weeklies on Tuesdays um we have good participation around 15 to 20 people on a good day a compilation of all the m a documents are given on that link there's quite a few of documents that were produced next slide please do you want to mention that we will be looking for volunteers to do the wiki migration I do yeah we can give a reminder on that towards the end Maybe um yes this is good um so um I'll go over the working the open design team working group documents and give an update on each very quickly some of these documents they are on the agenda today so uh authors will give a detailed update on them let me start with the first one we have the use cases for mpls Network action indicators and ancillary data uh the status of this document it was adopted back in May and we added new test cases recently"
  },
  {
    "startTime": "00:10:00",
    "text": "um ioam direct export and generic function delivery in mpls this uh the working group and the design team continues to define the this document and adding or updating the existing use cases as of now the second document we have is the requirements for mpls Network action indicators and ancillary data um the authors have reported or have addressed another round of comments um specifically came from Adrian this time and as of now the document is uh in a stable condition and it is a candidate for progressing further next slide please the third document that the design team has been concentrating on is the mpls network actions framework um uh the state of this document um again addressed discussion points um specifically raised in the weekly open design team meeting um and we will go over those and more details and and subsequent slides there are currently no outstanding issues uh reported by the authors and this document can be candidate of uh working group last call can progress further next slide please so the update number one that we recently gave since last time uh we wanna we want to report since last time um the open it's about competing m a solution proposals there were multiple of those that the design team has reviewed uh for specifically for packet"
  },
  {
    "startTime": "00:12:00",
    "text": "encodings for the m a solution um again I'm giving the link where all the proposals are compiled in um the open design team chairs encourage the authors to meet and discuss and bring forward a converged solution that was one option the other option is to bring bring about a new unified solution um maybe this unified solution can be cherry picking stuff from the different proposals now the the authors of the m a Solutions competing ones um reported back to the open design team chairs that progress has been made on a converged set of Mna solution documents that's the status that we have so we were we're going ahead with this assumption that we have um you know the authors are collaborating and bringing about um a converged set of mne solutions sorry how many solution documents next slide please the second update is about the order of m a network actions this was discussed in the weekly design team meeting and the team has agreed that a solution should give a deterministic explicit order of network actions um this need of order of evaluation needs to be articulated somewhere and the conclusion was to add it into the framework document and specifically in revision one uh reflected this agreement uh section four one uh details that I will not go uh word by word but I'll leave it for people to go offline at the leisure next slide please"
  },
  {
    "startTime": "00:14:00",
    "text": "uh the third update was about the mpls network action scope again this topic was triggered in the design team weekly meeting um additional text to the m a frame framework document was proposed to generalize the scope we ran a poll on this text to solicit the support for it and we concluded the Paul with a good support the text reflect was reflected in revision and revision two of the framework document and again I'm leaving it for reference but it generalizes the scope of a network action next slide please the next update uh was a poll on the different implementations of an mpls forward characteristics um there were there was a short questionnaire and a short number of questions that um got asked on how existing forwarders and plus forwarders handle special purpose labels uh this questionnaire was triggered by the open design team chairs in collaboration with open design team members uh the the intention was to reveal any dependency that an m a solution can have on existing implementations uh the call or the call was run for four weeks and the responses were anonymously collected and reported in a draft that Adrian had compiled and I'm leaving that link for reference next slide please so about the next steps that we have on the table for the design team uh um Stewart had mentioned there was a uh there was a an intention of um"
  },
  {
    "startTime": "00:16:02",
    "text": "continuing forward as normal but then uh it's a question up for the design team as well as the working group on how frequent and is it a recurring uh meeting that we need uh for the design team moving on um so that's something we have to close on um the next thing is also touched upon by uh by Stewart earlier is the discussion of non-ip payloads uh in an m a packet so that's another thing that we have to discuss in the design team um and progress the solution documents that we have converged on so that that would be the last uh bullet that I'm not showing this is it uh this was the report from the design team I'm happy to answer any questions that I can have an answer for any questions comments going going gone okay thank you foreign so Matthew will talk about requirements thank you um so this draft is co-edited by myself and Stuart and John Drake um next slide so just a brief update on where we are with the the m a requirements document so this document captures the key requirements for these mpls Network actions that affect forwarding or other processing of mpls packets and it's kind of broadly structured as general requirements sub requirements on the sub stack indicators requirements on the network action indicators themselves and also requirements on the ancillary data"
  },
  {
    "startTime": "00:18:00",
    "text": "and these have mostly been derived by looking at some of the solution proposals for these additions to the mpls label stack um also based on the use cases and some of the other discussions have gone on and feedback we've had through uh these regular open design team meetings and just to reiterate these are requirements on the protocol design not on implementations next slide so we had a last call sometime around the last ITF um which we we went through we addressed those comments uh following the working group adoption so there were so many comments that we had that we put them into an appendix in the draft and then we worked our way through the comments uh in subsequent revisions um that appendix has now been been removed we also had some very detailed comments from from Adrian Farrell which we very much appreciated thank you I don't see him in the room but uh thank you for those um so we we think we've we've I hope we've addressed those we also renamed the draft to requirements for mpls Network actions uh to be more concise um and we've been doing some work to align the terminology and Concepts um as they've evolved in the m a framework draft next slide so the next steps we've reviewed several versions of the Draft line by line in the mpls open DT meetings um we may we think we may need to refine or add new requirements to this draft um depending on the the outcome of the discussion on support for non-ip payloads with M A so that's things like pseudo wires and evpn and and so on and Dot netc um so please please review the draft and and post comments to the npls list so I"
  },
  {
    "startTime": "00:20:01",
    "text": "know Tariq mentioned this may be a candidate for working group last call but I think as as editors we think maybe not until we've actually had some discussion on the uh on on the situation with with non-ip payloads and if there's any updates significant updates needed to this this document any uh any comments any questions comments I must say I personally feel a bit embarrassed that I didn't notice this coming given that I've spent 20 years of working on non-ip payloads uh yeah me too right uh G hi chidin from Holly uh hi a message actually uh I also made some comments on the previous version uh I think uh national weather I need to check the update but I'm not sure whether all of them have been resolved or not and since the issue list has been removed we have some other way to track the open issues with this document I think we did address your comments so yeah I'm looking forward to you have a look at the draft and I decide if you've missed anything if we missed anything it's it's mistake rather than anything yeah yeah so just please correct our human fallibilities okay and we'll also check the update thanks uh lower your next for for you it's actually possible to look at all versions on the data track you see you can find the the appendix in their previous version well sure but um the the I think the question is whether we missed mistakenly missed some of his comments and then then you can do a simple diff right so finding the appendix earlier version"
  },
  {
    "startTime": "00:22:02",
    "text": "do it do a diff and you see if the comments are addressed that's easy foreign but it will be nice if the if she uh could um also take a look in case there is some sort of you know blindness going on in our part yeah okay okay is that it thank you very much uh so it's number three isn't it did I do pick the wrong one okay so this one header encodings so I guess this is Jags is it hey everybody yeah quite quiet yeah everybody heard me yeah go ahead okay uh hello everyone my name is Cisco uh today I'm going to present the solution described in our latest uh Jags draft on behalf of our authors and co-authors uh next slide please so we had a substantial contribution from a lot of people so I would like to flash their names next slide please um these are the abbreviations uh for your reference that are frequently used on our presentation and talk um those are being displayed here yeah next slide please uh today we are going to discuss on the scope uh the high level view of our solution uh some of the reserved Network"
  },
  {
    "startTime": "00:24:00",
    "text": "action opports used to build our solution and discuss on um Network action ordering backward compatibility and the advantages next slide please uh the scope of this document is to provide a solution for m a encoding format carried in the mpls level stack by complying with our m a requirement and framework document next slide please um in a high level this solution provides a main building blocks for the instack Mna solution and the combination of this building blocks could be used to con construct what the application needs um as part of this uh the instacoding contains two main parts uh they are network action sub stack header and the network action encoding in which network actions are encoded in the tlb format um next slightly okay so uh the network action sub stack mainly consists of the m a label and network action subtract parameters which are common and applicable for all the network actions encoded under the specific Network action substance a single action Network action sub stack could encode multiple Network actions in it uh let us take a deep look um at the network actions of Stack content so this header contains two main parts um the first one is the m a label and the next one is the network actions of Stack parameters the m a label is a new pspl value that indicates the"
  },
  {
    "startTime": "00:26:02",
    "text": "presence of mpls Network action software electric actions of Stack parameters or the common parameters those were applicable for the network actions encoded in the substance let's take a quick look at the parameters um the p-bit this indicates the presence of post stack Network action and IHS this is a two-bit value that indicates the scope of the network action substance the scope could be Ingress to egress Hopper hall or select and the nasl is nothing but a network action sub stack length so this is actually a four bit value indicates the length of the network action sub stack in or the order of number of LLCs and we have some Reserve bits to be used in future and the uh the last bit is the orbit so it's a ordering bit so in some cases Network actions may require to be processed in order so this bit indicates that the node must process the network action in order it is encoded uh next slide please so Network action encoding are encoded in the tlv format as I described before DNA up code is the type of genetic action they optionally a network action could carry an anxiety data so this anxiety data acts as a value and the network action length acts as a total length of the network action encoded that includes the ancillary data some of the opcodes are reserved to create the basic building blocks of the instack Mna solution and the rest of these are available for the application use that is an Instax op code Ina registry"
  },
  {
    "startTime": "00:28:02",
    "text": "by which the application could allocate and a quote for themselves so in case an application needs to carry an angular data then they need to define the data format and length that will carry that will be carried in the anxiety data and we have uh uoh it's a unknown opcode handling so all the opcodes cannot be implemented on all the nodes so and a node when it finds an in a up code and that it cannot understand then this field will indicate how to handle those packets for example it could skip the unknown Accord and move to the next Network action or drop the packet and Etc yeah next thing please so here actually I want to describe a little bit more about this coping um as we described before each sub stack could belong to one of the scope uh that's i2e hph are select a separate Network action sub stack for each scope makes it easier for the intermediate nodes to process the hubby Hub or select option so a packet could carry all the three uh Scopes simultaneously the p-bit in each subtract will be set with respect to the scope of the post tag data that is encoded that is if a network action sub stack has a scope of uh hubby Hub and the pivot is set in in the network action sub stack parameter then it means that the packet is carrying a post type Network actions with the hardware options everything so um yeah"
  },
  {
    "startTime": "00:30:04",
    "text": "okay so uh here are the uh here are some of the uh reserved Network actions uh actions uh of course which I'm going to describe um this is used for our building blocks for our solution um in the Nia uh um uh one a value one uh we have reserved it for uh carrying the post stack uh data offset so uh this will indicate the starting offset of the post tag action header um start from the bottom of Stack so in some cases if there are cash or L2 uh to uh informations or no the non-ip informations are encoded uh between the mpls mpls stack and the data so even those kind of scenarios could be accommodated by using this offset so that uh post stack notifications could be encoded not necessarily after the bottom of Stack it could be like uh even after some offset so this offset indicates where where the start of the post stack Network action is going to be encoded and the next one is the opcode value 2 is reserved to carry a flag based op code that does not require any angular data to process the network uh actions so we have a separate um INR registry for uh applications to allocate their offset values next slide please yeah so the opportunity sorry you have any questions uh did I move around I didn't move it across didn't I"
  },
  {
    "startTime": "00:32:00",
    "text": "run yeah so sorry I'm interrupting uh I just want to raise the attention that there are questions in the queue would you like to take them now or towards the end it's a choice yeah can we do a towards the end after sure thank you okay thanks um so uh here uh the up Court three uh is reserved to carry a combination of um um so it contains you know like two Fields like an a bit maps and uh anxiety data corresponding to those uh upcode value 4 is reserved to help maintain the uh ordering between the instack and post stack Network actions um in this example uh we want to we want the node to process the uh post stack uh Nai 6 before processing the instack of code eight so when the ordering is mandated then then the orbit in the network subtract parameters must be set that indicates that we need to keep the ordering and this up code new up Code 4 is going to say that and it execute this postdoc Nai 6 before executing my instack up code 8 next slide please thank you so here um we reserve uh the label sorry the up code value 126 to fill in unused 20 bits uh in in some of the cases like uh we won't carry the instack data uh we only carry the postdoc data so in those cases you know like uh this acts as a filler for the 20 bits of a label field um and the bit the P bit will be set to"
  },
  {
    "startTime": "00:34:00",
    "text": "1 that indicates the presence of postdoc data and the Nas is zero so this indicates that you know NSL 0 and the 126 op code is going to say that there is no in stack and the pivot is going to say that there is some post attack data available so that is that is the use of this 126 um so uh currently we have uh seven bits it is a maximum of code we can we can have is uh 147 so for the future expansion uh we reserve this 127 so that um um so in the future actually like if you want to allocate more than 120 127 uh up code then actually uh this 127 could be used for allocating the extension um of course uh next slide please let's talk some something more about the network ordering in some cases uh the network that encapsulates the Mna expects the other node to process the uh Network actions in certain order so the below example provides the framework for maintaining the order of processing the network actions now over this is one of the main building block of the ordering construct uh this orbit must be set to indicate the mid nodes must maintain the order of processing the network action in general processing the network action in order is a complex process especially ordering between uh in stack and post stagnetic actions so we can't expect all the mid all the intermediate nodes can support this kind of a complex ordering process So based on the nodes capability the node could drop the packet if it is not supporting the ordering that could be a multiple types of ordering that is uh ordering could be between only uh only in stack Network actions or between"
  },
  {
    "startTime": "00:36:00",
    "text": "uh only post track Network actions are between instac and post stack Network actions the complexity arises when we have a retract actions ordering between in stack and post that conflict actions foreign I just want to describe just examples in the in the first example uh we wanted we wanted the Instax op code 5 to be processed before the instack occurred two um in the second example we wanted to process the uh flag based ni op code one to be processed before an instack of code 5 and the flag based niop code 0x22 to be processed after the uh in stack of code file so by ordering this way uh we can we can maintain we can ask the intermediate news to maintain their processing order slide yeah so this is an example where the uh post tag up code 6 needs to be uh processed before the uh instack upward five here the reserved in stack of Code 4 indicates that the post stack of code 6 needs to be executed before the instack of code file yeah next slide please so as a part of the solution we maintain the backward compatibility with the interior provocation and these mpls ecmp and coexistence of cash and other things next slide please so the um the solution as Advantage right so the solution is more flexible to encode genetic actions in desired order the solution is also extensible in"
  },
  {
    "startTime": "00:38:01",
    "text": "future the basic constructs or uh Hardware parser friendly yeah next slide please yeah so we have uh some comments and feedbacks among our authors and quotas uh so we are trying to address those things and we have some of the sections you know needs more clarity in our document um especially in the select scope and ordering so these are the things we are working on currently yeah that's it thank you uh we I can take questions now right we have a queue now lower are you still in the queue or there's a hangover from last time no I'm in the cube all right you go first okay so I have you asked one question uh you claim alignment with the framework but if I look at the abbreviation for Network action sub stack you use n-a-s-s while the framework use Nas I haven't checked on the others but there might be more is this something that will be updated yeah sure actually we can update that Nas um yeah sure I'll take a note of it and we you actually should go through the abbreviations and look what the framework is doing and see if there is more okay Hello Joel Halpern from Erickson um let me start by saying the overall approach here is fine with me I don't have a conceptual problem or a fundamental objection but if I have understood the draft right and I'm not sure I have there are a bunch of detailed concerns one is sort of General"
  },
  {
    "startTime": "00:40:00",
    "text": "there are so many ways to do anything in this draft that when we get drafts that are saying here's how to solve problem A or B they say well you can actually solve it one way or another way or another way or another way look if we have to solve every problem four ways we're not going to get interoperability well we're going to have to have every implementation to put four different mechanisms to do the same thing I hope not that's a general comment now two more specific comments let's take the first one the simpler one first you have this ordered bet which you say it tells the the processor whether it must process it in order I don't understand what problem that solves if I have to be able to process the things in order because I may get something with the obitsat then I might as well code it to always process them in order because that will be simpler than writing codes that sometimes does them in order and sometimes juggles them up in the air and does them in some random order as if we don't have a bit that has two different kinds of processing everything becomes simpler so I don't understand what problem the obit is solving yeah uh can I answer sure please yeah sure um so yeah yeah um if you see a network right so we have a mix of Asics in the network so some of them are capable of ordering some of them does it so if the editor expects uh some some ordering to be maintained so then actually he can set the pit and say that this must be ordered so that the intermediate nodes which is which doesn't support ordering can drop the packet so that is the use of this orbit um"
  },
  {
    "startTime": "00:42:00",
    "text": "basically like uh to support you know like low end uh Asics where they don't support the complex things um either some nodes won't support the old bit which would create one class of whoops that doesn't work or it seems simpler to just mandate that the obit isn't there and is always assumed to be said I mean I just don't see any advantage in fact the earlier discussion on the list a lot of us said just specify what order things must be done in and then you can implement it but okay that's for the working group I just wanted to point out it was one example of we have more ways to do things than than seem to be useful there's a another more basic problem that worries me and maybe I'm worrying about something that isn't an issue but let us assume we have an mpls label stack with one or more Network action sub stacks and post stack data now as we go through the network action sub Stacks get packed off somewhere along the way that's fine so if all of them get popped off we still have the post stack data and nobody knows there's still stack data there and when you go process the packet whoops what happens and what happens if the last guy doesn't understand this new extension can we only use post stack data if we're in the case when the last node understands this new service in which case we'd better not be depending on post stack data so there seems to be some interactions between the network action sub stacks and the post stack data and cleaning things up that at least need to be thought about thank you yeah great"
  },
  {
    "startTime": "00:44:00",
    "text": "um Greg minski Erickson um I have a question about um uh pbit and option one uh their relationship so is okay um it appears that uh P did uh if you can bring this um slide up which one uh with uh um basic um header which has uh twice in the beginning uh probably probably in the in the very beginning yeah next next next next yeah yeah or where yeah where their uh option one is explained so probably next one too and that's the next one after that no yeah so um it appears that uh there are two ways yes so that uh there are two ways of indicating the presence of uh posted data object so first it's uh on a very high level uh in a p bit and then uh it tells uh then um there is something uh in the post stack um is that the case or it's my misunderstanding so so Greg actually I think there's a little bit of misunderstanding here uh the PSD is not to indicate that there is a presence of uh post attack data so in general right so we we think that uh the postdoc data will be uh uh coming just after the label stack so in case if that is not the case if there is an uh some data between the post stack action header and"
  },
  {
    "startTime": "00:46:02",
    "text": "the render of the stack then how do we indicate that the postdoc data starts at this particular offset so that is where the the up code one is used so the pivot says that there is a there is a postdoc data and then offset it says that at which point actually I can have my post stack data so this is an optional opcode so if you say like uh in case like if you are if you are creating uh if you're encoding the post stack action header immediately after the uh mpls label stack then we don't need that this offset PSD offset at all but if option if op code one is for posted data then why there is need to do some other indication in a p bit notice I'm saying that that's only for the PSD offset we need to maintain right so if it's for example like if if if op code one to be used when there is a post tag data it is not always to be used when the postdoc data is there if the offset is not immediately after bottom of Stack that's where we use this uh op code one if you see this figure right so I have a I have some other data getting you know like a cash or some other data scaling in between my impeller stack and the post stack data then how do we represent uh or encode those information as part of our header so this is how we do it well uh as I understand uh gash is not to be used in data packets um okay but the real two words can be used right excuse me the L2 VPN control words can"
  },
  {
    "startTime": "00:48:02",
    "text": "be used right so in those cases like uh how do we uh inform the nodes but control but control word is for uh pseudo wire yeah not IP Services yes exactly exactly so that's what I'm saying it doesn't matter right so like here actually we are uh this has to work with everything no but if if there is a control word then uh interpretation is that control word is followed by the payload uh are you changing are you proposing to change the interpretation of the control word no no what here we are saying is that you know like uh if there is a possibility that if you want to add any uh um uh any such data after the uh um stack then still we sub we use this kind of a basic up quotes to say where the poster data Lies by default if this is not specified it is just immediately after the post update sorry after the Imperial stack you're going to line up um this is clearly a longer discussion yes and I I I I I sense that since uh Jack you you brought their uh control word to the discussion it definitely falls into what was identified as a gap that we missed to discuss non-ip payload okay let's uh do it and oh I think discuss that um so Matthew um so I just like this kind of second Joel's comment about what happens if you kind of Orphan the post stack data if you strip the stack somewhere and then you you know then you then you terminate it may be in a PHP case or other cases tunnel internal kind of cases"
  },
  {
    "startTime": "00:50:00",
    "text": "um you know the terminating PE essentially doesn't know what to do with that PSD or doesn't even know it's there um so I think we need a bit more thought about that yeah I think some people think you can look at the bottom of the stack and determine what to do I can tell you that this is absolutely not possible in the mpls design yeah uh similarly I think there's also possibly an issue with PSD and and IP payloads if the PSD comes directly after the label stack yeah because it could ads for IP potentially because you know this is a problem we tried to get around with with control words yep so we need to think a bit more about that because we'd have a general intention not to break anything that's in the network today even if it's not necessarily standard Behavior it's common Behavior and I think it doesn't work that Adrian sort of did demonstrates that you can't really trust very much right uh Matthew actually like uh when you talk about uh the um the postdoc data which needs to be executed at the uh egress point right that's what Joe was also pointing out right so we have a slide number 20 can just go to slide number 20 that's a 22 I think yeah well it's It's associated with with the in stack information like the m a label and the and so on so somehow you need to be able to process it where you strip the MMA type or whether you see the M8 April but I don't know if that's always possible yeah exactly we have a slide on that breaking in so that you're breaking into the service domain if you like yeah that's what actually we have a slight slide on that I can just go to that uh slide 22 slightly fun 22. 20 okay exactly yeah and the 22 like 21 22. 22. yeah so this is the exact case you are talking about right so the uh I want to uh one on my egress note to understand um the postdoc data so"
  },
  {
    "startTime": "00:52:02",
    "text": "uh this is obviously like you know uh we think you know uh the uh Network stacks and the email stack should be there and uh this makes the uh packet to reach the egress which has the m a uh header uh indicating that there is a presence of uh poster data and that's going to be processed on the egress PE Ace okay but that's that's just for the IP case I can play that case not for though too that's a suitable case where you isn't really your PSD could be after control board that's right that's that's what I'm saying like you know the PSD after control board we have that up code one right so that's going to tell uh where the PSD is yeah but you're asking if you're doing PHP you're asking the PHP now to go beyond the control word so it's not just popping the the label stack it's going beyond the control word into this into right you know between I think we need to but we need to think about this we need to progress I think okay so issue networks uh can you go to slide 11 please 11. so um in the first illustration here uh if I have multiple uh flag based nais with Ansley data um how do I specify the scope I have to rely on the one on the top how do you specify the scope for flag based niis so okay so okay you're not specifically talking about this one even even the opcode 2 is a flat based right with Ansley data"
  },
  {
    "startTime": "00:54:05",
    "text": "[Music] um added added in the specific uh Network sub stack so all the all the uh all the all the um any bitmaps right uh should belong to the same scope so when I'm if I'm defining a new Nar flag based Nai with answering data what is the INR registry where I specify the scope I understand that there have been some changes between 0 2 and 0 3 the scope based registry is simply have disappeared uh is there any guidance on how to specify that uh so so this uh this n a bit this is the sub code 3 especially talking about right or uh in general uh n a Flags also talking you're talking about of course yeah I just have a slack based Nai with answered data I understand I mean my understanding is that I would have to use Nai op code 3 in that particular case if we move on I think this is definitely I think I'm learning two things here firstly that we definitely need to continue this um this discussion we we um we really need to you know maintain our momentum of um weekly meetings because there have been so many discussions on on this um on this draft I will say that I've introduce a personal comment if I may at this point I am really concerned at the complexity of this mpls was so successful and so fast because it was simple and I just wonder whether we're destroying that Heritage with some of this work so I think we've got a bit to discuss before we get to uh to conclusion thank you um so I guess we're on the next the next slot which is uh"
  },
  {
    "startTime": "00:56:01",
    "text": "uh data plane encapsulations are in situ isn't that not next who's presenting this ah you might want this I only got one there good morning everyone so my name is Rakesh Gandhi from Cisco Systems and um I'm presenting the mpls end cap for the iom on behalf of the authors next slide please the next slide please so agenda is to look at the requirements and the scope of this work the summary of the procedure and extensions and the next steps next slide please so the requirement is simple there is quite a bit of work that's done in ippm working group there's RFC now 9197 for the iom data fields there is also another draft for the direct export uh they Define Trace points and the requirement here is to carry them with mpls encapsulation um we definitely want to do edge to edge as well as help by out processing and the scope is the m a so this framework jackstrap songs trapped so these are all the uh drafts that's uh kind of normative for this work next slide please so history of this draft uh we started this work a while ago and it has gone through multiple iterations um we had the MP like RT expert review as well um we had gone to gach based approach as well and now uh it's aligned with m a uh"
  },
  {
    "startTime": "00:58:02",
    "text": "so it's using M A encoding as well as the host attack extension header from Ohio so these are the the solutions that we are uh we are being we are discussing this in the working group so uh this is an example of how to use the next slide please uh so uh this is uh using Jack's Draft um uh there is an m a uh label uh bspl and uh if you want to put iom in the post stack uh data uh then the the PBT is set IHS is the scope of it so it basically says so did we process uh up by half or end to end or on select nodes um and then there are other bits like the length and orbit and and whatnot that comes from the draft next slide please so regarding the scope uh PB says that there is a iom and the scope says where it should be processed this is exactly how it is in traffic extra please so this is encoding using highest draft for the Post stack extension header that is a common header it says how many extents and headers are there the length and next header and what is this draft defining is the iom is next header and uh basically in the extension header it would carry an iom option type which is defined in 9197 and other uh ippm working of jobs next slide please so if you want to have multiple iom test points there are use cases like you may"
  },
  {
    "startTime": "01:00:01",
    "text": "want to do some tracing how by hop but maybe only collect end-to-end latency so we would put multiple accents and headers um with their uh iom option types defined in the ippm and uh how buy Hub needs to be should be higher uh should be able to easily access it uh and and to end would be at the bottom next slide please so this is just a big picture how everything put together would look like um you have Instax M A and the post stack ioam data so this is a big picture for how everything fits together next slide please so uh for in case of end to end there are option types defined for end to end in the RFC 9197 uh so if you're doing end-to-end that's what you would use uh needless to say that the d-cap node must support the m a in order for this to work there was a question on how would the Decap node would it would just pop the m a maybe not the post stack but it would it would remove the post stack as well because there's a p bit set right so it will detect that I need to remove M A but there's pivot once I also need to remove iom if I'm doing decaf in this case there is no no processing on the Hub IHOP next slide please uh with the hubby hop uh there are Trace points defined uh just for that so we would use that and again the procedure is the same just the trace points are different except now it gets processed on the on each hop and the scope is set"
  },
  {
    "startTime": "01:02:02",
    "text": "accordingly as well so that M A will tell the midpoint that you need to process this next slide please so we welcome your comments and suggestions um and uh I think we do have a few normative um work that's happening so once that's adopted then we would request that this also be adopted as a use case plan right yes uh Greg mirsky Erickson so um as I understand um The Proposal is um to use um priorit and incremental IM Trace um collecting data in a post tag so this one is about encapsulating it so those Trace points are defined in the ippm the RFC 9197 so you say how would you carry all the stress uh um points in this uh in mpls and this is a way to carry it um so there is no there is no recommendation on which one should be used for mpls or should not be used uh I think that actually that's that's my question okay so according to IAM um RFC prelocated in uh incremental Trace options are to collect operational State and Telemetry information in a data packet so my question is uh in mpls packet if incremental and Trace and uh incremental and pre-allocated are used where the data are collected so we expect that the pre-allocated is easy to implement"
  },
  {
    "startTime": "01:04:02",
    "text": "um so wherever that extension the post extension header is where ioam data fields are defined this is where the pay allocated database will be and it will be updated to carry timestamp interface whatnot okay so uh relative to the payload of the mpos packet where the collected data will be so this is after the bottom of the stack before the payload so before the payload okay so uh if for example there are pre-allocated space is 1K so then uh how much of the payload will be able to carry not very much I mean so these are the the implementation and deployment details on what the hardware can do how big is uh pre-allocated it can support um in theory you can say 64k but Hardware may be able to do only 64 bytes so um it's a question when it gets implemented and what Trace point to implement and what you want to capture so it will be Hardware capability thing yes and what's an impact uh of this IM modes on a dead net over mpos data plane yeah so the job doesn't discuss that and it does something uh we need to discuss and uh cover it okay and so uh for the incremental so as I understand incremental mode means that each node that is to uh add operational State Telemetry information must add additional space to the packet so that means that it needs to push the payload and rewrite the packet so what's the performance impact so this is coming from my PPM RFC 9197"
  },
  {
    "startTime": "01:06:02",
    "text": "um I definitely it is understood that not many Hardware can Implement that uh so if if there is a need for it we can explain um that there is implications if you're doing uh incremental because you want to do uh Hardware needs to move things around and it Hardware be capable of it but yeah it's it's when you implement it those are the challenges you're going to face um it appears that um even though that um the based RFC out of ibpm working group and IAM uh defines a number of different modes um we need to decide which modes are most applicable to mpls data plane because it's not necessarily that all of them are equally applicable and for example um we have uh BFD that been defined for several modes and only one of them uh been applied to uh BFD over mpos LSP this this sounds like it needs a detailed review beyond what we're going to do in the next time we got on the agenda but I I'm I'm not saying we shouldn't have this discussion but I think we probably need to set up some special time to do it no we we can do it of you know I I agree with Rakesh so once we have a settled uh encapsulation solution then we can uh have this discussion in the course of adopting this draft okay yeah lower yes yes addressing the request for a working group adoption uh I think the document is pretty mature however it Reliance um relies pretty heavily on draft Jacks so"
  },
  {
    "startTime": "01:08:03",
    "text": "I would actually like to go ahead with your off Jacks first before pushing this for a working group adoption poll yeah it also uh relies heavily on highest draft as well for post-tech extension headers so um yeah we we need to stabilize the instack post stack um first got those adopted and then come to the use cases okay my my cue shows kariti next actually thank you Hello Kitty compeller so I agree I think we finally came to the same conclusion there's a separate discussion on you know what one can do with iom what's the implication on forwarding performance and so on I think what you're talking about is how we encode it if you have an mpls stack and Greg you have a good point that uh you might want certain modes but not all modes that is relevant to mpls but the actual iom stuff is elsewhere so yeah I think we kind of got there but I just want to re-emphasize because we are on the same page yeah thanks you really need to be I don't know whether you want to speak but you shouldn't be in the electronic queue but put yourself in it afterwards so that we've got a recording of who spoke please just make your point and then how you song from future away uh yeah actually I like to mix a similar comment as uh crazy as I made I think the solutions are not just applicable to the iom trace there are many other different options they can all be supported by the same framework but uh as for the real implementation I think it's uh up to the implementer to decide which option they"
  },
  {
    "startTime": "01:10:00",
    "text": "actually use in their design right all right thank you and that's just done on this okay yeah thanks everyone thank you so it's this we're not going in for a few minutes to work on the BFD um RDI work so who's presenting this please yeah okay this is Tony Juan can you hear me yes okay let me begin and I'm from Huawei and here in the drawing meeting I want to introduce our new job about that at oam namini PFT extension Fontana remote different indication and this is join work with Gen tank and tianan and this is submitted to ITF for the first time next slide please and that net provides reliable service for data flows with extremely low packing loss rates and body end-to-end delivery and by dedicating network resources such as linked families and buffer space and to download flows within a network domain and as listed in IFC and Asus Wi-Fi thenx has three Street close requirements and the first um compared to traditional IP network and which nicknet latency and leaves it to transport or higher layer and and IP adopts best effort delivery and that aggravates the situation um that requires"
  },
  {
    "startTime": "01:12:00",
    "text": "deterministic for the end-to-end latency and second and that net could operate and load the underlay Network and it applies service protection to eliminary laws since it requires to streak packet loss ratio and the third and is Packet ordering function is applied to preserve order in Internet and as it doesn't tolerate much out of all the packet delivery and let's try please and any violation of quality of service should be quickly reported and in details and then that oam requires quick defect detection and remote defect indication and we call RDI in short and bi-directional forwarding detection protocol is now commonly used and it's deployed in forwarding plant and it can detect and Report the numbers of failures but it's not specific for the net domain defects and we mentioned before next slide please and so let's have a closer look at than a specific defense when we need detection technology but this is out of scope of this draft and we need methods for testing RTI in the expense of latency and out on out of order they are not well defined and for packet loss BFD provides insensitive methods which is not suitable for that net OEM So currently there are no is placed than a specific defect indication indicators"
  },
  {
    "startTime": "01:14:01",
    "text": "and Nest die please and so we need to Define such deeper indicators according to damage protein or service and they are the ratio of out of order packets and packet latency and the result of packet loss and so next slide and so the next step is how to achieve RDI and we extend current BFD protocol as it provides diagnostic code field and in in its control packet and other methods to carry this information are all welcome to and we can further discuss and in diagnostic field value 0 to 8 is assigned in IFC 5990 and Knight in in another IFC and others are reserved for use next night please and so we follow similar method to append uh that's in a specific error codes to indicate three main violations against Dana close and so as to guarantee the net and the Damage service and further later value localization and they are packing disorder ratio limit reach and packet latency limit reach and packet loss threshold limited reach and next slide please and our job provides two kinds of encapsulations in terms of IPM mpis and as elaborated internet OEM"
  },
  {
    "startTime": "01:16:01",
    "text": "and next slide please and so next steps we hope to answer any question and receive feedbacks as we advise this job for the first time thank you Jeff you're first in the queue thank you Jeff has BFD chair hongi thank you for your presentation yeah first question this mechanism is not intended to cause the BFD session to go down correct um we want to first uh advertise it in data section and later we can discuss it in bft session that is not my question my question is when the RDI is reported the BFD session stays up correct uh yeah we we have it opened yeah okay so I have two further comments comment number one is that the things that you're trying to detect you know for debt net purposes packet order issues latency themselves can disturb the PFT session and your timers would have to be much longer you know to survive that so this probably makes BFD not a good fit for your solution my second comment and final comment is that there has been work previously discussed in BFD to carry additional information not intended to impact BFD sessions our conclusion in the BFD working group has been that this is not an appropriate use for BFD now we've had many discussions about this but I also wish to give you the gift that Greg mirsky has in uh additional"
  },
  {
    "startTime": "01:18:01",
    "text": "work taken BFD State machinery and is proposing to carry a very similar state that is explicitly intended to carry something like RDI so my recommendation one is that this probably would not succeed in getting code points from BFD but you could probably work with Greg to actually Advance your work those are my comments thank you Sasha actually I have nothing to add to the previous speaker uh I I uh I was going to ask the same question and to comment it uh in any case the dog there is a recent Errata on the on 5880 that said that the diagnostic code must be set to zero every time the session reaches its Upstate so I presume this means that the diagnosis with the current state machine the diagnostic code either should be always zero or simply ignored when the station session is up thank you any further comments right thank you very much and finally right red hello everyone just go ahead you're really quiet though okay hello everyone I'm Tyrone from Huawei it's a pleasure for me on behalf of the co-authors Terran hongi to make"
  },
  {
    "startTime": "01:20:00",
    "text": "this presentation of our new chapter requested replying for dinner to ability to discover next slide please the agenda includes requirements uh solutions to increase root solution uh genetical request and reply extension the definition of genetic capability dictionary objects and encapsulation example for the plan next slide please as per the draft flight for the network and framework Daniel and must support the discovery of it and not really nodes in the net Network and must support the discovery of packet replication elimination and other prism sub functions locations and also Master supported the collection of the tenure service specific information from internet really notes next slide please the alternative technologists include um trace route next slide please as per your job to work the necessary sub layer om it introduced a Pinterest routine mechanism the net ping and dimensions that it could be used for discovery the net capabilities often the naturally node next slide please"
  },
  {
    "startTime": "01:22:02",
    "text": "in our new draft we introduce the net capability Discovery objects to this liver Dynamic capabilities of really nodes this object should be included in the network request reply packets and uh it they comprise of the net capability metadates and Abstract objective header has the corresponding format depending on the specific type of genetic plan the formatter capability Discovery objects is shown as below currently four kinds of objects are defined in a relative object they're not really nodes identify objects then it service protection function objects and the general service flow information objects next slide please when they initiate the node starts a standard ping to discover the dynamic capabilities of which by naturally node the initiator node could send an attack or requests that include the net capability objects indicating that a set of dynamic capability information is requested like service and forwarding sub layer capability as well as the incoming an outgoing flow configurations the initiate node will send the network request continuously and increased by one to TTL each time so all the relay nodes along the path of dinosaur flow will be reached reloads receives a direct request with Daniel"
  },
  {
    "startTime": "01:24:01",
    "text": "capability objects and expel the detail it replies to the initiate node by a genetical reply including a dnetic capability object indicating it's correlative denied capabilities and uh 10 naturally nodes identify object has its identification next slide please three types of coordinary nodes identify objects are defined it compares the library for an IPv6 compared node was identified by a 20 bit node ID well ipv4 and IPv6 node bytes IP address uh open food Spotify service operations capable on that note including initiation determination or relay of the specific stories next slide please uh also they're not really not applicable of service protection could encapsulate service protection function objects in the data Network replying packets describing supported sequence number lens in the service protection functions of packet replication elimination the other preservation next slide please tenant flow configuration on relay nodes could also be delivered by identity first floor information objects call me an outgoing flow information shows the same object to format and the"
  },
  {
    "startTime": "01:26:00",
    "text": "differs from each other by the I and orbit setting the object header the service label in the sub-object identifies a specific standard service flow of Empires they plan the pivot indicates that the service label in the sub-object is allocated from the platform label space ifset next slide please service flow of ipv4 IPv6 data player is identified by the six type of IP headers uh that is a The Source address that initial address the support destination part protocol and DHCP and uh optionally the websacker security parameters index or IPv6 flow level next slide please next slide please foreign capabilities Discovery objects defined in this craft may be used in the net networks with different data plans and will have correlative formats to comparatively with an example Dana capabilities Discovery objects could be encapsulated with the typical here we had in place of the data capability Discovery header next slide please next steps the aggregation and operating sub layer configurations could be collected in"
  },
  {
    "startTime": "01:28:02",
    "text": "encapsulation of different data plans should be specified sorry for the miswriting commentary suggestions now always welcome okay thank you okay questions comments do you only think we should wish to say this was detnet specifically but okay so I think that's the the point where we um get to open mic and the original plan was because to discuss whether we were ready to move into um uh basically stop running the OD the open design team meetings I think we've probably concluded that we um we are pleasured to do that um there's been quite a lively discussion on the uh in the chat room I wonder whether we could usefully um continue any of that face to face or indeed whether my any of my co-chairs have anything that they wish to say by way of introduction to the open mic lower for example Carrick we could um we could use the remaining time to talk about uh discussion of post stack data and where does it sit there's some useful comments in the chat we could bring them forward that's something you know the audience up to the audience and chairs but it's a it's a good topic to continue on either now or later on so I agree with Derek"
  },
  {
    "startTime": "01:30:00",
    "text": "[Music] however I would like Stuart if you can elaborate a little bit on what you said about the complexity and mpls simplicity um to kick off the kick off the discussion so the model I've always had in my mind for mpls I don't know whether it's everyone else's but is that the way that mpls works is that you describe in this protocol stack a vector to a block of code that you've pre-positioned in the node and that's an extremely efficient way of processing actions in the data plane see why we need to add ancillary data to the uh to the packet there are many new things that we want to do for example around latency control is the one that I think of Greg clearly thinks of ioam as another one so clearly we need to make a space for that but I am very worried when I see uh us move away from this Vector to a predefined action model to a model that requires us to pick apart um components in the mpls header and determine what we're going to do in what order and I really am worried that we have we are destroying our heritage not because I have any sort of particular uh you know Nostalgia about it but because it was a very effective method that was very Hardware friendly and I am I just feeling a bit queasy that we are we are sacrificing that and uh I'm not quite sure where it ends and whether it ends in tears"
  },
  {
    "startTime": "01:32:04",
    "text": "well that may be a minority opinion kariti is going to speak and then it'd be Tony yeah we've got creature then Tony okay um so I I share your queasiness I think there are a few um features that we're putting into the new M A approach for example um processing at select nodes I think that's something that we want to put in there just in case but we don't actually have a use case for it quite yet The Ordering of things that you process um that's another thing that I think we're just putting in there um thinking that it would be useful um the efficiency of the representation I think has gone down and so that means there's more to process it's not like I have good answers for every all of this but I think that's a fruitful place for discussion going forward and I will have those discussions but you're not alone okay I mean I'm not ready to be disruptive or anything I would genuinely like us to make rapid progress I I just want to make sure that we make rapid progress in a way that doesn't destroy all this you know 20 years of really good work Andrew you look like you wish to take ad prerogative and go in in XD9 I will put you next uh Tony no no let Tony go I'm talking without my Eddie hat on all right okay Tony then then Andrew thank you um it's past basic queasiness and broken out to outright nausea um so I agree"
  },
  {
    "startTime": "01:34:02",
    "text": "there is no question that what we've created here is extremely complex but once again this is the result of the requirements that were put forth in our discussions and arbitrary ordering seemed to be something that everyone wanted if we can relax that we can dispense with a great deal of this complexity being able to ping-pong actions between in stack and post stack back and forth is insane but that's what people wanted so here's where we are so if you want to reduce if you want to reduce the complexity here the place to start is to decide what requirements you can relax that sounds like a really good agenda item for as soon as we start meeting on on Thursdays uh to see which ones I mean you won't get any pushbacks right I think from the requirements draft authors we just want to do the right thing Andrew um so Andrew from liquid speaking entirely in my own capacity and without any AD hats on I I can see how we can make all of this work not a problem right but I have a concern and this is where I kind of almost Echo what you said that because of the complexity here we might get all this to work in the long term there's going to be a point where people are implementing this implementations and new Etc and that complexity is such that I feel that we could well go through a very buggy period because of that complexity and the danger to that is that if you give something an operator and something to an operator and it doesn't work and it does have bugs because of the complexity Etc"
  },
  {
    "startTime": "01:36:00",
    "text": "you may steer them away from it and once there you lost them they'll never come back again that's just the way that it works that's what concerns me about the complexity here that on the implementation side this is complex enough that it could be buggy to a point of being broken for a long time and that could end up killing it entirely yeah I'm not convinced that any of us are clever enough to figure out whether we've got this right it's so complicated yeah exactly and and I think so that's where my concern comes is about that complexity and saying that if we're not sure that it's going to work let's be very sure before we push it it's breakage yeah we can kind of make it work later but by that stage we've lost the operators you're never getting them back yeah Karrueche I think you want another go yeah Korea compeller so um I would I would propose something at this point we were in a place where we had 16 Reserve labels not counting the standard ones and we had used up eight of them and there was this concern how quickly are we going to use up the rest because they're all these functions that we wanted and they were all initially looking for independent code points we're now in a place where we we have eight Reserve labels left still and we'll burn one for this particular new m a indicator and that will Encompass several functions maybe 10 maybe 20 you know and why don't we take the approach we're stepping into this new Waters and let's take a keep the problem much more constrained remove"
  },
  {
    "startTime": "01:38:00",
    "text": "um to Tony's point which I want to Echo remove a lot of the requirements and say how does this work and what does the implementation look like and if we then come back and say oh we really needed that ordering we're born one more we have eight and each of those can do multiple things once we've gone past the idea that one Reserve level does one function we don't have to boil the ocean with the first one we do so let's you know put our toe in the shallow end of the cool and not pee in it right away apparently we could raise the tone of the discussion here laughs okay I think it's how you next is from future week I like to have several comments regarding the ordering issue uh I think so far we are still a lack of a tangible use cases on to ask for uh actual ordering uh the use cases uh the applications so uh I I think we we better Force to find such a solid case and before we actually make a design mechanic mechanism to support that and secondly uh right oh I see some people comment that we we might make it simple just to uh makes the ISD action in stack actions uh to be executed before the PSD but I don't think that's a reasonable um assumption because the reason we put our action in stack is not because it's a logically it should be executed uh first earlier uh it's might be because it's just don't it doesn't ask for a"
  },
  {
    "startTime": "01:40:02",
    "text": "very big uh data data part because we just simply cannot encode uh a lot of data in in the label stack if it requires a lot of ancillary data for this action we probably the better place to put it in the post stack so that's the reason uh why we have this instack and post stack separation not because their priority or importance but because the data they required so that means in which order we should execute them it's a it doesn't matter where it is if there is inherently some order between them so that's my second point so so on combined we I think we we need uh to further consider because in many other scenarios like the uh IPv6 uh extension header people also uh are proposing new uh applications new use cases but uh nowhere else I I'm aware that some people are talking about this that enforce some order in the protocol design I think for each use case they have a uh the schematics of the use case is clearly defined uh when is uh it should be uh executed and what's the meaning of each data is clear defined by the use case itself so um I think somehow it's better for the just for the Implement Mentor when they uh have this multiple actions appear in the same package they should automatically understand how to deal with them and but no it's just a dictated by some ordering in the package itself thank you how are you Tony remote then Adrian in person I'd like to respond to how you use comment um we went over why we needed ordering in the open design team meetings and we"
  },
  {
    "startTime": "01:42:00",
    "text": "went over that several times I I urge you to listen to those recordings again um that was there's not much question there the only question on the table really is whether we want to backfill from that requirement at this point um so I'll leave that to you Adrian uh Adrian Farrell um so to to stretch the analogy a little bit further I I find myself one of the passengers on the bus screaming as it heads towards the uh Cliff Edge I like the people on the bus they're my friends I like the color of the bus um but I would really like to not go over the edge uh and and so yeah my I share Tony's nausea I think um and I wonder if I've spotted a micro loop um I'm looking at the uh the abstract of the requirements document and it says the requirements are derived from a number of proposals for additions and it sounds to me that maybe what we are doing is talking ourselves into believing the requirements as Engineers who are building the solutions that address the requirements that we are uh you know and and round and round and round and possibly when uh and and I say this from not having participated in a design team um possibly we're not standing back far enough when we look at the requirements uh uh because we're saying this is what we could do here are our requirements rather than this is what we need to do and and maybe we just don't know what we need to do so we're inventing something that might be useful in the future and well that's that's yeah interesting so I'm going to modify the Q order so I don't know let Matthew speak from the requirements uh thing and maybe you hang"
  },
  {
    "startTime": "01:44:02",
    "text": "around in case how you takes us in the same place so massive watching Nokia um yeah I agree Adrian um there was a little bit of there's a little bit of where do we start with the requirements when we started with the requirements draft oh let's look at the solutions that have gone into the into uh um the uh the open design team which is a bit back to fun to be honest the requirements in my view should come from the use cases not from the solutions the solution as a result of looking at the requirements um and but the problem was the the use cases weren't sufficiently documented at the time so maybe we need to go back to the use cases and and go back to the requirements and and re redo them a bit and look through what's really needed for the use cases we have we and there was also a lot of discussion about well maybe we should do things because you never know in the future maybe we'll need it or maybe we'll be able to support this on future Hardware but it's very difficult to design for for the unknown well it would be it would be we'd save an awful lot less money spending a little tiny bit of time here getting this right than discovering we've got it all wrong yeah right uh so running order how you you are next then Tony then G yeah some uh respond to Tony that uh certainly I I'm aware of the discussions uh in the open design team about this uh ordinary issue but uh I've never satisfied with uh you know the cases or examples people race they are one of the example is a probably for ordering the slicing and the iom applications but I also explained actually it doesn't matter because what data to be classed for uh collected for by iom the semantics available Define it really doesn't matter how you put this two uh extension headers or cellular"
  },
  {
    "startTime": "01:46:00",
    "text": "datas or what's their order is in the packet you will again your guaranteed you are required to um to do them properly so in this case I don't think that's a valid example and yeah you have to see some other real examples I think I assume um so I'm sorry how are you that's there is no assumption that we can make that you would automatically do it in the right order um it seems like if we say any implementation can do anything in any order uh we exactly end up in the problem where you could do any things anything you wanted um this is also further compounded by the fact that we have agreed that we can have private actions uh and we have no idea what the semantics of those private actions are how do we order private actions in ways that we don't understand because we can't understand the semantics so either we say the the ordering is completely irrelevant or we say that we have to have some kind of ordering and we have to specify it and if we want to specify and have General ordering well we end up back right where we are with full complexity so takes our choices Jade hi what you doing from Holly I fully agree with what Adrian and the message mentioned that we need to maybe step back and take a look at the requirement okay and to me actually the high the top priority requirement is to have the consider the backward compatibility so that we are sure that we will not break this network and we had to have a chance to break it and recover it again and"
  },
  {
    "startTime": "01:48:01",
    "text": "regarding the like the requirement on the ordering I think there's some discussion that maybe we don't need to like a very flexible ordering specification but just some of the actions can have a default ordering by themselves regardless of the position in the packet and also if we want to uh really introduce some flexibility we need some use cases to support it so that we don't over engineer the solution thanks thank you back to you again so I think one one thing that might help as well as simplifying the requirements based on the use cases is maybe making the the architect or the framework or architecture a little bit more prescriptive a bit more layered a bit more clear as to what exactly interacts with what in in this so at the moment I feel I have to go to the solutions to look at how all the bits work together and that seems to be jumping too far yeah I met a picture of how everything everything grows together to see if it's really simple or not Tony you might want to stay there Matthew because Tony's going to speak uh Matthew please send text I'm willing to entertain anything thanks Tony yeah yeah so maybe this maybe the three of us need a discussion on the telephone to try and sort of speed up getting there or anyone else you know wants to join so that's typically what we've done I mean just just in some previous kind of projects that followed this this sort of model in the past like MP STP yeah we had a fairly prescriptive architecture well that's been the history of all the pseudo wire designers stuff we were quite prescriptive in the architecture yeah um and maybe maybe that's sort of what we write would help here"
  },
  {
    "startTime": "01:50:00",
    "text": "okay and no nobody else in the queue um do any of the chairs wish to make any closing remarks lower Carrick thanks for every for the good uh discussions and everybody attending lower not much thank you very much for participating if you're an interesting discussion and I guess the shares will have a coordination meeting on Tuesday I will send out an invite to that and then probably a design team meeting on Thursday right I thank you I thank everyone for their participation and I think we've moved on a bit from where we were hopefully we will rapidly come to a uh to a conclusion having you know taking in in mind what we what we've learned getting this far on the journey right so thank you [Music]"
  },
  {
    "startTime": "01:52:11",
    "text": "thank you"
  }
]
