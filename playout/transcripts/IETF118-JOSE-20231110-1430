[
  {
    "startTime": "00:00:31",
    "text": "As you had seen in in a number of other slides, Working groups already this week and what you agreed to as you for this meeting. This is the note well. Includes all of our processes and rules. For conducting our meetings. Please familiarize your with it. If you have any questions, feel free to ask either, any of us, 3 chairs, or, our area director. Couple of draft, some general admin notes. There will be draft taken in the online notes tool, please feel free to help contribute so that we, get accuracy and completeness there. Use the Q tool, I'm assuming by, Seth by Friday afternoon that We've all gotten fairly familiar with it, but we will be maintaining the queue. For those of you that are in the room, you can see the one microphone that's in the center behind the pole. So please use the microphone. Please use the q tool and also use the microphone for remote appearance Be clear, concise, and respectful, and please act according to our IETF code of conduct. This is our draft agenda for the day. Is there any agenda bashing Okay. Upon hearing no agenda bashing, our first"
  },
  {
    "startTime": "00:02:02",
    "text": "Presentation is for the 3 web proof specifications. Don't know which one of you, oh, it's Mike. Good afternoon on Friday at IETF. I will be here to talk about the Jason Woodproof specifications much where the original impetus for us being rechartered and sending our work as a working group. Next. So what have we done since we last met our heroes in San Francisco? The primary change in the 2 draft was to align with the CFRG bBS signatures. 03 draft. And part of that was we're using some open source out of matter. To generate the examples in the specs that we have if if the matter software is correct, we have pretty good confidence that what we're doing in the spec corresponds to what the CFRG is doing. And that's for the BBS examples. We did address a number of comments that were made in GitHub and PRs from several contributors. One of them was Brent Zendahl, who I believe is in the room. Mother may yeah. And you're behind the pillar. That was clever, Brent. And the other is from an Italian Alberto who has an implementation"
  },
  {
    "startTime": "00:04:00",
    "text": "and checked some things and found we made some syntax errors and We fixed them. So that's all good. Feedback from developers is goal. Next. So there's a landscape of related specifications. Which I wanted to use this moment to call your attention to. Primarily the BBS signature's draft does continue to evolve. If you went to the CFRG session a few days ago, You heard Vasilios talk about some of the updates to the proof representation in the draft. Some of that happened in a 4 sources tell me that 5 is coming, which kind of completes that And I asked, Tobias Looker who's contributing to those drafts. Okay. When should we ask the Jose Working Group to read the BBS signatures draft. And he said, let's get a 5 out which should be a small number of days or weeks and then I will probably send a heads up to our working group saying, get your eyes on this. This needs to be solid. The other dependency we have for the 0 knowledge proof stuff. Is the BLS key representations draft. Which is in the cozy working group. That's also something that we want to review part and parcel together because it all needs to work seamlessly together. Next So, The coauthors and I and the working group Do you need to keep working through the open issues? You can contribute new ones or Tell us what you think of these issues."
  },
  {
    "startTime": "00:06:01",
    "text": "We will continue tracking the dependencies I noticed that there's places that we need to populate some sections. I know how to do that. I'll do that in the next iteration. And an open question is, are there other algorithms that you wanna to cover in the initial algorithms draft. And if so, why? And even better, if so, are you willing to contribute text. Next. So that's to update and the current plans. I wanted to turn it around and give you an opportunity to come to the mic, having queued As Honesty and tell us your thoughts. I just, entered the link for the issues, and I was shocked to see, like, an gigantic number of open issues. Is that correct, or is that sort of No. That's correct. Some of them are old and probably no longer pertinent. I need to get time with DW and Jeremy and actually triage them assign owners and decide Okay. Which of these are still current? I mean, some of them were two years old. And we may have already addressed them. Some of them we probably have things to do, but you're correct. Yeah. The the other question I had is you have to you mentioned a COC document which defines document in KOCI. Which defines the cozy and chase under Jose representation or was something like that. And so I was wondering because that came up in skit that we also want to have the seaboard based version of this, or see what slash cozy version of this"
  },
  {
    "startTime": "00:08:02",
    "text": "do we already now have it, based on those documents or is there's is there still a gap? For short BBS. Written a seaborne version of JWP yet. Okay. Okay. We have been try we are chartered to do so. But we're trying to get the JSON 1 stable first. Okay. In my view, cozy ones actually easier. Because there's things about working in Jason that require you sometimes do unnatural acts, like, bay 64url and code things. Whereas a seaborne representation binary as binary as binary. Yeah. I've also been in the CF Achieve notice that it it the PBS keeps changing quite a bit, So, any expectations on when this sort of, like, I'm sure you are in contact with, the awesome What I am told. Yeah. And I haven't verified this by my own reading. Is that the PBS signatures computation. Has remained stable for a while. Where there's VPS. Proof representations. And those have evolved based on input from some cryptographers, some more cryptographers. In this case, I think from the BSI folks in Germany. But it it's a fair question. Hi, Samuel Schossinger, Google. We have a number of applications for, 0 plus groups of predicates over authenticated data, and then you just sort of have small numbers, output bits, this sort of thing, Yeah. So I guess we were looking at things like bulletproofs, know if that's been discussed in the group, but not really up to date. With everything that's been going on, but just wanted to lay that out. Does anybody else wanna take that question?"
  },
  {
    "startTime": "00:10:06",
    "text": "Hey. Boris Steele. So when the work was initially chartered, they was several different cryptographic constructions that we're supposed to provide. Several of these properties that, you know, Jason Webb Tokens didn't provide. Know, initially. And so it was selective disclosure and selective disclosure with unlinkability. Some of these are accomplished by batch issuance or, single use tokens. And I think there was some discussion of some others here in all proof cryptographic, primitives, like the systems used by you prove, were discussed at some point. I don't know the status of any of that work in a particular document. So I think there might be some use for selected disclosure. The other hand, for things that are batch batch, we sort of have privacy pass And I think that enough for that use case, for the most part for us. What what is Google's use case? I'm curious for, use of the proofs. I can't dispose at everything at the moment is not, like, approved within. So it's not my place to disclose the moment, but, basically similar use to privacy paths where you have a low entropy communication between context that shouldn't have any tracking identity, identity, identity, identity, identity, identity, identity, identity, between if if you would like to contribute, you know where to find us on GitHub or on the mailing lists? Mike, do you want me to speak a little bit more to that? As well. Go ahead. So working on the BBS stuff, the latest version that they have, I think it made it under the wire for and that, draft 4 for BBS. Bring things out to have a bit of a core protocol versus signing and this is specifically to make, leave the door open for things like credit approved 4 blank signatures,"
  },
  {
    "startTime": "00:12:04",
    "text": "for, things like generating synonymous identifiers based in the audience. So there's several ideas there, and it is definitely a focus making sure that those concepts have a representation in Jason Webproofs. So, That is something we've we definitely want pranked approved. So it particularly for, credentialing use cases are very useful because things like expiry times or, based on their precision, pretty correlating so having a prayer for proof saying just like this document still valid is is pretty important. So we have to work on that. And anything around, other algorithms is appreciated. So feel free to reach out to me or or any of the nights in the group. John Bradley. Mike, BBS has been kind of segmented in CFRG. There is the first part that they're completing, and then there's the Second part, which is blinded, for, yeah, blinded BDS. So for the use case of that verifiable credentials has of doing multiple presenting. Unlinkable proofs to multiple verifiers off of a single verifiable credential have we has JWP taken into account the additional things that are needed for doing whatever sort of magic blinded signatures. There are over the wallet proof case. I think the short answer is not yet. We should put that in our"
  },
  {
    "startTime": "00:14:00",
    "text": "Queue. I do know that I when I had the side conversation with Alberto a couple days ago, one of the implementers in Italy, He was saying that they have use cases where indeed they want to have representations for the blinded signatures. And so at least we have an implementer to help us do that. Because I think being able to support the verifiable credentials use case would be. Barely fundamental and getting something out. Agreed. Who else is in the queue? David, you're back in the queue? Yeah. I just, you know, to answer that point. That that that's, elaboration of what I mentioned, the next draft of BBS is changing the the proof But, the current draft, they broke things apart so that hope they don't have to make a different cipher sweet, in order to do, like blinded signatures, credit attributes, those sort of things they're kind of add ons, not how we represent that and select protected headers, so somebody knows whether or not they can actually understand all the parts of the message. Is something, but, yeah, the, is to make sure that only the holder, only the the person who's supposed to be describe as issues. The scribe has issues. I mean, the No. I mean, Oh, no. David, I think we've lost you. Well, no. We have lost you. Now you're gone. What he recognized. Some Accident is football in Colorado. Nobody panic."
  },
  {
    "startTime": "00:16:00",
    "text": "The problem is here. Okay. What's the If we lost our internet connection, Were they Didn't they jump again? Oh, no. No. I don't think they did. David's back. Yeah. Let me, try saying that again. So the blinded signatures stuff is being refactored to be a, extension, rather than a separate, separate suite. We will need to figure out how to represent extensions as well as there's any changes to the it will call it the container format in order to represent, lighted signature parts. Okay. Brian? Yeah. Hopefully, it's not color up in or not that's going up. I'm gonna I just wanna take a step back and reiterate something I've said from the beginning, but instead of adding new algorithms, I don't have use cases for new algorithms, but I wanna requests suggest again that the whole effort here get rid of the sort of pseudo application of legacy algorithms to and one time use tokens and and focus only on enabling this container format for the the new types of cryptography that are are enabling this stuff because I think it it it really Muddies the picture. It complicates the draft. And and will be hard to maybe reason about the different properties of different algorithms. Sort of Not a new statement, but I I really think you would be preferable and simplifying to the extent that it's can be simplified to to take that stuff out of the the the current draft. And just focus on on enabling the the new functionality. Brian, do you wanna start a discussion of that on the list?"
  },
  {
    "startTime": "00:18:05",
    "text": "Yeah, sure. That'd be the most Yeah. Christina, Yeah. Just huge plus one to what Brian just thought. I think Hannah's just asked what this brand wants to take out. I think like like like like majority of examples in a draft right now use P256. Which I don't say is They're used for heavily of applications. So optimizing the draft for new kind of cryptography It's just binding predicates. On. So blame the BBS and, blood proves in particular sounds like a really, pragmatic and, needed, idea Okay. Anything else on these drafts? Mike, you alluded to it earlier, but what was the time frame for updated drafts? It's partly dependent upon how quickly the CFRG is running, or we may go ahead and deal with some of the issues in the coming weeks without waiting for the CFRT. Okay. I would note there's a comment from John in the, chat that thinks JWP needs to wait for CF RG even if it's unstable. he So, I think there's some discussion to be had on the mailing list Anything This is David. My expectation is that when draft 5 gets else? couplished, Jupy gets updated to reference that with a BBS draft 5 algorithm to account for the difference in proof. So it shouldn't be too far off. Okay. Thank you."
  },
  {
    "startTime": "00:20:02",
    "text": "Alright. Thank you, everybody. Alright. Next Good afternoon, everyone. Thielu from Nokia. I'll be talking about use of HP Key with Jose. Next slide, please. Yeah. HPE is has emerged as 1 of the recently a new cryptographic way of, using hybrid publicly encryption. It was standardized in CFRG. It's used by several protocols obvious HTTP. Apple has recently deployed that for oblivious DNS or HTTP. It's also used by encrypted client, hello, and TLS, and this also leveraged by Melissa. We recently had a draft in course, their working group, which leverage is such picky. So this draft is basically, aligns with the work happening in cause a working group. And, we have tried as much as possible to see that both these graphs, use the same set of algorithms and the same methodologies so that, in both the implementers can use the same technology techniques. Next slide. Quick overview of HPE is that it provides a variant of, public transcription scheme to encrypt arbitrary sized, plain text based on the recipient's public key. It uses is this, this is such picky as the foundational building block. Next slide. Yeah."
  },
  {
    "startTime": "00:22:01",
    "text": "I think the cozy working group had decided to go with the fully specified approach instead of the polymer approach. And, we have followed the same principles. So it's basically HPE, then the mode, currently, HPE runs in 3 modes. 1 is the base mode and then the PSK mode and then the auth and, hot psk modes. And then the key encapsulation mechanism followed by the key derivation function and the algorithm for encrypting and decrypting the payload. So we are leveraging the existing HPE in our registry. Cozy draft is getting updated with regard to various we plan to discuss with them and align with the the all the right combinations that we want to list instead of a large list of combinations to pick the right group set of schemes that are possible. Go ahead, Philip. Hi, Philip Skokan here. I didn't quite get the part where I know there are 3 or 4 modes available. But the way that draft reads at the moment is that you're only registering the base mode. Yes. For using Jose, not the other ones. Yes. Correct. Okay. Thank you. Yeah. The other modes could be registering feature specifications mean, Jose has already waived authentication. So whether we want to leverage those schemes. At least we didn't have any use case, so we didn't want to overload that. We saw very similar approach taken by the courses as well. So we're just aligning with that. Next slide, please. Here's a here's a simple example. Basically, which is using the, out to 56 with the HKDF shot to 56 for the 3 derivation function. And the mode, based 128. Next slide is So they're they're just too new attributes that are added basically with algorithm, the HVAC E base with the with the curve and then the and"
  },
  {
    "startTime": "00:24:04",
    "text": "derivation function and the all looking for encryption and the encapsulated is the output of the, HVAC E encryption algorithm sealed base which were give the both the ciphertext and encapsulated Keith, and that's being sent and then capsulated_key. Next slide. Yeah. So both the direct run key wrapping mode are supported. HPE is a as a function seal base, which basically encrypts the plain text. Using the recipients public key. So in the direct key mode, it would be the plain text that needs to be encrypted and the key agreement with the 3 wrapping mode, it would be the content encryption key, which will be encrypted. Next slide. Yeah. Open base is the decryption function. Which takes the encapsulated key and the ciphertext to provide the 30 traffic and the associated data and info parameters are as usual constructed from the GWA ID and, just a context Next slide. Yeah. Any comments and suggestions? Comments just posted. So I think we will address that, and, we were thinking it would be great if draft is accepted by the working Any discussion on this draft? Good, Philip. Philip again. I stumbled upon this just today after actually hearing from Ori to have a look at And the way I like to learn is by actually implementing. So I started started doing that. And because I want some more outcome out of my effort. I con I'm considering working on a draft similar to Andrew Miller's cookbook, which was originally published for all or the original JWA algorithms that would cover exactly this. So if there's anyone willing to help me out with that, That would be great. You can reach out to me after the session."
  },
  {
    "startTime": "00:26:00",
    "text": "Yeah. We would be willing to work with you on that. So that's great. Thanks. Thank you. So, Oh, go ahead, John. And this kind of leads to my question. You don't have any test vectors in the draft. Is that TCT or there's a reason not to have them we're working on the implementation, so we'll have it soon. Yeah. But the plan is, like, before before it goes anywhere, we have to have those test vectors. Okay. Go ahead, Brian. I did read the draft and then fully understand it, but it it I would have imagined the way I understand the encapsulated key showing up where the encrypted key does now in w e. Edit. Can you explain a little bit why that it why it's been pulled out into a header and then used as direct and possibly as a gear up mode if if that even makes sense. Maybe it doesn't. You want to answer that? Sure. Hey, hey, Brian. So, I mean, In in general, with HPK, there's sort of 2 envelope formats, you see, like, one is like a one shot message, and one is a a 2 layer message that looks like ECDHES sort of And so, you know, what I would expect, for, you know, future tests for this draft or to sort of cover both the one shot and the the the two layer constructions and We would hope, you know, for Jose developers, they would look sort of similar to what you C with JWE and the Jason serialization."
  },
  {
    "startTime": "00:28:01",
    "text": "For JSON Web Encryption, but because of the way HPK, stuff. The building blocks that we get from that, you know, there might be some small differences in how that sort of and those two envelopes end up looking at the end. I've done, like, a really quick rough and probably totally broken and wrong. Implementation, of of both. And, be, you know, helping to contribute those examples to the draft as soon as we can figure out how wrong. I got them. Sure. Yeah. I wanted to add. This is Hanez. Hi, Frank. I want to add that one of the goals of the the document, right, that was to keep it in line with, what is being done in the, cozy working group on the other document. We have had, more time to look at the cozy based version because of some added history. And so we we try to incorporate that feedback. So when a developer looks at either version for whatever reason. Maybe they want support posts in their library they have a similar look and feel So this is this is part of sign may be confusing at the beginning when you look at It to see that there are these two layers that Ori has been just talking about. But if there's a better way to describe it, I I I tried it in the and and and a couple of times in the meanwhile to describe it properly, but, But maybe maybe there's room for improvement. But that's actually not the point I want to say at the mic, I think that argument is quite important because because we worked, like in many other, areas in in the cozy, Jose ecosystem, we have the need to initially the use case to work in 1 field, field but then we realized as people see it there, they realized, actually, they want it in the other environment too. So that's why there's a it's kind kind of like"
  },
  {
    "startTime": "00:30:02",
    "text": "the two groups like siblings, in some sense, And so having the standardized mechanism to do it in the same fashion and to provide the same features. Think it's that's why it's useful to do the standardization work for Jose as well, obviously, in the Jose group where the where the expertise, in that technology is Okay. Any other comments on this draft? 3 Alright. So you said consider for working group adoption. Are you you want to do another revision? Do you have some planned? Did Yeah. I I we still just few comments so we could definitely look into the town and answer that, but Yeah. We can take that as issues as well, but Okay. You keep commerceing. Yeah. So do a, call for adoption at that point. Yep. Okay. Thank get Do you? I I was waiting for somebody to say what they want it done. Yeah. I think the also are asking for asking for working group adoption Like, And there will be issues that will be later. There will be issues like the one that disposed it. There will be issues next week. There will be more issues. Right. I just asked him if you wanna to do an uptake first. So I I I don't have a preference either way. Yeah. I mean, we can work either ways, but we can we can just sense if if if look Alright. We'll send a call for adoption to the mailing list. Is that okay? Thanks. Oh, oh, no. It's not what I wanna do. Ron. So I think, Mike, you're up again."
  },
  {
    "startTime": "00:32:03",
    "text": "Hi. Again. In San Francisco, I did something I'd never done. At an IETF before. Which is I gave a presentation in which I promised that I would write a draft. And I described the draft, and got feedback on the idea for the draft. Before it ever existed. Which was kind of fun because I did get a lot of feedback that was positive and actionable. And so next slide, I wrote the draft. With Orie. And with many of your help as well. I know Brian Campbell had ideas. Several other people had ideas that got incorporated into the draft. And as soon as we publish the 00, More people read it on the list. Felipe is smiling back there. And said, you you named some of the stuff wrong. So by acclimation, we change some names in 01, like, 2 days later. But we had a list of to do items in the draft. When we publish 00. And I thought, you know, we owe it to the working group to try to address what of those we know how to address for we get to prague. So we did that. And that's 2. And next slide. Now I will recap for those of you who weren't in the room in San Francisco for a few minutes. What this does and why? Next. So"
  },
  {
    "startTime": "00:34:00",
    "text": "The ionian registries for Jose and Jose contain at least from one point of view, 2 different kinds of algorithm fires. Those that are fully specified, meaning those that the term that fully determine the cryptographic operations to be performed if you know the algorithm identifier. And that means that there encompassing of all the other choices that you need for the computation, things like curve key distribution function hash function, etcetera. And examples of such fully specified algorithms in Jose are RS 256, ES256k, es 256. Oh, oh, actually, I I'm misreading my own slide. The first two are non Holly Morfic and Casay as well. The last one is fully specified only in Jose. Well, there's polymorphic algorithms that have also been registered. My favorite example to hate is EDDSA. And also the use of ES 256. And Jose. And in the next slide, I'll talk about why I hate this? So a lot of protocols that we use every day negotiate supported operations using just the algorithm parameter. So for instance, in the OAuth world, AS metadata has metadata parameters like say this fast. Token endpoint auth signing alg values supported. With example values like RSA sha256 or"
  },
  {
    "startTime": "00:36:00",
    "text": "Elliptic Curve signature. With, PT56. Similarly, open ID connect does the same thing. What about that invite her to negotiate similarly with just Cause a algorithm numbers. But this doesn't work for polymorphic algorithms. With EDDSA, the one I love to hate. You don't know. Which which of the curves ed25519. Or 80448. Or possibly something else you're expected to use. And in fact, this became a non academic issue for webauthN and 502 where I think one John Bradley wrote a line in the webauth end spec defines minus 8, eddsa, In the context of Webb then, meaning you use curve 6, which is ed25519. There's no way to use for for it, but at least it's unambiguous. Yes. I did a dirty, bad, bad thing. You did a really good thing, John. Next. We deployed ED25519 as a result So here it happens. So how do we solve this problem? The solution in the spec, which Ori and I wrote, Register some fully specified algorithm values. For the algorithms that currently use polymorphic values. In particular, we have a signature algorithm that uses 25519. We have one that uses 448. And for ECDSA, we similarly have ones that specify what curve and hash algorithm to use for cozy. Next. Now the spec does what"
  },
  {
    "startTime": "00:38:00",
    "text": "IETF specs sometimes do is that it adds updates clauses to some existing RFCs. To notify implementers that there's new ways to do some of these things that were previously specified in the existing drafts. It gives implementers notice the fully specified algorithms next. And It updates a different set of drafts including one that I wrote. That It updates the instructions to the designated experts. Basically saying don't register any more polymorphic algorithms. Let's not make this problem any worse. Next. So having written the promised draft and got in got a lot of feedback that was positive relative to many individual drafts that I've ever written. I would like to ask if the working group would like to adopt this. Is there any discussion on adopting this draft? Go ahead, John. Yeah. I might I I don't have any personal opinion, but, what are the con what are the feelings in the course working group. At least at some point in time, like, 2 years ago, maybe one of these discussions was that it's k curve registration was the was the weird I know that have shifted a bit, but is there, like, consensus in cozy that cozy wants this 4 so I've got several partial answers to that question. I did give a heads up to my cozy co chair."
  },
  {
    "startTime": "00:40:02",
    "text": "Evo that I was thinking of doing this and he said, yeah, that seems appropriate, and I'm fine with it happening in Jose. There's a lot of history of drafts doing parallel things. For Jose and Jose in the same draft. In fact, I wrote one that registered web often algorithms for Jose and Jose. The thing that made me really happy at Chile. Is some of the people who wrote some of the drafts that would be updated including Alari who wrote the EDDSA draft, said on list in Jose, well, that makes sense. So I, surprisingly, haven't had anybody come out of the woodwork and say this is a bad idea. Would you wanna speak? Okay. Just do it. I don't remember what they just thought. Oh, wait. So to be clear, this doesn't remove the existing registrations. This just adds new, fully specified algorithm numbers so that David can immediately go to the web auth in or Fido web server, specification and say, the fully specified, you know, use use The existing number for ed25519 but this other number is also recognized. You can actually send both of them in your web auth and request and authenticator should recognize the 2 as equivalent. And for extra credit, the web authentication server document could even say how to use 448. Yes. Now now we can actually put 448 in, and I expect it Pull request by the end of the day, David."
  },
  {
    "startTime": "00:42:01",
    "text": "Go ahead, Paul. Hey. I really like the idea. Just a small ring Mark, I completely had no idea when I first read the title for this draft. So just, a proposal maybe fully parameterized or, like, parameter less algorithms, algorithms just as a proposal. I'm fine with the working group bike shedding the title. This looks like a good approach to me, especially with PCC hybrid schemes that we'll have to use both traditional and PC algorithms. So polymorphic approach is gonna make it quite quite complicated. We don't know whether we will end up with multiple PCCs rooms and multiple traditional algorithms. We never know that. So seems like the right approach to do it. Thanks. Okay. Jonathan. Hi, Jonathan Hammel. So I, I haven't looked at the draft yet, but I, but I hope that that you'll put in some semantics of what to do if There's a conflicting curve parameter that, maybe sent in in the things. Because Can you explain that? Partly, I ask that because It's impossible to have a conflicting curve parameter with a fully specified algorithm. So if you have a fully speck design thinking that because I'm more familiar with Jose. So if you have, the fully specified parameter But the but the headers also have a curve. The the CRV, that specifies the other one. So say it's like Ed 25519. And then I don't I just think it could possibly happen. I don't know. It's certainly the case that You could try to use an algorithm with a key that doesn't match it. And in all such cases, you better error Yeah. Okay. Yeah. Yeah. Yeah. Yeah. Yeah. Just just"
  },
  {
    "startTime": "00:44:03",
    "text": "Alright, Philip. Okay. Hey, Orest Steel. So, Yes. Definitely. If you have algorithm restriction in the key representation. This is, you should stare shouldn't process. I just wanted to mention. I'm I sent an email to the list, you know, day day, I don't know, some point this week, the presentation and, and lamps about, this, you know, cross mode attack on AEDs. And this fully specified stuff doesn't address that, but it's in the same vein of thinking about binding your key at the time of generation to one particular suite of, cryptographic operations for its crypto period. And not switching to a different cryptographic operation from that key or from anything derived from that key, for the crypto period. And so just wanna in case people are wondering, like, what's is there an overlap there? They're they're not exactly the same thing, but the security guidance you know, is sort of is sort of consistent in its approach to say, hey. Be be very clear about what this key is for and don't use it for other things. Yep. Yeah. Indeed. I talked with Russ Hasely about this for a bit. And essentially, the generic version of what can go wrong is if you do something with one algorithm suite and then you can trick somebody into interpreting it with a different one. In this case, it was if you do things with authenticated encryption, but you can convince somebody to treat it as unauthenticated. You can still drive a truck through that till the cows come home. Thought. Philip, I am an implementer of the whole who's a working, sorry, not the working the hose, suite"
  },
  {
    "startTime": "00:46:03",
    "text": "Now I'm really glad that you mentioned the the K curve registration you did a couple of years ago. you for that. I can still feel the ripple in that in the issue trackers Thank and the different open ID connect server implementations, authorization servers, 10 So that was great. And sort of just as a precaution, before this would be adopted can we agree to not change the algorithm identifier, while it's adopted then. I know it's hard to get a buy in from every body who will be involved in the future. But but but but the the chance of the algorithm changing is a big deal. For instance, in the web increment web platform, it could have been incubator, community group, we are working on registering the secure course. So let's 25519 and for parade. Use for web crypto API. And I wish this came half a year earlier before we locked down the well, we didn't lock it down we we said this is now pretty stable. And there's a key export function, which takes a parameter the format you want your key to be supported as, one of those being a JWK, and in the draft, we made it so that if you export e d25519or448 keys, you get the algorithm property on the key being eddsa. Now this is a relatively new piece of work, and it would be a shame if that was published with a deprecated algorithm right before this gets introduced and adopted. So I quickly run in, removed it from the spec, or asked for it to be removed from the spike. Then I rushed into the all the JavaScript based on that I'm that I'm aware of, removed it from there, but it's already in at least 2 browser implementation. It's gonna be really hard to remove now. To not have them use EDDSA as the exported JWK algorithm. He will probably have 2. I'm gonna"
  },
  {
    "startTime": "00:48:02",
    "text": "create a web platform test for this, or I already did it, but somebody could already look at it and see that a breaking change. I'm gonna avoid that in the future. After we already did it once. And once before that, Let me give you a couple answers to that. Some, I think, pretty positive. Some Not as positive. The the first positive answer is in Jose of old. A decade ago, once we had rough consensus on the algorithm identifiers, they didn't change for the rest of rest of time. Those are still used. And, I I gives me more confidence in today's Jose that because people came out of the woodwork, like, within 2 days in August and said, change these names, and more than one person independently said what to change it to. I think those names are pretty good because more than one person said use these. I assumed as much here. Yeah. Yeah. And so So on the Jose side, Be one of the ones who call you know, I can't promise, but I feel pretty good. On the cozet side, It is almost a certainty that the numbers will change. Because it's a kind of 1st come, 1st serve world. And depending upon how we quickly we finish, And who else registers other algorithms? So for instance, My friend, Tony Natlin, is registering Rain Branpool. Signature algorithms. And those might take the same numeric slots that in the cozy world that you know, in theory we might get. So all bets are off in Jose and Jose, I Okay. Thank you. And thank you for your implementations. So,"
  },
  {
    "startTime": "00:50:04",
    "text": "just for clarification, you're only registering the composite values for existing registered algorithms and that additional algorithms like Tony's Brainpool That's just Sorry. I said that. The 6, he's not in the room. Anyway, so addition in spirit. Aditioning additional algorithms that we desperately need like Brainpool need to come through additional registrations, but Some of those are going do we have any idea which ones are going through, and which other ones should be done here. Because that seems like additional work that we should get. Back channel information from Sean Turner, So we should figure out which additional algorithms this working group actually what's needs and figure out some queue to get those process through. Right. And indeed, an open question is, Should this be adopted? Do we wanna load it up with more algorithms? Or do we want to finish this very quickly in part to get the instructions to the IANA experts updated. And then I'm perfectly willing to work with any of the rest of you on other stuff that needs to be registered in a different draft, but I want this to move fast, fast, so that the problem doesn't get any worse. Go ahead, John. Yeah, it was sheer health of the most, discussion that is increased security. Don't really see how how this draft is hindering a key be used with different algorithms. I don't see it solving"
  },
  {
    "startTime": "00:52:01",
    "text": "that problem but that's a minor thing. And, yeah, Go ahead, Carson. Yeah. Just moment, I just wanted to remind people that our registries are run by people, so if they become aware of an issue, we may be able to to act on this issue. Even before all the formal LSG actions and whatever we need. Have been done. So if if you can generate a succinct statement that we can last call in the working group, consensus call in the working group before, even all these drafts have been written up just avoid registering numbers 2729. I think, people would be able to do that. Thank you. Roman. Hi, Roman. Danie, I'll say no hat in this case. Is this kind of technique of having, forgot what the suggested alternative was nonparameter, or, I'm sorry, fully pravidize mainstream. Does it hint at or suggest a new registry strategy? So let's say So it's gonna be okay in the future. If I make registrations that require prime revision, and that's fine with us. No. Nope. So doesn't that suggest that there's an overall, missing something? Doesn't it suggest that we have to Finesse the future guidance for for future registration. There's text in the draft that updates the instructions. To the designated experts already. Doesn't necessarily change the registry. It's changes to instructions to the designated. Right. Right. Well, that, that's the more refined way. I should have asked question. Sorry. I missed that. It does that. So in the future, We the designated expert would reject something that isn't fully parameter correct. And and Steven Farrell was one of the people who was on I missed that. Thanks."
  },
  {
    "startTime": "00:54:00",
    "text": "board with this as well. Okay. So hearing no obvious, dissent on this document we'll do a call for adoption on the mailing list. Thank you. And and thank you all who cared enough to send feedback already. How many minutes do you have? We have wait. 30. 30 minutes. Yeah. You heard 36 minutes. I can I can read the draft to you? No. No. No. No need to take them off. Okay. So with this document, I'm requesting that the group works on some guidance for that would help protocol implement us and designers to make good decisions about, cozy and, Jose Palots. As you see, like, it's obviously a tough call on where t move the document or where to propose the document. I think this group is in this case, the better choice because of, because there's more deployment of the Kosi based mechanisms compared to the the hose based mechanisms compared to the hose based mechanism sort of problems are larger here. Next slide. Sorry. Can you Okay. So you're well aware that, 4 cozy and toasty used outside the original sort of intention initially Jose was created to deal with signing JWTs, and then we have long past that point. Obviously,"
  },
  {
    "startTime": "00:56:03",
    "text": "and so that's a that's in some sense a good news because they widespread use and developers are quite happy. Comfortable to use those technologies for whatever you like. Unfortunately, that has also created some problems. Because not everyone is carefully paying attention to some of the the assumptions that that are being made here and we started to document following some discussions on the list about API designed for those libraries, up we put a this initial document together, And specifically, we looked into how keys identified as as one item That was, sort of important to me in response to that. There were a couple of other items such as this which I agree with. Hillary suggested to also provide some guidance on the API design He also suggested the a topic that we've been debating about the context information structure, which is used by some of the key exchange mechanisms in in post Technologies And likewise, the encrypt structure, encrypt recipient, lower brought that up, which is not in a document yet, but, so there there are further points that need to be incorporated, not just the one that I have currently in there. Next slide. So what is what is India? What did we start with? So, this is specifically relevant for the use of digital signatures with cozy structures, and hosey structures. Normally, initially there was the idea that you would have a key identifier identifying were telling the recipient what key to use to actually or do the key discovery to look up the key for the the verification step"
  },
  {
    "startTime": "00:58:01",
    "text": "of the distributor signature. And that was kind of nice idea. And that hit and that key ID is in the header to make that processing easier. So the separation was like there's the header and it's the payload and the payload, you you look up the key do the verification. The payload is secured. Then you look at the payload and make whatever security decisions you want. And, In the, later on, we added a couple of other fields to the identification of, this case and, they were all developed independently. So some developers and starting to munch a couple of different fields together to actually do the lookup There's one other use that I've found, which is not so not documented in the in the document is that since you do the use the key ID for the lookup some attackers put, SQL or a kind of SQL injection into the key ID to actually then when you do the lookup, it you're it you're it you're returns all sorts of information, obviously. So that's I thought that I was kind of, nice We didn't specify the semantics of what happens if you do multiple, use multiple fields for a key lookup nor does it say, like, what happens if you do the you do the key identification in the body in the payload of the message rather than in the header. Next slide. Oh, sorry. So I think, the source of some of the problem statement started when the there was no text about what the uniqueness requirements in the key ID where That's my, assumption. I'm second guessing the problems here a little bit. And So that's why a developer started to use multiple different fields in in context and then actually then when the step further and actually use the payload to look up the key, which is"
  },
  {
    "startTime": "01:00:01",
    "text": "really annoying for API designers because you do not necessarily know all the payloads the payload performance. In which and and not the fields in which you need to look into to get that key identifier. On, Funny enough. In in work. I was involved with, with the the PSA attestation token, We actually made that design to but, So I I, play myself a little bit for that too. So the consequence is in the library design, and this is what, my co author brought up also on the mailing list was when you design the protocol, design an API library that passes the these payloads, you actually have to first do the you need to look at the payload, even though it hasn't been verified yet. You need to extract a couple of fields and the library developer doesn't actually know what fields are being used for the key identification. So anything needs to be processed and needs to be made available. And you need to trust to develop. But at once he went through this and did the kilo cup. He actually then does the security verification then double checks the values again which which which apparently, some developers actually missed to do. And the consequences then they make security decisions based on the unverified values, and you can imagine what happens then. So that's that's what the the document, at the moment is scribes and and, provide some recommendations to develop us to avoid that next slide. So As I said, I received some feedback. I want to address those additional points as well. And I'm sure Some of you may have, further sort of your stories about what went wrong, and there's obviously a lot articus on how people misuse"
  },
  {
    "startTime": "01:02:04",
    "text": "the mechanisms. Like, we've seen, various different nuances of this in the in the OS world on on what type of security processing can go wrong? When it reached the chest at the API design, I think that was interesting. Interesting for me because it's I think it's a at the edge of what the IDF, typically does. It kind of outreach to develop us on how to securely develop that API for technology we are working on. So I thought that was actually pretty cool idea. So how would, like, just to think about, like, how could a good API design for that type of technology look like. Maybe we could actually draw some more developers into that conversation I've also spoken to some folks, Neil for example, and, to look at automated test cases to double check, to give developers. Tools in their hands so they can actually run through some tests and see what are they messed it up And as a final remark, obviously looking for other people to contribute. I don't want to do that alone. Nord That's my co also do. And so would be glad if, Someone to join us and, work on this. I think this will be beneficial for developers after all, And we have a lot of like, deployment out in the field. So there's oh, flip. That would be fantastic. Summit. Sam, Hi. Sam Schlessinger with Google, but I'm speaking from experiences that we're not at Google. There's a lot of folks who are using JWTs who wanna do things like rev in and safe patterns for doing that, I think, would go a long way to helping people not implementing, something wrong. K. Interesting, Adi. Per year"
  },
  {
    "startTime": "01:04:01",
    "text": "Mhmm. So I think, I think the first question the group is like, is this actually something that fits into this group. I think so, but I Like, I see Daniel nodding and see, yaron Nothing, But Oh, it's funny. Say it's funny. You should ask that question. Go ahead. Funny that you Hi. Ruminess AD AD now. I should have, mentioned something because it I forgot. In August, we had a conversation because we realized when we recharted this working work We were so excited about all the new stuff, in Jose that we forgot that we you gotta do maintenance on the old stuff. So we kicked off a conversation to recharter and we didn't officially conclude that. And so I, of course, have not advanced, the recharting that can be so technically right now, the last document we saw that Mike was talking about, and this would not be in scope. Because the only thing in scope for the current charter is the is all the the new things, the new things related. So we just also, if we're gonna advance and adopt kind of documents, we just have to make sure that we've run all the with rechartering. So I'm just looking at the chairs to say we're good to close the call. Then I just saw the working group discussion is concluded, and I can take that charter. Guys, those that that extra sentence that I was being negotiated would cover all of the scope. Me because we wanna do a poll now and get consensus that that's would that would it new working group consensus that, yes, we want to do that. Help we could I feel like we already went to the mailing list. We kind of got consensus. We just need to formally say we're good and then, you know, look me and say, Roman, push the push the buttons. We can certainly recheck Okay. There's there's nobody checking here. We can do a poll. We can ask if anybody objects. Is is anybody think this is a bad idea? Would is would that be included in the maintenance?"
  },
  {
    "startTime": "01:06:02",
    "text": "Well, well, you wanna re you wanna re the box. Don't you? No. No. No. I'm I'm I just want to understand what you mean by mental It's like, It feels like maintenance to me. Virtually nobody answered it. Right? Well, why don't we do the following thing? Why don't we why don't we why don't we confirm here is that the previously voice No one has anything else to add to what was already discussed on the mailing list. And let me go scare again, and I'll give you a read because maybe you wanna reopen the box. Okay. Post host 2222 I said, okay. Alright. So I just, added a very shortfall should we add maintenance to the charter? We did send a note the mailing list. However, we really actually had very few responses. There's, like, I can tell you there's five people that answered. I can call them out by name. I I didn't hear any objections to it when I discussed it. Yeah. But I feel like when we talked about it, as I recollect the way I think we talked about it, the Sorry. As I recollect when we talked at 117, there were Yeah. support as well. And then we went to the mailing list to to confirm understanding was there was more support, but I wanna let you judge all of that. So happens. What and, like, also, likewise, for the presentation earlier, like, Coast, Jose HPTE is that maintenance? That would be new as well. That would be news. Yeah. But I think I I think, Mike's presentation. I think Mike's presentation was considered maintenance. So Okay. Yes. That that was what That's what brought you running up to the table. That the the the document that just presented is also not suggesting new mechanism. It just"
  },
  {
    "startTime": "01:08:00",
    "text": "It's it talks about the existing stuff. If we do this, then we don't have to to worry about it. So Yeah. Just give me give me Okay. The keyboard. Yeah. That really quick. Can I go back to my seat? Yes. Yes. We want you to stay there. Affect the rendition of Adelweiss and fill the time until the to the meeting. Alright. So while he's checking, I'm terminating the show for hands. We have 30 in favor. Well, I've terminated the show for him. Why why globally unique? Mean, many cases where people use, Jose in a closed environment, obviously. It then the global would be globally to that environment. But the the issue global to your locality. What the issue the issue is more the the It's it's, probably a boarding issue as part of our explanation issue. The problem was, that you basically scatter the information across a number of different claims, and then you need to sort of compose it into something that you can look up the key that was the issue. And it's maybe it's maybe the head and maybe, in the body, maybe both, So so so the the the original that's fair. Notion of the authors was that it would be globally unique within the scope of the issuer. And, and, and people have taken liberties with back. Yeah. And perhaps it wasn't as clear as some people might have wanted. Surprise, surprise. Surprise, surprise. There are all providers issuing their GWKS is so that the the j Jason key set, and and they have key keys with the same key ID which if, yeah, the keys are there are there's an ECT and there is an RSA key, and they have the same key ID. Because when you do your key selection routine, you know what for which algorithm you're looking for a key for,"
  },
  {
    "startTime": "01:10:02",
    "text": "And then, you know, not to take the RSA key when you're, verifying 6 token. So that's probably something that I I would like to see that abolished. It's gonna stay in my battery for I I I take the issue and blame Mike completely for a lack of precedence. Yes. This draft is maintenance. Now I can go Okay. So alright. So, So back to the charter, We have consensus to to do the add maintenance? You so you have the token? So I take the Started to I apologize. I'm speaking from the seat. Yes. I will I will take the the draft to the draft text, and and put it in the charter. I think we might wanna double check the dates of the milestones because a little bit of time is passed So I am happy to add 3 more months to, to them. Since, you know, since it's been almost kind of that time since it's elapsed since kind of August, but we can double check kind of that offline. Gotcha. Does that sound like a plan? Yep. Alright. Alright. Okay. And The next tele chat is November 30th. Okay. So you don't want us to do the call for adoptions via the draft. Until then it's been added to the charter. Yes, please. I don't wanna see any adoption until we have the Okay. Charter language. So we will do it on the mailing list immediately after the adoption of the charter. Just or at some point. Shortly thereafter. Alright. So Within minutes. wanna promise that. So, you Yeah. No. I've no. It it we we Yeah. I was looking back at our promise to to him. Just and that there is precedent for doing an option calls before the charter allowed it."
  },
  {
    "startTime": "01:12:02",
    "text": "And the adoption code doesn't become sectors, before the chat has been changed. Just saying that there's specific process. That might be the case. I think I have a little AD discretion kind of here, and I would prefer to play that we have it in the charter text and then we do adoption. Cleaner to me that kind of that way because if something happens in the charter in, wanna be in this situation where the working group adopted and then we have to do this unwinding process. Alright. So We will get the charter amended. And then we will do, calls for adoptions for the HBK the fully specified algorithms, Hans, do you but I I do We wanna do another iteration on your document we're not looking to are we doing looking to do a call for adoption on that anytime soon? We didn't really have there was some discussion on that, but I I was doing three things at once, and I missed the Yes. Go. You're you're you can always go. Yeah. I I actually just pulled up the charter. I was gonna talk milestones actually, We have no dates on them, and I think that may be something we do need. Okay. Okay. So we can take that up. So the the dates aren't wrong. It's that we don't have So I will take any dates. I just need some dates. We can We we will give you dates. And we could do it a real time okay. There's a lot of prior, history on on a lot of history on, totally terrible, unrealistic dates so we can make them up No. Not just good. Yeah. We can, like, given what, Roman just said, we can we spend another version, work with in in ever is interested in and then submit a new version. And when then when you do the other call forward option and, can too. Yeah. So, actually, do that Are you looking at I only see the one milestone, and we've met that one. Right? This is from the Malibuist."
  },
  {
    "startTime": "01:14:01",
    "text": "I'm I'm not looking at the mailing list. I'm looking at the ones that are actually in the data tracker. The end And to be honest with you, the document Haunas was just talking about, I'm reading one of the milestones, which says 1 or more documents describing the proper use of algorithms these algorithms must meet the requirements described above, which, you know, you squint That seems like we're probably seeing this. Right. Alright. So wants to do another spend a bit adding myself. So Haunas is gonna do a spin of his document, and then we'll consider adopting it once we've got the charter updated. The rest of the administrative stuff, can we please take offline unless Do do do people really want to discuss milestone dates? Or would they rather have a rendition of Anything. You know, Okay. So with is there any I sound don't see anybody in the queue. Is there anybody that would like to run to the queue for any other business? Anything else? Nothing else? With that, You have 16 minutes until the closing reception starts. If you go, you might get a little koala bear I know you can't wait. Thank you all very much for staying for the end of this meeting. There. It says, Oh, is it advertising? Would you like Mike Wallinger? If I can get one. Maybe that's how I'll"
  }
]
