[
  {
    "startTime": "00:00:09",
    "text": "okay it's 8 a.m sharp my time i think it's 1 p.m vienna time nick and loa should we get started are you trying to say something lower uh no i'll do it okay i think uh we have a tight agenda so um we'll get going welcome to the ietf 113 mpls working group session this is a hybrid online with physical presence not so much of a physical presence there as was pointed um my name is tariq and the other working group chairs co-chairs that we have are lowa and nick our secretary is mack he's going to be helping us uh on minute taking today um i see him in the queue i i want to welcome our new ad andrew alston [Music] it's my pleasure and our pleasure to work with you hello and uh looking forward to working with you um so let me proceed to the next slide then uh this is our usual note well um it governs the intellectual property at itf as well as the code of conduct if you're participating in this conference and you're abiding by"
  },
  {
    "startTime": "00:02:00",
    "text": "these rules so make sure you read them and understand them uh we're leaving some pointers here that might be helpful for the working group um notably um we have a pointer to the working group wiki where we can get to the design team wiki pages as well as well as other material um the slides are there in the on the materials page uh and we are also leaving the github link where we having some work in progress drafts that the design team as well as the working group in general can leverage and use um so this is our agenda for today it is uh pretty packed um the the status slides are um we have almost 11 or 12 slides that we compiled but i will not go through all of them in the interest of time and it is the right time uh if anyone wants to bash this agenda change anything or add or remove please sound your opinion i do see zafar is in the queue um so i will stop right here and allow you to go and ask go ahead yeah so uh many things um there is a dra there is a slot for policy or an npls result label we use um i could not find a working group document oh sorry not working with any any document associated with this all i see is some slides uh that are non-technical and uh full of fud and attacks so i i just wonder about that uh being selected at the agenda item"
  },
  {
    "startTime": "00:04:03",
    "text": "we do have a slot for work that was presented at the design team it's coming up on the next slide it's a policy on special purpose uh label reuse uh the design team had worked on it and uh tony had given the presentation talk on it and and we thought it would be useful for the working group this time to listen to the talk in general rather than just the design team [Music] okay thanks yeah thanks okay thanks therefore so uh i will uh proceed unless anyone else i think laura is there in the queue as well uh do you want to add anything yeah i just wanted to you want to tell sapphire but one of my questions tony would be if he thinks this is worth writing up as draft so look at this as early work i would be happy to write it up as a if as a draft if people feel it's really necessary um you know if people think it's contentious yes um if people will simply accept it and go with it then why bother i'm not suggesting that we write a draft thank you okay thank you okay um i'll move i'll move on and next we have an errata that was reported since last time we met uh it's against rfc 6512 um from the looks of it uh you know there is a um editorial maybe or a typo enter es it should be intra aes but it it might have a technical meaning associated with it"
  },
  {
    "startTime": "00:06:01",
    "text": "um we will have to sync up with ad on this and and see how you know we need to verify that or pursue that further on the next slide uh we we since last time we have had uh a new rfc um we want to thank the the authors the shepherd as well as the working group on working on and producing this document um we do have two other rfc sorry documents that are in the rfc editor queue um one is in its the final stages in the off 48 as the second one is in mishraf waiting on another document the other document is also by the same authors and i think lua is the shepherd you want to comment on what's holding up the other document i don't really want to but the truth is that that's me i've been too busy i will take care of it after the meeting okay okay thanks um we we do have a new document that was adopted since last time we met um and uh i i i don't want to we do have a set of documents that were updated and i like i promised i will not go through the full status report i will leave it for the working group to to inspect the slides if they're interested so i will switch to the next item on the agenda unless anyone has any specific question uh rakesh i see you in the queue so feel free to go ahead yeah i have very quick uh comment on"
  },
  {
    "startTime": "00:08:00",
    "text": "that draft itf and pls 6374 sr uh so we have requested the working group last call on it i'm not sure if you track it separately or not but just note thanks uh thanks for the reminder we do have uh you know a list of documents that have requested um the adoption yeah okay uh i'll change the deck to the first uh presenter who is going to be uh um wreck-ish i believe yes it is rekash okay i will give you the um the control on the slides are cache as well you should be able to flip through them from the bottom of the screen yeah i see it thanks derek uh hi everyone good morning my name is raques gandhi i'm presenting the mpls data plane ium draft on behalf of the co-authors listed here so the agenda is requirements and scope of the draft the summary of the protocol and discussions next steps so what this is uh the draft is about the carrying you know iom data fields with mpls encapsulation so there is a work going on in ippm working group uh there are a couple of drops um on the iom data i believe uh they have finished working blastport as well uh this is for edge to edge as well as hop by hop iom so just a brief history of this draft it's been around for um more than three years now it used to be in spring it was presented there"
  },
  {
    "startTime": "00:10:01",
    "text": "then moved to mpls working group because it's a generic application to mpls data plane last year we did the mplsrt expert review and they were good suggestions came out one of them being used gsch for the iom so we have included that suggestions uh draft was renamed to focus on mpls all mpls data plane there were some concerns raised with uh requesting of the multiple espls and impact on msd that might be the reason why we trigger the dt design theme as well uh based on some review comments um so we have updated draft to address those comments as well so draft was presented couple of times and just so we'll focus on the changes and not go through a lot of details this time so this is the iom gach type we defined to carry the iom data fields this was based on the impedance rt expert review feedback that this is a good option for it so we have added that in the draft uh there are two uh indicators uh used to be different uh espl labels but based on feedback uh one option is to define the two uh flags one indicates that there is iom data present after the bottom of the stack and there is a second flag that says um uh it needs to hop by hop processing so the label can be a entropy label it can be spl or network programming label this is something we can discuss as part of the working group process so yeah we talked about uh the option"
  },
  {
    "startTime": "00:12:00",
    "text": "types uh so if it's end to end iom defines the option types for into end to it it's actually called h2h processing and then hop by hop processing so the packet will look like like this with ioi indicator that says that there is an iom data up to the bottom of the stack and as we had defined gsch for it uh so this is based on uh discussion so far packet would look like this now the procedure is simple we i will not go into the details of the procedure but end cap node will add it and iom as well as the indicator midpoint will ignore it and the cap node will process the iom and remove the mpls with ioa for hub by hub there is another flag defined that says that iom needs the hub by hope processing procedure is very similar to edge to edge case except now you have a byte of processing um required flag set and midpoint or intermediate node will process the iom data based on the flag so uh welcome your review comments and suggestions uh on this important work uh and many thanks for all of the review and um comments including mplsrt expert review uh we are requesting working group adoption and whatever the open items we can take it up as part of the working process that's all i had thank you thank you go ahead please with your question greg yes uh thank you for presentation as you mentioned um so there i am encapsulation in"
  },
  {
    "startTime": "00:14:00",
    "text": "mpls um is uh one of their cases for uh miad and it's reflected in the draft um so can you clarify what type of encapsulation this draft proposes yeah so this was uh there is a gsch type defined based on the mpls rta feedback to carry the iom data field and then there is a second indicator that's defined as bits in the ttl field of a label label being entropy label or spl or network programming label to be discussed as part of the working process so you are proposing multiple solutions no the there is indicator and then there is data right this is in line with uh two um two things that's also part of the miad but my understanding is that gach is not part of the miad or not part of their direction that open design team is working on yeah so this is based on the mprsrt expert's uh suggestions to use um gach and uh incorporated draft uh if miad comes up with a different header uh then it can be adapted as part of the working process okay let's take it to the list thank you thanks greg okay um i have a question rakesh uh um you say that the the the the iuem"
  },
  {
    "startTime": "00:16:00",
    "text": "header uh metadata or uh the uh they have this extension header that you're proposing should be inserted by the by the ingress node or any node so we call it the end cap node that adds the iom end cap will um add as part of the end cap okay and can mult can can kind of how do you handle the case that a an iom header already exists in the packet and and someone tries to add another iom header so yeah lsp hierarchy or something like that yeah i think there is a small section in the draft that talks about it and basically as part of the new end cap there is there are two ways of doing it either adding a new header and the whole iom or uh appending the data to the existing iom so this is these are two options uh we can elaborate and agree on which one is the right one okay i i'm just concerned about the when when uh the one egress ls lsr of one lsp uh tries to remove the whole thing uh the whole header and you want part of it to persist and maybe i should read that section thank you yeah that's a good comment we can elaborate thanks okay we will move to the next presentation [Music] let me see if i can find it then"
  },
  {
    "startTime": "00:18:00",
    "text": "interesting [Music] i'm finding it it's not allowing me to share uh tarek would you hand me to the other slides yeah i i'm uh it's not letting me uh share your slides so um i'm not sure it's telling me okay okay now it is yeah i just released uh i was the share slide more so i just released it and maybe that was the reason oh that was it then thank you okay let me find the oh yeah okay is it ciao yes i'm xiaomi okay go ahead okay hello everyone uh i'm xiaomi i'm presenting lsb ping for sr pass seats this chapter was presented at ietf 109 this is the second time is presented next slide please go to control the slides from the bottom okay i see there's a bit delayed okay right now past segment two is mps data plane uh is defined in draft spring ampere's path segment which has passed the working group last call in spring working group path segment is normally used by the egress nodes for past identification a pass segment must be inserted at the ingress node and must not be popped"
  },
  {
    "startTime": "00:20:00",
    "text": "off until it reaches the egress node path segment must immediately follow the routine segment pointing to the egress node this draft provides three target fact sub to v's for past segment when pass segment is used to identify an sr policy the target effect sr policy is perceived sub v is included in the spping message when pass segment is used to identify an sr policies candidate pass the target effect as a candidate passed perceived sub tuv is included in svp message when pass segment is used to identify a segment list the target effect as a segment list passive sub to v is included in the spp ping message this slide illustrates the format of sub policies passed it sub to v uh as specified in segment routing policy draft a sr policy must be identified through the tuple head and color and endpoint so this subtle v has three fields"
  },
  {
    "startTime": "00:22:00",
    "text": "head and color and end point that identify an sr policy the erase node would use the three fields and receive the path segment to validate the control plane to forwarding plane synchronization for this path segment this slide illustrates the format of sr candidate pass pass sid sub tuv as specified in a segment routine policy draft in sr candidate path must be identified through the tuple head and the color endpoint protocol origin originator and the discriminator so this subtly has six fields of the tuple that identify as a candidate passed the igress node would use the six fields and receive the pass segment to validate the control plane to forwarding plane synchronization for this path segment this slide illustrates the format of sr segmented list past seed subtly and sustain list can be identified through the tuple head and color endpoint protocol region resonator discriminator and segment list id one more field segment list id then the tuple that identifies"
  },
  {
    "startTime": "00:24:02",
    "text": "as a candidate path so this subtly has seven fields of the tuple that identify an sr segment list the egress node would use the seven fields and receive the path segment to validate the control plane to forwarding plane signalization for this path segment so uh [Music] the authors believe this chapter is straight forward and it's ready for working group adoption thank you no questions i have a quick question for you please um is the path segment only uh relevant at the egress or would the transit node be interested in this path segment id uh yes uh in the zero zero version of this job to uh we have no uh decision on whether it's only to egress node or is also relevant to transient nodes and after revision we decided to decided to change it to just for egress node to check to validate because we think uh past segment uh from the the discretion of the uh past segment uh working group draft we think is just relevant to the egress note that's the decision from the authors thank you okay thank you um we'll move to the next presenter i guess i don't see anyone on the mic trying to ask a question okay thank you thanks i think greedy is next uh"
  },
  {
    "startTime": "00:26:01",
    "text": "let me find your set of slides deprecating hello can you hear me yeah if you come bit closer to the mic it was a little bit open yeah i think i can hear you okay all right um this um this is a fairly straightforward draft many thanks to ron for pushing me to do this and for preparing the slides so next slide please so the proposal is fairly straightforward the lsb ping rfc 8209 80 80 229 basically says use a router alert option in the ping packets and we'll explain in the next few slides why that's not a good idea and why it's unnecessary and um so we're proposing to remove this this option from lsb ping and in the process we'll reclassify 7506 to historic 7506 registers routing alert option for ipv6 you have to say why you want to use it so it basically says we want to use it for mpls so we don't need it and this is the only use of it so it becomes historic and the reason for doing all this is that router alert does pose some security issues so you can read rfc 6398 to understand those those issues and it also allows the six-man effort that's looking at you know how to"
  },
  {
    "startTime": "00:28:02",
    "text": "resurrect the hop by hop options and what to do about it they're considering whether we need router alert in ipv6 and they might get confused that um you know lsp ping really needs it so this gives them the freedom to say we don't need that and the biggest thing is that we really don't need router alert in lsp ping next slide please so here's what an lsp ping packet looks like um you got to read this from the bottom up so you got the label stack you've got an ip header inside that and in the echo request the router alert is mandatory then you have a udp with a well-known um port number saying this lsv ping and then you have the actual contents of the lsp ping next slide please so echo reply looks quite similar a couple of things that are different i don't believe you actually need an mpls label stack in the ip header the router alert is optional but then you have the udp header and then you have the reply contents next slide please so the motivation for putting a router alert in the echo request is essentially paranoia we really wanted to make sure that the router that sorry the echo request does not go beyond the egress so to do that we put three protective mechanisms we said that the destination address must be from 127-8 for ipv4 or this funky address for ipv6 and that's not allowed to be forwarded so when you pull off all the labels"
  },
  {
    "startTime": "00:30:00",
    "text": "from the label stack you see that address you shouldn't forward it on top of that we said the ttl must be set to one so when you do all that and you look at the ttl you say oh i'm not going to forward this either and then we said we'll put a router alert it's like yeah so it's total paranoia two levels are plenty and i don't believe anyone actually implements using uh router alert in the lsb ping and even if they did it's a simple change to remove it and it doesn't add any protection uh next slide please now for the echo reply um it's a different motivation and this one's even more questionable the reply has several modes one says i don't care about the reply i just want to ping in the forward direction not not used very much the next one says reply via ipv4 or ipv6 the third it says reply via ipv4 or ipv6 with the router alert set and the the fourth is reply via application level some control channel so mostly what people do is two i don't believe anyone does three what three is about is if you just send an ip packet and you're applying to an echo and it might get lost and so if you use a router alert it will suddenly magically show up at the egress or in this case the ingress i'm not sure what i was on at that moment you'd have to ask my lawyer my doctor and my priest but you know it's there in the in in the rfc and what we'd like to do is remove it next slide"
  },
  {
    "startTime": "00:32:03",
    "text": "so um i think we would like to have the working group look at this you know give us feedback in terms of especially if anyone's actually using it um if anyone actually thinks it's useful i don't believe so but you know um i think the working group should review it i think it's fairly straightforward to adopt this and actually move it on to to you know to the next stage and to classify or reclassify 7506 as historic and probably it would be nice to tell the i think it's six man that's doing the hobbyhop stuff in ipv6 and tell them hey if you thought mpls needed router alert it's no longer the case thank you any questions yes we do have greg in the queue first in the top of the queue uh thank you um i just want to note that uh through other discussions i learned that ipv6 mapped mapping of ipv4 loopback range has no special meaning in ipv6 and at least one uh operating system allows use of these addresses and they get out so ipv6 has only one single loopback which is a address one okay that's good to know the reason why we actually said use the whole range was to give a little more chance for entropy because lsp ping in the hop i hope the traceroute mode you want to explore all the different paths and if you're including the ip address"
  },
  {
    "startTime": "00:34:02",
    "text": "in your exploration in in your ecmp that would help so um that would be a little bit painful but we still have the ttl set to one so um thank you for pointing that out greg we will look at that and come back to you but um you know i i still think that we should remove this but uh ron and i will consult and hopefully the working group will also give us and actually it might be something that we can look at a recommendation of using this range in the documents and might be do some this and say don't use this range use just one single ipv6 address oh yeah but then you don't get the entropy you don't get the you know the exploration use source port number true true okay thank you go ahead the question on which document you actually update you say in the graph that you're updating 75 or 6 and 80 29 those are fairly obvious but in the paragraph above you say that rc 6398 recommends to use this very carefully yes since you are removing the possibility to even be careful isn't 63.98 those are updated no 653.98 doesn't say says nothing about the particular use that we are talking about here it says in general router alert in ip packets is not a good idea especially across the internet so i don't believe that that's affected"
  },
  {
    "startTime": "00:36:03",
    "text": "that is not the mpls drought that's what i'm saying no ah okay can you clarify that sure okay thanks okay thank you thanks thank you or kiriti we'll move uh to the next presentation and we have tony thank you i'll also give you the control to flip slides thank you so there are currently two proposals on the table for reusing eli uh for indicating the the miad structure um these are listed here these are both based on draft ukraine and i wanted to talk about that a little bit there are six claims of advantages for using eli i'm going to go through all of these in gory detail and let's talk and see if these claims are really true claim one we're going to get faster deployment in existing networks that already have el already deployed with an incremental benefit well what is our deployment critical path our working group convent needs to converge on what we're doing we've got software development we go forward right forwarding plan and signaling code we've got testing deployment it's probably going to take us about three years to get something deployed here uh the benefit of uh oh we've agreed we're doing incremental signaling changes so signaling is not a critical path so claim one is pretty inconsequential whether we use eli or different spl is"
  },
  {
    "startTime": "00:38:00",
    "text": "not a big deal claim 2 single label for entropy in the mpls header which helps keeping label stack size smaller well any proposal that includes entropy and me miata extension has the same property this is not specific to reusing eli this is clearly not true claim three when el is already enabled in the network the proposed scheme does not require hardware to support an additional spl indicator well new platforms that could have hard-coded me add support are years away having ubiquitous deployment of these is decades away most new platforms will have software driven npus miad must be supportable on legacy platforms there's no point otherwise so legacy platforms that will add me at support will not require hardware changes that's why their legacy so claim 3 is kind of irrelevant me and cannot wait for new hardware claim four save as a new special purpose label and b related pro protocol extensions to signal its capability in ldp rsvp yada yada yada et okay well this is to claim a reusing eli would save a spl but that creates risk it's not actually backward compatible um eli is expected to have one additional lse and adding more new lses for the isd after the eli is not going to be backward compatible part b we already have agreed that we're going to be doing additional signaling extensions so claim 4a is true but it's more than"
  },
  {
    "startTime": "00:40:02",
    "text": "offset by the risk and claim 4b is inconsequential claim five an intermediate node can compute the ecmp hash with the el field and avoid inconsistent load balancing of traffic flow that can happen when an mpls extension header alters the label stack um assuming the ad includes el this is always true regardless of the spl so this is not actually true claim six this reduces the mpls label stack size when el is enabled for ecmp hashing when mpls extension header is also used as there is only one field for el in the mpls header it simplifies the mpls header processing well assuming our miad mechanism includes el this is always going to be true regardless of spl so claim 6 is also false turning now to another option that's listed there's a proposal that we use network programming labels npl for our spl we were not able to find the definition of npl in any itf document i was able to find a document on the web that suggests that npl is sr specific and we have already agreed that miad is not sr specific so this does not seem like an appropriate approach so all right so basic summary we should go ahead and use just a new spl for me at and i'll take questions go ahead"
  },
  {
    "startTime": "00:42:06",
    "text": "rakesh yeah hi um so uh thanks tony for the presentation um uh unfortunately um i see uh most of the arguments against the claims are um false um and not not very analytical uh specifically for claim one about faster deployment and claim for about signaling extensions um if you look at the history entropy label was you know developed 10 years ago and we're still doing protocol extensions there is there are new drafts in pce and whatnot we're doing protocol extensions so uh should not underestimate the amount of work required for protocol extensions for new spl it will take another 10 years for uspl if you look at the history adding a one bit flag in the eli just to say is me is capable is definitely a lot less work uh lost a lot less protocol work lot less software development easy to certify and deploy and less impact on operators oss system as well so um i think it's definitely faster deployment and it's also backwards compatible because of that big end cap node will not add any ear life that will expose on the legacy node so uh from that point of view it's also a safe to go in brownfield network so i think both conclusions for one and four that you have are completely false thank you okay i disagree with you you're next yep um okay on slide three uh you note that the uh"
  },
  {
    "startTime": "00:44:01",
    "text": "of course the extension header processing itself so then some any maya wherever that formatted would is would be done in microcode however i think the i think the claim is really indicating that the existing label stack walking and detection of an entropy label indicator that spl would remain the same i think that's the important distinction there um so of course we're gonna do whatever uh miad processing uh that comes after that in you know whatever a new software implementation that would be built but um you'd still you'd still benefit from that uh eli walk that you'd be doing anyway i think most of these will probably have to take the list but we can we can continue that there tony i know there's a long way let's take it to the list yeah thank you darren zafar do you want to go with your question uh so my comment is regarding the claim two slide five um the claim two is correct as correct as two plus uh two equals to four math jack presentation and pulse working group explained the point on how to reuse el reduces the label stack size very well or reference that uh in fact is the other one if you add a new spl you add two additional label and also carrying entropy in entropy and eo as well as spl mean you are adding two additional label uh in this track as well so i mean i i don't see any way you can uh basically support or or claim that claim two is false so we already have two other proposals on the table where people are carrying entropy using me ad inside of me ad so the entropy label is not necessary whatsoever you don't need a separate"
  },
  {
    "startTime": "00:46:00",
    "text": "instance of the entropy label like uh going back to what vin mentioned um during pals and what rakesh mentioned um we have a defined entropy label and it's not fully and correctly deployed as of today even so assuming that you're going to migrate everything uh to the new spl is just visual thinking um and um you have to deal with it and then you will have to deal with the full label uh pushing um so you have to carry for some you have to carry for entropy label for some node we have to carry spi is just just a message it's just full label you you will end up with four labels you are married you are getting married with full label uh stack uh for for a simple thing so uh this is please don't make such games i disagree uh the things that are on the table if you're using miat you have room to put entropy in it and there's no point in adding an entropy label too and and then how would you do migration uh all the legacy anyway but we can take it off all of this is doing me add everything that assumes that we are doing me ad already has signaling that uh we are only selecting the ad capable routers we can take it offline all right thank you back to recently i beg to disagree thank you so far bruno can you go back to uh can you go back go forward to slide 18 please slide 18 yes last one okay well in my backup slide yes sir i have a clarification question which may be cultural i'm not sure what you have in mind by the two words at best and would you agree that we can say claims of backward compatibility applies to draft or crime yes thank you i'll agree to that because"
  },
  {
    "startTime": "00:48:00",
    "text": "your draft does not add lses onto the label stack i agree with you but uh i i i would have uh like that summary to be part of you the summary you you you showed us so much it's it's fair to have it in the site thank you for that thank you bruno and ketan quick a couple of clarifications one is uh does the miad proposal plan to cover entropy and all other special labels that are uh out there or is it just entropy and is that something that was been uh kind of agreed in the requirements uh that this is miaad would be encompassed everything while i can't speak to what all proposals are going to do um of the proposals i have seen uh there are opportunities for adding lots and lots of various things onto one spo and i am assuming that we're going to basically try to cram as much functionality into one spl as we can okay which of those two could you refer to that because i think i was able to see it only in one proposal uh the jags draft that covered entropy uh maybe i missed the other which and then for fai also has carries entropy okay and uh second clarifying question uh or last second and last uh this is about miad right i wanted to know your views on uh the draft decline and what it proposes and do you see any problems with that um so i have no problems with that okay thank you okay thank you lola"
  },
  {
    "startTime": "00:50:07",
    "text": "and i would very much welcome and draft unless it's so much easier to discuss the working group if we have oral saying the sun team if you have addressed since this appears to be controversial i would be happy to write a draft okay yeah so i i also wanted to clarify but i think in the meantime it's done i think the most of the statements are not in the context of bruno's draft but actually on all the extension that has been proposed on top of that but i wanted to repeat once your voice is very faint uh can you repeat is this better now it's little bit better yeah go ahead wait is this better no okay avoid the mask what i was trying to say is also clarify that that most of the claims are not in the context of bruno and because where i'm coming from is the following tony right so we have uh i in my view we have learned from the past and i take the example of ib4 and ipv6 which is maybe not the right context but if we change too many things it's going to take a long time before it's adopted and i think you alluded to some of your claims in the presentation and we have to probably segment the extensions that we want to do in mpls in two phases in my view right one is what can we do with the minimum effort and i in any proposal uh i do agree that we have to do micro code change but we have to see with the legacy systems that we have what type of extensions can we support using that legacy hardware if you will which in any form or anything that we"
  },
  {
    "startTime": "00:52:00",
    "text": "are proposing we'll need to do an upgrade right so i'm not disputing any of that but i believe we have to segment the let's say the implementations in two phases one is what i call maybe a minimum set that allows us to have something fairly quickly and fairly quickly means and i do don't disagree with you three three-ish years maybe a little bit longer but and then have maybe something on which is much more extensible and look at what that would mean and i would like us to segment the problem spaces in those two categories because otherwise we might ball the ocean and takes us years before we get anything and i gave the example uh in the morning session about the entropy label just to give you an indication i read i went back to the draft the specification was 10 years ago that we have rfc and i can tell you today there is still a bunch of networks that do not support it okay well there's no question that they're taking it's going to take some time for me ed to get adopted and get out there and there's no question that having all the functions is going to take an arbitrarily long amount of time the only question on the table really is does reusing eli save us time in getting deployed and i don't see that it does anything towards that my point only is for for a minimum set of functionality i think it does okay well somebody needs to explain that because i don't see that it matters one way i think bruno's draft does that in my view bruno's draft doesn't lie because bruno's draft is only talking about cases where we can just reuse eli and not add additional lse still onto set of it without doing uh uh can we take it to the list when uh um"
  },
  {
    "startTime": "00:54:02",
    "text": "all right thank you uh running out of time i i do want uh it's not a question tony it's just a sharing a concern we said ancillary data can change along the path of the packet if we put ancillary data in the entropy label then it will break hashing maybe you mentioned this or touched upon it but yeah quickly that's it that's my comment okay kiriti if you can make it very quick please we are eating so first um first comment is that um thank you um tony stewart and john for this i think it's very important second thing is i wish you had spoken up at the pals joint meeting and third is um if we do this hack and even bruno's draft consider for me constitutes a hack um we're not making forward progress um we really want to make forward progress in mpls thank you okay thank you and i'll switch right away to the next set of slides um by you i think it's extension headers um try to give you the time that you asked for it but we will go over time go ahead or you yeah uh thank you yeah so i have probably five minutes to cover this uh slice and i i will be uh on behalf of our to give an overview of a set of related drafts centered on the theme for mprs extension headers to enable extensible in-network services in nps networks um next slice can yeah first a little bit history uh we started his work in uh middle of 2018"
  },
  {
    "startTime": "00:56:02",
    "text": "and um after that this has been involved a lot uh today it's already the version zero six and uh also uh later in 2019 we decided to split the document and spin off a part to discuss options for the exchange header indicator and also we have two other documents covering the architecture network architecture of using extension headers and some other operational optimizations to make the processing faster so next slice so the basic motivation for this work is that we have seen uh recently there are a lot of uh in-network services our user packages are introduced this in these use cases include in-situm network slicing service function chaining uh multicast segmentality and network programming we can see some common requirements to this applications first we do need to encapsulate some actual instruction header or metadata in user package and also these headers are needed to be added removed or processed totally within the network and also these applications are mostly orthogonal which means multiple such applications may be stacked together in uh and coexisted in a single package and also uh since they are applied to user package uh they they should support fast data planning processing that's a requirement a performance requirement we need to care about and so so now the issue is that uh we so we should also consider to support these"
  },
  {
    "startTime": "00:58:03",
    "text": "therefore we have this work next next slides please yeah so solution is a ips extension header and we shall stop designing piecemeal and incompatible solutions which competes the same resource we have seen several proposals uh just like this they um they specify some new special purpose label and they claim the location after the label stack to fit [Music] actual header and metadata but if you consider multiple such applications to be applied at the same time there will be um there'll be issues about that so we should have a generic framework once for all so the in this uh proposals we have this extension headers uh we will put this extended headers between the nps label stack and the payload and the the in stack indicator to tell you have this uh effective headers so except header is not new it's already been uh used in ipv6 but there are some issues about ipv6 there's a header we should learn some lessons from that the first that uh that for ipv6 the extent header can only be added and removed by the end host but here clearly we need to support in network adding and remove and also in ipv6 there's only one hotbed hub header is allowed so which means if you you have multiple hbh functions you have to put all of them as options in the single hp hd header therefore you create a hierarchical structure so but for the simplicity simplicity we should allow multiple hbh headers together to be chained so we will have a flat uh"
  },
  {
    "startTime": "01:00:00",
    "text": "structure for processing and also uh for ipv6 we need to scan through the other extension header to reach the original layer for headers it can be slow if so so here we should allow the um we can skip all the exchange headers in just one step to access a layer for headers if needed and in ipv6 says if you meet no exchange headers it will drop the package here we should you know uh just ignore no uh exchange headers and still keep forwarding the package just make sure uh you know the for the combat compatibility issues and also for ipv6 this has extension header is not necessarily for past pa fastpass processing but here we should optimize for data playing fastpass processing so next slice yeah so i think the the high level requirement is a flexibility extensibility performance and the backward compatibility uh maybe we can just go the next slides to um quickly wreck about okay so this slides summarize all the possible options for the indicator in stack indicator you can see here we have a four uh group of possible solutions which cover uh all the um possibilities on as i think in other talks these are discussed today but there are some uh conclusions from the open dt uh we will not go to the gale gsh pass and also in this job to be indicated that we prefer to use a single special purpose label as an indicator next slice"
  },
  {
    "startTime": "01:02:08",
    "text": "um maybe we just give the details next slice this is uh how we specify the special purpose label and for the extension headers sorry i just wanted to let you know for you if you can um you know summarize what you want to say uh we are over time but i'll i promise to give you some time and i think meet echo will not close the session uh yeah okay then um okay um let me just escape this we are on slide eight right now it uh extension header right um yeah yeah um so we we we could support multiple extension headers in one package and we simply change them together and we also uh use the next header type to indicate the next extension header uh we have some several special next headers are provisioned to support different cases for example noun means there's no further extension headers and unknown means this is a lasting stage header and the following is a payload and but with type of it we don't know and nps means there's another nps label stack follows the current extension header um also we support edge to edge and the hobbyhop type of extension headers and the hit hop i hope headers will be always put in front of the actual edge headers for the purpose of performance next slides yeah this is the details that you can find in our draft on how how we define the format of this exchange headers um you can see that basically the structure is very similar to the ipv6 exchange header but with some extra"
  },
  {
    "startTime": "01:04:01",
    "text": "information about that next slides maybe this uh more details about how to optimize the operation you can refer to our drafts for the details next slides yeah so here's some hardware implementation consideration because we need to make sure it works in the faster path therefore we should design for simplicity and performance and we believe a simple postdeck extension extension header chin with a simple indicator in instant indicator it's a most simple simplest way uh which can minimize uh password uh uh for finite state machine and also the steps which can which is good for both storage and the latency and as i said before we uh put the hbh headers before the e3 headers uh so to maximize the usability uh given the limited header buffer size and also we prefer to put the extension header indicator at the bottom stack for simplicity and backward compatibility and uh we have we could use a the fvc labels to avoid unnecessary label stack scanning i just escaped this slide so you can read our jobs for more details next slide so the summaries we um believe stage header is a generic solution for nprc natural services uh it's built on a common uh industry practice and the key performance flexibility and extensibility is in mind it's also very compelling for npr's network because i'm ps label stack overhead is much smaller than ipv6 and it's a protocol independent can encapsulate virus protocols and also we"
  },
  {
    "startTime": "01:06:02",
    "text": "don't have too much history burden like ipv6 we have more freedom for innovations thank you let's not miss all my sites okay thank you we don't have much time actually with overtime and i did close the queue um i have any questions please take it to the email list and at this time i will ask my co-chairs if there's anything else they want to share before we close this session uh lower you want to speak i see that you have the mic on i don't think i don't know if you can hear me no i can now i can okay i say i think it's fine to close okay all right thank you so much for a very productive session um we will uh we'll see you next ietf or even the design team weekly meeting thanks a lot thank you bye-bye you"
  }
]
