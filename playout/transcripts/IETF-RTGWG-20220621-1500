[
  {
    "startTime": "00:00:05",
    "text": "yes i can hear you hi this is dr security uh crosstalk thanks so let's get started i okay hello everyone um welcome to rtcwt internal um i'm yunjin and i have my co-chair jeff with me so today we are going to have an interim on semantic routing for okay so for interim meetings ietf noteworld also applies so all participants needs to follow the atf process and policies if you have any question about noteworld there are pointers on this slide that you can look into more details if you have any questions you can ask the chairs all the ids so we'll follow all the ietf ipr disclosure policy as well as rtcwc process so here are some logistics about this meeting please be aware that this meeting is recorded and will be publicly available after the meeting"
  },
  {
    "startTime": "00:02:00",
    "text": "please stay milled during the meeting and when you are invited to talk please make sure identify yourself and speak join the meet i call queue for questions and feel free to use the chat window during the meeting but please make your important point available at the mic so people can everybody can know about it so for notes taking we'll have we have hedge dog so please contribute there especially for people who make ask your questions or make a uh comment please make sure it's recap it's capture there correctly all the meeting materials are available in the link this is the agenda for today please take a look and if you have any questions speak up now dear speakers please not your time please try to keep yourself within your time limits you're going to eat someone else's time yeah otherwise let's get started so we'll have agent to take control the meeting thank you i i don't know whether anything in the ietf has ever been under control but um i will do my best uh to just a quick note the um uh the hedge dock uh link on the slides was wrong but that is showing uh correctly in meat echo so uh people please jump in"
  },
  {
    "startTime": "00:04:01",
    "text": "and um and make notes uh great yeah so so the purpose of this meeting i think is to give a little bit of an airing to what semantic routing is for and uh and what problems it's trying to solve and how and then um uh discuss what a possible architecture solution might look like and float some straw men as technology approaches that might be used one day possibly if semantic routine needs needs work it's not attempting to push solutions uh out there at the moment but more discuss the approaches that could be made and see whether we can burn those straw men and and move forward so i think we should uh leap straight in uh and daniel should uh go ahead uh i guess dan if you ask to um uh share slides then uh the chairs will say yes and we'll get the right slide set yeah all the slides have been pre-loaded so we can just use the share priviledge slice yeah cool okay thanks guys uh let me just start my timer here make sure i stay within time slots so what we wanted to do at the start of our session here was just provide a refresher on semantic routing and give you some background on why we've been sort of investigating the topic some of the use cases and a couple of links to existing documents that you may find relevant and then we'll build on the architecture discussion uh potential um sort of complementary ancillary"
  },
  {
    "startTime": "00:06:01",
    "text": "technologies and then you know where to which direction should we be heading after that cool so what's actually driving some of this discussion well ideally at least in the itf uh it is problems your requirements and although some of our early semantic routing discussion took place within the irtf i sort of the research sphere of influence we are very much uh mindful that there are applicability uh slash use cases for semantic routing already in commercial environments or or near-term commercial environments now i could spend a few minutes talking about the tens or hundreds of potential use cases uh for this type of technology but that's really not necessary because we've all been drinking the kool-aid as the sort of what future internet will look like and enable us um to do but really my main use case is on the next slide and it's specifically around intelligent medical devices so smart med type technology and i'll talk about that in a moment but i think it's worth just reminding ourselves that there are several additional use cases that may be relevant for some people either on the call or others who may start to look at this technology in the future we know that the cloud is sort of dominant now and essentially the internet to a certain degree is providing internet interconnectivity between cloud resources whether sort of hyperscale cloud or highly distributed sort of fog architecture and yes we're going to be talking about capacity in qos so essentially we have a fairly ubiquitous connectivity with with"
  },
  {
    "startTime": "00:08:00",
    "text": "high bandwidth available across those links so the use case that that i'm kind of interested in in fact i in full in the spirit of full disclosure there's two use cases but this is the one that i'm going to talk about today and that's um sort of the health network and certainly in europe we're seeing significant activity for this particular use case there's a several european commission funded projects and epsrc funded projects that's the uk research council that are bringing together telecommunication experts researchers clinical and hospital sites as well as sme type stakeholders and that's to provide connectivity sort of network infrastructure that can connect several emerging devices that are going to be used for patient care and also uh well this is not just kind of proactive patient care that's maybe monitoring your your blood pressure cholesterol or fat content or glucose etc but also reactive uh devices that in some situation you have a particular problem with your health it would sort of trigger a critical alarm and various sort of remedial actions would be taken and these devices have numerous requirements so maybe in terms of networking requirements there'll be devices that that have to be always on um connected low latency minimal bandwidth there will be other devices maybe connected to mri type uh devices that are are used sparingly but actually very high bandwidth super high resolution uh photos and graphics spectrometers uh etc and everything in between some of these devices will have various stacks running directly on top"
  },
  {
    "startTime": "00:10:00",
    "text": "of them others are fairly dumb they have sort of one task in mind and essentially will have to be interconnected through various gateways that that will have an ip stack but it has very limited capabilities so it can't participate in various overlay technologies and you know why why is this an interesting use case well you know clearly it's for our benefit it's massive in terms of sort of growth and i think it's just underlined by the revenue opportunity as well which generally money sort of talks and that funds a lot of our research and technology development now we could just look at historic methods of meeting some of these requirements when we define our problem statements uh and define the use case but actually we're we're we're going to oh i've got a request to go into slide deck mode okay i'll try that problem is i've got multiple monitors so now i have to stop sharing and resharing my screen but while i do that i will try to multitask um essentially we need to sort of take an a slightly different approach uh with solving some of these problems i think adrian you have to give me us the screen share again thanks okay there we go should have a happy customer now um we we can't just build up new infrastructure and expect to throw unlimited bandwidth at it um and that's that's a debate a discussion that we're going to have um later we could uh jack up our qrs capabilities provide more memory and cpu i.e more state to devices more logic more capability um but that just increases the cost of the physical element as well and maybe requires some um essentially overhead for packet processing and forwarding um maybe we should sort of reconfigure our topology"
  },
  {
    "startTime": "00:12:01",
    "text": "that makes sense especially when we're looking at low latency applications uh maybe we should just throw away existing ip stacks legacy stacks and and invent something new all of those are potential options i suppose uh what what are we looking at here well essentially every one of you is an expert and will understand the uh the architecture here in terms of routing it's it's tried and tested for many decades already and what we're advocating is semantic routing which will augment existing sort of ip architecture in order to meet some of the emerging requirements and solve these future use cases now maybe semantic routing is um it is not necessarily a clear term considering the the scope of the work that we're having to investigate here in the problem space and the potential solutions maybe semantic networking might have been a a better start starting point and it's it's something we can look at in the future it is not an overlay technology per se and it it is not a new traffic engineering technique you know essentially what we're doing is using existing information in the header and determining the path or the way that packet should be processed in order to reach its destination so there are sort of three major elements the routing aspect and and of course there are multiple methods to achieve that the packet marking and then ultimately forwarding or you're indeed dropping the packet as well oops sorry so um historically yes we've got dijkstra and various other techniques"
  },
  {
    "startTime": "00:14:01",
    "text": "event um driven uh algorithms for um forwarding traffic and deciding what to do with traffic yes we've got control plane technology that can be either distributed or centralized or or or some kind of hybrid the these will still be used you know this is not you know to overuse a ubiquitous term here an sdn approach to networking it's it's actually taking a more pragmatic approach to networking with existing technologies augmenting them with some new innovation in order to meet expanding maybe evolving use cases so there are three elements as mentioned the routing maybe there's a element to part computation as well to decide you know where to uh place your paths in the network and when to modify them then there's the forwarding um which which as you mentioned the instruction for how to process the packet can be sort of taken locally or it could be managed uh using a centralized entity and and maybe that's hierarchical as well where you've got local decision makers for specific types of traffic that are then sort of groomed or controlled by some higher level controller for want of a better term and and that higher level controller can also perform some re-optimization at specific point in time or or in the event of some sort of failure catastrophic failure in some cases one of the uh sort of sub use cases that we had for the medical domain was field hospitals um that might be set up in the event of of some sort of natural occurring disaster where you essentially have sites coming on and off uh line and joining the network where you've got patients being treated with with different injuries and then devices that are providing patient data um having to store that information at central locations"
  },
  {
    "startTime": "00:16:01",
    "text": "that data needs to be clearly differentiated and in that kind of environment where it's ad hoc actually sets everything up traffic engineering rules and using some overlay technology would be extremely problematic and it's likely the devices deployed wouldn't support that either and then um the second part of semantic routing or semantic networking if you like is um the marking now we've got some pretty cool tools already um in our tool kit so we can use um really anything in the ip header um or the length of the packet or you know maybe some um meta information as well oh slide has not moved it's moved on my screen maybe it's being updated i'll just bounce that hopefully you should see packet marking part of semantic routing um but maybe actually um we will use um new bits maybe we're going to use new fields uh in the header and and i suppose that's one of the discussions we can have during our session today is that there are uh new methods new encapsulation types uh new extension headers uh special purpose labels potentially that could be used i suppose one of the the design goals of semantic routing or semantic networking is not to constrain the solution that you might use in order to achieve the objectives what we want to do is essentially say well for some situations you might use foo technology and for other situations you might use an entirely different encapsulation or or packet header information okay if it if any of my previous slides haven't been contentious maybe this is the first contentious issues the bold statement here is semantic"
  },
  {
    "startTime": "00:18:01",
    "text": "routing or semantic networking architecturally speaking at least is not a big deal and i know that some people might disagree this is the itf and not really what makes it so cool um but what we're not doing is redesigning ip routing we're not breaking the internet we're not saying this specifically applies to a greenfield network and you must rip out and replace all of your existing equipment what we're saying is this is a set of objectives with capability and architecture that augments existing technology so in terms of traditional sort of identification and endpoint information the ip address great we will continue to use the ip address it's just that now we're going to have a semantic element that's applied to it and if you're a device that supports semantic networking great you might understand it and do something with it if not cool just ignore it it won't break that particular network but for certain situations where we need additional information to be encoded and used for semantic networking maybe it's not just the ip address that we're going to be using but there's other packet header information in terms of how we discover state and disseminate it uh or or populate sort of forwarding uh tables or or or modify the logic or sort of the policy that we want to apply at a forwarding point well those may require some modification but when again we're not talking about replacement of all of the cool technology that we spent you know a decade or more uh designing so why are we here today well this this is a discussion that started in the irtf and you know there are some really interesting threads that have been picked up and we're following those"
  },
  {
    "startTime": "00:20:01",
    "text": "then we kind of highlighted the work a couple of itfs ago in the routing working group and there was your strong response to that positive i believe because there are clearly a lot of routing experts who are kind of interested in this even if that interest is simply saying we don't need to do it you know that's great you know let's hear that there are numerous documents that we've tried to write in order to um document the requirements and some of the use cases some of the objectives so now it's really just about continuing that discussion thank you that is my presentation uh thank you dan uh i think that's a a good quick introduction into into what's going on um i don't see anyone uh in the queue so maybe it it's clear uh to people um and we do see people in the queues there's number of people in the queue linda you were the first please go ahead thank you very much for the nice presentation just have a couple of questions so you focus on the medical device um so today most medical devices like um i know lots of people wear those continuous molecular glucose monitoring it just go to their phone and then the phone reported directly to the server or whatever in the cloud so um i'm just curious like in that case the medical device environment the semantics what is the uh like uh information carried by the semantics are you like avoiding based on the name of the person or the name of the disease or what exactly can you elaborate a little more sure um"
  },
  {
    "startTime": "00:22:01",
    "text": "just just one observation here as well whenever i unload my mic it actually blocks the audio tv radio so why the medical devices well actually potentially going to be funded specifically to help us develop um semantic routing as a as a technology and the cgm example the continuous glucose monitor is nice but that is a more traditional device so you would have a patch that sits on your arm for two weeks it's essentially uh providing glucose information reading um that's pretty cool and unless it drops below a particular point and you slip into a coma that would be bad or exceeds a particular threshold and then you need to pump some insulin um into you uh then you would have to potentially prioritize that traffic to a particular server in order to get that notification in order to avoid any kind of problem now now not everyone of course has one of these sensors or a sensor that's kind of bluetooth or nfc enabled so there are much cheaper devices that maybe have a local gateway that you want to use maybe you've got multiple patients at a particular site but that that particular device aside there are other devices that might sit in your home um and be used for things like sort of ekg um or um in a uh in a hospital i mentioned with the mri and things like that in a in a hospital that's basically uh set up in the event of some disaster there's not going to be high capacity connectivity so something will have to manage the bandwidth in and out of that site depending on sort of real-time requirements thank you all right i see uh hisham next in the"
  },
  {
    "startTime": "00:24:00",
    "text": "queue yeah thanks dan for your presentation uh you mentioned that one of uh that can use some information in the bay load for semantic routing right so i was thinking about uh the media aware network element which can look into rtv information about like the image of the video encoded and find out if if this payload carries important information that we need to to send it to the receiver we don't want it to be lost or discarded yeah i think i think what then you can do here [Music] in this consistency um we would ideally be able to kind of mark traffic uh and then set up connectivity based on where that traffic needs to go and what maybe network requirements it has in terms of latency and bandwidth and jitter etcetera uh the payload inspection you know potentially there is sort of um hardware now you know low-cost white white box hardware that's capable of of looking at the payload um but then you know it it there's a whole set of other issues that that potentially opens up in terms of uh encryption uh and privacy as well when you start digging into the payload but it's worth discussing but it's not something specifically uh we focused any time on okay thank you and uh the last before we move on is uh ac yeah okay you know um"
  },
  {
    "startTime": "00:26:00",
    "text": "this sort of reminds me of apn because this is really just another application and this has been has already been you know application aware networking like you said it isn't a big deal it's already been done both for the uh um both for the qos and for the routing decision but um you know and and all you know the well-known applications they have a certain fingerprint so they can be recognized without you know within within a uh an environment under administrative control these can all be recognized well known applications be there their fingerprint or five tuple or whatever without any additional marking now what you're now find what you're saying is so we standardize both the marking the identification of the critical applications and the behavior both the treatment of the packets and the routing decision which is uh you know like i said this has already been done how do you make sure that uh once you standardize it that people are being truthful because everybody's gonna you know somebody everybody's gonna want whether it be you know somebody who's gaming they'll come up with some way to to get the gate the same priority that uh these life critical applications are and it's in unless it's under this a single administrative control once it goes over the public network you know all bets are off and also you know this is going to cost more money to get this treatment how are you going to you know how are you going to administrate and and bill for this this these critical applications oh great great questions ac and i i like the way you think um i will in the interest of time i will defer somewhat"
  },
  {
    "startTime": "00:28:00",
    "text": "some of these responses um because i think we will cover them in more detail as we go through um the session um in terms of um things like you know stopping people maliciously um attacking the system or trying to game the system you then it would be a sort of what's the expression trust but verify uh i've heard before um regarding the apn aspect i i will defer that to adrian because he chaired the apn session and it is it is something that's been um mentioned previously as well so uh i will i will end my my response there and hopefully ac we will pick the rest of the issues off during the discussion uh yes thanks dan and ac i think ac is asking the right questions uh with regard to apn i i bounced all this off uh the apn people because you're right it it looks very similar uh and the apn guys said that they were principally interested in uh per hot behaviors and not in influencing the forwarding or even the uh the routing part that determines what the forwarding paths are now i i think this is all open for discussion but that's that's how we got where we are uh so we should we should move on uh and let um phil talk uh phil although he's speaking in a personal capacity uh works at a service provider and i was particularly keen to get a service provider perspective of um of course thanks adrian should i"
  },
  {
    "startTime": "00:30:05",
    "text": "yes okay and it's unclear who doesn't show the name guys please go on nude if you are aren't speaking yeah thanks very much so um um thank you very much for the for the invite to do us kind of um brain dump about uh quality of service and maybe a bit of a perspective on semantic routine um so i thought i'd just start with my understanding of semantic routine that it's about differentiated forwarding behavior and differentiated paths or routing [Music] so it kind of it feels very much in the in the sort of quality of service areas about i think if i've got it right it's trying to do into domain as well as intra domain and you know the phrase from dan slides it's about hot ihop and packet by packet um right"
  },
  {
    "startTime": "00:32:00",
    "text": "i have no idea how to do that then i've just advanced them on my view of powerpoint try to go into presentation mode i think your style um in size can you can you try to pre-load this now okay that works does it yeah so something to do with going in full screen um should do you mind if i share it like this right i think we just have to live with it sorry um so yes semantic routing is you know as hot by hop um packet by packet and um dan's phrase i'm not sure if i've taken this out of context is that it's cross on steroids um apologistic what happened i think it was a nice nice phrase um so to give you some of my views on on quality service um so i think the first thing to say about cross is it's really trying to buy you a time advantage um so the schematic at the bottom is supposed to indicate that you know we've got a whole whole range of applications that we can do now and we might want to do in the future we have some you know like voip now very easy to do we have got some like remote surgery which are not yet possible and then we've got some which are kind of on the edge of being possible um so it's really those kind of ones in that amber zone so the ones which are uh"
  },
  {
    "startTime": "00:34:00",
    "text": "sort of almost possible but not quite those are really the ones where uh cross mechanisms are buying an advantage um because you can you know they they maybe they become feasible um but of course this is all in time this is all shifting to to the right so as as you get more bandwidth you know you can do those those applications like say immersive uh virtual reality which might be sort of barely feasible now become easy um you know so in a world of growing bandwidth um especially where bandwidth is growing quite fast and this sort of this edge or critical edge is moving to the right um quality of service is really giving you a time advantage it's not doing anything um you know beyond that things will become feasible so to point out something obvious that means that the quality of service mechanism you introduce you've got to introduce it quickly enough that you're not losing that time advantage that you've you just think you're gaining [Music] and you know also in this perspective um you know cross matters more where bandwidth is constrained so that would you know would have been true in the um in edge networks in the past is probably much less true today with sort of fiber and 5g um and in situations where capacity is hard to deploy um you know there'll be some environments where it's actually difficult to go and put in new new capacity sorry i didn't catch that at all"
  },
  {
    "startTime": "00:36:02",
    "text": "please use full screen mode i will try um also it seems like you might have cnn or something on in the background not me i'm afraid well it's i don't know if that's somebody else on the call but yes i haven't got to see it um so the second caution i wanted to make about quality of services um you know you're not it of course is not something that's creating capacity um it's re-sharing capacity you know so sort of an analogy i'm drawn here is with the with the first and second laws of thermodynamics um you know so thermodynamics has sort of first sources that you can you can change energy from from one form to another but you're not creating it or destroying it and then entropy in the system uh will either stay the same or increase so similarly you know you're not you're not creating capacity with quas you're re-sharing it differently between users and you may be losing some of your capacity through the cost mechanism that you've that you've added in so you should have those as sort of cautions to remember but on the you know on the positive side there are lots of things that you can improve which are kind of in the sort of the quality field so things like um you know latency with aqm measures and buffer management and you know ecn and l4s kind of things there's lots of things you can do there that are really good um on reliability you know so kind of failures are of a form of"
  },
  {
    "startTime": "00:38:00",
    "text": "of course degradation so mechanisms that improve reliability are really important energy is becoming more and more critical partly because of energy costs going up and us wanting to be greener partly because power efficiency is not um not increasing the same rate as as bandwidth and network growth is um so that the fraction of cost for energy is going up in your network uh lifetime energy costs are now expected to be kind of comparable to capex so it's really important um that you work on it um you know and forwarding takes energy um you know so it's you've got to make sure that you try and think about how often you hit forwarding hardware and those sorts of things on the security front i think security is very closely tied into quality service so you know like mpls and vpns the two things are very much tied closely together um multipath stuff is all is all uh cool to either pack it by packet for efficiency or kind of path alternatives for the resilience and automation is a key strategic goal for all operators so um you know those kind of things have really important things to keep in mind the third thing i wanted to say is that when you do cross you've got to be i think you've got to be aligned to a commercial model for me that's the lesson that came out of the the the cross you know 3869 rfc and the sort of difficulties of deploying costs at the beam um that you know you've got to try and align to a commercial model if you want to be successful in this i know you know there are examples where it does align with the commercials so"
  },
  {
    "startTime": "00:40:01",
    "text": "you know that wholesale costs for instance you wear a global operator or an over-the-top buyer's capacity or quality service from a local operator so those things are quite uh are well aligned with a commercial model you know where you're managing stuff that the the ingress um and then within within what you've what you've paid for then you do cross to to kind of share within um within that how you divide it between your different users internally those are ways where it's well aligned to the commercial model so kind of things have been successful um and just in some sort of related considerations um to think about in this in this commercial model or related to it um be careful that you you don't um add additional uh security or denial of service risk and that's kind of the point that ac was was making um you know how come you've got to make sure that you don't just have everybody using the the top priority um we've got to think of about complexity that it adds to the system um it's complexity makes it more expensive to to operate and manage uh and more expensive probably to forward packets and to do the routing um and we've got to think about incremental deployability and you know if receive foreign to 18 um it talks about aligning incentives and aligning the pain and gain um if you want the protocol to be successful or an approach to be successful um and just finally sort of sort of some conclusions relating that that quality service stuff back to semantic routing um which i'll pose as some questions on i"
  },
  {
    "startTime": "00:42:01",
    "text": "think need to be thought about um for semantic routing so the you know the first one off that that first slide um why is it better than buying bandwidth um got to have a clear answer to that question um and from the from the second slide we'll with semantic reading who's losing so which individuals or which customers are losing and what becomes harder through doing it are you trying to advance yourself because they aren't and philip sorry yeah uh let me just we are still at 2008 capacity slide yeah it's moving now so yeah and the and the third uh kind of question of pose that semantic routine have to think about is who's who's who pays for it and how so how does it align to a commercial model for this stuff i apologize that the slides weren't advancing it seemed to be couldn't do it in both full mode and slide advance which is a bit tricky not sure why that was uh thanks phil someday someone would invent um a slide sharing application that you can use um i got myself in the queue first because i'm conscious that you uh you have to run away from this meeting uh soon uh i might miss the discussion at the end i wanted to ask you um well firstly pulling in there there was a comment in the the chat uh quoting uh peter loftberg basically saying that that quas"
  },
  {
    "startTime": "00:44:00",
    "text": "is about deciding whose packets you're going to drop um and i think that's that's certainly part of um of what you were saying there about about people's news um but um that seems to be a bit of a ph b um sorry yeah perhaps behavior um kind of view of of quas rather than a routing view where you might be putting packets onto paths that are uh more appropriate for the service that they want um and that sort of leads me to your your commercial point which uh ac made as well which is um you know how how do you stop everybody asking for the best quality of service do you believe that there are uh pricing models uh that could be applied to customers even possibly uh end users where they subscribe to like a gaming connection service compared to a file streaming connection service well people have talked about on that second point people have talked about it but it's been very hard to have any success in that at least at the individual consumers people just buy bandwidth or they just buy a connection that's good enough i think in for businesses you've got you know there's more of a chance and people i mean there are successes in that aren't there because mpls is awkwardly doing that that the businesses are prepared to find different different services and you manage into them on the routing paths"
  },
  {
    "startTime": "00:46:01",
    "text": "i guess i'm not sure i'll see what the real difference will be between the routing paths except possibly if you're doing doing some additional processing on route you know sort of computing stuff on route and then maybe there's any you know some routers will have some types of processing there which others don't or a particular server that you need to get to because that's got the data needed or something uh okay thanks and i think i think trying to link that routing in to more of a sort of real-time thing it's really difficult all right linda you're up thanks for the presentation so i'm just curious like in terms of quality of service um are there any major differences between like for the semantic routing qs versus just the packet boarding building the differences between semantic routing and qos mechanisms no i'm saying like semantic routing right um what's the difference between just the simple qos we do on npr's network versus the qs on the semantic routing i don't think i'm the best person to answer that because i i can't say i've got a detailed understanding of semantic routing but yeah it's definitely something and i think it's part because my impressionists are still um you know lots of different options for how people think it might be done but it was definitely i mean that was certainly a question i had when i heard about semantic routing on an earlier um itf meeting was what is the difference from"
  },
  {
    "startTime": "00:48:01",
    "text": "um you know technology x like mpls so i think it's definitely and it's an important one for for the semantic routing proponents to to get a good answer to i'd agree with you on that so adrian are you going to answer that uh no because i'm not proposing semantic routing i think what we're doing is kicking the ideas around and trying to find out what the questions are oh okay thank you you have a good question thank you greg so um as time critical or time constraint applications um if i understand correctly um be one of the applications for semantic routing so um i wonder how then semantic routing is uh related to deterministic networking is it alternative technology is deterministic networking is one of their methods to realize cement including i think that's another good another good question that people should have a nice answer to yeah because okay some of the applications people talk about are very much in that highly demanding time sensitive networking kind of area aren't they yeah i think greg has you've raised another point uh that needs consideration and whether deterministic networking covers all of the bases for semantic routing or some of them um uh and and therefore"
  },
  {
    "startTime": "00:50:00",
    "text": "falls into one of the bullets in my uh presentation that i'm gonna have to rush through uh which says that um we're seeing a lot of stovepipe solutions and maybe uh deterministic networking is is is exactly that it's a slice of the problem space yeah okay thank you uh all right so i'm up next i'm gonna try and buy us back some time um uh especially since uh especially since advancing the slides is a problem here we are um so um uh this is building a little bit on a presentation at iatf 113 where i was also squeezed for time but i i wanted to look at some of the things we should worry about when people talk about semantic routing um and none of this should come as a big surprise it should just be good engineering practices um of scoping requirements designing well and and then testing um which is something that maybe doesn't happen too well as we float new ideas we don't we don't push them out into uh realistic networks to see what effect they have uh what underlies this is the concern that the the internet routing system is fragile that routine is more complicated than people believe and [Music] that historically we've done a pretty poor job of thinking through the designs and consequences and the testing so semantic routing introduces a number of"
  },
  {
    "startTime": "00:52:02",
    "text": "specific concerns uh about uh how it can be backward compatible with what we've already got how we would set about deploying it what the what the utility is whether we're targeting a specific set of requirements or technology or whether we're trying to come up with a solution that works across ip packet networks how we future proof scalability and stability are i think um [Music] missed uh as um manageability privacy and security tend to get left until the last so let's um quick deep dive on those um in terms of backward compatibility we really don't want to break the internet so um we have to introduce ideas that coexist with the existing techniques and and don't break anything and a lot of that plays into into the deployability um so anything new is likely to need some form of of update and if we're playing with how forwarding works um that may well be firmware updates and that can mean that it's hard deploying this into existing networks there's been a lot of talk um over the last few years about possibly replacing ipv6 with something new to address some of these requirements and to me this seems like a poor choice i think we need something that is more evolutionary but there are still lots of options uh in in terms of overlays and underlays which may be easier to achieve in a seamless way um and then coexistence"
  },
  {
    "startTime": "00:54:01",
    "text": "um or walled gardens is is a way to do this in in a sort of safe way and i think dirk is going to talk about this um a bit coming up when he goes into architecture so um in terms of general utility the the walled garden approach has been very very effective solving niche problems in private networks and you don't have to worry about interworking but as the number of niches multiplies up the vendors have to implement lots of different specific solutions and that pushes development costs and associated tests and maintenance wheels get reinvented mistakes get repeated and as those niche domains start to overlap or run into each other deployment gets complicated um so that brings us to questions about interconnectivity and interoperability and indeed what happens when a packet escapes from a walled garden and and will it get misinterpreted or caused somebody to crash given that the whole point of the internet is end-to-end connectivity shouldn't we be aiming for uh solutions that are more widely uh deployable uh so wouldn't it be nice if we could invent one solution that addressed uh all of the current and future requirements which of course takes us to to future proofing um it seems unlikely that we can capture every feature and requirement now but as phil showed on his on his slide that um fairly thin wedge of things we could probably make now but are struggling to"
  },
  {
    "startTime": "00:56:00",
    "text": "deploy is always moving towards the right and and we're getting more applications coming along and wanting services from the network so we should aim for solutions that are extensible by design so we can add new features with forward and backward compatibility built in i think that means that we have to leave space in our encodings for additional data or use extensible encoding techniques but that impacts on scalability so that that really applies to both the routing and the forwarding um [Music] some encapsulation techniques for extensibility can actually grow quite large and if you have too much data in the in the packet header you're effectively paying a sell tax um and for some applications maybe that's not a big deal but but it looks like the applications that we're talking about are probably sending smaller packets and then this does become an issue it also is potentially hard to parse at line rate if you've got a large chunk of tlvs in in the front of your packet at the same time if you're using distributed routing protocols you may be needing to collect more information about the status of the links and the nodes and what the what what for example the latency is at the moment so how much information you're flooding and how often you're flooding it makes a really big difference to the scalability and to some extent to the stability and as there are changes in the network you may discover that you're just pushing so"
  },
  {
    "startTime": "00:58:01",
    "text": "much data around it's not stable and my last point here is is to consider as we have always done that nodes in the network need the same algorithms and could i and should be converging on the same information and we need to ask ourselves whether that's something that we need to continue with or whether there are ways to avoid looping and and thrashing but be more flexible manageability has has for so long been the poor child of um protocol development uh and i think we need to look especially with semantic routing on the impacts that might be made on oam i think semantic routing makes the whole behavior of the network much more complicated and harder to predict so we might need more and better oam but if semantic routing is dynamic and adapting to changes in the network the packet tracing may not be particularly good at telling us where our next package is going to go given how the last packet went lastly i want to pull up uh privacy and security security um i think is maybe a little bit more simple to handle um it's about how you might uh cause the network to send the traffic to the wrong place or or simply to drop packets um semantic routing may well be increasing the attack surface so that needs to be looked at and obviously a fragile network is a more easily attacked"
  },
  {
    "startTime": "01:00:01",
    "text": "network but privacy has had a lot of attention and um linda asked in in one of her questions uh about what information goes in the packet does it identify the user and the application they're running and and so on and i think this is essential it must not be possible to determine a user's identity through semantic routing that is no further than can already be done and it must not be possible to determine what application is being run um from the information and then lastly um uh we have to consider the regulatory uh implications and net neutrality and and how marketing a packet might get it treated differently uh so to do this there must be no trade-off between the information needed to root and forward and uh the achieving of privacy so so we have to do both uh and finally um my question is what to do with this uh i'd like to take these questions forward into the discussion of what semantic routing is and and what it might achieve uh and then we can look at the architecture and the protocol possibilities and then finally whether to bother with any of this at all so that's me finished i'm looking and greg is in the queue hi greg um okay uh greatly appreciate your pointing to the oam and uh yes it's it's very interesting uh challenge um to um properly um"
  },
  {
    "startTime": "01:02:03",
    "text": "paths that being used and especially if it's uh for resource and time critical application so i'll imagine it's not only time critical it's uh very similar again uh with the net uh requirement of uh time constrain and almost zero loss [Music] right thank you yeah and that's that's really worth um exposing thank you uh all right linda quick one please okay quick one so uh in terms of what is semantics i have that question is this routing forwarding based on additional field in the packet or is the forwarding still based on a destination but with consideration of additional information carried by the packet uh so it's it's it's forwarding based on information that's in the packet as dad and dan had in on on his slides are all uh forwarding is semantic forwarding but the proposal is that additional information can be put in there as well to accompany the fields that are there at the moment which includes the destination and routing can program the forwarding plane to achieve forwarding based on lookups on that information thank you all right let us um go on then quickly uh move on to dirk who's got some thoughts about architecture yes thanks thanks edwin um good yeah using the it's like sharing as well um"
  },
  {
    "startTime": "01:04:00",
    "text": "animations but that's fine i'm speaking to an unanimated slide which is just fine i'm trying to bring together the discussion we've had not only today but also in the um recent months of that work and trying to look at you know possible approaches and considerations um of this um sorry now i see the controls down there um of the uh for for semantic readiness daniel pointed out um you know maybe calling the semantic networking would have been a better thing to start with um what are the questions from a architecture perspective that that i think we should be asking well one is what are the communication semantics that we're aiming at what's the type of communication we want to see the network to be doing that semantic routing automatic networking could really realize um what are the from an architecture perspective what are the abstractions that we're looking at um that you know this this this spotting work should have and how could an architecture look like what are you know components involved how what are the main interactions but also how does it connect to other aspects that we already know um are ongoing and i would show this in a slide later which is the now unanimous unanimated slide that i was talking about a couple of words um on deployment what to consider when we want to deploy um ideas you know like that and and since this is a discussion in the in the itf um i also have a question what's the possible role for sdos right particularly itf in this space what is it talking about here okay so if you look at the original purpose of the routing system we was originally designed to you know forward ip packets toward towards destination addresses in the best of the manner worked really well we used location locator semantic of ip addresses as a fundamental piece to achieve that ip addresses are signed in the context"
  },
  {
    "startTime": "01:06:00",
    "text": "of network topologies that allows you to build a from a particular scalability perspective tractable system um to achieve that functionality it's a distributed decision making and intermediary routers and key here are the methods to select the path and the criteria for doing so um traffic engineering may improve on just best effort i mean you may introduce policy based path steering um you know resource reservation and other thing um uh um you know to that we've discussed already in the previous slides that hasn't evolved that that system has evolved to a system that actually supports a very rich communication set of communication semantics not just one beyond the best effort which ability that i outlined before and and i'm not trying to categorize them this this this is our first attempt that we've done in in some joint work um unicast uh uh communication uh various um semantics for multicast and group-based diffusion-based multicast which you find very often in for instance consensus systems uh uh where we're not the entire group but a subset in a diffusional being addressed um something we introduced recently in the discussion in beer was called afford requesting to a multicast semantic where you build ephemeral relationships very very dynamically for which crew-based approaches are not very very well suited various any car semantics which which allows you to select either randomly or through multi-optimality or in a scheduled manner the actual endpoint out of your end cast group um and and on the left side you see who's making the selection either the source or the network and we also included chain cast here as a as a programmed um forwarding of packets to the network either pop or in a programmed manner um again either the selection being done at the source of the network you can see the communication symmetry so you can find examples of those um i presented a draft in the"
  },
  {
    "startTime": "01:08:01",
    "text": "um routing working group in the last itf on routing beyond reachability which lists rfcs ongoing trials a bit of research work but mainly engineering work um that supports these various semantics in a a very wide set of solutions so this is not something that's that's being entirely drawn up new so if you go what are the abstractions that we then maybe want here from an architecture well we started off with an ip based feature ability where where you have an ip header on on which the um both the routing and the forwarding decisions are being done um packet header information payload um and and and and we achieved our regional locator-based addressing semantics what i call in this slide the evolved ip routing is a is what we effectively see as it's described in in the semantic rooting class but also in the right image ability draft um the various methods that have evolved over time to look at various additional information the packet error and i sometimes call this the packet head or it's your oyster um whatever you want to do um pick the field and pack a header and make an additional decision that's the way uh ip has evolved uh in in in the meantime um we had an interjection um back in 1996 he he listed this in a recent exercise as a historical um hawking back into active networking where the attempt was to change the abstraction from in addition to the ip address to provide a programmable unit the so-called capsule and those of you who may remember the original paper of 1996 well it would come like nowhere um also the initiative in the end went to the capsule unfortunately never took off as a as an abstraction module what we look at here is a semantic header in addition to the packet header that explicitly describes and evolves from the current ip evolved ip routing by by grouping the suitable input into the programming programmatic forwarding"
  },
  {
    "startTime": "01:10:01",
    "text": "actions in a dedicated semantic header um the the forwarding actions are deployed at the traversing notes and it's a defined place for the forwarding information to be placed instead of opening the entire packet header blindly it is it is explicitly captured in a semantic header so how could an architecture look like and again this is the non-animated slide which is why it looks a little bit a lot to take in when you stare at it at once in the animated note it would have built up really nicely but for that i needed a screen share which i didn't there after the previous attempts so let me walk this maybe through on on on the top left so this connects we connect this specifically to um intent based networking um this isn't required but it's something that we find particularly fitting where business logic provides an intent to an intent service manager uh retrieves the mapping through an ontology in order to map the the intent on on some complete concepts and then provides the communication semantic um together with a user application to an orchestration engine which retrieves the mapping of the intent onto uh onto dedicated actions um which is further constraints to the to the policy engine to its left side and with the help of monitoring the prediction events to provide both constraints and matrix to the routing to the semantic routing part and forwarding action suitable forwarding actions to the semantic forwarding part as daniel mentioned before these two things have to be seen in conjunction somatic routing provides potential additional path information to the semantic forwarding which can then use the instructions to install and configure forwarding actions in the underlying switches and routers of the network nodes um network topology capabilities states they are being obtained in the process for the routing as well and the orchestration and the information is being disseminated too but also being accessed through"
  },
  {
    "startTime": "01:12:00",
    "text": "the infrastructure links from the uh from the netherlands capabilities and state component down to the network parts this is a very high level way of how you could look at the interaction of the various components and a lot of more is required to dive down into what the individual bits and pieces are doing but at a very high level that gives you a very rough idea of how an architecture could look like what are deployment considerations when you want to implement any of this um hvan alluded to some of those already before what kind of lay do we have an overlay in underlying inlay it's important because it impacts the technical choice of realization right you may use extension headers instead of messing with ip addresses so that kicks you towards a shim overlay a layer 3.5 as it's very often called um you may work with an underlay which then pushes you towards segregating the existing address space with the new semantics there are examples that have done that in in the past um it may have a routing protocol impact and i know there are a lot of people that are very very um very very conscious about impacts on the routing protocol i'm one of them and integration with existing writing protocols or designing an overlay routing protocol are the potential choices you may have but again it depends on which how you answer the first key question on which delay you actually do shipping in the night i made to mention this to reconcile the the speed of rollout with the stability of the existing system kind of like one and a half both but you don't want to compromise in particular on this stability and again that may be an impact on the technical choice but take over how uh linking back to the previous question how you answer the overlay underlay inlay question right is it a limited domain technology or the mighty domain then also example talked a lot about solutions that have been for a very long time being entirely um isolated that's"
  },
  {
    "startTime": "01:14:01",
    "text": "okay but how do you ensure if you come to the point not only to wanting to use um the the multiplexing of the technology choices maybe namely introducing for instance ip technologies in your limited domain because it's a well-established technology but you want to interconnect how do you ensure the interconnection now that the interconnection has been brought on the table the number of industries that are industries that are currently um struggling with that this industrial networking or vehicular communication where interconnection has come increasingly into um into into focus um from the previously very very isolated limited domains how do you avoid spilling your potential domain limited semantics into other domains i can tell you and either anecdote in the chat maybe later on how somebody at siemens tried to solve service multiplexing and has apparently never heard of ip addresses and ports and um that's that's one way of how you should not do that um because it will not look very nice if that packet comes out on the other side of the network uh but that's an actual proposed solution of vehicular communication unfortunately how do you deliver new services is there any programmatic way of doing this the idea of the architecture than before is that programmability is a very very key part of making semantic networking really work in the future that allows to roll out a lot of these semantic enhancements programmatically through the interaction with a higher level intent based systems how to manage networks and the increasing complexity is it possible to move towards this programmatic execution and the answer to those questions may also be trivial economic incentives again roll out speed and scope um could be one aspect that again may kick you to an offering on top of ipv6 because it's faster to roll out um removing the burden to change the underlay that's a very strong economic incentive for many service providers and the stability of course of not only"
  },
  {
    "startTime": "01:16:01",
    "text": "services but therefore ultimately businesses is a key question so economics play or not just the economic model to exploit the service but also to roll out the changes really what is it what are possible aspects personalization why should we care about this um an architectural framework i believe the in particular an extensible architectural framework on components were the interfaces inter interaction diving deeper than the previous slide that i showed um these interactions need to be interoperable i need to know how the communication how the protocols how they look what are the semantics not use cases but the purpose of communication right um and we can map them quite easily on a variety of use cases later on possibly captured as a service description to enable programmatic realization there's a lot we could potentially learn from fields like the semantic web that has done a lot of this type of service description onto service mapping type of approaches what are the abstractions so involving addressing as the main input into actions and com and you find the encodings and encapsulations and the actions the state distributions that's you know also known as routing protocols and the primitives that we need thank you very much that was it for my excitement uh thank you dirt do we have anyone with a question no um [Music] okay great thanks uh so we'll move on um as uh dan mentioned there are lots of proposed approaches around doing things that are rooting and forwarding based on additional information and um greg also mentioned uh net and the work that's going there"
  },
  {
    "startTime": "01:18:00",
    "text": "uh i picked two um not because they are um solutions that uh i or anyone is proposing as this is the way to address everything in semantic routing but because they um demonstrate some of the thinking some of the possible approaches and they provide us with um with straw men that we can uh either set fire to or um uh promote into good ideas uh or develop um and should cede our discussion uh so uh first up is uh suresh i wanna thank suresh he um he got landed with this uh in in a bit less than 24 hours notice and owing to some confusion he didn't realize that he was actually expected to present anything until about two hours ago but he has come up trump's and got a set of slides here and i will i'm sure talk brilliantly thanks suresh thank you adrian can you hear me clearly yeah it's good yes yep thank you so i just like uh we'll go through pretty quickly with the srv central you know we are running over time so i'll try to make this uh extremely quick um just to like you know go back to what daniel said and and adrian said in the presentations right so like what we're trying to do with srv6 is to augment the packet with additional information on how the packet is going to get processed in the network right so that's pretty much like how daniel explained semantic routing so like this is our semantic routing as like adrian would say uh the idea is to add something into the packets which is in this case is something that we call srv6"
  },
  {
    "startTime": "01:20:01",
    "text": "network programming to kind of describe a set of instructions on how to process the packet through the network so i'm just going to skip through quite a bit of the uh background slides on what srs right but to just talk about two data plane instantiations like one of them is like srm pls right which is like a regular encapsulation of the segment ordering concept over the mpls networks and the other one is the what we call srv6 which is the instantiation of sr over ipv6 and the specific thing i wanted to talk about today is srv6 network programming which uses like uh ipv6 uh what what something that looks like ipv6 addresses are what we call like srv6 sets to establish some of the same things that the other semantic routing concepts try to implement skip like you know i don't need to preach to the idf that ipv6 is better but um so how a network instruction looks like it's pretty much uh it's it consists of two parts like one of them is a locator another one is a function and the locator looks like pretty much like like a cider prefix right you just take the locator and route a packet to that whatever the locator is with a given number of bits and and we have a flexible bit length selection so like the the sr node itself looks like uh it owns the complete prefix that's like showing up in the locator and the function tells the node what's what to do so there's like a set of predefined functions uh that are in the set uh srv6 network programming rfc which is like what packet needs to uh how it needs to be dealt with and i i have an example at the end if you get to it but it tells the node like you know how the packet is going to process uh once it gets to the node specified by the locator"
  },
  {
    "startTime": "01:22:01",
    "text": "so uh so the network program is pretty much like a set of srv6 sets and it's got like you know list of like locators and functions right the packet needs to pass through so what you do is you augment the ipv6 packet uh with this information when the packet enters like an sr domain and that provides what would you call like a network program for the network to treat that package so you put in like a whole bunch of things in a list that needs to get done and the packet goes through the network and as the packet processes through the network you have a pointer into the packet which shows like what has been processed already and what still remains to be processed so how the packet looks like right like so we have a network program in the packet header so we have a regular ipv6 editor and and what we have is another uh routing header that is like newly defined in the six-man working group uh which is called the segment routing header and it's got a list of uh the what we call the the sids and if you look at it like each of them has like a locator and function and we have a segments left which describes like you know how many of those instructions still need to get done and using the how much segments left you can figure out like you know what is the active segment right like so and and we also do this by uh swapping out the destination error so one of the behaviors would be just like take the next address sitting in here or the next sitting in here and put it in the destination address field of the packet right and and um so pretty much the you just run through the program like every node that gets the back it runs through the program and at the end of it the the packet can leave the sr domain and and the nodes outside the domain are non-divisor and we also have a tag field in the sr uh which allows you to kind of group packets right so if you have a set of packets which have to receive a similar kind of uh i would say like like quas"
  },
  {
    "startTime": "01:24:01",
    "text": "for lack of a better term right like you know uh like phil was talking about before uh so what you do is you tag them in a similar way so if you have the same tag the packets can get treated like similarly going forward so think of it as some kind of metadata field uh and so we also have like a metadata tlb that can like kind of be augmented and this is really intended for uh kind of a software-based solution right like that we have like nfe and all those things use uh stuff like in a very extensible way so we have uh some kind of separation between things that can be done on on hardware on a fast path and stuff that are like more uh oriented towards like uh network functions like that are implemented in software even though it's like a pretty i would say uh thin line between these two so uh if you look at the sr itself right like so the uh the i would say the earlier bits right like you know the the higher order bits in the uh sr header are optimized for hardware processing so we um here there's like a cisco uh silicon one chip that's shown here but like you know we have implementations on uh like you know for example the intel barefoot to phenoches and so on and and other fpgas as well so you can these are like really optimized for high performance rather than uh i would say uh really being like very extremely feature rich or like very extensible right so that kind of like stuff that's really overflowing goes into the metadata tlv uh where like software-based implementations um probably sitting in um think of it as a kubernetes container or something can do uh like you know highly extensible things without impacting stuff at like you know high high volume somewhere else so um what really happens is when a packet enters like a srv6 domain right like so the packet can be any kind of packet it can be a v6 packet a v4 packet or like some some other like you know um l2 frame that enters it what we do is we encapsulate this packet what we call the"
  },
  {
    "startTime": "01:26:01",
    "text": "payload packet inside an ipv6 header right like with the srs inside and the srh itself contains the list of segments that we talked about earlier which is like a set of instructions on how the packet proceeds through the network and what kind of operations need to get done on it and i'm just going to skip through like a bunch of these things and just show you um like a quick example uh of like you know what happens but there's one thing i wanted to emphasize like the packet entering the domain right which is like outside the sr domain is like a plain package like let's say it's a v6 packet it stays unmodified when it leaves the domain so this is really something that the behaviors are specified inside an sr domain and and that's like that's why we add an additional header put in the additional stuff like it's really about handling information in a domain that understands these behaviors and like so there's like a set of behaviors that defined by um the srv6 network programming there's like an ioni registry uh that talks about like you know what like you know numerical value um is like assigned to each of these behaviors but some of the behaviors are like you know the uh the defaulting point behavior uh which is like you know assign the value zero it just like um takes the shutter's path to the sets endpoint right it's just like updates it just like processes the packet and puts the uh next set into the destination address and just forwards the packet right like using regular forwarding mechanisms and the cross connect is pretty much using like an igb adjacency to send a packet to like a different node that's connected to the node that is sitting uh in the uh uh the sid itself so if you have i just have a picture here so if you look at it right like so if you look at the green path right it takes the shortest path so the if you have an igb adjacency uh like you know the packet can either follow through one two four or one three four to get to the note four so that that's how the address looks like in the destination address field and if you have a cross connect uh what the packet happens is the packet goes"
  },
  {
    "startTime": "01:28:00",
    "text": "from four to five and then it's getting forwarded uh with a cross connect to node number six and then it it after that it just gets forwarded um to a regular ipv6 hose which is not sr aware so that's like the you know the a8 column colon which is like a pretty much a regular host that gets an ipv6 packet so that's kind of how the uh srv6 uh network programming works and it kind of picks off the boxes that daniel like talked about in the beginning uh to like you know the set of things that we need to do right so um so i i like quote from memory right it's really about um you know determining the next offer each packet given the network setting capability that's coming from really from the igp and we do the packet marking like you know we can talk about like you know how the packet is going to get treated and like also the following information is there and we do this by placing additional information that's placed in the package so that's kind of how it fits into the um the semantic routing umbrella so any questions thank you suresh um and well well people come to the queue uh i wanted just to clarify with you um the the difference between um marking the thing that needs to get done uh it's a function versus the thing that describes the packet and and if you like how the packet would like the network to process is that the difference between the function and the tag um so the tag is really about like group policy right like so what you're trying to say is like hey this packet like kind of wants to get treated like other packets right that's kind of what the tag is really uh specifying right the function is separate like exactly like you said but the tag is really about like specifying similar groups of packets to get treated so let's think of it as a shotgun okay good uh and we have kozak in the queue"
  },
  {
    "startTime": "01:30:03",
    "text": "yeah thanks forest for presenting this like i have a uh kind of a quick understanding questions like what you just presented um like it felt like a pretty much towards the srv6 which you know about that a service segment routing uh i'm just curious like where the key difference maker or the how the semantic routing is coming like is there any slide you have additional slide kind of describes on the extension means we are doing on top of a sr basic segment routing it's not clearly kind of indicating like a the difference maker uh on top of what we are doing on srb6 um uh yeah you're right so this is this is really like a tool kit right like so the the semantic routing is something we can build using this so um i think like adrian talked about like you know not like you know doing like something revolutionary and and work on evolutionary things right so we're talking about like some kind of tools that we can use to leverage to build uh semantic routing so this is like one such tool right like and i think like stefano is going to present another one so what you're talking about is like you know taking existing networks and how can we build things on top to enable semantic routing so like uh just like a bunch of as i said there's a bunch of behaviors that defined in srv6 and in np so if there's like stuff that's missing we can certainly go ahead and define them but i think it's like a fairly feature rich uh solution today so if there's like we realize there's something that's missing we can certainly go and add like additional behaviors on there if that makes sense to you maybe that's need to be discussed and kind of what is missing and what's the kind of additional feature sets uh kind of we are trying to add part of the semantic uh kind of uh identifying those would be key things i believe and we cannot go from there thank you okay thank you thank you danji uh gen g yes"
  },
  {
    "startTime": "01:32:02",
    "text": "uh can you hear me just uh check okay yeah i think like i look at the srv6 you're using example here what's the first presentation by by daniel about some requirement for a second writing one thing is like not for overlay guys because not not by hop so there's one thing in that slide here i look at your thing since you use some domain and then use ingress egress with something between to me like you are using some counter examples say oh yeah this is yeah something like this this is like overly you know example uh where some requirement for uh segment writing for not only in the first presentation yeah i would say like it's think of it as more as an underlay here right like though the like we are kind of like stuffing in stuff underneath so i would think like it's this fits more on the underlay pattern right because the the notes themselves are um kind of unaware of this is happening so the original like node the the two end points right like the packet which is sending a packet uh the note that's sending a packet to one and the ones that are receiving the packets from five right which is the original package they don't see this like so think of it as like very similar to like how uh mpls transfer under the labels right that's kind of how i see it not really as an overlay that you put okay well different opinion anyway thank you thank you thank you all right we better move on uh thank you suresh and for filling in that short notice um next up is stefano who's going to talk about some uh work he has been doing in a similar problem space hopefully the slides are loading yes"
  },
  {
    "startTime": "01:34:02",
    "text": "stefano you probably need to uh yes good okay uh okay so how do i move the slides down down the bottom of the screen you should when you hover over it you should see yeah yeah now i'll find it yeah thank you thank you okay so hi everybody so i'm going to present here in extensible inbound processing proposal so it is a generic and extendable mechanism to carry information in ipv6 uh packet headers so referring to previous presentation where i think adrian mentioned that we should try to find some solution which is general and extensible so we are trying to to do something in this in this line so um the the idea is that ipv6 and system and network nodes can read and write these extensible information in in packet headers and of course nodes can take a packet processing decision depending on this eip information so this is not a solution which is uh specifically proposed for semantic routing but semantic routing is surely one of the possible use cases that can benefit from this and we we have very recently submitted the first uh iitf draft with the initial ideas on this eip so as shown here that there are different use cases that can be supported so semantic routing is one of these another one which we are already trying to make some experiments is a advanced monitoring so a mechanism to to capture"
  },
  {
    "startTime": "01:36:00",
    "text": "molecular information in in networks and distribute it in putting information in packet headers also deterministic networking is another use case that uh may benefit from this uh eip network slicing and so on so the idea we will define an eip header and in turn we want to carry this ip header in into the ipv6 header where do we carry in the ipv6 center um either we can carry it in a hop biop option um or we can also carry it in segments rooting either tlb so i can also refer to previous uh presentation by by suresh so also this mechanism is compatible with uh segment routing and it can also be used to to extend segment routing to add some missing bits because as should have mentioned also segment routing for ipv6 is meant to be extendable and so we can put the extension in the in the srv srh tlds so we have started the here you find the link to another document which is uh we have not yet published uh as a an itf draft because uh we are making a lot of revisions we are working on it but we we hope that in a short time we can also publish as a draft but in the meantime it is published available at at the link provided here so we know that ipv6 header is already extensible by definition there are extension headers and options inside the extension editor so why we are putting this level that we call it the extensible"
  },
  {
    "startTime": "01:38:00",
    "text": "inbound processing the main reason is that there are practical barriers and problems to the extension process of the ipv6 so there are standardization orders and there are some difficulties doing implementation and experiments so we believe that adding this uh extensible inbound processing uh solution will reduce the pressure on the standardization and i will show something in the next slide and also that we are building the open source prototypes of these uh eip ideas that can help in the in the experiment and so in developing the solution so uh in the draft that we have published uh there is an analysis of the several ongoing proposals and discussions to allocate hot buy up options for different use cases so i have mentioned i've listed at least seven different uh proposals that are currently requesting and some of them are also close to becoming an rfc they're requesting new hop-buy-up options because of course it's uh i mean it's it's a hot topic since it's a timely topic that you want to extend ipv6 by putting new new features but i think that if we go for a different hold by up option for every use case i mean the solution does not scale so we are trying to make a more uh uh general approach to have a a a single hop by your option that then can be extended farther with different use cases and so we believe that there are good reason"
  },
  {
    "startTime": "01:40:00",
    "text": "for having a single eip header that can be as i discussed either a notebook option or a tlb inside the srh header if you want to extend the segment rooting for s7c for ipv6 and but it is good to have this common erp header and inside this we can put the eip information elements that can support different use cases okay um this is one reason is that the number of option types uh in all biopedal is very limited uh so there are eight bits but then three of them are used for uh defining they have a specific semantic so basically for in some cases you have only uh 32 options to to define while with the with our eap information element we have a code point space of up to 24 bits so we have millions 60 millions of different information elements that we can define and so there is no pressure let's say on the under standardization and also another interesting thing is that common information elements can be reused across use cases so it makes sense to have one single header then different information elements and some of them are reused across different use cases so of course we will need to define a different information element depending on the specific use case that we want to support but some of them like time stamping or authentication they will be sharing so we will we can create a library of common protocol components or"
  },
  {
    "startTime": "01:42:00",
    "text": "common information elements that can support multiple use cases and we have started to do this in in the in the document that i mentioned before a quick um discussion on applicability and scope so in our vision we do not need eip to work end-to-end across the internet but we can have this header working in in limited domains and also a quick mention about security uh that we are uh using uh some uh an h-match approach that that we can authenticate the information that the notes write in this header uh like this is done in in a service six already done in segment routing the same approach that is done uh to authenticate the information that that you put in this in this adders so here i repeat the the draft no this is not the aitf draft this is still a public document not not published as a draft in which you will find the definition of this aip header and a definition of a set of information elements that are carried inside this ap information element and so coming to the specific topic of semantic routing we we focused on a specific scenario scenario of semantic routing so we consider the the need of uh routing using the geographical position which is called the geotagging and this is one of the use cases that are defined in the in the semantic routing drafts that daniel and adrian has established so we took the the ideas from that that drugs so"
  },
  {
    "startTime": "01:44:00",
    "text": "geodugging of course means carrying uh geographical coordinates in uh um in the ipad in the beheaders and so we have a geotagging information element which is carried inside the generic eap header and we can carry the geographic location of the source or of the destination of the communication so of course the source can use it to advertise his geographic position and other nodes can use the for example the advertised location to to use it in a routing things for example to the the situation in which you have uh leo satellites that are covering the the world so in that case maybe you need to uh if you know the the the the geographical coordinates you can use this information to root an ipv6 targets in your network of uh leo satellites no so here we have the details on how we can encode the information in our information elements so we have a solution where we encode the coordinates in 32 bits and we have a precision in the order of millimeters or you can use 16 bits for latitude and longitude and you have precision in the order of hundreds of meters so these are all interesting things that you can do when you have a platform for doing experiments so you you move from theory to practical experiments and working code and in fact we have a prototype for our"
  },
  {
    "startTime": "01:46:00",
    "text": "eip it's a prototype that is built for for linux and we have two main components we have a packet generator and the detector so we can write our eip header and we can put this erp editor in inside the hop biop header or segment root in tlb and then we have an eip our router that is based on ebpf and can take these information elements and can take a processing decision rooting decision based on on the information so we are implementing this uh semantic routing in particular the geoducking use case with this prototypes and also we are implementing advanced monitoring so we have a solution for end-to-end delay monitoring in band so adding information in ap packets to monitor end-to-end delay and another solution for uh path tracing so taking uh uh recording the path that a packet is uh is taking uh putting this information in our eip header okay these are some details on our uh prototype which is uh included in a docker container so you you can download your docker container and you can experiment with a simple topology like this generating your packets and then processing in a couple of intermediate routers we have set up an informal interest group on on this topic so here you can find the link and you're welcome to uh to join and you will find all the information about the"
  },
  {
    "startTime": "01:48:00",
    "text": "the prototype also in this link here you find some reference so we have uh recently uh we will have a paper in the in the workshop that uh also uh daniel mentioned i think in the in the chat uh the the second workshop on future internet routing and addressing that describe this solution and that's it so thank you for your attention on that hi happy i meant to take questions thanks stefano i see greg in the queue interesting so uh in in advanced monitoring you mentioned a couple of functions so um as it's a root tracing i would imagine this is a hub by hub function yes okay so um what's your uh feeling about amount of information that you need to collect on path yeah of course uh you need to be um very efficient in order to collect the the information and there is a actually there is already a proposal on on pat tracing for uh for segment routing it is a recent draft that has been posted in the segment rooting communities and for for our part racing we simply reuse the debt part tracing proposal that have a very efficient way of encoding the information of the different nodes in order to keep the the sides of the header limited yeah uh what what i wonder is so is if i understand your proposal correctly is that you propose to collect this"
  },
  {
    "startTime": "01:50:00",
    "text": "older telemetry information within the trigger packet within the data packet is that correct yeah yeah yes yes when when you are using eip for this telemetry we are doing something which is a similar but there are uh existing proposal in already existing proposal in iatf so in this case we are doing something similar to the existing proposal yeah i just want to point that uh this is individual draft so it would not be a really itf document yet but secondary what i wanted to ask you uh why you think that it's important or critical to have this information in the data packet itself and not to collect it out of band relative to the data flow yeah yeah um i think that um in in the case of uh um monitoring i think that there are advantages in some cases in collecting the information and sharing the information directly on the data plane so if you are building a new router which is optimized for doing this information i have the feeling that is more efficient to do to do some operation in the data plane rather than exporting information in the management plane and processing this in the management plane so if you need for example make that's good to do and also you you there are some situations in which you can for example calculate some um sketches some reduced information in your data plane and inserting this information directly in the packet can be more efficient but of course this is i think an open research topic at the moment yeah yes and another question i have is um"
  },
  {
    "startTime": "01:52:03",
    "text": "their information or advanced monitoring that you mentioned uh very similar to what is already addressed by in situ oem yeah exactly so my point is exactly is also this that there are a lot of ongoing proposals and discussions to allocate off by of options or different use cases so i'm also putting the question if it is i think it's the right time also to make something which is a little bit more general because with t2 oim you can do just the monitoring okay but there are different other use cases in which you can also read you can also write you can also take decision based on the information that is inside so my proposal is that we need a more general solution and this is eip is about a more general way of doing many use cases one of these is a semantic routine another one is advanced monitoring and and the proposal is exactly to have a generic framework rather than uh continuing to add the new up by up options so when the the space is very limited i think little bit differently because if for example someone wants to collect geographical coordinates in addition to node ids the only thing that is needed is a new iom data type so uh because iam [Music] trace data options are not fixed it's uh registry and"
  },
  {
    "startTime": "01:54:01",
    "text": "as i understand correctly so now it's a rfc 9197 im data so you can add the data and then signal it in iem header uh in according encapsulation and you can create and you don't have to create a new uh header for that uh another advantage of um iam is uh it supports uh out of band uh collection of telemetry information and it could be either iem direct expert or for example hybrid two step and hybrid two-step advantage is that it's not only keeps the overhead of the data packet limited by not adding data in the packet but it simplifies the correlation of data because data are collected uh on the same path as the uh trigger packet in one in a train of uh packets so so guys um this is good and interesting but it's not somewhat off the topic of semantics okay uh yeah uh i i would encourage the two of you to talk about uh oam to each other because it seems uh really relevant and i wonder if just for the last few minutes the slide okay let's pop up the the last slide um uh while that's coming up if you haven't been reading the chat window you should amongst the very good interesting questions there's a master class in addressing naming routing and forwarding so uh just the last opportunity for"
  },
  {
    "startTime": "01:56:01",
    "text": "people to jump in and shout um is is semantic routing something that should be we should be looking at um are are there applications that use it is there a business case can we already solve the problems and therefore we should work on on extending existing toolkits or just using those toolkits should we build a point solution um for each problem or uh aim for a single generic solution and what are the concerns and about risks and benefits and then if anybody wants to leap in with that nobody's showing um there was a really nice comment from [Music] in the chat from uh from i think it was from roland uh yeah uh about being concerned about putting too much state knowledge and information in the network and making the architecture much more fragile but i still don't see anyone in the queue so it's really interesting chairs have you got anything you want to say about this do i take silence as a no go on changi you speak uh yes uh checking here well i want to volunteer some information regarding the first presentation uh on the what is driving the secondary the slide it used uh some examples especially"
  },
  {
    "startTime": "01:58:02",
    "text": "emphasize the 5g related semi video streaming the 5g health healthcare vr ar holographic those type of things but the thing is like for these things it's normally uh comprised of multi-modality communications like a video audio haptic or all kind of information that requires synchronization among different strips so one information that has been discussed just in the finish the 3gpp uh discussion for the xrm uh it has a restriction only talking about the control plane without talking about the user plan so here well what i'm looking at for the segment writing is look like it's talking about the user plan like per packet processing with some embedded information so yeah i'm seeing the disconnection between the example that presented in the first presentation with the the scenario of the domain not being applied like a 5g related use cases so yeah okay thank you um jeff do you want to try again jeff is having mic problems no still nothing from jeff uh okay alexia i'm sorry i'm multitasking so that i didn't want it here to talk but just a simple question i think the semantic routing sounds interesting as i ask the on the chat however the very first question is what the identifiers identify current my current understanding of semantic routing is to"
  },
  {
    "startTime": "02:00:00",
    "text": "still utilize ap addresses but putting some so-called semantic meaning into it what whose semantic is that that's a question it's it's the semantic of the applications the semantic of the contents and i think it is really getting to a change of architecture if your semantic uh departs from ip address semantics that's is not about the details whether you do point solution you do some something else it's not about you can't make an implementation that works in small scale this is really about what semantics we are talking here and if that semantics is not topological semantics then then it really represents architectural change yeah i think i think you nail it there um and and to take this forward does require uh identifying what's trying to be achieved and therefore what needs to be uh expressed in the packet as a semantic and then whether that goes um by overloading the address field or by being placed somewhere else to if you like enhance the address field i just want to point out that an identifier space means one thing if you want to put multiple definitions into the same identifier space that one is an architectural change to the success rate it's a question i might already show the example yeah i agree completely"
  },
  {
    "startTime": "02:02:03",
    "text": "lewis gets the last word before jeff it is very quickly only to comment that the yeah actually the the interest on this that could help uh help the applications to i mean have the deliberate information to have some contextual information that could help to optimize the deliberation information from applications so i think the interest on that and i would like just to to remark that because one of the balance that you put there is if the are there applications imminent to use this probably those that could require context will be the ones requiring this kind of information okay thanks and over back to you jeff yeah my comment here would be to also follow what's going on in mpls uh to the zero developments uh because pendulum always swings right let's do everything control plane versus level thinking data plane while doing everything in control plane we know it doesn't always work doing everything in data plane has huge cost associated with it from forklift upgrades to very low success rate as uh said rightly so finding way in between probably would be right place to use and i can tell you from actual implementation perspective there's a lot of work going on it's not published in atf where the semantics are flattened otherwise there's no way to put reasonable simple device what we call today mostly white boxes to actually provide us functionality right so we need to find right balance between what data goes into control plane which it's not necessarily what's going into forwarding plane right that's all on my side okay that sounds very reasonable thank you jeff um"
  },
  {
    "startTime": "02:04:00",
    "text": "uh i guess time's up uh thank you everybody for uh contributing uh and typing frantically in the chat and dan and i are going to work on the minutes for the chairs to post so uh now with a chair head on we are going to work with engine and our ids on trying to assess what has been presented and what could potentially be the next steps adrian and supporters on your side please work on coherent proposal of how you perceive the presentation the interest and the potential next steps please talk to us okay thanks we'll do thank you for everybody for attending the meeting so we'll see you in philadelphia thanks everyone goodbye bye you"
  }
]
