[
  {
    "startTime": "00:00:12",
    "text": "folks we\u0027re going to start in a minute take your seats if you like yes it\u0027s blue back there and it\u0027s the big ones that are not working they didn\u0027t work all day yesterday for me I was in no okay do you want a different dongle maybe okay are you able yeah let\u0027s do it hello everyone we\u0027re going to get started we\u0027re just dealing with a few technical issues up here please have a seat or take your side discussions to the hallway this is quick our second session for the week if someone could close the doors in the back that\u0027d be fantastic - oh thank you we need someone to take minutes today do we have any volunteers I know you\u0027re bright-eyed and okay Brian Trammell is exempted because he did such a fantastic job yesterday even minuted in a foreign language which is fantastic so true any volunteers otherwise we will volunteer someone Chris but thank you very much here you\u0027re a gentleman so please do it in the Java channel and if folks could help him out by correcting or elaborating more necessary or or capturing things that he fails to capture that would be very helpful sorry I\u0027m not either pad I\u0027m sorry on the either pad if you could refrain from translating it to another language we would very much appreciate that so this is our second session the blue sheets will circulate the blue sheets at the moment we have a scribe note well we can get from the screen actually as we\u0027ve said so many times before these are the terms under which we participate here in the ITF regarding things like intellectual property regarding things like professional behavior would you take these seriously so please familiarize yourself with these if you\u0027re not already aware sorry yeah "
  },
  {
    "startTime": "00:03:13",
    "text": "agenda bashing today we are going to continue to go over the issues against the base traps especially the the virginal ossification and the other issues we deferred yesterday then as time permits we\u0027re going to talk about the recovery draft and the HTTP draft if we could Reserve we had a side meeting this morning with some HTTP folks I\u0027d like to reserve about 10 or 15 minutes to have a discussion about HD through our priorities so we\u0027ll make sure to do that before the end do we have any other agenda fashion yeah Krista let\u0027s like make a quick announcement with Antwon LaVon for Microsoft Research we\u0027re preparing a workshop for Bulls before and ESS this year focusing on quick security and privacy hopefully that will be accepted and and that\u0027ll be announced sometime mid-september and the workshop usually takes place sometime in February so if you know if anyone runs a family who are working on this particular issue please encourage them to you know continue that work and then bring it to the workshop when the time comes we\u0027ve reached out to a couple people who are actively working in this area and related TOS aspects so it should be quite interesting so and one other thing on the agenda will reserve a brief amount of time at the end to talk about planning in future I don\u0027t think we\u0027re gonna be able to announce the next interims location and time firmly this week but hopefully we\u0027ll be able to do that in the next week or so okay so let\u0027s get started I think yesterday we deferred 28:44 client connection IDs are broken they have Ignasi did were you able to make some progress on that I know it\u0027s hard yes David Skinner Z cool so I applied the changes that we discussed yesterday to the PR I saw at least one comment saying that it addressed consider the concerns were resolved what do people think now mainly it\u0027s yeah changing the must to assured and adding a sentence saying like you this breaks these features and so you must not do this unless you know that those are not in use any further comment on that or should we go ahead and try and get consensus in the list I\u0027m sorry I took a preliminary look but that last part I had not study properly I took a preliminary look and must should just fine but the rest I\u0027m not sure about seven taken worst idea I can\u0027t do that today so what we might do then is wait about another week and you can have something discussion on the issue and then if things look settled there we\u0027ll go ahead and issue that the consensus call after that make sense okay and and again a reminder of the "
  },
  {
    "startTime": "00:06:15",
    "text": "acoustics in this rumor or horrific so please speak distinctly and close to the mic that you can anybody know how to scroll horizontally in this Chromebook oh so if I swipe then the wants to go back in history oh how many fingers are you using for this this oh they need to be why is it working out okay so that was 28:44 next up 2863 i believe we deferred martin siemens issue on unrecoverable lost pattern leads to deadlock where do you believe that that has gotten less not more clear in past 24 hours sorry i do not think we\u0027re fair to have any kind of consensus calls earned late okay i think david may have to reestablish himself as chair of the design team i think you said that nope on grass yeah okay here it\u0027s Ganassi yeah negative progress there is a discussion about reopening things that we landed so we\u0027re gonna take that back with the same suspects on the design on the discard keys design team and come back with something that we all agree on okay speaking of which 27:41 revisit initial key discard has any progress been made there so we\u0027re fighting on this one as well so so the the message here is that there\u0027s a cluster of issues that are all all around this and we will be reopening some and all the ones that fall into this bucket revisit initial this key discards the unrecoverable loss pattern one and even potentially the timing side channel one will be resolved at the end of this thing but at the moment it\u0027s gotten worse not better can can any always what a chair wants to hear is there any progress that can be made in this meeting is there any useful no I don\u0027t think this would be a very good good use of our time here though that requires time in front of a whiteboard and is this something that you believe you can bring the gripping get consensus on the list or we\u0027re gonna have to wait until the interim this is not a disagreement it\u0027s more along the lines that we we\u0027ve now come to new understandings about the properties of the system and we need to simply work them in the design team to come up with a solution we should have something by the interim if we don\u0027t then you can fire us all we\u0027ll save a lot of money a lot of time and money okay well we\u0027ll wait to hear from you yeah the screens are making me nervous now okay that leaves us I propose we do the "
  },
  {
    "startTime": "00:09:21",
    "text": "version ossification thing or straight to version ossification yeah there are probably other ones that we can do but that one just has to me to be that is the tricky one yep so 2496 quick version ossification can you find the slides mark it just a note I want to make sure that we get to the recovery issues so as long as this is I can\u0027t understand you I\u0027m sorry I want to make sure that we get recovery issues yes we will type down this thank you and just one last thing on the discard keys i reaiiy unarchive the discard keys channel on slack I will be coordinating see if we can meet in person during this week and they clog us there with the design team so whoever wants to be part of that send a message on the discard keys channel aside as you didn\u0027t see the first step in anger can someone contact the secretary didn\u0027t ask them but tell them the screens aren\u0027t working again as you can see the first step in bringing personification is use Comic Sans Christian women Christian we know that kazuo and I sat down and tried to work on this problem and this staff is more like a problem sorry this is this presentation like a problem statement than it is like a solution um I try to present credit and the problems and I walk through all the horrific ideas we had to try to fix them then up which are really good so maybe someone this room will have a better idea next slide so okay there\u0027s the high level problem but the version is like right there it\u0027s like an invariant it\u0027s in the header it\u0027s like fights you know it\u0027s bite bytes 1 2 5 or 0 2 or you know however you count it to 2 to 6 I guess it\u0027s 2 to 5 and so like what happens if middle boxes start rejecting anything with a long header this is version 1 which like is not entirely out of the question given that we\u0027ve already established lots other stuff that looks like this a pattern matching um that would obviously make it hard to deploy quick version do and you end up with some version of world where like you can\u0027t do that so that would be sad I suppose we can always as usual stuff the version somewhere else like we are what to do but like that was annoying Els so maybe one ought to do it again next slide so the first thing we did was trying to sit back and say like what\u0027s the threat model for this like and this is basic an attack by the middle box is let\u0027s be clear so what\u0027s our threat model for the middle boxes and we searched I\u0027d like there to kinds of my front models like one is implementers are like really like really pretty Lindsay right like they don\u0027t really read this back they just sit there with like TCP dump and they\u0027re like oh well like all these packets out like one here so I guess it must be one a might like "
  },
  {
    "startTime": "00:12:22",
    "text": "check the quick bit and make sure the version and maybe either do dependent on a panel situation maybe they do state enforcement so they say well if I have you know I have NAT state or some other kind of state for this host port quartet then I do then I check the version but otherwise I don\u0027t that\u0027s like a pretty pretty common they do is pull check on the opening but on the rest of the thing um so it\u0027s like version 1 and like it\u0027s not you know motivations very but those are people aren\u0027t trying very hard on the other end or people were like trying really hard right like read the whole specification we\u0027re actually trying to stop you from deploying the next version hum and we certainly have seen this somewhere TLS or people were like well I don\u0027t want you to point on this version um and um and they\u0027re only do essentially an arbitrary amount of work um and so that in particular means like any anything we stick in this back like they\u0027re gonna know about um so these things so one of these we have in the spec now is we have every version has this um this encryption of the initial data but then curse is based in a fixed key which is the spec so they\u0027re gonna know about that and they\u0027re gonna know that if we change it that it\u0027s different so first we just I put a front model is um by the way you feel free to jump in at any time this is we\u0027re almost tutorial I mean nature anything else uh because what you need to do in order defend against these people is like extraordinarily different next slide so the good news is the lazy implementers thing is actually like pretty easy um and David Benjamin can\u0027t see movies here I\u0027m floating a bunch of ideas for dealing with this in CLS you can see malarkey is here so the first thing to do is like get them get the explicit version out of the header because like that\u0027s the source of the problem I mean you could also leave it there and have it be one all the time to have to dumb you\u0027re just wasting bytes it\u0027s like effectively getting a header and then you have like a bunch of versions a bunch of versions of figure out what the version is that more or less depend yeah you\u0027re feeling bad now aren\u0027t you David I can see it and the other bunch of options that basically depend on knowing what the spec what the deals the spec um so maybe you remove version nine use travel encryption based on the perspect seed value you replace the version with like a mass version which is like again the perversion see is the person see value another session would have the server pride like an alternate be an another connection um like all these are like trivial easy to circumvent um if you actually for the specification so like first of all um you can just ignore the version number just travel too quick for the potential version and it\u0027s like the thing comes up and it looks like a quick packet and it\u0027s like properly formatted then you\u0027re pretty sure you do the right thing and if it didn\u0027t then it\u0027s garbage next Martin Duke f5 um I\u0027m not convinced that the third option there is that easy to circumvent so there are two versions the third option um one of which is where you provide an alternate version and the others by the alternate version and an alternate seed right if you don\u0027t play all for the C is a trivial right um if you don\u0027t provide an alternate version um then um then I think the most likely outcome is that most sir that a lot of "
  },
  {
    "startTime": "00:15:25",
    "text": "servers are not alternate versions and what the attackers do is they\u0027re just like well we only let version one through and then basically people are gonna have to be willing to fall back to version one and it of an equilibrium where we\u0027re basically repeating connections don\u0027t work properly or they fall out ccp so um so I\u0027m not entirely sure it\u0027s true but I think it\u0027s a plausible if they\u0027re working there but he I agree it\u0027s a somewhat different situation in situation but he\u0027s other ones obviously trivial to get house okay so III think really almost any model for this is gonna require a significant at least some critical mass of clients and servers to implement and just count on the fact that you\u0027re breaking your severely doing those connections to create organizational pressure to not do this yeah maybe um I think some of the other vert someone the more aggressive versions don\u0027t have that property necessarily okay um but I mean like let\u0027s um I guess but yes - right there\u0027s a sliding scale of a region of pressure that goes from like nobody does it - some people do it all the time they\u0027re with us all the time right and so the more you get towards the right the more pressure the harder it is the ossification but yeah Roberto very young there\u0027s one other thing that is interesting here which is not necessarily preventing ossification as a first-order effect but preventing loss if ocation by letting everybody know something is preventing them from upgrading I believe that you know we\u0027ve talked about having version inside of things before but it\u0027s interesting to have it both inside and outside so the network can respond because that\u0027s why you have it externally and so you can record and report and accuse by having it interview directly so gory Fair has the two things when when we want to deploy a new version of something in the network often we want to know the new version exists to do good stuff to let that traffic through to classify measurements from one versus the other if we close that then we close an opportunity to deploy new versions second I\u0027m not convinced this threat model is the one we have to deal with there are ways of doing versioning within quick if we if the outer version number it gets ossified I don\u0027t think you will get asleep I\u0027d so am I wrong am i right how do we know well I think um I mean definitely the challenge in front models totally legit I think by and large in the front all those group is adopted but people can correct me is that like we should be treating the middle boxes the greatest and possible as a dumb pipe and like trying to avoid them looking at data and so and not being pretty good sympathetic to maybe if they knew there is more version information they would do better um but again that\u0027s a question for the group on the certainly you\u0027re right that the outer version goes ossify we can like we can like move inner version and then like when that Kasasa five-minute "
  },
  {
    "startTime": "00:18:25",
    "text": "version I mean like that\u0027s basically where like people are worried TLS is gonna go but I think the the idea here was to avoid having that view I guess so it seems like it could head to try and stop something that we might think is an issue and that\u0027s what threats are so yeah I get it and I don\u0027t agree with the threat model okay enough what it\u0027s worth my understanding is that Google\u0027s already seen this real quick yes it\u0027s true but we don\u0027t know it\u0027s true right yeah quit where people actually know this exists I think at that time people didn\u0027t really know what quick was and the intervention nation on which to look at particular terms I can\u0027t speak to that intelligently um so like I say um with number options if we\u0027re willing to just deal with lazy implementers um for her working implementers you either client/server to share some kind of secret information somehow there\u0027s no way around as far as I can tell that was the consensus of like a Christian and cuz you hold up myself um next slide so sorry I\u0027d like for I do these slides a while ago you showed me the slide of this just so I\u0027m like or get you some oriented okay good okay so I mean the bottom line is I you have to equip the initial somehow and so the there\u0027s a number of possible ways to do this one is to use this there\u0027s this detail about trial decryption or separately encrypting the version number that\u0027s like a really boring crypto detail because I\u0027m not gonna bother you with right now there\u0027s the variants where you deliver the key in yes and I this is very analogous records de France were to look at the key like in the previous connection and so that goes back to the point Martin Duke was making I think but the bottom line is you\u0027ve gotta like encrypt the damn thing with a key that life is not known not known at none available in the box or they\u0027re just going to equip themselves um so this obviously is you for what happens in cases with secrets and available um so um now in the case of DNS yes and I style approaches the secret isn\u0027t available um typically on a per server basis that it servers may not publish it in the case of the case of the subsequent conversion obviously it\u0027s key very common the secret will be available numb what do you do and so that that\u0027s one hence my concern about its first connection for subsequent connection our certification wears in the SLI style it\u0027s more work but you get you know you get foot you get you get a randomized version from minute zero it\u0027s not obviously the case you could try doing both of these you could try doing um you know you could try doing you can have basically a standard way to reach this end result and then you can have something going connection NES and ice town the same people discussed um one point Christian visionary discussion this is like more than like the sort of trend here the trend here if you follow this line of reasoning it\u0027s just completely shut the middle box out as much as you possibly can so they can\u0027t even read for missionary initial and so as Corey what "
  },
  {
    "startTime": "00:21:27",
    "text": "you\u0027re saying we\u0027re the deployment implications of doing that if you just say like look you\u0027re a dumb bit pipe stay out of my way I\u0027m something we have to consider in any case um next slide this is a fine technical point but I know there\u0027s concerns when this was initially raised at the sort of cost of having yet another publication for um for this the so yes and I obviously use the public key because you have to worry about disclosure of the si key um it\u0027s possible you could snake out here which is a symmetric key that was delivered either which delivery or in band on previous connections or in DNS record and the rationale for this is that it\u0027s a gun or miss I\u0027m going to work for the for the for the middle box employed like that pull the side the DNS will make their own connection and get the information that\u0027s try to try to do things and that seems like maybe it\u0027d be something almost nobody willing to do so if you assume not somewhat bounded like hard-working implementer than this possibly get it with a symmetric key and then obviously you\u0027ve like it\u0027s a much much faster operation it\u0027s a life is simple and also probably you don\u0027t too much per packet overhead in the first packet yes mom Thomson I make the observation that a lot of this stuff that we\u0027ve been doing sort of assumes that symmetric crypto is free but I symmetric crypto is is pretty deeply expensive for the sorts of things we\u0027re talking about like if you want to send a retry packet and you have to do a public key operation before you can send one that would be I think a non-starter okay um yeah that\u0027s true um so um right next slide um so there\u0027s one other suggestion that kazoo heard floated that was sort of our final of this but might be a way to deal with this it didn\u0027t have all these sort of crazy things with initial um and that was what he was calling mid connection greasing um so the idea is that you allow people to send along hunter packets during the connection and under those the version of Burton obviously be random appearing um and of gender if some protection secret um this probably is lazy implementers um like obviously whether that work depends on sites really doing it I think my concern when he waged this was it doesn\u0027t work properly if sites like basically only do version enforcement for the first packet it\u0027s nothing the state table um so um and I guess thank you for putting this in you can do force migrations to in order to like sort of pull the state people away is one possibility um but again let\u0027s go got two more induce question of like how well doesn\u0027t that hasn\u0027t work and how much work do people have to do to it to get like an te ossification defenses so the other observation here is that this sort of goes back to that really old issue where someone said make connection establishment look like migration you can you can imagine this being you send long header packets in front of those migrations and and that further off supplies the protocol and in in a different way in that yeah this tell us the pattern that if you\u0027re sending the first packets or the first datagrams on a path have long header packet in them and that\u0027s not something that we\u0027ve ever promised yeah so yeah so Roberto says every other "
  },
  {
    "startTime": "00:24:29",
    "text": "migration is like yeah next slide right so as I said beginning this is like not like a great situation um if we\u0027re willing to say look we just care about people we\u0027re all we\u0027re trying to do is stop people who are like two incompetent to like read the specifications and know the invariants are then like you have a number of options that are like you know we can decide between right and they\u0027re largely pretty easy on some of them may grow card then in the variants a little bit um like to make the pig version over out or to like mask uh personal things but maybe not depending which one you choose on on the prettiest hard-working bonus like he\u0027s getting a lot harder and is gonna almost certainly acquire change their instance pretty nasty ways it also involves some there\u0027s which particular version you choose involves and trade-offs depend on how well it works and whether and basically how much packet boat you introduce versus versus how much work the the server has to do determine which version you have so just to give you a sense of this trial decryption has less back upload button curtain the curtain sequence number special so version numbers faster so um so first you decide like what like that our objective is here before we like actually try to engineer a solution hum that\u0027s so that\u0027s probably what I want to leave you hey Mia could have been so for me this all breaks down to whatever we do is like just increasing the load or the work that somebody has to do to try to to break this which also means increasing the load on the server or on the receiver basically and like I would actually think that this is like even worse because in many situations you might have a minute middle box which is somewhere in the excess network and has like very few quick connections to handle while the server can have very many quicker connections to handle so there is like there\u0027s a big performance implementation here and I\u0027m not sure if it worse is to go down this way given that I\u0027m you\u0027re also uncertain about this red model and we uncertain about what the risks are for me it would be really more important that we have a way out if we find this happening at some point and there is a way out in the next version which will be like an overhead it has a cost but as long as we have a way out that\u0027s important right for me so what actually sure that we\u0027re materially increasing the cost on either the server deployment on memory designs basically round up to like one or two more cooperating more symmetrical operations so in particular if you only support one if you only support one version and they clipped across as identical um it\u0027s only becomes upon the matter which one of these effectively issues so um I\u0027m not sure actually I changed the load depending on which one you choose then eventually it\u0027s I mostly wanted to mention that if you believe in split mode yes and I the split mode forwarder is a middle box that needs to know the version number so split Modi is nice probably incompatible with in-band version number "
  },
  {
    "startTime": "00:27:30",
    "text": "yes I think yes what\u0027s up thank you took me a minute but yes you\u0027re angry good David Benjamin so I think there\u0027s a second thing that we should do a second like access we should be considering in front model which is whether or not I mean I guess it\u0027s kind of lazy and hard working whether or not these middle boxes can get updated because for chillest 1 3 the big problem is not just that the middle boxes had all supplied everything and done everything wrong but that they couldn\u0027t ship the update till I fix it when we told them and so the idea with the the crazy trial decryption thing which was to pair that with rapidly cycling versions in like a few rapidly a few like the point isn\u0027t can be updated quickly and so this way the the idea was that if if you cannot distinguish any two versions you do not know about then that means that being able to deploy one new version means we can deploy any new version and so as long as there\u0027s this rapidly cycling side that keeps the light that keeps things moving then hopefully like you know the the the ones that can\u0027t get updated will not be able to do this sort of stuff the ones that can well we can tell them to go fix their bug in the process which is a slight improvement over the current situation you could argue that like really it\u0027s just the rapid cycling and not the crazy child decryption that\u0027s getting us that I think the correctly then might not be wrong yeah thank you it\u0027s good I mean my basic assumption as you say is that well have some class and little boxes you can\u0027t get updated and then I think this I mean this meshes not it I say more in Dukes point about like how much commitment do we have to like how much sort of installed base of people who are exercising these functions do we have to have before it becomes unprofitable thing boxes to ossify in these but on these properties first a question which is are you done with your slice I\u0027m totally done yeah I\u0027m happy to sit down to again good I just wanted to make sure it\u0027s my personal belief that protecting against the lazy implementers is good and we\u0027re missing by the way at the lazy endpoint implementers they exist and but but I do think that it\u0027s important to think about the second aspect which is I believe that hard-working implementers are going to do their right thing they\u0027re gonna intercept things that\u0027s going to be something that will be necessary in many networks that\u0027s okay but good but you should consider whether or not the detection of that is part of what we need to concern ourselves with my personal belief would also be yes I print channel too much work what Roberto said I actually want to address this last point on this slide I haven\u0027t really heard a convincing model of what a middle box might actually want to do to quick rate I think that we are we\u0027ve "
  },
  {
    "startTime": "00:30:30",
    "text": "taken a lot of learning from some of the stuff that happened early on with quick crypto um I think we\u0027ve taken a lot of learning for what happened in TCP I don\u0027t think a lot of those lessons apply here as far as I can see there are two operations that you can do if you\u0027re not if you basically don\u0027t have the keys from both ends and can\u0027t like break everything all the way apart there are two operations you can do with respect to version ossification one you can detect that it\u0027s quick and drop it and what we really want to keep from happening here is that quick version one does not become the flag that says this is quick versus this is not quick the other thing that you can do is in a future where we have determined that quick version one has a vulnerability that allows an intercepting middle box to actually be able to do more than we think it can it can use the ability to determine determine quick version one complete version two to force it down great attack are there any other things that we\u0027re trying to prevent happening because I think we are we\u0027re kind of wasting our time I see people behind you in the line I would like to be convinced that I\u0027m wrong so mum Thompson I don\u0027t think you\u0027re wrong we have evidence at least from TLS that people to build products that detect is this TLS and drop it or vice versa is this TLS will let that pass is there something else and so having the ability to obscure them is this quick as is something that\u0027s kind of important too to be able to suppress but that\u0027s specifically I don\u0027t think we can suppress is this quick generically is this quick version one is a signal that we want to suppress because that has a direct effect on our ability to deploy a quick version in just another few management that Jonathan was after occur he\u0027s on the other mic so did this line until after accurate and for nothing on over them go ahead what it\u0027s about anger I\u0027m not super convinced that to kind of just masking the version number is not to prevent very very motivated attackers them detecting quick version one and person two differences for example let\u0027s have we changed initial crypto scheme in quick version one version two what version to will look like an attacker could do trial decryption of the the packet the packet encryption scheme itself determine whether it\u0027s version one version do I think more substantial changes probably would need to be made for the protocol we want completed indistinguishability between versions to exist as well having said that I think believe protect protecting against a lazy implementers is like using obfuscation techniques to hide the version numbers that like if somebody is "
  },
  {
    "startTime": "00:33:30",
    "text": "just implementing like a middle box like the one in the idea quick was hard-coded diverted number seven or bit number seven that should not be allowed to block quick deployment subvert and do first version month um so but I certainly agree masking the version number is not enough to deal with someone who are working no you have to like okay you\u0027re freaking me out yeah you have to yep in cipher the entire entire block and it has to end key that is not not publicly no um I guess I just want to float one other thing we seen um you know boxes do that is more aggressive than inversion checking and that is a protocol correctness enforcement and so first and what you do is you look at the TLS client oh and like I don\u0027t like this extension or like this extension because you focus on that and then you and then you strip it so it\u0027s it so it\u0027s important it\u0027s true that that\u0027s like a kind of a kind of interference that\u0027s more like it\u0027s more like aggressive than um checking the diversion but it\u0027s like but it\u0027s something that it bit as long as as long as the diversion scheme is constant with a version and that\u0027s public information and of course you can pack the whole thing and I felt like we we did it okay um like in the experience with with I mean there\u0027s some hope I think that like in the Box people got the message about TLS about these this tension points and littles it or not and like like not screwed not screw of like is that really Persian huh like you know on extension and stuff like that so I think there\u0027s some possibility to deal with it I mean he\u0027s get away with just hiding the version number but it but definitely that kind of protocol enforcement something even systematics it occurs to me that another you were asking why a middle box might be doing this another possible use case the little box says quick is great I love quick but I don\u0027t want to allow random you TP through so I\u0027m this is what I\u0027m using to detect that these packets are in fact quick and not just some other random UDP I\u0027m obviously want that to work going forward but you also want that be possible I think so a little bit tricky finish wins so yes I to you that middle boxes will inspect and attempt to distinguish quick version numbers and the reason as echo said is that the ability to parse the client hello out of the initial is version dependent and you need to parse the client hello out of the initial if you want to do sni based censorship which is which is very common so the yeah those those systems even if they\u0027re set to not do any filtering in at some point in time are still going to be doing version dependent processing and I suspect that they\u0027re not going to fail open and let everything through if they don\u0027t like the movie number hi Brian Trammell again "
  },
  {
    "startTime": "00:36:34",
    "text": "so one of the things I\u0027ve heard is that there\u0027s I think actually the the model that Jonathan presented is probably the most the one that we are going to be least likely to say no you can\u0027t do that because there will be an overwhelming desire to do it and that is to say I want to distinguish quick from garbage because I\u0027d like to be able to let quick in and not garbage and one of the ways that that middle box vendors will try to do this is the protocol correctness enforcement I don\u0027t actually know how that\u0027s like looking at how like the sequence of possible packets in a quick connection there\u0027s not a lot you can do there to say oh no this was wrong I\u0027m not gonna let this packet through great that doesn\u0027t seem useful to me people probably try it it doesn\u0027t seem useful the fact that there will be an overwhelming desire to tell a quick packet from a non-quick packet means that I think it should be an on goal to just to obfuscate the distinction between quick packets and non packets because if you make it a goal you will fail and people will invent ways to do the distinguishing and it will be wrong and it will break shit I think the right way to go about this is to figure out what break point we want in the in the the wire image of the protocol design it in make it easy make it obvious but the blink tag on it and then defend the rest because the rest of this is like this this rabbit hole seems like it\u0027s going to be a lot of work for a fair amount of disappointment in a couple of years very short time so if you want to get in line you still can but nobody moves soon here it\u0027s the last one so Cory bear has tried to make sure I didn\u0027t create the wrong impression I want a quick version two and three and four to appear I think people will try and find which was great one people want to when to is available they wanted objects not one but two going through their network and they\u0027re going to find ways to do this if we want to let them learn it by some heuristics from traffic partners which i think is very hard like Brian stars then will still try and do this you\u0027ll produce products to do that if we give them an easy way they\u0027ll take the easy way so I\u0027m not sure that ossifying this is such a bad thing I think it will help us deploy version 2 3 4 July younger can you hear me mark okay just checking I was going to text to voice but I\u0027m not doing it I think as there\u0027s there\u0027s a couple of points and we already have experience with the fact that people and we know that people are looking to detect quick in the network at the interim I had a slide showing a bunch of firewalls and middle box vendors that are offering quick detection as as a feature and that\u0027s only going to increase as quick gets deployed more and more I\u0027d be surprised if that wasn\u0027t the "
  },
  {
    "startTime": "00:39:34",
    "text": "case I believe that that\u0027s going to be a feature for a number of reasons and we won\u0027t be seeing it in play with G quick I believe that the quick version number is going to be in play also at least in part because of the sli point people want to be able to do as an eye detection because they want to be able to block it\u0027s it\u0027s done it\u0027s already there people this is used for zero rating this is used for all sorts of things and sni is critical to get to and that\u0027s going to be version dependent I don\u0027t think that we should lose fixing this problem again of protecting against lazy implementers because at least my experience has been that that is a real problem it doesn\u0027t seem exciting and interesting but it is the real problem the one data point that I have is the experience that we had the cheek quick wear public documentation was available they didn\u0027t look at it we asked them and they said no it was a doc heroes a Google Doc and it was available but they simply didn\u0027t look at it and they didn\u0027t even know that it existed but they built a feature and sold it anyways so let\u0027s be clear about at least I\u0027d like this distinction because I think it really lays out the options that are the considerations we ought to have I would say that we should at least build against lazy implementers whether we go against hard work implemented or not it\u0027s clearly going to be hard I think I cuz exactly right here I don\u0027t think we should lose the first say solving the first problem for the second one so check quickly so at the end of this when we have the my clients trained I think we want to do a three way hum to get a sense of the room on what we should be doing here one would be nothing so not no prevention of personalization one would be protect against the lazy implementers and when the last one lovely we try to put through something against the eager implementers just as a foreshadow what we\u0027re gonna do after this and I think we\u0027re cutting the line at Ecker unless somebody knowing that we\u0027re gonna have a hum wants to still get into it yeah David can I see cool so we recently deployed Google quick version 46 which finally got us to the IETF invariance which was the old invariance before they changed yay that when we did that no one said anything yeah it works everything\u0027s great and then weeks went by and little by little middle box vendors came out of the woodwork Oh everything\u0027s on fire you broke X you books why turns out there al are already a lot of these features so some of them are reasonable identifying quick because it\u0027s a reasonable protocol of congestion control letting it through against other things that I\u0027m ok with there are other middle boxes that we\u0027re looking at S\u0026I but the reason for that is there was your rating video like this video service is free on our network whether "
  },
  {
    "startTime": "00:42:34",
    "text": "that\u0027s a good or bad idea is beside the point but that\u0027s what they\u0027re doing and they were complaining very aggressively when we broke them just because we slightly move the bits 4 bytes to the right but the problem is like Jonah was saying these people who implement this don\u0027t read the docs they fall completely in the category of he\u0027s lazy implementers and I\u0027m really scared that we can end up in the situation like TLS where they do something lazy and then we\u0027re stuck so I personally think we do want to do something thing but though protecting us hard-working implementers we having a lot of smart people in the room who can come up with incredibly convoluted smart ideas that\u0027s just terrifying but at the end of the day if the client is able to identify which versions you speak so is the middle box going to be to some extent unless we throw huge resources at the service on I don\u0027t think we want to do that please from the server\u0027s perspective so my personal take would be do a little bit so someone who\u0027s just being lazy things fall over for them and they notice it very early but don\u0027t go don\u0027t get too smart because greatest that could be really dangerous and we\u0027re going to cut the line of Ian\u0027s unless Patrick was on his way to the microphone until the detour I\u0027m not sure no you weren\u0027t okay Mia could and I wanted to come back to this use case where for whatever reason you want to identify certain information maybe there\u0027s an eye and you will block traffic if you don\u0027t identify it what that means is that people think they have a strong need to only allow a certain kind of traffic and they will block everything else so if they can\u0027t get this information they will block it they will block all quick right so yeah so I mean like some of those cases might actually the right decision but I don\u0027t want to get in it situation where we get to the point where people just don\u0027t want to support quick anymore because it\u0027s too complicated for them because that would be like the worst outcome of who\u0027s working with I don\u0027t think that reasoning the Wersching number gets us to that point but like it is it has the cost and I\u0027m not sure if there\u0027s a benefit we know for real that there\u0027s a cost we don\u0027t know that will be then Ben Schwartz so there\u0027s been some discussion of a quick bit some some way to identify quick or not quick I want at a minimum the inverse I would like to make sure that there is a space of packets an inverse wire image of quick that is guaranteed never to collide because I would like to be able to multiplex other protocols against quick on the same points we did work through that well I understand but this is what we\u0027re talking about changing the wire image okay gotta agree that you want to maintain that property that we currently have in case we get and do something "
  },
  {
    "startTime": "00:45:35",
    "text": "about those justification but it okay thank you and the other thing I will say is if you want to disclose the version number two for statistical monitoring purposes you can do it in the last patch there patrolling or make two points on first two nearest point on forcing people to block quick in order to do censorship is the point in fact the whole point of like yes and I and things like it is to make a safer block everything if you want to block anything that\u0027s like the purpose to exercise the second on to David\u0027s point on on there are two costs I think - I\u0027m trying to defend this for working for looters one is like you know whatever calories we burn thinking about it and the second is the cost to servers on I agree that it will be expensive in terms of the cost of our calories I do not think it out yesterday I spent two servers designs that scene that we discussed I think can be done almost almost incremental zero incremental circle would so if if that\u0027s people\u0027s concern that I think that like that saying we should explore and make this anguish explore I feel sometimes like too much work for us that\u0027s a political reason and as it should be clear I\u0027m like kind of undecided between these like I\u0027m I\u0027m full software lines towards doing a really good job but I understand like that may be worse is better because the whole body have fun comment and one clarifying question regarding Maria\u0027s comment my point is that made conditional greasing is a good way to prevent the mailboxes trying to decrypt the client in shop to see if the client how is good because in case of meat connection grazing you the middle box would see a long hitter pocket for gaining another version that\u0027s unacceptable and if those middle boxes dropped that because it\u0027s anti crypto then the connection fail so that is kind and the clarification question is regarding the consist of call are we going to discuss the options based on the presumption that they are optional features of quick or I will considering them at the mandatory feature I didn\u0027t catch the last what you said are we considering them as it\u0027s optional I mean are we making consensus calls based on the assumption that each option is considered as an optional feature or are we considering them as a mandatory feature good thanks for rating that so I had assumed we were kind of discussed and that\u0027s mandatory but I\u0027m that was an assumption and that might be my assumption it\u0027s good cuz you already at this point because some of these are potentially optimal optional and some of them potentially not optional so like the version where you like remove the version number and you travel decrypt like obvious enough is not optional huh and the version where you do make connection greasing or this alternate version number is optional and so that\u0027s actually I don\u0027t know how to I that\u0027s why you get paid the big bucks to sort this out but like it\u0027s a more complicated question than just optional "
  },
  {
    "startTime": "00:48:36",
    "text": "versus not optional yes about Google I thank you for bringing that up the zoo I assumed that they were all going to be optional so obviously I was wrong one question is are any of the options going to be I think what Christian at some point floated of basically like shipping new versions in a relatively timely fashion so like the version update mechanic mechanism of these middle boxes is actually exercise one Watson is that do-nothing I mean that\u0027s not really do nothing that\u0027s specifically saying like we are proactively going to try to ship versions on a like once a year or more frequent basis because as long as we\u0027re exercising these these joints at that frequency we think it\u0027s okay so we can hum on this but it\u0027s it\u0027s kind of a non-binding right I mean the building a protocol here and then we can you can have about what\u0027s optional what\u0027s required with it and so on but we can\u0027t really you know agree on shipping very frequently for the foreseeable future so it\u0027s an aspiration that we can have in addition to something in the protocol or not but it\u0027s you know what about what the hum do really other than that giving us a good feeling okay thanks and then I think I want a carpet I don\u0027t have to close the lines I\u0027m a little more concerned about like more intrusive termination than I am about any of these things at this point but that\u0027s just me now you\u0027re using your IAB override or did you not hear me he\u0027s saving right you see there\u0027s an IV of right um so I thought this was gonna be easy to be ready humming it sounds like it\u0027s not um so I\u0027m not gonna engineer this um up here in my current shape but if somebody wanted to propose something right that\u0027s actually what I was standing up to see earlier I think you can make the optional or not optional question a later one if you believe this problem is worth solving that\u0027s what it seems like this light is about maybe that\u0027s one way of so what I what I wanted to do is do a three-way hum on this is we should do nothing here where we should try and protect against lazy implementers or we should try against attractive lady and hard-working implementation if I get one with the other and that\u0027s a useful hum to have them then I and we can we can have another harm on something else afterwards that\u0027s good if we need to have a two dimensional harm then no it\u0027s okay but my my solution will be if you want it to be optional so that you don\u0027t implement it then hum for the first one okay that\u0027s fair and I I have some concern about this lazy eager distinction I think if I were a really lazy implementer I would just grab the some quick library and shove the packets through the through the parser so if then you should come for the last option I think it\u0027s what what the answer would be because "
  },
  {
    "startTime": "00:51:38",
    "text": "that is the distinction right the lazy implement I wouldn\u0027t wouldn\u0027t even do that right but I mean I think it\u0027s actually less engineering work than writing your own parser and while there are certainly some super tightly CPU constrained places where you can\u0027t do this you know I think CPUs continue to achieve all right so if you lunch a another question because I might in sadhana people keep going to microphone is that maybe this is useful to get a sense of the room but effectively you know if there would be a solution for protecting against smart implementers that has zero cost right then why not do it but like we don\u0027t have it as so I think your answer depends on the solution you\u0027re looking at sure but anyway uh-hum time okay Kristin IO your beard it\u0027s about the hum sure Christians was a valley comer to anyway go ahead be quick so there\u0027s understand the spec thing implementations that don\u0027t understand the spec and there\u0027s implementations that understand the spec right that\u0027s one way to define lazy versus hard-working I don\u0027t know if you want to change anything I just want to say that this is a definition that we can wholly agree on because it it\u0027s actually definitional I\u0027m gonna stick with the lazy hardworking just because then that\u0027s what I\u0027m gonna do right and this is I mean to get a general sense of the room the details of this obviously will they need to have proposals worked out right so as I said we\u0027re gonna do three hums on whether we should do nothing to prevent personal version ossification whether we should try and protect against version of vacation or get lazy implementers that would otherwise falsify or if we should try to have a describe type of protection against the hard-working at the labs right so you believe we should do nothing to prevent version ossification to be some now all right thank you if you believe we should do something to protect against lazy implementers please from now thank you and if you believe we should do something to protect protect against hard-working implementers please from now I would call that strong consensus for the middle option I\u0027m looking at the lazy oh no no that there were a few hums in jabber for nothing and I don\u0027t see any endeavour for the other options so it sounds like it\u0027s definitely the middle option or even you know little biased weak so so just to be clear this is a decision that will bind let me "
  },
  {
    "startTime": "00:54:38",
    "text": "speak up sorry Martin Thompson it to be clear this is a decision that will bind our actions in this working group before we should protocol yes and that does not preclude someone building something additional at some later time it\u0027s called a decision to bind future action that is often problematic exactly that\u0027s I\u0027m just clarifying that for some people I don\u0027t know that we can really so for those people who wanted to for instance do the dedicated hard-working maybe even malicious implementers who wanted do things with the protocol so we can augment this by doron that\u0027s my understanding so what I think that the purpose of the hum was is to determine what we need to do for a quick version one which means the currently they\u0027ll open specs and I think we hummed on that it doesn\u0027t preclude anything further in future versions of quick Martin yeah yeah Martin Duke yet the optional stuff almost by definition does it need to block B 1 because it\u0027s optional as long as we\u0027ve put some thought into how this would work we\u0027ll have some there\u0027ll be a decent interval of time where there\u0027s Q X X X versions going around there\u0027s F F our versions going around which will give us some protection against this but I would feel pretty happy if we had a notion of how we\u0027re gonna approach it in an optional manner and have that follow the the core of quick specification what is this is it you\u0027ll be happy to follow this in an optional manner to have to have a a solution for lazy implementers that is optional that follows the beef cork have that full respect out in and our seed if necessary after the rest of Creek goes to RFC but so this is an interesting point where the question is is this an optional part of the specification or is it required or again and that\u0027s depending on the design I mean I don\u0027t want to have that argument now but there\u0027s some there\u0027s some what designs really requires this to be everyone to do it and others that are purely optional okay yeah cool even I just wanted to say because I\u0027m not sure it was almost like there is this option to do nothing and protect against lazy implemented by deploying two versions at once right I didn\u0027t quite use that the acoustics are really poor you need to really do nothing and protect against they the implementers by deploying tuitions at once it\u0027s not clear whether that\u0027s a long-term solution it might help us initially right but at some point it might stop helping us by deploying worksheets very quickly in dynamically like this this is again sort of this is also what what was suggested "
  },
  {
    "startTime": "00:57:39",
    "text": "earlier right that if we all agree to should like to rev the version very quickly that would help us but that is certainly true but it\u0027s not really something that the working group can agree to because it it affects people\u0027s deployment so it can aspire to that but we can certainly agree to put something in the protocol as a mechanism I think was on whether we include something in the design of the protocol to prevent against verse notification by lazy implementers right because that\u0027s what the issue is about the issue isn\u0027t about you know it should we all try and wrap the versions very quickly actually my some travel different meaning that well I thought that we were having or we are confident about spending our beam and discussion time on dealing with about those options I mean so I think our consensus is that we would spend time on discussing how we prevent those lazy but that we wouldn\u0027t spend even discussion time on discussing how we prevent those hard-working well yes or no in a sense that we would certainly sort of hum would certainly indicate that we should spend our time on on the middle bullet so to speak but but with the intent of actually coming up with the mechanism yeah that matched my assumption as well which is we already spent some time on this problem and then maybe we\u0027d come up with solution which didn\u0027t require change there were I put a call or concede one in which case we would like put it down in this case design thinking about it or there or we hope the solution fire chief nor a protocol in case we make those changes that\u0027s basically I assume who were hunting for um so yeah I guess um I don\u0027t know how you want to actually in the car make progress in this do we need a design team anything else okay so I step back and let you manage are you volunteering certainly how be part of that yeah um after organize if you want so mutton Thomson not nothing joke observed that if we remove this from blocking the one we might have some time or suggested that that with the case because we\u0027re in the state now where the core transport and invariance and even recovery is getting to the point where it\u0027s pretty mature I suspect that those will be sitting there done or some time while we work for the h3 stuff to finalize and so I suspect we\u0027ll have plenty of time to to sort this out this is not a particularly difficult problem in it and if we go for this sort of lazy implementers one when we can come up with a pretty simple solution I have three time line this to have it closed by the theorem like let have a design team of some sort work on "
  },
  {
    "startTime": "01:00:39",
    "text": "this and then I\u0027d like to say pretty points on the arum bring to the puzzle at the inner yeah okay can we see a show of hands who\u0027s interested in contributing to that okay the design design team to prevent version ossification for lazy implement along these lines so for the minute can you put your hands up again not within minutes we have kazuo we have Jana Davidson Aussie mark Duke Christian Luther Martin seaman roberto support acre the usual suspects I guess Chris would think more hands keep going up Yaya kono very back Matt Thompson right I forgot your name Erica near so I think we have more than enough if I haven\u0027t called your name Andy interested I\u0027m sure you know one of the people we named go to them and and can we have a volunteer to lead that effort that car you\u0027re you\u0027re a gentleman okay so if you didn\u0027t put your hand up but you change your mind please go and talk to ekor and he\u0027ll coordinate that group and we\u0027ll hopefully hear back from you at the interim or earlier yeah do we want to consider early detection of a downgrade we call it a downgrade attack in scope for this because if you want to detect a downgrade it should be early enough that you understand it\u0027s a different attack surface potentially I want that was very quick because when a if it if it red walls were going to punt it 17 we talked about this before when when we removed the version negotiation stuff from the from the draft that was on the understanding that would have a solution that hasn\u0027t been forthcoming or we haven\u0027t discussed it and any length I think that\u0027s because we made a mistake and drop it from the issues list version downgrade is not something you can really detect until you\u0027ve got a shared context and so whatever we do I think we need to couple that to the version negotiation work that\u0027s that\u0027s ongoing and I think that guy has a proposal on that one that\u0027s relatively sensible so we should look at that because I wanna make sure I understand that they\u0027ve downgrade so in the present quick design um there is no version of eëtion him all right it\u0027s a version that was impossible um in I was not proposing to change those semantics I\u0027d like to change those semantics but like in this in this uh not to change them so basically I don\u0027t think this would change anything in that "
  },
  {
    "startTime": "01:03:39",
    "text": "respect but maybe I misunderstood something about hyper reasoning okay dudes cannot see as the person who wrote the pr to remove growth and area prevention from the protocol when the reason we did that at the time was that we were rattling quite a bit about how to do it and the consensus in the room at the time which he decided decided to move forward with was taken out for now we will whatever happens be able to implement it as a transport parameter extension so when quick v2 comes into being it will come alongside an extension to quit v1 so that both can prevent this doubt great so that\u0027s the current plan of record so to be clear I\u0027m trying to avoid rattling on this I\u0027m asking what I hope to be a procedural question for the design team we are making to tackle this specific problem is downgrade detection prevention detection part of the scope of the design team I think you know and the answer is there isn\u0027t any version negotiation at all so therefore you don\u0027t need to tech downgrades okay all right so I think that closes out the issues that we deferred yesterday did anyone does did we miss any there okay that leaves a couple of different discussions oh we have the recovery draft which I think it\u0027s good to do in this room because it\u0027s a broader set of folks then come to our income sometimes we also have the HTP draft and we also have the discussion of HTTP priorities what I\u0027d suggest is we take 15 minutes to discuss priorities now at the most and then discuss recovery and then with the remaining time we go back to the other HTTP issues so it\u0027s unreasonable I thought Kristen was going to the mic okay as a as long as we can time bomb the priorities discussion of course that was that was part of the deal so there was a side meeting this morning about HTTP priorities and and uh I think a useful discussion there one of our constraints for the HTTP deliverable is is that we need to deliver something that\u0027s compatible with this vinick\u0027s of HTTP to I believe is the phrasing that\u0027s in the Charter and one can interpret that to include priorities and so our deliverable has currently has an HTTP two somewhat compatible priority scheme in it but there\u0027s been another larger discussion of community about how hb2 "
  },
  {
    "startTime": "01:06:41",
    "text": "priorities is not optimal and so the question is as a group do we want to try and just deliver something that I would hate to be do priorities or do we want to do something else so in you were leading you early in that side meeting do you want to kind of summarize what the proposed that is from that group of people either Mike is fine okay uh yeah I can teach or anything so what depth of information would you like me to take the high-level takeaways I would we have talked about this extensively in the past didn\u0027t several venues right let\u0027s just cut to the chase okay so the short of it is there\u0027s fairly broad interest at least in the room this morning in removing the existing h2 style parties from the HTTP 3 spec there was quite a bit of interest in trying to ship something simpler in time for HTTP 3 there was a little bit of disagreement I think about whether that should be a blocking item or not a blocking item there was also some discussion as to whether that prioritization information should be conveyed in a frame or a header as in kazoo and Lucas\u0027s header proposal there was very broad support for a setting that indicated are you actually doing prioritization and if so like what schemer using this would both allow YouTube so I don\u0027t think that there was support for that so yeah I think there was support for the notion that you could signal in h2 that you\u0027re not using the edge 2 priority scheme which might be the same thing it might be the same thing I might not be depending on whether you want to have multiple different priority schemes so but I think the critical issue that we want to move forward on in the relatively timely manner is kind of getting broader consensus on the idea that we will not do h2 style parties in HPP is that correct I think so I think we need to have a coordination of the HTTP working group and if we can get consensus in those two groups about what HTTP through will do or will not do at least four priorities then you know we can take that to the our directors and talk about our Charter and see if we need to make a charter change or not and and so you know I think one of the "
  },
  {
    "startTime": "01:09:42",
    "text": "things that came up was if hdhd working group ships a setting that says we\u0027re not using priorities then htv3 can decide that that\u0027s the semantics that it is you know considering to be the the right semantics to to carry forward and assuming that you know someone at some point and we can talk about timing but not today we\u0027ll come up with an extension that works that the semantics can be mapped to HB 2 NH 2 to 3 and and be better than what we have now yeah there\u0027s very broad interest in that but yeah yeah I think we still have that exactly of them right but we\u0027re in this uncomfortable situation with this very little belief in the community that hdu priorities are working well and people don\u0027t want to persist that into the new protocol but we don\u0027t have consensus on the replacement yet Roberto Roberto at Lyon as one of the instigators of h2 priorities and I will say that I\u0027ve said this in HTTP as well I just want to say it is my belief that this scheme has failed h2 priorities in my opinion is one of the instigators has failed in its design intent there are many reasons for that but it\u0027s failed I think we should move on thank you so Martin Thompson from my perspective I definitely agree with Roberto I think there is general consensus that there is value in having the client signal priorities kazuo suggested that there\u0027s value in also having origin servers signal priorities - gateways which is a new concept and a group on I think but I haven\u0027t thought it or what all the way through so there\u0027s a lot of work to do here I would caution against overestimating our ability to resolve this issue in the time that we have left in this working group to get something shipped if we put this on the critical path I have doubts that we\u0027ll see anything in RFC form next year and that worries me so I just also want to remind everybody that anything the client says about priorities is a hint and it doesn\u0027t matter what you spec this is what we\u0027re seeing in iron from the patient\u0027s today I think that it\u0027s an interesting take to cut priorities out right now because one of two things is going to happen either it will be perfectly fine and we\u0027ll just move on right or we will experience some extreme shittiness in some cases and we will be incentive to fix it both of those are in actually interesting outcomes generally inga just "
  },
  {
    "startTime": "01:12:50",
    "text": "note that Robin Marks has sent a nice summary of the side meeting on issue 29 24 for those of you missing there\u0027s also linked to the notes is not setting from of the side meeting I am not sure exactly what this discussion is about if if we are discussing whether to remove priorities or not that seems to have been done at the side meeting and I expect it will happen in the HDP this meeting as well if you\u0027re talking about creating a new priority scheme I heard Martin Thompson say he quit I might as well but that\u0027s sort of the are we talking about creating a new priority seem in this working group or an HDTV now yeah I think what we\u0027re talking about is from this working groups perspective are their shipping HTTP 3 with an HTTP 2 compatible priority scheme or shipping it we\u0027re negotiating and talking to the community though the broader community passes working group about shipping HTTP 3 with no priority scheme in some fashion so I\u0027m actually very I\u0027m very much in support of the latter which is to have this discussion with the HTTP community and try to go to its shipping without any penalties knowing fully well that servers will still actually do some implementations will still do paralyzation just not based on the pair ah Wow and and to be clear we keep on saying priority scheme what we really mean is a client-to-server hinting scheme to help it make decisions about priorities and when I say ship h3 with no priority scheme there you know that need will be filled in some fashion just not by us give its Ignasi I want to agree with a lot of the previous points that what we currently have in the spec is very complicated and let\u0027s just say an ideal my personal preference would be to not have the hints in the course back because as we\u0027ve seen this could delay us for quite a while and I would love to see and I think there will be experimentation with its new hint schemes but all those can be implemented as extensions and we would probably be experimenting with those and deploying them in production as well it would be really nice to not block the shipping of the course back due to this experimentation we can all laugh later that\u0027s fine as a whole I what I wanted to say that I agree with Thompson he says that we shouldn\u0027t be blocking HTTP 3 due to lack of priorities and my reasoning is that our whole the server deployments have the experiment "
  },
  {
    "startTime": "01:15:50",
    "text": "experience of handling browsers that do not send priorities in the correct way so we know how to prioritize against them so it\u0027s not the end of world if we ship HTTP without priorities I think in classic fashion because it was understating the situation here it\u0027s not just that clients may or may not arguably send something that is correct it\u0027s that the server\u0027s ignore it right so the purpose of putting any of this stuff into a spec is for Interop and given that these are hints they were always optional to the inlet to be clear they were always optional right we never had a must on on this except that you have to receive it and discard it right so at worst if we do nothing and we keep H two priorities in the spec we can receive in discard I think that that is suboptimal because it\u0027s okay lights I believe that it is better to to say hey it was hints we got it wrong let\u0027s move forward but either outcome probably shouldn\u0027t block our are deciding to deliver h3 because these are hints and we can acknowledge we got them wrong because Interop is terrible right and to what Kazuo have said I mean one of the negative outcomes here that is a concern of the back of my mind is that we could have you know a lot of different party schemes emerge that you know muddy the waters even more but in some ways that\u0027s already happened we have such drastically different uses of the existing party scheme it\u0027s it\u0027s not a great situation for servers in any way so Lucas modified fire um I generally agree with Roberta\u0027s points but I\u0027d want to disagree on one aspect which relates to placeholders it\u0027s hard to ignore that it\u0027s hard to create the hint when we\u0027re talking about this quantity of placeholders where you might need a certain value for that quantity to create the prioritization structure that you want for your user agent and the server doesn\u0027t give that to you and that said negotiate or value and quite a wide scale and so you end up adding complexity into the user agents that now have to do prioritization schemes in H 2 and H 3 and maybe diverge in the H 3 space and I think that\u0027s a problem to the Interop we are now out of our time box so I think we\u0027re just sorry Alan I think what we probably want to do at this point is do a hum and I think the options for that hum are to keep H 2 priorities in H 3 or H 2 compatible programs or to negotiate the removal with the greater community or we don\u0027t know yes those good options "
  },
  {
    "startTime": "01:18:50",
    "text": "okay if you believe that we should keep H two priorities in h3 or h2 compatible priorities please hum now if you believe that sorry I so we have Dmitry suggesting that he wants to keep H two priorities in that\u0027s the only person I see in there so he hunt for that thank you yeah the parties are keep H two compatible priorities remove them from h3 or we don\u0027t know yet so if you would use its we\u0027ve done the first one if you believe we should negotiate with a greater community to remove h2 compatible priorities from htv3 and effectively ship it with no hints from the client to the server as to priority please hum now is it a question of models you see no it is you slipped a little bit into be there that hadn\u0027t been part of the description of the home prior to me what did I what did I slip in so you initially described the second option as not making h2 priority as part of h3 and negotiating with the community the implication of how that would happen and then when you said it the second time you said how that would happen would be not shipping the priority mechanism in h3 those are different things yeah and I think what Patrick is implying there is that if we do find a priority scheme we that we all agree on and the community is behind we can put it in this bag oh of course yes well it again we\u0027re not binding future action here we know we don\u0027t know if that\u0027s gonna happen arguing that the definition of what negotiation has to be multiple parties including your other working group as well like HTTP it\u0027s going to be very interested in what this may look like even if we feel as a quick working group that no one\u0027s going to implement the h2 thing I think that negotiation could have come up a bunch of different outcomes if the HTTP working group comes back and says you have to ship h3 with some priority scheme but we don\u0027t care what it is that\u0027s or or use this one well then we\u0027re gonna have to have that discussion Wow but yeah and I\u0027m fine with that you just the last time you described what option B was you actually removed that as a possibility that was not the intent so I\u0027ll rerun that hum I\u0027m a little weary of trying to restate it because I\u0027ll probably mess it up again but if you do not want to preserve h2 compatible priorities in HTTP 3 please hub now and if you think we don\u0027t have enough information yet to make this decision please up now ok so that was pretty strong so we had 103 in Java that\u0027s ok 1 for 3 ok I think the next "
  },
  {
    "startTime": "01:21:50",
    "text": "step then is to take this discussion tomorrow to the HTTP working group and see what that community feels hopefully it will along with what you hear here thank you so next up is the recovery issues I to correct that last one Robin changed his mind to two after that one okay I think implies we don\u0027t know yet is the underlying message there okay sure 27 89 before I look it up to anybody feels like the only here oh where are the blue sheets right now who has the blue sheets Kingdom ah could you please send them towards the middle please the middle section thank you so what Martin Thompson whispers um if you want to summarize for us what do you have to state with it it\u0027s actually a gory issue originally yeah I\u0027m not sure that I understood what Cory suggests you can you bring it up there yes I quoted or email some discussion on this one so there was something about a longer so you\u0027ve got a an RTT estimate for the current path and there was a suggestion that you might be able to use that as the basis for the initial RTT on a new path of course behind you to record your one time Tory you want Frankie and I read from that that maybe multiplying that out or increasing that value somewhat to be a little conservative would be a good idea but there\u0027s been a lot of discussion on this aura can you summarize I tried to write down something which I thought was what TCP does and then the the basic thing here is to try and avoid lots and lots of quick flows all starting at the same time then all retransmitting at the same time etc creating some congestion collapse so what\u0027s the way forward but better text if the principle here is to do what TCP would do in this environment then I think the text needs to be improved and to show that back off more clearly and what do the authors of the document think I think sorry we failed to we actually talk to the person in for quite a while with the quarry on Saturday and we\u0027ve helped to nurse this issue because I think Martin I think some of the text has improved "
  },
  {
    "startTime": "01:24:52",
    "text": "since Corey originally wrote this and unclear so I think I think we basically it\u0027s probably I I don\u0027t know if this is an editorial review or not we\u0027re gonna have a PR yet but I think we can resolve this money like John and I agree you\u0027re good you\u0027re good hard to hear when you speaking to the side of the microphone but I think you said you want a PR do you want gory to prepare one or would I think John and I are on that for preparing one of the major document all right so we marked us as you want to do the theater ticket editing all right so editors have it to token to the payer APR and we got more comments though in the line there or not gore Martin\u0027s ear is not the microphone so for what it\u0027s worth we already if we talk about using the pod challenge and path response frames that the seed would be basically equivalent to an initial are TTC and we use two times the initial RTD for the initial time out anyways so it\u0027s actually even more than the 1.5 that let me suggesting and the 1.5 thing was a little bit complicated anyway I think the intention here is to do the right thing so I don\u0027t have a a protocol question but I just think we should all work together on the text and I don\u0027t think don\u0027t working group will be surprised at the outcome at all okay so this can be done quickly it\u0027s what I\u0027m hearing yes and another implementation student and it\u0027s only a design issue because it changes some specification text but it\u0027s basically editorial because yeah we are just allowing it needs to be gutted Thank You Janice a up there next one is yours 26:30 define under utilization of Seawind I thought there was text that had the proof that are discussed in London we\u0027d like being robbed this gory who did see the movie this is complicated and it\u0027s complicated to get the text the intent again was easy and I don\u0027t think we got the new text finish did we we have Praveen in the line remotely they disappear for this I think right yeah there\u0027s been a PR for it for awhile we just kind of going keep going back and forth on it it\u0027s it\u0027s rather difficult to get right um I need someone to I guess we need more people to review it but yeah pretty yeah so I\u0027m saying this is not working Praveen no give it a moment that Mike we\u0027ll see each other please Praveen right now yes what the under utilization of semen means I think capping this even seems to be the right idea so we actually specified possible algorithm standard thread so captain the see when growth might be of "
  },
  {
    "startTime": "01:27:53",
    "text": "medication here Praveen you\u0027re very very hard to hear can you stick that into the ticket instead of the comment please that the audio was really poor sure thank you at least it was poor up here I can restate what I mean oh yeah please and he can correct me he said that we can we have algorithms for capping the Seawind and that that\u0027s something that we ought to be able to do instead of having to specify what underutilized means I think that\u0027s that\u0027s probably gonna be harder to do but we might disagree on that the the whole the whole reason we want to specify what under utilizing this even means is to avoid bursting when you have your bytes in flight is substantially below the condition window and so we\u0027ve had discussions around that gory Ian and I have had a discussion around that and we I think we have some way to go around that I actually didn\u0027t particular that\u0027s the other issue the underutilization one is actually about not growing the congestion window when you are not using the dish was a separate issue about not bursting too much into the network they\u0027re both I attempted to address both of them in one PR because they saw what really I think as much as anything on this stuff we just need like people who have strong opinions to either write text or take a closer look at the existing PR and try to make proactive suggestions about trying to fix it because I think we\u0027re going in the right general direction I think there\u0027s a big design issue here but we need to like eventually all of these are somewhat related right and I wonder if it makes sense to have like a recovery design team that would work through them in in conjunction rather than having like three different their discussions programs sorry just I don\u0027t think you need a design team I need I think we need people to engage on the recovery document we can propose as Ian said that is a PR right now that basically does talk about what effectively underutilization means and that\u0027s basically very exact right as long as you\u0027re my template is less than the condition window it\u0027s something good okay so the proposal is there if people want to suggest other things and we need you know to say yes or no and or propose edit right and engage on those fears gory Fairhurst here I mean look let\u0027s be honest John and I did not apply enough cycles on this in the last period and it\u0027s now important so we will apply cycles now and we\u0027d love other people to join us thank you which brings us to 25:56 I\u0027m mark here we have coasters at some point maybe I should just k persistent connection congestion threshold be two or three from open by Praveen in March so a bunch of discussion in March and then April and "
  },
  {
    "startTime": "01:30:53",
    "text": "then mark made and this is best to bring this up at the full ITF meaning what you\u0027re doing now okay can someone help me here does this is this something that can be decided with a coin flip before or is there something substantive that we need to understand I think the questions decisions also to what TCP does but I don\u0027t think that\u0027s a principle that we like if if TCP has some principles we can reuse to help us make this decision and the antastic but what\u0027s the principle the current value was chosen because previously in spec you could fire the Telus probe twice before firing an RTO and declaring all bytes in quite lost and basically declaring persistent congestion and so we picked the constant that was most similar to that model which is like you get two timeouts and then the third one you know do that and that\u0027s how the current number was chosen I mean these are it\u0027s a constant it\u0027s it\u0027s a little bit magic but it basically allows you to lose packets twice alpacas twice before you declare persistent congestion just for me yeah I mean we can make it one or the other and let implementations choose that\u0027s what we did actually up above in the PTO text we said you can send one or two full sized MSS opposed to just prescribing only one this is Yossi young one question do you have a some data point of this one about which what this being a better value than I don\u0027t have I can\u0027t provide any data on this particular number I\u0027ve never tried like yeah yeah I\u0027d say we should be based on beta be it I think so I\u0027m trying to page this back in then is that the problem if I remember correctly is the discussion of whether we should model two PL peas and an RTO or one TLP and an idea is that correct right so the spec arbitrarily for TCP says 1 TLP it doesn\u0027t really say you can\u0027t do multiple TPMS the spec says one or two and we say here - TLPs and then an RTO that\u0027s effectively what we modeled because in there is no separation between tailors groups and RTOS there\u0027s only a PTO if we use the same period of time that it would take to fire two PL pees followed by an RTO and TCP as the model for how long we should wait before declaring what we call persistent congestion I think that\u0027s a reasonable model to videos seems better than one simply "
  },
  {
    "startTime": "01:33:54",
    "text": "because you are it\u0027s one packet on a TLP is too sensitive we believe but it\u0027s it\u0027s it\u0027s I think it\u0027s perfectly reasonable to do that that\u0027s why the numbers where it is there what one proposal will be to close with no action because we have now very soon hopefully thanks to the simulator that you guys that the ability to actually validate some of those things and if somebody finds an issue in validation we can reopen but for reasonable month on something I think there are two valid paths here one is to say two is fine we\u0027ll get more data book it later the other one is to say two or three is is acceptable and implement implementations can decide on their own and we\u0027ll get more data and refine that as we as we go on I don\u0027t have a preference on either one of those I\u0027m a little cautious about being confident that we can get the information we need to make a solid firm decision on this one I think that\u0027s ever the case that we\u0027ll have another information to be really confident about these sorts of constants so I would I would actually lean towards saying two or three and recognize that and maybe even explicitly knowledge that we don\u0027t we don\u0027t know what the right answer is here which one is more conservative two or three what which one is more conservative to I think we\u0027ll get get you a lower congestion window over time so so in the absence of data that we should do three let\u0027s go to that will be one proposal but I mean in the absence of video you can also choose three because it\u0027s conservative enough now I chose is you know it honestly it doesn\u0027t matter to me what I think may be more useful here is the illustration of why or what the what the what the value means what happens if you change the value to three what happens if they change the value to 2 and people are going to set the constants the way they want anyways so we might as well recognize that and simply describe the effects of doing this I don\u0027t mind allowing two or three we can and I\u0027m not so strongly opposed to doing it I just sort of thinking of an implementer that just wants to implement this and not like work through whether you should use two or three and why you know I\u0027m gonna make easy two people do the right thing and the more knobs you give them and the more like thinking you\u0027re required in because you know I would put three because it\u0027s bigger so anyway but I think the sort of Tory take us home and I will encounter next can I try on this and first of all very first again the this is actually new ground in the HF surprising they have lots of things about congestion controller all over the "
  },
  {
    "startTime": "01:36:54",
    "text": "place in RFC\u0027s but we don\u0027t really have some sort of this is how the principles work I\u0027m trying to cook for something in TCP M on that and you might want to look it up and we might want to see we can take it forward in the absence of that how about should do through to but must not do more than three or something that really really sets a hardly three more than three is probably dangerous T is definitely saved you choose Praveen inter-process he agrees to close with no action and revisit if there\u0027s data suggesting otherwise when I see a thumbs up from Jenna let\u0027s do that okay we\u0027re doing that can you updated and we\u0027re going to the next one which is 255 which is related to what we talked about earlier open by Praveen define idle period for congestion control this is from March and we talked water in London incepted to take it to the idea I think this is the other yeah this is also the define under utilization and accession we get here I don\u0027t know I mean I don\u0027t know what we\u0027re gonna resolve at the moment you know I think this is praveen I quarry in China maybe need to talk I don\u0027t know so a couple of more points on this first I think Ian\u0027s exactly right that there is something proposed in 2675 people should take a look and comment and see if that\u0027s adequate and say something if it\u0027s not second on the particular or the general issue of idle period between on defining idle period water reviewing an idle period we specifically chose not to walk into that territory because Gauri knows how painful that is and we would like to we deferred the discussion to his RFC which is the CWA the new cwv RFC which i think is adequate we don\u0027t need to spend time in this document I believe on making sure that we can write a people can people are free to write follow-on documents but at the moment you need effort to move that one so you\u0027re saying we have a PR people should look at it and see if it addresses the issue and if it does then we\u0027re done yeah and also recognize that the text already defers to the new CW government for for you know idle periods okay so in Montreal the rigidity are and the last one is 25:34 PCN text disables easy and too aggressively I\u0027m working Duke yeah this we talked "
  },
  {
    "startTime": "01:39:54",
    "text": "about yesterday but there\u0027s a PR needs some updates based on comments I think this is just Johnny getting time to do the updates yeah this week we discussed yesterday with the transport issues this is fine okay I guess we\u0027ll hopefully get this soonish yeah yeah we\u0027re gonna get this this week I\u0027m working I don\u0027t know but we\u0027ll get an update on this and that is engagement on the spear but it\u0027s on me I have not been able to updated updated pretty sure Magnus is playing us fear fear the first document with no issues of them just saying slicing onion pretty sure Magnus is taking you out for drinks if you\u0027re the first document with no open issues out of quick that\u0027s promising I\u0027m sharing other people so that takes us through the recovery issues before we move on order to ask what I\u0027ve been asking a lot recently Ian especially and Jonah how do you feel about moving there\u0027s dr. evil eight states process um just one one issue that\u0027s that it does exist on the list but has not been tied gears because gory filed it what is was it this morning or last fight it\u0027s something like that it\u0027s a recovery she go to the top of the listeners top moves rapidly here is friend 2923 the top of the list rules by five every one our winner GT management yes so we we this is this is just a question we have a mineral tea tea and we also have the expectation that Creek floors last for a long time in some cases because we might use them over hours and min RTT records the smallest RTT we saw on the path you\u0027re going to change connection to part in the document but that is men forever and if your path changes then the men are TT changes to lift like so it may not eat e is useful then maybe we should periodically reset the not eating question what do we think it\u0027s a good to the point so let that has a similar concept of minerality and I think we do something there where we don\u0027t let it you know be unbounded or or we refresh it over a lifetime of connection and something similar makes sense a to I agree is the let everybody know what that that\u0027s doing can we just copy that or Martin I\u0027m Jana Sangh off-mike that not sure that that does anything Martin Thompson I would suggest something less than a completely naive implementation where you just sort of cut and start over every ten minutes I\u0027d suggest this is probably something you want to do in terms of number of samples rather than rather than time and you might want to give the replacement "
  },
  {
    "startTime": "01:42:54",
    "text": "min RTT a little bit of soak time before you threw it in over the top of the existing one pravin on the end driver says that possible expiration events from an RTG might be persistent connection as adverse changes and app idle not have a not ever fixed scheme but make beta give an event based scheme to invalidate minority T my proposal was the very simplest which I think would be helpful to do the same as path MTU discovery every ten minutes just read the RTG and work from there I think all these other proposals are better and more helpful and slightly more caught so somebody has to make a call it partly depends on what you\u0027re going to use min RT t for it\u0027s used as a rejection think rejection samples at the moment so it\u0027s not that critical when you get it right it\u0027s important that you don\u0027t get it wildly wrong for long periods of time yeah yeah let that does something more complicated because it depends more on it so I don\u0027t think it\u0027s super useful but +12 it should be reset on idle and maybe every 10 minutes or something it\u0027s really high okay does anybody want to take a token for writing something up so Revere to them while what I\u0027m saying maybe editorial but it\u0027s super nice when the thing actually is what it says if it\u0027s called Minar TT I will find it confusing that\u0027s why I say this is potentially editorial we\u0027re called low art you tear up yeah sure so long as I don\u0027t have to have a variable in my code that says actual in our GT some we aren\u0027t sure andrew Grega I recall somewhere in the Linux kernel this is a very simple algorithm for a sliding window to maximum I think maybe we might want to a draw adopt the inverse of that and so yes it becomes a windowed in an RTT it\u0027s just the window being samples or anything else but you know that seems like a reasonable thing so Martin Thompson if it occurs to me that there are many possible ways you could paint this particular bike shed and it really is a bike shed I think that we want to make some suggestions and not do anything more concrete than that the suggestion for instance the idea that you have you reset this on idle won\u0027t work for a number of very common usage patterns because their definition of idle is such that we actually get that very frequently we often have periods where there\u0027s nothing descended that\u0027s that\u0027s something yes I think the congestion control meeting of idle isn\u0027t doesn\u0027t it doesn\u0027t the event doesn\u0027t slide immediately when you run out of theaters and it\u0027s usually anyways but I agree that so maybe the way forward here is so I think we tree arch "
  },
  {
    "startTime": "01:45:54",
    "text": "this as the design item and you have a very very simple thing that we say you know you you can do this but you can also do other things but the point is to not let it basically be unchecked for a long time yeah I think a recommendation is and if somebody wants to put a PR in and then you feel what the microphone can have a quick discussion about that\u0027s visible we can probably third is pretty quickly yeah let\u0027s move forward attack so this is like I\u0027m a should do something about this and but the recommendation of particular other than that you could use if you want you correct I\u0027m Jenna Inga so I agree with with the idea that we should build something fairly simple but we should build something fairly simple it\u0027s important to bear in mind that this is the consequences of getting the minority wrong here so this is not a congestion control issue it\u0027s a loss recovery issue the minority in quick is used primarily to reject samples that might be too small then the measured minority so that\u0027s in in the worst case you end up having some samples that are that that go in you might have some I think you might have some spurious retransmissions but that\u0027s the worst that would happen yeah so so bear in mind that this is not something you need a complicated machinery for if you already have complicated machinery that you use for your condition controller feel absolutely free to use that for this but we should have some basic protection against an old minority being then in the case of the park change okay so I started ask before Jonny and any thoughts about saying this list H process I think the document itself is getting in very close to the to the right shape it\u0027s still like the late stage process to be a little faster at the pace the document is going I don\u0027t think the late stage party was going to slow it down yeah look that\u0027s that\u0027s completely fair I don\u0027t think that the velocity of change here is that dramatic the which also leads to the other question right we\u0027ve not gotten a ton of feedback regarding feedback from a couple of people right from the from the time of the document but not everybody so I don\u0027t know where people are on implementing loss recovery an agreement in condition control this is part of the reason that Martin and I worked on building the simulator same framework so that we could actually test what people\u0027s about implementations are doing my hope is people are people are planning to get there soon even if they haven\u0027t gotten that I don\u0027t know how you want to use that information in informing this process though we don\u0027t need to go too deeply into this I just "
  },
  {
    "startTime": "01:48:54",
    "text": "wanted to get a sense of whether you thought we were ready or not it sounds like you want a bit more time that\u0027s fine my impression from from talking to the implementers that some implementers are actually just trying to quick stack into whatever condition control framework they have for other transports others implement you know cubic in some way some are actually trying to implement the recovery draft and then I don\u0027t I don\u0027t know if there\u0027s still any out there that just have a a quick hack that suppose it mostly flow control based I think those are like upgrading to proper congestion control now or have done that but those are sort of the three approaches that I see implementations following can is it possible for me asking for show of hands of how many people have read the recovery document sure thank you I appreciate maybe they just read and just don\u0027t care but but I was gonna say that condition control yes you\u0027re right people will use other controllers because it\u0027s much harder to implement those ones but loss recovery should be this prom is going to have to be granion so we would definitely for the people who read and for the people who have implemented we\u0027d definitely like to hear some feedback on whether you think clarifications required or even if it did if it all went well that would be very useful feedback to have very briefly Oh Erica near Apple um to what large said we\u0027ve actually done both we\u0027ve got cubic and all that but we also just did a vanilla exactly what\u0027s in recovery draft and I think the last time we asked this question I stood up and said hey I think we need more time before we do the late stage process cause nobody\u0027s really poked at it yet and I think now we\u0027re seeing that most people have poked it we\u0027ve done a nice rebbe of kind of how do we word it what\u0027s confusing what makes sense what just flat-out doesn\u0027t work and we\u0027re kind of into the place where we still have a bunch of testing we need to do but changes that would that I think at least on my end I\u0027d be saying hey we really need to change this would have a bunch of like test results and data behind them which kind of fits okay in the wastage process - it sounds like we\u0027re getting there but not quite there yet okay so we have nine minutes left we have the HTTP issues up I don\u0027t think we\u0027d have time to go through them so Mike Bishop worry there you are anything in particular you\u0027d like some information or help from the working group on in this time 26:32 okay [Music] so I was looking through the issues trying to find a couple but hopefully we could make good progress on a couple minutes at the interim we said that we were going to reread 7540 and ask "
  },
  {
    "startTime": "01:51:56",
    "text": "questions of HP mailing list with regard to this issue that has happened and so we were to see if anyone\u0027s opinion has changed should to recap this issue it\u0027s basically the observation that go away in h2 refers to screens and tells which makes things stop in both directions it makes push stop as well where it\u0027s intended to refer to requests and in fact does refer to requests streams of h3 but that\u0027s a difference from h2 it doesn\u0027t do anything about push other than let the transaction finish a sparkly response so there are two schools of thought here we just need to pick one in the book any thoughts about that allons and now I\u0027ll just repeat that I I filed this issue and I still think it should be and similar to h2 anyone want to argue the converse yeah yeah I\u0027m going to argue the converse this all depends on your on your conception of push and we have different Alan and I have different views on this one because we have different understandings of what push really means and I think this is this is the fundamental disagreement then I say push it being related to the requests and so you shut down the requests you ultimately need to allow the pushes to continue does anyone else in the room care about the outcome Alan and Martin what are you doing for lunch so far I have two different lunches I understand yeah well at some point if he too could collaborate a little bit maybe try and find a way for that debate there I was gonna said that I kind of hear and I tend to give him where we\u0027re at favor Martin\u0027s perspective okay it so Mike to be clear is this issue a blocker for you it is one of the things keeping us from hitting zvv a lot of the remaining open issues are limited to priority and if we decide that priority is coming out I can close over half the issues yeah oh commit to talking to Alan about this one okay this this is something that is perfectly suited to the late stage process Charlie so don\u0027t let this be I mean I would take a home I just don\u0027t think that we have enough information to "
  },
  {
    "startTime": "01:54:56",
    "text": "make an informed one so no and we can we can develop presentation material if people feel that they need to understand this a little better but so can I think that people who understand the problem and already have the information that they need I think we just okay disagree on what the right what the right model is to enable alright I\u0027m just just interrupt Mike are there any other issues that you would like to discuss right now I don\u0027t know that there are anywhere two or three minutes here is going to be more productive than the Midwest okay thank you Roberto did you have a thought that you wanted to convey okay conveyed in three minutes it shouldn\u0027t take that long unless you want me to take the full three minutes but anyway I think that what we might be seeing here is a bit of the tussle between whether or not go away makes the most sense of the h3 layer or the layer I wouldn\u0027t say transport but earlier than you I don\u0027t believe we\u0027re gonna resolve that in v1 I don\u0027t know if that changes anyone\u0027s opinions so there you go I\u0027m I\u0027m firmly against moving go away any further down for the reasons that have already been discussed at length no no period okay sounds like we need to take a discussion of the list and have some hawai discussions with that I think we\u0027re just about done as we mentioned we\u0027re going to try to announce an interim as soon as possible again we\u0027re thinking probably October early October to mid October I think is their current thinking but we\u0027ll we\u0027ll get that information to you as soon as we possibly can from North America and and we\u0027re looking at North America now it would be at this point where we\u0027re trying really hard for North America if for some reason we really can\u0027t find a location we might have to fall back somewhere else but that\u0027s our intent right now so thanks for that and we\u0027ll do dinner up again there also is another doodle poll for another virtual interrupt between now and October which would probably be I guess I guess when whenever in the next draft revisions drop would be a natural time to have it since people are still not fully on board with - 22 where\u0027s where\u0027s the other blue sheet where we have a missing blue sheet anyone have the blue sheets okay see you next time [Music] "
  }
]