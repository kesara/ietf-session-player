[
  {
    "startTime": "00:00:04",
    "text": "okay so uh no uh hello can you all hear me um so we're going to start"
  },
  {
    "startTime": "00:02:03",
    "text": "uh thank you for making the time to attend our ace working group session so as a gentle reminder here's the note well here are the different meeting tips for those who are all removed as well okay here's the agenda for today first is going to be virtual status second item on the agenda is uh draft key group com mp com osco and third is the pub sub profile including revoked token notification so um i'll hand over to danielle yeah so let's check the status where we are so first of all we would like to thank ben and after the status uh i will give you um the i'll give him the mic so he can think of about what he's gonna going to say while i'm presenting the status he won't be upset so i think we would like to thank you for um all the follow-up and the work you did um and um let's see where we are now so um we have a bunch of rfcs in the queue so we have the recently the iaf we have the co-op east gtls authorized oauth sperms oscorp profile um so it's unclear to me when they're going to be published but"
  },
  {
    "startTime": "00:04:01",
    "text": "i hope the internet is not going to collapse because everyone is waiting for those to be published we have a few other documents that are 80 revision so i'm thinking of the the cmpv2 um the mqtt and the keygroup come so i i don't exactly know um how this is going to be handled um um are you gonna i mean is it do you think ben you you will be able to send them to publication or um will be will they be handled by um paul or rahman that might be some other question we we have and we do have a some uh draft that are uh in various stages of the working group last call so we had a problem with the co-app eep that has not been sent to the isg but that's going to be fixed tomorrow we just lately realized that when we sent it we had an issue with the shepherd that prevent it to be sent but um it's it's um it's really fixable it's just that we didn't we realized that too late um there is the extended dtls authorized so it's also waiting for shepard if anyone is willing to volunteer um i mean he's more one than welcome and we have the key group como score which is um receiving some comments uh so it's a long working group let's go process but maybe um marco is going to to say a few words on that um now where the the working group is heading is we have three uh document um the pub sub profile um it's unclear if sigdam is um"
  },
  {
    "startTime": "00:06:01",
    "text": "online and maybe she wants to add something but um um i mean there are still some some point to to be addressed in that document um and we have two drafts that are um new or not so new in that working group so and these are going to be presented at this time my question for i mean it's more than one co-author so um is that do we think that we can ship those drafts uh to the isg by july and um that's that's all so maybe i can give the mic to ben and if anyone has anything to oh i see francesca in the line please go ahead hi uh not just about the agenda we didn't do agenda bashing but as one of the co-authors of the pub sub profile i don't think it should be on the agenda um sig dem is not here she's not uh in the meeting and there was no update for this meeting so yeah okay so okay yeah um the current agenda is on the edge and uh i've removed that one no problem okay great um yeah so it's been a fun time working through all of this stuff past few years um that was a good reminder about the status of some of the outstanding documents i think the uh cmpv2 co-op transport is probably not going to get approved in the next day"
  },
  {
    "startTime": "00:08:01",
    "text": "but i will definitely take a look at the co-op east and i think the mqtt profile i'm going to try real hard to get sent to the rfc editor before things hand off i know that syndema posted an update and i've been asking the remaining two discuss holders to take a look and hopefully clear and then i'll review the death myself before sending it off um but that's probably the the main [Music] changes from the current state that i expect before my term fully expires we do have the sort of core for documents and the rfc editor as well but i think there's still a couple of final edits to make things consistent across the cluster of documents that we want to do so we're going to try and not rush this out with my sense thanks okay thank you um one thing i'd like also to um to confirm is that i see guran editing take taking notes but i'm just wondering if anyone can help him for the minutes anyone can help sorry yeah i will do it paul vargas okay thanks paul okay good so let's move on to the agenda key group come"
  },
  {
    "startTime": "00:10:01",
    "text": "maybe just a question paul are you to be our 80 or for ace or is it not this discussed yes i will be okay right uh i guess one question while i'm still up uh are you intending to be sharing the slides right now i'm not seeing them come through i'm not sure if they're showing up in the room or not so i think we're waiting for marco hi daniel um so ask your calm i think shouldn't be in the agenda actually because it's under ad review right now i have no updates on that since last time though and yeah it's the group come os cor i think on the agenda right that's in the agenda uh so i think you should share the slides through me tech okay right i'm on site by the way so i can see you so let me check pre-load slides share please okay so you're doing it logan good great uh thank you uh yes this is a shared update for the latest revision of giger komol score uh next slide please yeah most of the updates at this round were editorial or editorial plus actually as triggered by changes done in the group score document in core and just to mention the main ones some functionalities of the group manager were declared as optional so this is now also reflected here and it was agreed to have a clear-cut distinction between the the concepts of"
  },
  {
    "startTime": "00:12:02",
    "text": "public key and authentication credential that is also reflected here together with renaming some related parameters and rephrasing text around them and about this i think i took care of all the parameters actually defined in this document but this document is also inheriting some parameters about these aspects from asking group com that i prefer not to touch since it is under ad and authentication review anything that started in sk group comment was inherited here is untouched for now and my plan is for when addressing the ad review for ace gigercom taking care of those in that document and in this one all right and next time just a clarification um do do you end it's unclear to me if you intend to change the key group com document there will be changes to do about this about parameter names is nothing functional it's editorial plus i'd like to think but yeah it's a matter of consistency with well the grupo score document in core to start with and i plan to do that as part of the 80 review processing when it comes okay next slide please uh right it was also an opportunity to do some some fix and update in the uh ayana registrations uh about the integer register to declare explicit to the format of scope used here and also following the the last call reviews and other reviews for the aif document now approved i also uh make related registrations uh more consistent and i noticed once this document was"
  },
  {
    "startTime": "00:14:01",
    "text": "already submitted that some text about af again has to be improved here to be aligned it was agreed after some last call comments on um aif as well so what you see at the end of this slide is actually what's left to do is related to af that i plan to take at the next revision next slide please yes so that was the status for this revision which is aligned by the way functionally which is the most important thing to the group of score document um in core uh the document is formally under working group plus call and and we got a review from from yoran uh thank you very much for that as far as understood this uh the first part of the review actually uh which is mostly about um trying to enforce uh a new structure of the content in the document and and based on this uh new structure when enforced understand more comments on the actual content will come back so my plan is of course to start working on this restructuring first part as soon as possible for convenience i suppose it's just better to submit any version and then the work can continue there on applying actual comments and right i mentioned already the the thinking that will be required with ace giggle calm about those pending parameters uh when the ad review comes from sql comma and i also got some comments from francesca as a cd about syncing the request for publications from document in ace and core around this topic so it'd be good and convenient for the isg to receive together three documents this one we are discussing here and two documents in core uh mentioned here one of which is approaching working group let's call the other one as finished it and should soon go to shepherd right up"
  },
  {
    "startTime": "00:16:02",
    "text": "and yeah overall changes can still come up and needed to be done i hope no not fundamental as this cluster of document moves forward i think that's just unavoidable and we have to live with that but it's fine yeah and that would be it from my side okay good any questions now and so next next presentation that should be gm admin right uh thank you and we are in version five with this one it was a pretty big update i would say uh next slide please uh so to recap the goal of this document is to define a restful interface at the oscar group manager but intended for ace clients acting as administrators so they are supposed to create configure delete all score groups at that group manager next slide please it's even clearer how admin resources are organized at the group manager here so you're supposed to have a single group collection resource as a main entry point for an administrator and operations that resource uh allows the administrator to retrieve the list of existing groups uh possibly verifying grained or partially using fetch rather than get or creating a new group through a post request and the result of"
  },
  {
    "startTime": "00:18:00",
    "text": "that is practically creating a child resource uh or group configuration resource which is storing uh the actual parameters of different kind composing uh the current configuration of the oscar group but then in turn the administrator can interact precisely with one of those group configuration resources for the sake of retrieving the current configuration of that group entirely or partially overrided entirely or or updated selectively or deleted meaning deleting the group next slide please so we made a couple of changes starting with was anyone talking no my impression uh some changes were very similar to those i mentioned for for the previous document about changing some parameter names and phrasing about distinguishing between public and authentication credential but again editorial plus we tried to simplify it a little bit um in the processing of creating a new group from the administrator is it is still possible for the administrator when creating a new group to suggest a name to assign to that group to the group manager and the group manager still has the final word about the exact group name to assign to that group that has to be available first of all and and fine uh for whatever reason uh to the group manager so what we had before was that this the suggestion from the administrator was entirely optional but that complicates pretty much the design space uh for the design of the scope format that i'll introduce later on so we prefer to relax this little detail and it should still be fine we believe because there's still a lot of flexibility and it still leaves the final decision to the group manager which is um the most important thing um anyway"
  },
  {
    "startTime": "00:20:01",
    "text": "so it's uh relatively minor update but still just to be well understood okay uh next slide please but um just um just a question the name is actually only useful for the group manager uh sorry is it again used for the the group name it's just an identifier that that the administrator can can refer to later yeah it has not meaning no it's just a label uh okay so can you move to the next slide i think over there yeah right we were underspecifying how exactly the group manager informs the group member right after having updated the configuration of the group now we are more specific with that and we are trying to reuse as much as possible content format message format and song from keyground oscar which which is um pretty nice and and then we had in mind the possible addition that we we haven't added yet i really just prefer to confirm with the group first if there are any objection um as i mentioned before in recent changes in the core document we have made optional uh for the group manager to support among other things the recycling of group identifiers in the group so if the group manager is actually able to do that it would be convenient too to extend the lifetime of the forever in principle so it makes sense here i think uh to have the administrator creating the group explicitly choosing if this has to happen or not of course providing that the group manager is supporting this feature in the first place and this would be pretty cheap and easy to do it's just about adding one more parameter in the group creation request that the administrator can set to true or false and if it is true and the group"
  },
  {
    "startTime": "00:22:00",
    "text": "manager does support this feature this will actually happen so i i couldn't think of anything really better controversial here but before moving on adding this little thing just want it to be sure it's fine is there any objection her known so well i'll give it a try and that it's relatively simple and then it's probably even easier to review or text them in this okay next slide please right this is the bigger change instead that we have postponed for a long time and finally um we've made it and it started a long time ago because so far we were not specifying the exact format that scope should have in a talking request response uh and in the actual uh access token it started with all input from from jim schaden christianos uh jim shot on this side imagine a workflow where the administrator obtains the first token posts it uh and building on on the granted uh operations and can perform it actually creates two groups g1 g2 does something with those okay uh that token eventually expires and the admin the administrator requests for a new access token and posts it but that will practically result in establishing a new secure association and secure identity for that administrator and basically the group manager cannot recognize that administrator as exactly the previous one anymore and this can be a complication because we would like that administrator to continue doing some things in the groups it it created them itself before but at the same time without having to touch access policies at the authorization server anymore so this was just something nice to be able to achieve somehow building the scope in a convenient way"
  },
  {
    "startTime": "00:24:02",
    "text": "if you move to the next slide please then we also have the the input from christian that at some point of course noted uh you're really focusing on one single administrator doing potentially everything it'd be good to have beside that also a different class of administrators like able to do at least something on groups that they didn't create themselves but created by some other say main administrator so putting all this together and having further discussion also with the proponents and the coders uh we started to sketch possible format of scope we had placeholder text about that in the previous version of the draft and now we have a full uh first definition of this in this revision instead that i can show you in the in the next slides can you move to the next slide please thanks uh since we are going to use a aif of course we didn't have to start from scratch and we thought of evolving the af data model that we are using first of all in the keygroup common score document presented before if you remember there we also defined a scope based on aaf where scope is a set of scope entries and every entry specifies as a to id an exact group name and there the group names come again by the way and uh stephen the exact roles uh that the the client only in the token can have in that group so that's what happens in that document but we can do something kind of similar in our case for the administrator now next slide please yeah still using aaf we basically define the new af data model for administrators which has a fundamental difference a to id here is not an exact group name"
  },
  {
    "startTime": "00:26:00",
    "text": "it's rather a pattern of group names and t-perm is again an integer to be read as a bitmap encoding the permissions that an administrator has on any group uh whose name matches with that corresponding pattern uh of course a set of permissions this is not really like the rules of a member we thought of permissions that can be mapped to the operation that we have defined on on the interface for administrators so retrieving list of groups creating reading configuration updating configuration uh deleting the group and this should address uh both original input from from jim and christian uh james because he thinks in terms of um patterns of name not exact names anymore so it's friendly with an administrator asking for a new token following this direction of the first one and it also addresses christian points we think because basically uh and non-main administrator can just be granted a token with a more restrictive uh name pattern and with less permissions than the original uh main admin uh if you move to the next slide that really summarizes uh making a parallel with with the format used in keeger com oscar instead so again scope would be a collection of scope entries where each has a pair named pattern and integer encoding the granted permissions to an administrator for any group whose name matches that pattern first of all any overall comment on this direction use of aif so i maybe i have more more more than a comment it's uh just a question um i see that we're using the name of the group um as um"
  },
  {
    "startTime": "00:28:00",
    "text": "not only a property for a specific group but um uh it has some imperfect some implications um on access and uh um and things like that so i was wondering if um the group can have an id which is a random number uh for example and that the name is actually one property is associated to that id instead of um then um having i mean um i'm just wondering if that's something that would be feasible or not visible in in our case i i think it is visible and can boil down to an implementation detail on the group manager and how it generates names uh but this started already with keygroup score where names are used already so groups are identified by a text string name already included in tokens for group members but so this just builds on that thinking on the first step when the administrator creates the group uh you you may use a group manager uh yeah generate a random number if you want and express that as a text string and that's your name um sure that's really about yeah local preferences for the group manager and you can do that but it feels more friendly to have the name ultimately expressed as a text ring i think yeah no i mean oh ben is in the queue yeah please go ahead go ahead and finish your question daniel no so what i was suggesting is that when i say a random number it's a it's an id that uh has no meaning as opposed to a text string and then we attach to that i am [Music] as i'm saying random but i should say oh pack it's more opaque is more maybe something yeah like a um"
  },
  {
    "startTime": "00:30:00",
    "text": "yeah an opaque identity and then you assign to that identity a name that you can change it it's only one properties that was uh what i was suggesting so changing it would be a problem in fact something to be decided once and and for all and living with that group um all along uh it's not exactly uh opaque right now if you mean it doesn't have to be it doesn't have to to have any english meaning yeah you you can have random characters there but it's something that all the parties involved have to understand here for the sake of group discovery if you want to and and request yeah so i guess that's to me i was just gonna say that you know naming entities is one of the the classic challenging problems in computer science and uh it's obviously gonna be important for us to be able to use some of the structure of the names as we represent permissions and like the wild carding of the names to help us make our representation of the permissions more efficiently encodable but it seems like because we're going to be using the structure of the names in the access model we should be very clear when we first introduce the concept of the group names that the names do have an internal structure and try to be as clear as we can about the form of that structure so that it's sort of intrinsic into the concept of the group name and we're not trying to retrofit the structure on just in order to apply the permissions to it it should really be built in from the start thanks"
  },
  {
    "startTime": "00:32:00",
    "text": "yeah and of course we we really want to hook this into aaf where uh well qid supposed to be a text string so everything fit naturally already when working on key group of moscow um i would say where that started so in this respect about the exact group name thing we are not adding anything new here here the shift is thinking more in terms of patterns of names because we have a different problem but okay uh thanks for the feedback uh yeah if you can move to the next slide please yeah after having defined all this of course we realized and then there are some practical actions to take some of the actors involved uh so of course the the resource server is to store that access token and be sure when receiving a request to one of those admin resources that there is an access token first of all and the scope in it has at least one scope entry granting that exact uh permission on that for for that group name if matching with at least one pattern uh details can change depending on the exact request on the exact resource so we had it for each resource handler an exact list of steps to take to perform this access control checks to our surprise we found that it's a bit more complicated to describe well on the authorization server actually when the client requests an access token so it requests for a certain scope and at a high level the authorization server has to compare that scope against what can be granted to that client uh based on the uh pre-installed um access policies uh to be better safe than sorry i think we we got a bit carried away and find a a judgment procedure at the authorization server uh pretty much in detail probably too much uh so as a next step for for the next revision i think you'd be better in"
  },
  {
    "startTime": "00:34:02",
    "text": "such a detailed procedure as a text for an appendix as an example of how the authorization server can especially perform those checks and take those decisions while we can reduce a lot the content in that section of the document body just saying that the authorization server has to take a decision comparing the request against the access policies as usual any particular objection in making this well all in all editorial improvement improvement but i think significant here known so i'll give it a try next slide please and we're getting to the end i believe uh yeah this is uh something to think through i think it's a possible uh nice optimization there may be cases where the same ace client uh wants to be is supposed to be both administrator for some groups and members of some other groups at the same group manager but still then we would really like to have only one access token involved with one pop key and so on so italy would be good to have a single access token with scope containing a mix of scope entries for members and of scope entries for administrators and we think this is really easy to achieve actually uh thinking of the way we have especially encoded the the permission part the perma so if you remember in the af data model from ac group como score for group members in every scope entry t-perm has the least significant bit reserved and always set to zero well it's exactly the opposite in the scope entries for administrators where the last bit of t-perm is always set to one meaning that still with the name pattern playing a big role uh every administrator has"
  },
  {
    "startTime": "00:36:00",
    "text": "basically the permission to retrieve the list of existing um groups so if you build this bag or scope entries of different types within the same scope you are able to trivially distinguish those just by looking at at the last bit of tiper so we were thinking to introduce this possibility of course which is just a plus uh unless there are particular objections or controversies anyone sees here known either what is the actually the the the advantage of of because it seems to me that we're trying to con to mix some rules uh different rules and i'm just wondering if it's if it's going to help or uh introduce some uh it helps because you can stick to one access token only and and typically a resource server is supposed to keep only one access token per pop key per client and you'd be able to to comply with this requirement here keeping one access token for the same ace client i don't see any particular problem because the the different scope entries are really distinct and distinguishable and all in all the group name or uh the pattern a matters and you know which type every scope entry is exactly because of that bit so i i don't see any source of confusion in trying to process this uh this collection of different types of scope entries and it's only these two types of course but the advantage is that you can stick to one access token only so if there are no objections i think to add this part too and see where it goes"
  },
  {
    "startTime": "00:38:00",
    "text": "so basically as a user or anything i'm going to do i'm going to consider the union of the no as an admin what matters to you are the the entries where the last bit of the perm ends with one which classifies them as admin entries and you can do what the perm tells you for the corresponding to id entry or part of that scope entry so you will have some permission for all the groups whose name matches the corresponding name pattern and the same for another admin scope entry and so on but then you may have together in the same scope also some member scope entries and then things work just like in sk group common score nothing needs to define here so what we need to define here is how you make practically the two types of scope entries coexist and bottom line the trick is looking at that this significant bit and then you just polar their their individual semantics i see joran in the queue yeah well i was going to ask another question but let me start with this one so so this bit is only just it's just like um keeping tracks of track of things it doesn't have any meaning it's not like you get any other privileges or it's just a way of displaying when keeping keeping different the the permissions for users in front well it has a meaning we can use it to distinguish between the two types of scope entries as a lucky uh by-product but otherwise it has a meaning in in the green box it's basically allowing uh the administrator to perform"
  },
  {
    "startTime": "00:40:00",
    "text": "uh the actual yes the thing is it's always set one for every administrator for which this scope entry is released right you forgot about that okay so it actually it's it's actually it's the admin it's sort of similar signifying the admin rights in some sense yes uh for the blue case uh well if you want to it also has a meaning but it was defined as reserved and set to zero so so it's non-meaning but still they have a meaning first of all it's just that we were lucky to notice oh they can be used to distinguish um which is which yeah okay uh i'll come back with the other question thank you yeah uh this is just a summary of the updates uh i've gone through and the plan for the next revision is to address those open points that i raise and come with good text about them hopefully and until then comments reviews are very welcome from the group maybe then i should take my question so um um sorry something um we have in in case in ace group com there is a section uh looking at operations supported by clients which expect what is expected by a client dominion melee support and to give a hint at sort of what what what do you what is the bare minimum that you need to implement similar sorry yes maybe something similar can be thought here so in that document clients were exactly group members only this is intended for administrator i expect an administrator to be able very minimally to create a group i mean very minimally"
  },
  {
    "startTime": "00:42:01",
    "text": "but makes sense to also expect capability to update the configuration and delete the group but we can start thinking about presenting uh yeah this capabilities under that framework too i think i mean it could be scary if you open the document and you see all these properties and it sort of uh adds up and but if you get an understanding that this is what you minimally need to support and then i can build from that that could be more inviting i think i agree minimally the group creation yeah yeah that sounds reasonable i didn't but i'm on sort of basically expressed in terms of of which are the admin operations and so on yeah that was my comment thank you thank you okay i guess i am next in the queue so to sort of synthesize daniel's comment from earlier and thinking about the use of aif so like we've got these group names and they sort of have to exist in a human readable form because the administrator is going to be using them and the administrator is often a human but we could certainly imagine an approach where the sort of underlying authoritative id is something else maybe a random number maybe some object with a segor structure and that the name is a attribute bound to it and when we go and we look at the authorization information we talk about this random id or other core structure and uh the name is only used for the readable bits and so it it turns out that aif only says the toid will often be a text string not that it has to be and so we perhaps think about whether there is a a useful sebor structure that's not a text string"
  },
  {
    "startTime": "00:44:02",
    "text": "that would let us express the relationship between groups and sort of what we've been doing with the wild carding and the names for the permission coalescing but that would be in some sense more complicated of an approach than just using a text string because now we've got two different versions of the identifier that we have to keep track of we have to process and so it's convenient in some sense to use a text string for both and just put some underlying substructure in the text string um and you know if you have some time maybe think about whether there would be a nice elegant way of doing the group um the what we're currently doing with the wildcarding basically if there's an elegant way of doing that with a c or structure that's not a text string but i don't know that it's super critical to really look at it in that detail yeah i also think it's not too critical hopefully and for sure you'll get things more complicated but after some decomposing possibly i believe you need to end up to some kind of texturing anyway to to compare um yeah an exact name against the pattern in this particular case and thinking of other drafts where name were defined all along as the string as text strings already so group members are already thinking that way at an early discovery later on during joining us on so we're just keep building on the same tracks so to say and if we diverge uh assuming it it's convenient in some way it risks to to to have to open for rethinking uh previous steps too uh yeah unless we see any big gain probably simple text strings are just good enough we would need a pretty big gain to do something else"
  },
  {
    "startTime": "00:46:02",
    "text": "okay thank you web slides yes i think that there's no totally different light set to be loaded because this was concluded so question do you think you're going to be ready um by next itf with the admin interface well there may be chances that it considered good enough to approach working group call uh [Music] i'm i'm not sure we can try it that depends how the documents evolved but ready at most means that because i mean we haven't even approached working or classical yet so you're not committing to be ready for next itf i i i i i plan to produce a revision incorporating all this uh okay in the in the best cases if you judge it ready for working group plus call that can happen uh but in case ready means ready for that not more really okay uh yeah i'm done with this presentation i i think there is one more on the revoked token notification document"
  },
  {
    "startTime": "00:48:03",
    "text": "yes thank you which doesn't have to do with group communication uh finally uh but just to recap um this is an additional optional uh feature to support for for an authorization server to inform uh both client and resource servers about tokens that have been issued and they have been revoked but are not yet expired and it's intended to to complement not to replace at all uh the optional token introspection service but unlike introspection this is something truly available uh for both client and resource servers and the idea is for the authorization server to locally maintain a list of tokens that have been issued are revoked but are not inspired yet expired yet and both client and resource server can access that resource possibly observe it using observation for co-op and by doing so they can retrieve a list of revoked tokens but not really all of them only those pertaining to that exact client and resource server making the request so i just have a question um a token um also have a um a deadline or um it has a date after which it's not valid anymore or but that's expiration that that expiration date yeah yeah this is about uh tokens can be revoked before they come to that point for whatever reason and it's good to inform the interested parties as soon as possible yeah so basically in in but when you have a expiration date it's not part of the introspection so you have three mechanisms um try to introspect and expire token by"
  },
  {
    "startTime": "00:50:00",
    "text": "reference of by value the authorization server will tell you this token is not valid and i think you can specify why and then okay you delete it um so sure you you can find out that the token is expired but but through introspection is a bit weird because you should know the token inspiration from what is defined in the token yeah exactly so this is one way i i see three ways to manage those um ask the revocation um i mean you look at the expiration time and you and you have the introspection where you you ask what is the status of that token or and so on well you you know when it expires yeah uh so introspection can be useful to learn in advance if the token has been revoked if you take the initiative to introspect of course that you can do one token at a time sorry sorry sorry to jump in i guess daniel i would treat the introspection and the expiration information in the token as being basically equivalent and so if there was a token that had an expiration time but it got revoked before then i would still expect that when i go and consult the token introspection it would just tell me the expiration time of the token it would not i would not expect introspection to uh have the additional information about revocation yeah okay thanks so yeah this was just a high-level recap to get into the topic again so next slide please uh yeah and to add on that there are different ways for clients and resource server to retrieve this information about revoked tokens from the authorization server we have right now defined three modes of operation one must be supported by the authorization server we called it full query"
  },
  {
    "startTime": "00:52:01",
    "text": "and basically a device being it client or resource server doesn't really matter anymore um retrieves all the pertaining tokens that have been revoked in a diff query is not about retrieving um indications one by one of all the currently expired of revoked but not expired yet tokens but rather a list of recent updates uh performed to that set of uh revoked token and the third mode of operation built uh over uh suggestions from ben actually uh some meetings ago and and using the the cursor pattern of the series transfer pattern it's basically an extension of the second mode that additionally allows for uh transferring updates and chunks uh even starting from a particular indicated resumption point but details about these modes are in the draft anyway it was just a bit context again next slide please uh right this was uh recently adopted basically right after uh the previous itf meeting and we received a review on the list from marco azori from cnr uh we are very grateful and is also implementing this draft uh building on our implementation uh for for java california and we submitted a new version in fact addressing uh most of that review i think we still have an open point and adding more text about unspecified uh underspecified error handling and token processing other than some editorial improvements next slide please yeah i just wanted to mention the the main points from that review and the open point that i have left uh from it first of all we realized we weren't having explicit text about what the client and resource server would do when learning that some uh pertaining tokens are are revoked so so now we are pretty"
  },
  {
    "startTime": "00:54:01",
    "text": "explicit about having to to expunge them and the resource server is to take some additional action of course uh the result server may learn that an access token it has uh has been revoked so it should delete it and stop any attempt of access but it should also remember that that particular access token has been revoked until it expires and that's necessary in order to prevent the client in in bed or good faith or or following a delayed behavior to post or repost that token that is not expired but um has been revoked so there's some particular carrying all this that the resource server has to take care of uh other than the simple fact of deleting the token altogether uh of course this is now in the draft next slide please uh yeah then there was a lot of improvement to do in terms of uh error handling uh not only about which uh situations result in an error to be handled and communicated to the uh requesting device but we also introduce an actual format for error response messages with mix again uh the semantics used in in the ace framework first of all and then in some of the application profiles so in case of error uh the the response returned uh to the requesting client the resource server uses the same content format we had defined any way in previous version of the draft there has to be an an integer identifying the error and optionally a text string giving an error description and we have come up with a number of error cases that we are already using and and we are re registering those uh next slide please"
  },
  {
    "startTime": "00:56:00",
    "text": "we should be about uh yeah uh the the open point we have so uh i presented before the the use of the cursor pattern as a third mode of operation and it is still presented that way in appendix b since well it was introduced that way and the more we thought about that the more we realized that well it's actually an extension of the second mode because it it is still diff based just ending the additional functionality of resuming the update transfer from a certain point um in time so the plan will be to to move this content out of appendix b and to merge it in the document body in the section where the second mode is defined and there's christian in the queue hello could you explain whether there is much value to the section 2 to the second mechanism um in in having it stand alone without the extensions of the third mechanism so might it not be easier to just go all the way and describe the third mechanism and or is is there a particular use case where the second mechanism without the extensions is really valuable thanks uh if you are sure that the authorization server supports the cursor pattern it just goes for it anyway and then it works well uh in case the client resource ever supports it or or not so it's mostly to try to be friendly with an authorization server that doesn't want to use it but for the sake of presentation yeah it's a single thing totally so i hope i can capture this well enough in the revision that was basically the intention okay uh thanks uh next slide uh is a detail that that uh follows from"
  },
  {
    "startTime": "00:58:00",
    "text": "this how to represent a payload of responses and this is the current situation considering the way we have three distinct modes uh error responses are always hyper map fine the first and second mode are very minimal that was good enough that they've always been just a cyber array in the payload this currently third mode with the cursor uses a sieber map instead so thinking of the changes we want to do and moving the appendix b content to the document body next slide please it seems like uh you may want to have sibo maps uh somewhere sometimes not this also came from the review we got from marco that was just proposing okay just use cyber maps and that's it in every response because probably you're going to to need a cbr map anyway so just use it in any possible response from any possible mode so they would work it's kind of a shortcut i also discussed more offline with mark about that and there can be a middle ground which is more optimal which is the proposal of the next slide you have two minutes yes i can make it so error responses are and can stay silver maps uh that's fine we can define the the format for the payload of responses basically depending on what the authorization server supports so if it supports the the use of cursor basically well then all responses would be a silver map worst case they will include the cursor information that a client resource server may not understand but they've just ignored that information and it doesn't hurt but if we have an authorization server that doesn't support cursor and would never use that then we are sure there will never be any use of seaboard maps for successful responses and we can fall back zebra arrays"
  },
  {
    "startTime": "01:00:01",
    "text": "personally i don't see this that complicated if it's phrased well in the document so as a first attempt i i'll try to to propose this text and then it's probably easier to judge for the group once it is written down but at least it prevents useless overhead unless you really need it because the authorization server goes for that this will probably go through a few iterations of course before we are all happy enough but i take a first attempt okay good and that's it so thank you for presenting um and uh i think we can conclude um uh this meeting but before i'd like to to ask um maybe last time if ben is willing to say something or um if paul our new lady is willing to to say anything so paul speaking no not yet because well i'm not yet an ad and i definitely have to read up on everything that's happening in this group um ben has been great at giving me a handoff on a lot of things but i have a lot of reading to catch up on but i'll reach out to you as chairs too once i'm ready for you okay sure thank you so i think we're done thank you very much oh"
  },
  {
    "startTime": "01:02:03",
    "text": "which of course i have to when is the next formal telecap right so but i have a lot of reading to do there but yeah yeah i might have to uh might have to do you know objections there [Music] you"
  }
]
