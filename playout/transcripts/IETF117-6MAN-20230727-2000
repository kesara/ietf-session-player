[
  {
    "startTime": "00:00:11",
    "text": "Okay. We have pretty packed agenda, so let's start on time. Welcome to 6 months session. Please take your seat. Okay. So this session is being recorded. It doesn't mean you don't need to pay attention. Oh, why? Okay. Okay. Not well. I guess, by Thursday, we've seen a plague of times, but still, please take a look. And particularly, please be nice to each other. No shouting. No, Yealin. Only saying the nice things. the beautiful rule true necessary kind 2 out of 3 conditions must demand. if you want to say something. And they'll be tested at the end of this. Okay. Housekeeping rules. I would really appreciate if when people join in the queue even physically working to the mic, they would use on-site too. whenever possible because it does make the chair's life might change in terms of keeping track of who was on the line first, And so And don't forget to sign in using on-site to even field, even if you do not go in not going to ask any questions because it basically replaces the blue sheet. For those who feel nostalgic, we now have a physical blue sheets, which you could scan, and Bob is going here. send them around the room. Well, if you'll join in from your laptop key audio and video off"
  },
  {
    "startTime": "00:02:04",
    "text": "And, yes, and please don't forget to pull you put your mobile phones in silence mode. be really appreciated. Remoan participants, well, as usual, yeah, please keep your audio and video all fine till you actually start begin and etcetera. recommend that making audio much easier. measure by that. So, yeah, we have a Jabber room chatroom We have Mitrako, but I guess You can find all those links in the agenda. we have minutes to take care. Greg's secure very much again. for being well and cheered. agenda. We have some updates on the documents. And we have 4 working group drafts. We still talking about link local URI progress. then we'll talk about, yeah, architecture for ipv6 and non broadcast access, abuvisit query and My favorite topic extension headers And we also have a 3 individual dropped. We're going to talk about how to make ULA work slightly better than they do now. We're talking about DHCP prefix delegation signaling. to hosts and IC and VV Six flow back mass. We also have 2 drafts in time, if time allows. category, so we cannot guarantee we get to them. But if we a good at tracking time and beyond time, we might. So document status, nothing has been published since Yokohama, we have nothing in a refrigerator's queue. you were right draft. It was submitted to ISG, and it"
  },
  {
    "startTime": "00:04:00",
    "text": "cause some discussion, but we have it on our agenda today. So I'm not going to spend time on it now. We're gonna dedicate, like, 15 minutes to it after chair slides. We have 2 drafts which been in the last call forever. We are sorry about that. For Seed Draft, the reason was during the last call, few issue has been identified. and a correspondent issues were created in spring. For spring comparison draft, and we wanted to wait until those issues are resolved. before advancing this one. Those issues just been resolved in spring Bergen group this week. So currently, this document is basically we'll we'll move forward with this document. We need to do charity review and Checkatrade. And extension help class limit draft. Yes. My apologies. So we kind of delayed this draft unnecessary, are we currently doing shares review. for this one. I'm sorry. we have a number of working group documents. hope by hope draft. It wasn't the working group last call. Some issues been raised. we're going to talk about it today. It's on the agenda. swell. some of those working group documents an agenda and some are not. because I didn't know not much progress also made or authors have not requested the slot. Final reminder, I think we're going to show this slide for a while now. So As it's this is about collaboration with other working groups and giving agenda time to drafts which are related to other working groups. with"
  },
  {
    "startTime": "00:06:00",
    "text": "Because we normally have very busy agenda, we prefer not to allocate slots 2 drafts coming from other working groups until it's adopted work or chairs from as a working group explicitly asked us because sometimes we see in drafts which which are related to ipv6, but this group might not have a necessary expertise an ability to decide if it's problem, which needs to be solved. So we normally rely on originated not in group to tell us if it's something we shall be working. right, right, So for people who'd like to propose agenda item next time, think about, is it actually 6 months specific, or it's coming from other groups, like, let's pick. And I think that all for the chairs, Bob, you'd like to add anything. we No. Okay. So first On the agenda, I guess it's your idea. Right? of I'm gonna share slides. Just a second. Hi. Bob Hindon. I'm mostly speaking for Brian, who's in New Zealand, didn't make it here. Next slide, Mhmm. Sorry. business Yeah. So this is the basic ideas to make browsers except addresses like this where you specify the interface for to reach link local addresses, and it's we continue to think it's a very useful thing. in environments where there are no global addresses, which we have discovered, there are some are becoming more of and for getting new devices installed. Next slide."
  },
  {
    "startTime": "00:08:01",
    "text": "So I'll And part of this is fixing the RFC that is currently published that is broken. the the new thing we've discovered is the last thing on the slide here is that Neema has done a new version of marine networking, are networking for for for boats, not ships as I understand it, but you know, recreational and not. not giant chips, but there's a whole industry around this, and they've done a new stand a new network standard that is basically based on ipv6 and particularly for this conversation uses link local addresses exclusively. So next slide. There are 2 open discuss ballots and we are attempting to get these resolved. I think the first one we should be able to get resolved because I think it's this is intended to be for devices that run web browsers like you know, Macs and PCs and phones and stuff. It's most network infrastructure devices do not have screens and keyboards. They don't have web browsers. And I think that's how we can resolve this, discuss. The other discuss is about feedback from the community, and and this is going to be harder. Next slide. There's been a number of updates as we've learned more about this and attempt to try to resolve the issues in the discusses, And so we're trying to try to explain it better. We added an email you case and notice, you know, issues of MAC addresses. Next slide."
  },
  {
    "startTime": "00:10:05",
    "text": "Yeah. And and attempting to close the issues in in the So Rob Wilton's discuss Yeah. I don't think I need to read all of these. Keep going. and then doing the same thing for the other discuss Next slide. So the other thing that's happened that. And I I think I'm Well, Eric can correct me if I get this wrong. Eric organized the a side meeting on Tuesday, to try to talk about this. And the good news is that all of the authors and the Internet ADs there, but not but the people hoping this discusses didn't come. And I'm not sure how much to read into that, but so we so we certainly of making an attempt to to have a discussion about this. to get these issues resolved. And I think the next step will be for error 2. to bring this back to the ISG. I don't do you want Eric, do you wanna say anything? I don't really want to say anything, but I think you probably have to. the I think the w three c objection to the any changes to the ABNF for the URL syntax I've had several sidebar discussions here in person, many people don't want to engage on this anymore. they say things like I can't believe that's not dead yet. or I don't wanna show up to that conversation because it would appear to dignify it. or whatever or or support it. So"
  },
  {
    "startTime": "00:12:01",
    "text": "don't really know what to do. I I I I I believe we have done all the right things. I believe the tech is correct. I believe Brian has been tastic about taking feedback and responding to feedback. and that essentially in reality, all issues have been addressed, but some I don't know what's gonna have to happen with respect to executing, I don't know, some discuss override option or risk, risk, Depot declaring war, an open war, will be upon us if if if we try to advance the documents. So I'm I'm gonna try to close every one of those discuss points down to the last w three c one, and I wanna keep trying to engage with the relevant eighties and other Did we receive participants, participants, but I I don't know what's gonna have to happen if if they refused to budge. and I don't really know what the yeah, opt to seek some advice from other ISG members and whatnot. But if the community wants to press forward, then it's quite likely that makes things to get much more interesting. Thank you. Yeah. Tom Zampater? I I just wanna say thank you to Eric for doing this very annoying work. do believe it is very important. Like, I hope you can try to continue a little bit at least. And Thank you. Sorry. What and who what was your name? David Lumberger. So Bye. Thank you. Yeah. And the other thing I'll say if there's Anyone else who knows of other, any current use cases for this like the NEEMO 1 please, you know, let us know. We can certainly add that to the document, but it's also good to bring it to the ISG that you know, this is not just a theoretical future thing. This something that we think is a problem that exists today. And as"
  },
  {
    "startTime": "00:14:01",
    "text": "V Six moves into more things like this, we're gonna see this more commonly, and the web browser is just a very convenient way to access devices. It it's done a lot. with limited scope IP 4 addresses. So it should certainly be possible to do it with V Six addresses. Joel, Yeah. Julie Eggley. Were the standardized, I'm reasonably certain that I would use it for something other web browser. Right. because, like, know, servers have lots of interfaces and interface scopes. And, normally, we distinguish those things with routing or source address selection or some or VRFs all of those things. Sometimes I want to express which source interface I use. in a URL because then I can provide instructions to a machine by doing that. And That's not broadly dissimilar to, like, discovering a resource via bonjour and then adding an interface scope to it in your application. which is the sort of thing that, like, a web browser would consume. I would definitely use this in other contexts where it's sufficiently standardized that, like, my my HTTP how libraries for Python, for example, were aware of interface scopes. Good. Thank you. Can I jump in and reply? Sorry, Eric. Joel, you might you might run into the issue that Rob Wilson raised in his discuss. They're was never any ABNF syntax for an interface name. poopemoji0 is a valid interface name. it's not gonna work in the URI syntax without a percentage coding. And so"
  },
  {
    "startTime": "00:16:03",
    "text": "know, gigabitzeros/boardzeros/ port 17. as an interface name doesn't technically fit the ABNF, either the current or the proposed revision. but scope identifiers will will work. modular the percent 25 problem. Yeah. I mean, there's certainly some limitations there. Like, I think what is an interface is, like, a relatively complex question could that your various servers may have differing answers for. for example, the That could be a an f w mark in a Linux machine, for example. So what you might actually stuff in a in an interface name. If you had recourse to this that would be meaningful to the machine might vary based on what you were using it for. and, like, I don't think that's inside the scope of this work. But, like, If this existed, it would be a knob that like, people would start to use because it existed. Eric Niger and Akamai, another potential use case might be start in if you're looking for use cases, maybe in the DNS resolver space around with dough But I think we're starting to think a little bit about that that starts pulling on threads. Like, there's a number of things in the discovery path for that that either that will then start also needing to to convey information that mean that may not fit into their ABNF and also the, like, the I don't see the draft talking about how TLS gets handled today, but I think for this to be useful for HTTPS there's gonna be a bunch of things around how does this interact SNI and how does it interact with sort validation that go beyond just the URL syntax, start becoming relevant for this to become a practical."
  },
  {
    "startTime": "00:18:02",
    "text": "Yes. I think that was not sort of the problem we were focused on, but that is interesting. Okay. Thank you. Westgate University of Cisco? Yeah. I mean, Gerard just mentioned that it's how to feel what an interface is. But at the end of the day, We own IP physics, so we since we place a address and interfaces, we should be able to define what we think an interface is because we have to place an IP address on it. So there is the machine concept of an interface But then at some point, that machine must present something to pv6 that we agrees and interface. And so the fact that the concept of an ipv6 interface does not exist. It's probably our fault, not the fought of the machine. And so as part of the work we are doing in architecture, it's important that we define terms that we are using, and some of them are subnet interface links I mean, we need to have clear definitions somewhere on what those things are. I do need to disagree with Pascal because we do have a what the interface is because the API for sockets for API 6 is some old RC, and it doesn't have the scope identifier as an integer. And that's not how I don't know if anyone does directly that, but most use case most operating systems. present a different thing to the user to identify the interface. and changing this to use the integer scope ID that is actually in their see that defined as socket API is not helpful either. But the the only thing in my mind that is helpful here is to try to standardize what we have. I'm not saying the opposite. I'm not talking about naming either. We what we need to standardize is what we think an interface is, and it hopefully is based on what we effectively use in the real world. But I have somewhere else which really say"
  },
  {
    "startTime": "00:20:00",
    "text": "there is the best that we talk we call an interface even if it's obvious to everybody. Maybe it's not when we try to restart. Sir, clarifying question you're saying, standardize what within interphases or what is the interphysis name is? was our description. That see. I mean, I I I did not agree with that we did disagree because I'm talking about what interfaces and David was talking about the interface name, I believe. Yeah. Okay. No more questions, comments, Okay. Okay. Pascal, I think you're next. surely, I will start sharing the slides. deployments rights. polo, Ah, you want to okay. Hold on. Wait. So you want to you want to present from your phone? or you want me to share your slides? I think it shows I I'll do that. Don't worry about that. No. think we That's easy for us. Yes. That we can do. Okay. Okay. And this is Pascal Fiverr about the architecture for NVMA. And, actually, part of the things that this document is trying to do is give a definition that we would agree upon on those things interface link and in subnet. Not I try to write from my experience of those things as a developer in the US, but we might disagree. So that's why it's so important that we place those words in front of the community and see if we agree on the terms that are listed there. I try to find this this this those words somewhere defined, and they could not Maybe I missed NRC that's out there. But even in the context IPD4, it was kind of implicit."
  },
  {
    "startTime": "00:22:05",
    "text": "And the best definition I could find for a subnet is to match the mapping of a lower layer broadcast domain. And since we actually, in this architecture, we separate the subnet from the broadcast domain. Now what is a set that. And at the end of the day, the other thing that I found was, okay, I subnetted a slash 64. And after all, why not? I mean, if you if you decouple the real 3 constructs from the real 2 constructs, Then the subnet is what you want it to be and And the usual thing is that's why you've placed your slash 64 boundary. you place your slash transform boundary wave, are you like? outside of it, it's your IGP inside. It is the SGP or proxy. and that's your subnet. So that's pretty much what this thing is is about. I've heard a number of misconception about the work. I don't know if because the text isn't clear or it's just too much text to be read. but As the title says, it is for IPV6 of our NVMA. if you are trying to apply APV6 on a traditional broadcast or point to point link, You don't need this necessarily. It's up to you. I mean, could be seen as a degraded case of MBMI, but it can also be does always been? meaning that if you have a broadcast domain and your decision, decision is to place your subnet at that exact scale. BTXXM 1 to 1 least. then this draft is not telling you to to not do what you always did. Right? So it's not a competition to what we have. It is an extension in case you want to deploy on NBRN Networks. there are cases of MD And A Networks in this IETF, Finance, EVPN. EVPN is a very clear case of NBIA by And there is there are some, like, triple a as well, the SS toyota.11 is also a very clear place of NBIA. So can always do tricks You"
  },
  {
    "startTime": "00:24:03",
    "text": "and Wi Fi does tricks, and the VPN do trick by proxying IPV 6 to to extend over the MBMA. that works. There are a number of issues that were found over time. So it appears to work until it does not until you get cap case after cap case which is what we get cannot useful to to have this architecture. Next slide, please. Sorry for the wrong introduction, but just to to not to get the kind of questions where, oh, it competition to the existing? No. It's it's a scope that actually seeks is not in right now. So the document when you are group documents and part of what Sorry. No. Verify question. is 802.11 in scope or out of scope? because you said that 802 to 11 is MBMA. But you also said that this is for Yeah. Can I have a right question? Is 802 to 11? Well, it's a yes. So becomes broadcast when you provide emulation for the broadcast right, which is what Wi Fi does. now if you leverage that emulation there are a lot of consequences for it. And so Wi Fi requires the use, it's part of the dot 11 spec, the use of a proxy. And, actually, the proxies that's specified, but this architecture provides the proxy for Wi Fi. Did you say yes? or no. because I'm sorry. I -- I'm saying, yes. Why Fi is a non broadcast network with a broadcast emulation. Okay. So it's in scope. It's in scope. Okay. Thank you. It Wi Fi will work better if this thing is in place. And, actually, Wi as a speck that requires that this thing is in place, which is that we don't have our side of the equation. so so part of the adoption game was to actually focus less on the wireless primes, make it more general,"
  },
  {
    "startTime": "00:26:00",
    "text": "also focus more on architecture as opposed to prime statement. So next slide, please. the document still has prime statement, have just extended it beyond specifically Wi Fi. you'll see there's discussion about overlays like EVPN. wireless Wi Fi is in scope, as we just said. There is discussion of what we call endeprocses. There are different specs at the ATF, which are called any proxy, and they don't do the same things. we don't even have a good definition of anti proxy. There are issues with security. There are issues with sustainability, so they they are all discussed. At the end of the day, it becomes this architecture, it becomes an administrative decision to decide In the one end, what your broadcast domains are. in the other hand, what your subnet is. So you decouple all the layer 2 constructs from the layers 3 constructs. For example, if you are using Bourgeure to find a local printer, you want this local printer to be near you. but it might be that the address that you get is for the whole building. Like, there are some very large campuses. People enter anywhere, and what you would like is the keep their address as they move inside the building. But when they send something to the printer, goes to the most local printer. which means that bonjour will find a local printer around where you are. But the subnet in which our key address has been taken from is is us white as the whole compass. And this architecture allows you to decouple those 2 things. Next slide, please. So, basically, there is As you see, that's why I raised I went to the mic. As you start defining stuff and operations, you look for the key terminology are gonna use. And doing this, I realized that they cannot find that terminology express especially spelled out somewhere. So I I did my own to start with. So there are four things that you're kind of used to. Now it's not necessarily the way I spelled it. really, your review is is intensively required."
  },
  {
    "startTime": "00:28:04",
    "text": "then there is a 5th element, which is the subnet gateway protocol, which came out of discussions So, basically, you can see it this way. There is a slash 64 boundary. Everything which happens with a smaller prefix size. classical routing, as you know, it's an AGP. It's whatever you like. It's classical. Then there is the slash 64 itself, which is kind of a special case. And for this, you have all the art of tethering, etcetera. And then there is everything which is below 64 well, Lar longer than 64s inside the 64. And that's where the specs that start to operate. So you can route to host address or you can route. to prefixes, which are somewhere between 64. and 128. So any size bigger than 64 this this this architecture comes into play. And the cool thing is because you're breaking separating the the broadcast domains, you have to write. between the or proxy between the different broadcast domains. So proxy yeah. It works limited application. And then as soon as you grow it bigger, then then you're routing. Now the routing protocol that you want has slightly different proper is, then the IGP earliest, for instance, is closer to a Mene, because there is a lot of mobility inside the subnet. So you want to always know where is the latest location of this guy en route there. So that's why we call in this term subnetgatewayprotocol And this thing that came right after is what was called wind 4 for wireless entity is now called subnet, label discovery. So what it lists talks about is how you couple A UNI, which is based on classical ND and an NNI, which is a routing protocol. so as to enable reachability over the the whole subnet. And then, yeah, another question which was a a great and interesting question. Oh, but then there are protocols which form different kinds of"
  },
  {
    "startTime": "00:30:00",
    "text": "rich ability. Some of them want my broadcast domain, like like, and then 2 protocol. But then ND, for instance, wants to reach possibly the the whole subnet or what. And effectively, That's what kind of cool. There is the CRF C 73 for 6, I guess. by Ralf, which explains that there is a FFO 2, FFO 3, FFO 4, FFO 5. Right? There is admins scope, prem scope, etcetera. So for once, we have a a usage for that. I mean, if you want to ping the whole subnet like the slash 64, reach that, then you use admin local because now the subnet is purely on this stretchy decision. you want to reach something which is emulated, If for instance, using a Wi Fi ESS, Then you have a real local. And if you really want to reach only this link on which your link local is is valid, then you use FFO to us or always. So that's pretty much the on the kind of answers that you will find in this document. Next slide, please. So once we talk about what the global I mean, this global architecture derives from real life experience. It is actually deployed with a certain framework, which is the framework that we have developed in the last 10 years over the last 10 years for starting in the context of IoT. So this section here is basically explaining how you use a bunch FRCs that are actually already there. to to make this work. Now there are still some documents which are work in progress in particular, 6 lawyers had updated the prefix registration 1. And which in my book is a great complement to what you guys are doing Lawhanzl and Champ. by assigning prefixes to the host, there is this kind of missing link between, okay, this host gets this prefix From some sources, it can be the HCP, it can be IPAM, it can be Autocon."
  },
  {
    "startTime": "00:32:00",
    "text": "be another source, whatever provisioning system, this host gets this prefix. And then there there are routers around, which need to know that this host has this prefix because now you set of priority table. And and there is a need of a protocol which does not depend on the EPAM or the HCP, our founders specific solution, which is what the HCP is today. Right? There is a a vendor specific interface between the relay and the router. you want something standard and and independent on on the IPAM, on the one hand, and on the SGP. I mean, EDPN, list, whatever you run. On the other side of the router, you want you want you want something simple between the two to just connect those dots. defectively, this those RFCs that we have, should register a prefix that connects to starts. And that's also its usage in the case of Mac. I see that have snack people in these rooms. Next slide, please. where I have. Okay. So last but not least, but I still need to work that section and get people to help me on it. We used to have an applicability statement explaining the different cases of wireless depending on there is a macular emulation of the broadcast or not etcetera. whether this architecture applies to the different wireless cases. because these documents started in the wireless world. Now we extend to overness, layers, EVPN, all sorts of things, to the wires. as we do that, there's also an applicability statement to write, which I did not do so far. So if people are interested in helping on the applicability statement, then, yes, we need the application capability statement to everything wired. And, finally, this little section 7 talks about another misconception that is that it's either this all that. mean, the the the way it's designed and the way we've made it for IoT is that you would add"
  },
  {
    "startTime": "00:34:02",
    "text": "reality devices 1 by 1 on an existing infrastructure share where all the other devices use the classical ways, use Slack or whatever. And so that's why there is this RFC 8929, which is the one that the new dot 11 specs refer to, I mean, if you if you look at the drafts for dot11me, They will speak explicitly about the RFC and and and reason is it is effectively the the proxy that enables the classical device to see the devices which do the registration as if they were a classical device. The proxy does that. So you can place both sorts of devices on the same link, or you can start distribute thing, for instance, on the violet, wireless edge devices doing this, and on the y you have classical devices, You can and you can even have more than 1 what we call them, backbones where you do classical ND and use routing with the SGP them. You can build whatever you like. So you can see what we have today as still there. as as being just one of those links. and that's pretty much it. I may have another slide And so there are many, many discussions. I guess the first one so we can talk another and each other is to to validate that we have a terminology and that includes interface. with which we can actually discuss. Now the second piece of this document is, as you saw, there are 4 things. Right? There is private statement, architecture, framework, applicability, and there is even backward compatibility. I heard on the list that some people found it was too big. So I've got a question for you, and and I had a question to Eric already because I presented that 6 low, Eric, whether needs to be split, whether it's better for the ASG to see a single document, multiple document, I guess you've got the to do to come back to us. on whether we need to split this document or even if it fits inside the charter of this"
  },
  {
    "startTime": "00:36:04",
    "text": "double unplugger. So I do have a missing piece, which Sorry. I I don't think there's enough on the treatment of multicast in this yet. So I skim through it. You're talking about how to make MLD work without using as much broadcast. how to handle the actual multicast traffic is also something we need to think Maybe that's actually a separate document. It is mostly a separate but it is in there as a reference to the separate documents. So we talk about the registration for Unicast well, for unicast addresses, while there is also one which passed our group last call, which is close to RFC, Well, entering SGSG state, while you register Unica So anycast and multicast address because they have a special treatment in the SGP. So you need to -- Okay. -- to tell it's those addresses And then the SGP is supposed to support multicast. So the first hub you replace MLD, which is a pull from the network and not fit for low power, by your push by the device, I'm registering this multicast noise, meaning I'm listening to And then it's up to the SGP supporting multicast to get you the packets. am a bit anxious about You just you you just said the SGP is supposed to Well, that's if you want support multicast inside the subnet, your SGP must be to do it. It's not supposed to transport FFO 2. but it's it's supposed to transport FFO 4. Yeah. And that's specifically what I'm getting at. I I would Moa was below to leave a hole here. Please please question on the mailing list. Maybe you should not mind, but he has more words -- Yeah. -- are in order. I I I take that. Oh, yeah. It's plural. Okay. So I I said some things at atb6ops at the mic. I tried to -- -- mic. write them in a way to to to 6 men. I sent mail just now I have a"
  },
  {
    "startTime": "00:38:03",
    "text": "few thoughts. First of all, it's really, really complicated and really, really long. So I I still am not able to read it. And I tried to skim it, but So I I don't know if that's because we're trying to do too much or because it's just too complicated. I do think that it is very complicated and I think it's for most links, it's basically well past the point of diminishing returns. I have some thoughts over that and some concrete thoughts ND is just a protocol that runs over broadcast links. There's other product calls as well. If we wanna continue run those protocols and broadcast links, because app developer find them useful. then the layer 2 has to continue to provide that up We don't get rid of it. traction. So we can't, like, get rid of that attraction. But then the but then what's the problem with MD? because I I don't think even in Wi Fi, you say, well, we have MB proxy, but in practice, You could get rid of pretty much all of the problems if you did some amount of multicast looping couple with unicast and multicast conversion. While it is, like, arguably, you could see we do and keep hitting customer issues because Snoopy is not reliable. that's the bottom line. Maybe we need to fix that. We want a a contract so that the host and the router are both happy that the host will be served exactly like it wants, and the router is able to do that. And that brings -- We discuss Slack is not that contract. And that on the mailing list times and times. And that brings the next point, which is the current architecture has a very a a balance that we arrived at after a very long like, years of discussions and and and tussles and so on, which is that hosts can mostly do what they want. And if they do things that are too bad, then it stops working. And this architect one of the thing more I see what I mean is, like, in the current architecture, hosts were able to form addresses as they please, whenever they please."
  },
  {
    "startTime": "00:40:01",
    "text": "And And it and that's not ends up not working if the router is a with it, and nobody knows until it fails. Right? That's the current state. But we don't have a lot of operational issues caused by this. So I I input some, to be honest, some. because I'm on the router side. Maybe on the phone side, they don't tell you. But on the router side, they tell me No. We -- -- got cases. Yes. Right. but but I think you know, so I think, though, in general, it's like, you know, we have we have a saying that we're just gonna have, like, the root of saying no when it runs out of state, that's also a problem. and and we we have, you know, 794 talks about that. Right? So it's it's not a it's not as easy as saying, oh, yeah. We just have a clear saying the host says, I want an address, and the root just says yes or no. that's There is a little bit more. Yeah. Yeah. It works technically, but in practice, like, sort of in terms of, like, architectural implications, they're pretty it's pretty complicated. That 7934 says 1. So, anyway, so so I think, you know, the a general purpose link like just Wi Fi, I think this stuff is at best. The benefits are at best tenuous. and it's really complicated compared to what we have now. You mentioned that the subnet abstraction isn't written down, That's because it's so simple you don't need to write anything down. It's basically you send a packet and everyone gets it. Right? We didn't write it down in 90 98 because there's almost nothing to write. But this is very complicated. So I would also say, do we need all of this complexity and general purpose links We have it for 6 low things that were really in low power. Yes. -- find general purpose link. because we replaced a non defined term, but yet another. I'm seeing what we deploy today And, no, it's not don't get what you just said. We try to emulate it because we have to you retained that very old abstraction of IP to make it look like it mostly works. but it does not all at all work the way you're describing If you look at any VPNs, the wire"
  },
  {
    "startTime": "00:42:00",
    "text": "list type of network. It's not at all what you think it is. It is what we still try to make believe it is, but it fails and fails again. I think you'll have to be more specific about the failures then. Well, what is the big problem? -- note that you think is there, but is no more. this yeah. I didn't address in your tables, but is no more used, missing an address and and not being able to deliver a packet because you don't know where the guy is. Those are the failures. it's all written in the first section. Okay. Just for sake of time, I suggest you take it offline on the list. Eric, Yeah. I'll try to be brief. So but I think that So so I haven't paid close the attention to this draft recently. I did spend some time this morning trying to find definitions because I thought that there were sort of updated succinct definitions on some of these terms. But after going through this half a dozen RFC where I thought I would find them. I didn't find them. So there might be some utility in trying to write this down. a bit with a bit more detail, but I think that that's still should be a page of text just for the definitions. Right? And that that's it. In terms of descoped the way that in the current title, I think, it's actually problematic because it it comes across as this this is it. This is replacing the architecture with something completely new. I'm sorry. That's not the exception. Yeah. I'm trying to be be be but because you need to actually clarify the applicability. We clearly have examples where We we built a set of tools for 6 low, etcetera. Right? that are useful in some context. which is fine. But then sort of saying and it might be useful in other future context as well. mine? but I would don't think that this is the end and the main architecture. Right? I think it's useful in some of them, and and part of that might go back to what we're answer sort of we have enough concrete about what are the problems we're seeing today. Right? And sort of don't know to what extent this how people configure EDPM and whether these issues show up. Right? Where are the places And I think the third thing is"
  },
  {
    "startTime": "00:44:03",
    "text": "Again, trying to be brief is, yeah, if we're gonna do something here, we have to figure out how to be a lot more succinct and sort of know what problem are we trying to solve. Right? And and we're not gonna do that at the microphone here today. So Okay, Erika. Yeah. So just to I haven't had a chance to like, formally revisit anything that I've mentioned since the 6 low chat the the for for for everyone else here. I was just kind of, like, feels like Other things besides neighbor discovery must have also difficulties when you have changing broadcast and multicast scopes. links, not just Neighbor Discovery. if you want I said at the time in 6:0, if you want to redesign the interface between 2andl3. That sounds like a big thing. Michael Richardson pointed out to me Nobody ever designed the L2, L3 interface. It's all just assumed to be a big yellow wire. It seems like a a a fair point, but it it does seem like the thing to do here is to get some consensus on try a different a different L2, L3 barrier. and sort of, like, Difficulties with ND could be a motivating use case. other protocols must also have this same thing. And if you got some consensus on changing or revising or creating a new L3L2L3 interface contract, we could revisit what that what the implications of that are after that was had some consensus. Okay. Would would be my guess. Thank you, Rick. For sake of time, yeah, I think we yeah. Sync of as color. Cool. I'm just we just run out of time. We'd like to be on time. So the next one I'm I'm Oh, Hello? Okay. Thank you. Hello, everyone."
  },
  {
    "startTime": "00:46:01",
    "text": "This is the Xiaomi speaking. This chapter is about ipv6 query, for enabled Institute OEM Capabilities. Next slide, please. This is a recap of this, Jeff. This drafted defines ICMP V Six Extensions, to achieve IOM capabilities discovery. Now the f Six it works This draft is a a companion document of obviously ITC59. This chart defines ipv6 node information carried a mechanism. For this mechanism, 5 I1capabilities object, are defined Next slide, please. This draft, has been presented at IETF 112, 114115. some good discussions happened happened After IETF 115, This draft as adopted as a working group doc Document. Document. Here, I want to express big thank to a the working group test, and all folks reveiving this shaft. After this chapter was adopted, We have revised stage to the 1 version. The remaining 3 updates First one, ILN incremental tracing capability is object was removed, Second one, 2 examples of the know the IRM information query, were added, 3rd one, Wait. Could I verify the the how this mechanism works in an ECMP scenario. Next slide is This is"
  },
  {
    "startTime": "00:48:01",
    "text": "1st down date. to align with the IPV Iomm over IPV Six encapsulation, documents, documents the c type value to assigned it to the I am incremental tracing capabilities, was removed. Next slide. This is 2nd main update at two examples of the note, I am information query. will edit at Among them, The first example is carry the default and namespace ID. The second example is to carry the 2 provisioned name and space IDs, which is namespaceidoneandthenamespace ID 2. as a slide, please. This is the 3rd update It's about how to use this mechanism in ECMP, scenario. Actually, the failed sharing has already been discussed before. and a paragraph is already there. in, obviously, 90359. For the convenience of the reader, a sentence about how to use this mechanism in ECMP scenario was added. to the end of the introduction section. of this document 2. Thank you. SSI, please. There's a a open question,"
  },
  {
    "startTime": "00:50:02",
    "text": "What category does this job belong to experimental, standard check, or others. This question was first raised aticafone 15. when this chapter is still an individual draft. And now this job to is already adopted as a working group job. So I think maybe it's time to consider his question. Next slide is Next steps, we ask for more reviews in the comments and we are revise this structure to improve it And then maybe after that, working group last call. Thank you. k, David. David, I'm Patrick. There's a known class of security issues where things respond with a larger size of packet after just one small query. Was there any discussion on this of acquiring the query to be sufficiently large as to just impose a cost on the sending entity so they can't use this for amplification attacks. If I understand your question correctly, you mean that that reply message is big message, containing many contents yes. So you can So so other protocols have done this by just requiring that the query is large, so that the response is not giving you this multiplication So that's it's a defense against using this with a small query to get a large packet instead you you require a large packet to get a large packet. You know? So I I don't know if this was discussed before. I think there's an no such a discussion still at the"
  },
  {
    "startTime": "00:52:01",
    "text": "might be worth having. -- happy to discuss that with you. Yeah. Yeah. Yeah. So I I read a test. Yeah. We need some I kept on security considerations. I just have a comment so I put myself in the queue. yes, a status is interesting question because it looks like you update in on the correct document. Right? Your document is saying that it updates 80 4884. which is actually standard document. Right? So I guess it will be for for 4820. i e, Okay. Your document currently Say, and it's updating Oh, sorry. updates, 4620, and 4884 as well. Yeah. I and 4884 is standard track document. So if you're going to update standard term document, I think, yeah, we need to you domain this standard. 1 of the apps see is experiment. Yeah. And another one is tenders. Yes. Yeah. Yeah. not not not should be the higher one Yeah. It should be the higher one. I don't think the experimental stuff would update the standard track. Okay. experiencing this. I'm not Okay. So you I'm actually curious can we get I I've under the quick poll. Uh-huh. People said they're So, yeah, I'm curious how many people actually have read they saw one of the previous versions. if you have on-site to Hindi, please. click on the button and wanna give it another minutosaw. So raise hands if you read it to to click do not raise hand if you have not Yeah. I probably didn't phrase it very well on the Yeah. Few people. Yeah. So"
  },
  {
    "startTime": "00:54:03",
    "text": "Well, I I think we'll take it to the list. Yeah. Thank you. Okay. Thank you. Thank you very much. Okay. Corey, you're up. The floor is yours. Okay. flights. It's platform. Yeah. Okay. and So apologies. First of all, we managed to schedule this in parallel with TCPM when just being I've I've I've I've I've pretty working in. So I'm not quite a climatist to 6 months, but I'm gonna get that I'm Gary Ferris. This is Bob Hindon, and we have been noting the IPV 6 hop by hop options, processing procedures. Next slide, please. don't do the clicker. I have a coffee. well, there's been progress. Yeah. That's true. We've done a number of vision we're gonna talk about changes from 06 to 0 7, and from 07208. also And a key thing is we're gonna discuss the summary of updates to 82100. And then we're going to ask the next steps about what to do. click click And We had a working group last call."
  },
  {
    "startTime": "00:56:01",
    "text": "pushed your drafts. The authors think mainly, after the working group last call, people read it, and then they kind of thought about it. And particularly all they who have some really harsh comments, which I hope were addressed by really recent structuring and making the document much more readable and more clear in what its intents were. So we really appreciate that working group last call, and that's good. Thanks. at Next, Click So we've oscillation whether this document updates 7045. Yeah. And it no longer updates it. Read that draft if you like. h200 also absorb tests from there. We have added additional clarifications to the background. were important when we did editorial changes. was a 6 to 7. a draft Next, please. 7 to 8, we did more where we Why did we do all this? This is merely to be consistent, isn't it, across different things. Because when you restructure the document, you realize that there were a number of topics that come up in different places. and we really ought to have Now we really should have with a capital s h or ULD. language that Match is doing when we discuss the same thing twice. So I'm talking so you have time to acclimatize to the long list of things here. most of this is already in applied in the RFC series somewhere and he's now explicitly called out in a consistent way with with with with the appropriate level of requirements in this draft. We added section 6 that new hot by options should be designed expecting that routers might drop packets with the new option."
  },
  {
    "startTime": "00:58:00",
    "text": "So what we're trying to do is unpack here a little bit the expectations that These things can be used they might not behave in the way the original 82100 and previous IPV Six specs said, but don't be discouraged from that. Just realize that if you send these things on some packets, those packets might be dropped. And if that happens, They've designed it in a way that car lets your application carry on and do good things. maybe the next network you encounter won't have that problem. And that's all to do with the examples of rough view. robust usage. The rest was trying to be clear. unreadable. Anything to add to that list book? Yeah. I mean, I think our conclusion after coming up with this. These changes is the the particular talk about what you have to do to make a new hop by hop option useful in the current Internet where they may or may not to the other end, or they may not be processed, is actually very important advice for anyone wanting to define a new hop hop option. You can't just define the bits and send it and hope for the best. You have to be more active. about about detecting what's going on with packets with those options. Tom, was that related directly to draft 6 or can I get through all the changes first? clarification on that point Yep. So The expectation is that routers might drop the packets because of these new options, we're just generally are dropping Pacus with with for options, for options, So the section is written from the perspective of you wanna put a new option on the packet. you should realize that rotors can be configured to ignore those options because then we configured not to do options processing. Or they could discard your packet because it contains that option or any extension header. I mean"
  },
  {
    "startTime": "01:00:01",
    "text": "it just basically calls out that you can't rely on these on a path doing what you would expect. You should try it and find out. Right. But, I mean, a general problem. We're not saying if somebody adds a new option, that says ignore If you if you don't understand it, we don't expect routers to just ignore that advice and start dropping it because they don't like that option for some reason. Right? We explicitly say to route vendors Don't do that. Please forward packets even when you don't like them, Well, you don't like this option here, and just just don't process the option. Just behave like your configured not to process it. Does does that make sense? The the advice is different depending on whether you're trying to use that new in which case we say, try see if it works, but don't rely on every path doing what you expect. and writer vendors where we say no. Don't drop the packet solely because you see an option which you don't like. Of course, security reasons you might do all sorts of other things and yeah. Yeah. That that's a different matter. This is just about the routing processing. it it's one thing to design with possibility that they drop packets, But, again, you know, obviously, you wanna reiterate, you should never drop packets because of the out So -- Please read the new section. That's what he says. Yes. Thank you. and comment on that there's more to it than what we hit the words on the slide. Okay. And just go for next slide now, Bob? Yeah. are, this is more important. So as we think we are ready with good text for the draft, which should now be easy to read Hence, please read it. Let's present a a summary of the updates to 80 200 as 82100 is the full standard, and we want to be clear what has changed. This is not a different list of what's in the draft, but it's an explicit list related to x 200."
  },
  {
    "startTime": "01:02:01",
    "text": "So I'd like to go through these carefully. Number 1, if routers do not process the hop by hop option header. they should forward the packet normally. Don't drop. Number 2. Rooter should treat options they can't process with action bits of 00. In other words, Whatever the option bits, the action field say, please forward the packet obviously, not if it's security problem. But if you're a writer and you don't know what to do forward the thing. Otherwise, the packet will get dropped and things will start breaking in future, and we'll never get anywhere. And because of this number 2, Number 3 is we changed the definition of 011011. because these bits don't make as much sense as they used to do when we believe that all roaches would look at all headers in hear exactly in the way we said Now, Roaches can be configured to ignore these or ignore all extension headers They might not give you ICMPV 6 black for this, or you might not even get it if they sent it to you. So these bits become much less meaningful than they used to be, so which the definitions have been updated in this document. I'm going to get the end of the slide and then take Ron's comment. Sources sending packets with hop by hop options should use a robust mechanism that assumes only one hop by option would be processed. basic requirement. meaning basic. Please do more. Please please allow many. but you should expect that one works. Add specific rules creating hot by hot options. In other words, Here's a section 4.8 that says in in RFC h200, Well, let's let's now update that to say exactly how you create new options. Ron was in the queue first. Yeah. So is it your, like, would you like to take questions now? You have more slides. What's your"
  },
  {
    "startTime": "01:04:02",
    "text": "I don't do have clarifying the question on your -- Yep. likely. Okay. If you if Ron's comment is on h 200, then please give it Most I I I It's okay. I can wait till the end. Okay. So well, okay. We made what we think are lots of improvements. always good to get more people to review it. We think it's much easier to review and read. It's And we think it's ready to advance. So that was our next slide? now we want comments. Ron? Okay. I've been thinking about this for a good many years. myself and my thinking has evolved. please don't take me for bringing this up this late in the game. the Internet is really composed of a bunch of limited domain and each limited domain has its own routing policy. its own forwarding policy. and one limited domain should not be able to affect another's especially from the inside out. the way the hop a hop by hop option does So a hop by hop option inside of a limit of domain is a perfectly good thing. And the things that you're working on, make perfectly good sense However, all the applications of hop by hop options that operate on the book broader Internet across limited domains tend to be bad ideas and tend to be security disasters. So I'm quite quite a good idea just to say, The hop by hop option should always be filtered at domainedgepoints. The option should be filtered right you take out the option from the packet and forward the packet? No. From the packet on the forms. The package should be built. on the floor. And then, basically, I break the network down to smaller"
  },
  {
    "startTime": "01:06:04",
    "text": "smaller parts because I work with the other operator who I currently have a close relationship, and I'd like to be able to work with him and actually send OEM and things across the path between us Okay. And that can help you now. is an agreement between consenting adults and the limited domain between those 2 operators is actually a single limited domain And it gets bigger. I'm I'm not sure I agree with the with the comment you've got. I would like to hear other -- And my health, promiscuity is not a good thing. not depend what the hop by hop option contains? Well, hop by hop option is find inside a limited domain. It's even fine inside a limited domain that is controlled by 2 operators. It's just not fine in the wild. Why not? I'm sorry. Could you say that again? Why not? Oh, Because by its very nature, the hop by hop options or at least the ones we've defined so far Change either routing or forwarding policy. of another from the inside app. So they do things that normally operator of a limited domain wants control over. For instance, the route or a learn option, you just don't want to accept packets in your domain with the router alert option from strangers. Or for that matter, any other hop by hop option that we've seen in the past. in the future, that's also the case. And this is about the future, I guess. If you want something from an operator, Yeah. ask ask for it at the network edge, and the operator will do something about it."
  },
  {
    "startTime": "01:08:00",
    "text": "But going under the covers of the network operator, That might be a little bit too intimate. Let's talk about that on the list if we could. Okay. Yeah. Around. Sorry. I guess we can take this to Zulu. We got a little queue building here. Suresh? Yeah. Thank you. Suresh, Krishna. So I read through the draft, Corey looks good. Right? Like so There's couple of, I think, unintended side effects in the updates to 82100. one of the things is 8200 doesn't follow BCP 14 language. Right? And the updates do. So you are using uppercase name when the rest of the document doesn't. So I wanted to think about it. And this one specifically bad case, where the option type is 10, it's talking about, like, 2 maze independently. one of them is, like, dropping the packet or not and also gives an option to either send an ICMP about it or not. So I I kind of want you to Yeah. Bob, you lose a price. Can you could you send this email on that one? Just Yeah. Sounds good. I'll I'll do that. So there's, like, 2 cases, like but I think I don't like, 1, 2, open this, like, uppercase issue again because, like, I was ready for that one. and it was not fun to open that case. So -- Right. Remind us on that because we did read those sense and have that discussion. So Yeah. Remind us. Thanks. too. Yes. Be quick, please, and the question, and we'll try and move on. Is that okay? Yes. Tom Herbert, just one quick clarification. So the assumption when we're sending hop by hop options, that one would be processed. I think the assumption really is 0. When we send with hop by hop options, there is no guarantee that any node in the network would process those. Which which bit of the document are you actually calling, Tom? Because 5 or whatever on that previous slide. Yeah. We spend all the time articulating through this. -- number send send us a comment on tech. It's always something I was a little fuzzy on exactly why One is a magic number. But the way I see it, it's anything from 0 all the options in the packet"
  },
  {
    "startTime": "01:10:01",
    "text": "may or may not be processed by any or all nodes in the path. So so, fundamentally, from from the sender's point of view, its best effort, these may or may not be processed or they may be processed completely. Send us a comment on particular text, please. Can you go back to the I learned some clearly. Can you go back to the 82100 slide, Yeah. Let's scroll up. So I think this draft upset that this tech I think the text that upsets Ron was, like, forward the packet text. Right? So what was the fucking dose yet? That yeah. So I I would think there's a there's a couple of things you could do and improve that. 1st of all, you could you could say something like forward the packet based on the extension headers that you see after this. Because a lot of the time I mean, a lot of the damage that was done by had as previously was, like, Edge Filters just saying, oh, I can't look past the extension header on I'm going to drop So so this language, doesn't I depending on how carefully it's worded, this might basically say, oh, you don't understand it so forward it. even if it has a header that you don't like later. So instead, it should say go look past that maybe. Well, so -- Can you try reading the text carefully? because we we agree. Yeah. So so so -- Okay. -- so read the text because we try, like, maybe run -- -- that said that. Maybe Ron didn't read that. Yeah. I know. The text in the document is particularly just talking about how by Hotpepper is not Not, don't look, you know, just because -- -- stuff off to them. Right? says forward the packet normally or something. So see if that is close to what you want. because the other thing the other thing that an operator might be worried about is, not just, like, you know, what's after it. But could this thing get past the security filter and then do something dangerous after So if there's some way of constraining what the header can do later on, there might be a compromise that you can find with people who are trying to do this in edge filtering. because otherwise, I mean, I can see I can see 2 different points of view. It's like Ron says, I need to protect my network."
  },
  {
    "startTime": "01:12:00",
    "text": "and you, like and you're saying, I wanna do something new tomorrow. And if you can't find a compromise he it doesn't matter what this says. It it the the hairs will get dropped in. So super important. Please have that discussion with us if you could. My colleague, Brendon. So one of my long term pet peeves have been the vert word filter. And in this case, it's configured because a lot of the times the operator doesn't really have the option of beside and there's no intent to do one or the other it's handed down by the manufacturer who has designed the thing to do things in a certain way. So talking about configuring and filtering combi conveys an intent that often isn't there. So I would like to Well, it's my opinion that there are multiple places in the document that might that could be revisited and try to figure out if it's claims that there is intent where there might not be. Does that make sense? Yeah. And love comments that On the document, when we by email or something because I think the problem with the document is it's for people who are trying to use the extension. Who does it in the future props even because, I mean, like, there's only a couple design that are useful. It's about operators who are trying to put these into networks, but equipment vendors, and what you're asking them to do is about designing, forwarding, Logic it's about many different things to many audiences, and Getting that right is important because, otherwise, the document is not used to anyone. Yep. Because I just don't want to operate just to be the scapegoat here when we're not Alright. But let let's let's check we get the test right. deal in front of lane. Right? Okay. Hello? Tim Winter is QA Cafe. So I I asked for a lot of this text. Thanks for putting it in for the don't drop. think this is good for others. I know Ron is not a fan of it, but there's a lot of confusion around this. So I I I think I my my biggest takeaway here is we should resolve some of this. I did also notice the same"
  },
  {
    "startTime": "01:14:00",
    "text": "and see that Suresh did all of a sudden the same note to the list Okay. And could you also check the text just in case the rest doesn't do it quite right? I will. Thank you. Okay. Thank you, Gore. We are I mean, on time, when I sent But gonna do another -- Yeah. Oh, yeah. Thank you. Yes. So I think the idea is we might want to do nasdaqorgangrouplastcall. updated version, which will issue after this ETF. So please stay tuned for the work in the robust call announcement. Please read the draft and provide our comments, suggestions, text updates, and so on. And Bob and I, probably, with a weaker or vacation after the ATF can try and roll anyone who's got immediate comments that have just brought than Mike here. If you've got pretz proposals, get them to us quickly, and we'll get a new rev out before that call. Ah, okay. So, yeah, I'll wait for -- Well, If if there's a rebound on this meeting directly, then we will do a rev so in a few weeks, and then do working group last call. or did you get asked? Yeah. Okay. And I think now we are moving to Individual drafts. Right? Okay. consume code down. Okay. Let me on t. Yes. Oh, beautiful. You can go while I'm trying to find the slides. or it should be dramatic entrance when you couldn't go I get slides? how many minutes. Alright. Thank you. Thank you. we're gonna Tim and I are gonna tag team this one here. So we're gonna talk a little bit about how the the preference thing works for ULA's in RFC 6724. Next slide."
  },
  {
    "startTime": "01:16:04",
    "text": "A lot of this was discovered. in my role as migrating the Department of Energy off of IPV 4. And during that process, you know, there's a lot of different networks and a lot of different things that you see and transition period running dual stack that sort of highlighted some of these issues starting to dig a little bit deeper in this, we realize r c6724 is like it's years old. It's more than ten years old now. So and operational experience has been ramping up dramatically over the last couple years, for a number of different reasons. What that's shown us is that there's a lack of configurability. in the address selection policy, which is very important to the transition process. This draft is pretty simple. It it provides a, you know, a specific example involving ULA's RC1918 addresses. and it essentially aims to demote, IPV 4 further down making migration to ipv6 only much more simple. And the other thing we set for sort of anecdotally is there's still a whole bunch of RFC 34 implementation that's out there that hasn't hasn't been updated, and that's, you know, had 10 years to do that or or So so so that should that should get done as well in this process. Next slide. Alright. So the problem is really laid out in the IETF EC ops draft that's linked there. You can read through that if you want to. It lays out there you know, it solves no problems. It just lays out what the issue is. But, really, the crux of it is that there's, you know, policy table adjustments that need to made The emphasis here is really on configurability with RFC6720 or and the fact that there just isn't enough of it. It's not easy to do. and it makes it really difficult to implement some of these changes that we need to do that are you know, sort of"
  },
  {
    "startTime": "01:18:01",
    "text": "in the path of turning before off So Tim's gonna talk about what we're proposing to do here. and I think it'll be a lot more clear once you see what he has to say. or will it? So, yeah, just to emphasize as well here before we want the next slide anyway. But just to emphasize, we're not proposing a full 6724bis. having been involved in the 3484 best. I just don't think I would wish that on anyone. So there's basically 3 fixes, although it turns out, in fact, there's only too. I'll explain why in a moment. So the first one is to change the default policy table so that we're elevating the precedence of the ULA prefix. There's a little side thing there where we would also relegate the old 6 to 4 prefix as well. So maybe there's 2 things in one here. the important thing is that then when you'll get your destination address selection, You're getting through the comp the comparisons you're going to put ULA's ahead of by well, at all v 4 addresses, but including the 1918 addresses. So that's the first fix that we can discuss shortly. Next slide. trying to keep these slides as short as possible so we can have maximum discussion time. is a little tricky to configurability. As Nick explained, there are good reasons why you would you would you would likes the policy table to be configurable, and, yes, there is a DHCP V 6 option for that, but I don't think any well. It's very, very minimally implemented. There's also no way of doing it. with an RA. So you. at the moment, would like to see more configurability. We'd like to elevate the should to a must But at the same time, you know, if you're building some very constrained device and then lobbing it into the earth somewhere. I never be able to configure it again. It's practicalities of making it a must what we'd like to do is get your input on how we can make more vendors, more implementers, make these things more configurable than they are now, I think. Next slide."
  },
  {
    "startTime": "01:20:05",
    "text": "this first one actually isn't a fix because it's we kind of already done. So this is a bug In in fact, rule 5.5 is a must anyway because it inherits the must for the start of section 5, I think Nick and I are getting a little bit It was confused just the wrong word. I think this is a symptom of their still being 3484 implementations out there that aren't 6724 because 5.5 was an addition between 3484 and 6724. So we've, you know, we've seen from experience that this is a good heuristic, and it helps. think what we're trying to do here is really emphasize that it's important and that maybe the what we're really saying is If you're only doing 3484, please please please do 6720. So I think that's all we want to say. what we'd obviously -- -- sites. Sorry. Oh, sorry. There's one more slide. Okay. So You've had a lot to say or the list has had a to say. I counted over 300 messages about both this whole topic about what we can do. And there's been quite a few comments and I've picked out 3 of the sort of strands of the discussion that we're going on there. So One of them is around how we deal with corner cases. I think But what's in underlying there is that the thrust of this draft is not to make this perfect but to make the common cases behave better than they do now. So there will I think I think the list agreed there will still be corner case that may require configuration or explicit configuration. Let's just make it better. There was a part of discussion was around, it would be maybe useful if High school. automatically when they observe a specific 48, ULA prefix, Add that, to the policy table. I think, yeah, there's a good argument as to why that would help than with the address selection."
  },
  {
    "startTime": "01:22:02",
    "text": "That's might something we could also consider and discuss, but at the moment, that's not being proposed in the draft. there was also a suggestion I forget, Dubai, about adding a PIO with a 0 and l0. And I think that's maybe a bit of a stretch of The RFC but it might be the basis for doing something to build on for auto configuration and configurability with auto configuration. So I think that's definitely the last slide. allows, announced Oh, oh, Alright. So that's the discussion side. It's effectively the last slide. So So the first question is, oh, you know, we agree that this problem is a problem and we should fix it into these 3 or and a half fixes if you like. We're proposing are ones that are worth doing. And, you know, do we if if so, do we want to adopt it whether we agree or not or what the fixes are to at least adopt it and work on the problem. from here. So that's it. Well, Nick and I wanna take questions. Lorenzo? You go back to the policy table slide. No. Yep. -- click sign 44 I find it pretty amusing that you don't even consider the existence of public IP before? And I also find a car amusing that Torito is not one. But -- They're all leveled together. I I don't. I don't object to any of these. I do think Twilio should be one because, you know but It really is amusing that you talk about r c 1918, and you don't even that advice might have a public activity for us. But That's what CPUs do, for example. Yeah. Well, so that's -- Anyway. -- really an artifact just me speaking because there's really no difference between them from a source selection process,"
  },
  {
    "startTime": "01:24:01",
    "text": "If you wanna go back to the question slide, sort of I think I agree I think I agree with, like, let's just make it better. I mean, I do think we have a tactical issue here where you know, ULA to ULA should probably be preferred over before to before. And I would suggest let's do that and let's get it done, and that's not And then maybe let's put everything else in a in another draft. for 5.5, I agree that 5.5 is necessary. nothing we say will do anything here. But if any entity might have the the possibility of funding a change to limits. I would love that to happen Right. I I can't very easily justify us going out and coding it. but if somebody coded it, It's obviously necessary. Yeah. the configurability Yeah. Yeah. I don't think we should do you don't want network saying, oh, yeah. You should prefer i p v Four. You I mean, I don't think we should do that. I think we should fix it. And if if configurability is necessary, then I feel that that's kind of a symptom that something in the architecture was wrong or the deployments or the deployment scenario is very sort of unusual and likely to hit unforeseen problems. will then lead to other issues. So I I wouldn't make it configurable at all. So I mean, I I think the the underlying goal here is the sort of networks that Nick's been particularly dealing with, it's to get rid of v 4. And if they're gonna run dual stack, and we do ULA to ULA rather than b4tov4. once they see once they observe, there's no v 4, then it's you know, they're gonna be a lot more comfortable turning it off, I think. So it's the whole thing here would help, I think, with getting rid of b 4 and going b it's only in those sorts of network. Yeah. Yep. I bought myself from the first of all, yeah, second to what Lorenzo said rule 55, it's like, basically, things. almost every enterprise actually dreams of, and I know more and more operations system implement this, but, yeah, we definitely need on the Linux. It would be just like Christmas. So just a minor comment about must."
  },
  {
    "startTime": "01:26:01",
    "text": "will do. I no hats on. Right? I would be very careful with mask because I always things that must or must not means if you don't do this a lot of bad things happen. Right? It's not about convenience of optimization, it's about actually really breaking something. So I'm not sure we can -- -- happen. But it you don't have 5 dot 5. No. No. No. I'm not talking about the rule of 5 must. I'm talking about a must support, configurable things. So, like, it's about convenience and optimization connectivity is still there, but you might not, like, see what you achieve what you want. So I've I'm not sure we can justify most here. So, like, what we're basically saying is let's change that default table. and also let's promote more people to implement 55 and promote more people to make them configurable. Whether that's a must or whatever, that's what the document is trying to the question is how do we word it, how do we With like you to make a configurable for me sounds like true. Right? Because I might have reason not to Yeah. There's there's nothing in between must and should is there, but that's kind of where want it to be, like, should point 5. Okay. Yeah. Kyle Rose Akamai. I I already my opinion about should versus must in the mailing list. But gave real reason I'm standing up here is since I'm the person who apparently lit the most recent dumpster fire on the mailing list. I just wanted to to to reiterate Lorenzo's point before about think it's really important we get the default policy table updated as quickly as possible. specifically because I can't remember who it was. Somebody said before, you know, everybody should update the 6724. please, no. Do not update to 6724. Let's get the policy table fixed first get everyone to upgrade after that because the policy table in 6724 is demonstrably broken from the perspective of ULA Space. I am like like,"
  },
  {
    "startTime": "01:28:02",
    "text": "Everybody who uses Linux and whatever else has the default GAIDot comp. has benefited from not being upgraded from 3484 to 6724. So Let's not do that. Let's update the policy table and then relegate any other changes we need to make to a to a separate draft that might take a lot longer. That's -- Yes. -- my opinion. As I'm saying, it's a loose language. It's a loose language syncs chips. That's quite hard to say. what I what I mean by 6, 7, 24, 6, 7, 24, with these updates in place, not Sure. Agreed. Tim Winters QA Cafe. So definitely on the configurability requirements. Having written test cases for previous version of this RFC and this version of this RFC. the configurability requirements would be really hard to move to a must. devices are all over the map, I would not be a fan of that. I'm definitely a fan of updating the policy table. I will say Right now, we're testing a lot of devices and upgrading them much to Apparently, Kyle Chagrin. where that's going on right now. I don't think that's gonna change anything. Right? I I think it's moving the right but we should definitely do something fast because this is gonna get worse. as time goes on would be my real point here. It's like, that's what we're testing right now. So I would be very high us of that. And then the next top heuristics, I would clarify that as well, and we can put some test in for that too. But then, obviously, with the experience you have and what you've been done in the past. Any expert any advice you've got on kind of encouraging towards Musk for the configurability would be right. Yeah. I think should's fine. I think you're always gonna have device that are interfaces, it's a difficult problem to solve. I think shit is actually the right answer here. Yeah. Ted lemon. Yeah. Just very briefly, I noticed there was a quite a bit of discussion on the mailing list about operational use cases that nobody ever actually does n, n"
  },
  {
    "startTime": "01:30:01",
    "text": "I just wanted to to mention here that I really like it if we didn't tube on those. And I think So in other words, I'm I'm arguing for go fast small changes Don't worry about these weird edge cases. Thank you. a Dave they almost they almost Yep. If I online? No. No. Yep. Can you hear me? Yes. We do. Alright. Yeah. So plus one to the so this is Dave Taylor as a editor of RFC 6724. Plus one to the comments by Jen, and I think Kyle, Tim, and others, which is Yes. On proposed fix number 1, No as worded on both 2 and 3. Right? And it has to do with, as Jed mentioned, constrained nodes, and so I would recommend Elweg review, meaning, post this to the oh, wait list if that hasn't already been done. I don't know. as I've been on following the thread because I think the constrained notes. I get what you're trying to accomplish or whatever, but I believe that should is the only thing that you can do at this point. And if somebody is not gonna do the should, then change it to a must win your mind either. Right? And so my point is yes on 1 and no on 2 and 3. Thanks. Yeah. Thanks. Thanks, Dave. Hi. Yeah. So I think we put those 2 things in here because from the discussion and all the evidence we have. think they're important to to to emphasize that they should do that. But I I I agree with what seeing more of a success. Yeah. Yeah. Yeah. You're putting it through the roof. Let me just -- -- what the issues are is is good. because you can say, here's the rationale for the should. and that type of stuff is great. That's great. That's more or less informative text, right, saying, here's what happens if you violate the should. All that is good stuff. Right? Lorenzo mentioned, yellow stuff breaks. Right. Write that down. That stuff is good because that just helps to convince people who actually read documents to actually file the should. Right? But you can't make it a must as all my ideas."
  },
  {
    "startTime": "01:32:00",
    "text": "Okay. Thanks, Dave. I'm gonna interject as a responsible AD for Elwig. I'll say week is closing down. if you want to review, you can request an IoT directory review, you can also take it to the i IoT ops. working group if and when things are ready for that. Eric Wing. Cisco, no head here. Just three comments. I may suggest to have two documents because the first points and the last two points will progress at different speed. thanks to different opposition. Because I'm opposed, right, to the default policy change, that Lorenzo, I think we need to differentiate between the global APV 4 nRC 1919. I do prefer Global APT 4. As you know, right, repeating myself compared to a ULA. Maybe I'm the only one in this room. Right? That's okay. And the other point, I'm a little bit concerned about a new node having the new foreseeable and the old note giving the old one, the traffic, divest selection will be different one way to the other. They send the initiator is the legacy. will use whatever. initiator now is the more model with your change. I will change another path. Operational wise, this made proof complex, complex, to troubleshoot Put for thought on this one. Yeah. Thank you. Yep. Yep. Okay. Thank you very much. I guess we continue discussion on the And, Lauren, see you on next. Okay. Okay. Yeah. Okay. Lorenzo Clarity Android. Next slide on behalf of Pro Office. second. Yes. the Next slide. Can I dare I attempt this? Oh, look. Okay. So just to recap, because I I 4."
  },
  {
    "startTime": "01:34:03",
    "text": "presented this at last IETF. It was a little bit early because, you know, we We've since made a lot of progress on the v 6 ops document. But what what we're trying to do here is is okay, let's start with the fact that, you know, ipv6 devices almost always have multiple addresses. You got lots of link local, stable privacy, 46 forex slot, ULA, multiple prefixes, renumbering, and so on. and in reality, often, IPV 6 stacks of which there may be more than 1 in any given thing that you consider be a device like a phone, they share connectivity with other PB6 stacks. VMs, containers, tablet devices, Wi Fi calling implementations. You name it. There's lots of things in a given device today. and behind it. Now on some networks, you have scaling issues when creating and and if you wanna end connectivity, you need every device will have at least one address. Otherwise, you can't have end to end connectivity if you don't have an address. This is what we have today in IP before. Right? So assuming you want interventional connectivity, of these have to have its own address. So on some networks, You can tolerate the load of these additional addresses without scaling issues. But on some networks, you really can't. We've seen enterprise access points which will, like, basically top out at 6 IP addresses per host. and they just stop forwarding traffic after that. And in any case, this is a scanning problem. Right? So on other networks, on the other hand and so for those networks, you would like to hand out a prefix to the to the to the device and just say, like, have at it. You know, use everything. You this prefix is yours. Do whatever you want with it. And we this is basically the HPPD. Right? on other networks, we There's no problem with actual scaling. Like, a home network, you can create probably 100 of neighbor cash entries on your home router, and it will continue to work because it forwards them in software. Right? But in a home network, you might not have enough prefixes for for to hand out a 64 per device or even any prefix per"
  },
  {
    "startTime": "01:36:03",
    "text": "I mean, I I live in Japan, and my speed gives me a 64, and that's it. I'll all I get. I can't even pay more for 56 or 6 Right? So so this drop basically provides a way for the network to tell the the the the device. whether to attempt to get a prefix for a prefix delegation. Because On the 1st type of network, you would wanna get a prefix of IPD. On the 2nd type of network, if you do that, you just chew up all of the address space. and the network runs out of space. So we're basically proposing a mechanism for the network to signal to the to the device. use PD, or not. Next slide. How are we how are we doing this? We have a flag in the PIO. And it basically says, if you understand this flag, Don't do auto conf in this in this prefix instead get your own prefix and do auto come from there. assign addresses from that from that prefix. Why in a PIO? Well, because it's actually a prefix specific information. You might not wanna do this for all prefixes. So discussed all of this at 116, so, you know, not spending too much time on this next slide. So where are we? So we the v Sixops document that describes operationally how you would do PD in an enterprise network, is we're gonna ask we did ask for last call this week. I think it's it's making good progress. A lot of the objections have been sort of addressed, I think. And now that that document is making good progress, which define sort of the operational scenario for doing this. We want to advance this draft, which provides the way of selecting this new mode. okay, which provides a way for the network to say, please do this new thing. Right? And so we've we've updated the draft. We added security considerations, privacy considerations, we made some sort of minor spec changes, things that were kind of already obvious, but we didn't say, like, you know,"
  },
  {
    "startTime": "01:38:02",
    "text": "you shouldn't, like, set the p flag to 1 by default. if you just, like, configure a rooter. Right? We said that you must do a rebind if the if the if the if the if the if the if the if the if the if the if the set of PRU changes. and And we also say the device must ignore the prefix if it's not of suitable size for Slack. That was a lot of discussion in V Six talks about why this is necessary. In in the the short of it is this is kind of a feature parody If we want to replace Slack, we need something that has at least the same capabilities. And also, we said that if if doesn't get any prefixes from PD, it can still do Slack. next slide. And we also have, like, much more recently based on, you know, discussions here. A couple more changes. sort of very trivial. They're gonna be in the next update. Next slide. So we think that this has got enough momentum given how the V Six abstract is going. We think there's enough momentum here too, and we would to request adoption for this mechanism. And, yeah, like to hear the thoughts of the working group. Kurt? Eric Normark. Eric 1. only 2 Ericsson. Where's the third one? It's So, yeah, I think this this makes sense. Right? I I was a bit curious about One thing you said, which was around the switching sort of dynamically based on PD tailing what the dynamics will be of that. It's sort of PDWorks, You know? And sometimes you time out and you sorta give up, and then you do Slack and whatever. It's just gonna be stable. Maybe that's something it's for misconfigured networks where the p flag is set to 1, and it just never responds. you either basically say, okay. It's not working or you say, you know what? You you gave me a equals 1. I'll just behave like a legacy host. So maybe yeah. Specifically what failing means there might require some care."
  },
  {
    "startTime": "01:40:00",
    "text": "So it doesn't sort of flip flop based on training that Yes. But but one thing I was Oh, so in particular, we'd wanna say to stop the client and not keep trying. Yes. Yes. One thing I was wondering about in the sort of case, right, whether it's containers or whatever, right, tethering and whatnot. whether we know about advice to give about how you propagate this. because I have my laptop tethered to my phone running a VM that has communication side. Right? 4 layers of nesting. How does that these flags actually propagate in case. It's probably something we should think about. Yeah. Yeah. We we had some tech and there was a lot of there were some strong opinions And so we decided to, you know, address those opinions by deleting text We do cite I I mean, I think more sort of less tongue and cheek. We we sight 7278, which is kind of the state of the art. And with one pre we're sort of assuming one prefix And with that, you basically have to do bridging. At least, though, within a node, you can reliably do bridging. And so you can put everything on one bridge, and it will work. yes, it's not as good as, let's say, hierarchical PD or or Tim's, you know, like, relayed PD and so on, but we're trying to sort of keep it simple. We didn't we did have some text there, and there was a lot of opinion. So I don't know if we want to we cite 7278, or maybe we can take it offline. Yeah. Eric Veng. Eric, number 2, 3, depending on your account. No. Yeah. Obviously. just wonder now if we have different opinion, will you suppress me as well as your text? No. Just a joke of so I like the idea. Right? So that that's very useful. My concern is to put into the PIO rather than do the array. For instance, do I did not read the draft. In the PIO, if the AFAC is not set, is set to 0. that it makes sense to put the p FLAC 21? Maybe go back to that slide to the slide where we the proposed solution slide, I think."
  },
  {
    "startTime": "01:42:00",
    "text": "So This one. Alright. There were no no first. So Yeah. First one. the the set slide 3 maybe. So so so yeah. So you're and I think there were two questions Your question is, like, should it be in the RA? And we think this is really sort of a a a replacement for a given PIO because you might want to say, do Slack on these other prefixes like for ULA, for example. Right? So that's written here. should we you know, what what should it do if a equals 0? And sorry. company are you talking about? -- equal 0 and p equal 1. Or do you force Mhmm. Do you permit -- The draft says If p equals 1, treat a as if it was 0. Okay. That's what as I said, I need not read the draft. Yeah. Yeah. Yeah. Let me clarify. Yeah. Ideally, I just would love to set a equal 0 always, but I have legacy devices. Right? We can't roll it out overnight. So a equal 1, will be there for old stuff, and eventually, my Okay. don't know I if you need because the queue doesn't really say who the I Okay. Pascal to Cisco. So, yes, I do like the draft, and I hope you get Workoplasmicar, Preston. My question is really the relation with the PIO, so it's it's inside question to the one just Eric fast, but So so say I have 4 PIOs. Right? And I want to set this flag in that PIO, does it mean that the prefix I'm gonna get will be a subnet of the prefix in the PIO or is there just no relationship between if there is no relationship between the prefix I'm gonna get, the prefix in the PIO, then why put it in that PIO? Or, you know, Now I love the idea that it has a relationship. Now if if if, for instance, the prefixes kind of short, But I want there are multiple p values, but they won't wanna trust maybe in that briefing but not in that one. I would check that the bits effectively set in that prefix to us to obtain a longer prefix out of that PIO. if"
  },
  {
    "startTime": "01:44:02",
    "text": "see what I mean? Anyway -- 100% clear here. You Yeah. No. I do switch to -- -- I'm letting you finish. Okay. So but my point was I hope that's the intention. And if that's the intention, then probably the PIO is shorter than 64. because that may want a 64. If the PIO is shorter than 5664, then it cannot be used for Slack. super and soft. That is not the intention, actually. Unfortunately, the intention is that you would have a network like this where there's an on link prefix. And if the devices in the new mode, it would obtain its own prefix. It was essentially not related to the on link prefix. This is entirely separate. just a new deployment method. Now the as you say, you know, the In that sense, it's not tied to that prefix. The sense in which it is tied to that PIO is the fact that when you do this, you treat a, on that prefix, let me say if it was 0. What I'm telling you is that instead of using this prefix for Autocomp, Get your own prefix and do auto comp there. basically. Now there may be other prefixes that maybe, you know and and In general, I think you would think of this. The prefix that you request is of a Slack size, which is the same size as the one that's in the PIO most likely. Yeah. Yeah. Yeah. it's not a hierarchical relationship. Hi, Michael. Hi, Michael. So I think with the like, an open w t device here, as soon as you do a PD request, you will get both the ULA and the GUA. So it it won't matter like, what you put like, what should the host do if equalsone p equals 1 in the prefix. depends on the server. But it will do what the network said. It is if a equals 1, it will use auto conferenable. You can get a ULE prefix. Right. But kind of expensive, there's only 40 it's 265,000 of them. But -- Okay. Right. But you could that's up to the server, though. The the the the network operator can configure this."
  },
  {
    "startTime": "01:46:03",
    "text": "Right. But but I I think to to the point is there, yeah, there will be no relation you will just get whatever the network is configured to give you Yep. Okay. Do do you specify here also that that the device will get probably a lot of the time, more than one prefix in PD. It's small iconv6ops draft way because this is basically defining the prefix. Yeah. Like, flood. Right? We do not want to go into different deployment scenario in 6 month draft. Right? Look in the v 6ops 1. basically, it's telling you start PD, and then, like, you follow 8415. Right? Yeah. Yeah. Okay. I think just for sake of time -- Yep. yeah, we we'd love to continue the discussion. as a coarser. Yeah. So Thank you. Yep. Lauren, for you. of netnetnet shed below that slide. surround Okay. Hi. you see me? Can you hear me? e Yes. Great. Great. Okay. Should I go ahead and start? Yes. Yes, please. Okay. So my name is Thomas Wright. and this is a relatively new draft about the ICMP loopback and you'll notice it has inter area in the title. But one of the first messages we got was that this would be more appropriate to discuss this in 6 men and Here we are. Next, please. Okay. So first, I want to describe 2 use cases. The first use case is the IOM use case, and, actually, IOM was mentioned earlier today, So very briefly, IOM allows you to monitor and measure domain by incorporating IOM data fields"
  },
  {
    "startTime": "01:48:02",
    "text": "into packets during transit. and, basically, the idea or the use is that we're looking at is to be able to do something very similar to ping so that the encapsulating node, which is the node at on the left here can send kind of something like an ICMP echo and receive response from the decapsulating node that except that we want all that IOM data that was collected along the path. to be included in their reply. So that's one use case. Next slide, please. second use case is basically a bunch of other use cases because The actually, IOM was just one example, but any example where you have IPV 6 extension headers, which includes any information about to the past. which can be updated along the path or actually even an SRH Anything regarding the path there are a couple of examples at the bottom here of in progress drafts And there are probably a few more which are not mentioned here, the ideas that basically you want the source to be able to receive back back in the response, the information, which was in the extension headers of the forward path. So That's basically the general use case. Next slide, please. Okay. So when we say i ICMPV6 low back, what do we mean? So, basically, like I said, it's a bit similar to ICMP echo, So we have a sender and a responder. We can see the ICMP loopback request, which is sent from left to right,"
  },
  {
    "startTime": "01:50:01",
    "text": "And we can see that, basically, it's in blue here. You have the ipv6 header and optionally extension headers and so on. And in the reply, which we see on the bottom, Basically, the reply has its own IPV 6 and ICMP header, but we can see that the ICMP payload includes the blue stuff which is Actually, the request message at the top including the ipv6 header and extension headers if there were any. So That means basically in their reply message, we get all the extensions and options we had in the request. And Just as a side note, this is exactly how ICMP Hermes is work today. Okay. So that's that should be pretty familiar. For example, trace route works exactly this way. So it's not a completely different concept. It's just something that can work in a very similar way to echo. Next slide, please. Okay. So there was quite a bit of discussion on the mailing list, and I'm just going to point out 2 of the items that were discussed 1 point was whether the ICMP lubeck should be implemented as a different ICMP type or actually to 2 new types. or whether we should use the same type as echo and just uses different codes, different codes, And the problem the problem with using just different codes is that existing implementations, in some cases, Just ignore the code. and basically, the ICP echo reply will just be sent with the same codes that their request was received with, In some cases, again, the this is what happens in other cases,"
  },
  {
    "startTime": "01:52:02",
    "text": "the responder actually checks the code. So that was one argument for using different types, but this is still an ongoing discussion, and can resolve that on the mailing list. The other discussion also something that was mentioned today. Actually, it's related to amplification. Since the reply is longer than the request. it can potentially cause an which is, by the way, very similar to all the ICP error messages. as defined today. And, again, this is still under discussion. One proposal was to basically define this as a symmetric exchange where the request and the response have the exact same length. And, again, this will resolve this on the list probably. Next slide, please. Okay. So as far as we are con concerned, the authors We are ready for an adoption call, and Obviously, there are open issues, but they can be resolved after the draft is adopted, But I I think As far as we are concerned, We're ready for adoption. and I'm open to any comments or questions. k. Greg? Hi. Greg Mursky Ericsson. Thank you, Tal. for the interesting presentation. I have several questions. So as I understand, one of the use cases is returning IAM data to the sender of ICMP request. Right. So ROC9322 defines 2 flags active and loopback. And loopback"
  },
  {
    "startTime": "01:54:02",
    "text": "seems to be very similar to what can be achieved with this new type of message. Right. There might be some additional information that needs to be clarified or might be a new type of information being basically specified so that collected data along with the headers to be returned I think that might be an easier easier, and that will be more applicable because then it could be applicable to any use of IOM rather than just with ICMP. That's one my comment. Yeah. So just to clarify the difference between the loop back flag and ICMP, new back new back flag is something that you set, In the IOM header, And then Each of the transit nodes along the path sends a response. So that's too much information, TMI. So basically, when you own only want the response from the destination, The lubeck flight doesn't give you that capability. And the other thing is that The the loop lag flag is specific to IOM and what we're presenting here is generic mechanism which is can be used for any of the protocols we mentioned and also the future protocols which you know, anything that uses an ipv6 extension here that can basically benefit from this. Well, I would say that I personally see it otherwise. that ICMP is a very specific mechanism, and it's not applicable to for example, LSPping, whereas the IAM can be put on MPLS, then it will be applicable to MPLS. And IEM can be put on any other thing in applicable to that. So, basically,"
  },
  {
    "startTime": "01:56:01",
    "text": "I see it differently. I see that I am is more general mechanism that ICMP 6. Okay. Okay. And another thing is that I really Wonder, what's in the benefit of returning just without IOM because as you pointed as you suggested that The use case for this functionality is to return extension headers as received by their responder without IOM. So what's the benefit? Because I would expect that sender of ICMP Request knows extension headers, because it encapsulated them. do you see that there might be some modification of extension headers, So As we can see in the figure in this particular slide, When you get the reply, the reply in its payload includes the entire request including the extension headers and the options, including the IOM, all the IOM data and all that information insights would all there. Yep. It is the No. But it appears that you mentioned that even without IOM, This mechanism is useful. So I really wonder what you see as a benefit of using this mechanism without IAM. Greg, may I suggest that we take to the list just for sake of time because the gory is in the queue and we have -- Okay. ringing that. So I'm sorry for interrupting. Okay. I can just summarize. I don't see the benefit of this proposal."
  },
  {
    "startTime": "01:58:01",
    "text": "Hi. Gori Fairhurst. I've got transport questions against this because this appears to be a force that you can activate remotely that generates packets Lots of things do that. Is it rate limited? there a rate limiting Is applied in the rate at which you're going to respond on the return path. So, again, it's very similar to ICMP echo, and it's very similar to trace route. So Cool. So it will be very actually, The very same answer you would give to ICMP echo, you can give to to this it's just a different type, and and and rate limiting, the same the the very same question can be asked about ICMP echo. Right? Excellent. Please do that and think about the return path as being a different path to the forward one. also think about multicast because I'm a little bit scared when you say, do this for multicast. So because I think everyone will respond at the same time because that happens in multicast. just some transport considerations when you think about it. So Okay. Thanks. Okay. Thank you. I'm afraid we do not have time for if time allows Yeah. I'm sorry, but so I guess, at least one of the draft since the time if time allows category, discussed on the list. I put some feedback. So I encourage people to look at that agenda and read the drafts we didn't have time for today. yeah. We are sorry. We have full agenda. So thank you very much, you everyone. I will see you in Prague prep. See you all in prod. Enjoy the rest of your time in San Francisco."
  },
  {
    "startTime": "02:00:04",
    "text": "Yeah. Except for which might be easier Okay. Syncable for your fantastic. Yeah. You know, you got stable service, IT keep restarting. as the reload. page. I need to get one of those. creating the picture is beautiful, so I can know what by Amazon. well, 6 or some posts, so I can Joy. Thank you. Do you have any questions? Yeah. Pro. And then should I find the Good. price from dramas. So So when do you wanna start? cadith probably It's very well known. What? problem, and I I hope I described it. chloroquine, you do recommend using these to start my browser. I think it's and equity in demand."
  },
  {
    "startTime": "02:02:01",
    "text": "Yeah. I don't know if I So Oh, okay. Okay. Oh, wait. This is the wrong did not work for me. I don't know if it was her last time. So"
  }
]
