[
  {
    "startTime": "00:00:03",
    "text": "this last message. I just got the link in there. Okay. Thank you all for coming, everybody. So we're gonna start in a minute with a this got presentation from Jean. This is a presentation that Jean and I have worked on together. to be clear. And there are a couple of bits in there that I've asked to be in there. and there's a particular bit of terminology in here as well. living repo, which is a terminology that I've coined that we can there will be explained where we can choose different terminology afterwards. And then at the end of it, is the question slide that I would like to I'll then go back to after June's bit just to talk to you very briefly. and ask them to move forward on that. Unfortunately, Lars is busy So he can't come and explain the things that he was he's been thinking about this. but that's the plan. Has anybody got anything that they would like to say or discuss before we get on with this. Yes. I'm sharing a link to the hedge dot in the the chat room. It's also linked to on the the wiki, and I'll be loading the slides momentarily. Give me one minute. Jean, what chat should we be looking at? So Actually, that's a good point. I put it in the RPC chat However, I believe there's also and Zulip a another channel. Let me Let me double check this. Well, I the channel in Zulip will be RPC then. Yes. Should be. Yep."
  },
  {
    "startTime": "00:02:00",
    "text": "So that'll be the same one. So RPC zillip channel, Okay. Are the slides still loading? Oh, they On the -- We're ready to go with the slides. Great. Alright. So thank you everyone for attending. to discuss how we can use GitHub in all forty 8. So here is the note well slide. as a side meeting of the AETF. We also need to note well. And I'm sure at this point everyone has seen this. yet So our agenda is basically, to very briefly go through the experiments since IETF 114. talk about the goal, discuss what we want and we being different parties, the LLC, the RPC, the authors. And just start brainstorming. about how we can make this better. any agenda bashes. Alright. Okay. So Since IETF 114 last summer, we've had 4 experiments 3 were in GitHub, 1 was not. The agreed experiment parameters from 114 where that the RPC forks the repo does the work in the fork. originally"
  },
  {
    "startTime": "00:04:01",
    "text": "we had limited the experiments to we're just going to use work in XML. Although for all of these, they ended up being a markdown. And another limit was We wanted to work with very short talks. However, one of them was very And the details of these experiments can be found at this link here, which is to RPC Wiki. And If we've heard from the authors, we receive their feedback, and they've given us permission to share that feedback. It's also captured on those pages that you can get to following that top link there Does anybody have any, I guess, general questions about the the experiments. I I wanted to spend I want to spend more time focusing on going forward rather than talking about the these. But Richard, Okay. Sorry. After this one, I'd rather not take any questions on this experiment. I'd rather go on to the things that have been learned so that we don't end up, just talk about stuff that's coming up. But Yeah. Yeah. I just wanted a quick background question. to just just go one step back in history and ask how the the process that was following these experiments came to be. It was discussed at IETF 114. We had another GitHub workshop like this. Mhmm. and it was what the the group came together on, and it it's also cap insured. So the notes from 114 are also on our Wiki, and you can find them following that link. Thank you. tt Alright, our goal. is to find a way forward where Everyone is happy."
  },
  {
    "startTime": "00:06:02",
    "text": "Yes. Alright. Okay. So what the LLC wants Well, it's a happy community. And, also, once a faster and better RPC. So to to help with that, you know, a custom and controlled environment to maximize the output of the RPC staff and also minimizing the number of processes and environments that we need to learn and implement. And then, of course, we still want to ensure Our high standards are maintained. and what we want to do with our process changes is to make things better. Oh, oh, So I'm sorry. I can't see the the cue from from there. So I guess I could read from that. So Michael? So it was my recollection for 944 b, You asked us if we wanted to participate And after some conversation, including Richard, who I think is in the room, We said no. Is that not is that does that is that the correct record? That is that is correct. Although, Richard also wanted to to note that document as is an experiment so that we would collect feedback on it. So Okay. Okay. Great. Thank you. I just was like, I don't think we did that. That's all. Yes. Yes. Yeah. Yeah. Alright. So this slide is what we what the RPC thinks the authors want."
  },
  {
    "startTime": "00:08:01",
    "text": "So when you hear the authors want a better process than just email off 48. And we also want a better process. your PC does. We hear that authors want to use GitHub. We also hear that authors would like to maintain, say, a living repo for their documents. So and and what we think that means is that even after the document is published as an RFC, The authors have an expectation that they should be able to, like, jump in and create a biz document. fairly quickly if, like, issues come in or people spot arata that they would like to maintain their Depot so they can capture issues in the 2 tracker, and start working on perhaps a disk draft. Although, We also hear some authors will just archive. their, like, their repo after their RFC has been published. So as I said, this is what we are hearing authors want it would be good to to capture more of what authors what their expectations are. for the the repos that the the documents are in. after the RFC is published. And Let's see. Also, changes, tracking issues and basis of the disk document. I guess I would like to go ahead and ask here is there Other reasons? Is it just for Bistock? or in Trucking -- Yes. Sorry. Yep. Yep."
  },
  {
    "startTime": "00:10:00",
    "text": "I think you have a mic from him. Yes. Do you have a mic? Here. I would add to that that the repo is useful for being able to look at the history of a document. and to have the history essentially truncated prior to off 48. you end up with a divergent copy of the document. that does not match what's published, whereas if you reconcile all the changes back in, then the repo we'll show you for any given change, where was that introduced and why? And so it's it's useful as a history tool. Could you state your name? Mike Bishop. This is Richard Barnes. Yeah. I I just wanna add a little color speaking as an author to the why folks are interested in using GitHub because, you know, it's it's a tool like any other. Why do we find it appealing? I think there's a couple of things One is, you know, GitHub has is it it the workflows, it has built around easy reviewing of changes. And so it has diff tools and diff review tools that facilitate the sort of discussion that happens in all forty 8 in terms of identifying changes, accepting changes, rejecting changes, adapting changes, So that there there's those good review tools that folks that the working groups are used to. And I think that's the the second main point is that the GitHub workflows in many working groups are the tools the working groups are used to using. And so all forty 8. Right? You know, without a a GitHub based processes is sort of a jarring transition. You've been working on this document for years using one tool set, using 1 workflow. And now you have to transfer something completely different. to get it the last 2% of the way there. And so having continuity in the workflows on, you know, it really smooths things out and makes the process less jarring for the working group."
  },
  {
    "startTime": "00:12:02",
    "text": "one one third point to to highlight that another benefit of again, I've sort of telling into what what Mike was saying is that you know, another difference about the non GitHub OAuth 48 is that it it tends to be very opaque It's it's a transaction between the RPC and the authors, and there's no visibility. It's the working group at And so I think there's some value in the transparency of having things in GitHub and accountable and recorded. So you end up with log not just for historical purposes, but so people can see what's happening in the document. as it's being finalized. Thank you. Okay. So I'm going to be following the queue from Meatec. I So if you want to I'm speak again, please, if you could use that. So, Paul, over to you. I'd like people to be careful about saying working groups want, and people want individuals want. some working groups use GitHub extensively I'm about to You know, I don't like people speaking for other people, but I'm about to do so I have co authors who have said can you do this for me? I just just and I won't use the word 8. Gethub. I am a participant in Word and groups that use GitHub, and I'm and workgroups that do not use GitHub because some of the chairs really dislike it. So let's be careful about speaking for others, please. Thank you. Yep. if I can just respond to that briefly, you know, I I I don't didn't mean to claim anything about all all working groups. But I do think there is a a core, you know, at least say 8 or 10 a dozen working groups. that have a fairly common github workflow pattern. And so yeah. No. I I agree that, like, the our RPC has a challenge and accommodating the different workflow styles of different working groups. But I think there there is enough commonality to GitHub usage across a a pretty broad slice of the IETF that it wear consideration -- Yeah. -- and alignment. So if we can stick to the requirements before we get on to the solution a bit would be great. Robert, next page."
  },
  {
    "startTime": "00:14:03",
    "text": "So I think it would be useful, Richard, together that core group that you were talking about just to list the the working group names. I suspect that there are several clusters of working groups that use different workflows. and understanding the disc just how different those different workflows are will feed into what we should do. Right. Enter it? Yeah. No. That way? Yeah. So I I guess I would say two things. 1, I'm sure there are different workflows, but there's a there's a broad set of ones that are all using Martin's tools. those all have a similar workflow and post them on our installs. So I think, you know, we more than perhaps you could you could click to see what we can do to actually do but, like, you know, a a starting a starting list for a starting list for like what, you know, places that, like, are using common github workflow. is is is is MLS, TLS, quick, quick HDP, acme, you know, You know, base basically, the the the the think RTC web is is a little more is a little more over, but it says similar to workflow. I and analysts, I mean, almost right. So I'd be as a as a cock. Mhmm. The cop yeah. I mean, There's a common core to those people. Mhmm. The To this list oh, I I can now only see a barcode. But for this list of requirements, I think the Not quite reflected in here is a desire to see the LSC exactly the document at any given time exactly what changes are made So like when I get an email that says, you know, please review like, this please please review this thing. It's it's like a link It was it has different contacts in the fit link through the same link 2 weeks ago. is very hard for me to work with, whereas we get, like, exactly tell You know, exactly what happened in 'twenty and 'twenty b, and who made the change So, like, accountability for"
  },
  {
    "startTime": "00:16:02",
    "text": "and tracking and and discovery every single change of the document. there's a few very important also very important, by the way. since the answer changed to rating GitHub, it jerked about 48 so that when you like, come back to it, which I mean, like, Christine Happens. come. And when you and when you come back to it, you know, 2 years later and you're like, Why do we do this? be able to go and look. be like, this is why this change is made. There's a note for this change. And that's true for everything you do all over the working process. And so very important to be true for any of you after the process. great change. Is it possible to put the presentation back Oh, that's that's interesting. didn't go to sleep. Okay. Did No. He did you want to jump in then before I go on to the next person. I'm trying to bring the slide back. And so that was an interesting point about authors wanting to look back at decisions made in all forty 8 but not just the you know, the change between the ID to RF see, but perhaps from when the RPC is done with their edits to our our the that step when it's published. So okay. I don't I mean, just authors, by the way, I mean, working 6 what I mean is I go and I want to do abyss, and I'm like, this doesn't look right. And then I'm like, why did we do this? And I wanna go back and find out why we and you know, in a 500 200 base document is like not practical to remember So, like, it's I mean, you can say the authors, but it's, like, it's it's the the working group and the other this morning. Okay. So, Milan, trying to figure out the technical issue of displaying the slides. Okay. Jane, I'm gonna go to next personal issue. Okay. Go ahead, and I will. work on this. Great. Thanks. Carsten on to you. Yeah. I think what what I don't know who said a couple of minutes ago really is is important."
  },
  {
    "startTime": "00:18:02",
    "text": "So we don't all have exactly the same requirements on those last 2% of the process. the the requirement that we actually have is continuity. and all other requirements fail against that. So the the RBC, of course, also has a requirement But on on the annuity. And so jacentron let's do the requirements before we do the solution. exactly wrong because the solution is the requirement. Okay. Thank you, Carson. It's very helpful. Martin, Right. So some someone asked about how many people use get help for managing managing drafts. I don't have specific information on Working groups, I do have a list of 987 repositories. that use the Good Hub template. that I use, I could probably maybe work out what all of those were if I went through all of them. but there's quite a lot. So that'll give you sort of an idea of the scope of it. I'm not the only supplier of this sort of tooling. There's a there's a bunch of bespoke stuff out there as well. and I know that some working groups do that. So there's there's a lot about that. I just wanna agree with Karsten. I think that that that continuity. tied in with all the things that that I was talking about is is really the key. Sorry. Thank you. Robert? So, yeah, that gets exactly to my question. you know, they're even with the working groups that are using the the the template. The process that the groups use while they're using that template."
  },
  {
    "startTime": "00:20:00",
    "text": "how widely does that vary? I think that matters because Richard's point is it people are used to working in a particular workflow. Right? and we want to continue to work in that workflow through the off 48 process. Okay. And what I'm sensitive to is if we get into a situation where during off 48, we're going to be asking the RPC to learn 550 600 different kinds of ways to use the repo. Yeah. that that's look at that solution again. So let's or implications of these things. Let's just make sure we capture what people want. So Carlson back to you. Yeah. I think one one important outcome of this activity here needs to be telling the working groups how they should shape the process. So the the RPC transition in the end is less painful. So the the process that you come up with in in the warehouse and don't fall from the sky. So I think -- We sorry. It's awesome. Sorry to interrupt we just concentrate on saying what people want to achieve as authors rather because we've got some more stuff to talk about. it'd be very useful just to make sure that we have the full information of what we're trying to achieve before we get the solutioning, Yes. But I just had a comment that this doesn't work for 600 different processes. The the and and I and you you I've heard we shut that comment down as well. Yeah. honestly. Let we we've only done we're only halfway through what people want on this, so it'd be really useful get the bits done. So Okay. Does anybody else in the queue want to talk about this particular bit now? about what we're saying about what authors want to clarify or add to that list or anything like"
  },
  {
    "startTime": "00:22:00",
    "text": "I just wanted to to push back on the on the 600 processes point as well because there are there are not. Like, the the the core of the thing that is important is the one gethub, PR process, Right? Like, there may be some some, like, environmental around that, but, like, something comes in as a PR and can be processed through that, like, that's the core. And and what I'll know is, like, even if there is some variation, like, the current process has been aligned with any of them. So, like, any alignment would be better than than where we are right now. I mean, One thing to note here is, like, part of the reason that these working groups are using GitHub is to make it easy for folks to come into the process. And so you know, I think we can leverage some of that to to help bring RPC staff into the as well. Okay. Thank you, Richard. Right? So can we move on then, Jean, to the next Well, this bit and then on to the next one. Yeah. So what authors want? continued. All edits captured NPRs. And we've also heard PR's categorized by edit type and also approve every PR individually. So the the note down here and email all 48, It's like all the changes the RPC has made. available to review and are provided to file. And then the the authors can say, yeah, we approve all those and, oh, but here. Let let's tweak this here. So the all edits captured NPRs Yep. Yep. Yeah. The RPC, like, fixes bugs. in in the document. know, we fix typos. And we are were formatting and RFCs consistently. So we have a base set of edits"
  },
  {
    "startTime": "00:24:00",
    "text": "that we make that we consider to be No. they're not necessarily negotiable. James, sorry. That that with you're now getting into what the RPC thinks. So let's just -- Okay. Let's true. Alright. Yeah. I've I've skipped everything. So alright. So, yeah, the all edits captured in PRs and by by type. What I mean by that is what we've heard is that authors would want, like, a PR where, like, all the typos are fixed. and another PR where we have may be updated all the if there were any update to say cross section the sorry. The reference is Cross Raffes. Right? know, we change section 3dot 3 to 3.4 because that's actually where the text was. The the document was pointing to. So And then the every everything is a PR. basically. Okay. So So because we're we're almost halfway through, so I'm gonna speed us off a bit. So Martin, Yeah. Just just briefly, this is think analogous to the way in which people who operate in these environments for software. tend to like to get their pull requests. And and that is they they're like a poor request that they can review for a single sort of change or a single targeted section or or something along those lines. And I don't think the request is that it'd be broken down and a very high granularity the idea is to just make the the the change reviewable. Whereas some of the things that you you tend to see in all 48 is that everything is bumped in at once. and it it'd be quite hard to process. Whereas if you if if you have edits."
  },
  {
    "startTime": "00:26:00",
    "text": "that are specifically cleaning up cleanup white space or doing some reformatting. Each one of those separated, it does make it a whole lot easier to process. Great. Okay. Mike, and then that's the last bit on this, and then I wanna move on to next slide, please. Yeah. To add on that, I think there are multiple good ways of splitting it up that would meet that goal. Like, You might do a thorough copy edit of an individual section, or you might adjust the usage of a particular term through the whole document But either way, have it broken down so that A change one change makes one correction, and then it's easy to see that that didn't break anything. Right. Okay. Thank you. Should we move on please, Jean? Okay. So what the RPC wants We want consistent processes. We want consistent structures. would want the the repos to to behave consistently. And I think in terms of, like, the next 10000 RTSCs. if Things are ad hoc, that becomes difficult to to maintain, to to move quickly and efficiently through. So we would like to specify a branch management process for our own internal reviews of our edits. because we have multiple editors working on the document, And we would also like to use processes like specific labels to identify the the next step or action holder. And these concepts were captured. You can follow this link. We have a repo template."
  },
  {
    "startTime": "00:28:04",
    "text": "So and the the general process is captured in the read me. And so we do have concerns about shifting processes. The when when talking about working in repose, the the the some things could create extra work for us. during all 48. It's If the repo is been active and worked on lots of contributors, and we're trying to manage an auth 48 process. And Oh, who is this person who's come in with their own full request or commented on an issue or open their own issues. Currently, the Alt 48 process is it is focused. It's limited to the authors. We call in the the AD if we have any concerns about any tech changes that may have been may have happened if if wording changes So the current process is very we do limit the the participants to the process. And current generally, GitHub is open. Another concern we have is the we're seeing here the atomization of PRs. Like, there are so many open But for waiting for the authors to approve, because we were hearing they want that authors want things in in in small pieces Over large documents, that's gets hard to manage The and another thing, the"
  },
  {
    "startTime": "00:30:02",
    "text": "the multi author approvals for each PR. So currently, the way the process is, and we do say this in the initiating email. is that first author to speak up, on our questions. we incorporate their feedback. And if it co authors have any concerns or wanted to make additions or changes, then they would speak up. and to go with a a PR process where every every author Everyone approves That's just slightly different. And it does slow down a bit. because we do see with the email process that you will have when author take lead you know, provide all the feedback. And then the other authors just to sign off at the end with HIPAA. looks great to me, and and we're done. And, also, the just blocking of what I said, the the bug fixes. It's like We we want to make those changes and get those changes into the document But if it's in a PR that's blocked for other reasons, that's that's frustrating. So those are some of our concerns. Okay. let's let's let's just do this last one about the audit trail. I think, I think, we can probably take this one as red Let's skip each person has just a quick chance to read and understand this one. And then let's go on to the questions because we we've been the need to you know, I was hoping we'd have half an hour discussing potential solutioning. if you're okay with that. Yep. Yes. Yes. Alright. So is is there another one after this more of the RPC once or not? already covered these. Yeah. That's These are I I've Yep. Okay. So here's our summary. of what we think everyone wants. Right."
  },
  {
    "startTime": "00:32:00",
    "text": "Okay. I think that we skipped those last two slides, but I don't think there's anything particular complicated, and now I hope I've got all got that. Alright. Actually, I do on the last slide, on the last slide. Yep. About non author contribution Lovely. Okay. Well, we just wanna reach with your first name, Kewso. Okay. Thanks. Yeah. So I just wanted to contribute a a little anecdote here where that go goes a bit against avoid avoiding this totally, and it can highlight the value of of more transparency. So we were doing the MLS off 48 big documents. lots of kind of through going changes in off 48. And there was one instance where I think it was using those super script tag instead of, you know, Carrot. RPC suggested the 3 growing change. I implemented it. as an author throughout, and several instances, incorrect applications of it were found by are working group participant who just reviewed the PR. Albazone accord and save those errors from slipping into the document. So I I think I think it's there can be value to having a few more eyes on the process. and that that weighs against the risk of of more churn Mhmm. Okay. Great. Who's Nick's in the queue. Paul? So 2 things. 1, the reason I put my hand up was I've been on a document in the last few years where the AD and this was using the traditional thing. the AD threw something in in email that we didn't notice that screwed the document. Fortunately, during the very last look at one of the co authors who hadn't been participating at all did a diff and said that's wrong, and then we realized it was wrong, and then reversed it. So when you're talking about authors, 00 and sometimes the AD, that sometimes the AD is super important. So if you're gonna be making a list of who can and can't touch it."
  },
  {
    "startTime": "00:34:00",
    "text": "that's a reasonable thing. going to Richard's, common, I think that it is good to have transparency and I would like it even in the email ones of what we authors changing. because sometimes, there is you know, the RPC finds something that is badly worded We look at the new wording, we go, okay, that's whatever. But we actually have have improved the document in a technical way. the working group doesn't see that. I wouldn't mind it seeing more. But and this is where I'll discreet with Richard I would want that to be funneled to an author to deal with in GitHub. No. No. Yeah. No disagreement. I think you'd sort of get that if you have an author approval base process. Yes. Okay. I just wanted to make sure that that it that If we come to something, whatever it is, GitHub or whatever, where there's a lot more people watching. I still would like that to come through authors. only so that not only so that an author has vetted it, but also to make the RPC's life better. Right. Thank you, Julian. if you could go back to slides okay. And one more Yes, sir. So I think that slides kind of conflates the technical aspect with the process aspect. because the question whether all also have to agree to a change or not does not really have to do anything about whether we use GitHub. So we should be careful about discussing the changes to the actual process who has to approve what And how will we do that? That's all I wanted to say."
  },
  {
    "startTime": "00:36:01",
    "text": "Okay. Thank you, Julian. Elliott And so you have what authors want. You have what the RPC wants. We probably need to step through what streams want. in this regard. It it we have a there there's a column missing, I Now I don't think the independent stream has terribly demanding wants, but it's probably worth you know, stating, okay. Well, the one thing I do want is to make sure I have the ability to do final approvals, as I do today, I think the IETF usually foregoes that. but I don't know. I I haven't followed its stream process in a while that might have happened in the background without me realizing it. I don't know what the IRTF stream policy is. In that case, And there might be other things that are are useful to track. Like, what happens if an author's if something's in the r a RFC editor queue. I know Robert's in the process of making this change where or or is proposed making this change where we don't handle where where where new drafts require manual submission once they've been approved. well, well, Okay. Instead of a new draft at that point, are we talking about a PR? perhaps maybe there may be things that might happen in between you know, final approval and in editing, final approval by the you know, by a working group with the ISG, in editing, for example, or in my case, Now I've I've approved the 5742 response, and I've sent it on to to the RFC editor queue, for instance, So I think we probably need to just step through what"
  },
  {
    "startTime": "00:38:00",
    "text": "streams need just a bit more as we go through it. I'm not saying we have to do at once, and I I I'm very happy for this to be an iterative process. Thank you, Elliot. Martin, Yes. So Jane raised the point, that sometimes the the process that they've experienced is a little awkward because of the way that it takes up more time to to break the poor request down into smaller chunks. And at the same time, one change, that's that's potentially contentious or or under under question in one of those changes. often blocks progression on on these things. think those two things are in direct ten tension with each other. And to some extent, a little bit of discretion is necessary and probably a little bit of experience with just running through the process. I think this is one of the things that most new con contributors to to projects like this tend to experience. Sim simple things like expectation on the part of the authors that that simple simple typo fixes and and commerce. It's worth commerce for me. those things just get merged by the 1st author to to go through and check that there's nothing nothing crazy in there. Those those easy poor requests. can also be easy to to progress. It's the it's the substantive changes that require little more thought and I I think my experience with the RPC classically, is that a lot of those trickier changes tend to be called out individual individually as questions. If those individual questions were individual poor request, that would make it a lot easier. to manage. So you would say, question 1, I see this test this text is text is a little unclear, do you think that this would would be a better alternative that text is the poor request. we're done. at that point. and"
  },
  {
    "startTime": "00:40:00",
    "text": "so the comment of the call request says, I thought this text was a little unclear. Here's an alternative. and and then Sometimes those are a bit contentious, because as Paul points out, you often discover that the authors really didn't know what they wanted to say, and you have to go off and have a bit of a debate about it. But at least then you've detached particular problem from progress on on all of the other things. And the other thing is if you do find that there's a large poor request say say you're redoing all of the references. is one of the things making sure that their sensible. And one of them turns out to be wrong. possible to revert It's a change, a change, during the edit of a PR and then pull that out into a separate change. to unblock progress if that's a problem. And I do find when we're talking about these sort of large systemic changes that go from the top of the bod document to the bottom and affect a lot of things. Those ones tend to be the the ones that you really do wanna get unblocked as quickly as possible because then you have merge conflicts and and and no one's happy. And and so I think there's gonna be a little bit of learning on both ends for for these things partly because of the nature of the types of edits. that we see during all 48. have they do tend to hit lot of a lot of parts of the document. So I need need to work through that. Thanks, Robert. Elliot brought up that it might they having a an explicit analysis of stream desires. would might help. I would suggest that we also have a separate list of wants that we look at from the working group participants who are not authors, Right? And to understand whether or not"
  },
  {
    "startTime": "00:42:02",
    "text": "and and and we might also want to have a do not want Right? And expose it do not want. thing. I'm I'm sitting here thinking through the situation that that know, some working groups that I've shared have had people that were you really in the rough and unhappy with the way that consensus had formed, unhappy with the consensus. in particular and would waste no opportunity to attempt to relitigate anything. that you know, they were unhappy with. and the discussion we're having moves the opportunity for, you know, bringing up relitigation as comments in a PR. and, you know, there's some not something that the RPC needs to be dealing with? You know, how do you how do you get chairs to, like, shut that down or control it or whatever filter Yep. Okay. Lars, Right. So so Elliott said something about the stream needs, and I'm sort of trying to think hard whether my stream, which the biggest one has any needs. And and, really, the only thing that I can come up with that an overlap with something that's already there is that we need in in IPC process at the end of it that sort of maintains the integrity of the standard process. I mean by the start yeah. But, you know, with before and during the ISG, phase. Like, doing the IETF phase. everything is in the open mail list, there's audit trails, all of that. Right? and and the sort of, I guess, silent agreement was always that once the PIN is handed the PIN on the document is handed to the RPC. Right? the the IPC is sort of the largely the source of improvements to the document and that the authors sort of check those off to make sure that the RPC is doing a good job. And the a d's job is to keep an eye on whether"
  },
  {
    "startTime": "00:44:00",
    "text": "any changes that are being discussed stray into changing the established consensus in the document and by with which term word. If that happens, they would need to pull it out and pull it back and say, know, either we need to, like, rerun the process or you know, have some other way to involve the group again to reestablish consensus. We typically don't then reestablish IETF consensus, which is little bit weird, but at least sort of that's what we try to do here. Right? And so that is, I think, what the the ITS stream at at least wanted here. the LLC, I guess, also, for legal risk perspective, would like to have this audit trail probably more so than the RPC. Right? Because in the end, right, it's not the RPC that's gonna suit. It's the LLC that's gonna get sued if somebody suspects that, you know, something happened during the final stages of the publication process. So all that said, right, I wonder if if we can actually sort of try and make some progress, but to see if we agree on some sort of high level principles, like, So one one consequence of this, like, they we always had this transfer of the pen where the authors you know, handed the document over and the RPC took the pen and the authors then became more like reviewers. that has sort of changed with GitHub. Right? Because now it's a much more of a code model where especially have your biz draft in mind and continue at work. on on the specification. Right? in the past, you would, you know, use whatever document you had and you started a new one. but I I I do see sort of this this explicit handing over the change control from the ITf/theworkinggroup/theauthors to the IPC instead of a I don't wanna say required step, but as a pretty clear step that you know, it's changes cannot happen anymore without due diligence being run by sort of a neutral party here. and and I think that is sort of a a concept that I like, that I think has value in it. It addresses the legal risk, the LLC, it it makes it clear that nothing can"
  },
  {
    "startTime": "00:46:00",
    "text": "nothing should really technically change in terms of their consensus anymore. Now I wonder if if, you know, This might not be what ends up being the principal that we agree on, but I wonder if we can write down a bunch of things like that that we kinda sort of all thing. Those are sort of fundamental, and maybe we can agree on it. And then maybe we get something from there. Great. Thank you. So I've temporarily locked the queue because I want to just pause and go through something at the end of this queue. We've got 15 minutes left So if we could try to make sure we've got a bit more time at the end of this to carry on. So, Richard, I'll I'll I'll be real brief. I just wanna push back real briefly on this idea that we need to do some big survey of what all streams 1. Like, the idea here is not to have, you know, some giant uniform that covers everything. Like, the question here is do we have a sufficient critical mass of working groups using a common process that it's worth adapting some RPC process to to fit into that. And and so, like, it's If, you know, if there's some adjacent stuff that we could cover, great. But, you know, if the IAB wants completely different thing. Like, it's not substantive to this discussion. We if we have a critical mass to do some other thing. Great. Thank you, Richard. Yeah. sort of a couple times as your type of fixes, sort of mandatory type of fixes have been mentioned. I guess, I I don't disagree with these things to be repaired, but think they but I think it's actually quite important that they be reviewed in detail. because not not infrequently, one discovers that, like, was the text was unclear on the type of text. It resolved that unclearity in a in a way that was actually and or or or or find some other error that was in the original text, I think it actually is, like, very important that they'd be called out individually. But as Martin says, hopefully, they can be resolved quite so So I just like you know, I think that that that the the nature of the process is that, like, every single change is we we usually better authors questions how we streamline that change changes as fast as possible. Great. Thank you. Mike. Mike. Hi. Oh, Mike Bishop. I just wanted to go back"
  },
  {
    "startTime": "00:48:04",
    "text": "something that you had said that the the RPC also has multiple editors simultaneously working over the document. and that's the same sort of problem they get hub is trying to address. what tooling do you currently use internally to handle that? So it's not simultaneous. We do multiple passes. So we are exploring using GitHub is a way of working having multiple editors working simultaneous in the dog. Great, thanks. Mike, did you want to carry on? Not not not Thanks, Paul. So, I'd like to follow on with what Lars said in turn it into a requirement that And I I think this can be pretty succinct, which is there are times where the input to edits, either suggested edits or accepting edits. are limited to certain people. So at the handoff front in the IETF stream, from the IETF to the RPC at that moment I would say as a solution, literally no one but the RPC are allowed to do poll request. and such like that. if someone desperately has found something or whatever can go in as an issue. at some point, then there is a different group of people who can put in -- other than ERPC, can put in pull requests or accept pull requests at some other point there is one. And then I'm assuming large you would want at the end that the last person who can do a thing would be the stream managers designee, which in this case would be the AD. So does that sound like a reasonable requirement for whatever process is is brought in. So, like, quickly jump. So I I don't think"
  },
  {
    "startTime": "00:50:00",
    "text": "so so I can imagine a case where it's actually useful for an author to suggest the PR. Right? We had a case now with the Keurig document where, like, some one of the authors said, you know, we need to change MSS to SMSS. And then They might as well, you know, if if because and we needed to check every single occurrence to make sure that this is actually a correct change. Right? And they might as well have done the PR at that point, and then the RPC could have just taken that on rather than doing that work themselves. So I but I but I I I don't see a strong reason for anybody else. other in the authors and and the RPC to sort of originate changes. And and if if something comes up because somebody in the working group also looked at, you know, the the the archive. Right? That could that can be escalated through the AD somehow. But in the general case, right, I would assume that it's those parties, and and the AD frankly also shouldn't be the source of changes. Right? Right. So so okay. So so did that be requirement Okay. not necessarily the actual requirements I gave, but that there is limited at various steps as to who can put something in. just for the sanity of the RPC, if nothing I mean, for the IETF stream, I would say, that that that is actually probably a requirement because it's not a community discussion phase anymore because if if we turn off 48 in like, get another last call type activity. Right? We're not really gaining anything and then we need to moderate that somehow and and consensus call things and that seems overkill. So if we enter into the realm where that sort of thing is required, I think that's a pretty strong signal needs to go back into the IETF process somehow. Great. Thank you. Erika, did you wanna jump in on this before I say something? And"
  },
  {
    "startTime": "00:52:18",
    "text": "Edgar, your mic is all. Sorry. It just doesn't happen. Right? So -- I mean, going going back to the 2% Like, the document's been through 98% of its lifetime. It's lifecycle with Rando sending a pull request getting filtered through authors and filtered through chairs. like, people are used to to managing whether stuff goes in the dock or not. And, like, if you need a little bit of extra sensitivity at the end here? Like, great. But that's still like, within this process of of managing what goes in the top. Okay. Briefly, Lars, if you come back and then I'll No. I'm I'm okay. I'm I'm still trying to make up my mind here. Right? Because I'm I'm I I can see the value in what you're saying. Right? I I sort of worry about cases where then an AD does need a sort of step in because it's not you know, Somebody needs to decide whether this is like a technical change or a a a a editorial change whatever you wanna call. Right? And and that is done creating creates a stronger role for the AD maybe, but I I don't really know. Right? It's high talk about this in the abstract. Yeah. I I don't think we disagree on, like, who is in who has what authorities I just think that we don't need technical tools around I'm mostly worried about the workflow for it. Okay. Can we can we -- Okay. Can we come back to okay. So I'm gonna just go forward a couple of things first. so that you're all aware, the RPC are having their tool chain completely rewritten. So that will then enable direct support of GitHub coming through the editing tools in a way that's never happened before. What that looks like we don't know yet. The second thing is I'm just gonna jump straight to a little bit So what I've heard here in terms of people's concerns about learning processes, and the the the different processes that people want. This is leading me towards an"
  },
  {
    "startTime": "00:54:00",
    "text": "saying that we need to have a single IETF repo structure, which is used right the way through through working groups and others that also does what the RPC needed to to do. at certain point and has the RPC tools within it because it no. because if not, then what we're talking about is having 2 different repos. One with one set of tools and processes and one with another set of tools and process. and bridging the 2 together. So I'm gonna unlock the queue now so we can go back to this, Richard's in it first. Go ahead. Yeah. So so, like, I think I think a bunch of people were having negative reactions to your one true yet for ourselves. I I I think the assertion here is that there there had there is an emergent it's fairly consolidated process that covers a whole bunch of the ATF. like, Martin and I would be happy to documents what that looks like and how broadly it's used. Yeah. And so I I I think the idea is is to just kind of have more productive engagement that sort of process. And and that's that's my my personally, my main concern as an author is to, like, have engagement being more productive. And, you know, I it's not really my business, like, how the RPC gets -- Okay. So if if the RPC has as I described a number of people nodding, they have their own repo that have their own processing things, and we bridge the 2 so that all of the PRs and stuff goes across so that we maintain the authority and the approvals and things within the RPC 1, so the authors are doing that. something that you could work with. Yeah. Yeah. I mean, I I think the way I would probably zone, like, other people may have good opinions here as well. It's like the the it it's it's it's probably natural for, like, the RPC to fork the working group repo And it Well, no. Look. We're specifically talking not a fork. because we're talking their own processes their own structures. We're talking the content Yeah. Yeah. So so, like, The RPC can you know, GitHub has this notion that you can take a repo and, you know, push it you have have another instance of it Yeah."
  },
  {
    "startTime": "00:56:00",
    "text": "whether it's a a for her there's some tech technicalities, but, you know, you can make put put it in their in the RPC's own context in which they can do whatever labels they like, whatever change control they like. Yep. and kind of have little RPC world to do their process, and that can be a good way to handle multi editor processes and and things like that. That honestly don't care about. Whatever happens in RPC world, like, whatever makes you all happy. but then, you know but if you do that as a fork in a fork or or, you know, a a copy of the It's a clone of the fork. Yeah. Let's see. Yeah. I I it it You could do it either way. Right? But there's there's benefits to both. ultimately, you'll wanna fork to make the PR. Right. Right? But if you're if you're doing it, you know, starting from what the working group had. Like, that'll just make it simpler to to contribute things back once once you got the things in in a good sense. Is is there anybody that doesn't agree with this? By the way, the one repo to rule them all, I thought stupid idea, and I'm glad I've triggered you into this one. So good. So Is there anybody who doesn't agree with this and doesn't agree with this as a bare bones potential way forward? one wrinkle here that I wanna make sure -- Sorry. The 2 the 2 -- -- that we cover. the RPC 1. Yep. Go ahead, Lars. So so the wrinkle is that I think is there an assumption that the RPC would edit the XML. Because if they basically, you know, work on what the working group gives them, in many it will be marked down. and it would be helpful for the office when they review the diffs if they could basically review it as markdown. And and I think that is sort of I don't know if we have to touch that or if it goes too much into the details, but I I it it ties into this because a lot of the GitHub drafts are gonna be marked on Yep. Yep. I think that's definitely I don't think it showed up on what alters 1, but, like, I editing in whatever format the document's been edited in. So it's a big one. and and they are going to have to edit the XML at some point. It's not It's impossible right now to. But yes. They need to switch at some point. But this is whether they switch at"
  },
  {
    "startTime": "00:58:04",
    "text": "at handoff or -- What yeah. -- if they do editorial in markdown as long as they can and only when they get to a certain stage. Yeah. Okay. Right. We've got 2 minutes left, so I'm just gonna check people in the queue if they have anything they cycle So given the summary of wants, the Working group is done and does a you know, with their repo and does a handoff, as long as the RPC doesn't nuke their repo at the end of this, I believe all of the wants. are met. No. No. Oh, thanks. The the working that doesn't hand off the repo. Sorry. We're working hands off the work. The RPC puts it in a repo either with fork or a clone or whatever. Yeah. Yeah. Yeah. RPC does their stuff as long as they don't nuke their own at the end than we get. you know, the history and such like that. So I think that that work And then when do if the work group wants No. Sorry. So just just to recap what I what I intend say was, like, at the handoff, the working you know, the RPC pulls their the repo into RPC World. Whatever happens happens there, I don't think we care all that much about tracking history in that space. And then once the RPC has done their editing, they contribute it back to the working group repo, and that's the transparency we care about. Okay. So there's more to discuss here because I don't know if they hand it off the working group rooms the Well and just to be clear in one another and very, like, I think this RPC World repo, like, that's the RPC's business, and should never be sending it off to us. Yeah. But, you know, what Paul said, it's whether whether the the working group pulls it back So it's where the where the approvals take place. in that. Okay. That still needs to be resolved. Right? Sorry. Mike, briefly. Mike Bishop. So I think there are really 3 distinct phases here, at least. There may be more. The first is when the RPC pools,"
  },
  {
    "startTime": "01:00:02",
    "text": "Takes what's in the repo from the working group. and they start doing their edit pass and proposing PRs. And maybe some of that is done completely without the involvement like it is today, maybe we pull give the authors access to see that repo and start reviewing PRs as things go instead of dumping a bunch of PRs when the RPC is done. But there is a phase at which the authors and the eighties have access to that repo to review. then when the process is complete, that repo can be used to generate a PR back to the original working group repo to preserve all of that in the original document if the working group wants that. And if they don't, you don't have to do that. So I think making a fork, restricting access to that fork so that it's read only to everybody the people involved in off 48. and then proposing a PR back at the end once everybody they're over time. So I think we need to capture that, though. We do need to have a document about this. So, Jean, is there anything you'd like to finish off with otherwise, I think we're in a position where we have a rough agreement, and we need to documented documented. chain, Now I just want to say thank you to everyone who came and anticipated and offered their insights. Yeah. Happy to know. I think those of us who've been engaged on this or would be happy to to dive in and help document stuff. Correct. you, everybody. We're all done. Thanks. Thanks, Jay. Thanks, Jean. See you guys."
  }
]
