[
  {
    "startTime": "00:00:08",
    "text": "okay we\u0027re going to start in a minute or two the first thing will be to get a jabber scribe and a note-taker can we get some volunteers please thank you rich but you will do jabber looking for a note-taker thank you okay are you gonna do it neither paddle okay so anyone who wants to help please watch the etherpad okay the blue sheets already going around you could set one clipboard please make sure it sees both sides of the room [Music] okay first as with all ITF gatherings please note the notes well we discussed these volunteers thank you yes one of the three suit co-chairs could not be here today he is available on the leader Cove we look at history this was the agenda we discussed on the Mentalist is there any fashion off this agenda so since we met last time we adopted an architecture craft and information model craft who received a liaison statement from I to UT study group 17 regarding secure update about UT software we\u0027ll talk about that more in a minute and a hackathon project related to suit one on it\u0027s Saturday and Sunday and of this week at the Montreal we talked about "
  },
  {
    "startTime": "00:03:09",
    "text": "possibly having an interim meeting the cherubs did decided not to pursue them in our meeting because internet perhaps we\u0027re not meeting updated so if you\u0027d be seated that we had enough to talk about so if we want to pick up the pace here please authors need to be driving work yeah they\u0027re right some with one annotation here other than one annotation this is the slide that we put up last ITF right so all the rad and stuff is the things that we discussed at IAT f-102 and so we had agreement on those although there was this question question question if you look at the Charter milestones that are still posted online they haven\u0027t been updated to reflect this yes this is actually the more authority most authoritative version is what was on the slide of hf 102 the annotation is in quotes there in the question question question line that\u0027s from the minutes of IETF 102 which says sure it will work with JD to add architectural milestone because when we guess the group the group didn\u0027t have strong opinions on it and so as chairs we said we\u0027re going to figure that out after the intro meeting and as Russ mentioned we didn\u0027t actually have inter meeting to discuss the documents and so we still haven\u0027t been able to come up with what the right date is for the architecture document and so they\u0027re still on our to-do list as soon as the architecture document is updated then we can actually fill that in and work with our 80 so that\u0027s our update if you see the March 2018 is in red because we haven\u0027t adopted any manifest serialization formats as working group items yet but we have three individual submissions and so that\u0027s part of the point of the meeting today is to focus so far we\u0027ve been focusing mostly on architecture and information model and they our main focus is going to be the manifest serialization formats and at the end of the agenda you\u0027ll see part of the question is how many methis formats we will adopt because our Charter allows us to decide whether we threw it out without one or more than one we\u0027re allowed by charter okay and so we\u0027ll have some presentations about that and then we can try to figure out what the right date to replace the part in red is okay otherwise you can see the submit manifest information model as information as July 2018 that one is now a bit overdue but we think that we are close ish but we had a bunch of discussion IETF 102 that had some changes that have been made yet and so we don\u0027t know exactly how close we are but we think that there\u0027s not large open issues this text needs to be done okay are there any questions on the milestones that\u0027s just are somewhere of where we\u0027re at if you have other things that you think Mia\u0027s chairs need to be doing let us know but otherwise that\u0027s the update "
  },
  {
    "startTime": "00:06:10",
    "text": "on the milestones and we will get the posted ones updated to reflect what\u0027s on the screen here there\u0027s no question I\u0027m going to stand up okay so the date was but a bottom two months ago maybe we\u0027ve gotten the A\u0027s on from itu-t standard 17 as you may recall we got only a sign from them and not something like six months ago which we presented in a previous ITF meeting and so this was the slide that we presented then or I presented then summarizing what was in the liaison statement fan okay back then they did not send us the actual document they sent us a liaison statement that summarized some of the things that were in the document okay and that liaison statement it defined four terms the terms again this is the slide from the previous IETF where we talked to this okay it set some context the these are the four terms and what we did is in the discussion which we had first in an interim meeting in at the face-to-face meeting we said does it make sense for us to copy these terms and use these same terms in the architecture document so that people familiar with both can actually relate to see how they relate okay and they\u0027re working here at consensus at the time it was that yes that would be a good idea to try to reuse terms where we think it makes sense and when we talk to it we said yes we thought it made sense and so we put these terms into the architecture document where they appear now okay I put two of them in red because in the liaison statement now okay I want to show the deltas the preference in black is basically no change from their document because this time they sent us the actual document for us to review okay and so that\u0027s now posted on the liaison cracker and so that\u0027s the URL if you want to read their full document it\u0027s about I don\u0027t know 18 pages or something like that you can find their actual document attached to that liaison there so anybody and they\u0027re working to can read it which was okay yeah all right this is what they\u0027ve changed so in the last six months they\u0027ve had a number of discussions that I\u0027m going to explain based on my reading of that 18 that\u0027s okay document okay so the one of the bullets on the previous site that puts in the previous slide are the ones that are struck fused a device core is logically renamed a firmware consumer okay as far as I can tell the meaning is identical they just changed the name okay the second thing that they did was in the previous slide I go back let\u0027s see status tracker and communicator and the previous slide right the communicator was something that may or may not be on the device and it\u0027s what keeps track of the status of the device and it initiates the update and so we said in a tiny tiny constrained device it might not be resident on the actual microcontroller it might be something that checks the microcontroller and initiates the update that kind of thing and the status tracker was something that was not on the device but tracks the status of the devices under its administration okay they both had similar well similar roles "
  },
  {
    "startTime": "00:09:10",
    "text": "one was on the device artifically near the device and one was somewhere else potentially in the same location as a firmware server there\u0027s the finest for different roles that they could in theory all four be on separate physical devices okay go on the next one so what they did not show their diagrams here as they said this notion of status tracker and communicator this functionality that they\u0027re doing are so similar that it makes sense to combine them into one firm where that term is more flexible and will show you in the diagram so what they did is they combined the definitions of status tracker and communicator into one conceptual role that\u0027s still called status tracker okay those two were combined and then they had various diagram so I\u0027ll go on and I\u0027ll show you so the other ones are the same because the overall question at the end of this is should we now map for their updated thing so I\u0027m going to walk you through it you know a full screen on this one yeah there we go okay so this so in this working group we don\u0027t do protocol procedure but at L in our architecture we talk about how the manifest format fits into a larger architecture they also don\u0027t do any protocols but they do try to have an architecture diagram that says how things fit in and they point to people like us for the actual technical details so this is their architecture that shows how things happen okay so here\u0027s the four roles at the top now they added an author role which wasn\u0027t on the original list right that\u0027s whatever generates the firmware event that\u0027s another role that we kind of have but was something there from the original list right the author puts a firmware image up on a firmware server okay they had a status tracker which may or may not be on the device that check status the firmware consumer is the actual device right the the firmware consumer is the thing that\u0027s running it that the the stuff that needs to be installed or compete the place okay so it checks the status checks the need for an update initiates the update goes and grabs the firmware image from the firmware server and so on okay so here the status tracker is not shown exactly where it is because again it could have been on the device or not on the device so this is the overall flow that they assume is true in whatever protocol that you\u0027re using and again they don\u0027t define the protocol this is just the overall flow stick on to the next slide all right here we go so this one illustrates one of the reasons why they come by okay so here on the left side is showing a devotee device a with a status tracker inside it okay I remember there was two types of status trackers in the in their original terminology the one that was potentially on the device and the one that was somewhere else maybe close to the firmware server okay this is showing a case where there\u0027s a status tracker that\u0027s inside the device so join that case and it\u0027s showing another case near the bottom there whether the status tracker this near but outside of devices B and C okay so it may or may not be on the device okay and so this is showing other roles the author and the firmware server okay okay there\u0027s a more complicated one that shows the status tracker here I didn\u0027t include this diagram and it\u0027s there in the document but the status tracker that\u0027s inside in the middle left there "
  },
  {
    "startTime": "00:12:11",
    "text": "that one is conceptually sitting over here and they have more complicated ones with this change status track is one status track of the tracks another one and so on they said there\u0027s this general functionality to track the status from something else which could be a defer more consumer or in this case you can see how the status trackers are chained right this status tractor checks the status and this one these two rights here were the ones that previously had the different names okay they said the role is the same it\u0027s checking the status of something on that something\u0027s a firmer consumer at the center there it\u0027s another status tractor so they just change these to use the same name because it\u0027s motion tracking the status initiating update they said that\u0027s similar enough it doesn\u0027t make sense to use two different terms for that okay given that this was already possible to not be on the device okay so this notion of chaining is the discussion they apparently had and that\u0027s what led them to say we don\u0027t need for terms for if you only for the original terms we don\u0027t we only for three of your regional terms so that was the main difference in what their liaison statement was ranked here\u0027s some work that we\u0027ve done over the last six months and this was the main change that they did with this terminology change and the architecture shot here okay so here we go it still intentionally does not define any protocols or formats in fact they explicitly in their document reference us here\u0027s the quote and their document it says note that the IETF suit working group is currently working on the format of manifest and firmware update procedure using the manifest okay that was they\u0027re not saying you\u0027re not going to do the work they\u0027re explicitly looking to us to do that work it also has references to two other documents or two other things activities and explicitly rash references the IOT security update workshop and it explicitly references one end to M at examples of other other work in this area that itu-t sub-17 is not going to do because these other groups are already actively looking at this this does their document does in fact design requirements for each of those roles right the status tracker and some were concerned the clients here\u0027s the requirements for those okay now my reading feel free to read it yourself my reading is that their requirements are consistent with our requirements that we have in our architecture and information model document okay unless I miss something I think that they are consistent it just phrased differently or whatever but I think that they are indeed already consistent I couldn\u0027t immediately spot something oh yeah here\u0027s something we need to address on it it would be great if we had a volunteer to do another check just to verify that - a key ideally one of the authors of the architecture and information on lockets okay but that was my personally yeah but they do seek a community key thank you very much for discussing this I am the first extended gears on statement and I\u0027m attending suit every time so in the previous question suits people said that you want to keep alignment the terminology I isn\u0027t that so from outside I mean I\u0027m talking from IT design I decided to keep track on suit and try to "
  },
  {
    "startTime": "00:15:13",
    "text": "keep consistency with you and also on Christian Excel is in the previous meeting you sit instructor before I go a lot of the term but he made it but he added and maybe personage who said sit instructor was not a main component of athlete a draft at a time so I do TSI ecstatic to develop more upon that sits say the trucker but if the director is one the main focus of this wacky group I would prefer to discuss here rather than there so I am looking forward to the discussion how it goes and reverse the speaker is the author of the vision statement yes and also the drum as well yeah yeah yeah so if you have technical questions we ask him so thank you okay so I guess I should ask besides the two of us can I get another volunteer to read the document and look for anything else that we might actually want the change in our document since there wasn\u0027t anything raised on statement says here please change this hey Hannes thank you for the great again more people confirming that it\u0027s already consistent is good thank you all right so the here\u0027s our three questions there are similar the questions that we asked at our inter meeting when we reviewed the first interim state first gaze on statement but I\u0027ll ask them explicitly should we update our architecture document to be consistent with a set of group 17 document currently we updated it to match the same language as in the old liaison statement should be updated to match the new terminology that they have and it\u0027s the first question okay I ask that right now I see one person who\u0027s an editor nodding okay is there anybody who thinks that we should not update it hey I call that consensus because I gave the specific Rapoza with no objection so let\u0027s go forward of that hey number 2 yeah yeah please I hope you say one thing at the time gonna see from our side it\u0027s not perfectly fixed yet I already some people who are things another report out so I don\u0027t know with that this program for you to change terminology from time to time but the what\u0027s in the game product for that yeah I understand so that if the terminology changes will ring you review this but I think that the discussion that says that the difference between the old key terms admire enough to try to combine those into our role that can be chained and so on I think is a my reading of what was that was a valuable contribution so as a that speaking as an individual so so when he does its honest when can we expect the final version of the document did you know I get when yanking it more important that this work came for the first day we want to follow that but my idea so far the time this goes to RFC "
  },
  {
    "startTime": "00:18:13",
    "text": "then we can\u0027t change it so you know that yeah okay second question there document explicitly references us although it doesn\u0027t reference a document it references the working group because what I have an RFC or anything so the question is should we add an affirmative reference to the s g17 document to specifically say that they\u0027re consistent in other words if anybody object to that because I see nuts okay that is that find other waiting we just editing it and form the reference it says this terminology and architecture is consistent with the document that was tempered frankerz Juan Carlos in here supportive I think to say that they are consistent is probably ten years because of the timeline maybe we can say you know it\u0027s aligned a minute or something but aligned yeah good point okay and that the third question is is there any reason that we need to respond given that we have representative here in the room and the vase on statement did not explicitly ask us a question per se if you know we look forward to working with you and so on which is great and so in the previous one we did not see a need to explicitly respond we just it worked right and so is there any reason that we need to explicitly respond or is just the fact that you know he\u0027s here in the meeting and he can carry back the the discussion we have is that sufficient I don\u0027t see a need to respond as anybody thinks there\u0027s need to respond but not okay then we\u0027re down to this item great thank you okay so I think next on the agenda was any discussion around okay Robin sorry Dave Robin Wilton to make something that doesn\u0027t necessarily need to be reflected in doctrine at least in my view but something that we should have to think about is this idea of chained status Truckers I can see how conceptually a state destructor is a state instructor as a state instructor but on the other hand I can also see how the status tracker at the bottom of a chain might be functionally somewhat different from the state instructor someone else at your chain and I wonder if that functional difference might ever be significant enough that it merits a rename or if conversely having a configuration where you\u0027ve got three change state instructors one in the device one close to the device on one remote is going to introduce real confusion when all three of them are referred to as a state instructor so important but "
  },
  {
    "startTime": "00:21:29",
    "text": "but we the Pelican the collector yeah we\u0027ve talked a little bit about the hackathon we did the last weekend we actually sort of joined together with the people group under here was the wiring of the internet so we had a larger group and I listed a couple of the names here it was difficult to take a picture of everyone because people sort of ran in and out somehow but we also had a few first-timers and some of them actually didn\u0027t stay for that for the ITF meeting insert they just stayed for the hackathon others I encourage everyone to participate in fact if only because there\u0027s a lot of fun at least on the second day the first day is also moved into what we also had was a lot of hardware to play with we have this a custom suit board created with the last time already which we took with us and what was new is one group that joined us for the first time in this suit hackathon took a special Renaissance sport with them which used hardware security and required an encrypted firmware image so there was a subtle variation in what we were doing and so here\u0027s what we what we did at the hackathon unsurprisingly we use we had a Python tool and you can actually at the end of the slide deck you can see pointers on what we did because we wrote down a few notes or hey me did in sort of like if you want to reproduce some of those steps of course we set up the holding development environment and many of us did have the FAQ console video account welcome to staff that are if a day basis so that wasn\u0027t much effort but amy was "
  },
  {
    "startTime": "00:24:31",
    "text": "kind enough to produce a doc rice development environment so if you you guys want to get some of this working yourself there\u0027s actually now the bar to get started is actually very low so you kick off a doctor containment and you\u0027re good to go so that poor embed OS and riot in in the use domenica stool that Brendon has been working on and and was extended for this hackathon to generate or to write the manifest in a chase on paste format because it\u0027s obviously nicer and then use that as an input to produce a manifest in the Seaboard Cosi based sign i think that was him he worked us on a CDL based version so we had a cup of different choices on how to create the manifest and then of course we had to then take manifests in the firmware up to the port itself and unsurprisingly we had a couple of different options that we use and from usb to just dumping the stuff in the tailing through some memory region or to use co-op and so on so different ways and then yeah I didn\u0027t I didn\u0027t show that slide at the so some of those slides are were used at the hackathon presentation at the end to inform the participants of what we were actually doing but I keep them up a little bit to provide a little bit more context on what we really did so I hope you appreciate that one of the things that you obviously have to go through when you work on hard ways you actually need to configure the your system properly so they\u0027re different microcontroller manifacturers they they provide different tools to come figure you our microcontroller properly and so in my case and that\u0027s why I took the screenshot from I used STMicroelectronics and for this from my examples and so you can as you can see in the color coding of this microcontroller you can actually change the whole pin layout you can enable and disable features of the microcontroller which is then nice because you exactly enable the features that you want to reduce the code size and you you can work with if you for example we can play or we labor they\u0027re big names you can actually work with symbolic names have a look at this yourself and there\u0027s a totally key that you can download I and I think it\u0027s a an insightful exercise if you are like me like in the past like to work on overclocking your desktop you see you will appreciate that functionality it\u0027s basically overclocking on steroids because you can literally change everything in the processor um but exciting and of course that\u0027s the maybe not so fun part is you have to "
  },
  {
    "startTime": "00:27:32",
    "text": "look at the data sheet to understand like where are things and I will show you a screenshot on the next side and those data sheets tend to be rather long than this case was only thought 1,700 pages long and one important part is and that goes along fitting through the architecture document that update is to talk a little bit about the bootloader and what the role of the bootloader is and how does it fit into the whole context in in our case the bootloader was very minimalistic and we only had one foot loader so there\u0027s no stage 2 bootloader and that bootloader was ordered responsibility if the bootloader is good it gets executed or I started whenever you turn the device on and then it needs to make a decision about what image to start so in our case we also done the security the suit manifest passing into that bootloader and also some minimalistic functionality on how to actually access the the image so in case of the USP delivery that I mentioned before you obviously need to attach the firmware from the USP so you need to have that implementation in there as well so there are different design choices on how you implement to hold this whole architecture which obviously has some security implemented implications and we we picked a very sort of basic approach here which may not be the best one but I think in discussions in earlier meetings I think that was that was type of information and design choices that people wanted to see in also captured in the architecture document and for that purpose I talked to one sort of found in this expert checkup an Ingo three weeks ago to help me work on those options because he obviously has more experience in sort of seeing what the wider industry does in the bootloader different okay so um what you see here is that you have flash memory which is on chip and there are different sectors so you typically erase sectors entirely and and it starts in this memory address that you can see up here and so that\u0027s um and I was showing the next slide when you reset the process like the chumps into a specific location looks at a specific addresses and so when we introduce now the bootloader and this whole process we essentially had two firmware images that the bootloader is one firmware image and a first application from where which is nothing else than the real-time operating system first the application is actually in another slot and and also it executes the application we really want to execute and then we use a separate area for the firmware that we want to update so there\u0027s some space that basically is eaten up by having "
  },
  {
    "startTime": "00:30:32",
    "text": "this of having more than one image but otherwise if you mess it up you essentially prettier okay what you\u0027ll also find tonight I think that\u0027s a tunnel into some details and so what you find on on these microcontrollers it\u0027s for the vector table and you see that um there\u0027s this is the vector table it\u0027s just a bunch of addresses so it starts at this address and in if you look back so this is essentially address 0 but you have to see it in context of where the code actually starts so it\u0027s this address really and the first there\u0027s one sort of research field which is the stack pointer and then the vector table essentially contains just a lot of pointers to functions and this is the reset and it\u0027s the first function and then there are many others sort of processor if it it boots then it jumps to the reset reset vector of course if we then if we have two images they are obviously the processor doesn\u0027t know where our application image is so it jumps to the space where the bootloader is and here I so code example on how you actually write the bootloader to make the necessary steps to jump to the from after the actual application firmware so what it does is and I\u0027m not going to into the details but it\u0027s actually quite simple you need to configure the stack pointer which is at this address 0 you need to read this the reset handler address which is 32 bits later as I showed you choice on the last slide you this is your function your function pointer and you jump to that function pointer address and then your application image start it\u0027s something that we had to go through in our in our hackathon example when we when we worked on this just to give you a flavor of what we were actually doing we didn\u0027t write any assembly code this is all C so what did we learn and like the first day as I said it\u0027s always very difficult because you need to get things working and there\u0027s always something that goes wrong before the hackathon type into there\u0027s always some problem and so which we try and shop with it but also um and that was really cool because we had a couple of experts in that remains in the same room and sitting in the next table so if we ran into some real problem we could just walk over to them which if you do things at home on your own that\u0027s obviously tags that easily takes a lot of time to figure out like then what what this small issue is which the person next to you can just tell you in a few seconds so that was that was really beneficial and I\u0027m actually thinking about like staying a little bit long at the next next I kept meeting sort of an extended packet on and try to track some other "
  },
  {
    "startTime": "00:33:33",
    "text": "people along because this was made that helped us to make a lot of progress we also found out as part of thumb this exercise that we we had messed up some CDL and examples in the in a manifest document so we need to fix them and what actually Hank has already worked on on it and can see it so to to actually get it corrected of course will ultimately depend on what the group wants during this meeting but I think we step-by-step we get there to working sittig a working example yeah I cast moment I have a slight modification with outside the CPD a tool is hell okay I can sign that and I\u0027m working a new version of that together so the next one will do this yeah submit it for with you just kidding um yeah and um almost forgot um so or that here the last hackathon sort of the people in the room who worked on the different projects but then again asked to sort of get their recommendation for specific project a like most and funny enough they picked us and so so we\u0027re quite surprised about this thank you buddy unfortunately most of our group has already left because nobody expected that to the green so that\u0027s a bad back but yes so that\u0027s why we are there\u0027s more information available we can look up the details and and the write-up and there are pointers to previous write ups as well so you can reproduce it but don\u0027t be hesitant to just approach any one of us and we\u0027re happy to help and give you so much a what if point us to the tools that we will be using and also their support and so on okay any questions for Hoss where are the blue sheets could you keep them passing please who has not seen the blue sheets yet which direction we need to go pass it that way so next up on the agenda is really I think we want to talk about on the architecture and information what yeah yeah yeah so short summary on the architecture information model that there was this one open issue in the architecture document and to talk about thought of it please what I just elaborated on so we still have to work on text I\u0027m "
  },
  {
    "startTime": "00:36:35",
    "text": "relying on this industry expert to help me do that haven\u0027t done that yet so I hope to but we haven\u0027t come up with the text yet I hope to do that I hope like from the explanation I provided you just a few minutes ago I hope that\u0027s what you were looking for when we when you talk about give us or give us more text about the bootloader that is the type of content I was thinking about seeing staged multiple states put load about to put in his boot loader and from this type of design consideration it\u0027s not nothing really that it has security implemented implications its but its implementation choice it\u0027s not a controllability issue in my opinion but yeah still still some confusion it have helped to set the context for the architecture and help people understand the requirements have been appear in the information model and so I think that the task is to make sure that the discussion is generic enough that it applies to many types of processors and so there\u0027s that other people that watch the ionises presentation about the bootloader stuff that said oh well you know my dealer door doesn\u0027t work that way then please comment and help proposed text we can make sure the text is generic enough what we need cover more than one use case or just have one description is generic enough to cover all the cases we\u0027ll see I think that was part of the point in discussing it now is to say this is the style of stuff for the hollow should be putting into the text if this makes sense but to make sure it\u0027s like an ax stuff that you walk through that was the SG micro example of the bootloader and even it is different from some other one then we want to make sure the text is either generic enough or if there\u0027s more than one case we have two cases it would actually be the same for the mark around base my controller I don\u0027t know about others but conceptually like the stage at the stage 1 stage 2 and what to put in there I think that\u0027s what you think so besides that I don\u0027t think the open issues with the architecture document on the information model document and Dave was kind enough to point me to the meeting minutes from from last meeting from the last idea meeting to illustrate that we had some open issues there and the open issues were sort of the alignment with the manifest works so it turns out that back then we didn\u0027t use different or we use different terms for some of the elements in the manifest compared to the information model funny enough we based on the discussion at the last IDF meeting we changed the names again so so if we essentially kept one one update so we now need to figure out when we talked about the money tests later on like what what the terms finally should be and we should or didn\u0027t get them in sync I hope that we can settle on the terminology now on the terms that we use for the different elements in the manifest so we don\u0027t have a disconnect here but yeah "
  },
  {
    "startTime": "00:39:36",
    "text": "alignment is you know questions or comments that people want to talk about in the architecture or information Bobby Watson it\u0027s at this point okay Brendan is coming with a cue hey Brendan Europe so I have a few notes left over and the last time we discussed the information model what I\u0027ve got in addition to what hannises mentioned is a couple of to-do items namely the forward references for the threat model so that every element you can work walk through either forwards or backwards either from the problem that it solves to this the security requirement that creates to the the element in the manifest that solves that or the reverse working backwards from each element and seeing why it\u0027s there the second item I\u0027ve got is that if there\u0027s an explanation needed that explains the threat model is incomplete and that there are many elements of the of a system threat model that aren\u0027t actually in there for example there are no physical attacks listed in the in big threat model there and finally that there\u0027s needs to be a possibility of counter signing manifests rather than linking them I think that might have been on the on the manifest side of things rather than in the information model but hopefully that\u0027s covers the remaining items that would be required to get the information model finished inclusive would draw a center point of attend Society so just wanted to inquire about that as of one solar discussion thread on the mailing list with in my opinion the manifest and the form where in fact the manifest contains more information than the phone with image so it when we talk about its encryption and security properties of transporting that that it should get the same treatment as the firmware image so just wanted to inquire about well honey yeah I remember that discussion um I thought to be puts on text in India to talk about this I\u0027m the signing and encryption capabilities of the manifest as well as as the firmware since imposed obviously contain different information but post is quite valuable information and as we\u0027ve seen also that this hackathon some of the hardware actually requires you to use encrypted manifests encrypted for more images so so I and also I think I\u0027m not saying anything wrong but we didn\u0027t test it that the hacker man that the manifest format can "
  },
  {
    "startTime": "00:42:36",
    "text": "also be encrypted so we yeah but we should double check did you did you double check on the weather we correctly captured that issue in the in the document okay go ahead for you I believe that the resolution that was proposed on the mailing list was that this was a good use for transport encryption rather than necessarily at rest encryption and there are a number of difficulties with going forward with at rest encryption of the manifest not least among them is that this severely limits your ability to use this format in a broadcast environment since the proposal was that it would be the component which defines how to obtain the key for the at rest encryption of the firmware there are a few ways we can work around this and there are some components that could be encrypted to just solve the problem but it seems to me that there\u0027s going to be quite a lot of difficulty in doing at rest encryption of the manifest itself I\u0027m not saying we can\u0027t do it and we should probably add some more text to that effect but I think that it adds a lot of difficulty that\u0027s not necessary if transport encryption is adequate this is on its own so do you care not not your printing but do you care whether the encryption happens at the transport layer versus at them object layer I think the main that would come from transpose n transpose in in terms of encryption is must be but I\u0027d be interested in hearing about what you think are the benefits for also doing address and whether they can also be enumerated in the dr. if there are not visible Grover center point in intensity because bond it may actually be useful to have the ability to encrypt the night s address and I didn\u0027t quite understand the argument that you wanted you want to broadcast it so you use transport encryption I\u0027m actually not and where the ribs are get from here you\u0027re absolutely right question that\u0027s a that\u0027s not a solved problem that I\u0027m aware of and I guess what I meant more was that encrypting the container that "
  },
  {
    "startTime": "00:45:37",
    "text": "tells you how to decrypt itself would be equally problematic like the right way to do this of course is to do an onion so you have an outer layer that hates you what the security associations are you need to use the inner layer which is the one who protected their exam right so I thought they started with wanting to encrypt the image did I miss that because right now what people have have implemented is the image being embedded in the manifest which is fine but we also have the ability to have the image be external right and if I care about scale and oh maybe about this encrypted images or this make it the external and you can get the manifest but the image and can contain keys for the image to suffer this one is um yeah it\u0027s correct that we initially started off with encrypting the former which was what are optionally so it\u0027s not mandatory to encrypt it from where unwanted India which I see as Assad know how the image is actually pushed along to the device whether it\u0027s attached to it or whether that\u0027s sort of sent separately but then we went on in the discussion and that was what the review was about was should be actually or how do we protect some of the contents of the manifest itself because they may be there may be some privacy of relative if is there that\u0027s that\u0027s what that\u0027s why this discussion on the mailing list came from even if there\u0027s nothing else on the in architecture information models we\u0027re not going to move into that part of the agenda about actual serialization formats and so there\u0027s some background here as a reminder a charter allows us should we choose to do so to work on more than one serialization format or it allows us to choose to only pick one and so right now there are at least three individual documents two of which are variations of Seaborn and one of which is binary in the past when we first started this session there was another proposal that was asn.1 based and so part of this has to do with what\u0027s the choice of basic encoding mechanism for encoding mechanisms and we\u0027ll come back to that question after these and so we\u0027ll have people talk about the different individual documents right now and all for whether there\u0027s working through interest in adopting it this is sort of in scope for this discussion "
  },
  {
    "startTime": "00:48:37",
    "text": "especially as getting into question number seven which is really deciding how many do you want to adopt and so that slowly will actually ask those questions okay and so we have Hank and Brendan and Merton Brendon and Martin will be regular presentations and Pinkerton like right now and so I will let you spread it out our component yeah most nights this is Hank not from the floor but at the mic attendee so we the draft name says it all this is a subset of concise soft identifiers so suffered amplifiers are ISO standard and we are we molding that into something more concise inconsistent and that is called concise soft identifiers in the area and there are resource collection there and we wanted not only to be able to talk about standard software components but also or film there so why am I telling you all this and the suit manifest in the last iteration was a set of array element ever nested and and in the concise softer than the fire is an abstraction but also nested so by the change of encoding method with the current manifest from Brandon it is probably obsolete to continue the specific code suet version and my hope is that we can just converge in a way that it\u0027s just naturally fitting into each other so this was basically a proposal and that\u0027s why there are no slides because it as it doesn\u0027t really make much sense continue talking about basically the same semantics and different variations so that\u0027s actually folded into Brendan yeah up next yeah all right these are listed in alphabetical order by last name so so Brendan your presentations up next food into presenter mode Martin\u0027s then we\u0027re ready to present and if that doesn\u0027t work then go to the key we don\u0027t have audio how about now yes go for it all right there we go okay so these are our this is a brief summary of what\u0027s in the new version of this manifest if you\u0027ve had a look at it it\u0027s quite a large document and most of it wasn\u0027t there in the previous version so there\u0027s an enormous amount in there and with that in mind I\u0027m going to hit the highlights as much as I can and hopefully we can have some good discussion more about this on the mailing list I think there\u0027s probably too much to cover in the meeting so I\u0027ve done it mostly by example and with that "
  },
  {
    "startTime": "00:51:37",
    "text": "I guess let\u0027s get started next slide please so there are a lot of changes a lot of it came from the meetings the mailing list and a bit of information from the hackathon and I\u0027ve proposed Eiko\u0027s a digest structure and I\u0027ll need to talk a bit more about that in a minute and there\u0027s a big new feature of severable fields this is particularly relevant for text components because text of course can be very large and we want these manifests to be very small so being able to trim some components is important next slide please uh okay so because a digest is a concept I\u0027ve proposed in the manifest I\u0027ve gotten some feedback from Jim Chad in case he\u0027s not in the room and that suggests that perhaps this is too heavy weight for our use and a simpler solution would be a better choice so I think that that warrants further discussion in this case what I what I proposed in the document says essentially that we reuse the cozy max structure replace the the tag or the Mac with a digest and use the context of digest instead of Max zero next slide please and this is just the CD DL that describes what would be used to accomplish that nothing terribly surprising here I expect so given that there\u0027s already been some commentary from the cosy or one of the cozy otters and I think that we should probably continue that discussion at a later time possibly in the mailing list so let\u0027s move on to the manifest itself these are the identifiers that I was going to suggest for COEs a digest algorithm identifier I think this is probably still worthwhile that we have specific identifiers defined and it\u0027s just a question of whether we should use the structure that I\u0027ve defined it or not next slide please okay so I\u0027m going to go through the manifest building it up gradually in examples here so that we can have an idea of exactly what\u0027s being encoded how it\u0027s encoded and what the cost is so if we start with this first example the idea here is that this is essentially a wrapper for a payload it\u0027s got very little information in it in fact we\u0027re only encoding 37 bytes "
  },
  {
    "startTime": "00:54:38",
    "text": "worth of actual information that we want the encoding in C Seaborg gives takes us 67 bytes and the way that\u0027s all packed is in the next slide so first there\u0027s no authentication object next please and this is how the manifest itself is encoded you we have a version number a sequence number the payload defines where it\u0027s stored the size of the payload and then there is the because a digest objects that I just described next slide please so a second example now this one is signed but beyond that it\u0027s the same as example one next please so this is primarily just adding on echoes a sign object and it is exactly what you\u0027d expect to find in a normal hose a sign object next place and yeah good enough okay so now example three here we have the same sign a signature system and a little bit more information to encode here we have a payload URI or if you obtain it we have preconditions which kind of hardware this would match and we have a text description so now we\u0027ve gone up to four hundred and twenty eight bytes of actual information that we\u0027re trying to encode and the encoded size is six hundred and five bytes the this also showcases the point of being able to prune elements so if the text is trimmed before the to a device that 428 bytes of information to encode actually drops to only 398 bytes on the wire and the original size of 605 bytes gets pruned down nicely as well and likewise after this payload has been installed and the installation information is no longer needed that can be pruned to only 319 bytes that are stored on device next please so here we have roughly the same content in the manifest we have the cozy digest representing the the payload we also have one that references the installation information and another that references the text next please the installation information here as shown I chose a matching component ID to the payload that\u0027s described in the manifest and shows a identifier of how to obtain this particular payload and that\u0027s described by an identifier that says what kind of processor is producing "
  },
  {
    "startTime": "00:57:38",
    "text": "this and a list of inputs which are a ranked list of your eyes in this case only one URI next please and then the text information which consists of a tag of a key of one meaning update description and 200 bytes worth of text next please and for the fourth example it\u0027s again the same thing but in this case it\u0027s using a B SDF decompression rather than using the sorry rather than using a broad binary next please so here the installation information is the most important part and it shows a list of three separate processors this time around the first one obtains the remote resource from a URI as described in the previous example the second shows where to obtain a local copy to diff against the local resource and then the third shows using a BS diff unpacking algorithm and what it should use as its inputs in this case using the remote resource as the as the diff input and the local resource as the local reference and that\u0027s about it so as a summary changes we\u0027ve we started with the version two of the manifest and as we just as Hank discussed tried to converge onto the the same format and the there was an outer container in the version to manifest it only contained the the text format that that I\u0027ve mentioned in here now there are some additional elements there\u0027s been a change to using cosy objects in detached payload mode and consistently throughout the system which should hopefully help to make code more compact since all of the objects are used in the same way as discussed the cozy digest structure probably needs to be some some additional refinement to aid with the compatibility with some additional with other IETF standards primarily Coast would I\u0027ve changed most of the structures to see bore maps and I\u0027ve defined a manifest lifecycle now this is what leads to the different objects being grouped together and being able to to separate some components after they\u0027re used the lifecycle is essentially the process of what components are needed in the manifest "
  },
  {
    "startTime": "01:00:39",
    "text": "throughout its distribution and consumption so first text is needed when humans are involved but once a manifest is dispatched to a device that can be removed since devices if they present information don\u0027t need that information then the next thing is the set of pre installation information which includes preconditions and pre directives and those can be pruned when they\u0027re no longer needed and the the process continues that way to allow us to remove and information when it\u0027s no longer needed by the end node I\u0027ve added some more preconditions and pre directives there are a few left to add I removed the processing graph that I described in the version 2 draft because it seemed like it was going to require more processing than was necessary on constraint nodes the the tree that I showed in example 4 I hope will be simple enough that it\u0027s not complex for a device to process and the mechanism of placing the resources that a device consumes before anything that uses them in a serialization should also make it easier to consume I\u0027ve defined more processors some resource information it turns out to actually be very similar to processors so there conspired into a single structure and after some discussion with other participants at one of the hackathons I concluded that the storage identifier was actually just the last element in a component identifier list and that is all yeah I\u0027m still here April are Europe Dave we can\u0027t hear you I\u0027m gonna push the button again which may kick you out of the to you so please get right back in okay yeah please get back in the two days [Music] hey it says nothing like it oh he still can\u0027t hear you yeah we have no audio from David okay well I can see what his question was what David asked was should why not reuse the IDs from the named information hash algorithm registry I I don\u0027t see a "
  },
  {
    "startTime": "01:03:43",
    "text": "problem with that unless the names are very large in which case I do see a problem with that I\u0027ll have to take a look at the encoding focus of names informations indexed so you can have an image of that yes and it\u0027s very small from from what I see you yes you reuse although that is perfectly fine for me yeah it\u0027s I think also the list to present it so 101 nothing okay person is sitting down at why I use them say the same thing there other comments or questions on for friended okay I\u0027ve seen more personal things like manual Bocelli inria thanks for all the work and we\u0027re looking for to update our implementations we had an impatient 401 and ro to you for this bagging tonight and one thing we\u0027ll pay particular attention to is you know how complex this is becoming and we want to play a specific role in this working group which is and make sure that even for single binary the simplest case of smaller size key devices class one ordering class zero we still can use this stuff I mean a manifesto and yeah um I think it\u0027s it\u0027s uh the the graph is become becoming three complex and I\u0027m just wondering how how this is gonna fit and uh I\u0027d like to make sure that in the graph we have the simplest example of how we are we probably use that that clear so that people can try it out and and see that it fits or even on the small stuff yeah I can already think of maybe some things we might consider simplifying for example the several ball starts maybe there\u0027s a simple way to go about it for example yeah right that you if we have a way to point to where the Dermer is separate from the manifest we might have a way to point to where the text is separate from the Menace which might you know sometimes it\u0027s tough for them so I\u0027m just you know like just pretty warning about this let\u0027s let\u0027s make sure that this stuff is also applicable for small device because we want this to be also true can we go back to example three please let\u0027s see yes emmanuel this this is the version that should actually meet the requirements "
  },
  {
    "startTime": "01:06:45",
    "text": "that you\u0027ve brought up so if we go forward let\u0027s see two one yeah here we are this this is the encoding that we\u0027re looking at and it should cover essentially what you have described I recognized that the the multi-part the severable fields maybe not ideal for for class one devices so the intent there in the draft was that fields could be made severable if necessary and i specifically call out that it costs encoding size to be able to make field separable and so there are many situations where that would not be desirable the reason I\u0027ve done what I have in this particular example was I wanted to show the pre installation information which is a field that can be made separable is kept actually in the manifest so that no additional and jumping between elements in the blob is necessary but at the same time the installation reference is is present and that means that installation information is external to the the smallest part of the manifest I think that when it comes to targeting class one devices then maybe making fewer fields severable in this way it would be at least part of the right answer this is um I think it\u0027s also a realization of like last time and the meetings before we talked about the different features that people want but of course all these features come with a certain price tag you don\u0027t have to use them but now other today are described in a document in for example if you add if you use firmware encryption you obviously have to adapt add extra information so in this case it\u0027s really really our minimalistic in a sense of of course that\u0027s the signature overhead and so on but for example here the firmware is only protected listed with the hash and the whole manifest designs so that keeps it very minimalistic in some sense but still there\u0027s a little bit of SIBO encoding overhead and I think we\u0027ll get to that in a in an upcoming presentation but I think it\u0027s it\u0027s just as a man who said it\u0027s good to keep in mind what we were trying to accomplish in covering a wide range of different devices and keep it as small as possible so we don\u0027t have to mandate the use of all different options for all devices and but I currently many of the fields if not most "
  },
  {
    "startTime": "01:09:45",
    "text": "actually optional so you don\u0027t don\u0027t necessarily have to worry about them when you when you don\u0027t want to reuse them anything else want to respond Brendan before we move on the next presentation no I think I\u0027m good with that okay great we\u0027ll come back when they get to step seven the about company that we adopt so Martin you are up next you want to move into presenter mode all right can you hear me yes perfect and you can see me do good I don\u0027t have a pretty picture like I I like a friend Annette in the background but thanks for giving me the opportunity to give you an overview of the draft I submitted about a month ago I about a binary manifest serialization format so what I\u0027m gonna cover on the next slide is a little bit be the thinking behind that eye on why we went the way we went and some implementation hi on the server side before I jump into the high-level structure of the manifest and a few implementation I details which are a little bit different than than others so let\u0027s jump right into the next slide the key thinking for us was that a what a manual just brought up a very very constrained devices I want to keep it really simple and even though if you have a very flexible manifest structure then it makes it easy to build a very generic update server for the device it a you still have to narrow down I you still have to narrow down a what option that the MCU I understands and can handle see you typically only knows about one signature format and one encryption format and so on so we said I will keep "
  },
  {
    "startTime": "01:12:46",
    "text": "the manifest rather platform-specific so just treat this huge architecture as a general framework but then I some of the fields can be interpreted by the specific MCU in one way or the other and therefore you don\u0027t need to specify like pre-processing or installation instructions but you have a type of component you are trying to install and then usually the installer of that MCU would know how to where to put that in memory what type of processing to do on it how it\u0027s encoded what signature to use what key is to use and so on that way you can it becomes much easier to to load that and if it\u0027s straight into memory and execute it right there and then and maybe even keep it around if you want to do at a station doing the boot loading process you could keep that around and verify the signature during boot as well all right on the next slide so we try to keep it very simple and very small no bhavani and no need for buffering I keep the options specific to that platform I also do not not include I not include a URL but just a an identifier which can then be used to request where to find and that particular image and to request that maybe even one by one in the order the device needs it to install it in in pieces so that way on the next slide it it provides for a very condensed format and we think think that a simpler format can also be I provide less vulnerabilities because it\u0027s less code to worry about but we still wanted to keep it a still quite powerful where you can manage multiple images from different authors which can be signed separately we can "
  },
  {
    "startTime": "01:15:49",
    "text": "provide dependency graphs for the binary interfaces for the api\u0027s I so that on the next slide we can provide a single server which can I can manage the functions of the network operator the device operator the OEM operator and in false in false various policies like the rollout speed or rollbacks or a targeting my locations and so on you can also do verification of authorization and dependency checks and so on all at the server level B because some MC use might not be able to provide all the checks a different keys and and so on I on the MCU directly so so again the key is that that way the MCU I only needs to handle the specifics for its installation whereas the server has to handle has to be a little bit more flexible in handling the the differences between the from platforms it does allow for images in downloads in various ways through the CDN or as discussed also as a broadcast and we favor Transport privacy or another intermediate we way would be to use a short-lived URL to make it difficult to intercept those those files such as like an application file which you don\u0027t want to put straight on the Internet all right on the next slide so let me so the the manifest format itself I was not planning to go into the details but it\u0027s a nested structure just like the others I you have one big container which I then has manifests from different authors in again for that very simple MCU though that would be a single manifest for a little bit more "
  },
  {
    "startTime": "01:18:50",
    "text": "complicated MCU that might be one manifest for the Wi-Fi component one for the co core OS another one maybe for the application I each one of those I can have multiple can have multiple images I for multiple components and each author can provide its own signature to so that it can be authenticated coming from the manufacturer for example of the application versus the the Wi-Fi firmware and then the up date server would sign the whole manifest set I with its own signature all right I on the next slide a few implementation Commons again we made sure that the the manifest is compliant with the information model one of the keys key aspects of this format is that we have an image type and the image type is defined by per MCU platform so that the MCU installer knows to map that image type to a payload type to a type of signature that installer knows how to install it where to put it or what type of pre-processing would be necessary and we use the build date instead of a separate sequence number and that way we keep the manifest as small as possible so that we can target even very very small MC use all right that\u0027s kind of the overview what I wanted to cover we can jump into any of the details but I think we are not having we don\u0027t have that the time to do that today hi this is Hannes I think your presentation had two components the first component is the question that also they placed at the beginning of the meeting is should be have or what format should be happy and like c-boy is the binary format is a different file "
  },
  {
    "startTime": "01:21:50",
    "text": "format how many formats should be specified I think that\u0027s an important question right but there were sources separate there was a separate aspect of the presentation which is we talked about features we wanted in as part of the architecture and the information model work and Martin in his presentation IV that he doesn\u0027t want to describe some of those fields because he for his use case he doesn\u0027t see them necessary and currently as you\u0027ve seen with friends presentation they are in the document but you don\u0027t have to use them so for me a question is even if we decide to go for different encoding format serialization formats what is the expectation from the on what functionality you need to describe in any of those caersation formats from the information model it\u0027s it you do you need to cover everything what do you need to cover just for example the mandatory fields that are necessary ideally I believe there should be if there are my two performance in Syria station for months then the semantics shouldn\u0027t be different between them which would otherwise be unfortunate I was friendly rafter on terrorism well I guess they are going to follow up with Hannah\u0027s but my question was different Carlos when you get sorry sequence for Martin did you check the size of manifest just just the total size yelling answer things one by one Hannes I I think we I mean the way I look at it is that those fields are not explicitly listed in the in the format I because I believe that an MCU can have for example a simple lookup table for the for the various ones a so for example the pre-install conditions I can be implemented by the Installer rather than providing them in the in the in the manifest or I mean again this is a when you look at the the implementation there is a I there is additional format for for version and so on you could add the you could add fields yeah yeah and this "
  },
  {
    "startTime": "01:24:54",
    "text": "fantasy and I understand are like in some cases you don\u0027t want to use some of the optional features I think we we have no doubt about that I think my my crutch was born on a different aspect but maybe maybe I can provide an example on the mailing list on what I meant and on the other question from Juan Carlos I know I don\u0027t have the specifics I can provide an example probably by twice but it depends a little bit on the signature format and so on different signatures of course of different sizes and so they end up being different so but I can provide on the mailing list I can provide maybe a typical size or minimum size yeah maybe try to provide some sizes that would be roughly equivalent to the examples that run and walk through unsigned signed and so on having some examples that is similar to the British Brendan you\u0027re up next in queue go ahead okay I have two questions first when you say loaded directly into memory can you please elaborate on what you mean by that I mean memory-mapped into straight into memory okay so what kind of access do you use on that memory let\u0027s say you\u0027re you working in C for example I the I mean if I have I can use memory mapped files essentially to load it into the buffer and interpret the buffer directly okay I understand that but the question I\u0027m trying to drive down to is are are you specifically referring to recasting your buffer as a structure yes okay that is undefined behavior by the C standard that may work for one compiler it may work at one time but it\u0027s not guaranteed to work between versions of the same compiler I okay for a particular platform a particular set of compilers that is well defined but it\u0027s undefined behavior by the C standard it can change at any time without warning we jump in here so Brendan if I understand what you\u0027re saying if you\u0027re using like a type def struct and see that\u0027s the Cajuns are talking about "
  },
  {
    "startTime": "01:27:54",
    "text": "right URIs using stuff that is a byte buffer and manually casting you know the the first four flights to a long or something like that then you can still do it you\u0027re just saying if using a type def struct then the c99 language has that particular issue it\u0027s not impossible to work around it is in my understanding your issue correctly yes that\u0027s true and and Martin is saying if you deal with that in the coder taking that knowledge and lock out such as probably subscribe yeah so the point I\u0027m trying to get to here is that you still have it just looks a little bit different the second point I\u0027d like to ask is whether you believe that the primary consumer of resources is the parser itself or if it\u0027s the validation of the content I don\u0027t understand well I mean even if you don\u0027t have a schema per se you still have to have a schema the schema may be simply in code and I\u0027ve found so far that in the handling I\u0027ve done of manifests the primary consumer of resources is the schema it\u0027s how I validate each part of that manifest regardless of extracting it from an encoding what seems to be more significant is the the actual handling of the data within it it all does have to be validated yes but you are now what I\u0027m suggesting is essentially to use a an array on top of the the data structure and so yes you\u0027re right that the schema now is in the code I and therefore you\u0027re you\u0027re working with fixed offsets essentially where\u0027s in a path you have to have a separate buffer which then passes into particular fields okay thank you I saw a comment from Zack on the floor and so I can either repeat like you said you can go to the bike so is actually arm um so I think this conversation just goes to show that when it comes to the details of processing this kind of stuff in C in boot loaders you need to do all these things regardless of how this eccentric so I really it\u0027s kind of a moot point on oh you don\u0027t need a buffer here you "
  },
  {
    "startTime": "01:30:55",
    "text": "don\u0027t need a buffer there you don\u0027t need a map this you have to do all those things I don\u0027t really think it makes a big difference either way you could maybe drop that but going to the size issues so I\u0027m guessing motivation here because this is slightly smaller or see Bora generic encoding by what and in Brendan\u0027s examples were like 30 bytes larger because of sea bore another example was a hundred bytes larger I just wanted to point out that your manifest isn\u0027t really your issue here when it comes to constraint networks we\u0027re talking about 100 bytes savings versus a hundred thousand by firmware and that\u0027s a tenth of a percent rich soils Akamai I just want to point out they\u0027re getting a signature data format right is really hard and really tricky and so you can just can use the standard signature anyway or you better otherwise you\u0027ll end up on the front page of The Times um and therefore the savings will be even less than you think man pack some I take Wow a long ways to the drop Mike hello yeah I thought not yeah sorry yeah I thought it\u0027s a motivation looks like a suicide right little ones of size right size that a good question too what\u0027s the rate has significant yes but other side are you making a part of the coda size it\u0027s a smaller code to process the loading memory directly Institute well what the parser code and others but for that one I still say what\u0027s a popularity that RT device it really cannot handle this see ball could sleep or the parson so you have to introduce this because this introducer for my server the complexity that have sought to formats that understand that and this is nice um so this is again a tricky question of you need a pasta in any case regardless on what you where you store it because you have to look at the different field she crafted instance in pepper today one of the arguments that we had initial in the working proven we propose the asn.1 format was we want to use ears and one because we had the crypto implementation days there for certificates and so on so we needed that anyway then others came along and said oh well but on pussy boy you\u0027re actually going to have that pass idea as well because of some of the "
  },
  {
    "startTime": "01:33:57",
    "text": "other work that we are yeah so in essence it turns out that we have that functionality there for other reasons already so it\u0027s kind of you have to reformist look at it from a systems point of view like what are the other components you have on your systems are you adding any extra to it and that\u0027s that of course are difficult to church in isolation of not knowing but how exactly the system isn\u0027t but the assumption would be that you would have that you use the C bar house or somewhere else in the system what what if you don\u0027t i yes you do need some some signature format but that doesn\u0027t a if you just use a simple key you don\u0027t need a asn.1 all I even see boys not necessary okay are there any other questions for Martin okay thank you so the next thing is the discussion of how many manifest formats we want clearly that is already started in the last few comments from the microphone so one of the differentiators and presentations we\u0027ve just heard is how much you\u0027re going to leverage an identifier and learn implicitly based on that identifier what processing needs to be done for a specific platform and as opposed to required fields in a structure so what does the group think needs to be done across all of these platforms and will one format do it or do we need specific College specifics choices and how do we describe them those are the questions I think that are before us which will ultimately lead to the answer to the question how many do you want to put forward in RFC\u0027s nobody wants to talk about that in the night exactly oh so the first thing I think is that we need to get at least one right so that that\u0027s for starters and then and then I would really like maybe the only more but at least one that we get it right and then to have the same semantics across the different if there is something else so let\u0027s focus on one do it right and then if "
  },
  {
    "startTime": "01:36:57",
    "text": "someone wants to you know add like binary stuff or other things then just add like the corresponding mapping to the base the base line format and the baseline semantics that will be fine and if I go back to the example I mean if we have cdlt to define like this your schema then you know if you need to redesign the whole thing for a binary in the community to do all these all kind of complex stuff if you try to solve the two problems in the same time so for me it seems pretty simple to say okay lo use one format one scheme the language and then you know just define nothing\u0027s define our stuff so to come on you\u0027re your first part doing zero manifests formats is not adoption in our Charter doing one or more it thank Adam does this hink at the mic actually I was not always in the room so has Mathias radish comment on the email list in covered here already otherwise I will bring it up so he brought an email to the list with respect to discussion in the room and said I didn\u0027t get the discussion totally today just as a reminder the suit working group Charter says explicitly this group will focus on defining a firmware update solution taking into a core past learning from our c4 108 thank you by the way and another from resolution that will be usable on class one constrained devices as defined in RFC 7 to 18 recursion and essence devices with approximately 10 kilobytes of RAM and 100 kilobytes of flash so that is maybe a reason why you have subsets and an optional fields and manifests maybe I\u0027ll be addressing that but we should address that explicitly again this is not a sandwich trying to respond to that comment so I think the goals haven\u0027t changed makes this team from Brandon\u0027s presentation and there\u0027s the options which you don\u0027t need to use if you have you don\u0027t need a feature and use it as long as you can fit I think the biggest code size is really with the crypto algorithms to be honest in and and DRAM utilization as well as so as long as you can fit the signatures in India I think it would be will be fine the sequence number the version number and the value for the hash algorithm probably won\u0027t kill you in storing that as well so I yeah still still there actually um one other one other things so if you do the processing in the bootloader encrypt the processing the good thing is there would be no other code running at the same time uh-huh "
  },
  {
    "startTime": "01:39:57",
    "text": "because there\u0027s a mint minimalistic so you will have order am at your disposal which is a good thing they fear so I came out here to make it clear I\u0027m talking as a participant in the press exactly mr. chair for my comment here so I think part of a question that I see people talking about is and I think honest gave a great summary is second ago how getting us back to the asn.1 discussion and so on and so I\u0027ll just repeat what hunter said second set context for my question if I was back the very first proposal was there was an asn.1 format right and people said oh but I may not have asn.1 in my device but I\u0027m gonna have you know c4 on my device and so let\u0027s do it and see where right although if you look at say industrial IOT they don\u0027t have c4 in the device either they have a whole ecosystem of stuff that\u0027s not seaboard based all the way down to microcontrollers and different things and so part of the question is especially in microcontrollers like what\u0027s the space overhead and I think that\u0027s the question people are talking about is what\u0027s the overhead in the actual manifest and what\u0027s the code overhead that I think Ming was talking about right and so from a device manufacturers point of view right they would like whichever one has the least overhead so that gives the most space for them to do stuff that they\u0027re actually trying to do right because the whole update process is kind of overhead you\u0027re designed to be a washer or a motor or a sensor or a thermostat or whatever it is and so the more that you can devote to that the better that you can do one a smaller class processor and save costs and so on and so the question is how much overhead is there for code and how much overhead is therefore the actual manifest format itself right so the code and the data and so the original C bar beats as1 argument was the extra overhead was small if he already had C bar right we could already have that parser at the extra code is minimal compared the S and when the watch the code and so if you think about a microcontroller that is an ecosystem that does not have C board already in it for the purposes that it\u0027s doing in someone an ecosystem then the question becomes how much extra code and how much extra data is there for each of the direct manifest formats and I think that was one of the questions to a Marten is you actually have the numbers and so on okay now if there\u0027s an argument that says if I already have C for our parser than the one that\u0027s the CBO our parser is clearly better because the the extra overhead is close to zero because I already have that right then there\u0027s a relation to the C or one if there are processors that the numbers come out to say there\u0027s a significant difference between adding a Seaborg version for code and data is much larger than adding the binary one then there\u0027s a reason that they would say well the binary one is clearly the one that I want able okay I don\u0027t know without knowing the numbers but I\u0027m saying that\u0027s what I see as the core question here is do we want one of em I don\u0027t want multiple I\u0027m not worried about how many formats the server has to intimate the server\u0027s big misterios two different formats the server can "
  },
  {
    "startTime": "01:42:57",
    "text": "implement both of them that\u0027s not a problem okay that\u0027s why we have the information while blocking in the first place what I\u0027m worried about is making sure that whatever we standardize here is applicable to the widest set of IOT devices as possible so that we get the most success at this working good and so to me weather is one of those multiple it really comes down to the numbers if the case is there the case might be there to say we multiple in order to maximize the reach of our working group Brendan first so you asked for numbers and the number that it has been quoted many times is that there is a seaboard parser that fits an 880 bytes I my argument a few minutes ago was that the schema validation is actually the bigger part and I\u0027ll say again that you don\u0027t get rid of the schema validation by changing the format you just have to do it anyway so what we\u0027re talking about is for seaboard on a device that doesn\u0027t already have it 880 bytes versus however much it costs to implement a schema validation for the content that matches the information model okay next person from icon yes is Dave Robin um two things maybe maybe conflicting we have business lessons learned from from the bacnet committee which of course was born in the 80s we love shaving bytes we take every byte on the wire and so we\u0027re we\u0027re in this habit of trying to minimize encoding minimize everything thinking about using binary headers instead of a s and headers things like that and then came along security and signatures and it just blew all over that away so I mean it every every bikie if you save ten bytes here it pales in comparison to the size of the signature you put to save load it goes along with so that\u0027s just one point so I the point of that would be that I would favor flexibility and extensibility in the formatting not absolute fixed formatting because you always it\u0027s easy to parse but you will read it as soon as you want to add one more information so a TLB or a tag or some sort of structure that indicates what the fields are so you can sneak another one in is is a better approach than an absolutely fixed format um so I think that that might that\u0027s one point my other point is we keep talking about oh well the Seaboard of a seam or library is available or the ASN libraries available um as much as I love seaboard it\u0027s available in my application using its memory allocations and all of it once it is established and running it is not available in the bootloader if it is available it\u0027s because I copied and pasted and adapted it to the bootloaders environment it\u0027s not really available as is so let\u0027s not "
  },
  {
    "startTime": "01:45:58",
    "text": "make assumptions that just because your application is doing something that your bootloader can also do it we recently ran into this in the back net where we were trying to reuse some high-level application read property a send coded stuff to get our credentials and we realized that we\u0027re trying to do this from the data link layer the data link layer does not want to call up into the application layer in order to get this service and so we actually changed it made it native to the data link used for encoding format so that all that\u0027s saying is the bootloader is a perhaps a different environment than your application run in the environment that let\u0027s not forget that rich yeah this is from David if Martin\u0027s proposal intended to address the industrial application scenario that Dave is referencing okay maybe Martin I\u0027ll get in line cancer you only let Martin responded in Jeffrey yes dokin Elliott hi Elliott Lear the Davis point we\u0027re seeing this explosion of formats and various different places already I have a nagging concern about this even on the server side which is and from the IDF perspective in particular which is a little nervous about the number of code paths being created and security concerns associated with that if a code path if you end up creating a code path that is lightly used I\u0027m concerned that it won\u0027t get the exercise you needed to make sure that it actually is secure and it remains so I think from this group if it has to go with two formats I think that\u0027s understandable I think if you end up with more than two formats that\u0027s problematic Zack Shelby I wanted to go back to Alex\u0027s earlier comment about encoding x\u0027 and i really do believe that in coatings are are something you do on an information model that\u0027s shared between the encoding I mean at the ITF giving a long history of doing that sometimes well but I would not want to see two different encodings based on two different information models that would be enough right for us to implement and that\u0027s what\u0027s being proposed right now so that is out so if we did want to do at Martin\u0027s proposing it would need to be on exactly the same in promotion exactly the same structure on your just encoding the Alliance different my understanding is that both of the proposals believe they implement the same information on now as a working group you need to validate that but that was the intent of the officer so I do "
  },
  {
    "startTime": "01:49:00",
    "text": "believe that you\u0027d have to redo what\u0027s done here in a pretty different way in order to actually standardize this if you did - now the other thing I wanted to comment on is that um we shouldn\u0027t consider these microcontrollers as completely proprietary things used to be that everyone handcrafted their real-time kernel with their bootloader and they did some magic stuff on their microcontroller because their magic guy\u0027s embedded developers believe that they\u0027re magical that\u0027s going away we do have platform operating systems we\u0027re really trying to do open source communities we\u0027re sharing bootloader technology across hundreds and hundreds of different microcontroller targets we need to be able to reuse this in standard way we\u0027re sharing the libraries even though it might not be in the same bootloader those libraries aren\u0027t in the same ecosystem of open-source components very well tested which is a good thing and we share that same library between the application the more we can do that better search want to point out that things are changing for embedded this is not the old world of everything\u0027s proprietary on Carlos then Brendan yep or Carlos leniency folks you just want to do +1 on Dave and eight points and and trying to answer the question whether we need one or many I think it\u0027s really coming down to requirements we need efficiency because we need to make sure that we address all these different use cases and we need flexibility and extensibility to make sure that we are forward-looking so I think just want to make sure that we keep those in mind when we want to address the question and they\u0027ll Elliott also brought a good point so I think the number two ish is it makes sense one for sure Jewish but not five ten I just want to ask the question are we planning to be standardizing a secure boot header format I thought we were doing update but I\u0027m hearing a lot of discussion about about boot loaders and so I think we need to answer that question is this about doing update or is this about doing secure boot because if we\u0027re talking about what goes in the boot loader and what doesn\u0027t then we have strayed into secure boot and we\u0027re not doing firmware update anymore so just Anthony be more than a Support Officer melodia arguments in my experience I had the most software so really have a trouble to find equip the lab race so firmware can be encrypted and it can be signed so now update you need to decrypt you have a code to decrypt as this large code and also we\u0027re about signature work on integrating data code science is much "
  },
  {
    "startTime": "01:52:01",
    "text": "more significant larger than just a part in some data right where the binary is called C boy it\u0027s already concise a lot by a word concise already may be smart enough right I just say the benefit of using multiple formats what\u0027s already already challenging a crypto library there may be a different format do not have that compare their benefits one oh wow but I\u0027d say if there\u0027s a case where you don\u0027t need to formally encryption for those cases where final format does save some maybe but uh that are actually here so will that use case it\u0027s a public person that\u0027s moving to data points facility the number that was thrown in the about 800 something bytes for SIBO decoder that\u0027s a generic decoder that includes floating point so if you take our coding point it\u0027s 720 and maybe you can share such little bit more so I don\u0027t think that that\u0027s really something we need to argue but I think the more interesting question is whose signatures do we actually validate here so if we convert between forwards somewhere that means that the the old signature that was on the old format yeah essentially you can only verify that if you actually still have the old format around so depending on on what is actually the authorization structure of the hood louder it may be no cost at all to have a completely different format because you resign this stuff anyway and and then you can of course do it in a different format all it may be very integrative the bootloader actually tries to be part of an authorization chain that includes the original signature then it\u0027s hard to use that if you are not using the same pump so Karsten before you sit down I just want to ask a follow-up question what you said are you advocating one architectural view of the bootloader or are you saying we need to accommodate both I just wanted to put in two data points here so generally I think that it it\u0027s not hard to do that part of SIBO that they actually need in a bootloader so I don\u0027t buy the argument we have to do something simple it would not about I wanted to find out that there are two very different situations where one where you resign by a different authority and one way you are trying to use the original authority and those have different influences on what we actually came to thank you okay "
  },
  {
    "startTime": "01:55:02",
    "text": "Dave found a problem following up on what Zach said and Carson just clarified what I\u0027m saying I\u0027m actually the the what I\u0027ve heard in the past you say well we already have Seaborn there the reason was that he was a code size in the device and you know therefore the library\u0027s lying there those are 800 bytes or whatever already there let\u0027s use them that\u0027s not actually my point um I think if you wanted I don\u0027t think that\u0027s a valid argument is what I\u0027m saying but there is a strong valid argument to be made sorry this is very loud like to reuse things that we know and code that is debugged and so when I said cut and paste see more into your bootloader and adapt it to its memory structure I meant it literally that\u0027s great that\u0027s not a bad I\u0027m not saying that\u0027s a bad thing you\u0027ve got this library that works you might need to use in another environment so my point was don\u0027t make the argument that it\u0027s lying in memory and I can reuse it exactly where it is but the technique and the encoding and the code that\u0027s debugged I think might be a good thing and now so the second point about clarifying why don\u0027t we start talking about boot loaders all of a sudden I think you know because we\u0027re running we\u0027re getting my act across my application across the wire that\u0027s not the bootloader doing that but eventually you\u0027ve got to hand it to somebody to apply the patch and that to me that\u0027s where my system reboots that\u0027s not really the bootloader but we call it boot this is the thing that applies to patch checks the signatures and then restarts the application so it\u0027s not the application that\u0027s patching the application Brenda can go handle yeah the the point I was making when I said that was perhaps I was a bit obtuse and the what I\u0027m trying to get to is that there are lots of existing formats for boot loaders to verify the integrity of the firmware their booting and I\u0027m not so naive as to think that absolutely everyone is going to jump on this format as the mechanism that they use to verify an image before it\u0027s booted I in fact I wouldn\u0027t be surprised if a very common use case would be to deliver a component that contains a bootloader signature header already in it and that the the update mechanism is completely separated from the boot validation mechanism in fact I would argue that when it comes to separation of authority it would be highly probable that the authority for delivering an update is not the same as the authority for signing a firmware and we shouldn\u0027t conflate the two that\u0027s not to say that you can\u0027t use the header that we\u0027re describing as a boot time header just that I think it might ignore some other system constraints I would point out that 4108 does separate those "
  },
  {
    "startTime": "01:58:04",
    "text": "as one just a breath and say thank you that\u0027s correct I don\u0027t disagree with any of that Daniel fidelity in RIA I think back to the question of how many formats you should move forward I think we all know the answer to that the minimum number so we already know that the minimum is greater than one and I think the question is is should we go up to two is the decision factor is applicability to class one devices or order line path you take if we need two formats you know so that exists one of them is going to be widely used on Catalan devices and well you know let\u0027s go with two if we can do it one is to so I guess I\u0027d like to find out what the sense of the room is you do a hum so I\u0027d like to ask the question or explain the question I\u0027m thinking of asking get comments on that that is do one and only one manifest format yes it were no and then you\u0027ll be show em again are we even ready to a home it\u0027s another I\u0027m trying to get a sense oh yeah okay because I mean people are still arguing about like sizes and like we don\u0027t even have the sizes of stuff and like we you know and I\u0027m there\u0027s there\u0027s a valid question about like are we even ready to do that I mean I\u0027m just wondering yeah okay I I think I heard two potential questions in there Russ dis Elliot one I think goes to what Zach said which was do we have a single information model we all ready to have a sink okay if that\u0027s the case then then then I would Roger and the Charter says we have one and only one information about so yeah I think I\u0027m kind of singing of the backing of immigrants point there and I don\u0027t feel that I\u0027m ready to answer the question so I don\u0027t know if the question is do we want to answer the question now or or what what is exactly what you\u0027re trying to get to with it with the come yes right okay fair enough so yes no or don\u0027t have enough information yeah you could have a hum Baalak do we wish to have one well whether this wish will be granted you know like it\u0027s a second question okay so let me subtly change that you think this working group should work on only one yes "
  },
  {
    "startTime": "02:01:05",
    "text": "no don\u0027t have enough information yet okay let\u0027s do the home now do you think this working group should work on one and only one manifest form at home now for yes um now for no um now for need more information so there was a bit more for at least from this corner of the room for one and only one and there was about half of that for need more information in the room that people in the front half tend at home for strung it for the first one and the people in the back half said that oh we love it longer okay close your shop less so we need to mix up where you sit okay I think we need to take that to the list as the next step but that that was it it helped me at least understand where the people of the room are thinking okay so we\u0027re down to the next steps mark Dave no I think you just summarize where our next steps are I don\u0027t have anything else to add I think there\u0027s some that the next steps that we know of just as a reminder did the authors have things Brendan and Hamish talked about they need to update the information model and architecture documents and once we see those then we can decide whether we have consensus on those and what our next step is there but we need to see the text first I think Martin has an action item to post numbers that are similar to the sort of numbers that Brendan did and I don\u0027t know those the main action items that I can think of and and the chairs haven\u0027t actually items update milestones thing okay that\u0027s my summary thanks for coming and here if we bring the blue sheets up you gotta get them to stop the blue sheets blue sheets anyone next to Zach "
  }
]