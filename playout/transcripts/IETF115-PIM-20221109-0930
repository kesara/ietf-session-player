[
  {
    "startTime": "00:00:32",
    "text": "problems so a lot of people I know that of course I know we need to start talking about I mean 10 years you know avoiding a state like these positive problems notice the horse is natural to compare living here because that's right intentionally thank you um experience hello"
  },
  {
    "startTime": "00:02:05",
    "text": "the coffee machine in our hotel was broken this morning so there was no traffic to wake up I can introduce you to my colleague here and she was yesterday in a few days because like we have to have to work okay people and yeah properly we can say okay this will scare them in this study we don't have recovery yeah but it's trying to be out front Okay I think that's fair I'm gonna do this again yeah and we'll drive it from here and you go yeah and we're about times we should probably yeah uh yeah I wonder how many people they have online yeah you could join too and see I'll take that one yeah maybe I can do that Vienna yeah can we see it there over there so that was great but yeah I can certainly do you do that here yeah I'll log into this computer too so"
  },
  {
    "startTime": "00:04:02",
    "text": "we can yeah but I like to do it here it is time you're right well especially because I have three grandkids now so I gotta add another one in there like you just change the number 140 to 150 nothing else and maybe we don't need the pictures anymore actually thank you I am not online foreign you know they already did it but yeah foreign"
  },
  {
    "startTime": "00:06:28",
    "text": "just do this I think yeah got the slides the thing right yeah this is where the so they're now they're now sharing we can start okay okay yeah go ahead yeah I'll tell you yeah just keep an eye on the key over there all right everyone welcome welcome to Pim might be our shortest meeting in a long time I mean smallest meeting not sure how many people we have online right now um so hope you all have uh signed the blue sheets or well rather scan the QR code or yeah register online um it's a note well um let's see I guess you need to drag that yeah yeah you should you should all have read the note well nothing new I think then we have the agenda so yeah we'll go through some working group status first and then we have Pim light that we had before and then there's some some various new presentations any comments on the agenda all right um okay for the working group status"
  },
  {
    "startTime": "00:08:00",
    "text": "so uh we have made some progress a couple of new rfcs since last time so you have the young model has been published and some IBM pmld extensions and published um and yeah at the bottom here we have three jobs that they have requested publication for um I start packing needs revised draft I got some good comments there um and the other two are in the queue for the Dr Improvement then backup Dr not really making much progress there um Cisco Systems so Pim bider it is not biter bdr it is under progress right now and I think the new version I'll be publishing in next few weeks and then that should make progress okay um so by the way we um going forwards we're trying to have Shepherds for all our working group documents and uh ideally at the time of adoption we think we should try to have a shepherd so the shepherd can help you know make sure that he offers are making progress make sure that discussions in the working group gets Incorporated in the document and so on and also check if the document is ready for last call um so including the droughts if if anyone is interested in being a Shepherd please let us know um so uh yeah we probably won't be able to find a separate for all our documents right away but uh at least when we do our last call we would like to have a shepherd um so second part of the status we have a number of documents that are not being discussed today um so we have the um ibmp mld-biz documents there's like"
  },
  {
    "startTime": "00:10:01",
    "text": "three documents related to that here um and um we can probably do Last Call on those soon let's check with Brian Haber man who's been working on that what the state this is uh if he feels stare dumb um we just adopted the 3228 bits that you see near the bottom there um so we did an adoption call we didn't get much input and we decided as chairs to adopt it anyway um it's basically just Ayana considerations for igmp so it's something that we need to do um we want our help to help see if it's ready for last calls in the we need the we need working group input for for last call um okay what else um yeah for the point-to-point mult yeah multiplied policy and uh policy ping uh come on do you have any comments on those or what do you feel like the status is are they almost done or um yeah there were some discussions on the spring uh they wanted us to clarify some stuff on their replication policy uh replication uh policy and I think we submitted the clarifications uh to the spring and we are just waiting for last call again that's where it is standing okay great yeah thanks yeah we've also had this this draft that uh I'm an off-ro so as an author I hope it can go to last call soon but I'll defer to Mike in the working group yeah and uh yeah also let's see um yeah I think that's pretty much what we"
  },
  {
    "startTime": "00:12:01",
    "text": "have for status I just got one comment about the going back to human sorry the um point to multi-point policy peeing I finally remember I need to check my emails again but I think I remember the spring chairs telling stick and I to hold off progressing these until the replication segment draft and spring progresses is that true yeah I I have to apologize I I was running around trying to find my way through the staircase so my mind was a little bit foggy here uh so the the comments that I gave was for the uh point to multiply and policy uh draft in in Pim so there is a ping and then there is a policy itself so my comments with regard to the point to multiply and policy with regard to the Ping uh last I send out I did some modifications to the draft I did send uh send the email to the mpls working group because they had some comments to ensure that they're okay with the changes and I did ask for a early adoption early allocation of Ina sub tlv which I never got any response for that but I did trigger all this stuff on the on the working groups but so far I have not got any response I would imagine if we can get that early allocation of the sub tlv that would generate some response from mpls working group perhaps okay so if you think it could help Stig and I maybe could help maybe ask the mpls chairs to help us I I would definitely appreciate that yeah okay why don't we put that as an action I appreciate it thank you very much and I think you're right I think that's it yeah all right so that was the Steelers uh any comments thoughts on that but yeah if"
  },
  {
    "startTime": "00:14:00",
    "text": "you might be interested in shepherding a document uh please get in touch with us otherwise we might start getting in touch with uh I guess various participants and see if they can please help out there anyone would be welcome to Shepherd it's a good way to learn about the iitf process okay um so then I guess hormone was first with the 10 lights okay so uh I think the the giraffe what what's adopted by the the working group so thank you for very much for that we had some very good feedback from uh Sandy and uh tanmoy from Nokia so I tried to summarize all this feedback in this slide uh to see what other work needs to be done any other obviously feedback is greatly appreciated so we can push this through the last call and maybe uh start looking at the because so everybody is aware of this draft one of the ties that it has is in the beer site for PIM signaling over a beer domain and this is where how it was born so any extra comments that can come along to push this draft through would be greatly appreciated next slide please all right so uh first the comment was that let's make sure that it's very clear that which message types we are going to support so uh looking at Ina n a which I always have a hard time saying it but anyway there are 12 message types this seems like 4pm and we only gonna support the message type 3 which is the"
  },
  {
    "startTime": "00:16:00",
    "text": "join and the prune and basically the the trick here is that most of this message type you need to have a Pim adjacency via Pim hellos before the router the pin router accept the message uh most of these 12 message types for that matter and one of the exceptions for the PM light interface is that you do not need to have this pm adjacency and back and forth of the hello messages for the router to accept the Pim join and prune message type 3. so that was one thing that we clarify quite you know Chris are clear that there is no other message type that is supported the the second thing was the PMS Parts mode again just because there's no hello adjacencies that means that all the goodies for the Pim SM need to be within the pin domain what that means is that you are not going to be able to have a RP or a Dr on the other side of the team light domain so if there are two pin domains that are attached through a Pim light domain you cannot mix and match your RPS and and designated router over the PM light domain so we did the clarification on that one uh we also put a bunch of texts around the fact that the lack of Hello message means to Pim light routers and one of the things was the join attribute that we might get in some of the join messages obviously there is a I guess there's a flag I can't remember quite well maybe the experts know better than I do or there was a soft tlv that was communicated in the Hello message saying that the router supports the join attribute with the lack of the Hello message basically it comes down to the fact that if the software on the router does support join attributes they need to be able to process it if they don't"
  },
  {
    "startTime": "00:18:01",
    "text": "then they won't process it and the last but not least is the Dr selection again obviously that needs a Hello message and uh with PM light uh the Dr selection needs to be within the Pim domain it not it cannot happen over the Pim light interfaces or across beam light routers to do that Dr selection next slide please uh so with regard to the failures of the Pim light interface um uh today usually when the hello adjacency goes down we withdraw a bunch of multicast routes from the uh the the routing table uh in this case we are kind of suggesting that there could be other type of protocols that can be used to detect that epim light interface has gone down as an example if you have a Pim light interface over a layer 2 uh Network where there are multi-hop away from each other then you can use a protocol like BFD as an example to ensure that there is connectivity on your Pim light interface and if PFD goes down then that the interface is withdrawn from the multicast route and that oif is erased from the multicast raft and this will kind of manage the the uh the traffic the downstream traffic going out of the multicastra so these are all the stuff that we added to the draft uh again if there are some other comments totally sacred so um I would really like to see that we don't use standard pin but that this all would be running over TCP RFC 6559 Port right because we've seen especially when this"
  },
  {
    "startTime": "00:20:00",
    "text": "is used together with beer we're supposed to be able to much easier support really large amount of state right because the state isn't in the core anymore but we're doing egress to Ingress PE signaling in all of the large-scale multicast deployments that I hear was always the problem of how to get the reliable big burst under reconvergence right so you're sending you know ten thousands of Pim joints uh or Pim leaves right so um and uh it's it's just terrible right I mean the everybody you know as a vendor is making smart for trying to to make that work well and then we finally gave in and said okay let's let's have what we did with mldp why people were using bgp as one of the factors and so when we're now redoing Pim can we please you know pick up our own stuff which was simply you know use it over TCP and uh then here this is the simplification and I think that should make using TCP um as we did find in 6559 even a lot less difficult okay yeah I appreciate that um just taking a step back um again I want to remind how this thing was born this thing was born as you know through the beer right and some of the ideas we were toying around on on the beer side was that we made it very clear on the beer side that this joins and prunes are only being used for signaling they are not something that are part of the pin protocol and I think at that point of time the decision was made between some parties that we need to grab the pin and kind of water it down to become distressed that's fine I have no issue with going over TCP but then that definitely going to change the message type of the join and and the prunes to be over TCP right so I I don't remember exactly what we did in 6559 I need to remember that as well I thought it is pretty much you know the pin messages without any changes okay and"
  },
  {
    "startTime": "00:22:00",
    "text": "just uh you know the problem of the hellos which I guess we're not going to have anyhow and the discovery so um but um just because it's kind of overlay used doesn't change the problem of diversity Behavior which is that we're triggering all these join when there's a route change right and that can result in thousands of messages and TCP nicely takes care of that in reliable uh doing that whereas in all the implementations you need to start having really large buffers which you otherwise don't want to to buffer these messages or you're going to have to wait for the 60 seconds to resend it and all the crap that you know the datagram architecture of Pim had given us okay I need to read that draft honestly I haven't read it so I'm I'm not aware okay so on camera Cisco Systems so just to give update the with respect to this particular draft I think it is completely agnostic to whether we do it over TCP or UDP so whatever spec we are defining in this draft that is more to clarify the base Pim Behavior where we always wanted that hellos are coming before even we could do any signaling over that interface no and and hopefully it is exactly um that way but then I think we should still have a Pim light implementations must support a default to Port right 26559 right so that we finally get a good reason to to to get Port deployed right for it being Pim over TCP right so uh that was the marketing name that we gave it right so um there's there's no reason to say we we should continue to have a Pim datagram as the default for for something like this okay uh I'll read that draft and I'll open up a conversation 6.5 nine um other than that running they just uh"
  },
  {
    "startTime": "00:24:00",
    "text": "process observation um I know that Sandy did the adoption call please reflect that in the data tracker Lister as the shepherd make her a delegate in the working group so she can push all the buttons this is because both of both the chairs are authors in this draft so yeah we need to make sure that everything looks correctly so please just make sure that everyone knows that it's Sandy the one who's driving um everything here um next slide please yeah so uh I think we covered this is like two uh I was looking for comments and stuff like that so um that's all good okay thank you are you on Nate yes can you hear me yes we can hear you good right can you see this light can you see the slides I can perfect great you're on I'll flip the slides for you all right thanks good morning everybody um so just an intro slide and this is a link to the uh the draft document that we have out there currently um go ahead and flip so just to uh kind of go through the problem that we're looking at here again um this is primarily for boat networks and these are kind of characterized by everything is on a single subnet um we have displays and sensors and structure devices all kind of connected with each other typically there's no internet connection available to these devices and the problem we're trying to face is"
  },
  {
    "startTime": "00:26:01",
    "text": "that in a situation like this you might have a one gigabit sensor um on a network with several other lower speed sensors maybe 100 megabit sensor and if you have that gigabit sensor streaming multicast data then it a standard switch will output that multicast data and overwhelm the link to that 100 megabit sensor there um so go ahead and flip so the solution here is to use multicast snooping to prevent those streams from going out to the 100 megabit sensor there and that forwards that causes a switch to only forward uh the packets to devices on ports that request them go ahead and flip so kind of a review of some of the the multicast um or some of the IPv6 addresses that will kind of build up to the problem that we're facing with this um based off of our c4291 this is the definition of a unicast address and you'll see that the least significant 64 bits is uh known as the interface ID or IID flip so to build up multicast address over time this has kind of evolved starting with uh 1884 2.91 and then from there you have kind of a definition of the unicab unicast prefix based multicast address where you've got the 64-bit Network prefix there and a group ID is a least significant 32 bits and then finally RFC 4489 provides a mechanism for generating a link scoped IPv6 multicast address so"
  },
  {
    "startTime": "00:28:00",
    "text": "basically any um uh link local IP address comes with a block of uh multicast addresses that it can assign based off of its link local address so based off of this that 64 bits from the link local address goes into the network prefix there kind of that middle 64 bits and then the least significant uh 32-bits are the group ID next slide so for the group IDs these are assigned based off of RFC 3307 section 4. 4.1 talks about permanent IPv6 multicast addresses and and there's the range for those 4.2 talks about the multicast group identifiers allocated by Ayanna again there's a range for that and then 4.3 has a range specific for dynamic multicast addresses from hex 800 all the way through FF next slide so the problem is when you go to transmit these multicast addresses on ethernet um what can happen is the the group ID being in the least significant 32 bits um on ethernet you only have 48 bits and so the first two octets are three three three three and then the last four octets are the least significant 32 bits which is the group ID there and so what can happen here is even though your link scoped IPv6 multicast address is unique the 128-bit address is unique when that goes out on ethernet if different nodes choose the same group ID then you end up with different link"
  },
  {
    "startTime": "00:30:01",
    "text": "local addresses with um sending the same uh Ethernet Mac address and you can get collisions there next slide so we have a number of requirements for the solution here first it has to be zero configuration most of the customers do not have expertise on network configuration and they're primarily there to use the products they don't they don't know much about networking in general no internet connection networks are typically a single subnet uh and then we need a unique ethernet destination address RFC 4541 which talks about multicast snooping it had kind of a survey on switch vendors and their products and based off of that most switch vendors do not support looking at the IPv6 destination address or only looking at the ethernet address furthermore the switch parts at the desired price point for these products they do not support Source specific multicast so what we really need here is a unique destination Mac address for every individual multicast stream on the network we also need it to be a decentralized solution so that we can avoid a single point of failure which is common on networks that kind of rely on that that provide safety an operation of a vehicle so the existing solution for dynamic assignment madcap discussed in RFC 2730 that relies on a server so that's a central point of failure and so we cannot use that directly and then we also want to provide for multiple streams coming from the same host so there may be different applications all running on the same host that all need to send and without some sort of back Channel communication we need to have a solution that will allow them to negotiate with themselves at the same time that they're negotiating with the network"
  },
  {
    "startTime": "00:32:03",
    "text": "um previously we talked about zmap AAP as there was a draft out there that would um sought to uh solve this problem but that wasn't Advanced Beyond draft state so we had talked about um kind of resurrecting that but uh ultimately decided against that so go ahead and flip to the next slide so instead we have a solution that we proposed in this draft up there and here's kind of an overview of what that solution entails so if you kind of look at the next four bullet points is a steps one through four so we would update that table or that section in RFC 3307 um section 4.3 was specifically for dynamic allocations and allocated basically half the range of group IDs to host based allocations um and so the idea there is to kind of subdivide that further and designate a range specifically for zero configuration allocations um and we'll go into specifics on on the next slide um kind of step two would be the application that wants to send a multicast stream would generate a random group ID in the zero configuration range and then step three would be that that application uses mdns multicast DNS to ensure that the group ID is unique just to note there that NBN s is a zero configuration technology and that as part of using nbns we would both be probing um uh the the multicast DNS records before the initial use and also continuously monitor those mdns records in case somebody else decided that they were going to use it and and their probing had somehow failed uh and then kind of the last step there is that the application uses the group"
  },
  {
    "startTime": "00:34:00",
    "text": "by ID to generate the link scoped IPv6 multicast address and then uh goes ahead and transmits so in the next two slides we're going to focus on specifically on that update to RFC 3307 and um use of multicast DNS the the random group ID and then using the group ID to generate the links go multicast addresses um fairly straightforward next slide okay so RFC 3307 section 4.3 it specifies kind of two ranges in 4.3.1 it talks about server-based allocations which would be madcap and then 4.3.2 talks about host based allocations and in both cases they specify the range there 800 through FFF for both of those and the proposal here is to subdivide that and say half of that 800 through b ffff would be for madcap or server-based allocation and then to to take um a range c0 through cff and say that is a reserved for an mdns base is your configuration algorithm um and d00 through Fe FFF that's reserved for future zero configuration or host based allocations in case there's other ones in the future and then um something that was kind of left out of our c3307 that I think is important to note here is that the range ff00 through ffff is for solicited node multicast addresses and so we wouldn't want to uh to allocate those or indicate that those are available for a a dynamic allocation and that should be reflected in the table next slide please"
  },
  {
    "startTime": "00:36:01",
    "text": "um so kind of two slides here talking about how we would use mdns to ensure that group ID is unique first a note on on how DNS uses PTR records to perform reverse lookups and we see the same pattern in mdns as well so RFC 8501 has these examples here so if you want to provide a reverse lookup record for the IP address 192.0.2.1 you create you create a PTR record with the name 1.2.0.192.in adder.arpa and that in-adder dot arpa is specifically for ipv4 addresses and note that the the octets are listed there in reverse order least significant octet first similarly when you go to IPv6 you're taking your IPv6 address and you're you're taking each hexadecimal number and putting it there starting with the least significant and putting a dot in between and then you end with ip6 DOT Arbor so the proposal uses a PTR record for layer 2 addresses and this specifically focus on on ethernet addresses if there are other layer 2 um technologies that we need to support we would need to have separate arpa domains for those but in this case the example being your your Mac address there which is a IPv6 multicast address because it starts with 3333 that again takes the least significant hex digit and separates it by dots and ends with eth Dash adder.arpa so that eth Adder is a new allocation in the arpa reserve table um so once the uh the application it"
  },
  {
    "startTime": "00:38:00",
    "text": "generates its random group ID and it it determines the ethernet address from there um and it then probes the network for for a PTR record with that name and it uses the mdns probing algorithm described in RC oh in the multi-sd and srfc in section 8.1 it sets up a continuous query for that PTR record um and continuous query means that if anybody else also generates that and starts advertising it then then your multi-gast DNS or ndns responder software will let you know next slide please so if the programming algorithm completes without any conflict then the application begins advertising its own PTR record using that name and the uh the the format of the PTR records there's a ptrd name field in there and that would be the uh the device's hostname a colon and the source Port of the multicast stream um so there's an example there my host.localcolon 56296 and just wanted to note there that the reason that the source code is integrated in this matter that allows for multiple applications to be on the same host um and so if if you had two applications that on the same host that happened to generate the same PTR record there would be no way to know that without including that that Source Port there this way your multicast software will tell you oh hey I found this record and it's it's using the same Source Port that you're advertising therefore it is you and not somebody else on the same host um and then the existing draft basically has a recommendation that the application should retain that group ID value in long-term storage and use it"
  },
  {
    "startTime": "00:40:00",
    "text": "the next time the multicast stream is transmitted um so this when you first set up a network there may be some conflicts that occur but by storing the group ID value and long-term storage and reusing it next time that basically ensures that your you're you're only going to run into that conflict the first time the network has started up or anytime you you might add a new device to the network after that that conflicts shouldn't happen and your network won't have to go through that um that conflict resolution process where you have to generate a new group ID probe again and transmit or register that PTR record next slide so that's that's basically it um wanted to open up for any questions hi Nate this is Dino um I have a question you said the source could have multiple applications running can the receiver have multiple applications running as well foreign yes okay and could you go to the last slide you said you have to advertise the port number uh you probably should advertise the port number with the multicast address so you know which port to use with which multicast address because there could a source that's running multiple applications needs to use multiple ports correct are you going to use the same port with multiple different um addresses foreign so in this case uh are you meaning like the destination port or the source Port this 56 296 on this slide however you intend to use that what are you using that for Destination port or a source port or both source and destination or the same port uh so the the source and destination are"
  },
  {
    "startTime": "00:42:01",
    "text": "going to be different ports uh the the exam or the the record here contains the source Port of the Stream and then you're going to use a well-known destination port that's correct yeah okay so um so answer my question then the if the source is running two applications 56 296 is being run for one application are you advertising another port for the other application right so what we would hope to see here is that the two different applications generate different group IDs and so the the name of the PTR record um is going to be uh different um it would have a different uh set of different address dot adder.arpa would be the the name of the record and then the ptrd name would also be different that's fine but that means you're going to use the same source and destination port for the different streams I don't think you can open up a socket to do that I think you have to have a different Source Port per stream well yes that's correct so so in this case if you have two different applications they're they're the record name would be different because the the address the destination address would be different and the source Port would also be different okay so there's a list of these my host dot local port numbers that'll be advertised right right it's less about advertising those and more about advertising the address okay then why then why do you have to advertise the report if the if the other side's just going to listen on the well-known Port then you don't need to advertise the source port right so what can I would say okay um yeah we can see if there's any other"
  },
  {
    "startTime": "00:44:00",
    "text": "questions and if not I'll answer that one okay yeah let's just dig um it's one thing about the column I don't think that's allowed in a domain name could be wrong but uh yeah I'm not so sure if you can use that um but otherwise um if you're assuming that any any application using a group ID in this range would use this scheme right that's right yeah okay um so we are not sure what the Mad cap status is if if it's being used for IPv6 today but um we may have to update you know madcap RFC or something like that since we are constraining you know what range they can use uh we probably need some review of this I think from people working on mdns or possibly not sure some IPv6 experts as well but let's show that it works well for us you know that we have a design that works for your use case first of all okay that's my comments Alvaro algorithm I was going to try and do some of the same points that Stig is making about um you know what you're doing in this draft uh if I understood correctly you're not really changing mdns you're using mdns that's correct you know distribution and all this stuff and then the other thing we're doing here is you're changing the ranges in 33 whatever um right yeah 3307. so you know it sounds like the working group in general even though you I don't think have asked for adoption uh things that this is you know a fine solution uh there's some questions that you can you know maybe address or whatever"
  },
  {
    "startTime": "00:46:00",
    "text": "um the question that I have not for you but for the chairs mostly and is um should we do this work uh meaning this is really an application of mdns and an update of an Ina registry so what I would probably want to ask you guys uh stegan and Mike is to figure out with um probably the I think it's the DNS is the working group that does some DNS and maybe six men to figure out what do we do right I mean it's probably okay for us to process this document since it's a multicast application in the end um but we'll need to coordinate with them the RC that 3307 was produced by working group that doesn't exist anymore um and so we need to figure out who who uh you know still owns that um and and um how can we really modify the registry if uh six men or whoever they appear six guys uh who are going to own this are okay with that and and how do we get uh to that so we'll need an awkward Nation with with those other working groups uh it might be that you know given that we're saying that this is a good multi-ass solution that we can uh you'll let mdns or uh the NSD for example process a document so we need to figure that out um and and you know the the less overhead that Nate can see the better uh so you guys do all the work and let me know if you need anything from you know we have now thanks yeah I think uh this is Mike mcbradick stig's gonna have to drive that part because I'm on the draft and I think it's a good idea so um Stig will will drive that Brian hiberman is the one and only author of 3307 so I don't see him on the Queue but we'll make sure that he's involved in this as"
  },
  {
    "startTime": "00:48:00",
    "text": "well and last comment is is magma that working group you were talking about that no longer exists so 307 was done in malloc Malik which sounded like multicast allocation or something which I just looked and it happened to be in the transport area for some reason okay um I don't know why um so it we probably could ask Brian because it turns out that the Registries are expert review registries um I looked at the Ayanna page and there's no expert assigned I would have assumed that maybe you would have been Brian since he wrote the RFC um but uh you know so we need to to probably talk to um also uh Eric Clive well Eric Sarah Klein and Gregory Frank to figure out because they're probably going to have to get an expert which would be great if it was Brian because he's already you know maybe familiar with this and has at least in the draft and and all he needs to do is approve if it's okay for the range to be different right not the application itself um so I mean this is just a bunch of different parts that we don't control that we need to just make sure that they're okay right yeah I think we also may have to look at madcap you know other implementations are they today using that large arrange but yeah well into that and contact people you know thanks so um to respond to your comment um you know we live in a decentralized world now and uh we need unique group allocation for applications in general the problem needs to be solved it turns out this solution is solving it only for a layer two Network I think we need to generalize it and do it for layer three as well so um so when you talk about it in that context then this working group should work on it yeah yes uh Stig again yeah I agree and and that's actually one of my concerns with this maybe is if you come"
  },
  {
    "startTime": "00:50:02",
    "text": "up with something like site local or or more Global you need to make sure that they don't conflict with each other I'm also wondering today if someone uses a group address in this range just by chance or whatever how do we gracefully you know detect that or or how does what does it work well that's that's why he wants to do an allocation that's dedicated to to this so nobody else should use it just like Nate is staying away from the existing allocations that also means that you know someone deploying an app or just choosing a random address that need to be aware that they should stay away from this range or yeah yeah I I have the same concern you do because um this solution is using multicast to allocate a multicast uh address and the reason it works is because it's on Layer Two but one thing I just want to draft that will help us so is that you know if an application receives packets to this group that is not coming from the correct Source then you should stop using it so that that should help okay um yeah also thank you very much for the draft and I also don't know yet what to think about the technical solution but you know as as much as as as I likely may also run into it to issues of how good it is in the end right I mean this is not the first time that the best thing we we were able to actually manage to get done isn't the best thing we would like to see and you know and in doubt I would rather err on the side of getting something useful deployed than waiting out for something much better we can't figure out yeah all right okay thanks uh yeah so I think I'll uh reach out to to Brian and potentially some other people and get some input and uh taking a working group we yeah we would like you all to read this and you know see if you like"
  },
  {
    "startTime": "00:52:00",
    "text": "the idea see if you can come up with something better or improvements to this um so yeah I kind of wonder how many people have read this um I don't think we're ready to adopt yet but uh kind of curious just if you know if mostly have read it or if it's mostly new to the working group I guess we needed that Paul if you want to check that yeah um yeah so just to get some quick idea and just want to do a quick pause to see how many people have read this documents yeah think we're okay then we don't need to know exact numbers but I suffer see six people I've read it and six people have not read it so that's really good um yeah so please please read this document if you're interested and any feedback on the list would be great and in the meantime before the next meeting I'll uh yeah reach out to some external people and see what we can do um all right"
  },
  {
    "startTime": "00:54:01",
    "text": "Oh I thought I did I thought I canceled it but oh wait I just need to go back I think you just need to go back to um you know I don't know I don't know either yeah you're gonna stop sharing and yeah okay so that's stuck on there that's not me anymore right so I was thinking huh what is your pool closed yeah let me see yeah you know as it's reopened but but this is on the that's it's not on your computer you can try to reopen and close it again or maybe I did this Miss slapping to end session okay I think that's something okay very good okay yeah I think this misses just get it off my screen but then session is actually ending in the poll okay thank you Nate appreciate your time go to bed it's late and hungry see online hi hi Mike can you hear me yeah go ahead okay uh hello everyone I'm hung ji from erosion uh now let me today let me introduce the new individual draft about European multicast young model"
  },
  {
    "startTime": "00:56:01",
    "text": "on that space this is the first version for presentation another and the effort is from when it comes the young design team we are from Arizona sales call IBM Channel mobile and Juniper next please and now let me introduce some background about this draft there is a class ATF based European young it defines ITF young data model for internet VPN services and it covers the following uh five types of European root are defined in RC 7 4 3 2 and rc9136 uh the type 1 is the internet Out Auto Discovery root Tab 2 the Mac API what has been root it helps reading inclusive multicast United root the abbreviations is is the ml root and therefore the inner segment root and I've file the IP prefix root uh nice please and this year uh the RFC 9251 was published in June this year in this uh and this RFC document describes the hmp MLD proxy for European it defines three new European root types to carry the hmpl MMD membership reports uh"
  },
  {
    "startTime": "00:58:03",
    "text": "so they are the type things from type 6 to type 7 2 type 8 times 6 is the selective money cards the ethernet type root uh the abbreviation is the Smart root the purpose of this route is to distribute the host intent to receive the multicast traffic for certain uh Matt has a roof America's Grove the tab Tab 7 type 7 is the moneycast membership report sync root and type eight tablet is uh Mike has losing root uh that the the title type 7 and 8 are optional and they are used to optimize the multicast access segment currently this has these types of rules haven't been covered in any a young model assault we Define the new ITF UV multicast model uh it extends the ITF uvn data model to configure and show the even if your money has service and that's great here is a here is the structure we augment the uapi instance and add three new attributes about the about the new new three European rules the first one the cell multi advertisement if it is enabled with the PVP code public and"
  },
  {
    "startTime": "01:00:01",
    "text": "next uh the UV itmp proxy if if it is enabled it will trigger image root update with the Marcus Flags extended community and the agency process is set it means the igmp policy for evapia is enabled the if you remember the process is similar as the above one it's a if if if it is enabled it will trigger ml rule update and that means the mlde proxy for us here is is set uh that's a piece uh this is the details about Australian European roots and we augmented the division instance rules slash rules uh and the first block is the Smart route the information about of the smile root and root RT and RT information are similar as other equation rules and the internet tag is the item is used to identify a broadcast domain and the second block is the moneycast is a Type 3 Type 7 root and the in Ethernet segment identifier is the ESI information uh the last block is the Minecraft Leo sync root um most of the attributes are similar as as the monkhouse membership reports in root the max response time and the max"
  },
  {
    "startTime": "01:02:00",
    "text": "response time is the value to be used while sending a query as defined in the hmp protocol okay how the UV rules are written like next week okay this is a the transfer is and we will welcome uh more comments and thank you uh yeah hi it's the Stig here so um the uh evpn bgp routes what I should say that you are you know describing here they are all specified and best right yes so have you uh have you tried to get this presented in in the best working group um I saw that this stuff is used to handle the European multicast service include igmp packets or the MLG package so I made the first uh present presentation in our pin working group in the P Morgan group dosing is better to make a presentation on the best working group uh I would say um at least it's it's it relies heavily on um you know um an RFC from best so so yeah I think it's good to present it there I guess you have to think about which working group it would you know fit fit you know you know what which working group should be the home or the document or owner of the document but uh but yeah it's probably good to get it presented there at least get input from people invests"
  },
  {
    "startTime": "01:04:02",
    "text": "here yeah yeah maybe a man has some thoughts system so I think you already made that comment that this belongs mostly in best because even though multicast terms being used the whole evpn infrastructure with bgp it is being done in the bus itself and on top of that the base evpn Yang model itself are on hold for now in this so I don't think it may be a good idea to do something which is beyond the base evpn itself so it has to be done either along with the basic VPN or after that since this model somehow inheriting or extending parts so the other model or yes I guess so yeah yeah so I think we yeah we can definitely talk to the best shares but yeah it sounds like uh sounds like one of the best chairs anyway things that should be done in bets right is that what you just said it is you think that this draft that was just presented should be in best yes okay okay kind of makes it easier oh okay oh okay okay all right so Stig and I will talk we'll reach out to the to all the chairs and we'll uh we'll help you out hanji to know where to take this okay thank you thank you is Lenny on okay I am very good thank you buddy do you want me to um just tell me all the slides or uh do you"
  },
  {
    "startTime": "01:06:02",
    "text": "want me to just tell you tell me when to flip okay how's how's my audio can you hear me okay yeah it's great all right um so this is a draft uh that um I presented in um in mops on Monday um also going to present this uh in mbone D um there seem to be support in uh mops uh to adopt this on Monday looked um uh pretty good um in preliminary polling um but I'll also going to present an M bone D um in case uh that's another relevant working group on this but wanted to share this with this group because um this treaty end is a model that um that utilizes uh the protocols that Pim has been developing um and uh some some protocols that come has been developing and wanted to share this with folks and Tim the um make people aware and get some uh some feedback so tree DN is a it's a it's a model for um it's a tree based CDN model that's optimized for live streaming to mass audiences and the the problem that we're trying to solve with treaty n is um with uh live audience sizes beginning to approach critical mass as combined with increasing bit rates for things like 4K AK and augmented reality um are we at an inflection point for the amount of resources that live streaming is consuming on on the network um"
  },
  {
    "startTime": "01:08:00",
    "text": "the perfect example of you know the uh the more the most recent example of this is um Thursday Night Football um American football the NFL is uh is um for the first time uh being um exclusively live streamed uh by Amazon Prime that started about two months ago uh and the first the first night um uh of that Amazon announced uh there's about 11 over 11 million uh streams um and this is pretty High interest NFL football is kind of like the national religion it was the closest thing to a national religion that there is in the United States um so uh given increasing audience sizes and increasing bit rates you know are we at an inflection point now um if not now will we ever be and if the answer to either of these questions is yes question is what what should we do about it one thing to keep in mind is that live streaming is not the same as on-demand streaming there are some people who have kind of suggested uh what's the difference um you know streaming is streaming if people aren't watching a live stream they'd probably just be watching a Netflix movie um so it's uh and that's been working just fine um a key thing to keep in mind is that live stream uh is different it has different requirements the most notable is expectations for latency um you can't have for for things like sporting events um you want the latency budget is is kind of the goal is about 10 seconds that kind of matches what traditional broadcast television has been um if you go much longer than that you run the risk that um you know you end up receiving uh you could get a text message from your friend about the game-winning score"
  },
  {
    "startTime": "01:10:00",
    "text": "a minute before it happens a minute before you see it or you hear your neighbors or the bar across the street everybody's cheering uh for something that you know you you end up seeing uh a minute later um and if for if you want to do things like micro betting or in-game betting where you can um actually bet on you know uh we'll we'll what's the next pitch going to be like or you know will will they score well the team score in this possession um the the latency requirements are even you know far far less far lower for that uh another key thing to keep in mind is join rates are vastly different um you know if you look at the graphs for on-demand streaming it's it's predictable it looks about the same every night um and it's fairly smooth kind of increases you know around eight o'clock and decreases around midnight um when it comes to live streaming events things like uh you know sporting events it's more like a step function uh with everybody joining all at the same time next slide in terms of you know network-based reputation um you know multicast has been around for a while uh it's been fairly successful in some places it's you know absolutely vital on financial Networks um and it's widely used on video distribution Networks and VPN service providers it's it's it's a a checkbox requirement and um it's also uh used pretty widely on some Enterprise Networks uh when it comes to internet multicast um not so much you know successful um so it's worth it's worth asking you know what and and that's really you know what we're talking about here this is kind of an internet multicast use case over the top use case um so it's worth looking at uh you know what went wrong with internet multicast"
  },
  {
    "startTime": "01:12:01",
    "text": "next slide so you can get lots of opinions from different folks about what went wrong with internet multicast but um I think the the three biggest ones um three most impactful issues are you know the All or Nothing problem um that is every every layer three hop between source and destination must be multicast enabled um essentially every interface on every single router and firewall on the internet needs to be running some type of multicast routing protocol in order for it to work and if any if if any of those links aren't then multicast won't work right I think we're all too familiar with this problem um likewise there's the it's too complex problem um operators have been complaining for for decades that multicast is just too difficult too and complex to deploy troubleshoot operate manage um and then there's a chicken and egg problem um there's no multicast content because there's no multicast audience and there's no multicast audience because there's no multicast content so these have been kind of the the three big things that have plagued internet multicast the good news is um you know this isn't your your grandfather's multicast uh anymore we have uh some technologies that have evolved and advanced um to address these problems and and we're in pretty good shape uh that perhaps that I think the folks in this room might know about but but outside of this room um they're not as well widely understood next slide so treaty end um is a tree based cdns um and it leverages um native and as well as overlay Concepts to deliver a service for end users and it can be delivered"
  },
  {
    "startTime": "01:14:01",
    "text": "regardless of uh even when certain parts of the network uh don't support multicast so there's the native piece think of this as on net um this is the the part of the network that is multicast enabled and the key thing uh the the the key component of this is simply SSM you know we I think we all we all know what SSM is in this room um but maybe outside of this room again um a lot of people have made up their mind and made decisions about multicast and it was based on the ASM model and a lot of you here a lot of opinions are based on things that are no longer relevant or were only relevant 15 years ago with the ASM model the key thing about the key benefit of SSM is it vastly simplifies deployment um with SSM you can get rid of data driven State creation RPS msdp Pim register messages in cap and dcap share trees tree switch over all of these things that that contribute the complexity you know I'd say over 90 percent of the complexity of multicast is Asm you take away when you when you move to SSM you eliminate the vast bulk of that complexity so that kind of addresses the the it's too complex problem in terms of SSM it can be realized typically realized with Pim uh SSM but could also you know in any any protocol control plane protocol or data plane protocol whether it be mlbp GTM uh bgp and VPN beer srmpls uh could be leveraged uh to support SSM so that's the native piece and then there's the overlay and the key component of the overlay is AMT which dynamically builds tunnels uh to"
  },
  {
    "startTime": "01:16:00",
    "text": "end hosts um or or even application layer uh to hop over the unicast only parts of the network um it's it's most valuable at The Last Mile where the last mile doesn't support multicast you can just tunnel over that part but it can it could be in theory be used to support middle mile or um or first mile problems um pretty much anywhere where multicast isn't natively available uh AMT can provide that bridge um on The Last Mile it's uh a nice benefit is it simplifies you can avoid some of the Wi-Fi uh the issues of Wi-Fi and multicast um I think like you you know this well and there's been some work on this and as well as other in-home issues that might make multicast challenging so AMT comma um hops over those uh places and and you know from a service provider perspective um you just push it out to your border and then you know send it tunnel it and send it to the end user um and uh and they take care of it from there so uh the key thing about these overlays and you know specifically um AMT is it it solves the All or Nothing problem um now we can hop over those parts of the network that don't support multicast also solves the chicken and egg problem because in theory with AMT in theory any host on the internet uh can be a potential audience number talked about AMT but any overlay networking technology uh that you know enables multicast could be leveraged and lisp is a good example so AMT is probably the most common in uh use case just because it it's it was designed to solve this last mile problem and it can be integrated into the host or the app or the"
  },
  {
    "startTime": "01:18:01",
    "text": "even a home Gateway um uh but but lisp you know has some nice benefits it can it can help on the actually on the sourcing side um which is something that AMT can't uh doesn't doesn't support um another nice really you know benefit uh is incremental deployment it this treaty you know the treaty end model supports this concept of uh of incremental deployment which is something that um hasn't been available in the past uh with um with multicast Technologies it's been kind of like I said an All or Nothing problem next slide so here's kind of like a 30 000 foot view um of of what treaty M looks like uh you know within the broader um internet um and uh so you see kind of the the big eye internet um within that is you know the multicast enabled portion of the network call this the the M bone multicast backbone and this is where a treaty end provider can take content from a content provider multicast content and deliver it natively to uh Native receivers or to off net receivers those are receivers not connected to the multicast infrastructure that are online unicast only networks we use AMT to Tunnel it so treaty end isn't really anything new it's kind of the synthesis of old things but put together in a way that can deliver and derive the service so you get uh you know treaty n is really SSM plus AMT um Stig you have a question um yeah I was saying that uh this is new right but this is kind of what we've been telling people that they can deploy this for quite some time now but I guess we don't have a document that explains it all in one one place"
  },
  {
    "startTime": "01:20:01",
    "text": "yeah there's there's um there's really nothing new here um uh in from technological standpoint it's just it's the combination of really SSM and AMT um to you know describe a you know essentially a CDN architecture um and uh yeah in the next few slides kind of you know uh explain you know why now why why give this a name okay sure but yeah it might help us reach the Right audience hopefully well one thing I just want to add is you don't have it here but of course often you might have a content provider and static tunnels to various other networks and stuff like that so there's some like content provider here could potentially be you know some router receiving multicast from some other provided that it's the actual content provider I guess yep um yeah I mean you could substitute just Source you know the content Source yeah okay thanks Dina um hey Larry um yeah I want to Echo that comment from stick because we have an AMT document that describes the protocol but we need something like a Last Mile multicast document that basically says that this slide can be done and um and it's basically everything that you've been saying for quite a long time is um you know the sources are inside the data multicast cloud and you reach receivers that are inside of there or receivers that can attach using the AMT Gateway so it's it's like we need some kind of usage document maybe that's an embodian not here I don't know but it's it's a it's a good it's it's a deployment document of some sort and I think it could be rather short too yeah and that could also be included in the Lessons Learned draft that uh will be discussed next um I think that's different once a"
  },
  {
    "startTime": "01:22:00",
    "text": "historical document and one's a deployment recommendation doctor okay yeah yeah um Lenny two two remarks here maybe to incorporate also the work that Jake has done uh for mbon D maybe it's also interesting to point out that the content provider could be of net and um uh connected via the AMT uh Gateway not relay Gateway service and the relay could also be pushed out towards an edge cloud or something um also if you don't want to incorporate it directly onto the routers I think with the virtual routers and Edge Computing this could also be use case yeah that's um so so the document does talk about you know overlay it speaks at a high level about overlays and and the focus here is on Last Mile and you know to address the off net receivers but um but it does talk about how it can it can solve the middle Mile and first mile problems which I think Jake's um Jake's documents uh have done a good job um so it kind of in a hand wavy fashion kind of addresses that at a high level okay fair point but the last remark regarding relay in the edge Cloud could also be is also about the last mile yeah so that's an interesting idea um and uh I would invite you to come to uh mbone D next um and uh there's going to be an interesting presentation kind of an update um on the multicast menu uh that Lauren is going to give um and uh it kind of um graphically Illustrated there's going to be a demo of that so um it's a teaser for M Bundy uh just one real brief comment so that's a good point that Neil's just made that"
  },
  {
    "startTime": "01:24:01",
    "text": "the source could be off net the receivers could be off net so it's not just a last mile um solution it's also a first Nile solution and it could be a middle mile solution too meaning there's no native multicast anywhere and do we want to you but by having a pure overlay that does it all um is yet another example um and uh you might want to do that just because um you may not have multicast so it you still you want to deliver the IP multicast Service uh via you know this large content so all these combinations should be worked in some kind of document yeah agreed and and you know one way to think of this is you know the overlay is it may not be a destination I think that you know it's kind of um you bring up a great Point um uh it could start out with you know this green Network this green blob in the middle could be really really small uh but over time as as people begin to see more and more value to multicast it grows um so you know ideally the the goal and the most efficient um scenario is is native and seeing this uh grow over time but you know the overlays uh essentially provide that bridge that gets you from the green to the non-green and and that grain may be smaller it may be big right now it's small but it allows it's it's it's a it's an architecture that kind of gets more and more optimal the bigger the green gets and it also provides a level of incentive uh for providers to become more and more green but um you're not you know what multicast has always suffered from is you're bounded"
  },
  {
    "startTime": "01:26:00",
    "text": "the value of multicast is bounded by the size of the green um so if you can if you can you know um uh you know this this benefit of an incremental deployment um makes that green get bigger ice yep hey Ice uh Arcus um doing SSM over the internet I think another deployment uh hurdle there is the source Discovery right because the source needs to be uh fed into the the first stop router and it has to be known by the application are you going to discuss that as well how to sort of get the source Discovery going um well we're I mean this this document prescribes SSM which says you know don't do network-based Source Discovery you know search in SSM Source discoveries handle that about at a band you know typically by the application layer so that's um I think one of the one of the great lessons learned and yeah I'm not sure yeah and not suggesting that we do invent Source Discovery because we all know that you know that's much more complicated but by planting it to say the application has to do it that's great but if they don't then we cannot do SSM right yeah so this this model says do that um you know punting to the um uh application layer is or some type of out-of-band mechanism um application layers is probably the best um most effective place to do it um uh but but yeah I mean this this you know we narrow the scope and and we you know make the value judgment of yeah and and this has already been done I mean there's the RFC uh I forget what the RFC is but essentially interdomain ASM has been deprecated um and uh you know it says essentially use SSM so you know we're following those guidelines"
  },
  {
    "startTime": "01:28:01",
    "text": "well I mean just a quick point this is Dino again um with respect to Growing this green cloud like you said you know if you started with an overlay to solve the All or Nothing problem and head-end replication kind of hits the wall then uh providers now have the customers coming out and they have to solve the problem and so they have to they'll be forced to to use the green Cloud because it'll scale better so I think it would it would naturally come out now you want to be able to do this gracefully but um that's how you break the chicken and egg problem as well yeah exactly yep uh okay now next so so this is this is the 30 000 foot view um here's kind of like you know circling into the the green part um so this is a CDN without multicast um you know there's different models for cdns if you uh hit next um Mike uh yeah there you go so there's different models for cdns but typically you have these CDN boxes and you know you have a source that goes to one of them and it they distribute to the other CDN boxes and the CDN boxes kind of uh support local uh receivers from there so the benefit of this is you know it just works um you don't have you don't need multicast routing protocols to work to get this working so that's why cdns are popular um but uh next slide this is cdns with multicast treaty ends um the first thing uh so hit one more time Mike um one more yeah so the first thing we do is we replace those CDN boxes with AMT relays we push them all the way out to the border of the multicast enabled Network um and uh we send traffic only to receivers that have two relays that have"
  },
  {
    "startTime": "01:30:02",
    "text": "um local receivers so that's one optimization but the key optimization here compared to cdns without multicast is um if these AMT relays uh are deployed on existing Network infrastructure that is if you have routers uh or network devices already in your network that do support AMT relay um and there are you know a number of platforms from another different vendors that do support AMT relays natively you essentially have a CDN on a chip so you can as a service provider as a comp as a service provider as an operator deliver this service for essentially zero capex um it's it's uh if it's built into the forwarding plane of the uh of the router you can essentially offer this service at zero capex as opposed to typically with you know CDN boxes it's a it's a rack of x86 servers that have to get racked and powered up and plugged into Revenue generating routers um you know kind of as Barnacles um that this is something that's actually built into the infrastructure so uh it should be you know dramatically uh cheaper and you know indications folks who kind of look at this model as it you know it could be significantly uh uh less expensive to offer this service than traditional cdns so that's zero cap access just a couple lines of config and you can even argue with zero Opex because you don't have to plug in boxes that need to be powered and racked and stacked and plugged into routers next slide all right so key benefits um you know you get more efficient Network utilization right this not only for Content that's there today"
  },
  {
    "startTime": "01:32:02",
    "text": "um but uh it's it's really the real benefit is it makes possible new content from new contributors it makes it more viable so uh things that we can't imagine things that don't exist on the internet today um things you know a good example is uh augmented reality live streaming to mass audiences what if what if you could have that instead of just watching a game the way we've always watched it on television what if you could um uh have an AR experience where you feel like you're in the front row Center Court and you can look side to side and see the celebrities sitting next to you and and you can hear them talking and you can have a real immersive experience um things that aren't really you know could you do that today could you have an AR live stream of a sporting event um maybe that's a 200 Meg or maybe one gigabit stream uh and deliver that to you know tens of thousands hundreds of thousands and perhaps millions of interested receivers can the internet do that today I don't know um if it can it certainly probably would be really really expensive but this is pretty trivial uh for a multicast enabled world um and uh it allows um service providers to offer a new service um you know replication as a service send us your content we'll deliver it we'll push out that replication point to the most efficient point in the network um so like I said it uh if you're if you're existing infrastructure supports multicast you can deliver this at essentially zero additional cost um the nice part about this is it's it's this is an open standards-based architecture that's using widely available and understood um protocols this isn't a you know a proprietary CDN technology that you know only uh that that that is uh proprietary and doesn't necessarily interoperate um amongst between different um cdns"
  },
  {
    "startTime": "01:34:02",
    "text": "it also has far less coordination required um between the content provider and the CDN provider um you know some traditional unicast based cdns can often have essentially storage requirements so you have to deal with data storage protection um some cases Key Management um with treaty end you're just forwarding packets so you don't have to deal with those issues when it comes to the interaction between the content provider and the CDN provider it's just those interactions just happen between the content provider and the end user the other nice thing is this is this is a decentralized uh and democratizing Technology essentially uh decentralizes and democratizes content sourcing um you know is it healthy for the internet and society that um only a small handful of companies kind of control uh nearly all content distribution this is a is an architecture that enables um uh us to get back to our decentralized routes for the internet and um you know potentially uh enable and and reduce the costs and the uh for smaller entities to deliver content without uh you know large intermediaries next slide so in terms of use cases I've spoken mostly about you know video that's that's kind of the sexiest and most obvious use case um but uh there's more to it than that um you know it's really the use case is any multi-destination traffic this could be audio it could be video like I've talked about could be ar it could be Telemetry data um you know I invite you guys also to here's another teaser come to uh M Bundy and there's going to be a presentation and a talk from a a provider that's actually doing this and they're they're delivering they're doing treaty in uh"
  },
  {
    "startTime": "01:36:02",
    "text": "with um for uh weather satellites atmospheric weather satellites that are delivering real-time Telemetry data to research institutions uh that are looking at this atmospheric Telemetry so that's a use case doesn't have to be video or it could be um large file software updates um this is uh less sexy but probably a more acutely painful issue this is something that Jake has been working on for and talked about for years um you know the idea of like iOS updates things that you know need to get pushed out overnight to tens of millions hundreds of millions devices and you know multi-gigabit files so that's that's certainly uh an applicable use case next slide so to summarize um you know we're we may be at a Nexus point uh for live streaming on the internet when it comes to kind of the crossing of supply and demand curves the demand is being fueled by exploding live stream audience sizes you know in the tens of millions now that you know that wasn't necessarily the case we have that on a weekly basis right now and that wasn't the case you know prior to two months ago um and increasing bit rates um 4K knar uh combine that with the supply uh previously multicast was complex and difficult um you know 10 15 years ago but we've been working at it folks in this room and folks in mbone day we've been working to improve and make network based replication easier and more available than ever so when you combine those two things multicast is easier to deploy easier to operate and more valuable and useful because it can work out anywhere with combine that with this new you know bursting demand um we're kind of at a you know perhaps a Nexus point where um we're we're at this model um you know multicast paced uh cdns becomes uh much more viable and that's"
  },
  {
    "startTime": "01:38:01",
    "text": "that's what treaty end is it describes a CDN model that's optimized to address this um the increasing strain that live stream is putting on the network not only for the content today but also enabling new content that we couldn't imagine in terms of next steps um we're seeking working group adoption um it kind of fits between mbon D and mops um I think mops is probably the better place because there's more expertise uh on the CDN side um but uh I'm also going to be talking about this in MMD so um I wanted to share it with this group uh let people be aware of it um perhaps a little teaser for their conversation next slide and the next um uh the next meeting but um would welcome any feedback and thoughts anybody might have thank you for our presentation I think this is a really very interesting topic just a very uh quick to clarification questions for the scenario the first one is whether the source of the live streaming in this scenario will be very Dynamic I mean it can be anywhere in the network and whether it can be a problem for setting up uh for example uh setting up a multi p2mp path and another question is whether the receivers will be very Dynamic it also influence the convergence of the multicaster tree it's just for clarification yeah so uh yes um you can have ephemeral receivers um coming and going um I think that's kind of the nature you"
  },
  {
    "startTime": "01:40:00",
    "text": "know this is optimized for over the top uh receivers um so that's uh that's that's certainly a use case and um in terms of sourcing yes they can I mean that that's a feature of this if the sources could be anywhere um and that's that's the beauty of a decentralized model sources can come can pop up anywhere you don't necessarily have to go through a handful of the large you know content uh hyperscalers that that kind of deliver content today uh okay if if the source and receivers are all uh very uh Dynamic do you think the existing multicast protocol is enough to uh settle this case I sure hope so we've been working at it for 25 30 years or so um sure I mean that's what Pim does right um uh so um uh I I think that's what it's there for um that's what the multicast writing Protocols are there for the the magic of this working group has been to to to support uh this kind of uh dynamicity sure thank you Dino do you agree well I wanted to respond um um using the AMT gateways certainly the receivers could move around quite a bit and they'll just attach to a new relay uh if the relay already has other gateways then the tree's already built through the native multicast Cloud so there's no joint latency there from the sources point of view the the vision that Lenny has is let's have the sources in the multicast cloud so whatever the convergence of a source moving well Source Mobility with multicast hasn't been done that much and that's something to look at but the source is pretty much stationary now if the source is coming in through AMT um it's the same thing is that if it hits a relay um that is already using that Source address and the tree is built we're good"
  },
  {
    "startTime": "01:42:01",
    "text": "to go likely it's not because it's coming into a new location so that means there's kind of an RPF change that goes through to the new relay um so so Looney I guess the message here or something for all of us to think about is as AMT sources and AMT receivers move around will the tree inside the native multicast Cloud have to change and if it doesn't It's a Wonderful scaling property um yes tiger also um if this horse address changes throughout the application must somehow figure out some way of Distributing or updating what the new source address is probably yeah great point stick see I didn't think that because I always think in lisp and I say the source address never changes sorry foreign yeah so um I think this is where lispin can have a play to be honest with you you know AMT does not support sourcing behind an AMT Gateway um and and that not to be mistaken for what you know the work that Jake has been doing uh that that's been mostly more middle mile um where you have multicast Network multicast networks separated by a unicast network and uh and using AMT to kind of tunnel between two multicast islands um what this uh what what when you have a source sitting off net and the source is perhaps unicast or the source is on you know another Network um you know that that might be where lisp uh is is a really good fit because um you know list has the ability lisp has the ability to support multicast sourcing much better than AMT so um you know I I think we can we could just hand wave and say overlay networking um uh and advances in Tech different overlay Network to Technologies can be used to solve the problem of getting multicast from into uh"
  },
  {
    "startTime": "01:44:02",
    "text": "uh wherever it needs to go even over points of the network that aren't multicast enabled yeah a good point so having said that I mean all the the points that you and stigmate means that if you bring the source in um to the multicast cloud via lisp then the source address doesn't have to change so you don't have to change the applications but as the source moves it could always attach to the same point of the multicast cloud so the S comma G tree that's built inside the multicast cloud doesn't have to change either so that's wonderful as well okay yeah and to be honest with you you know anything's possible but I I don't necessarily see the source address changing much for for these use cases I mean if you think think it through you know why would the source address need to change usually it's a stationary Source um or even if it's a drone maybe it's hopping around but in a relatively bounded area but anyway sorry I think I've probably taken up too much yeah I think we need to move on then but but thanks for a good discussion sure all right yeah like last one here we're gonna go the full two hours after all right so last this past summer there was a interim I think it was semantic routing interim and the chat during the interim got pretty busy with people talking about multicast and somebody brought the point that you know it'd really be helpful to have a document that kind of just went over the history of multicast to see where we've been to see why we're at where we are and maybe to have something about Lessons Learned so um I reached out to Dino and Lenny um long time multicasters I think it's been like 25 years or so ago that I worked at Cisco with Dino he"
  },
  {
    "startTime": "01:46:01",
    "text": "was developer and I was a tester of the code that he developed and um a lot of respect for both these guys and so I just picked their brain and so I got a lot of feedback from both of them about just some things that we've learned over the last 30 years of multicast development so we put this together admittedly there's a lot of work that needs to be done if this is a useful document but um that's why we're here and if this is useful it may be either be done here since it talks about protocols or nmbon D next slide thing if you can hit that space yeah all right so um this is the background that I just I just mentioned we did discuss the three of us in the last ITF came up with this draft it's not intended to be a BCP just uh kind of a historical document to help us understand some of the previous development work um to help us understand the current work and we're hopeful that this will help people that are not familiar with multicast unders better understand multicast because it still amazes me that I talk with people fairly regularly that just say that multicast is very complicated to the point that Lenny just discussed in his document so um hopefully this may help and we do start with dvmrp one of the first multicast writing protocols because that's really how we've it started we solved some problems with the dvmrp and made some design choices Dino and others made some design choices Elisa Cisco and we progress from various different versions of igmp to where we are today with ignb V3 and MLD and then a variety of Pim writing protocols that developed throughout the years next slide so I just chose for this presentation just to give you an idea if you haven't read the draft of some of the protocols there's some uh that I some of that I"
  },
  {
    "startTime": "01:48:01",
    "text": "did include that are in the draft are things like Wi-Fi that Lenny mentioned we have a document specifically on that that talks about challenges of multicast in a Wi-Fi environment where there's no acknowledgments and it there's a lot of drops um I didn't get into uh the it was pretty contentious many years ago with uh the um mpls Wars at the time between Cisco and Juniper mostly with mltp versus point to multiple rsvte and then it kind of they all kind of came together so we included that in the draft but just with dvmrp it was a flood and broom it is a flood improved protocol good initial solution but we quickly realized that it just wouldn't scale with higher bit rates um and using the network to discover sources as Lenny just mentioned was also something we originally thought would be a good idea it makes the network more valuable but um discovered to be a bit too intensive and so we felt that it this protocol worked good in small scale development in deployments but uh began to suffer in larger multicast environments so we needed better Solutions so we evolved from dmrp to some other protocols next slide I just have a couple more um the shared and uh Source tree development work the shared trees were designed to reduce state a lot of State discussion over the years we still have those today particularly at a time when memory was scarce and expensive um and shortest patch trees were simpler and more optimal but they consumed more state we did need to fix the flood and protocol that Dave Murphy had we did fix it but didn't provide any explicit signaling from a source to discover them um so the multicast writing protocol discovered the sources using Pim"
  },
  {
    "startTime": "01:50:01",
    "text": "switching from One Tree shared to the other source was a difficult routing problem problem uh that again I didn't have to fix but developers did um and because when you join the source tree you had to prune that Source from the share tree so we could get into that a little bit in the paper the the draft next slide uh Lenny already discussed in his document the All or Nothing problem with every layer three hop between the source and receivers need to support a multi-gas routing protocol and that tends to create and it has a a big barrier to deployment and so as he just described there's a way that you can use overlay networking you can use AMT to uh to get over that and we kind of discussed that as well so when people ask us about AMT we are trying to share this document where we've been to get to the point of why AMT is necessary so they can understand why these automatic tunnels are even something that we created uh next slide so this is this is the last Light so there's so many other protocols at the beginning of the draft lists them all I don't know like 15 20 protocols there's many more but we decided to just focus on the major ones um and uh again just we're hopeful that something like this whether it's adopted or not will be able to help people just understand the history of the last 30 years um so the question we have is this is this something that we should work on in the ITF if it is should we work it on it here in Pim or do you think Cambodia would be better I'll leave that to you and that's all I got and nobody really cares so so uh is there anybody in the queue uh"
  },
  {
    "startTime": "01:52:03",
    "text": "yeah uh oh yeah I think this is necessary especially for anyone who is not familiar with the history actually from my side when I uh want to learn something about modcast I will see uh pin and MPS p2mp and then beer the a lot of protocols mentioned here are also hmp and MLD for sure a lot of protocols mentioned in the slides I I am not familiar with so I think this is a very good um document to make people know what has already happened and uh what could could learn from it so I think it is good talking thank you but I'm sorry I haven't read it yet I will try to read it yeah that's a good point it does leave us to wonder if we need to include a brief description of all these protocols or not so what are the problems we're having in the ietf over history is that I see young designers developers and implementers making um coming up with proposals and older people are saying no that's not going to work and they say well why not and they say well we did that so far long ago and these young people want to get information in detail about what happens so we have to document history otherwise we'll repeat the mistakes so I you know that's just a general comment uh Ryan that's you yeah yeah just wanted to Echo would love to see this document produced haven't had a chance to read it yet um intend to read it and give you some feedback I drift in and out of needing to have multicast Proficiency in my role as a operator my apologies I didn't announce Brian Hoffman from Telus so thank you for starting this work very valuable work okay thank you uh yeah I also think this is useful and"
  },
  {
    "startTime": "01:54:02",
    "text": "it might be good to discuss pin bider a little bit as well but but basically yeah people just look at all the working group policies you know they can get lost and they don't know which are the core documents and what what the options are so yeah I think it's good all right should we take should you take it to the list or you want to ask people right now uh for adoption or yeah uh I think we can do an adoption column on the list sounds good um yeah um yeah we might discuss briefly number on D as well I guess true what the best home is for this but um yeah yeah we'll we'll check with the embodia as well before me consider adopting it but um at least this seems like there's a fair amount of Interest so yeah you have a question Lenny comment um just uh speaking for M bone D I guess um it's really early so I'm I the the only ha I'm not sure which hat I'm speaking with is a Bundy chair or author or uh what the only hat I know that I'm taking off is my cogent hat because it's really early um but you know my thoughts would be if this is lessons about deployment it probably in operations then it's m bone D if it's more lessons about protocol development it would seem like it would be more Pim this document I think does a little of both um so I think it kind of fits sort of in between both but to me I think it's more protocol lessons than deployment lessons so I think that you know given that I would think that Pim would be the better"
  },
  {
    "startTime": "01:56:02",
    "text": "fit but um you know I I would uh probably defer to I would recuse myself from that decision and let uh Greg Greg make that call for officially for uh and Bondi but um that's just kind of my my thoughts in the middle of the night what what it feels like I think documenting um history for both of those the protocol development and deployment is going to be useful the question is should be put in one spec different spec I think there's going to be more people that are going to care about the deployment because there's more operators in the world than developers so I don't know if we want to put make this to integrated or separate documents um I have a feeling that the deployment document would be much larger because there's been I don't know if there's enough people that could document it accurately but you know yeah I think it's better it's more protocol design or protocol you know advice for Designing protocols or if it is for you how to deploy ment and just um just uh before before sorry of our start to jump in front of you um but uh the other thing I forgot to mention was uh this is going to be we have a little bit of time in M Bundy to cover this as well um it's kind of at the tucked at the end of the uh of the uh meeting so we may not get to it but this will be discussed in Bundy of Earth and official Technologies both types sounds interesting I I don't know if history of deployment and why mospf failed or whatever uh is as interesting as how do I take the tools that I have today and deploy them together so in other words you know out of the whatever number of RCs we have what are the RCs that I need and how do I put them together so that I can deploy the gas Network and and the old ones the ones that we"
  },
  {
    "startTime": "01:58:01",
    "text": "learn something from uh we don't need to talk about those right it might be more interesting in having something of how do we move forward I'm going to the plane ever what do I do not why it failed before I need to know why it failed before to design a new solution right so so I don't know from my point of view it sounds like the history of protocols is more interesting than the history of deployment and current deployment is more interesting than current technology which is already documented just a quick remark to that I generally tend to agree to you overall it's maybe more important but the discussions that we had in iitf 114 and 115 was the Nautica solution for auto configuration of multicast showed that old drafts which has not have not made it to RFC status were pulled out again because the lessons learned from why they weren't implemented and why we thought it was a bad idea to implement that were not documented so um I think it both has a valid point um if you're looking at implementing new stuff maybe it's good to find what is the current standards that we should look at but we should also have the Lessons Learned documented while we failed doing the other ones because it's also quite a valid information base hmm yeah an example of that is dvmrp is in the Cisco toolbox we want to tell people not to use dvmrp all right thank you all right yeah that's the end of the meeting Mr Sunny anything in the one let's bring up all right thanks to everyone and yeah please come to emblem the Fior interested in multicast I guess that's why we're here too yeah thanks"
  },
  {
    "startTime": "02:00:03",
    "text": "foreign"
  }
]
