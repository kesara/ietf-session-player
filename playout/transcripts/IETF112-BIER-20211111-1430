[
  {
    "startTime": "00:00:04",
    "text": "surely that'd be kind of cool because we have the dots for roles in the ietf it'd be nice if we had some dots or at least some tags i can give roles in the working group i'll talk to you that goes it's worth asking for okay we're right at the start time i think let's see first presenter woman i don't see human here yet let's get a little bit tony kick when you're back if you're here under a different name or group or something just speak up so i know you're here we can think about getting rolling excuse me navarro i just uh replied your email we could talk about again the list in the uh in the room today if you want but i think it's pretty much all there thanks greg thank you"
  },
  {
    "startTime": "00:02:17",
    "text": "okay tony's back still looking for human he's our first presenter after our status hi hi greg can you hear me oh oh yeah i hear you excellent thank you very much all right tony you see any other reason why we shouldn't get rolling hi everyone all right everybody uh what i've got is a question on process actually if you can give me uh some feedback alvaro on taking notes now i've got the the notepad thing up is the intent that people put their own stuff in there we have someone directed and everything's done at that tool that's with the intent with minutes no so ideally we would do the minutes the same way as before right you would have a minute taker yeah advantage of the shared minutes or the shared place there is that then i can go there for example and add the question that i asked or you know clarify something or spell my name correctly or you know whatever it is so there's the opportunity for other people to help but ideally there should be some responsibility for that but that that one person should be working on that doc as well right right right right ideally there will be something we did before just open up a text pad to write down stuff right so now we do it before we have no ticker but they do it there and everyone else can go in and make corrections or add their own questions okay so that means we need a minute taker a volunteer of some kind to throw something in i saw with the um other working group uh was that they actually also take the chat and they paste it uh after the uh minutes into this notepad stuff which i like a lot sure but that that means"
  },
  {
    "startTime": "00:04:01",
    "text": "we only get the minutes from the notepad people still will be speaking someone still needs to type in there we still need a note taker yeah yeah of course of course so we still need a volunteer yeah shortcut to path and fame uh you guys are the toughest no one here wants to be famous people no no ambition going once going twice oh man all right i'll take a minute can you do it all right thank you tony at least now it's up in that dock now we'll know where they are excellent all right so welcome to beer welcome to uh well whatever time zone you're in and pretend that you're not there uh if you're in the wrong room stick around we have fun here no well note taken nods in the room i wish i could see you all i assume you've read this fair assumption thanks jabberman is collaborative so that's the the url right there i've got it up in a tab i recommend everyone do the same so that when you have questions you can either put them in there or you can make sure that they were entered correctly if you didn't do them yourself you know as uh avaro mentioned correct names spelling what have you but uh that that's a great way to ensure we have everything in one place from everyone who contributed so take that down bring up open a tab and get ready to have some fun uh what's the status with jabber then do we have i remember seeing yesterday there was a it was some sort of jabber button somewhere here i thought okay so the the chat that you see in miraco"
  },
  {
    "startTime": "00:06:00",
    "text": "that is connected to jabber correct so you could be i was just saying there's also a new tool that the atf is using that is also at the very end solid bot i guess it's uh the new i am thing um if you guys know where the jabber logs are uh all of this goes into the log as well if you don't know like this okay the jabber what i didn't catch that the jabber logs so all the everything on the jabber is logged and saved okay and then that's what we we then import over into the hedge all right excellent okay um tony's got minutes i want you all feel really guilty about that i don't think that sunk in but it's worth a try and here's our agenda uh we made a lot of progress last meeting in terms of uh we have a bunch of stuff in these shepherds we have a bunch of stuff that needs uh adoption call we had some drafts actually make some progress to be completely frank it's been summer and i've been gone and i've been as offline as much as i possibly can so some things progressed some things didn't uh now it's cold and wet and i'm stuck inside and i think we'll be making some progress after this all right anything missing from this agenda all right human you up go ahead alvaro hey uh thanks i just wanted to say i don't think there's anything missing in the agenda but um what caught my attention and this is really for the whole working group not just to you know you greg or tony um we're not gonna have time right you know we have uh 40 minutes of if time permits"
  },
  {
    "startTime": "00:08:02",
    "text": "and unless i shut up right now and everyone does it very fast um you know it seems that you know maybe we can have an interim at some point it seems that that everyone took the summer off because the list has been very quiet and you know we can't make progress with a 10-minute presentation every four months um if time permits right if i have enough time to do that so what i want to say is that you know it's up to all of us the authors and the chairs and people who are not authors who can review documents to make these things progress right because you know there's no way that in 10 minutes we're going to be able to get an update dig into the issues and resolve them here we have to go to the list right can i add to that complexity we don't even have time after this when we bs in the bar and do it as well right so it's currently worse than a normal meeting correct so we want to or we need to i think as a working group and to be a little bit more active uh you know for all of us uh to again you know sponsor or push uh discussions you know the draft authors and you guys chairs to to make sure that these questions happen uh and i said even for the people who are not authors we need you to review documents so that they are uh you know well understood and well reviewed by the time they get out of the working group so this is our this is our longer gap anyway so it makes sense um i think what i've done in the past in groups when we start getting wedged i think we did it here at beer as well like mid late january seems like a good target we get everyone to agree uh before they disappear on the holiday come back give them a few weeks get their heads together and then we can meet again and make some progress so we'll make a determination on the list as we see things move but that's a great suggestion of our appreciated i'm curious too well never mind we'll just"
  },
  {
    "startTime": "00:10:00",
    "text": "move this we don't have to i'm so uh human are you you ready can you do the pre-loaded slide yeah if i can click on the unmuted i'm ready which i think i just did craig you had a question i wanted to ask about um in course of uh discussing um progress of uh path mtu discovery in beer um what i found is that um we're kind of stuck with the uh beer uh ping document uh i'm afraid it's uh expired so i would really appreciate the help of chairs and ad uh reaching out to the pen holder and asking um of status and if need some help if the pen holder needs help i can help and edit the document because to progress uh path into discovery and there uh we need to finish um uh the ping document or at least they need to get together so you're one of the authors aren't you yes i'm a coffer but i'm not pen holder okay well hopefully you guys are in communication as well i mean we can kick but uh you're entitled to as well yeah that's that's kind of not working okay need another boot or two all right well that's that's my intent after this meeting going through all the docs and see where they are sandy put together a fantastic list for us last time we moved some of that along and we'll just go from there probably get confirmed from the entire group on the list and where these docs are and"
  },
  {
    "startTime": "00:12:00",
    "text": "we'll start moving this stuff because that we're going to need that anyway to kind of see what progress we make before we get to an interim to see you know what what extra things we need to do which ones we need to focus on uh et cetera so yeah i greatly appreciate humans uh volunteering uh uh to shepherd their uh path mtu discovery but uh yeah we'll we'll need to progress uh the ping too excellent thanks okay uh human were you waiting for me to authorize you to do something i just hit no i i send you folks a slide so i don't see them being shared on the or so i'll if i stop sharing slides i think that's a start you go up there and there's a share preloaded slide button oh oh okay now i need to get on another pc i thought i'd send this i i thought i sent this slide sandy yeah if you could share it i would really appreciate it okay so this is actually a pretty cool tool you hit this everything that's been pretty that's why i asked to get them all up ahead of time so we can just pop through this so i'll hit this i'll select your uh you beer mldp i'm going to go back over no yeah ledp excellent all right so that is on top of the queue on this dock boom and share and i'll step through them for you uh what did it do it stopped sharing okay i'll try it again uh mld share there it is wonderful perfect um so i think couple of ideas ago i went through this i think we asked for last call because we haven't got any uh comments or any uh questions on it uh we were hoping that the last call would start generating some comments questions on the draft um i personally didn't see"
  },
  {
    "startTime": "00:14:01",
    "text": "the last call email going around so i thought maybe it's good to give everybody another you know refresher on what we are trying to do on this draft so if you could go to next slide please so this is uh this draft is really uh v2 of the pim signaling over beer we are trying to achieve the same thing with the mldp over pier the entire point of this draft is that if you do have a customer that or operator that wants to go from some of these legacy multicast protocols to the beer they probably want to upgrade some of their part of their networks one at a time usually they might start from the core or whichever part of the network it is and this draft will make it easier on them to upgrade a part of the network on the mld mldp network to beer without really changing the software on the routers that are doing mldp or really doing any excessive configurations on any of these routers that are doing mldp you just grab the portion of the network that you want to upgrade to beer you upgrade it to beer because of the the hardware support sphere and any portion of the network that doesn't support the hardware doesn't support or or the software for that matter doesn't support beer forwarding can a stay on mldp without any excessive software upgrades or any change in the topology of the network itself next slide please uh we were we are using rfc 7060 uh basically we are using tldp between the two beer edge routers to communicate the fake from one mldp domain to the next mldp domain"
  },
  {
    "startTime": "00:16:01",
    "text": "so when the effect comes into the one of the edge router that is terminating the ldp signaling that beer edge router creates a targeted ldp multi-hop away to the another beer edge router which is the egress [Music] he even i forgot the terminology since it's been so long um it's a egress beer edge router so that becomes e-b-h-e-r-e-b-e-r i think that was the terminology we use and signals effect and then we push that fake into the mldp domain and based on that effect signaling beer can figure out who are the brp routers that mldp is terminating on and can set up the beer communications between the two edge drivers next slide please so as this fake signalings they come in from uh from down streams the uh i the ingress beer edge router if you will builds their uh the tree figures out who are the peers and it builds uh the beer the beer neighborship uh and actually when the packets come in the mldp packets they come in to the edge router we swap the label with the tldp label we uh we push on the beer header and we go down a stream to all these other b routers where that were actually signaling their interest into that effect and into that source of the multicast and that's basically how the data path starts working when we get to the downstream beer edge router we pop the beer header there is a protocol the b protocol which is the mpls and based on that we realize that there is a label that we need to swap"
  },
  {
    "startTime": "00:18:00",
    "text": "within with the downstream mldp domain if you will and that's how the data path starts working nexus like please so this was a good refresher for myself too actually um so basically again you're looking for any comments any suggestions if yeah you know uh anybody in the working group feels that you know we need to beef up the the draft by all means you know come on the mailing list and let us know if not uh maybe we should do a last call and maybe that will trigger some extra discussions uh you know and that's all for me thanks questions you gotta turn your mic on um so this is lower uh one thing is uh you could send oh and you could send a email to the mpls working group and ask for comments also yeah i don't i had read the draft there are almost no changes at is significant for mldp but it might trigger some responses at least and the shares for beer i would like email to go to the mpls working group when you start the working group last call for this draft okay thanks uh in parallel you're asking in parallel oh when you start the working group last call you just send a mail uh to the mpls working group telling us"
  },
  {
    "startTime": "00:20:00",
    "text": "that you have started the work in your last call yeah okay gotcha just just inform the list so they can jump in and take a look as well yeah and actually they should direct comments to the beer list not to the mpls yeah exactly as that's what i was saying as we was last call in our lit and our group uh comments should start there but i still it depends on the integration but oftentimes it then goes over to the chairs of the other group for approval as you know before you take it up to publication um but having early feedback at least one of you are subscribed to the mpls list just send the mail yeah absolutely all right thanks for that suggestion alvaro so you can just uh you know cc also on the last call also can you please uh copy bess just in case there's someone there that you know wants to take a look at this as well um i i have one question i was gonna say i have a question about the draft itself i haven't read it but it is marked as informational uh yeah thank you so i guess you're saying you're going to change that yeah my apologies uh yeah i think that might have been a copy-paste mistake i will change that upload it again yeah the other thing that i notice is that there are no normative references in the draft so uh please check that because i mean there should be no head references yes thank you i'll check that too thank you thanks yeah thanks a lot any more questions on the strap from prison three two one all right thanks no one uh next up"
  },
  {
    "startTime": "00:22:00",
    "text": "we have the pce-based beer we see two presenters uh either one of you in the room all right grant pre-loaded slides there it is okay i didn't see that before you hit the button that makes sense hello everyone can you hear me yeah we hear ya okay all right we see the deck hello everyone yeah okay excellent i'll go go ahead hey i'm juan ali from china telecom i'm going to introduce our updates some comment some comments were made at the previous meeting including objects for mac formats dance and it is suggested to break this pce object pcp objective objectives down more in this update the overall process has not changed our main change from the previous version is to put some duplicate fields into tlvs increasing the extensibility of these pcp objects we defined 40 new tlvs namely multicaster source address address address tlv multicast group addressed here we will see we've here vp vpn information"
  },
  {
    "startTime": "00:24:01",
    "text": "tl we and the beer information tlv among these tlvs vpn information tlv contains rd and the forwarding label the label lens can be set to zero fear information until we contains router identification information in beer to man or subdomain specifically subdomain id bf rid and bsl the multicast source registration objects can be used in both sphere and number scenarios in beer scenario it should include others ready always exclude multicast group address tlv multicast receiver information objects can be used in both beer and numbers scenario in beer scenario it should include all these 40 lvs forwarding indication objects contains peer forwarding information specifically subdomain id s i b sl and big string fi object does not need to carry beer information true and can only be used in beer scenario it should include others ratio always multicast receivers status objects does not to cut arrow vpn information tlv and appear we clear information here we can be used in both beer and non-beer"
  },
  {
    "startTime": "00:26:00",
    "text": "scenario it should include multicast source address tlv and multicast group address tlv that's the main content of the instructor but in addition in last discussion tony mentioned the the flag in is general is not generic enough could it be more specific any comments on our work are welcomed thank you okay no queue then i comment as participants so read the draft with great interest um all cool um i think it should be more precisely named pce uh you know ip multicast beer overlay or something because it only does uh traditional ip multicast on top of beer but i mean that's cool um i have a specific question where i stumbled in the draft where you have this uh forwarding indication object and you're passing around the beer beat mask that's all cool but there is a bee bit which you can set and indicate known beer so that confused me why would you pass around the beer beat mask if it's not beer if you don't have it on from the top of your head then i just take it to the list [Music]"
  },
  {
    "startTime": "00:28:00",
    "text": "use for the pure scenario uh kindly you know for the numbers in our way i think we should define the other uh our similar object to to project the the ir to how to for the how to reach the receiver still does not make sense to me why a beer beat mask will be passed around them but it's okay i'll take you to the list okay just just general comment um i'm happy to see this as one of the initial architects of beer even before the buff you know we were seeing all these scenarios and this is one that came out basically you know the signaling over the top and uh i guess the question i have going forward on this is do we want to make this the definitive document for all pce regarding beer or just this particular scenario and then just you know pick things up as they come down the road just general i'm not looking for an answer i'm just thinking something to think about we'll take that list as well as we move this thing along yeah i think it would be great if that will be kind of the container document for a pce-based architecture but ideally it would allow to do something else than just ip multicast yes that exactly so no just a hook to allow to differentiate and plug something in which is not based on ip multicast addresses will be you know an excellent extension i think and that would then basically be defined the architecture for pc beer you know over pc truth go ahead please can you guys hear me yeah go ahead yeah uh thank you guys uh the issue that i have is"
  },
  {
    "startTime": "00:30:02",
    "text": "sorry question and you guys can continue i'm having some audio issues we hear you now oh he's gone all right try again a lot of feedback that's why that's why i was canceling so i know my voice is clear but a lot of feedback for me okay no problem thank you real list then all right any more questions all right next up jeffrey on slicing you're granted here it comes all right i'm off to mute okay um so this is about some thoughts on how to do a slicing and traffic differentiation in beer i'm presenting on behalf of the co-authors here uh jeffrey and tony next i please i sharing my sharing it myself or are you running looks like i need you to run the slide oh okay all right so the uh it's the arrow on the screen not the arrow on the keyboard okay so um can you hear me answering your questions on the slide but i realized i was in mute so you figured it out before i unmute it so go ahead you got it"
  },
  {
    "startTime": "00:32:01",
    "text": "okay um so uh some slicing backgrounds um from the ietf network slices uh framework uh spec um ietf network slice is a basic logical network topology and traffic associated with with this slice is identified with a slicer identifier in the packet itself and then there is a extension to to that uh in this draft best bar uh where it introduces a concept called the slice aggregates which comprises uh one or more etf networks nice traffic streams now notice that here slice aggregate can be any of the following which including entire slice or a set of entire slices that share the same logical topology and or just some flows in a particular slice it's very flexible so and a slice aggregate will get uh uh um per harvey per hop or forwarding behavior specific to that slice aggregate which includes uh the next hop they use to reach the destination and some queuing treatments and other things and now some related beer background um so in beer you have one or more beer subdomains that map to a topology that's into one mapping and then each subdomain will have a corresponding birth beer or the routing the routing table useful for beer beer forwarding that's one-to-one mapping"
  },
  {
    "startTime": "00:34:02",
    "text": "that birt is a calculated according to the topology that subdomain is um and then when you consider the b string lens and then when you need to use multiple sets because the number of bfers is greater than your b string lens then you you need to have multiple sets and there the uh each biff will correspond to that tuple sub domain b string lens and set id now each uh bift is uh uh identified with a uh by a opaque 20-bit number called beef id uh in a beer package which which could be a label or via just any other uh opaque number so um beer forwarding is based on biffs which is derived from the uh birds uh birt so you can say that the beer forwarding is based on the birt but the important thing to notice here is that for a particular subdomain all packets regardless of the flow all packets to a particular bfvr are forwarded to the same lexahab bfr or same set of ecmp necks or bfr according to wbrt so that birth would determine the next hop and then one after that you can use uh traffic class bits in the mpos label entry or using the dscp in the beer header to determine other behaviors like queuing so now how do we within that background how do we do slicing with beer um now we if a slice aggregates corresponds"
  },
  {
    "startTime": "00:36:02",
    "text": "to a single slice or to a set of slices that share the same logical domain then there are two ways to do it one is that you map that sa to a subdomain um with that uh because the subdomain id is only eight bit so that means that you can only do 256 essays now if you want to do more than that there is actually you can map sa slice aggregate to a birt directly now uh in the brt will map to the tuple subdomains uh coma sa instead of just mapping uh to a subdomain however when you know if you consider that birt is calculated on the topology and that sa is corresponding to a topology then and this extension of mapping a brrt to subdomains and comma sa is a reasonable extension in the vr architecture now when you when you uh use a wii u map sa to a birt directly that means that in theory you can support two to the the power of 20 essays as long as your your device can hold that many entries so now mapping the uh sa directly to a birds instead the subdomain has is desired even when you have fewer than 256 essays because when you have uh fewer subdomains you you you don't need that many uh that much provision in related subdomains for"
  },
  {
    "startTime": "00:38:00",
    "text": "example you need to you uh you do not need to assign bfr ids for each subdomain um to do that we need the corresponding igp or bgp signaling extensions i'm not covering that in in this presentation but it's talked about in the in the draft using the iss or ospf example now um the slice aggregation selector oh i i forgot about to mention that that that is the uh defined in the draft best bar uh spec um it's basically uh identifier in the package that identifies the slice aggregate now in this case the the slice selector will map to one of the beef ids now what if you need to a finer granularity for traffic differentiation where the sa is only for some flows in a slice in that case uh the slide selector slice aggregate selector selector won't map to the uh to some uh traffic class or dscp bits but if you that's not enough then um a beer extension header uh will need to be used um the proto uh code field in the beer header can indicate a beer extension header followed and one of the beer extension header will carry the slash selector to identify the slice aggregation so now a beer extension header it has never been uh discussed here in the beer working group"
  },
  {
    "startTime": "00:40:00",
    "text": "itself that concept was introduced in the in this int area or function generic delivery functions i'll talk about it briefly here um it's still a developing idea uh for the purpose of uh doing genetic functions at different layers for example fragmentation reassembly and security features esp ah or in c2 oam and new use case here is a traffic differentiation we want to be able to do all these generic functions across different layers whether it's ipv6 or br or mpos or whatever we also try to align the mpos beer extension headers with ib extension header structure because the idea is that we want to uh to do this across different layers so it's better to to align those extension headers as much as possible so um the that draft has some uh um uh uh talks about the uh uh both mpos and uh beer extension header but that's just a container draft and the specific mpos extension header and the beer extension header will be discussed in beer it's just i have we have not officially brought it here yet but this is uh like a teaser here that's uh uh we will be start talking about the peer extension header so um yeah next steps uh we we introduced this concept here and uh um in the in the drafts we did provided the signal name for either iss or ospf and obvious uh we"
  },
  {
    "startTime": "00:42:01",
    "text": "will need to uh uh uh uh specify all those details for the other signaling signaling protocols and uh more importantly uh um we we we will want to start talk about beer extension headers in beer working group uh both for this uh purpose and for other purposes um obviously we uh appreciate the comments uh on this so that's the presentation i'm open for yeah question in the comments yeah i guess turles so one of the cool things we can be doing better um is is better for example the um you know per flow stateless qs which i was presenting in tsn and and that uh sorry that networking group um and i was actually also explicitly referring to the problem that we need extension headers that support these these mechanisms better and then it would be great if we wouldn't have to reinvent the wheel between mpls and ip and obviously also a beer for for these type of qs extension headers so and beer specifically of course is the um of course better even with brte um the the technology to allow the stateless multicast replication to go along with the you know stateless qs that would be driven by an extension header yeah indeed uh that's that's the intention of that generic delivery functions uh drafts and the better qs across a treatment across different layers that's one of the use cases here yes and i think what we're missing out"
  },
  {
    "startTime": "00:44:00",
    "text": "and i think that's for us to go on friday and see what happens with the popeye hop header for ipv6 is uh how we can um try to see it you know how not only get buy-in with the mpls design team but you know come up with with a proposal that also would be accepted by six man six or whatever the the v6 side is i think you're you're you're your proposal to to to the designed mpls design he was targeted to support that but you weren't very happy to attack the uh vp6 side in terms of trying to see whether they actually move yeah yeah all right another mic question yeah i think shay song is in the queue song i don't know if you're speaking we can't hear you she's on can you check your mute and back again ah sorry i will just go to the chat box we hear you now ah great uh jeffrey i remember there's a document in your working group about the flexagon for beer what is the relationship between these two documents um i guess i will need to uh read that document first i i did not uh uh consider uh see the connection there but now that you bring bring it up i will i will go read that drafts again and then see if there is any connection"
  },
  {
    "startTime": "00:46:01",
    "text": "oh sure human yeah on the same lines this ipa and and the flex algo stuff on on the beer i thought we were trying to solve the same type of uh issue with them that you create flex algo a slice if you will blue red whatever and each sub domain is being binded to to that uh slice now honestly i haven't read this uh uh this tease idf network slices like i'm not even sure how they are trying to identify as slice like it might make sense in ipv6 but in the mpls world i i need to go to read the draft but yeah just for the working group uh that ipa and and the flex algo stuff that that i think that was the idea behind it too um the flex argon may be used as a as a the control plane signaling proctor for uh to to cut uh to define the topology i think right now this draft mainly talks about so how uh in the data plane um we can i would we can have slices um but i i will yeah i will go go back to that uh flex algo draft and then and ips the bar stuff and to see the connections all right sandy good question checking me there we go we're here yep go ahead okay i think it's an interesting topic and i read the flex ego a beer draft and this draft uh both and i think that the"
  },
  {
    "startTime": "00:48:04",
    "text": "flash eagle is aligned with the subdomain so one flex eagle is is equal to one supplement and this structure is is taking effect in the subdomain so i don't think it's the tool is conflict if i understand right oh that's my opinion thank you any more questions with jeffrey okay thank you okay next up is torless you got the next two prizos torrelis so uh i'll hopefully be able to grab those as well doraleous there we go granting okay right so reclaiming time for the working group so there is no uh 11 unfortunately so we got the complete isg review at the end of august um one discussed which is easily cleared there was a typo into the field of code thanks uh benjamin and a long list of good comments from eight reviewers and then unfortunately um an unexpected busy september october with conflicts like me being on nomcom and uh you know see next slot um so i'm i'm working through the uh 11 as we're speaking and hope to have them out soon um i i really want to take the opportunity for the comments to you know also improve the document there was for example from benjamin this um thing that he was always confused about when we're talking about beer what was"
  },
  {
    "startTime": "00:50:01",
    "text": "meant so uh in terms of is it the overall architecture that is inclusive of brte or just the you know non-beer tea as he proposed me to prefix it so that that that reminded me of writing text where i had to write ip unicast to make it easier clear what i meant when saying ip as opposed to ip multicast so you know non-te beer yeah so that that was the only kind of uh thing i i wanted to mention from that um all right so um but yeah so it should should easily proceed because it's all comments and and the discuss is simple okay next presentation stop sharing slide and give me one more okay right so right so this is a mouthful kind of whitewriter document if you can write everything into the title um carry a great minimalist multicast using beer with recursive bitstring structure addresses and this actually uh based uh on the work um done by a team of colleagues in uh beijing um and you'll see immediately why they wanted me to uh write the draft up for this because it's really kind of brt next generation and which of course leaves the question you know what the heck is wrong with brte um and beerte is in my opinion the best forwarding solution for the target constraints and the target constraints where um that we obviously wanted to have steering for a beer and we didn't want to change the forwarding plane at all so we ended up for some particular options in beard te to have a very small changes like you know the do not uh clear bit or so but in the end uh it is pretty much like the beer forwarding plane um and and that was the goal and"
  },
  {
    "startTime": "00:52:01",
    "text": "that unfortunately as we've seen working in the working group through um you know all the comments and concerns about scalability does uh lead us with a lot of complexities in brt um so um the the fundamental reason is that we have flat bit strings um uh in the packets uh which can address only let's say a total of 256 bits um and then part of that is for um you know bfers and part of that are for you know adjacencies like links in the topology uh to get across and and and splitting up the topology so that you fit the bits into this is a problem in brte makes a controller complex makes it really important to save the number of bits that you are doing same issue exists to to some extent in beer but less severe um so especially for brte that that bit string is really um something that makes the controller plane difficult with all these options that we have like you know uh ring bits and point-to-point bits kind of you don't see it in the forwarding plane because that's simple but the controller plane is is difficult and then also you may end up requiring a larger number of copies because you need to split up the topology cross more bit strings than you actually would need because you can't fit them all in a single bit string so ultimately what we have we have operational you know both for the humans and the controller software complexity less traffic efficiency for forwarding plane simplicity so which brings us to back to what what is actually you know the vision that we wanted to get with beer in my opinion um and so this is what you know we gave you know the visionary uh name uh for the service providers for the carriers right we want to have really a minimal multicast solution um that really becomes simpler so"
  },
  {
    "startTime": "00:54:01",
    "text": "controller does help to simplify a lot of things um and when we for example also manage to eliminate the duplication between beer and the flow overlay by extending beer or the control plane all the way into the centers and receivers so that they don't have to bother about ip multicast at all and the all the overlay signaling they were fairly fine on the controller plane i think we can also afford some more intelligent forwarding in the forwarding plane and this is basically what this draft is primarily about because this is just the vision part um and that is effectively um why the heck can't we basically make uh the bit string a structured uh a data structure in which we effectively replicate the distribution tree that we want the packet to have right so if you want to pack it uh to to be replicated from r to one two three and to n and then from one to you know again some some number of bfrs well but we can uh basically encode that in a structure so and and that's shown here you have a fixed field in the beginning you have the bit string for the local node that is processing the packet and then you have a sequence of you know what we call recursive units um one each for um each bfr that you are sending the packet to and of course uh once that packet uh um is forwarded to one of those bfrs you are going to rewrite the address you're pretty much extracting the recursive unit for that neighbor from the address and make that become the new address and that's what you're sending the neighbor so what the neighbor then gets is effectively its recursive unit which again has the bit string of where it should replicate the packets to and then um the um you know recursive units for the you know further hops and so yes there is some overhead for um you know the structuring here right we basically"
  },
  {
    "startTime": "00:56:02",
    "text": "need to include some type of addressing field that tells us how long the recursive units are but that is pretty much uh the only structural overhead the rest is just bit strings so instead of having a humongous bit string to represent the whole topology we're only uh requiring to include the bit strings for the notes that the packet actually is traversing and so here in more detail to walk through and there is one bug in the picture which i've i fixed in the draft so the draft has exactly the same example um and that exactly shows that uh in in all the glorious detail so when the packet ultimately gets to a client of course for the clients you don't need another recursive unit um so there is a new flag then um in the bift which basically says whether or not a particular bit is to a bfr or to you know punt up and center to receiver and that is then ultimately the only complexity to work through so the draft has of course oh wait a second this is not the slide yet um so let me summarize here on the slide first the simplification performance enhancement that we're getting so obviously there we don't need loop prevention through the clearing of bits because by just extracting um the recursive unit for the next next stop we're kind of achieving the same goal so that is that is for free the loop prevention we don't need to split up the topology into different si or multiple sd bit strings so the amount of state that we need to maintain on every bfr is minimal it's just you know um one bift sized exactly to the number of bits representing the number of you know links to neighbors or you know if we want to have overlay of course uh tunnels to remote neighbors um there is no need for all the complicated"
  },
  {
    "startTime": "00:58:02",
    "text": "you know bit semantics to optimize and limit the number of bits we have across the whole topology and so this of course is especially great for sparse distributions meaning sparse multicast trees and i think we know that most multicast trees are sparse the network is large but the number of receivers we need they may be anywhere which is why you know we have problems with the brte but uh they will be small so they'll very much likely fit into a single uh you know packet header of maybe up to 512 bits and then if really the total number of receivers gets larger then the controller can very easily split up the whole distribution tree into any subset of receivers and build the distribution tree for that because you know the there is no further cut up of the uh um bit into different silsds so those are all the simplifications for the controller plane that we get with this so all the complexities that that we hated when working through brte are gone with that and now we have the the cost of business of course in the forwarding plane um and so this is the pseudo code and um so there is a little bit of you know calculation in the beginning for the packet but when you look on the right hand side the replication then of course the only big complexity is once you have calculated the offset and length of the recursive unit for each packet copy you need to do the rewrite of the packet header and extract that address field and make that become the new destination address field so um that that is exactly you know i think four four forwarding planes the interesting question um you know is that uh already now or at which point in time um and what type of you know routers would that be sufficiently easily feasible to be productizable um other thoughts um so this is of course a natural variable length address structure for versus the um"
  },
  {
    "startTime": "01:00:00",
    "text": "naturally fixed size and beer and brte but um sorry [Music] shut up okay um so yeah so i was talking about the the forwarding complexity so i think one of the interesting things to do and that would of course be great for for for researchers to also jump into that to do really the uh um you know uh simulation comparison of you know the the number of bit strings we need the size of bit strings and so on between um beer brt and and and this rbs solution um the packet encoding packet header of course not purpose of this draft like all our documents it could of course use rfc 8296 and be considered yet another vift mode right after we brte also includes the notion that the ifts would need to be you know set to a mode for brte forwarding so it could be brbs or whatever we want to call it uh but of course that would be um wasting um bandwidth because we would then use the maximum bit string size um so i think that's an interesting question but of course using 82 96 would be the fastest way um to to adopt something like this and i think that's it thank you very much all right we're going up jeffrey yes so let's say you have to reach 2000 uh edge routers how many bits would you need right and i think the answer of course so first of all um we we haven't um you know decided on what the unit of allocations in in the bid strings are so there's a reference encoding option um and of course depending on the packet"
  },
  {
    "startTime": "01:02:01",
    "text": "header that we're choosing we would we would specify that um so here it's assuming for um you know the ift's to be every bit long so units of bits the whole forwarding engine units of bits um that would allow you to calculate that and then the answer still depends on are you going to go across 20 hops to the receivers or through 10 hops right so i would i would say that maybe roughly roughly calculated if you um have a 2000 receivers um you could end up with as little as maybe double the the number of total bits 4 000 bits and then you break it up into the number of packets that you need to make each of the subtrees be sufficiently small for whatever your maximum size is right but exactly that that goes to the you know simulation of you know give me different topologies and then let's calculate how many bits of addressing we need for them okay so basically at least the the the number of bits uh number of uh uh receivers and then depending on how how much explicit control you need you need to add more bits okay thank you yeah you need more more bits but you don't have the the problem in in brte that you need to do a lot of design up front right you simply you know um [Music] on every bfr you you simply have a bift you have 100 interfaces you have 100 bits you have 10 interface you have 10 bits so that is plain and simple and then the controller ultimately just needs to figure out into how many packets to split it up um to send it right so there is there is never the problem of getting through any topology the larger you know the the number of steering bits are the the more overhead they do but that's the cost of business of doing traffic engineering right i mean the same thing is true for segment routing of course"
  },
  {
    "startTime": "01:04:02",
    "text": "yep thanks all right tng oh yes uh hey toddlers i saw the similar session has been uh presented in another working group i think the internet area working group so this regarding some logistics things did you get any feedback from that group regarding your session yeah i'm trying to remember this week was so busy and i would say i have to go back to the notes to remember there was some feedback there were some questions but unfortunately yeah i forgot where was the presenter but the typical point was in the ind area there is a lot of discussion about variable length addressing and what their benefit is um and everybody is only talking about unicast and so i was specifically going there to say that we actually have the best track record in the ietf of what we can do more and better with addressing even when it was fixed things right remember all the things we did in ipv6 with the addressing and you know uh beer of course being cool new semantic and this one um being a proposal you know that expands uh beer in a way that we can get more out of variable addresses that was the purpose of presenting to india okay thank you thanks all right sandy mute hello there we go here we are go ahead i'd like to know if the beats has been worked in the bead string will be cut the question is if yeah so so basically on every hop you're extracting a recursive unit right so every bit string in the structure is only examined by one node and once it's examined and acted upon it's not seen in the address anymore because you're you know you're uh removing all of that before forwarding the packet to the next node"
  },
  {
    "startTime": "01:06:01",
    "text": "so yeah yes yes so it's like mpls yeah right you consider it to be a bit string mpls type of operation you're always discarding what you've used popping it off thank you all right any more questions tony yeah uh yeah coming from my side um so first uh tallest your draft names start to sound more and more like folded proteins in biology you know you better watch it please help me tell me a better name important the the draft name yes yeah well um yeah so that's you know of course is a joke my question would be um if we even want to look at the adoption of the staff is that calvary covered in the charter by the brte moniker or is something else completely um i mean i'm sympathetic to mucking around with this big mess if it makes sense um you know we just need some kind of um [Music] uh license you know to stretch this story farther i have no answer it's just more something that i put into the room okay yeah one thing when when we do so go through that you know let me know so i can i can help because i have some other working group where stuff has been lying around with that question for four years and they couldn't figure out so anything in there specifically that talks or restricts engineering if i have to on steroids so that it fits the because"
  },
  {
    "startTime": "01:08:00",
    "text": "i mean it's still you know all the adjacencies all the the basic uh you know um the bift and what the bift does is a simple subset um it's just that the address itself is structured differently so to to remove the the limitations so i would certainly make the very strong point that architecturally it's very much derived from brt and learned from the limitations we're getting by just using the same address structure that we did for for beer i was going i was going to say the joy the beer brt plus let me point out this is greg speaking as chair looking at our charter there's nothing in the charter that mentions a specific draft or even a name of any kind it does say in item eight forwarding playing mechanisms for beer traffic engineering definition of how and new beer forwarding plane structures can be used to support engineered multicast trees so i mean the read on the charter from my perspective would be yes this this is completely encased in our uh in our charter okay you just let tallest lose well it doesn't mean we adopt the draft i'm not saying i'm not against i'm just saying this work is within the scope of our working group if it's written that way seems to be pretty clear but we have the license we have the license right and i think also you know working through brte which will be finished yes very soon um we i think we also identified the concerns with this uh you know uh scale and topology engineering which the draft so uh largely now uh documents and so i think that that also should serve as evidence that uh something that get rid of that problem um would be very useful or at least improves it"
  },
  {
    "startTime": "01:10:01",
    "text": "yeah all right any more questions so i'm willing to put on 10 more minutes we have uh yes i've been going forward go ahead uh you're going to show it locally within your own screen oh yeah i can try i can try my screen okay so can you see my slides not yet but i'm i'm behind a soup can and string i'm still waiting was uh was the embedded slide not working for you i don't know okay maybe you just uh uh you you should slide maybe no if you if you go up in the right below your name the audio there's the hand the note the screen the camera and the mic second over from the left is share pre-loaded slides that's the dock if you click that you can select your deck and show it directly without sharing your screen yeah clean that one ice cream share it so we don't lose time i have to be going in 10 minutes all right i i just unshared a screen which wasn't coming up still trying to get that doc [Music] when we do it for you can you see it on a white coat i don't see you you want me to share it for you it's the question yeah yeah just yourself on me all right and there it is uh which one there's chenbir uh the"
  },
  {
    "startTime": "01:12:01",
    "text": "te lan e p f r yes okay is that it hello everyone yeah this is uh today i'm going to talk about the bt for broadcast link next next page so there are issues in existing bit with modcast links english node on the mod cast link may receive duplicate packages for example for te pass from node a to node a tran and f node english h on the broadcast link will receive two copies of the same package one from node g the other from node c so in this draft we propose to improve the blt for broadcast link to resolve this issues next page we go back to two i may have questions specifically about the problem statement why would g and c both be forwarding to on that broadcast line that seems like the the the mask has been mis-structured uh no it is not because mask is disrupted so just follow the procedure for for the blte and then every node will receive one package from g and another package from from c in my draft i give more details step by step but it seems to me if i were sending a packet with the brte header on it and this is what my distribution was going to be i would not need to include g it would not need to be solved in order to get to that distance and then these were sent to c yeah i understand but why why would you"
  },
  {
    "startTime": "01:14:00",
    "text": "set g in this topology if c is capable of getting it there you build your tree with your pc however you've done it you build your mask and if you included g in this there's been a mistake there's no need necessarily is there told us do you want to quickly jump in i mean i i i can imagine there's a scenario where this problem exists i just don't see where it is here that's all this this is more of a problem not with it's with a pce that made a mask that creates this condition so i mean the duplicate packets would only happen when you put more adjacencies than one across the same link so the controller has always the uh the uh the task to to avoid yeah you that here here it's all unique anyhow right here so that is 15 right and then we have another adjacency for 12. 12 is for the for the distillation f right yeah so don't include g yet for for this one for for destination f we don't include g but when c distribute that one to f because on the b loader b will not remove the adjacency 15 for g because we're just removed taurus can you help sorry i don't i i need to wrap my head around a little bit more can we take it to the list i mean yeah i think you might drop that details yeah go ahead then oh i'm 14. there we go you're here for a mod cast connectometer for a market for broca's link kinetic nodes so we"
  },
  {
    "startTime": "01:16:02",
    "text": "assume these nodes are connected to a pursuit node px for a connection between a procedure node px and a real node we will assign two bit positions one for nine connected adjacency the other for forward connected electricity from pursuit number to real note so for line connected adjacency from a real node to pursuit node that the real node will act as a proxy of a prosciutto node so this is similar as uh ospf and iss of saving time here right just to cut to the chase um is is it the proposal to have something like the beer packets be layered to multicast across the uh um that land yeah this yesterday uh introduce a uh a proxy those so those the real node will connect to the projector node so this is are you going to have uh packets being sent as layer 2 multicast so that they can reach multiple bfrs on the same lan no no no no no no no so this one just the real note will send the package to pursuit notes max hope so one implementation is that that the real node will fakely send the package to pursue note is not is not already sent so just and then from there real note will fake or acting as a proxy of consumer notes and then send the package to the pursuit of the nightclub in fact the one important notation is that real"
  },
  {
    "startTime": "01:18:01",
    "text": "load will have two fourteen tables y is for main fourier table and the other fourteen table is the four position node when for the non-connected adjacency real node will get the forwarding table for pursuit node and then send the package to personal desktop that's the one implementation next page next page gives more details how we achieve this one the next slide yeah next life okay okay that's the one implementation so note c will have a main folding table it's normal for interval just contain nine connected adjacencies from real node for to the pursuit node and then this node also have a four folding table for the pursuit node so this is a foreign table for professional laser for a container adjacency forward connecting agency to the presumably nice hope so that's for one implementation next page yeah this gives examples and then shows that we improve the plt and then we will now have duplicate packages next page yeah that's all for this one yes i i i have to look more at the examples um there obviously is the option in brte for an adjacency or for a bit to have a a list of adjacencies to which to replicate so i'll have to really sit down and compare whether what you're proposing cannot equally be done with that existing option yes i guess yeah go ahead and then you look at the draft ending have details thanks so right now i'm going to talk about uh beer equal production next page so uh in appear protection improves page half of"
  },
  {
    "startTime": "01:20:01",
    "text": "the case that node backup user node protect primax node which you assume that those nodes are sent there be a package to the same as c receivers so this solution is tended to cover another case which is case b well bicarbonate nodes per protects uh primary nodes but these two nodes will send they'll be attached to different ce's so this two case is indicated by flag so as flag as equals to one means they will send it to the same receiver which is a case coupled in the previous version s equals to zero means two nodes was sent to the different disease this is the new case next page so the solution for the case b so it's working like this way so e so bicarb equals node protector primary node is configured with the flag indicates whether these two nodes send that be a package panel to the same receiver ces or or different cs flag equal to zero means that they send it they are payable to the different receiver ces igp will distribute this information in the network so after a prr for example c receives this information c will extend is a forwarding table to contain a bicarbophone entry for e version of f which considers the flag s the bicarbonate equals node e"
  },
  {
    "startTime": "01:22:03",
    "text": "will create a multicast phonon table for inverse node f which contains for the behaviors of f in addition by cap horizontal e will extend it is a normal forwarding table to contain a bicarbonate entry for f with a pointer which pointing to the multicast feedback for f when flag equals to zero so at this point network is ready to provide protections for iris note f after f fails both c and u back up equals e have to detect the failure of f so after detecting the value of f notice c we are using is bicarb entry to forward the package with f as destination to k k is a is l of a to f k will submit this package to to e which is backup equation node after receiving this package with with f as the destination by cap us dot f we're using the backup entry in its folding table to decalculate the calculated the package and then using the forwarding table for f to forward the payload of this package to the same receiver as f sense so next page yeah that's roughly about it any comment for this dropped"
  },
  {
    "startTime": "01:24:00",
    "text": "jeffrey you get a question so once you do the uh uh uh okay uh the case b why do you still need case a yeah that's a good question so uh originally we have case a and then cover most of the case or general cases i i think some of people uh reach the question so in case that if two nodes send their bs payload to different c's so we need to cover this case so that's the background we propose this solution for case b yeah you're all right if a customer configured their network or planner that log only have a case where a then we're gonna get a case b all right all right more questions more questions i have more one more answer um case a is simpler the solution for case a is simpler and more robust therefore that's a reason that's also a reason to to to a differentiate between case a and case b all right any more questions we are past our 20-minute push so we have to wrap this up we have places to go up jeffrey did you just step down you're done are you joining the queue all right i think we got a wrap thanks appreciate your time for extending the session thank you thank you thanks for your patience and uh we'll be following up on the list with uh well quite a bit you guys have a great rest of your week yeah you too"
  },
  {
    "startTime": "01:26:00",
    "text": "cheers another this you"
  }
]
