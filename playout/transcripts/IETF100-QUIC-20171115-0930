[
  {
    "startTime": "00:00:05",
    "text": "[Music] um good all describing tail how do you feel about scribing tail he\u0027s he\u0027s good at saying now yeah we picked on Gabriel yesterday yeah we still don\u0027t have one thank you Brian Trammell it\u0027s it\u0027s bad when we have to fall back to IAB members describe that\u0027s it\u0027s not a good sign yeah well Gabriel did it last time thank you again Gabriel it\u0027s very kind never again for a a sir I mean I could I can play the clip from Yes Minister where you you know he explains that those who write the minutes get to write reality that should be an incentive for some people here I don\u0027t know yeah okay so Brian is scribing thank you Brian our minutes are on the etherpad link from the agenda yes oh I need to play that scratch out that link that if you want to help Brian go on etherpad and correct names and stuff like that we had a problem with the etherpad yesterday that once it got over about 20 people in the ether pad it got pretty melty oh um so if you\u0027re not helping don\u0027t go on the either pet let\u0027s thank you okay um well welcome to soar out of sync okay let\u0027s fix that welcome to quick this is our second session this is the no 12 statement as we\u0027ve said many times before these are the intellectual property terms under which you participate so if you\u0027re not familiar with this please go and have a look at ia TF note well on your most convenient internet search engine it\u0027s important to understand this can everyone in the back hear me is this a good volume I need positive okay good thank you because yeah there\u0027s some people in the Java room that complain about the audio if you\u0027re in a Java room and you\u0027ve audio trouble would you say something there and will try to fix it with me deco in here it\u0027s fine likewise just a reminder as we\u0027ve done a few times recently we expect this to be a professional environment if you have issues that you can\u0027t handle by talking to the person who you\u0027re concerned about or by talking to ask your chairs we also have an Ombuds team I said it right who can handle issues especially regarding harassment and those are the folks at the bottom of the slide so today I will send the blue sheets out in a second we have a scribe "
  },
  {
    "startTime": "00:03:05",
    "text": "thank you Brian Trammell we have a jabber relay Thank You Ben and agenda bash session - this is actually a little out of date we\u0027re going to take the item that we postponed yesterday Martin giving a summary the changes by the editors and put that at the top of the agenda then ian is going to talk about loss recovery John\u0027s gonna talk about connection migration and we\u0027re gonna talk about the third implementation draft and what it might contain and finally if we have time we\u0027ll discuss any open issues any other items agenda bashing ok great let\u0027s start so Martin Europe on their way right so this is gonna attract some discussion I predict like everything you put a target in front of the ball and it just runs next ok this should be history for people this is what people were concentrating on during the hackathon which was draft 7 we didn\u0027t do a lot in that draft we just made a few tweaks we use AES GCM to protect the handshake packets we got rid of the 1 RT t long-form headers our packet forms and there\u0027s a bunch of changes that don\u0027t quite complete the discussion about closing but got most of the way there and I\u0027ve got a little bit more on that following on from that because we\u0027ve made a few more changes coming on from that we shifted where the stateless reset token was I don\u0027t know how many people have actually implemented that one and we remove time stamps from acts based on the discussion we had at the previous interim next so closing has received a lot of attention in the past little while there were and the base of these changes was in draft seven and with made subsequent changes in draft eight basics here is that there\u0027s three basic modes of operation one is there\u0027s an idle time out that both sides advertise when that timer runs it\u0027s actually in negotiation I say X someone else says y the minimum of those two is the time that the connection can remain idle before it starts timing out there\u0027s also the immediate close which we decided would be used for the graceful shutdown case so the application is done with the connection or it detects an error it sends a message we have two of those now look at the draft for the details and then there\u0027s a stateless reset so a lot of the discussions sort of focused on this the states during these transitions we have essentially two states now and "
  },
  {
    "startTime": "00:06:05",
    "text": "there\u0027s a pull request that needs a little bit more work before it goes in but essentially we have the one timer and then you transition between two states in that time of the first the first state is only really triggered in the case where you send one of these clothes messages and that\u0027s the closing State better names people that doesn\u0027t really matter in that state you don\u0027t send any packets except for a closed message in response to receiving packets from the other side so in case your closed message was lost you provide more of them just so make sure they get through the second state is the draining period which is essentially you keep your state around for a little bit of time to make of that no incoming packets for that connection reordered packets those sorts of things make sure they don\u0027t get treated as if they were new connections or anything like that you can associate them correctly with the the connection state and throw them away properly without triggering any sort of other machinery there\u0027s a bit of discussion about that and I think Christian raised a few points of that well what state do you actually need to maintain in each one of these things because there\u0027s not a lot of information you need to maintain in order to make these decisions correctly so it\u0027ll be a little bit more to add on that in in the next draft expect to see that in the next little while the pull request is in motion next I\u0027m just going to go through this in a little bit more detail with with nurse ladder diagrams so timeouts relatively straightforward you have an agreed timeout period when that timeout purina lapses you both sides go into this draining state and the reason that both sides going to the straining state is that they\u0027re in individual views of when the period starts is skewed based on time that packets take to deliver maybe there were spurious retransmissions or something like that the cause that two sides to have some slight disagreement current draft says three RTO that\u0027s also up for negotiation some discussion than in the doc about how you might short shortcut that in certain circumstances next the immediate close is more interesting I\u0027ve shown one of the more complicated scenarios here so a detects some sort of error and sends a connection close that connection close could be lost and I\u0027ve shown that disappearing into the ether in this case B continues on happily ignorant of the fact that has generated some sort of error and sends packets to a a because it\u0027s in this closing state detects that I\u0027ve got an error on the slide but it it sees one of those packets coming in and sends a connection close out so that this is essentially lost recovery for the "
  },
  {
    "startTime": "00:09:05",
    "text": "think the amount of state that the that a is maintaining in this case is pretty minimal it can actually just save the packet that received and there\u0027s some question about whether it even maintains decryption keys for the for the incoming packets but that\u0027s something we\u0027re going to sort out B can send a connection close to sort of shortcut this whole process we had a bit of discussion with with implementers about this one and they were concerned that in these shutdown scenarios there wasn\u0027t any way to sort of guarantee termination in a reasonable period of time so though I had having test cases that sort of in this sort of trailing state and if you\u0027re operating test cases in a in a sort of lossless environment being able to send a closed in response to a closed is actually quite nice because then both sides enter into a state whether they\u0027re essentially done and there\u0027s no more packets needing to be exchanged so we allow that to happen once but we don\u0027t allow that to be repaired otherwise we get into a ping pong situation there\u0027s a bit of debate about this particular point as well Christiaan suggests that we could use a particular error code for this situation and allowed B to continue sending but I don\u0027t actually think that\u0027s necessary but we haven\u0027t resolved that particular part of the conversation the error on the slide is that once a has received a positive indication that B is closing it doesn\u0027t need to send connection close anymore and so it enters the draining state also and both both of those just quietly go away at that point next that\u0027s actually in the text there but never mind now stateless reset is really quite simple the server doesn\u0027t maintain state so if it receives a packet that it doesn\u0027t know about it can send a stateless reset and the client then enters a draining period just in case this was a reordered packet or something along those lines pretty simple next questions I\u0027m just gonna rush through these in there in the hopes that no one says anything more right so we decided to do both plan a and Plan B those people who are familiar with the the wonderful plan a plan B discussions on WebRTC will enjoy that particular reference so we essentially decided that we\u0027ll use the two lower bits on the on the stream identifier to identify essentially four different types of streams bi-directional unidirectional client and server the four matrix of them when we looked into this we discovered that clot stream 0 which we use for special purposes was being allocated I think it was unidirectional server or something like that in the first iteration of this and we managed to get it to bi-directional server initiated but then that didn\u0027t make a whole lot of sense because clients initiated this dream so we flipped the "
  },
  {
    "startTime": "00:12:06",
    "text": "bit and now it makes a little bit more sense so people who actually implement this using a standard stream machinery will be able to say well this is just a bi-directional stream that the client initiated and they can use all the standard stream machinery without special logic other than the other than the necessary special logic in order to handle this consequence of that is now that we\u0027ve flipped the bit the lowest bit so anyone who\u0027s used to saying that clients initiate requests on stream 3 for instance will now find that it\u0027s stream for instead and it\u0027s 4 8 12 16 because we now have more bits consumed there\u0027s new state machines coming I think we\u0027re gonna go through in a little bit more detail about how the individual sides of a stream transition through states so we\u0027ll have a sentence ID state and a receive state side state and it will be up to implementations to synthesize a state if they want across a bi-directional stream if that\u0027s at all interesting to them but I don\u0027t think we\u0027re gonna spend a whole lot of effort on that there\u0027s a table in there that sort of maps to the http/2 stream states but it\u0027s imperfect because quick doesn\u0027t have some of the properties that http/2 does next we changed all of the numbers previously we had a mix of different things for all of our different numbers in the protocol we had 8 bits and 16 bits and 32,000 64\u0027s and and then we had these weird things where they had flags over here and it was either 8 16 12 because there\u0027s many many different ways in which we could represent a number especially especially like the the bespoke 16 bit sort of floating-point format that we had that was that was great it fit the purpose but just another format that we had to deal with so now we just have one it\u0027s a variable size encoding we take the first two bits and that encodes a size 8 16 32 64 and the remainder of her to be beginning your number leads to some interesting maximums for these but it\u0027s it actually works out pretty well we decided to also move this to the HTTP mapping conveniently it has the property of allowing us to remove continuations for header box which was something that people really really hated in HTTP 2 and that is no more it also means that most cases the the frame size will actually be smaller HTTP 2 frames have a three bike lengths I believe and now for the most part we\u0027ll have ones and two by "
  },
  {
    "startTime": "00:15:06",
    "text": "plates which is which is quite nice so I did not check those numbers particularly that\u0027s just examples of things that that he did yes 6 14 30 and 62 than other new numbers next a bunch of little things we decided that max strain data can just use octet rather than kilobytes we have a pong frame there\u0027s some address validation stuff that in the draft now so someone who detects a connection migration can can sort of probe that particular path and see that there\u0027s actually someone live on the other end and return route ability checks are quite nice we\u0027ve renamed the packet types which doesn\u0027t seem like it\u0027s much but we also remove the seperation between client and shake and server handshake packets they no longer have a different packet time I think there was something that was one other thing that I added to this slide but I\u0027ve forgotten so there\u0027s probably something more in here but I think these are the ones that are coming is there anything else coming in I\u0027m sure there is we\u0027re gonna fix the packet number and the connection ID thing and that sort of thing but I don\u0027t think that\u0027s really all that important yes it\u0027s all it\u0027s all little stuff yeah and that\u0027s all I have Mike Bishop I think we had talked about putting the push ID stuff on the slide as well right and I did in my own copy and didn\u0027t upload the changes my apologies so so Mike and I have been talking about moving to a model where requests in HTTP ID have their own identifier at the app at the HTTP layer so when we when we made some changes for push we created this notion of a push identifier and so when you when you make a push promise it has an identifier that\u0027s explicit at the edge HTTP layer and then when you provide the response in that unidirectional stream that\u0027s coming back now it includes that identify currently we we identify requests by their stream identifiers their quick stream identifiers and the suggestion here was to provide an HTTP layer identifier that\u0027s explicit at that layer and it allows people to implement transports that don\u0027t expose the stream identifier to the application layer a country quick question on the format at the identify what kind of adapter is it a number and I imagine it\u0027s going to use that number of encoding that we talked about previously okay I asked because if you wanted to make it trivial to use the same mechanism for something "
  },
  {
    "startTime": "00:18:07",
    "text": "else like DNS DNS uses you name for this exact purpose and having the identifier enable that would be handy it\u0027s certainly possible to map a queue name into a an identifier that is an is a number and to get around this problem but I just wanted to raise the fact that in other protocols using a string might be handy so this would not be generic so this would be HTTP specific so you anticipate that if a different protocol wanted something similar they could use a different format yes okay so then DNS might use its what @q name or something else it doesn\u0027t really matter that they have that better choice this would be specific to http but we\u0027d be establishing I guess a best practice in a sense they\u0027re saying don\u0027t rely so much on the underlying identifies rely on make your own identifies for this and I think several people have expressed this is patent they\u0027d like to see Ronnie Ronnie Evan about the closing or disclosing things I mean there\u0027ll be some difference between uni direction and B directional so the stream states are different between bi-directional and unidirectional but when you actually look at the at the independent state machines the the primary difference between unidirectional and bi-directional is that there\u0027s an opening transition invited in for a bi-directional stream when the the paired side opens so if if the if one side opens on a bi-directional string the other side is implicitly opened at to match and that\u0027s the primary difference beyond that point doesn\u0027t there\u0027s not a lot of difference there the the things that the things that sort of come up as a result of that is if you are blocked on a particular stream you might send a string block thing that will cause the stream to open in the opposite side in the opposite direction those sorts of things where it gets interesting but other than that once you\u0027re in steady state or you\u0027ve transmitted all the data on all the states are exactly the same they closed the same way and and everything that we have independent read and write closed we don\u0027t have a have a an atomic close both directions at once because that just doesn\u0027t work in the protocol all right I saw some frowns but we can talk about details offline I\u0027m sure that there\u0027ll be there\u0027ll be more words in the draft very soon I was gonna add to that better sorry Ian sweat Google Martin\u0027s PR that\u0027s in flight and hopefully we\u0027ll be landed soon there\u0027s a very nice job of like clarifying all this so either if you\u0027re super interested in like stream state machines look at the PR and if you\u0027re only kind of interested then like wait 408 yeah all right thanks for that next up we\u0027ve "
  },
  {
    "startTime": "00:21:07",
    "text": "got connection sorry I lost recovery within do I need to oh I don\u0027t have to do I have to eat this might as well a little bit but not as much as yesterday or the day before can I move it but I can\u0027t move outside the pink box right be scolded understand okay okay next slide unless so the goal of of wass recovery and quick is to minimize the time it takes to repair data in lost packets and ensure that the connection makes consistent forward progress at least those are how I think of the two bills and the one kind of quirky non goal especially relevant to CCP is the recovery draft tries not to spend too much time telling you what you have to send in those packets so go over kind of wide later but like unlike these feed the the ordering of what you retransmit is a lot less important and so the recovery graph more focuses on like when you should be sending and when you should be declaring loss not like what is in those packets next line so some of the principles packets are never retransmitted information in them is so yeah focus on what to declare loss not what to send so another principle is you wait until you actually have information in order to make a decision so an example is we don\u0027t mark packets lost until an acknowledgement for a packet that was sent after it is received kind of makes sense but makes things a lot simpler we also avoid undue in general in particular F RTO if you\u0027re familiar with that which is the process where you might reach and do a retransmission time out and then decide who is spurious afterwards and then try to like unwind your state we don\u0027t do that because unwinding stage is complicated and bug prone instead we just wait until we actually know whether the RTO is various and then adjust the congestion window at that point then so and in the meantime we basically like clamp down the congestion window so it\u0027s not actually it\u0027s like basically temporarily clamped down but we don\u0027t actually change any of the congestion control state so turns out to work out a little bit simpler next one notable differences from TCP quick doesn\u0027t have retransmission ambiguity because technically no packet is ever really retransmitted it is you know the same frames maybe rebound \u0027old with a new packet number or slightly different frames may be bundled with a packet number acknowledgments can contain as many a clocks as space allows at least in the current current draft because of the the new VAR n thing so it "
  },
  {
    "startTime": "00:24:09",
    "text": "used to be 255 which is already more than enough and now it\u0027s essentially unlimited acknowledgments are Eero irrevocable so once you hear an acknowledgment for a packet that means the pure has received it and processed it which is next next item and you know from that point you don\u0027t have to keep it in your send buffer or any other sort of things that you might have to do for TCP with what\u0027s acts which are revocable and recovery ends when the packet number not a sequence number after the largest outstanding packet is acknowledged so this is sort of a subtle point so I\u0027ll try to elaborate on it in TCP recovery is the period of time you enter when you first experience a loss and it lasts for approximately an RTT in TCP however in order to exit recovery you must have packets that are sent in sort of like essentially all the lost packets have to be filled in and your sequence number space has to be filled in so this is sort of in sequence number domain that you have to exit that may actually take multiple RT T\u0027s to get you out of recovery and for a number of circumstances particularly with like high-low circumstances when you have multiple retransmissions at the same packet in quick it ends when you have a packet number that was sent when you the the first packet number sent after you enter recovery when that is acknowledged you exit so one benefit of this on the one hand you enter exit recovery faster so that could be a pro or con but one distinct benefit is that if you are continually losing packets over multiple round trips and the loss rate is very high quick will more rapidly reduce the congestion window because each time it\u0027s a separate loss event and there\u0027s a multiplicative decrease whereas TCP will commonly only reach reduce the congestion window once even though you know it might take three or four RT to use to repair all these losses I\u0027m just trying to make sure I understand understand this cuz it seems a little subtle and yeah this is this is totally so diagram gonna help probably yeah well are they really I don\u0027t want to dwell on this but I do want to like highlight it for those familiar with the topic so okay maybe I\u0027ll just give it a yeah I didn\u0027t make a diagram for this unfortunately well students readiness for me so I can just pretendin oh yeah that\u0027s not a super critical issue but it is a an issue that might not be obvious for just reading the documentation next slide sorry okay so now I\u0027m actually gonna step through the the two types of loss detection in quick one is act based so this is when you receive an acknowledgement for a packet that is larger then you know some previously sent packet so you know I received an acknowledgement for six and maybe not for something below six as this example will show and then the other type is "
  },
  {
    "startTime": "00:27:09",
    "text": "going to be timer based so like care loss probes retransmission times out timeouts and and the such so let\u0027s step through the FAQ example for fact stands for a forward acknowledgement in TCP this is the general style of loss detection where you look at the distance in kind of packet numbers of how far the gap is opposed to the number of actual dewbacks that you receive so in this case it\u0027s basically a simple matter of math is we compute like whether you know I have a packet number that is three or more above a packet that has not been acknowledged so next slide so the receiver receives one and two sends an acknowledgement frame to the sender next slide three four and five are dropped so six is still in flight receiver next slide received six and immediately sends an acknowledgment for one and two as well as six next slide and when that acknowledgement is received the receiver declares three lost so because it\u0027s you know a packet distance of three in this example nothing is immediately rejected just because I don\u0027t want to really kind of go into that at the moment but yes as if three was retransmitted seven it could be used to to recover for so I actually I\u0027m gonna go into a different example which is why I\u0027m not gonna retransmits reach just for the sake of argument just to debate disambiguate here you\u0027re saying that the packet number three is lost not three packets are lost yes the packet number three is lost is choleric lost by lost detection thank you next slide currently retransmitted so early retransmit as with TCP kicks in anytime like the largest outstanding packet is going to be acknowledged is acknowledged and there are packets underneath they have not been acknowledged so this is an effort to speed up lost detection in cases when you have losses near the tail so you\u0027re reordering threshold is large enough that you know the very last packet was acknowledged and the packet before it was not so you\u0027re not gonna declare it lost immediately but you\u0027re at that point you\u0027re not going to get any more information back about it so we take the approach in quick of doing what the Linux kernel does which is just have an eighth of an rgt timer and then when that timer expires declare packets lost so as you can see six has been acknowledged and we\u0027re still awaiting for four and five that the sender is setting a timer next slide when the timer expires four and five are declared lost and and we\u0027re done next slide ah timer base lost detection so timer based loss detection is probably a little more more different from TCP than "
  },
  {
    "startTime": "00:30:10",
    "text": "the regular fact style and early retransmit cases I just ran through time out packets do count towards bytes in flight so in quick bytes in-flight can exceed the congestion window for a period of time so again it was that kind of ensures that you actually get a correct congestion control signal even if you\u0027re in the timeout sort of mode time of events do not immediately cause packets to be declared lost or changed the congestion control state so essentially the idea is I don\u0027t know anything all I know is I even heard anything so that could mean I have you know a temporary Wi-Fi outage or it could mean just like you know suddenly a bunch of packets are in the queue and you know everything\u0027s fine so I\u0027m gonna wait until I actually know something to adjust the congestion window or declare anything lost so therefore yeah the ce-1 does not change during these periods of time and that\u0027s true for all three types of time out I\u0027m gonna walk to next slide so the handshake timeout is set to the RTT which is either a measured RTD or initial R to D times two to the number of timeouts plus one so essentially if you have a initial RTT like quick does of a hundred milliseconds then the first time out for a handshake would be 200 milliseconds and then 400 and 800 and so forth except from the last cent handshake frame so it\u0027s kind of like the most recent handshake gram and you retransmit all not acknowledge tangent packets so this is a little bit more aggressive than the other time out modes potentially but the idea is that you know the handshake should be relatively small and additionally it\u0027s very important that it actually completes because otherwise you can\u0027t really make any progress on the connection sorry and yes the expected RT t if you if you don\u0027t actually have an R DT sample as for the very first packet is based possibly on previous connections if you\u0027re doing RT 0 R 2 T resumption it could also be based on other environmental factors like I know I\u0027m on like a 2g network so I can set it to 2 seconds I mean certainly there are tweaks that can be made there next slide tell us probe tell us probe is from an informational draft that was published by by some folks a few years ago is default enabled I believe in the Linux kernel I believe it has now been implemented in in BSD in combination with RAC so it\u0027s fairly widely used in the industry but it is not an official RFC so these constants are all kind of taken from the TLS probed paper but the idea is tell us probe is that when you haven\u0027t heard anything back for to smooth round trips or in the case of if you only have one packet outstanding one point five times the smooth red shrimp time plus the delayed act time out it\u0027s "
  },
  {
    "startTime": "00:33:11",
    "text": "set from the last time you sent a packet so it\u0027s just basically like I can hurt or anything or send anything in this period of time and you only send one packet and quick by default those two in a row of these before going into retransmission time out at least at the moment the draft for TLP specifies one or two is recommended you know what one could reasonably choose one as well yes Ted Ted Hardy just a quick clarifying question for retransmit Abul frames do you also include things like the ping and pong frames which are not in themselves retransmitted but where the idea of sending a new pong frame Mike might fit the same bill I would say that\u0027s yes but you make an interesting point the the original pink cream was retransmitted well because actually had no payload and we\u0027ve kind of tweaked the the meaning of the the ping and pong frames to be a little bit different but the the short answer is yes essentially it\u0027s anything but an acknowledgment anytime you actually like need to make it through it make sense Thanks yeah next slide retransmission time oh so this is the classic retransmission time out formula you have smooth round-trip time plus 4 times the RTT variants you also have a min retransmission time out we as as with many of these other constants we are currently using the Linux default which I believe is 200 milliseconds and it has exponential back-off so quick it was currently is setting it it\u0027s retransmission time it a little bit differently from TCP in the sense that it is setting it from the last sent packet with retransmit little frames just like the tail loss probe not the kind of first packet and just like TCP we\u0027re sending two packets so when if you\u0027re doing you know tail off probe twice and then retransmission time I would say once or twice at some point one of two things is going to happen either at the connection is going to timeout because you know you just get black hold or eventually you are going to receive an acknowledgment when you receive an acknowledgment at that point in the case of the retransmission timeout you will go down to the classic white minimum congestion window which we default to - if it turns out the retransmission time out was was valid ie the retransmission time out packets got acknowledged but nothing previous did similarly if any of these packets are acknowledged like the Kaos probe or otherwise packets besides the retransmission time oh you know normal loss recovery will kick in so even though we don\u0027t declare a packet lost when we do at a loss probe any previously sent packet if the tale us probe packet is acknowledged and it hasn\u0027t you know the previous packets haven\u0027t been delivered then yes they will be declared lost just like normal so so mostly this - relies on standard AK style the whole idea of these timeouts is basically can get you back into the mode where using the standard AK style fast recovery next slide in the gory feresten your my name is Gordon "
  },
  {
    "startTime": "00:36:13",
    "text": "anyhow get and write and it seems to me like you send a lot more after RTO experiment TCP wood and in the first round is that right all right master we go after retransmission timer after the first RTO expiry you seem to send several buckets rather than one I think I think my understanding of the linux implementation is that it sends two instead of one for a retransmission timeout am I wrong about that ravine I think you\u0027re supposed to only send one so the two packets actually confusing to me and I assume min zero and is also one after time I believe we are setting it to two because I think that\u0027s what works is doing gen Iyengar yes TCP is supposed to send one but the cost of free time spending after a time or is incredibly high and the whole point of sending one packet makes that one packet incredibly fragile if you lose it then you have to wait for twice the RTO before you do any sort of recovery again so sending to protects you from that fragility I think those value and considering this for TCP as well to be honest so so yeah I\u0027m gonna actually go the constants in the next slide but I think there definitely are things here that are taken as a model from you know what Linux does as default and not necessarily from from the RFC\u0027s and so like that the constants are sort of in formulas are sort of a mixed at you that is okay but I think like whenever we are deviating we should probably document it so this is perhaps in July and uh this is perhaps an interesting question number some of the constants that you will see here are also aggressive because we found them to be quite useful and and and quick is definitely driving towards like the handshake time out for example next slide and some of them aren\u0027t even what Linux does one of the things that is DLP in quick we do two tailless probes before we go to an RTO whereas in Linux it\u0027s actually one TLP before we go to an RTO and some of this is designed to be try it is necessarily trying to be more more aggressive in terms of recovery but still safe because the fundamental mechanisms are still the same I don\u0027t know how to think about this in terms of comparing with TCP because the mechanisms are still the same and we don\u0027t anywhere in here we aren\u0027t required to follow TCPS specs but we are referring to it the only concern would be as if any safety properties are being violated because the timeout basically tells you that the network is in pretty bad shape so I would suggest that we yes I mean if "
  },
  {
    "startTime": "00:39:13",
    "text": "if to is what you\u0027re recommending we should put it there but it would be nice to note that if a conservative implementation would may choose to do one that would be my the the only reason so so we should discuss that I think the constant so a big part of this is basically discussing the constants I think those are those are in my mind what I expect that we will end up discussing but as you said one of the higher-order points that should be clear from here is of the safety properties are not getting violated we are pushing the constants around but the the fundamental mechanisms are still the same yeah that makes sense I had a question on the tailless probe can you go back Reese well yeah I think once monomer site the kid be late at time out what is the value that\u0027s in the last slide go back for two more slides is 25 milliseconds by default we chose a value that was lower than I think what most operating systems are currently defaulting to although it\u0027s possible summer are picking this value partially because it made a variety of congestion control situations particularly basically made delay tax less problematic from like doing things like PPR especially yeah because because this is the sender picking the value of energy doing Taylors probe one of the deficiencies in TCP was we for example can\u0027t assume that the other side is doing 50 milliseconds and we have to pick a worst-case value of 200 milliseconds so this might be a useful transport parameter to negotiate so that we can pick the value I would agree that\u0027s what issue 912 is actually I want I get a feel for the room because this is like one of those things where I would very much like to move forward with this and I don\u0027t think there\u0027s a lot of objection but I think for once I have everyone the right people in the room would would anyone object to communicating the peers you know maximum act delay in transport parameters in quick center reason we would not want to do that Gouri first again didn\u0027t we talk about this in TCP an and it\u0027s still an open issue that so is yeah we can talk about it here there as well general so this is perhaps a matter of process in the chest and can can direct this but the constants and with the mechanisms one of the decisions that we made early on was to say that this is going to be a standalone document which basically cites other stuff but this is going to be its own standards track process and not have going plate the informative reference is not right they be informative references but not we but we are not going to live with the same masts and shirts that we have in DC p.m. in DC be in our sequin 581 of physics and and and that\u0027s part of the reason why I think that folks who are familiar "
  },
  {
    "startTime": "00:42:13",
    "text": "with the the documents relevant documents should be engaged in the sanitization of this document as well that said the constants here are different as Ian pointed out earlier some of the mechanisms are subtly different and that will cause some constants to change we are also chasing perhaps a slightly different target which is latency and so some of the constants are a little bit more aggressive and as you pointed out the Baro Naja\u0027s from the specs but also from current practice so this may be something that can feed into the TCP process that maybe can be used to change constants that we use for TCP as well at the IETF but this is a standalone document and I don\u0027t know how if that conversation should be hey can we move this conversation to TCP mo somewhere else I think we should have the conversation here as well yeah Lars I could I agree that the conversation should happen here but we have a lot of these people in the room that\u0027s why we that\u0027s why we specifically said we\u0027re going to talk about this stuff here and not another and where that might not be the case so when I echo praveen suggestion of actually documenting the differences to the TCP values and maybe even put an appendix in or core sort of describe the motivation for the difference that\u0027s right because otherwise we\u0027re gonna keep getting those questions over and over so you can always rip that out if it becomes useless by the time you go to RFC but for now it might be useful to you know explain why these are different instead of just picking them out of a hat that\u0027s completely fair so follow-on question when you see the differences on TCP constitutes are we talking about the difference of some PCB constants in the RFC stream yes there can but so a loss problem doesn\u0027t exist in the RFC stream right well it does it has no standards well it\u0027s an expired draft believe we never did that okay yeah well so information recite the expired draft but so it is what I think sort of the minister sort of to sever constants that cholesterol people sort of know about right one is what the RFC says and then there\u0027s what Linux does that\u0027s basically the two sets of things that people are familiar with and I would sort of even go as far and say you know if you if you pick the Linux one over at RFC one say why and if you pick neither especially say why and and if you go with a TCP one you can assume that everybody knows why that seems fair but I think like instead of saying Linux we should probably say standard implementations because I didn\u0027t catch it can you say it again I said instead of specifically referencing a learner\u0027s implementation I should say like typical implementations peak value X Y Z and we are deviating from that because of sure I mean the the the only sets of values that are easy to for people to look at are dope from the open source ones right and I don\u0027t know how to if you\u0027re willing to contribute text that about what what windows might be doing for constant and that\u0027s fine do but I think we\u0027re running in the danger of having "
  },
  {
    "startTime": "00:45:14",
    "text": "like a comparison matrix of what different stacks are doing in this talk to religious also probably not going to be super useful yeah I\u0027ve had enough ly the RFC deviations are pretty straightforward but the ones that are not and out of cz I think like picking a typical value that\u0027s from the lens cannot seems fine to me yeah I mean I\u0027d be happy to have your your help Praveen if you wanted to contribute some to that that\u0027s like I said there\u0027s a small section there that sort of says basically like most these were yanked but from Linux except for these two or three which is pretty is pretty tersh so I mean we could certainly go in Tibetan like elaborate a little bit more if it\u0027s helpful to people generally I just want one last comment on the understate is that I would encourage people who are reviewing this interviewing the constants should not simply look at the constants because the mechanisms can be subtly different as I said earlier the safety properties are are not violated but the mechanisms are definitely in in general as a rule you can assume that they are subtly different and that would be an excellent point to make in the document as well because I think text like that currently sort of lacking there\u0027s it\u0027s it\u0027s very detailed in the pseudocode in a constant but the actual motivation is at the moment not area that\u0027s it while I\u0027m speaking so I also got some feedback that people are confused at all the other drafts are at over seven and this is at Oh 6 so my suggestion would be we try to keep the base draft set boy it\u0027s another seven it showed up in my late date attract aid in New York state records at oh six so I\u0027m very confused I was let\u0027s continue there was a question about the max height delay in TCP M yeah so that\u0027s a deficiency in TCP and I think we have an opportunity here to kind of actually explicitly communicate the value so we can do the right thing with a loss probe the other question I had was this default RT the 200 millisecond handshake timeout so I assume that things like caching the initial our deity in the path and using that as you know the signal for the actual time out might be a good suggestion to put in there because satellite links this might be wait yes that is a suggestion I think currently it suggests you basically like cache the value for a server when doing 0tt that\u0027s not quite sufficient for some circumstances because if you\u0027re on a very long r2t link it may turn out that like some new server you\u0027ve never contacted before it like also has a very long RT so I mean I don\u0027t have enough experiment like implementation experiments but with the latter part but certainly the former approach of just saying like last time I went to WWE example comm it was X we use in G quick and seems to work well and is recommended in the text yeah yeah my name is Michael Schaff speaking as TCP and Kutcher so I would strongly Beck documenting any deviations from what TCP does because it\u0027s very simple you can easily get faster than TCP if you make all constants more aggressive which is fine but you definitely have to document that because if that\u0027s at the end of the day what speeds up things then you have to at least document that and other than that it would perfectly fine if you bring these things to TCP m2 so that we "
  },
  {
    "startTime": "00:48:14",
    "text": "can understand how we can build equivalent concepts in TCP as far as they apply this the protocol that we have yeah thanks I will say actually I didn\u0027t bring this up before but you know I think I think RAC tries to end up implementing like a huge number of these principles so it ends up being like quite similar ways conceptually so Corey first I think the algorithms are going to be different here because there\u0027s good reasons because you\u0027re mechanisms are different so the time at constants are going to be different but then I worry about whether the protocol could be more aggressive which is kind of repeating I guess what the previous speaker says but we need some way to get a handle on this just a metric saying your hundred milliseconds it\u0027s 200 milliseconds doesn\u0027t help we need somehow to understand how it will compete in a queue and in particularly in really strange environments where you\u0027ve got wireless mangling at one side or something so I don\u0027t think this is an easy comparison but if it\u0027s gonna be more than experimental then somehow we have to figure this out so my hope is that like next year we\u0027ll have or early next year hopefully we\u0027ll have implementations that you can actually run some both data through and those of you with students might throw some at this and and you know get some papers out of it and come back and show the results from experiments or simulations or what have you so that we can have a discussion maybe nice ecog or something on on creek versus tcp and what does it look like I like that thank you yeah that\u0027s a good idea hey um so I got up to address your question your question comment about how should we expose my settings theater side on during the handshake your what my constants theory side sees just it\u0027s particularly one constant well like yeah like once we decided to do one other might be communits well um but let\u0027s just focus on this one arm the specification doesn\u0027t say you have to do that they act at all um and it also doesn\u0027t say you have to have this implemented by doing a single timer that pops and then you pass in the acts um so one thing you might first is to do is you might like consider um you know you by considering mmm the number of packets you\u0027ve already received you\u0027ve not yet act as pressure on when you act now I\u0027m not saying any particular thing you should do I\u0027m just saying that um that I\u0027m worried about codifying the notion that this opinion about that the receivers algorithm in the protocol because the receiver might not have a timer right um and so what is he gonna say that I think if the receiver doesn\u0027t have a timer probably things are not going to like work super well well no but you might say you might you might have a timer that was like there was like 25 milliseconds divided by the number of a message so and what would you know what is that III guess my my goal there would be to return the max timeout so like I don\u0027t think that we need to communicate the full like you know acknowledgement algorithm I think I agree that\u0027s like massively too complex but there needs to be some bound I\u0027m like you can set the timer for this and "
  },
  {
    "startTime": "00:51:14",
    "text": "if it\u0027s been this long like you probably waited long enough that\u0027s that\u0027s all I\u0027m really looking for it right now in TCP most implementations I believe now either use 100 or 200 and yet like I think the RFC says like one second and so we\u0027re basically like I mean if you\u0027re conservative you choose one second but like that\u0027s crazy so no one does and so they choose some smaller number and hope it works sure well I guess they just like not see it then it\u0027s important to write this text very carefully so it doesn\u0027t like so it doesn\u0027t end up like having you save things if I\u0027m with me sounds yep agree Brett Jordan I apologize for my ignorance in advance but like to shift gears a little bit so from my understanding that all of the acts for quick as we currently have them defined will all be inside of the encrypted tunnel that\u0027s correct and so I am interested to know how we plan on enabling the network operators to actually help when things go wrong so when you run a large network you may not own either end like the client or the application this is not the document where we have to discuss I know okay people were you here yesterday probably yeah well okay okay well okay I don\u0027t have a good I don\u0027t have a good and yeah I think this is not the document for that unfortunately okay thanks Jahangir I want to respond to something Cory said earlier which was around comparing this with TCP and so on I think that\u0027s that\u0027s it\u0027s fantastic we should do it at some point and try to understand in more detail how friendly these constants are in tips Michael said something about how you know quicks benefits are coming from these constants part of my response is absurd liquids benefits are coming from some of these constants and therefore this constant should get transplanted into TCP where they are useful but the Hydra point I want to make still again and then to some degree repeating this point is that there are subtle differences between quick and ECB and you want to pay attention to that to the constants specifically if you look at loss recovery in pointed out earlier that the recovery period itself is actually different in DCP as compared to quick and this happens because quick does not reuse sequence numbers and as a result you get past the you never you do not have the notion of a queue mac point so Jenna all of these things are excellent for the document they use your pen and I believe these are so des so I will let me defend that just VB fee that is a in O six we put in some a bunch of text that actually does address some of these concerns but yes we can definitely do seven so there\u0027s no O seven in the data tracker no yeah actually huh okay so there\u0027s now I guess the most recent version of it it has some text but I thought I was looking did not get published no no it didn\u0027t get published "
  },
  {
    "startTime": "00:54:14",
    "text": "but it\u0027ll get published now I think mark is on it he\u0027s faster with buttons than I am yeah Thank You Burton not in Thompson the point here about advertising values you do actually as a client than advertise values to the network it\u0027s a consequence so because transport parameters are now - what parameters are not encrypted that\u0027s true so that\u0027s just something to consider um you with your tier that\u0027s that and I heard that there was some thinking and TLS about encrypting or at least obfuscating them though okay I\u0027ll wait for that okay yeah so so yes there are a number of ways in which you can do this but they all have latency costs and I don\u0027t know people you don\u0027t want we\u0027re in a position to do that okay we could build another mechanism for doing it later but then what that mechanism is maybe not particularly useful so I\u0027m just suggesting that we may want to think about the consequences of just throwing a whole bunch of things in there so if this is truly valuable then maybe the cost is not particularly high because that act delay is actually observe of all on the network anyway so we could probably say not a problem but for the general class of things as that could pointed out that we might want to add other things we have to think about think carefully about what we\u0027re doing with it these sorts of things agreed I think we should consider it on a case-by-case basis I think in this case I think I did 25 milliseconds is actually a pretty reasonable default for the public Internet and I think the most of the people who would be changing it would actually be cranking it down for data center environments yeah Mia could have been so far for the egg delay it might actually be useful to have a mechanism where you can actually change it later on as well because you might see that your network conditions have changed somehow and you want to adapt I mean it\u0027s probably it\u0027s most useful to have it right from the beginning but might be useful yeah so we could yeah Martin I can\u0027t hear you that\u0027s what I\u0027m saying just respond to that if we need that then we get encryption as well so that would be fine I I just thinking if you want to do this in a data center then you would do it in response to a change in in response to observing a really low RTT for instance yeah but that might be kind of brittle but yeah maybe hi Sebastian hey maybe related to that what about our duties for sort of really short distances local networks cities can we go below 1 millisecond why is that you\u0027ve chosen is it sort of a fixed unit of duration I mean all these constants are as I said kind of based on like the Linux numbers but like all the RTT measurements in quick are designed to be microsecond accuracy and when we did "
  },
  {
    "startTime": "00:57:17",
    "text": "have timestamps they were also microsecond accuracy though now they\u0027re gone so but yeah definitely I think microseconds is is the goal you know and all these circumstances again the if we negotiated a transport parameter would be the maximum delay and that still strictly makes the LP better even if you adjust the value lower on the yeah I mean our now we\u0027re really bike shedding but the question and the only distinguishing microseconds in milliseconds if you\u0027re encoding on the wire so I guess the point is that you\u0027re gonna encode maximum acti on the wire you might with units microseconds giving you one send at once anyway that is all I have thank you very much oh oh crap I totally had one more slide um yeah implementation tips so these are things that Google quick has messed up at some point so like don\u0027t do these spurious retransmissions happen you should really continue to track the data the sent to the lost packets for at least a little while after they\u0027re lost you don\u0027t have to track it forever but like at least some small period of time because you know weird twiddles and such do happen you get one spurious act and one packet that like Greece\u0027s ahead of others and declares 50 lost and bad things happen never ever ever retransmit an acknowledgement frame always send up-to-date ones if you don\u0027t do that like your world you\u0027ll be in a world of pain and like loss recovery will work like absolute crap always send packets in packet number order or you will either end up with spurious retransmissions or your implementation will be stupidly complex please always send them in packet number all order it this also makes all the crypto people really happy because it gives them some like warm fuzzies that you are not reusing nonsense so these are my tips and I thank you in so we\u0027re doing fine on time I think it\u0027s 10:30 we\u0027ve got one more presentation and then we\u0027ve got the discussion of the third implementation draft so I think we\u0027re fine and as I think was mentioned we\u0027re hoping to see more implementation of this we\u0027ll discuss that on the third implementation draft timeline but then we\u0027ll have running code to get our data from which is nice and and draft seven is indeed now up which is great yes Bruno sorry one more question on the previous draft the very first slide said that the draft does not recommend what percent I had a brief comment on that you were going to explain the philosophy of why that is so it might be still useful to suggest a particular retransmission strategy in the draft so I think the I think the transport draft has some fairly like wishy-washy text about suggesting that if if all things being equal you should send you know retransmissions versus new data because you know the application is trying to make forward progress and it "
  },
  {
    "startTime": "01:00:17",
    "text": "reduces the odds of like flow control blockage I you know I think I think there are some considerations in the draft about that as well but I\u0027d have to reread it but the idea is just that there\u0027s not like normative language like like you must read transmitters like it does I think give you some suggestions like for at a loss probe it says you should try to retrain you should try to send new data versus like retransmissions and the reason for that of course is that a loss probes are very likely to be spurious in practice yeah so I\u0027ve actually in covered most of what I was going to say there yeah the the point about new information verse old retransmissions of stuff is a question that will be informed by priorities for instance general add that there\u0027s there\u0027s also the discussion we had earlier before when the draft was named early on about the possibility of later on incorporating a partial reliability and so this was really more about detection than about actually the cover II so the the draft explicitly talks about detecting losses not about actually transmitting maybe the drafts can say that why it doesn\u0027t do that because it\u0027s so sorry I\u0027m just I\u0027m making the same so things you say at the microphone repeatedly should probably go in the draft no it\u0027s so this is actually a I mean I don\u0027t I don\u0027t know if you want to mention partial reliability in the draft yet I mean our Charter mentions that right as something that we might do you extend and so that you can say that that that the structure of the document and especially if we\u0027re talking about appendices that are explaining taury that we can decide to take out later or not that\u0027s that\u0027s pretty cheap for us to do so enough yes so now let\u0027s let\u0027s move on to Jenna\u0027s migration discussion sure I\u0027m reading sorry they said Jenna\u0027s migration yes it\u0027s a magazine or a no I\u0027m not grading and just before we start anyone else need to sign the blue sheet hands up okay I\u0027ll come around while Jonna talks oh actually come on after Johnny talks go on Chyna well thank you for being here I\u0027m gonna discuss connection migration as it is in the draft and sort of where we want to go with this in the in changing the text in the draft and sort of moving forward with mechanisms that are more resilient that are stronger and more useful we aren\u0027t trying I\u0027m not trying to nail down the all the details in this discussion this is really a higher-level "
  },
  {
    "startTime": "01:03:17",
    "text": "discussion this is meant to get feedback from the community about direction and about principles so to the extent that I\u0027ve been able to I\u0027ve tried to pull some principles out if you think there are others that you you think should be considered or if you think these principles are wrong this would be a good time to talk about them because we expect to continue working on this and this is initial an initial sort of sense of the direction that we are heading in next slide so the behavior that\u0027s specified in the current draft is as follows when a client I will say client instead of peer because really we are talking about the client-server case and and even though the the slides here will say here what I\u0027m going to limit the conversation to for now at least is when the client is moving and the server stationary when a client moves from one addressed one of them it basically sends data over the new address the observes a packet arrived from a new address on the same connection and it sends subsequent packets to this new address this is effectively what I\u0027ll call latching behavior where the server latches to a new peer address the server limits the data that it sends to this new address until it can verify it can validate that the address is in fact owned by the client and it uses a ping-pong message to it sends a ping and then receives a response back from the upon frame back from the client to validate this new address this is the basic mechanism that we have right now this of course assumes that the there\u0027s only one address available at any given time in the client this works well for a couple of models it works well basically when you\u0027ve lost connectivity on one network and you get connectivity and this is the make after break a situation it also works well for inadvertent migrations or it works well for not rebinding where the old address is basically gone completely the problem with this approach of course is that it allows for some it it keeps you from being able to do proactive migration when you have multiple addresses available multiple networks available at the client and it also is actually there\u0027s there\u0027s all you need is one spoofed address one spoof packet to go from the client to the server and the server latches onto it immediately and then tries to validate it it doesn\u0027t try to verify the address first before starting to use it so this model obviously has issues and I\u0027m going to try and propose some ways forward next slide so in practice multiple addresses are often available and I\u0027m gonna use this as a way to think about the solutions that we want to build "
  },
  {
    "startTime": "01:06:17",
    "text": "specifically let\u0027s just go with cell and Wi-Fi because that\u0027s the most common use case at the moment and that\u0027s the most common case that we expect to get used in the short term at least and in in some cases definitely in this case clients tend to have a preference they tend to have a local policy that says you prefer Wi-Fi over sell this is common of all the platforms I know of but in general it\u0027s possible and it\u0027s likely that the client will have a preference for a particular network even when two are available so in that world when migration happens with with with multiple addresses in this world I\u0027ll draw two scenarios and these are again examples scenarios but these capture a family of cases the first one is when a mobile client for instance connects to Wi-Fi this is when the mobile client is already on using cellular data and has migrated into Wi-Fi so this is you walking into your house or walking into your office from outside for instance or walking into a place where you have Wi-Fi access and the and the mobile client only has Wi-Fi available what you want to do is to migrate existing connections that are running over cell over to Wi-Fi because there\u0027s a preference for Wi-Fi but you only want to do this if Wi-Fi is actually you can actually reach the peer via Wi-Fi for instance if you have Wi-Fi connectivity but if there\u0027s UDP blockage or god forbid quick blockage that actually happens on the Wi-Fi network then you won\u0027t be able to speak to the peer over this and you don\u0027t want to discontinue using cellular under these conditions so Wi-Fi is a preference but you want to continue using cell if Wi-Fi is in fact not usable for you for this connection the second use case is when Wi-Fi quality degrades through the second scenario at all the this is the infamous parking lot problem this is when you have a phone and you are walking out from again your office or your home and you\u0027re walking into the parking lot and you are trying to do some work on the phone or you\u0027re trying to look up directions and you\u0027re walking out of the parking lot which means Wi-Fi quality is degrading but your phone will not let go of Wi-Fi and this is platform decisions that are generally Universal platforms operating systems do not they will they make conservative decisions about when to drop Wi-Fi because again like I said Wi-Fi is a platform it bug which means you don\u0027t want to drop Wi-Fi unless it\u0027s really really really gone so they hold on to Wi-Fi for dear life where your cell signal could be strong and powerful and absolutely wonderful but you have no connectivity effectively because Wi-Fi is really really weak and this often lasts for Allah for a long period of time in this condition under these conditions you want to be able to migrate existing connections from Wi-Fi to cell again this is given that the client and the application have privileges to do so but because of the "
  },
  {
    "startTime": "01:09:18",
    "text": "preference for Wi-Fi you want to be able to migrate back to it if Wi-Fi in fact gets better so this is if you were using Wi-Fi and return on the microwave and Wi-Fi blacks out for like two seconds you want to come back to Wi-Fi when that network is back so these are the two scenarios and next slide they expose this need that you want to be able to probe in addition to simply send data currently as I said this all we have is a mechanism to latch on to a new network latch on to a new path and H on to a new address and send all data over that path but really what we would like here is the ability to send a probe in addition to sending data so you are sending data over a path that you know and you love and you want to try a new path for whatever reason and you send a probe packet and you then respond to it so that\u0027s sort of one of the principles here is that we want to be able to make a probing and latching separable events and that\u0027s something I\u0027m going to be working with on the on the next one what this means is that appear when it receives so this is not only when I offer for an endpoint to send a pro packet in addition to data packets but when a when appear in this case as I said with planned migration the server receives a pro packet it is not going to latch on to that new address it will you want it to simply respond to it and continue sending to the old address next slide chatter a quick question of will be probing in a lot of the cases in devices which combine cellular and Wi-Fi interfaces when you have a Wi-Fi interface the data channel is not available on the cellular interface or an existing connection and so in those cases how would you craft a probe such that it causes the data channel to actually come up oh you mean the senator cellular network is not in fact up well your network you have signal and you\u0027re attached but there\u0027s no data channel right so you so yeah and so you you may have a situation here where in order to cause the data channel to come up you you may be reaching much further into the OS stack than you think you are at the transport itself may not be able to do that yes on what the knobs are and in like certainly in in in Android six yeah you couldn\u0027t do that at all I completely agree with the so so this is why I sort of alluded to it but I didn\u0027t get into it which is I said that I am assuming that the client app has the right travel atures what I meant is that the client app has to be willing to pull up the cellular network when it needs to do it okay okay so I don\u0027t think we should rattle on it but you and I should talk offline about how this this works in in Android and a little bit more detail before you leave the mic do you think this is something that is a is a "
  },
  {
    "startTime": "01:12:19",
    "text": "protocol spec issue or an implementation issue because I think of it as a protocol spec issue I\u0027m sorry an implementation issue I think it\u0027s it\u0027s definitely an implementation issue but I think what we need to be cautious about here is when we say that we want to probe an interface the existence of the radio and the fact that radio has a connection to the network does not by itself indicate that there\u0027s a path absolutely right and so when we talk about probing in order to to create but the probing by itself in some cases will not instantiate this alternative network even if you have these other conditions and so what what worries me about that is if you actually did want to do make before break you actually need a facility from the OS that that says hey I need a data channel for this which may mean you mean you may actually have to change some OS level from that currently says hey I\u0027m going to prefer Wi-Fi over cellular because I\u0027m I\u0027m data conserving in order to make these probes actually work in practice okay thank you I think that that might actually warrant some text when you\u0027re writing this up Thank You Tommy Pali Apple just to speak from kind of by our implementation side not on the Android side yeah I think this would work just fine I think one of the benefits here of quick being often implemented in user space is that there\u0027s a little bit more ability to play with knobs and poke things like getting the radio up that has maybe been traditionally harder within a TCP stack within the kernel to interact with the cellular interface that way oftentimes what we will do when we\u0027re doing path evaluation is you essentially you can have your path that\u0027s in a not completely available but not ready State and so you would see that and if then quick decided you wanted to probe a would have to essentially kick that radio wait for it to come up and then be able to send the probe so maybe explaining that there is this transitory state that may be involved in the wait may want to dial a radio because that also applies for things like if we want to get into like VPNs and being able to be mobile across virtual interfaces sometimes that those also need to get kicked so yeah mr. Dawkins I\u0027m not quite sure what ahead I\u0027m wearing but let me say it you could tell me which one I should have been wearing I\u0027m asking a question that I think is about 90% rotation from Tears question which is how do you how stable do you think the ordering your preferences would be is that something would be like a natural law or if it\u0027s not if it\u0027s not a natural law are you thinking you know is there anything we need to say about the way that somebody somewhere can express those preferences you don\u0027t have to read whole now I just needed to ask um my sense is that also falls in the realm of implementation this is implementation specific what I think we may want to do here is make sure that we we talk about interfaces as having more addresses or having "
  },
  {
    "startTime": "01:15:20",
    "text": "preferences but not actually talking about how this preferences may change yeah this does seem like an implementation issue I think what you\u0027re trying to say here is that when additional interfaces are available like you know that there is layer three connectivity is when you probe versus saying that you explicitly require that quick be able to kick up the interface so it could be a reactive behavior versus proactive depending on the system policy which is this quick dictating when it brings up and tear is not an interface because you could for example kick the network we could bring the interface up and assume that you have sent the probe and everything is good but later when you kick the interface again the addressing information may have changed so just the fact that your probe may not survive so so you make an interesting point and I did think about that so the what you\u0027re talking about is whether there should be you as you mentioned we should proactively probe and keep paths around for fast switchover to or whether we should kick a path and send a probe only when we are actually experiencing degradation or failure or whatever have you the SC DB model for this was very much negotiate the paths and keep them and and sort of you know switch to it when you have it right but I am deliberately not getting into that but but I think that\u0027s that may warrant discussion as we write this text out air Klein Android I\u0027m not quite sure what Ted\u0027s Ted\u0027s point was I do think this is a implementation issue but I also think you should we should not really necessarily speak in terms of interfaces but addresses because everything here should work identically for rotating the connection across multiple ipv6 privacy addresses on the same interface point taken I completely agree in fact I\u0027ll just take this moment with this this this moment note that I may have used network address interfaces sort of interchangeably in this presentation because of the flow of text in my head but when we actually write this up I agree with you that we should use addresses you know the relationship between addresses and interfaces and passes something that operating systems what we\u0027ll have for any systems in particular like have varying notions of understood Tommy Polly Apple I just want to reiterate I think you agree with this just say that like the document should be fairly agnostic to what the system policy is and should be described the mechanisms but both in terms of what preferences we have that\u0027s definitely going to be determined by the system other properties but also the aggressiveness of switching over I mean for example when we have preferences right now for doing MP TCP we\u0027ve actually exposed in kind of higher-level api\u0027s does the application have a preference to do essentially a failover mode or does it want to have like "
  },
  {
    "startTime": "01:18:21",
    "text": "interactive mode in which you kind of keep things up so both should be possible here this relates to some of the work that we\u0027re doing in taps about how do you specify application preference for your resilience on this type of link so being compatible that would be good that\u0027s actually very useful feedback thank you all right moving along this is the the moving on from the latching and the and the lashing inseparable from data in this example at least you were talking about the mobile client being able to decide when to use Wi-Fi when to use this certainly seem tends to be the case in for Wi-Fi and cell where the client is very clearly in charge of deciding whether it\u0027s okay to use cellular cell for this particular request for this particular stream for this particular connection or not and even if cellular data is available the client may not want to use it for this particular transaction not for the for this particular stream and that\u0027s something that you want the client to be able to decide this is a policy decision as Tongass pointing out based on various preferences the policy decision can play out in a number of ways but you want this to be a client local decision on the flip side the sender is usually the one that has the the best idea of what network quality is to the receiver and in this case if you think about the server as being the sender and the client as being the receiver then the server has the best picture of what network quality is so there\u0027s a bit of a tension here but I think that the my my sense is that what we really want is to ensure that the policy decision is enforced and when we are able to we allow for the performance argument to happen so the principles is the principle that came out which is the principle that came out of this phony was that we want interface I\u0027ll use interface here again instead of address but I just use is a local policy decision at the client and when it\u0027s possible we want the mechanism to support the server\u0027s ability to choose so this could be useful in a case where the client says I don\u0027t care which interface or which network is used they are both equally good to me and once you tell the server that you can use them at any which point you want that\u0027s something that we may want to offer as a freedom in the mechanisms that we build next slide so here\u0027s a strawman with sort of with bearing in mind these two principles and the discussion that that we had in the slide so far the same two scenarios that I "
  },
  {
    "startTime": "01:21:22",
    "text": "used at the beginning I\u0027ll walk through them I will walk through particular way of doing them with these principles in mind and and the details of obviously can change as we go through it but this is a straw man when the mobile client connects to Wi-Fi which is when your mobile a client is coming from silver to Wi-Fi it finds Wi-Fi as a network that\u0027s available sends a pro packet over it and continue sending data over the cellular network the server receives this probe and sends an ACK of it to the source address of the probe basically what we want is for the server to return respond to the probe over the cellular network ah sorry over the Wi-Fi network but we want the server to keep sending data over the cellular network when the client receives confirmation that this path in fact works the client switches to you sending data over the Wi-Fi network and the server simply responds to that data by latching at this point did you have question on this Martin what do you want me to go through the rest of it so I wanted to get through the example to Tommy\u0027s point earlier I think this is just one of the many approaches you might take to to doing this right so the example that we have in the in this sort of what\u0027s documented right now and then in the in the draft is a potential policy that someone could apply here which is Oh Wi-Fi is available drop the cellular go straight to the Wi-Fi its abrupt it breaks things it\u0027s going to take some while at some time before things get working this is a reasonable policy also if you\u0027re actually concerned about throughput during this process this doesn\u0027t allow you necessarily to open the Seawind on the new path particularly well and so you might leave your cellular can be their tendons so this particular design assuming that you reset your congestion controller and for the the new network and new path won\u0027t allow you to have the same Seawind that you previously had so you won\u0027t necessarily get the same sort of throughput that you would have had on the cellular connections so it is possible that someone keeps the cellular connection open for a little longer just so that the Wi-Fi sea wind can come open I think all of these things are possible so I think Lee just sort of put that out there hi Johnny can um what\u0027s your throttle offer for this design my Ted model for this design I do not well I was [Music] spoofing shouldn\u0027t cause the stare are two things in there one you didn\u0027t want the server to start sending to an "
  },
  {
    "startTime": "01:24:22",
    "text": "arbitrary IP address yes because some clients put somebody else\u0027s IP address and now that that client that could be the client or that could be a third party attacker so if a third party wrecker sends an arbitrary packet with the with a spoon type eh shouldn\u0027t go the server shouldn\u0027t start lashing and sending somewhere else similarly the client wants to drown somebody else and data even want a DOS attack possible on an amplification attack possible with this mechanism okay so I\u0027m not following I guess step 4 um ah which is the server receives data back at over life and not just one so the idea is supposed to be I believe that so your claim is the clients not going to cut over to Wi-Fi until you receive the acknowledgment of the probe correct and so the transmission of data over Wi-Fi is implicit round-trip demonstration yeah I think I see what you\u0027re going well I guess a bit good there okay well then maybe maybe you felt its problem clearly um yes please so the the the probe here is an explicit return routed already check with entropy on it so the server is going to send a probe over Wi-Fi it\u0027s over the new addresses at the Wi-Fi and so the server\u0027s going to probe to so this is actually so this is actually no server doesn\u0027t that\u0027s related no the server doesn\u0027t in this case so you haven\u0027t you haven\u0027t put that in the example and I think that\u0027s important to add yeah so this is so yes I think I think what you\u0027re pointing out is that the Seventeen\u0027s to validate that the client is in fact legit yes I guess I guess I\u0027m I\u0027m trying to understand what it is what characteristics forgetting at that mechanism yes what what is it you believe that an attacker would give him capability to be able to do this in particular like if I have momentary access to the network can I divert you in another network cause things actually be torn down for instance yes and so well that\u0027s one thing you might want to do but I mean so it\u0027s like this is all you have here right if I have if I have even if I have if I have essentially access to if I can basically get one packet out of the why yeah well this is all I\u0027m gonna hang on hey don\u0027t have a conversation like this I don\u0027t even hear you others certainly can\u0027t ask a threat model not about the about the design right so so I\u0027ll that\u0027s that\u0027s a valid point I I think that\u0027s I miss saying here that the server needs to validate the client as well and that\u0027s something that we want to do not at the point of the the probing packet this is this is going to end up being actually a different type of packet it\u0027s not gonna be a simple ping pong frame and I\u0027ll talk about that in a moment but but yeah at the moment let\u0027s just talk about this as a ping frame with random bytes in it and that\u0027s fine but we need some more constraints on it uh Saturday "
  },
  {
    "startTime": "01:27:24",
    "text": "I got a when Martin was talking earlier because he was trying to point out to you that the current make after break model may be a policy of the of the in system as one of the potential policies but I would like to point out that one of the things the the first mechanism was designed to handle was not rebinding yes right and so that that\u0027s a it\u0027s not really a policy be in session but that will continue to happen in the presence of this other mechanism and so a really basic question we have that\u0027s whether we\u0027re gonna try and and make the mechanisms for confirming when you\u0027ve seen in a tree binding style response and one of these other migration with multiple addresses the same response or not I I think the simplest thing is is is to say no they\u0027re they\u0027re not but the most elegant thing is to say yes they are so I think we probably need some discussion on where we fall on that that\u0027s a good point since we have been speaking before about this retransmission draft and do you have notions that you should be very since I want to see a new different RTT but you might be more conservative on your aggressiveness of retransmissions wait can you I didn\u0027t follow the question you have a we had a reasonably aggressive schedule for retransmitting packets if you\u0027re switching interface is you\u0027re going to see potentially div quite different RT T\u0027s which may make you make reach stuff retransmits stuff even but this is since this is a local policy decision I as a sender know that I\u0027m going to change interfaces where I may experience different are two T\u0027s which means since I know this I\u0027m trying something new here maybe I shouldn\u0027t should be reconsidering my retransmission schedule if I\u0027m trying to figure out whether something got lost or not yes I mean the shortens I talked about this in the next IV this is this you know I don\u0027t get into the details of how to fix it but absolutely this is going to interact with loss recovery in in a couple of interesting ways and they\u0027re gonna have to walk through that so regarding the threat model so you said the server needs to validate the address right so I\u0027m wondering if we really need a probe or whether the client could just send its set of source addresses that it could use potentially as an in the Indian Creek paper so that\u0027s a I\u0027m asking like is there well any value to the probe other than validating them yes there is and the value is basically that the client will actually know what it\u0027s because it\u0027s packet goes through an ad that translates the IP and the port number and some games okay so you need inbound you\u0027re not in band you need explicit signaling Tommy poly Apple yeah I agree with that point on the point so what we\u0027re looking at the threat model and other things just I wanted to bring up a suggestion of another prior art to look at in this area for an encrypted "
  },
  {
    "startTime": "01:30:26",
    "text": "protocol that goes over UDP that it\u0027s mobile between interfaces that we\u0027ve already analyzed which is mobike for Ike v2 so mobile I can so they can essentially do this for an i accession and so that is dealing with encrypted packets there\u0027s explicit handling of NAT rebinding in this so when we\u0027re looking kind of the security analysis let\u0027s just look at the same considerations that were done in those documents and they may be really good to just bring over here that\u0027s a great suggestion Thank You Xavier mojo I was thinking about possible consequences for other applications on the same device do you see the quick application as being able to activate an interface or only as I would say as slave applications that would react accordingly for example if the two interfaces are already in activating so this again sounds like an implementation question to me about exactly how these mechanisms are in fact used the goal here is to identify principles and sort of higher order questions that we can use to design mechanisms that applications can then use but I think work to correct me if I\u0027m wrong but it sounds to me like you\u0027re what you\u0027re asking is a very specific use case question of implementations how they might actually use multiple interfaces yes but it was [Music] do you think that quick will embed some function in order to activate or not an interface that is definitely an implementation API question I think that that is probably not something that we\u0027re going to be able to speak to in direct terms here in this in this document in eNOS so Martin Thompson I got in line so that you would get to the next slide I\u0027ll wait here until he you move to the next slide I haven\u0027t even finished this slide yet you haven\u0027t finished this slide yet no no is there anything any new information we\u0027re gonna get from that Russian but I\u0027d like to finish the slide and find out if this discussion I\u0027m sorry let me do or my definition is finally finished yeah okay let me try to do that so the first half I just I walked over what what happens on a mobile client connects to Wi-Fi from from cellular if you remember I also mentioned the parking-lot problem where the user\u0027s walking away from Wi-Fi into seller and the Wi-Fi network is degrading and what you want to be able to what you want to do here is what in in the case that it client app is aggressively move data over to to sell move data over to sell but keep sending probes over Wi-Fi when Wi-Fi comes back up switched the data back to due to Wi-Fi because Wi-Fi is again the preferred network this is exactly a CD piece failover model by the way but that\u0027s that\u0027s basically what this covers "
  },
  {
    "startTime": "01:33:28",
    "text": "next slide okay but I I\u0027m gonna notice under duress this is explicit head-of-line blocking which is just trolling us so this question is not exactly tied to the specific slide but it\u0027s probably worth saying in general so where does connection migration fit into the role into the work of the working group like is this a focus area is it in scope for version one you know do we need to talk about it now at all I believe it\u0027s in scope of illusion one but I don\u0027t want to be the one to say this well certainly we have to survive a net rebinding yes beyond that I think that\u0027s the discussion we need to have yeah well before we conclude this discussion let\u0027s make sure we up level yeah I\u0027m gonna come back to make Wow okay Rick Taylor I I think this leveling point I I missed half the conversation there but I think is I think we\u0027re disappearing quite deep into the weeds here I think the role of quick is to understand that it may have multiple addresses and bearers may come and go but how that happens is not quick responsibility quick should be able to cope with this occurring yes and how that happens is totally beyond scope yes just the mechanism to react that great so just to ground that discussion a little bit this is the part of our charter that discusses migration bigger hello and I noticed the word extend yeah so did he want to go to Desdemona finish no it\u0027s just wanted to get that it so that it doesn\u0027t cause more confusion let\u0027s go back to your presentation sorry can we leave can we go back to the Charter real quick sure so I wanted to point out that we\u0027re um we\u0027re really creeping into designing a multipath transport protocol here um like and I want to make sure we don\u0027t do that accidentally because so all of the all of the policies that I\u0027ve seen here like there\u0027s only one little tiny tweak that you have to make from okay now I have to up or I have three up or I have n in things up because I\u0027m using them for probing and it\u0027s a line of code to send data over that it\u0027s not a tiny thing it\u0027s on one line of code the big difference here and this is something sorry I don\u0027t understand why it isn\u0027t so so let me point out the big difference "
  },
  {
    "startTime": "01:36:28",
    "text": "unless los wants to jump in to say something no I actually want to well echo Brian\u0027s point us and said so um some of the things you need to do to handle this case are also things you need to do for multi-part it would be awful if the things we did from other paths were completely different from what Laurie said what I\u0027m trying to say much better so let me let me let me articulate this perhaps in a slightly different way multipath uses multiple addresses simultaneously for sending data for sending everything what that means is that the sender has to maintain multiple congestion control contexts multiple loss recovery contexts multiple everything congested when you have multipath connection migration is always going to be a special case of it the question here is how do you get connection migration without having to implement the entire giant multi path thing and it\u0027s entirely possible you have to be able to do so this is again for people who are familiar with how a CDP did things there was there was a failover thing in a city and then there was the multi-part thing in a CDP and this is very much that divided the feel of it is incredibly useful I\u0027m actually gonna argue for having this in v1 because I believe that we want to have this as a fundamental property of the protocol that we use but my name is Yoshi from fix the microphone first and then start speaking so this may be similar to the previous comment but no I would like to so this is very similar to what is VP is doing in for the address management so I\u0027d like to understand what\u0027s the difference between the SCT address management and quick and then if there is a difference I don\u0027t under I\u0027ve direct understand why it\u0027s different and if you could clarify this point that would be great so the one difference is that a CDP has exactly I can\u0027t remember who asked this question but somebody else Praveen has this question of if a client can actually expose all of its addresses to the other side and the other side uses it whenever it wants that\u0027s the Sadd model the quick model is you have to send a packet over an address over an interface over a network for the other side to be able to use it but what the other side is behind a fire I\u0027m sorry can you answer again what\u0027s happen if the other side is behind a firewall are you to the send a packet Pro packet to the iodine right Andy your probe packet may not get through and you get the packet doesn\u0027t get through you don\u0027t migrate to that path so bear in mind that connection migration only kicks in when you already have a connection that\u0027s roaming so this is not applicable during handshake I actually had a bullet I to move it because I didn\u0027t want to proactively say this and then get everybody at the mic but yes we don\u0027t want to support this during handshake this is going to be after the "
  },
  {
    "startTime": "01:39:29",
    "text": "handshake is completed which means that you have a running connection difference I think you would be great if you could I defy this point in the drug that\u0027s my feeling I\u0027m waiting for our chairs to come to some sort of conclusion I it seemed like he wanted to say something before I\u0027m gonna do no we\u0027re actually talking on topic and not just you know okay so um yeah I\u0027ll go to get tickets whoever it was that caused us to uplevel that\u0027s great um given that we\u0027re trying to be aggressive about these sorts of things I\u0027m inclined not to do this despite the fact that I actually think that Jonah\u0027s design here is fundamentally correct and it\u0027s something that would possibly work really well and I have some great advantages the probe packet in there and the that notion actually kind of exists already in the current design it\u0027s just not very good it\u0027s kind of and and kind of may just be enough for us right now well are you talking about not doing this being what the blotter in the not defining any special mechanisms to allow for concurrent use of multiple paths and explicit probing but refined they are seeing existing mechanisms that we have so let me rephrase that Andy tell me if I got you right are you saying that we should not support make before break and not explicitly yes which that means when support me before break well so we could in fact support make before break with the design as documented it is just suboptimal no that\u0027s a big I mean yes it\u0027s it\u0027s a make after break design no you don\u0027t use the old address so if you actually sit down and understand the design go through in detail you can send a probe on a separate path and sending an additional packet on the original path will cause the other path to latch but only only momentarily so you\u0027ll get packets traversing both paths for for a period of time it\u0027s not good it\u0027s not as good as this but it means that we we don\u0027t get into all of the details of this and spend time on that and we can spend our time maybe productively doing say had a compression frenzy but you saw one Nate the thing we talked about is actually I think when the Charter text was written um there was an assumption that the working group on the side would have already spent some time talking about multipathing and multihoming but we haven\u0027t had that time and so the idea was where we would have thought about this already when we would break off the stuff this and it stood well enough and stick it here but I don\u0027t think we have "
  },
  {
    "startTime": "01:42:30",
    "text": "done that and I think you\u0027re getting to the point that um do we want to do this before v1 or or what\u0027s the minimal thing we can do before we one that lets us do something that isn\u0027t gonna be terrible later on so I\u0027d like to speak to that if again they placed it I don\u0027t think that the mechanism that specified in the draft is it\u0027s not suboptimal I think it\u0027s incomplete that\u0027s your problem if you try to implement it you\u0027re going to find that it\u0027s incomplete and I see Tommy nodding his head in the back there it\u0027s complete we need some of these things to actually make that work I understand your point that you can yes the latching point I\u0027ll grant but you need to probe the alternate path you need to actually be able to explicitly send a pro packet that and you need to be able to deal with the the consequences of sending a packet there and coming back because you don\u0027t want the congestion controller to get reset twice that\u0027s solving a draft that is no I know so but so you have to lay let\u0027s start huh the packet number for the probe packet is going to be part of your same sequence base so these are the details that you\u0027re gonna still have to to work out and once you work out the details this is what you get so the consequence of that is that we spent a lot of time and on precisely that and if we don\u0027t explicitly commit to doing Mike before break then we don\u0027t have to do that and that\u0027s my point so that realistically mean that we would support natural binding but no migration effectively migration Bharani in the in the break before mindset which is you know in practice it\u0027s not gonna get used right but if I can just interject here you know I think we need to have an explicit discussion about what\u0027s in version 1 what are the requirements for version 1 the Charter says that migration as well as multipath or extensions it says extend migration as well well it\u0027s a little fuzzy it\u0027s fuzzy on migration rightly so we should resolve it some why should resolve that and then we need to discover we need to find out how this affects our invariance I think those are the two things there on the critical path right so that that was why I was suggesting and you\u0027re suggesting a way to do them tonight and and we have some migration in there who\u0027s just not I totally agree with Jana it\u0027s not good enough but hi so well I think that protocol has a really different from Allah cheering and it is something that is already been deployed especially for VPN so I think using this alternate pass is a this is already something we have experience in and it\u0027s something doable and I kind of support the support having this alternate that "
  },
  {
    "startTime": "01:45:31",
    "text": "we need two probing or not can be solved Tommy poly Apple so Martin i i disagree about kind of the approach on this so absolutely the full multipath you said this is not full multipath there\u0027s a lot more there I get that being out of v1 I think anyone who is interested in multi paths should review this to make sure it is not conflicting I believe it is not this is the control part of multipath but nothing more the if we can do a kludgy version of handing over between interfaces today I don\u0027t believe we\u0027re going to implement it we\u0027ll probably make you know on the platform to make sure it\u0027s disabled and then we\u0027ll essentially be shipping a protocol that has an ability that\u0027s kind of a dead thing that we\u0027ll need to get revised and updated this I don\u0027t think adds that much complexity I think it is again well understood in other protocols it\u0027s a common model and if we\u0027re going to put anything in let\u0027s just do this essentially the existing model is there like the only argument for it right now it seems to be is just inertia that it was already written and it hadn\u0027t been written this way originally it wouldn\u0027t be a problem so what what is actually beneficial other than just not wanting to take the new text for this okay so I\u0027m gonna cut the line the queue at this point because we are a little time constrained and again just to reiterate you know from from my perspective at least I\u0027m listening for why we need to do this in version one for for the use cases we\u0027ve talked about or why it\u0027s something that needs to be the invariance that that\u0027s what I\u0027m still listening here not generally is this good or not can I quickly or does the ingredients question sure I don\u0027t think this changes the ingredients okay so this is something that we could introduce in v2 safely yeah yes okay and if someone disagrees with that I\u0027d like to hear about it yeah so Thompson if we\u0027re gonna spend this long arguing about whether we do it we should probably just argue about how to do it correctly my my point was that we can perhaps save some effort in time and if it seems like people are interested in the feature to the extent that we\u0027re going to spend more time fending off the requests for the feature than we are in actually implementing the feature then I\u0027m perfectly okay with implementing the feature I was just raising the raising the possibility you could have entered I think this is an important use case which will make deployment much easier and more beneficial and the other point is this is like halfway going to Mahdi pass right so if we add this right now in the first version it will be much easier to design magic pass later instead of redesigning a lot of things again so if you just think about how would you design quick with multi pass in your head to edit later this would be the right direction to go and one completely different point "
  },
  {
    "startTime": "01:48:32",
    "text": "because there was a comment about middleboxes and nets say this is something else who might want to add like requesting the other side to send you a probe maybe sin like turn the other side simply sent me a probe to this IP address not sure just proposal yeah Brian Ford EPFL um just to add to the you know migration versus multipath see I\u0027m I\u0027m concerned I feel like a lot of both mechanism stuff and policy stuff feels like it\u0027s getting kind of lumped together here at least it I don\u0027t see the distinction being very clear either here or in the current draft document I feel like the mechanism needed for both migration and multi-cat path should be practically the same you know packet by the you know packet formats methods of you know being able to probe figure out if you have and you know can potentially use particular addresses versus the policy and you know that so the mechanism should be identical across you know migration and multipath whereas the main differences in policy right you know a migration is a policy that you know is a type of multipath policy where I just decide to use one path at a time and I have certain ways of deciding when to when another path is more attractive and switch over to that completely right so I also see but and I think you\u0027re right that you know a migration type policy can probably be done more simply than a full-blown multi path policy and that\u0027s a good intermediate step to have but then there\u0027s also going to be like you know I don\u0027t want any policy at all like somebody else mentioned you know kind of just have the dead thing when we don\u0027t want that at all and and so so I guess you know kind of to summarize my point I think the most important thing is is from the very start be able to distinguish and express that the distinction between these levels of mekinese and policy very clearly from the start I think is very important for all the necessary mechanisms for migration and multipath together to be in 1.0 hopefully or you know kind of at least not impeded at all but maybe both the migration and the multipath policy stuff really should be you know separated clean and separated out extension or something like that that\u0027s just how I see it so let me address that very very quickly I what you said there that connection migration is simply a policy that is the the view that you can take when you have multipath so when you have multipath you can say that you know connection migration is one particular instance or one particular special case of multipath what what I\u0027m trying to do here is to not go there basically how can we make connection migration a special case of single path "
  },
  {
    "startTime": "01:51:32",
    "text": "is what I\u0027m trying to do specifically what I mean is what exceptions can you make to allow for sending one packet on the side okay other than so I I see your desire but my big concern with that line of thinking is that you\u0027re gonna get almost all you know you\u0027re gonna get a large fraction of the complexity of multipath and I\u0027m already seeing that like you know in the draft you know kind of the migration part of the draft is already huge you know there\u0027s a lot of text there and you know as you say it\u0027s still very incomplete even just to get migration you know that you know especially the policy stuff that\u0027s gonna be you know a huge amount of of complexity in terms of specification if not implementation already you know I I\u0027m not sure how far you know along the way to multipath that is or isn\u0027t but it\u0027s already a lot of complexity so does an interesting distinction that he just made which is complexity in specification was the complexity in implementation to some degree that\u0027s it\u0027s we should try to reduce complexity in specification but we definitely do not want complexity in implementations when you\u0027re doing multipath like I said you will want to instantiate multiple congestion control we went to a condition controllers multiple lost every context and so on and you do not need that of us so the question is what exceptions can be makin can we live but they\u0027re not gonna be perfect but can we do something that\u0027s a basic extension and like I said if you don\u0027t want to use a different law security context what can you do simply it might be suboptimal but can we love but that is the question that I\u0027m trying to answer yeah okay under a pop of Microsoft so observing that the UDP base transport for example is likely to work on some interfaces and not on others it will it be useful would it be more useful to define migration such that it works across transports so it\u0027s not then a quick specific but can for example you know migrate from quick to TCP right no and if not thought about charter inspect Google after hearing Martin\u0027s comments and and reading the section fairly recently I think the current section is it probably was intended to potentially accommodate some of the things yes here okay anyway I guess my point and I think I think we could take on a small amount of work to make some minor modifications the current text and make this possible without like you know overburdening like implementers and and and that would be totally sufficient and I would support doing that now rather than later because "
  },
  {
    "startTime": "01:54:32",
    "text": "you know I basically I think this is like super useful so I mean there are other alternatives like peers can you know how to really negotiate this like mechanism or this policies like available but it\u0027s a bit of hassle and and I\u0027ve asked Martin go to the mic because I want the editors to understand what our path forward is here you know we leave the meeting so you have a question or yeah sometimes I\u0027m not as I said I\u0027m not I\u0027m not opposed to doing something better here because obviously what what is there is is not enough to address these sorts of use cases really well even if maybe you could be hacked together but I think I\u0027d like to see more of a fully worked proposal for that because the information you provide on your slides is not enough information for me to decide that whether this is right or not and I\u0027m particularly concerned about the use of new connection IDs and the packet number gaps and those sorts of things in this context because they\u0027re probe is going to want to have a different connection ID and a different set of effectively as a separate packet number space and that right but the problem the problem there is that if you flip-flop between them in our current design we have packet number gaps every time you flip flop and I don\u0027t think that\u0027s going to work and so those details and interactions with lost recovery the consequences of the fact that you have different path delays and the loss recovery treatment of these things so you\u0027ll be sending what what is logically packet number X here X plus 1 and X plus 2 and if X plus 1 is reordered with respect to X plus 2 which is highly likely the other side is going to treat it is lost immediately upon receipt of X plus 2 so and all of those things I would like to understand in a lot more detail before we do this and that is why I\u0027m concerned about the expenditure of effort so that\u0027s so it running rapidly out at fine yes um I booked the Butterworth breakout room from 12:30 to 13:30 today in case people that want to discuss this more need space um it seats 12 people so well toward 1:30 you said yes to what 12:30 to 13:30 13 so if it\u0027s not for me so reserved it if it works as somebody that would be good if it doesn\u0027t then on reserved it but I think we need more time on this than we have in this session oh really I think what I\u0027d like to suggest here is that that genre and and some people who are interested in actually solving the problem have experience with it actually go off and produce a proposal and until we see that proposal we don\u0027t discuss it anymore like we\u0027ve done with some of these other I do you know simply double the invention chain agreed so that was the intent of kicking something like that "
  },
  {
    "startTime": "01:57:32",
    "text": "off specifically there are people who have proposed multi-part designs on the list that we have basically not discussed because we didn\u0027t feel that we have time for it but at least in some people\u0027s minds this is very clear and I want to invite in or at least of two groups that have done this already make sure that they\u0027re in so let\u0027s find out Jana do you want to be on point to get a group together to discuss this I\u0027d be happy to do that if you have an interest and a background in this set an email to Jana and explain what your interest in background is and if Jana believes you would be useful addition to the group he will reply and otherwise I guess he will reply to but no you\u0027re making me seem okay so I mean it did so we can\u0027t have a discussions like 50 people know so that\u0027s that\u0027s so I think we\u0027re looking at specific for people who have experience with this type of mechanism and other protocol specifically multiple TCP or setp who have thought about or even that design for this for quick but we\u0027re not interested in people that just want to listen because we don\u0027t have space so I happy to do that I\u0027ll just say that the the text that\u0027s in the draft right now is not accidentally trying to do this it\u0027s actually deliberately trying to do this because that\u0027s the model of function migration that actually makes sense and in books but I agree that there\u0027s this potential complexity that we need to think about okay and we\u0027ll figure out after we\u0027ve talked whether this is a formal design team or just the discussion that\u0027s the questions gonna ask you offline but okay yeah so I don\u0027t think we know either yet but it seems like we need a smaller group that goes off in the corner and does something for a while and and and again I\u0027d encourage and it sounds like you\u0027re doing this but I\u0027d encourage everyone involved to keep the scope we\u0027re thinking about in mind rather than designing it for all time do you want to finish her um I don\u0027t know if there\u0027s much point getting onto the next slide yeah this is just talking about sort of issues that fall out of working on this which doesn\u0027t make sense to discuss anymore I think okay we need something for v1 right and and it would be awfully nice if that\u0027s something later on slaughtered nicely in with the full multi-part so that is the challenge right what piece can we break off that is you know not ninety percent of the full multipath because then we might as well do everything and we don\u0027t have time for that but it\u0027s a small subset but slots into I push back against that way of thinking because I do not want to think about this is a special case of multipath I think when you start doing that I don\u0027t know but there would be it would seem odd to me if we have one set of mechanisms for this and a completely different set of mechanisms for multi part that seems slightly complex sorry it sounds like you need to be involved "
  },
  {
    "startTime": "02:00:32",
    "text": "in that decision perhaps so the other thing I\u0027ll point out here is that this also there\u0027s a question of how do you support basic natural binding and and I don\u0027t think that\u0027s fully supported with the current text either because we need to be able for the server to validate the client and that\u0027s not there correct so we need some things for v1 like may not be binding and from some form of migration yes okay Thank You Jana thank you so next up we\u0027ve got a little less than a half an hour left and next up we\u0027ve got a discussion of the third implementation draft and I don\u0027t know if we\u0027re gonna hammer it out all here but it would be at least be nice to start to kick off that discussion and figure out what we want to target for Interop in Melbourne we have a full day of interrupts scheduled with that interim meeting and we may even you know like we have in the past use this this target for the next interrupt beyond that and I guess there\u0027s an assumption based and baked into that that we\u0027re done with the second implementation draft and so I\u0027d like to hear feedback especially from the employers and the peep with the Interop as to whether they think we\u0027re done with a second and we\u0027re ready to start shaping a third target for for Interop and what that might include Goa Necker and there are stickers yet again I\u0027ll put the speakers in the back I mean I think we\u0027re not done with the first implementation draft in the sense that like we\u0027re like pretty far from people I mean having a drop on all the features that you could finish it off on um but I don\u0027t think that\u0027s really useful bench benchmark for what we should do um uh I mean yeah I mean I mean there really are two things you can imagine doing right one is saying well we\u0027re gonna make a much more filled out test matrix for the from the second implementation draft and just target no new features but just fill that test matrix and the other thing you could do is you say well we\u0027re gonna target a bunch of new features but this um but the same crappy quality of like implementation testing I mean I think ordinarily I\u0027m be I\u0027m a conservative person and I would say like let\u0027s pulpitis matrix but I think that given the conversation with yesterday I think trying to get some experience with the things like any experience at all with some of the things we haven\u0027t done yet would be valuable on 0tt in particular be nice so um so I think my sense is that we should like pick out a small manageable set of new things that we think between thirteen mutation draft "
  },
  {
    "startTime": "02:03:33",
    "text": "and say that plus whatever is in you know in oh wait basically now we should do Martin Martin\u0027s got a thing right so this is the second draft right yeah yeah this is - um so did you have didn\u0027t we have a sort of do me have a bunch of crap that didn\u0027t make it on the island it was like it was like things that things things yes there we go good so if I had to like the things that I would think as I say I think CRT TV should absolutely on this list uh what else um I\u0027m sorry to get pretty sad that we don\u0027t have like like no one\u0027s really testing the gesture control um but uh huh I mean I I feel like it\u0027s pretty easy I to vertical like I hear congestion control and like get some data across the internet um so III guess I would say either of loss recovery or kaduche controller both um I mean basically BL demonstrate that you can get demonstrate that you get I mean it feels differently demonstrate that you can move concurrently a fairly large amount of data under like more or less ideal network conditions and we\u0027ve already seeing like scary stuff where people try to do this and it doesn\u0027t work um like I\u0027m not even sure I\u0027m correctly like giving our stream credit for instance um so yeah so I think those of you two things I would be inclined to think about there\u0027s still a lot left so even if we do those things Google uh yeah I agree I think zero to T is is definitely analyst and if we don\u0027t do that now that\u0027s kind of crazy and yeah I think I think so I think we we don\u0027t need to do all of loss recovery if we don\u0027t want to if we just want to like tack like now fast retransmit onto the existing like our tear stuff I think that\u0027s totally sufficient in my opinion and then I think congestion control especially with new Reno is so damn easy to implement like I mean maybe you don\u0027t get recovery right but at least have like some kind of like AMD code would be would be helpful and yeah and basically that Plus away seems fine to me lot occurred so the the goal for the third above day to drop this Melbourne write for the inner up which is not terribly far away and there\u0027s the holiday period in the middle um it\u0027s basically eight weeks - holidays so oh wait certainly I think minibar and and all that stuff I would probably add something along the lines what echo said in terms of make sure you you know do some sort of do your loss recovery properly at least I think that should be stable now and and maybe something beyond just floor control what would be nice if you know this strong interest of doing zero RTT not sure that I can deliver but that\u0027s okay it\u0027s still added if other people feel comfortable that they get it done I would be hesitant to "
  },
  {
    "startTime": "02:06:33",
    "text": "do much more than that buy it by Melbourne I think it feels like we implementations need to settle a little bit longer on this bill some that don\u0027t really have also been baked yet and I would leave it at that it is it reasonable to say that that will probably start at the interim with the third target but that will continue in London we\u0027ve done that in the past and that seems to work fairly well more in London okay Praveen yeah so zero our GT and lost korean-canadian control seem like good targets one feedback I would have is loss recovery and congestion control is not much about Interop so you know defining very strict test cases would be useful because the number of test cases here just explored because you know reordering loss delay packet delays there\u0027s like bunch of test cases the other useful thing would be that because we\u0027re going to be sitting in a room and testing this having some kind of you know software which can introduce these type of defects in the network would be extremely useful but I think we should very strictly define some test case for these because otherwise you know and this is very open-ended I will mention at the interim we\u0027re gonna be on a wireless network provided by a university that may naturally provide such opportunities but if we need to have a wired switch locally I can provide that so please ask for it so so I didn\u0027t pay Praveen to say that I wonder one of these previous events I spent some time hacking up an interrupt harness which like basically that\u0027s two patient\u0027s the same machine connect to each other and right now for it doesn\u0027t any simulation for any of this stuff but it\u0027d be easy to add anyway should packet drops or our latency introduction um so um I absolutely agree with you that we should like the script described like like rather than saying you must have lost recovery or a secure data control we say like you should be able to like successfully deliver like someone\u0027s at number a packet so there are messages of this size on a network with these failing conditions right we\u0027ve talked about these more precise tests a few times in the past and they failed to materialize so somebody needs to take a pen and write something down yeah I think that\u0027s good enough having the requirement that you are able to recover and like send a large payload with certain loss characteristics but one request would be that whatever kind of metal box were thinking about here having that a separate box versus Lubeck would be extremely useful because you know our implementation it would be nice to have a Linux box in between which is used as the default gateway where we introduced these type of characteristics I could probably put together a docker image or something like an image that a lot of lives like it it seems it doesn\u0027t matter whether that runs a little bit or not but that\u0027s a corner case I do want to point out that we probably want to have repeatability here so random losses "
  },
  {
    "startTime": "02:09:34",
    "text": "nice and easy to do but I think we actually want to be able to to mystically specify which packets are lost for direct different test cases so that you could actually repeat something which you know a little bit more work to implement but it\u0027s very much more useful right so that\u0027s something worth doing the easiest thing to do is random loss with a specified seed yes um so that lets it that lets you that less you reaper once you run into problems right um that is you have a random loser but like he\u0027s our weight affects the seed um I am NOT like I\u0027m produce a number of things but I think I\u0027m not qualified to describe but a test case would look like we\u0027ve raised lost patterns so maybe someone who really understands transport like Ian Rajanna could write that down another point on the random loss versus you know being able to determine which package it is like very very would be very useful for example to drop the handshake packets explicitly Jed\u0027s please modulate the amount of time he spent a mic based on how much want to talk about higher compression [Music] but some on Thompson since McManus isn\u0027t here I\u0027m gonna push a little bit harder on on people I think we were actually seeing people internet loss recovery now simply by virtue of the fact that they they\u0027re running their tests over the internet and they\u0027re working and congestion control I think we\u0027ll see more of us as times that time goes by I definitely want to get zero ITT and resumption in we\u0027re not going to get ahead of compression now because we simply haven\u0027t decided what it\u0027s going to be but I want to be in a position where we\u0027re doing the discussion of that\u0027s what\u0027s after this yes yeah but I want to get us to a position where we\u0027re ready to do that as quickly as possible because all the other things are out of the way and so looking at this list I think things like the path MTU discovery and and key updates or something that can live a long time without actually being implemented experience materialist shows the key updates is not something that people do but the the other parts here I think I would just move all of those things up into the list of things that we\u0027re aiming to do in in that timeframe so I think zero ICT which implies resumption I I think we should have very basic connection ID changes and and migration and I think we should ensure that by members loss recovery tests working sorry by Melbourne sure why not because it\u0027s very ambitious yeah you remember that discussion we had earlier about actually getting this thing done I agree what so but I also so let me suggest this let\u0027s try and see if we can order those so that that if you show up with the implement at the end drop and you don\u0027t have everything at least you know that you can do the first three right with everybody or with many "
  },
  {
    "startTime": "02:12:36",
    "text": "people right semi suggested ordering then is lost recovering Susan seems like a lot of people have that already oh eight I think it\u0027s the first one right well that\u0027s a deep chocolate yep let\u0027s do our white mister loss recovery okay where awaits the baseline if we\u0027re not doing our white we\u0027re not talking to each other we\u0027re doing loss recovery and then I would say zero RCT after that which means that you\u0027d have to test your resumption first which is fairly trivial most of the tailless tax will do that for you pretty pretty naturally and then I think people should be moving on to migration I don\u0027t think that taking it explicitly off the table at this point is a good idea because we need that sort of momentum and it\u0027s not actually all that much did we have stateless retry or reset in this in this list I think we had said lists we that we had yes we do okay um those probably need to be slotted into the list as well hello retro requests those sorts of things I don\u0027t know that there\u0027s much evidence of people actually doing these things yeah we\u0027ll have no detested let\u0027s pop those into the list as well probably after lost recovery and 0r TT and hello retry have in gnarly interactions so I would put one or the other I had I put them adjacent to each other I missed that Martin Duke is actually in line and I don\u0027t know how long he\u0027s been in life he was behind in okay um one thing I want to mention that so for the second version of this Martin put the wiki together and sort of helped and I would specifically want to ask for somebody who isn\u0027t an editor to do the same thing for the third implementation draft um it\u0027s probably gonna be more work than Martin had to do for the second implementation draft but because we need more detail and a bit more rigor now but but I don\u0027t want to put this on the editors um because they have other stuff to do so if you want to volunteer for this I don\u0027t know if that\u0027s what markings in the line for but if you know we\u0027d be happy to hear from you Ian spent Google I I generally agree with actually um we just said what Martin just said sorry um although I would say that I think we should keep the H to be point nine option available and not force everyone to move to the http/2 mapping given its not doesn\u0027t have header compression and it\u0027s a fair amount of extra work compared to all the other stuff I would rather see like we\u0027ll get like almost everything else done X for the mapping and then and then do the mapping later so I don\u0027t want like half you know people that come there with like hacked up terrible HTTP to mapping implementations and no zero TT like I would rather have people like have a fully formed transport and like still be doing point nine and the other thing I wanted to say is I would suggest that we moved to TLS draft 22 which I believe doesn\u0027t actually exist yet yeah because like it\u0027s it\u0027s annoying me after 11 crap out of our boring SSL team that we still have to deal with 21 and it\u0027s it\u0027s it\u0027s "
  },
  {
    "startTime": "02:15:38",
    "text": "annoying to them so if we could possibly move to 22 that would be like hugely helpful for us you repeat that if the mic just just everyone else I mean 21.7 was basically the target of like most at work on Saturday and Sunday so I think all the staffs that people are using already have some products 22 in them so pretty far a lot on that right go ahead can I got my hand to Martin dude oh sorry yes button we can\u0027t hear you and I have to press the button yeah he\u0027s speaking but yeah meet echo hello hello or it might be a microphone problem on his part Martin do you wanna try and maybe type it in a jabber and we can relate into the room all right John ago um Jenna I got I I generated Lee as well that what Martin said and I also agree with what Ian said about the HTTP do map now they should be reading the point 9 mapping I\u0027ll just say to one minor point about loss recovery that I think it\u0027s it\u0027ll be useful and perhaps important to have losses that are not just you know trying them in fact because I think we\u0027re not we\u0027re not a single performance we want to test for specific cases and being able to do that with specific packet drops and so random drops is going to be more useful Martin Duke two things I concur with the basic consensus Cruiser r2t loss recovery congestion control and still typing do we have somebody who would consider being a Stuckey to maintain this third draft wiki page and and sort of aircar and also I have some code to drop specific packets in action that I might be able to contribute oh that\u0027s excellent all right thank you occur all right so we\u0027ll just we\u0027ll create a wiki page there a third implementation target you put the general shape in there and then if you can also try and drive people to contribute some form of more specific tests and then think about what format that might take that would be fantastic I don\u0027t expect you to come up with them all do I have the chairs permission to nominate people myself to do that work and then house all in one day don\u0027t you you we will transmit all of our terrible powers to you yeah but don\u0027t don\u0027t pick the editors you can obviously not thank you very much like you\u0027re really appreciate it okay so that is the third implementation draft we\u0027ll get that up for discussion as soon as possible so people can start coding and and working on tests the last item we had on the "
  },
  {
    "startTime": "02:18:38",
    "text": "agenda and we only have ten minutes left is issue discussion and I think the issue we want to discuss before we leave the room is a roadmap forward for header compression in HTTP we had two proposals that we\u0027ve been discussing for quite some time and we seem to be moving towards convergence in Seattle and then we\u0027ve had a third proposal made which I think from from a the perspective we right now especially with our you haven\u0027t read i\u0027ve glanced at it I think that the what we want to try and do is to converge our proposal so not have additional options but move towards a single option and so I think what Lars and I need to do is to have a discussion with the editors or the authors of all those documents and figure out how we can move them forward to a single proposal for the working group any comments on that and any discussion other we want to have right now I see a thumbs up that I\u0027m transmitting to the mic I see two thumbs up Mike so Mike Bishop Mike Bishop Akamai author of one of the drafts in question so in Seattle we had asked buck and me to go and form a design team and for reasons which many of you know I have had zero time to do that so I am sorry I have not touched that my intent was to try and get some time scheduled for us to spend that up this coming week okay so hopefully we\u0027ll have some answers there I think we did get at least some reasonable takeaway from the interim in Seattle of theirs willingness to move away from each pack if we done hpx wire format if we get some benefit in return but we\u0027re not committed to that there is definitely a preference to move the complexity to the encoder and away from the decoder and keep it as dead simple as possible I think right now those are our guiding principles on how we merge so the discussions I\u0027ve had I\u0027ve heard a strong desire to for us to be able to choose a draft to adopt for head of compression in the next interim so I think we need to direct all of our efforts to making sure we\u0027re able to do that by the next interim doesn\u0027t mean that that will be the exact thing we walk out of with an RFC but we need a starting point for it yeah so Mountain Thompson I observed that most of the drafts in even the new one of similar in very many critical ways and they diverge on only a few key points but the principles that might just elucidate it should help us I\u0027ve heard people Express this week particularly in light of the discussion we had earlier in a previous session about schedule that perhaps things like delete ah no we discussed taking it off the table before but perhaps we might reconsider "
  },
  {
    "startTime": "02:21:38",
    "text": "the option and have the can reconsider the notion of just saying well deleting is actually the only really hard part in this one maybe we just take that out and put it down quietly and and move on so that\u0027s a discussion I think that we should probably have maybe now I don\u0027t know do we have the time we have eight minutes so I would say if Mike if you can work with buck and come up with a combined proposal that we can discuss in the list some in the next couple of weeks please please also include the Maitri I think share would be how if you guys are okay with that that\u0027d be fantastic yeah so I actually hope to have some meetings this week but it turns out on the other one is here so sorry I didn\u0027t catch it last I had hoped to have some of those discussions in person this week but it turns out I\u0027m the only of any of us that\u0027s here okay if there\u0027s anything we can do to facilitate what you need to do please ask and hopefully we\u0027ll have some discussions on lists we\u0027re gonna reserve a chunk of time in Melbourne to do this okay great do we have anything else we can discuss in the next six minutes I don\u0027t think so so let\u0027s call it a day thank you all very much grab a sticker on the way out there on the tables on the left and right well "
  }
]