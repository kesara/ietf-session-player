[
  {
    "startTime": "00:00:05",
    "text": "uh in the Fremont participants we can hear you remotely great and we can hear you foreign um uh we'll do a few more minutes for everybody to trickle in but uh"
  },
  {
    "startTime": "00:02:03",
    "text": "no the first session of the day sorry yes no we are we are not that busy yeah yeah um but in the meantime anybody waiting for people to trickle in does anybody want to volunteer to take notes everybody looks I said jewishly at their laptops foreign thank you good morning all right I think people are beginning to find this room in the far end of the"
  },
  {
    "startTime": "00:04:00",
    "text": "labyrinth here so foreign if anybody wants to take notes so we can get started I heard a no from the room next year next year okay make sure yes you've done it a lot uh let's see Magnus okay thank you all right so um let's uh instruction notes um the uh sessions being recorded um please uh if you're in the room please sign in to the medical light client if you can do either from the QR code on the screen or from the agenda um that gets you on the blue sheets it also lets you join the mic queue for using the virtual mic um if you're using the full client please keep audio and video off um and wear a mask except when speaking and even if you choose while speaking remote participants please keep audio and video off um unless you're actually speaking for remote participants here's the tips on how to use the Medico client I remember you need to actually enable your audio and call it on you can turn on your video if you want it's helpful but the important but you have to turn on the audio separately"
  },
  {
    "startTime": "00:06:00",
    "text": "or we'll see you about hear you which is usually not that useful um here are some links um no well you've all had to click through this to be here but just in case reminder of everything um the code of conduct and the various IPR policies uh uh emphasizing particularly the code of conduct um these uh if you are aware of any uh problems along these lines please call either contact me if this is related to this working group or the onputs team Mass policy please uh wear your mask when in meeting rooms except when actively eating and drinking or speaking at the microphone if you need a mask I think it really hears the math but if you need a mask we have some up here if your mass breaks or something um here are the notes on this uh chairs are me and Bernard Bernard is remote today I'll keep an eye on the chat but if other people can in case I'm distracted that'd be good and we have magnets taking notes um Bernard if you have anything you want to say at any point jump in okay I see you on the unmuted but I don't hear you Bernard yeah I nothing nothing much to report okay yeah our agenda um"
  },
  {
    "startTime": "00:08:00",
    "text": "if anybody has any comments on anything they'd like to tweak or change or ADD you know let us know speak now or interrupt as we go um this is roughly what we'll be doing um draft status published and drafts um we have some things in our of the editor we have one thing in Miss ref uh uh frame marking well we still need that revised draft for that uh MO is nodding so just reminder demo uh uh working group The Working glass call um you completed the the skip draft um we've there was a revised draft on you know based on the various um director at Malik and reviews um reviewers could have been contacted to make sure they like the changes um so 983 this did this working class call that's on me to do the work with the write-up which I'm sorry I didn't get to get I will try to do that soon um we've adopted RTP over quick and EVC um there was an uh there was a call for adoption game State over our RTP there was not there were hardly any there were only two responses one of which was um from a co-worker of the proponent so we didn't feel like that was terribly um exciting uh Colin do you wish to speak are you still interested in doing this and can you get I mean there's it's moving to multiple you know companies sort of looking at this and using it at this point and I mean I think the real the the most"
  },
  {
    "startTime": "00:10:01",
    "text": "interesting comment really is that like the part of negotiating the the defining the media container it sure this working group would be happy to do it if there was a document done somewhere that's like like here's the format itself and but doing the format in this working group I believe is within our Charter technically but is of no interest whatsoever to anyone in this working group it's completely independent from anything that's done so Dispatch sent me here here has not really rejected me to go back to dispatch and say I can't do this here but it never made sense for it I didn't think it should be done here okay and so I'm not I'm not sad about that and I agree with the you know suhas and his sock puppet fluffy both like this is sort of irrelevant um but you know so I I like I I'm not I I'm not denying the response there was also no responses against it I'll point out basically yeah right basically I think the but it's it's that there's not a strong interest or strong expertise in defining a game format in this working group is true right so I mean what do you think you should like as a chair or what you know what's what's your advice to me I'm trying to bring some new work that is actually sort of relevant to the ITF what do you tell me to do uh I mean I think the issue is more the expertise than the interest like I don't know anything about game States I don't I couldn't tell you if we get it right or not and I don't think anybody very many people in this room have that expertise either so if you can find the people who do have the expertise and say are you willing to participate in this working group for you know how long it takes to do this work that and you know and they're interested in it then you know what's the harm if we don't if we get it wrong right um"
  },
  {
    "startTime": "00:12:00",
    "text": "I mean zero I guess you know there are other places to add to the pile yeah so look I'm not really sure what to do with it next but I feel a little bit like I've been bounced around it's been a year now and no one has a location at ITF that could possibly do this work and that's not your fault it's not this working group's fault but it is the reality of what's going on [Music] no this is very much the ietf's job right okay um so David scanazi internet architecture board uh so I have not read the draft um but just uh from a like high level uh just I want to start with a clarification question for Colin like what is the benefit for you in having this as an RFC as opposed to a blog post a Wiki page whatever we need the Ayanna Registries for an extensible mechanism that multiple vendors can add what they need into it that's what we really need it's an extensibility mechanism for multi-vendor work I see so you need a it's not an existing code point in an existing or a new code for an existing registry you want a new registry Okay so then often for things like this an independent stream RFC can create an Ina registry and that might be an option for you because the the it sounds like what you you're not asking for like people who understand this to review and provide feedback because like the expertise maybe isn't here you're just asking for a stamp so you don't have to run an Ina registry which I totally get that's valid so I would suggest making that an independent stream RFC and I I saw Elliot he's here in person so uh oh the 80s coming I'm running away I'm running away foreign"
  },
  {
    "startTime": "00:14:09",
    "text": "so I would gladly yield to the error director of course but since he goes away um I you know I I was grumbling here in the corner saying this is not the idf's business and I I continue to believe this is not the itf's business it's I mean if we Define if we Define making the internet better or whatever as as basically encompassing everything that can be coded into bits and being sent uh over over a while or Wireless to some other place using a protocol roughly a like IP then of course it's the itf's business but I think this is a classical example of often often uh often coding technology even if it's mostly metadata-ish type of stuff and that should go to comedies who know what they are doing in this field and that would be MPEG that would be aom that would be those places and not here yeah we have ah we had the the vast majority of the people running around here don't understand this stuff nor care about it thank you so I would like to reply to Stefan on this though but Stefan you said exactly those same words when we said we wanted to do an audio codec in ITF called Opus is now the most used codec in the internet you said exactly those same words when we wanted to publish av1 which is one of the most not sorry not av1 vp8 which we did through Independence dream back to the recommendation to me it's one of the most used video codecs and aom has no interest in doing this game type move data it's very different than the type of other work they do this is totally the wrong place to do it MPEG has no interest in this type of minimal compression we've discussed that um it is this is this is more like a Json format you could maybe say w3c should do this or you know the open"
  },
  {
    "startTime": "00:16:00",
    "text": "spatial Consortium or something like that but those places that you recommend they're they're not practical so may I respond to that sure go ahead okay thank you and uh so you know I go to these impact meetings as an example uh I haven't seen uh you guys going there and proposing anything like that so don't say it they're not interested because I wouldn't know um I'm also going to aom uh also quite often and and I mean you go there to the uh to the Cause right I haven't seen the Cisco initiative over there either so don't say they are not interested I don't think you know right or if you know then at least it wasn't publicized in any in any significant way uh I agree that Opus was a success I disagree that it was an ITF success it was a success of a handful of people who used the ITF as a venue um all the others I don't even want to go there but Opus was was not the classical collaborative effort of uh creating a protocol it was just a handful of people who were talking to each other anyway all the time so I I I I still wouldn't want to see this organization becoming a an an organization that steps on other people's Turf without need really thank you Bernard you're in the QSC hi hi Colin um Harold may be about to say the same thing but I recall having a discussion in the w3c about the game State API um and uh what to do with it how to how to send stuff over the network from that API so you may have something there Cullen about the w3c"
  },
  {
    "startTime": "00:18:00",
    "text": "um and they have had game related workshops before so that that might be one way to find some of these people just a thought Harold hello the problem here is really that this group has set this uh itself up as a gatekeeper for registration of RTP formats we now have a need for something to pass that gate so the alternatives for this group are basically lead follow or get the hell out of the way so where this document where this the technical details of this proposal needs to be discussed well any any group consists of 10 people no matter how many people who are in it and that's another question but if this group is a gatekeeper for registering stuff that needs RTP payloads well this group needs to accept that that it either needs to lead follow or get the hell out of the way [Music] Sergio here up next you're muted search your life actually yeah yeah I think you've clicked to share slides not to share video"
  },
  {
    "startTime": "00:20:03",
    "text": "okay fixes audio and ask for queue again oh thank you all right uh Stefan so a direct response to Harold uh I tend to agree and I have agreed that the payload format in this email that cited there I have agreed that the payment format itself is in my opinion clearly within the charter of this group and I wouldn't at all stand in the way of doing that however there is a format a media format defined in the same specification and that that simply shouldn't be done here so if that were done somewhere else in parallel or sequentially I don't care right I I wouldn't stand here yep it's the the problem is that this is a document that does what traditionally has been done in two different documents one being the actual um media technology the other being the payload format including the registry and that obviously is well within the charter here go go for it no no trouble with that thank you Magnus buying this question yeah react to how I'll say about the skate keeping when it comes toxicity failure foremost I would note that first of all as Stefan said it's like it's the format versus the RTP payload format for the two different aspects here and the second one is that actually any OTP the only thing you need to register a code points for r2p payloader formats is a stable specification you don't need to go through this group at all but that's I mean we encourage it we have the expertise and we want to provide input Etc about that proposal so that's I mean I I asked a temporary a little bit so uh but I understand the struggle here to"
  },
  {
    "startTime": "00:22:01",
    "text": "actually Define a format when you have a hard time finding body but well uh mercenary I don't think this is just about registration I think we really need to figure out if there's a good venue to have the discussions for this kind of thing because um it's not just you know let Khan publish something that only Cohen's going to use um the the the core aspect of this is you know describing things and there's two two main aspects describing you know meshes or geometrical structures efficiently and I agree with Stefan that that's the purview of other groups and there are there are you know other groups actively working on this but their scope is is um worlds not uh you know small telemetry so they're going to be biased towards you know something that's you know very Compact and efficient for a very very large object you know mesh compression for an entire world not for five points or something like that so the other aspect of this is it's also more like you know Telemetry or real-time uh input um and we've we've seen other requests and and like uh media over quick about use cases like remote desktop and things like that how how is you know input whether it's you know human input or some other form of input going to be carried over RTP and this is just one specific type of input this is you know polygonal mesh input um but how you encode input in general and how you describe it is you know is also you know something that needs to be discussed and so I don't think that it's just let's just register something and and get it out there and nobody else will ever use it I think we need to really think about how do we describe you know simple geometries and how would we also describe input"
  },
  {
    "startTime": "00:24:00",
    "text": "and where's the right place to to have conversations about those two things and there is work at Alm and MPEG on political mesh compression but like I said it's it's for compressing worlds not you know not I move my hand an inch this way uh David Scott I just wanted to react to What Harold was saying so forgive me I uh wouldn't consider myself an avt core Enthusiast I'm very new to this space and I just was kind of walking by in the hallway uh but uh I know Hawaiian it works um the I was looking through the RTP Registries and all of them have a registration procedure of expert review or specification required and specification required me means expert review and the expert has verified that there is some kind of a spec the spec could be written on the back of a paper napkin that you've taken a picture on and posted on your website that's fine um it is actually uh like it the specification does not have to be an ITF specification uh uh no yeah exactly like the uh if I promise that I will keep serving that picture Forever on that URL anyway um like the the ex that's the expert's purview but that does not mean that you need any like a standard track RFC it doesn't mean you need any kind of RFC like the simplest way is a draft zero zero like that is definitely agree accepted as a stable reference um uh they stay on the archive so this group is not actually a gatekeeper to any of these Registries um and similarly this group is not a gatekeeper to create a new registry so I"
  },
  {
    "startTime": "00:26:02",
    "text": "think as someone who's done something like this before the two options here is telecon like sure we're interested we want to work on this let's do it here or we're not interested just go publish it on the independent stream you get everything you want and all right win-win-win so like the the only reason where you can get a little Ken Block is if you think okay this is so harmful that we want to use the INR registry as a way to tell Colin no no no bad bad bad but I don't think that's the case here people are just saying Matt shrug so I think there's a clear path forward here and Colin but does that work for you I'm just I'm trying to help but yeah Bernard yeah I think we should close the line but yeah to uh follow up on what David just said I think the question is Cullen what Ayana policy would you want and you know who if it's expert review required who would the expert be do you have a volunteer in mind um and how do you how do you want this to work I wouldn't worry about the working group or getting it published just think about how you want to set it up do you have any comments uh yeah it's it's um uh the small numbers are expert review any any expert would be fine and the larger numbers are first come first serve so it's pretty clear and pretty simple how the Ayana registry would would work on it um yeah so actually you really don't need that much expertise in the working group all you need is a is a document that uh creates the registry with your your it kind of Will self-function on its own once you do that right with the expert review and the the Ayana policies yeah correct right so the the the the the struggle that"
  },
  {
    "startTime": "00:28:00",
    "text": "that I get myself to here is um dispatch sort of sent me here so so on the on the the where to do it and how to move forward right I mean if people like if if the group wanted to recommend Colin we recommend you do this through the independent stream like that would be great I'd have no problem with that that'd be super um what I don't want to do is go do it through the independent stream have it go to the isg review and have them tell me this is clearly in the scope of this working group because it is in the scope of this working group's Charter which is a valid reason for the isg to block the independent stream from publishing this document I do not want to do that so you guys have to tell me in the minutes that you're recommending I take it to the independent stream or I'm not taking it there yeah let's take it with it okay is there anybody to do do we want does anybody object just telling Colin take us to be an independent stream and this group has no problem with publishing it as independent stream hearing no objection let's put that in the minutes so that if anybody at the iesg complains you can point them at these minutes okay yes but you know but we used to love the iesc at that point yeah I hope it doesn't make that long either but if yeah um yeah okay so that is Murray is kind of like did you want to say something or are you okay all right all right well we're good that is taking care of and Ella knows what to do Colin wants to say something more I just want to say thank you that's all okay welcome all right all right um much less controversial we're doing we had a CFA on on the RV trailer for b3c"
  },
  {
    "startTime": "00:30:02",
    "text": "um we had several affirmative responses saying we like to do it so I think the conclusion is we're going to adopt that Bernard is that I think you were writing that so do you want to confirm that yeah I mean uh it looks to me like there's consensus to adopt if are there any objections in this room if not then the author should just submit a draft ietf uh avt core doc sounds good all right um we are still have a uh CFA going on the rgcp messages for green metadata um the draft is available that's going to November 30th if you have any opinions on that please comment on the list or if you have something you need to say here about it let us know but that seems only if it's you know urgent okay and next up is RTP for skip here I am uh good morning um so go through pretty quickly here let's take in not a whole lot to report but um we did submit the revision 03 draft in uh next slide uh not on October 17th um responding directly to reviewers questions um again revise the abstract obstruct introduction and mapping to STP sections submitted it as XML file um I think we've resolved this issue before I got it keeps coming up and all these reviewers whether the skip 210 referenced is a normative or informative reference um and if we need to bring that issue up again or not or just I think we've decided the group has decided us again not using the queue oh he's using the queue oh I just had myself"
  },
  {
    "startTime": "00:32:00",
    "text": "um I I think it is really important that remains an informative reference and not necessarily for this specification but in general because we've gone through this whole argument before and the reason why is it gets you out of a complex it it means that if there is I'm not talking about Skip I'm talking about some other codecs if there was IPR on the codec there's not necessarily IPR on this and I think that's a really I think that should be a fundamental policy I just think it should be a thing that we update in our guidelines for authors of this doc of of you know media formats is that it's an informal reference [Music] okay all right and so I guess really The Next Step I guess is to I know that the reviews last reviews were done on the O2 version of the draft um most of them are ready with issues I guess more so I guess next slide just to talk about what to do about requesting another formal review to have all the reviewers be satisfied with the current state of the document and allowing it to go forward did they respond to you in each case uh I mean that's I don't know that they need to re-review it just we need I I just basically what I want is just a citation from these people saying yeah I'm fine and you adjust my comments that's all right no I haven't I've not received any we've never seen any feedback on the version three draft at this point so well so so the none of the reviewers responded back to you or not not regarding the version three document no okay well I mean there's does this I think you you've done what you needed to do you asked them and if they're not responding I don't know that there's anything more you can do I mean you can't go to their house and make them do it I mean I can reach out and reach out to them once again just yeah just maybe send one last episode you know that's that's it you can't we can't uh haggle them forever right right okay yeah so that's"
  },
  {
    "startTime": "00:34:02",
    "text": "basically where we're at this point I guess what to do to resolve anything to say okay all right um and that's all that's the only side you have all right so yeah on the subject on the subject and this is this is not at all going power down over here um I've noticed recently I mean over the last three years or so a real increase in bureaucracy you have to sign this off and the sign off has to be recorded and can we cut down a little bit on that please it's it's getting frankly really annoying it I mean this is this is we're not that close from ISO style a sign of procedures now thank you yeah well that that is a good point Stefan the uh the amount of questions you now have to the the size of the public questions has kind of grown enormously in the just in the last six months um so uh I think those sentiments are good ones but uh for this purpose I think we've we've gone through enough Hoops to write the public so you know well if if hassling is required for the director it's they'll be hassled later in the process but I think you've done what you needed to do Dan so all right thank you okay all right so I think we're good there uh Bernard is the shepherd on that so all right okay next yeah um so at the interim meeting we basically talked about a um little sandbox where we could experiment with RTP over quick in JavaScript so next slide um there were some Curious observations um"
  },
  {
    "startTime": "00:36:01",
    "text": "a few things were that first of all the glass to gas latency was considerably higher than the measured frame rtt and there was noticeable lag when you went to high resolutions like full HD at 30 frames and a megabit average Target I was measuring like 630 millisecond glass latency within our frame rtt of 100 milliseconds so that was a little curious um the other thing that was weird was that we didn't observe any reordering on the receiver I think in hundreds of tests no reordering at all so that raised a bunch of questions about what was going on exactly why it wasn't being why we didn't see reordering and also the bandwidth consumption was considerably lower than the average Target bit rate um except for a weird vp9 bug where um with a certain with variable bit rate and uh temporal scalability with three layers it sent like at 10 times more than the target average bit rate so the question is what was going on and next slide um we I think finally figured it out which was basically that you have to be very careful in the way you write in the web transport API in particular it is not recommended to a weight right or dot write uh because that promise returns once a chunk is handed off to the quick send queue and that effectively prevents the quick stack from multiplexing frames or streams on web transport um and so you you suppress the concurrent sending of P frames and iframes um and that's why the reordering was rarely observed on the receiver because basically you were sending the iframe waiting until it was essentially almost sent and then sending the next keyframe and that also reduced the bandwidth usage by stretching out the delivery times so uh the way to fix that is you only await a write or dot ready promise which happens as soon as you can send on the stream and then you just write the chunk and then you uh call writer.close"
  },
  {
    "startTime": "00:38:00",
    "text": "and and Dot Bend for whatever you do once it's closed um so once you do that the frames and iframes get sent concurrently um I'll show you some some graphs but it also looks like this results in more rapid congestion window growth so that your iframe actually gets sent with fewer rtts which is kind of interesting we did start re observing reordering at the receiver so we had to do a reorder buffer um the Jitter buffer is actually implemented in another API it seems like the smoothing is now occurring also uh the video looks a lot smoother yeah and that's occurring in the media stream track generator API um so that's kind of interesting between this reorder buffer and that smoothing you almost you seem to get the effect of a Jitter buffer uh without doing hardly any work um and then also the bandwidth consumption is now closer to but slightly larger than the average Target bit rate and the glass to glass latency is considerably lower um it's hundreds of milliseconds lower now and particularly you can run now the demo at high resolutions with complex codecs like av1 and um it's close to near real-time performance so that actually is pretty good news for things like ingestion video ingestion or potentially distribution scenarios because it seems to work pretty darn well anyway there's a good reference which talks about some of the nasty effects of async await in JavaScript and some of the things that can happen I'm going to go through the rest of the code and see if there are any more things like this um anyway next slide so this is an example of comparison of before and after um and if you click on the before you'll get the the code that that runs with before uh do removing these bottlenecks and then after you'll see what happens afterwards uh but one of the interesting things in the after is is it does look much closely uh clustered around the rtt min uh for the P frames and then the large"
  },
  {
    "startTime": "00:40:03",
    "text": "frame at around 11 000 bytes is probably the iframe and the other thing you can see is the the combination of uh uh well there's basically minimal extra delay above the transmission line um which kind of indicates that by this point the sea wind has grown to be able to send these 11 000 bytes in one rtt um so anyway the the bottom line of all of this is that um it's very possible to do interactive uh the the performance of RTP over quick can potentially be extremely good um without even a lot of effort um done this is entirely in JavaScript no wasm or anything like this um so it looks like you can get interactive uh uh performance out of this uh without a lot of effort anyway that's the update oh and here are some pointers if you want to learn more about how to about this stuff uh pointers to the code for the the optimized version the old version so you can see the comparison um and also there's a web codex only demo which has no transport at all and at this point the the one with network transport is pretty pretty close to the performance of the no transport demo um so all right uh thank you Bernard um any questions on this we'll move on to Peter Peter are you here there you are good test test yes we hear you great go ahead okay so this is"
  },
  {
    "startTime": "00:42:02",
    "text": "talking about issue 29 on GitHub next slide oh and uh hold on Martin Thompson has from the room I was just giving notice about the talk why were the S frame tariffs not aware of this he's in another room a long way away but I don't know I don't know either I'm sorry okay go ahead all right so I'll try to describe the scenario next slide uh just reviewing simple things RTP over quick allows you to have big RTP packets perhaps a whole frame in one RTP packet and one quick stream next slide and S frame lets you encrypt the media next slide so if you do s frame over RTP over quick you put a video frame and an S frame and a quick stream and you get a big rtb packet with an S frame payload which is opaque because it's encrypted next slide so what's the problem described in the issue next slide it is that what says what it says in section 4.1 of the RTP over quick draft that you may need codec specific knowledge to packetize the payload of incoming rtb packets into smaller OTP packets next slide but when you're using S frame only the endpoints have the key so in your middle box can only know about s frame not the clear text payload so when it says may need coding specific knowledge maybe that really means it may need s frame specific knowledge next slide um now someone might say well what if we just use S packet instead of s frame"
  },
  {
    "startTime": "00:44:02",
    "text": "over RTP over quick but that has the same problem because you can have a really large RTP packet using S packet as well because when you have a really large RTP packets like with quick streams there isn't much difference between this from a nurse packet because you basically have one frame per big RTP packet next slide similar uh but somewhat different you still have the problem if you do RTP over quick stream so this isn't unique to quick or sorry over quick datagrams this isn't unique to Quick streams because if you have quick datagrams you can have slightly larger overhead so when you translate in the other direction from RTP over UDP to RTP really quick you can end up needing to be packetized to make it the payload slightly smaller so it fits with the slightly larger overhead next slide so a summary of the problem is that with RTP over quick you can have big RTP packets you can have MTU differences also and these require repacketizing by repacketizing as mentioned in the year to be a quick draft is codex it may be codec specific which might mean a string specific and uh this can't be solved purely by the endpoints this is something the fiddle box needs to be able to do but has to work within the bounds of what has with that with s frame which is encrypted next frame or next slide so here's a potential solution it's pretty simple next slide uh this is the RTP packet format everyone knows what it is that look at the payload part below next slide and the proposed solution is to basically add a payload that has an S frame sequence number an S frame chunk index and then an S frame chunk or given an example in the"
  },
  {
    "startTime": "00:46:02",
    "text": "next slide but you might think this looks a little bit like uh RTX where there's another sequence number in our tx's case it's the original sequence number which is used and in this case we're using the S frames sequence number but we'll do it multiple times one for each chunk so next slide I'll give an example so if we have two large RTP packets being sent over say quick streams that have payloads of a b c d e f for the first one and G H I J K L for the second one imagine it being much larger obviously then that can be broken up into small chunks of say A B C D or sorry A B C D and E F and then g-h-i-j-n-k-o and the original sequence numbers that were in the large RDP test training payloads well sequence number tied to the payload would be maintained in the payload of the smaller RTP packets you can see there one zero one three times one zero two three times and then the smaller RTP packets have normal sequence numbers one two three four five six and to keep track of how to put the chunks back together when you receive them all the chunk indexes let you know what we're going to go so it's a pretty simple chopping up of large RTP packets into small ones in a way that you can put the large one back together when you get all the small ones a Magnus yeah minus I think you're might be missing one important functionality because these fragments can be lost under certain conditions I think you need the indications of saying this is the last"
  },
  {
    "startTime": "00:48:00",
    "text": "fragments yeah that's that's a drag but there are two different ways we can do that and uh the way I have it written down at the moment we use the marker bit but there's a slide later where I have there's some technical discussion we can have over different options but uh before we get there I want to make sure we uh decide whether this whole idea is worth going down as a solution for us from my perspective I think considering what this Frame is ETC you you're not going to be able to do anything better than you just take the whole s frame shop it up in the suitable way for the underlying transport and and doing that in the r2p payload performance seems to be the reasonable Way Forward here uh about you might also have to consider if you need a if the shank index yeah if it only started there you always know where to start is so I guess it's fine but uh yeah another one of the issues that we trade-offs we can discuss uh which is on a future slide involve whether to use a chunk index or kind of derive that from the sequence number with the first so there are different options we can have but like I said first I want to open the question if we go to the next slide perhaps here quickly you've got um thanks Peter so um fundamentally I kind of think this should be workable um how does this thing work with uh uh cascaded translators after all you are creating a consecutive index sequence and I suspect if you had a requirement to re-do the whole thing at a second stage where you still get even smaller packets um had you thought about that"
  },
  {
    "startTime": "00:50:01",
    "text": "uh no I had not thought about that but I suppose that you could have two layers of it where this smaller one gets broke up into even smaller ones and then you've so you know but just needs to think about this I also had a a general question to the group maybe also to Magnus as the uh living avt directory dictionary um whatever um I try to find my translators have existed for a long time so in that regard MTU size considerations would have needed to be addressed for a long time but looking at the topologies draft I couldn't find anything that I don't think the term MTU even appeared in that document I'm not sure coming going back to the original RTP specification where the translator definitions actually talked about MTU sizes so if it had did we have a solution to this problem in the past that all of us have forgotten or did we simply ignore it back then s frames are fairly recent thing so no but but from even if you had regular RTP packets that go into a translator they might be ended up send being sent on a network segment that has a smaller empty do size then you would have the same problem irrespective of s frame right so the art the RTP over quick draft right now already stays basically you can do repacketization in a codex specific way so I yeah that's always been the answer what people did in the past if they did anything well in in uh conferencing it was there we have seen repacketization and it is as as was described in the RGB over quick draft which is it's codec specific so the conference server can repacketize say for a participant with a lower MTU um in a codex specific way yeah I mean"
  },
  {
    "startTime": "00:52:00",
    "text": "the translators always be packetized I think you know there wasn't not typically for MTU issue issues because people were mostly thinking about audio but certainly like changing the key times which is especially the same thing so okay thanks uh Peter just quickly um do you have more for your slides or yeah I mean yeah there are a few more can you go to the next one yeah so as I mentioned the slide after this has some you know technical discussion we should we could do but I first wanted to ask whether this is a direction worth pursuing for issue 29 and if not what's another solution for this problem uh all right so I guess Moe you're next in the queue or mozinary um the the mechanics of of uh the chunking seem like it would work okay one small knit would be uh I think uh should look into having chunk offsets instead of uh indexes I think you know a lot of different fragmentation and reassembly techniques go back and forth between indexing and byte indexing um you should look at that to see what what use cases work best for you there but at the highest level um I'm scratching my head a little bit about uh the the purpose of this because I thought one of the main goals of s frame was to have single off tag for some media for some large media and now you Dice it up however you want deliver it however you want and then when it gets there you still have this one big large auth tag but that means that something everything delivering that in in the middle can't authenticate that thing um and so you have this object that's maintaining State across all of your you know your your network that's"
  },
  {
    "startTime": "00:54:01",
    "text": "delivering these things and so it seems like the the benefit of s frame of being able to just have this single off tag over a large um Media frame and now you're going to chunk it back down into smaller objects are you going to authenticate those smaller objects as well and if so wouldn't that defeat the whole purpose of you know where you started from the first place of of consolidating that off tag and if you're not going to do that then don't you run the risk of of providing amp vectors for attackers that can flood you know a lot of unauthenticated packets to uh to to a lot of different parts of your delivery Network uh I've always viewed the purpose of s frame to be the end in encryption but if you want to do hop by hop authentication of the whole frame using S frame a middle box still could because it can be assemble the frame from the chunks if it wants it would add some latency to authenticate that before forwarding the first piece but that happens the same if you're going to read the entire quick stream and authenticate it before you start forwarding the quick stream so it's kind of the same thing um you can still do that so you expect the chunking to be purely hop context with no um no end to end guarantees right uh yes but the any any place in the middle Could reconstruct the entire frame if it wanted to for forwarding the pieces so it could apply the end-to-end guarantees if it wants just like it could by reading in an entire quick stream and then sending it out but if it doesn't want to do that it can just afford it immediately so it's kind of up to the middle box to decide I really don't know uh Sergio"
  },
  {
    "startTime": "00:56:03",
    "text": "ah okay hello from my hope my audio is okay now yes yeah the well first my first question is uh it seems that you are only trying to solve how to interoperate between quick over datagrams versus big cover the streams to a quick over data grants when using a s frame to encrypt a whole and uh um an RTP packet with a an infinite MTU is that correct uh I think so I think if I understood you correctly but more generally anytime you have to uh take a larger RTP packet and break it up into smaller RTP packets then there are various reasons you might have to do that and you can't do it in the classic codex specific way because you're also using S3 okay but this is uh first just to try to narrow the scope this is something very specific to RTP over quick because how the way that and they are doing quick over a RTP over quick coverage streams because um it will require a packetization but um first first I think that we are trying to solve a problem without even specified how it's packed over um this packet is going to be done in in RTP or or in sdp so I think that it is a bit of a trying to to to solve one problem that it is not even on the table because first we don't have we don't know how to a packet is our signal"
  },
  {
    "startTime": "00:58:00",
    "text": "as frame over uh even in the version that does the pocketization of the whole Media frame or even if it is in just in a in the RTP packet so I think that is a bit premature and that's I mean as I was trying to to make this work with a in a generic way and and has hit some walls to get it done I I like to see the discussion uh going but I'm not sure if just narrowing it down to how we are going to and or just to specifically to the S3 to the quick over um datagrams versus quick over stream is a good way to solve the issue sorry can you repeat that last part yeah that I'm not sure if you are trying to yes solve a very narrow part of the frame as packet without even have the even without being I mean without even having specified how this packet works with a normal RTP so I I know sorry we are starting to to look at the problem in the in the from the from the brown Nets sorry are you suggesting that this problem would be solved uh somewhere else is that what you're suggesting no my question is that we don't even know how his package is meant to work with RTP so why are we we are trying to make uh to solve the interpretability between s packet with with a we say over quick when we don't even have a specified how is Packet Works in normal RTP but it kind of doesn't matter anytime someone would have an encrypted payload regardless of the mechanism for that encrypted payload like for example right now with the webrtc apis and application can do its own into an encryption mechanism"
  },
  {
    "startTime": "01:00:01",
    "text": "right and uh anytime you do that and you try and do it and now you try and apply that with RTP over quick you're going to run into this problem where one side is large and the other side small yeah but you can do it in a way that it is not specified by by any RTP specification so try to put on a specification to solve something that it is unspecified I'm not sure if it is the best way because first we will have to specify how to handle or to to transport normal this median critone a medium format over RTP without being something that it is completely um or just depending on what uh whatever formatted in the people are using to to increase the content okay well then it sounds like basically you're saying is we don't need to solve issue in 29 because s frame and S packet aren't mature enough in their standardization and so we should wait until they are and perhaps that's what the working group decides but that's kind of my question so I I think we should work on it before that but um sure I can understand that position David thanks sorry I was in the queue but then my laptop went to sleep and me Deco thought he's probably not in the room anymore anyway David skanazi quick datagram enthusiasts good to see you again Peter it's been a while yeah um so this I mean like the problem you describe is a fundamental problem in packet switch networks like when you go from circuits to packets then you have MTU issues and uh this was you know one of the early things of the internet and in ipv4 they were like oh yeah we have this problem"
  },
  {
    "startTime": "01:02:00",
    "text": "all right let's allow routers to fragment packets and what you're describing is just a clone of ipv4 fragmentation if if I'm understanding and doing it correctly that doesn't work that works horribly poorly uh because you know once you fragment something a single lost ruins the whole thing especially in a context where you have like a security with a tag like you can't decrypt anymore um and in IPv6 we you know banned that because it didn't work so I don't think this is the right solution um like if um if quick datagram frames are what's shooting you in the foot here uh one option is to switch to Quick streams that this is quick streams David yeah I think you're okay so then uh maybe I'm misunderstanding then why are you fragmenting it uh like if the where's the MTU coming from if you're going over a stream I have a you have a conference server and you have participants with different mtus and some are RTP over UDP some ritp over quick yeah this isn't a routing scenario it's a conference server it's an application layer thing that's how RTP kind of works uh so like you you have a frame that you want to send to a bunch of people over mixed media and then some of them it's going to fit and some of them it's not going to fit is that the idea yeah some of them are RTP over quick some are RTP over UDP that's what uh that's kind of what a translator does or a conferencing stuff I see yeah the these like intuitively doesn't feel right to me because like I I can see how like the previous model made sense where you would re-encode and like do codex specific things um at the splitting point which made sense but it sounds like here what you want is what we ended up doing in IP"
  },
  {
    "startTime": "01:04:01",
    "text": "which is path MTU Discovery so you you kind of realize this is happening tell the sender not to do that but maybe I'm misunderstanding the problems the conference servers aren't routers yeah conference servers aren't routers so um mq Discovery doesn't work through a conferencing server like end to end yeah all right it's just possible that I'm misunderstanding I'll do more reading if it helps uh so when you say that then okay then people are maybe I'm not completely off when you say it's not a router it takes things coming in on one side as packets and it sends it on the other side as packets and you're proposing a fragments that sounds like the same thing as a router doesn't it oh no an RTP translator is not a router no no I I'm not saying it's a router you're redoing the same thing that the router does at a different layer um that's not true either that's not how Compton servers work with translators no I think you're looking at different different layers of abstraction yeah yeah I'm not saying they're a router I'm saying it's fragmenting and you're this is fragmentation is it not uh maybe I'm confused it's not fragmentation it's not a it's not no it's repacketization there's a difference [Music] I I don't think they're actually disagreeing you're just talking about I think David's just at a higher level of abstraction than you are Bernard mm-hmm all right I'll go sit down sorry all right I think I'm I'm next to you I think all right um so as an individual Jonathan Lennox um I was gonna say I feel like um regardless of how we solve this I feel like this is a problem for the S frame of our RTP draft to solve not the RTP over quick draft to solve um I think that you know mostly having to do with hey this is an S3 specific issue and be hard to be over quick is"
  },
  {
    "startTime": "01:06:01",
    "text": "significantly further along the process so I feel like um you know maybe the uh there are to be over quick draft should say you know rather than just say codex specifics like codec or you know other you know a metakota container or whatever and um you know have some informative reference but I think the actual issue to solve should be solved in the uh in the S frame document um rather than trying to solve it in the RTP over quick because a it's applicable to anything that needs to do MTU have MTU problems not just for quick streams and be um I don't want to have a normative dependency of RGB over quick on S frame when s frame is significantly less far along the process well uh on the second issue that we don't have to have a normative dependence in this Frame if we don't want to because there's there's nothing in the solution that needs to reference that screen it's just that s frame provides a motivation for having a mechanism like this if there were some other mechanism for encrypting end to end that disallowed um RTP over quick being able to be translated to RTP over UDP you would have the same issue so in a sense it's not s frame specific it's just into an encrypted yeah I've agreed but my point is that I think s frame has this problem regardless of where they go about to be over quick or not so I feel like s frame is the appropriate and I feel like in some sense this kind of fragmentation is what you're doing with s frame quite as frame to begin with which is that your taking a frame uh encrypting and authenticating it and then chopping it up and so I feel like the chocolate making if we design the chop it up process so you can re-chop it up without messing with those tags I feel like that solves the problem yes the translator still has to have an S"
  },
  {
    "startTime": "01:08:02",
    "text": "frame aware knowledge if it's going to do that re-chopping but um that's sort of what the this draft means like codec aware this is this meta codec not the codec proper but it's still um you know I think it doesn't change anything about how hard if you ever quick works and making sure that the process is possible is s frame's responsibility and that's awesome thumbs up in the room when I said that so so then for your your suggestion is for issue 29 to say not my problem if you want to use yeah move that move issue 29 to an issue on the S frame document right to make sure that it can be you know chunked and re-chunked properly there's no s frame over our computer yeah there's that this is I think this is an appropriate time for me to leave in here as as soon as we were doing nothing so the direction that the S frame working group is going in right now is to make the S frame of document to specify only the encryption framing because there is been so much ambiguity around uh frame level versus packet level versus you know other ways you you might choose the the units that you uh encrypt with with this Frame and so I I sort of agree with Sergeant like how you carry an S frame thing in in a a chunk of data is encrypted with the S frame encryption framing uh in an RTP pack when in one or more RTP packets right because you can Envision it in the full-frame version we have multi uh multi-frame multi-factored frames like you might have multiple RTP frames carrying a single s frame unit so all that is super ill defined right now and there's not really a path to getting it defined as far as I know the"
  },
  {
    "startTime": "01:10:00",
    "text": "history and working group is focused on getting the encryption bits done um so yeah there may be some some intermediate work here to be done in any case with regard to aspiring which is probably not the job of RPA real quick um I was sort of got A plus one um David here and that this seems like a generic issue not an S frame issue at all um this is a generic issue for uh actually as Peter said at the very top of this presentation like the underlying issue here is um doing this repacketization when you don't know anything about the Enterprise codec um and that could be because the underlying codec is encrypted uh because vestream could just be because you as the repackathizer don't know anything about it and so you can't make any Intelligent Decisions about what you're the data you're looking at so it suits to the degree that there's a solution necessary here um you know it's um it's to that problem not not anything to do it's with us stream in particular it's TV how do I re-packetize this without them knowing anything about the codec um one final note that's the the Bernard and David discussion that was just going on about you know whether this is a router or not it does seem like there you you could have something pmtud like here I've got them to you discover it like here in the sense that you know if you have and SFU that is sitting in the conferencing service sitting in the middle of a bunch of connections it it no it's doing repacketization and it has some idea of what the ntus are out to it's um it's uh the endpoints is serving and so in principle if you had the right control plane you could distribute that information have people send those mtus and do you know bushing and not uh you know not fragmentation um so it seems like there's some similar um similar solution space there um to"
  },
  {
    "startTime": "01:12:00",
    "text": "the general routing case I just want to make sure I heard correctly just now the people on ABT Corps said this should happen in this Frame and the people from s frame said this should not happen in s frame right did I understand that right I didn't I said no I think we we had an S frame over our no no I think we need one if we want to send a stream over RPP and that's not being defined in this framework which we defined here so it should be defined here and that's where that work should be done I would say I don't care if that document is in s frame or avt core but there'd be if we're going to send that frame over RTP we need a document defining how to send this Frame over rtps written somewhere and that document should Define how the free factorization was done okay so well you just want me to rename my but this is I actually disagree with the the very end of that sentence so I think we probably do need a document I think the AVC first probably the right spot for it um but I don't think that this issue actually touches that uh because well I mean maybe maybe as an extreme of RCP doctor needs to deal with repacketization but like it seems like book cover RTP is the one that has the apj has a generic you know I don't know the codec revocetization issue so yeah I think unless you require every every RTP thing you have you can't do that basically RTP doesn't work that way you can't do it okay uh uh Bernard I guess you're up next yeah I mean I think you bring up a good question Jonathan we've been waiting for almost two years for an art uh s frame of rgp proposal and um you know since s frame is only"
  },
  {
    "startTime": "01:14:00",
    "text": "transported over RGB not having a proposal the only way it can be transported is kind of awkward um so uh some you know something I I knew there's been discussion among the 80s of closing the s-frame working group and just giving you know moving it somewhere else but um it seems like there there has to be a document here somewhere just to give a brief update on that phone I believe the current state of that discussion is that the Western working group books are refocused now on getting the encryption framing done and there's not really a horizon beyond that Bernard are you speaking are you so impure or is that your comment okay uh Harold I guess you're next uh I was just wanting to make two comments foreign over RTP thing that was The Proposal that was pushed forward a couple of years ago was the so-called generic RTP Capital encapsulation which flew like a lead balloon so it's not that it's uh not been proposed is that the proposed was because rejected and the other point was to move which is at if your SRAM is intended for end to end encryption protection and so on if you try to overconstrain the problem by insisting that it should support verification in the middle I think your how you'll quickly end up with a null set of solutions so please if you want hop IHOP use srtp if you want end to end use S frame but"
  },
  {
    "startTime": "01:16:00",
    "text": "don't ask S frame to do hope I hope yeah um just to briefly thought of that I don't think I was saying we'd want re-verification in the middle I'd say the middle can opaquely re-trunk the authenticated thing and then it's the end job to undo that chunking and verify the identification yes I'm just saying I mean middle can do anything it wants as long as it can do it I'm saying that if we try to write the specs so that we require that it should be able to do it we lose Magnus your text yeah Magnus wrestling yes fully agree with Harold's second part here about yes use hope I hope for hope I hope protection and and to end and on the general issue of RTP fragmentation or or MTU issues dealing I mean for any RTP payload format that sense any significant size payload that can be loaded and expected IBM do you basically need to have some type of fragmentations a little bit of this datagram and the model to my understanding has all along been that yes if you're gonna have ideas and small enough packet that if it in in all the links or you need to have an RTP middle box that can actually re-fragment the packet into something that's the payload into something that fits the RTP packets that is kind of have been the model I think we have some discussions around things like oh how do you actually detect what's this uh MTU that works but in this especially in the context of this uh uh SFA who's but yeah it isn't great this model but it's it is what we have Etc and I think in the context of s-frame yeah you're"
  },
  {
    "startTime": "01:18:00",
    "text": "gonna have to write the thought to be payload format and I don't see you way around defining a generic s frame payload format which cam fragment you're gonna need something again unless you ask how could how smart can you do it and yes it's not gonna have ideal transport properties you lose a fragment you lose the whole frame it's it's gonna be that bad but um yeah I I don't see an easy way around that and and and you're when you start to talk about like RTP in quick Etc you have choices where it's makes this better by relying for example on stream individual streams for per frame and things like that if you can do it if you're of your other message based uh transmission capabilities that's focused on just transmitting one data object so you don't have to care about that so come on Harold share with you from the queue uh mosinati so just to clarify what um Harold said earlier about what got rejected um there's some Nuance here that that maybe people are missing what was rejected earlier it was s frame was first attempting to have a generic packetizer over the RTP Elementary stream itself um not not saying this is one giant frame pretending to the to the media encoder that this is one giant frame of Limitless MTU the median coder generates an RTP frame an RTP packet that big in the S frame can wrap that we're originally talking about dicing uh having a generic packetizer over the elementary streams of of the RTP packets of the RTP payload formats and that was rejected because there's a lot of nuance and and how to do that and and you know different different payload formats do"
  },
  {
    "startTime": "01:20:00",
    "text": "it in different ways and it's difficult to harmonize all those together so I think it was wise for the S frame decision to say no we're not going to do that we're just going to say give me one big RTP payload and we'll take that as and wrap that with with double encryption so that that part I don't think we should go back and and revisit but now this this large object that now needs to go over some transport that likely can't carry that large object is the next problem and is that s frames problem that it needs to have a packetization format that is natively chunked or is it the transport that's carrying s frames problem that it eats the chunk something big and have its own headers for managing that chunking I think that's really the fundamental question and I would argue that s form knows it's going to go over some transports and it knows it's going to get chomped so why would it not have a a native chunking inside of it so I kind of agree with with Peter's direction that it needs to whether it goes over RTP or over anything else it's going to go over packets and it probably cares about how it gets chunked into packets so I think it does make sense to define something like this I'm a little bit concerned of how naive you know the simple approach is because it seems like it's automatically going to double your packet rate if there's ever an empty mismatch and that can totally destroy a lot of networks that are packet weight sensitive your media delivery may end up being you know twice as bad as you expected because you have a two or four byte Mt mismatch um so that would be a bad outcome for for a naive and coding like this um but I think it is fundamental to S frame to know that it's going to go over smaller object transports and Define its own chunk layer inside of it so that the higher level transport doesn't have to do something special for it um you're probably going to have to cut the cute uh yeah"
  },
  {
    "startTime": "01:22:01",
    "text": "and I'll so I'm Spencer Dawkins uh I got up to say something a long time ago but I actually do think I remember what it was the so the introduction of the sorry the abstract of the uh RTP over quick specification talks about it uh doing a minimal uh specification and um that was kind of where I thought uh we were going at the last meeting or two and I'm I'm not just I'm not recording a problem I'm making a suggestion that we may want to decide what's it what is really what problems really need to be solid events but specification and what the problems need to be solved in other specifications more broadly than just MTU mismatch uh We've we've mentioned conference uh Bridges and things like that that may be translating from uh RTP over quick to RTP over something else and uh you know the topology draft there's apology RFC is a pretty good sized chunk of writing uh I think it would be good for us to be looking at that specifically you know like what topologies rather than expecting the minimal specification draft authors to solve that problem on their own um but I I know you all will do the right thing and I don't actually know what the right thing is but like I said I would I would uh suggest that we think for a little bit about uh feature creep and I am fine"
  },
  {
    "startTime": "01:24:03",
    "text": "with the answer changing uh because I mean it's time has passed and we're now talking about a uh working group adoptive specification and not just uh couple of really smart guys uh writing a draft uh so it's fine for the answers to change but for us to just be a little explicit about uh what Target we're shooting at and I think that may make some other things off uh easier itself too thank you so Colin James here I think going way back to to David's comments I mean that we do we do have a complex uh you know router not a router and the RTP terminology sense of it but we have a device in the middle that needs to occasionally send things out over things that are not quick streams or not a TCP stream that this chunk or that this thing data arrived in they need to be able to re-chunk it or make sure it's small enough to get down to those smaller connections right and you know uh you know Jonathan you said like we've got to have that it doesn't work over RTP if it can't have that property which seems true and we've got another group that's you know Richard's trying to make it not be S frames Pro the S frameworking groups problem to figure out how to solve this which I mean I understand that too but we're just creating an impossible set of scenarios here so I I think that the way that makes sense is a way out of this to me um it you know is right that this this fragmentation inside the network which is what this is is always problematic and it's really it's a very hard problem to solve and that's what we're running into this was mentioned when we chartered all of this work in the first place by the way um so I don't think we can do path MTU Discovery I think it's too hard to do any form of that across the conference because people come and leave too quickly uh and we've never got it to work so I think that's fantasy and I think that really only leaves us one"
  },
  {
    "startTime": "01:26:01",
    "text": "real option which is we pick an MTU of 1200 in s frame and the S frame documents are defined such that the S frameworking group and what comes out of that is never passing into the RTP layer or something that's that's you know chunks bigger than that and yes I understand there's networks with MTU smaller than that and everything else but like we just like we're going to have to accept some limitations here we've we've set up an impossible set of constraints and that's that's the thing you know I feel I feel Peter's pain on he's like you guys are telling me to do this here and that there and you're like I can't figure out how to just just finish this work so I think that we need to think about what our constraints are and which ones we're willing to violate which ones were not can you go to one more slide uh right so we're basically deciding how to proceed and it sounds like maybe a separate draft with a different name but here in this working group I I think that's complete garbage okay that it doesn't that doesn't help the splitting the the how not the number of drafts or the number of working groups is not the problem here has nothing to do with the problem so that will not fix it and it won't help and we shouldn't even discuss it until we figure out how we're going to solve the problem so we have to solve the problem before we can decide where we're going to solve the problem we have decided where we're going to solve the problem that's the S frameworking group right like that's that's if you read the charter or whatever I I don't even care it doesn't matter it's the same people that have to solve this problem right the S frameworking group just said they're not going to solve this problem yeah one one member of I I think a member who happened to be the chair perhaps but or I I mean I don't know like I don't I guess the thing is I"
  },
  {
    "startTime": "01:28:01",
    "text": "don't here's what's going to happen to your peter on this is you're going to go solve it in that working group and everyone's going to agree then you're going to bring it over here and a bunch of people are going to tell you that what you're you've done violates the tenets of RTP and that you must go away and bring them a different Stone like it's not going to end well I mean is this the same thing as what you got up a little while ago and they all said go do the independent track no no I mean no no this one they're going to not tell you to do the independence route they're going to tell you not you're not allowed to publish your document until it fixes a problem that's impossible for you to fix okay Magnus come give us the answer like somebody just needs to suggest a good solution to this problem and then we can figure out what documents so I mean it is frame fragmentation is not RTP or quickest problem it's s frame's problem and it's it's it's from my perspective uh either you do it as a generalist most suggesting ens frame to fragment however I think that's Easter in other cases where as friends gets fragmented if not do it in the bloody RTP payload for s-frame you're gonna need one the right home for that document I think you still think is here in avt core because it's going to be RTP problems more than as friends problems if we just create this a blob there's some signal issues around this which is I still don't know if anyone's figured out but yeah um so that's yeah I'm happy to rename my thing uh s frame packetization for RTP or whatever and do it here sorry that'd be a wonderful document but it's not the document you you said Hudson to propose here I think it's a different topic um yeah the short problem here is like whether RTP is okay with repacketization that doesn't pay attention to codex because that's the"
  },
  {
    "startTime": "01:30:00",
    "text": "underlying problem here the only thing S3 was doing here is making it so you can't see the the actual codec um if that's a solvable problem we should solve it at the RTP layer so that we don't have to redo this for every uh so we get the generic decoupling we don't have to do it for every uh case where you can't or don't want to look at the end of internals the codec um if it's not a problem then we can't do uh s frame over of our OTP without pmtud um so as an individual and I've cleverly arranged to look at the last word here I mean RTP was designed to have tight coupling to the Codex because there's a lot of benefits to that and one of the consequences that is now you have to know about the codec if you're going to do things with the RTP player um and yeah that's a trade-off and if you want to just I mean that's why we use RTP and not just send these things over TCP so um as a con so I mean so for S frame s frame is a potentially a Meta Meta payload so something we'll have to know about s frame to do this work but that's that's fine um it won't have to know about the contents because like you say it can't anymore that it doesn't know about the you know it might be able to repacketize issue six four with fragmentation units but it doesn't have to know about how you know inverse cosine transfer transforms work or anything like that um and so that's so I mean I think and I as I said I think uh what Peter said is writing an S frame payload for RTP would be an excellent document entirely in scope of this work group and something we've needed for a while to get uh S3 working proper did actually have Mass frame defined I mean I would have thought that it would be in scope for the S framework in group two but if you want to do it here I mean I think the argument that it needs the RTP um knowledge is fine I'd be happy to say it's in scope but but you're not done we we when we when calling they presented"
  },
  {
    "startTime": "01:32:00",
    "text": "the the game State data it was kind of their response of the group that the media should be done outside of the ABT core and then the packet decision should be done in our in in RTA in ABT core so it is kind of I mean what the dependent of the college we choose to do the bucket Edition also outside of the of a IV Decor or not or How does it go because yeah yeah I mean I think I mean I think it's the same thing applies you do the crypto transforms outside and then the yeah so how this Frame is frame has to make sure that it is said that it works in RTP but I think that the people the decision for this frame for this packet must be done in a vehicle I have presented several times the the generic packetizer try to overcome the issues right by the by the ABT Core group and I failed so that's why it has not been for the progression it is not that we have not made extensive effort to make it work in here but it is not possible I mean I think it's it's not that the concept is bad is that you know you need to have um codex specific you need there needs you need to expose enough codec knowledge such that things can make a Intelligent Decisions and honestly I feel like you know just this is the you know one of the problems that s frame has had is that because of the pandemic we haven't been able to have side meetings with this I think if we had you know a two-hour side meeting with the right people you know all this cleared up and we'd have figured it out you know two years ago so I think um yeah but anyway I mean that's right to move forward I think that this is sometimes we need people who aren't here this is coming from from the fact that the RTP over quick has decided to make something that it is not playing well with the rest of the RTP"
  },
  {
    "startTime": "01:34:00",
    "text": "um implementation not there I mean uh we have never have a problem in real life about mtus I mean we have svus that that forward buckets from one network to another um even if then the empties could be different I mean which reality I don't know if it is the case there has been no no issue in in transferring packet without having to repackathize I don't think that sorry I mean that yeah it's absolutely true that until now I think Colin's thing of just assumed the empty the palette MTU is 1200 and work with that is what everybody has done and that's been fine one of the ideas of artificial real quick is don't do is because you have streams no you can treat it as though you have unloaded mtus and that works but that means that yes if you're Gateway into something that still has that limit introduce it because they are if they use instead of phase transmitting the in the frame as I think as a single RTP packet with say infinite MTU they would split it into a smaller empty use with a RPC 4570 1 the problem will go away so it is a decision that has been made by the RTP over quick to to send the the RTP package with an infinite NTU that in fact does not play well with any other RTP over any other thing so instead of pushing this problem with a 2s frame or two other pair all to other media formats I I agree with what Richard said that it is not only a problem with a string it's a problem if we want to do a an SVU or a media element that does not really need to have knowledge of the of the packet decision and the magnetization of the or the or the Codex itself because it is"
  },
  {
    "startTime": "01:36:00",
    "text": "not what typical SVU does so we are adding an extra requirement in the in the to these Network elements and just because of what a RTP over Queen has decided to do with say with a uh with the with the quickest streams and it has just left us it is an architectural choice and it has left to the to the totally but I don't think that it is or the problem now has to be the spread to other or the media formats as to how to do the rebag decision when for example this Frame is meant to be encrypted and not possible to do the pocketization uh foreign is that issue 29 is a special case of the idea that because the infinite MTU abstraction is causing problems for anything where you need to Gateway To traditional rgp over UDP and yeah that's true and uh so maybe maybe that's something that uh that the RDP over quick draft could talk about not specifically to S frame but in general the infinite MTU causes problems um so maybe that's something with the RTP over quick document should talk about to move to the next item now yeah I think so we're like way over time but I never got an answer about where where am I supposed to go uh uh well we're talking about RV over quick now so kind of continuous Sun could I could I just suggest that scheduling an intern meeting or something like scheduling a meeting with the right people for a"
  },
  {
    "startTime": "01:38:01",
    "text": "of solving that problem I would I would tend to agree yes okay so the notes indicate we'll do an interim thanks and possibly a side meeting not not a formal interim I think this is something that needs more informal discussion rather than a formal working repeating okay now that we have been alluding to RTP over quick for all the time we can actually get to it next slide hooray so we have done a bunch of updates one that actually pertain to this entire SRAM discussion we had for the last 10 minutes so some of the stuff that you were asking for is already in the document I'll talk about that in a second um uh so we had a bunch of different updates um allow for mixing streams and datagrams now um but I want to first talk about the length Grid in quick streams in order to support translators or things like that that would actually need to chop big things up into smaller things um next slide um we have included an explicit length field here so that a sender could actually do Center side segmentation into meaningful resize chunks while still transmitting the whole thing over a quick stream and you would find the identifiable borders like you do when you try to send something over TCP over sctp or something else so that would allow if there existed a an S frame fragmentation to come back to our previous discussion at the sender um to preserve these boundaries that you insert even though you are using um a quick stream for transmission and then a translator could would have the natural packet boundaries to send that forward the choice of the size of these frames would ultimately be up to the sender and if you have negotiated that you're talking straight over streams to it to directly to appear um without any translator then maybe you don't need those if you have negotiated something different then you can then you can choose smaller units"
  },
  {
    "startTime": "01:40:03",
    "text": "um and this may be 180u one frame per person it might even be multiple I80 use multiple frames per stream there is one subtle problem with the letter part that I want to talk about the neck on the next slide um so if we can send one or more packets over the stream we had mechanisms or we do have mechanisms in the um RTP over quick Draft when using streams to cancel outstanding Transmissions so a sender who is figuring out that maybe my queue is too long this is never going to make it up to the receiver in time I can send the reset stream to terminate to terminate this transmission at the same time a receiver could possibly find out that oh stuff is coming in too late I'm not going to use this packet anymore or this this Adu anymore so maybe I should tell the sender to stop retransmitting and so I could send um I could cancel a stream using stop sending um the interesting question is the moment we have we may have multiple packets on that stream um you don't the sender doesn't exactly know whether there is the receiver doesn't exactly know whether the sender has put 180u on the stream or multiple so if I if I would say stop sending and cancel an incoming stream I have no idea how many bits I'm going to um rip off of that Stream So what I'm going to lose next slide so um first option is thank you it's actually quick right side okay okay now just um search audio there's something you want to say are you just in the keyboard okay so first option is we just assume we just accept that you can't safely cancel streams because you don't know"
  },
  {
    "startTime": "01:42:00",
    "text": "what's coming what might be coming up that is um related to option number D that may be implicit from the application context so maybe you have an agreement that you're always going to just use 180u and you are maybe this isn't the problem that we need to solve at the transport layer and so and then and we are just done um we could also require just a single Adu per stream would be an option but we might also have a single uh group of pictures or something on the per stream because they are dependent they have the exhibit dependencies anyway so maybe that b might be too harsh an option um or we might invent some signaling but that appears to be arbitrarily complex to have semantically Rich enough expressiveness so we probably have a kind of a tendency to go for for solution number a um just curious about comments from people does anybody care um Bernard your first one with you yeah I mean I think there's an inherent Advantage uh for the sender to cancel a stream because it knows what came out of the encoder so for example it knows it's a keyframe I can't really cancel it I need to get it through or maybe it's an enhancement layer so uh when I was implementing this it made the most sense to do the cancellation on the sender anyway so um I think you've stated the issue and um I I don't see why the receiver would would have to do the cancellation and maybe we just just say hey don't need to Sender can do it in this case that might be that might be option number e okay we don't have that on the list more comments David skanazi quick Enthusiast um there is no such thing in quick as a receiver canceling a stream um so we're like we're talking about"
  },
  {
    "startTime": "01:44:00",
    "text": "unidirectional streams a receiver can send a stop sending that's what I meant yeah yeah but but the important distinction there is the stop sending frame is not does not cancel the stream the stop sending frame tells the sender please cancel this the Stream and so the sender will has to just in quick decide whether to cancel the stream and to resend a reset stream and when it will so okay so it could ensure the integrity and we are done yeah so that that's your easy solution there is you you should add some text to say that like if you receive what to do if you receive a stop sending like don't do the dumb thing be smart about it and that might your life might be a bit harder because some quick implementations might just say okay they said stop sending I'm going to reset the stream right away without sending it to the application so that might be an implementation issue but from a standards perspective there's no problem here also I I missed that sub subtlety thank you Lucas hey uh Lucas Pardo I I love streams like this stuff is is causes so many bugs um as David said yeah I'm aware of bugs where um people have received stop sending and not actioned it and uh all sorts of fun and games um but for me I don't understand RTP that well to know what's safe versus unsafe is this like safe in the security Center is it just non-optimal that some things get dropped on the floor I thought that might help to understand the problem like the the impact of the problem we're talking about it would be as though you had lost the packets in a traditional RDP or UDP so so you'd have to do whatever recovery either that right okay so it won't it won't get worse than sending datagrams and and and"
  },
  {
    "startTime": "01:46:01",
    "text": "those being dropped from a queue so that doesn't seem too bad and and like hb3 has this problem right we send frames on streams and if if you get reset at any point on that stream you don't know what frames are going to come after it and we kind of live live with that um yeah yeah just accept that this could happen I think is is what we're saying maybe you could say well like David just alluded to implementations could do something smarter and try and send the reset at the right you know the offset that that it makes sense in the packet the problem I think you might hit though is that um if if there's any if you're expecting that all of the data before that reset was received on the other end it might not have been before the the other end sees the reset stream and it discards all the state that you were hoping that it would have read beforehand like there's not going to be any Transmissions at that point so you're probably still in the situation of a anyway it could happen but it's it's possible it wouldn't as well so that's something that people would probably have to accommodate I suspect with us with David's comments uh we'll need to bang our head a bit get ahead around that in order to see what kind of interaction that actually leads to and given that that also every interaction causes an extra rtt what that then in the end means for a a sensible choice of action Colin so I I uh notwithstanding status comment which is great I I do uh come sort of towards back to a because I'm thinking about the use cases where we use this and usually what you want to do when you're doing this is cause ban it like causes you you really decide you're abandoning the whole thing everything you previously sent you're trying to get the bandwidth to stop as quickly as possible so I think leaving and you stuff that's already been sent you can't cancel it's already in Flight right um and with you know the basic model of RTP is you're never guaranteed anything was going to happen to get delivered anyway"
  },
  {
    "startTime": "01:48:00",
    "text": "so some packets didn't arrive it's just like well within an RTP model I like I think our I think what the the at the must level in the draft is when this happens you really don't know what will happen of any of the stuff that was in Flight it might get lost it might go it might not like it like just don't make any assumptions about it and then maybe there should be perhaps some should level things of something clever you can do but I think the clever advice oh I mean it's going to be hard to decide what the policy is that you want like what would be do the right thing even if we had all the mechanisms to do it is very hard to tell and I I don't think this really matters for the users of this so I I sort of lean towards the the a like like let's make this as simple as possible let's get it done as fast as possible and basically just say when you do this like you don't have a lot of control over what happens next right I mean the main point is to to to cancel any kind of to prevent any kind of retransmissions in the end that that you that you're not going to benefit from anyway yeah which would in the end saves you some capacity but you're right of the bets are off and what what you're going to get and what you're not going yeah all bets are off and if you're if you have access to the stack which you probably weren't at a low level API you know the right thing to do is to try and cancel as much as possible as early as possible which is probably the default implementation anyway thank you [Music] David schenazi is me again um I realized that in my previous comment I was being clever so for that I apologize that's generally always a bad idea um uh one Jonah made an interesting point to me yesterday uh in a completely different conversation that we kind of made a mistake in quick in that we called these things streams we should have called them messages the the the like the mental model that we worked in in quick and you know as we were designing it for its initial use case of HTTP 3 was like their messages like you're an HTTP request an HTTP response and the the concept of stop"
  },
  {
    "startTime": "01:50:02",
    "text": "sending and reset is you know actually this message this Atomic unit of information I don't care anymore or like I'm trying to send this and like no forget it the whole thing is done so I you know option b sounds like a much better fit to quick like have one Media frame a per unidirectional stream I don't think you're getting many benefits from putting two on the same stream like just have them be separate you'll make your life a lot easier because you'll fit into the quick model better I'd be certainly happy with that as well we had it before in the in the draft and then some discussion uh arose whether that might be a useful alternative to have to allow for more but maybe option b is indeed the right thing because it keeps it preserves semantic you Unity at the same time with the length Fields allowing for things to be pre-tropped in case you need to forward them that doesn't preclude the whole thing to come in multiple pieces even though it's just one unit so that would seem to be the a sensible solution here seeing some thumbs up even from Colin all right um I was just going to say um yeah um that in some ways the sort of uh putting it over streams is a bit like kind of running um uh conferencing stuff over TCP in in some sense in like you're kind of uh reliable to really the you want to be um aiming for the UDP the datagram solution within quick in that that's probably gives you a a better match kind of closer match to the original um RTP type distribution so in some senses that sort of I guess this is just like a if you can't do the datagrams approach then you go for the streams"
  },
  {
    "startTime": "01:52:03",
    "text": "um and so presumably the diagrams approach give you a better approach mapping anyway in terms of the original um RTP semantics and that you don't necessarily end up with some junk being sent that you don't want if that makes I'm not sure I fully got that okay all I'm saying is that in some sense it's sending it over the streams is you'd be preferable to be sending over datagrams the quick datagrams because you wouldn't get this problem right that is true but people have been uh had had some interest in doing streams that there may be sense in having some things reliable because they are iframes or something like that so that's why this is here or what we'll have to dig a bit more about the through the through the technical details of when to when to use what and how these things fit together but that's um and datagrams are optional and quick to begin with yeah so people have been using streams happily for many for many uh in many applications so if it felt wrong uh to to preclude this plus there was also an explicit desire from the working group to actually have that included and also including it I just sort of saying in some sense it's just a sort of like of course it creates for houses I think now with BB may have a sensible option or a sensible course of action of dealing with that fine so I don't dare to ask this the question on the next slide if I want to give Spencer at least five minutes for STP um Magnus oh not even getting there yeah you're not getting there um I I think there's need to be some Analyze This is what actually puts like limitation of session link length with B if you're gonna go for it estimate I mean yes it's probably you"
  },
  {
    "startTime": "01:54:03",
    "text": "should do skill bit layers are different videos Maybe so you're one per sampling whatever times a few times okay it's fairly long but it's not infinite so I think some analysis of that Etc was it actually implies in being clear that this actually limits session length compared to normal RPP which I don't think have the same limitations of any kind of hard stop because this has a hard stop you're running at the streams then you must restart a quick connection you have no other choice When You Reach stream identifications up to two up to 62. so yeah yeah longer than they'll be alive you could you could always establish a second stream quick connection well the first one is still ongoing and then migrate over so I think I think that's that that's a problem that we can safely leave out okay quickly quickly next slide um so we're not going to get through this now but the fundamental things we have been discussing what scope this draft should be having in terms of multiplexing and um we were advised that depending on which kind of different transport streams one would use one would one would need to have different alpns one thought was that we just defined this for RTP over quick only and don't allow other media types in so that there is no question on uh with which congestion control to use how to prioritize different streams and packets across each other but then there was also some discussion on whether one should have different multiplexing schemes and one interesting question that arises from all of this is um how one would uh cope with this problem with this multiplexing um now we have been and how to"
  },
  {
    "startTime": "01:56:00",
    "text": "demultiplex on the receiver side and who is going to define the framing or the identification of different logical streams or flows inside for example quick datagrams or inside quick streams and and how that would happen assuming that you might have different applications that will be mapping things to Quick data diagrams uh between the same two endpoints and it was we originally proposed a session identifier we discussed a bit whether the usual UDP based multiplexing could be used but none of this seem to be uh fully satisfactory so we have been doing some thought experiments I'm not going to the next slide now we have been doing some thought experiments where the web transport could be a suitable uh alternative as as a multiplexing scheme but that seems to have other limitations uh into which I don't want to go in in the interest of time right now but maybe rather Reach Out offline to some of the uh web uh web transport Forks to find out what these implications would be skip the next slide that just takes us too long um in the meantime I updated the first bullet on this side on this slide for um that we probably just document something for S frame for for the MTU size issues we are looking at further topology considerations and then next slide to conclude um we need to think more about multiplexing as I just said we have had some comments that we need to be more precise in some places which we are working on and then we have the usual last concluding bullet working mobile Spencer on STP signaling and Etc perfect all right um I sorry Spencer I'm afraid we the other stuff I mean you want you want to try to talk in three minutes thanks much for the feedback"
  },
  {
    "startTime": "01:58:00",
    "text": "uh thank you for that opportunity and I will uh probably take two um if I if I could uh execute a move next slide next slide this uh so this is what I was talking about with uh making sure that I understood what the scope of the uh RTP over quick draft was uh figuring out what a uh AVP profiles to register has been easy because every time I decided what we were going to register somebody else made another suggestion so I had the starting the the starting proposal was mine the top line then we moved to just doing ABP avpf then we said oh good I think several of us figure this out at the same time oh we need to prepend uh UDP to that then we said oh we're going to do we need to do stream dgram and shared uh and then uh most recently had the conversation a little bit on the uh on the uh mailing list about uh whether we needed to Define TCP quick RTP avpf to allow TCP ice path so this is basically if I do my ice lookups can I you know and I don't get anything back for quick but I do get something back for TCP can I use that and that was the uh that was the question you know I had two questions for the group which are better on the mailing list anyway do people understand that last one and do people agree this is why I would like to adopt this draft so that we can make some consistence calls and nail down the scope and a few things like that if you show the next slide it will be fun um because we're also talking about"
  },
  {
    "startTime": "02:00:00",
    "text": "quick doing quick congestion control uh we think we figured out how to do this and uh we you know if I we need to figure out how much RTP information we're going to be able to replace with quick information and not that'll mean theoretically I mean in practice uh and that Loops back around to what AVP profiles to register uh this this concludes my abbreviated Ted talk thank you for coming and I will see you all at the interim oh I I was going to say that this just looks like like that's the leap like I think there's a ton of things that we need to hit here like like how you identify the flow IDs in the STP that are presumably going to be used and how you end the negotiation of which congestion control you I mean like it seems like when I go and read the RTP over quick draft a ton of the thing that clear like like most of the things that you would need to negotiate to make that draft work are we don't have a way to do in this at all yet so I I think this is barely started that we should I think I don't know how we're going to move forward on this but it's it this is this is not at all ready to sort of adopt quite yet I mean it's missing most of what we need here so we need to get a bunch of those in and I apologize for not having sent comments on the list I will try and send stuff but yeah yeah yeah yeah yeah yeah but but fair I I just think it's I show this in the comments but there's a ton of stuff here we need to figure out how to do and the the which what the string is at the top is like yes that will be a bike shed discussion but it's the least of the issues yeah and we'll end I had more slides in the presentation so I'm aware that there's more than one thing today so all right so that's the last slide in uh started out with requesting uh that the chairs uh considered a call for adoption and now okay uh"
  },
  {
    "startTime": "02:02:03",
    "text": "all right so it sounds like you're not actually in fast production yet are you still have some good options because we make I am requesting adoption I'm requesting that you all do a call for adoption that would that would be Focus thank you Colin Colin apparently colonists thinks we're not ready yet so I I guess I don't know if I said that or not I forget but I don't think it's ready yet is my personal opinion but do it okay all right um I guess uh Bernard and I will talk about that or sadly we did not have enough time to talk about this so uh I apologize for that I should have kept more control over the previous conversation and but uh we will follow up on the list and we will have an interim and possibly also a site a virtual side meeting about aspirin which we'll also announce on the list uh and thank you all for coming and uh see you around the meeting um"
  }
]
