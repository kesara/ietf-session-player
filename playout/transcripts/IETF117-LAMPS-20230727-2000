[
  {
    "startTime": "00:00:04",
    "text": "there's a couple chairs in the front here for those people who are just hanging out in the back. And there's, like, by the pole, the whole middle part of that rose open. So you should be able to find seats. We're gonna be cozy in this little room. Mhmm. Yes. Not late enough. Yes. Okay. Let's go ahead and get started because by by my computer's clock, it time. This is the note well by Thursday. You've probably read it over and over and over, but The the big thing is, remember, these are your rights and responsibilities to participate here in the IETF. please treat each other with respect. And, you know, You can certainly disagree with an idea, but doesn't mean you attack the person presenting the idea? we have a long agenda. we will probably need an interim we're gonna do the best we can. This slide contains things that have moved along in the process. The first one actually is now has an RC number. And then the rest of these are with the ISG or the RFC editor, we put them on the agenda for the authors to share anything that is happening, that that is causing changes to the documents We're not talking about adding commas. We're talking about you know, things that the working group should be aware of."
  },
  {
    "startTime": "00:02:03",
    "text": "So that will be the the focus of those discussions And then The next grouping is is p kicks related documents, and you can see a through j, And then smime related documents. a through f, And then documents that people want to present for consideration for adoption. So we've got a lot here. Please focus on the the things that are big changes and not the editorials. Are there any agenda baskets? Bernie. Bernie, we can't hear you. Okay. Yes. turn the micron. I have to leave after 1 hour for another side meeting related emails. So I fix, grateful if we could discuss and to end user document before that, and I suggest together with the head of protection because those are integrated. Okay. How about we do that right after the documents that are with the ISG Would that be soon enough? I guess so. Yeah. Okay. Great. Alright. So we did not receive slides from everyone, I'm assuming that means they can summarize what's going on without slides. let's see. cruise first."
  },
  {
    "startTime": "00:04:09",
    "text": "So, Hendrick, you did send slides. There's also not. Yeah. So I did send some slides, and I'll I'll do it quick. there is there are no no major changes since so next slide, please. is the wrong slide. -- slide deck. No. This is -- This That's for later. I is this lightweight? Is that what you called him? I'm not great yet. Yeah. Yeah. Okay. Okay. So next slide, please. This is about 3 documents that are in the RFC editors queue. the CMP algorithms is there since, I think, May last here. Already, they are in a cluster. there is some minor minor updates to be done during of 48. But then they they are currently proceeding through the edit SQ. Next slide, please. Same with CMT up CMP updates. we did identify since they were approved in in June. two issues that were discussed on the mailing list and will be fixed during all forty eight I just added the links to the mailing list. the 2 topics. And one general thing -- Sorry. -- that yeah. to to address the request from the AD"
  },
  {
    "startTime": "00:06:02",
    "text": "to provide a 4210 bps and 6712 bps to the section 1 of the document to just let the readers know. slide, please. Next the lightweight CMP profile also in cmmrfceditus queue the only thing next to a typo I spotted is I would like to introduce an abbreviation in the a headline of the document because it came out that other documents wanna reference this one. Client abbreviation and not to get confusion, I would like to to introduce this abbreviation briefly in the document. There is a force document in this cluster, which is also in the editus qcmptransfer CoAP transfer for CMP. This is in the ACE working group, but also proceeding through the edit dispute. Thanks. That's it. this community really needed another acronym. is not here. Right. because we put it down here. Oh, yeah. Okay. is anything from Corey on issue mail. Alright. So CA issue mail really had no substantial changes."
  },
  {
    "startTime": "00:08:02",
    "text": "after working group last call. There were 2 minor edits The first of which is a little more specificity around what exactly certifying email address is so some language was added to clarify that that means that an email protection you can use added And there's 1 or more email addresses expressed in the sand either as a RFCA 22 name or an SMT SMTP UTF UTFA mailbox. And then there was another change that was requested and that was to clarify that certification authorities that are implementing the spec still need to carry out the appropriate validation they were doing previously or whatever's specified by the certification policy. kind of this CAA checking isn't a substitute for actually performing the validation steps. So pretty small changes, pretty surgical, didn't know I think it involved a extensive treatment or a a slide deck. So pretty much about it. Any questions? Alright. Thank you. Cool. Alright. DKG, are you talking to Header? Hello. I'm Daniel Conenger. I did a process hack. My slides for header protection, which are here at the top of the agenda. also contain, the stuff about the end to end mail guidance document, which was was at the bottom of the agenda. but I will put in both of them now. there. I don't see them. You there, they are. don't see you know, So right. Next slide, please. Short slide deck. So the head of protection draft, which is what I'm supposed to be presenting right now,"
  },
  {
    "startTime": "00:10:00",
    "text": "had very minor knits cleaned up during received from working group last call. which put it in the missing references state. Because it's waiting on the end to end mail guidance. document. Next slide, please. And the anti mail guidance document has had substantially more revisions and more feedback since the last IETF, which is great. Thank you for the folks who commented on the list. Since the last IETF meeting, We added guidance to that draft on draft messages. on local certificates, like, how you deal with your own cryptographic material. certificates guidance about intervening mail user agents that is forwarders, typically mailing lists, But maybe if you're bouncing a message as well, and some commentary about having external sublease resources in text HTML parts. and how problematic that is. We don't really know what that means for signed or encrypted mail. If you have assigned our encrypted email, and the email has text HTML. and that text HTML refers to things from the Internet that We don't know what they are. It's not clear what the confidentiality or authenticity properties of that rendered HTML actually mean. So there's additional text in there. If you think any of sounds pretty weird. You should have read the document. or you should have read the document maybe, but start now, it's better late than never. We also identify that there's a lot of additional things that we don't understand. about about properly doing end to end encrypted mail. And of it we understand is problematic, but we don't have solutions for. And rather than have this document last indefinitely as a forever undone specification because we haven't figured out encrypted email for the last 25 years, we thought we would publish document and move all of the to dos into sort of statement of future work as an appendix. So that a is a is a hefty appendix. It's worth looking at. If you're interested in"
  },
  {
    "startTime": "00:12:01",
    "text": "an encrypted email. I encourage you to look at those. There's actually bite sized problems in there that you could work on separate spec for, but we don't wanna put that all in the current draft. We want this draft to be out. way, we can avoid the misref. get the head of protection draft out, and we can put the substantial useful guidance that's in there out as an RFC as well. So Russ Elliott and Steven, in particular, gave the most substantive feedback. Steven, I'm looking at you. I'm hoping that you give me responses for my responses to your feedback? at some point soon. But it you know, the the thought here is this document should be in working group last call as well so that we can get that and the header protection document out of RFC editor's queue. Next slide, please. before we move on real quick, one thing we have seen refs used in HTML is in signature lines where people like to put their logo, and they just fetch it off their website. Yep. Right. And so It really isn't part of the content of the message. Yep. But it's certainly covered by the signature. Yep. Yep. And it's pretty clear argument to me that we should be telling people if you're sending a signed message or you're sending encrypt the message. don't do that. Because it's very difficult for the receiving mail user agent to understand this part isn't part of what people would care about being signed. that kind of semantic is something that receiving that users can't do. Steven. See, but I I I do you want me to respond to your response? I mean, I'm not hearing that. I mean, done in one sentence. Yes. Click go. exit. Oh, by me? Yeah. So, yeah, how do I feel? I'll say I'll reply to your mail. I think the only substantive comment the the only major comment I have left is Do we know what the implementers of the most commonly used"
  },
  {
    "startTime": "00:14:01",
    "text": "male user agents. Think the guidance draft. And if we don't, Is it okay to go ahead anyway? mean, this draft has been out here I in the Lance Working Group, they're aware of it for a while. I have tried to scare up implementers to take a look at it. And so if they don't respond, I don't know what to do. Like, the lack of response if the lack of response document, I I'm at a loss. I I looked to the IETF for guidance on what to do in that situation. me just say what the chairs have done. k. Okay. We've reached out to several of the big implementers got when this work was beginning buy in, and many of them change jobs. It's just the fact of where we okay. So I also don't I also to be clear, if a if a big influencer comes along after this document is released and says, Woah, woah, woah, this is all wrong. Here's what we should be talking about instead. I do not object at all, and I hope the Lance working group would not object at all to there being a rapid biz that corrects anything that's wrong. but blocking it indefinitely -- I'm not I'm not asking for I was I I phrased the question. If if the working group and and if the chairs think the working group is okay with going ahead. We tried didn't get we don't know that the xflow is right. States. that's the decision, then okay. I'll I'll I'm not trying to block out something. I I just we do know that that They do not all follow all the guidance. Yeah. That's correct. Yes. We know that. Yes. Yeah. Yeah. But It just seems hard to be kind of giving this really well intended guidance, but not knowing how much of it might ever get It's it's definitely odd, and it was a great comment, and thank you for bringing it up. ago way. If you have better ideas what to do, we're all ears. Do you have another idea for what the word what word begins with l that could go with the name. No. No. Sorry. I'm not logged in yet, but just a quick"
  },
  {
    "startTime": "00:16:00",
    "text": "answer to Steven's questions, we received some feedback that some comments might be coming from one of the implementers? I cannot tell who the implement is. and Yeah. Right? Do does this hypothetical person have a timescale? That's what's gonna ask. Thank you for asking. For the record, we don't know. Okay. Yeah. Yeah. let me just run through these. So the future work section that's in this end to end mail guidance document has a number of things. As I said, this is, like, a great list of things to work on. If you work on email, consider trying to solve some of these problems in a future draft. ones that I have highlighted in yellow here are ones that are explicitly called out in in the introduction as The we think are particularly relevant thanks to Elliot for pushing it to be the document to be more upfront. about the fact that there are gaps. I could talk indefinitely about all these points, but we have a huge agenda, so I'm not gonna through them. I'm just pointing out that there is lots of work to be done on making sure that we have usable antenna encrypted email, and that is not complete. yet yet. Next slide. So we would like to the authors would like to see this wrapped up. and put out the door. And so we can continue to do the remaining work that's left. So any more comments? I'm happy to take questions. It's it's Stephen, would you formally reply to the last call? because right now, the state of the mail list is that you have Thank you. Okay. I you're on the floor? One second."
  },
  {
    "startTime": "00:18:02",
    "text": "I figured out what happened with the agenda. The agenda that's there is actually a little bit stale. There's the mailing list for the one that's on the 117, and that's why NFVQ is in the wrong spot. Yep. So item I here is actually with the ISG. Yep. and because the war the working group last call ended on 12th, we called consensus it's been pushed forward. Yeah. Okay. So Yacht pulled the one from the the the Well no. From the editor. the the the slide deck. Okay. So I think Henrik is is back to talk about the Biztalk. Yeah. So I'm back with a 4210 biz and 6 7, 12 biz. The 6. Next slide, please. 67, 12 bps, nothing to report. We incorporated the changes from c from CMP updates and at least of now, there are no further to do so. The document is waiting for 40 4210 biz. Next slide, please. So these are the changes we did since IETF 116. We mainly worked in in a group together with John and Mike, and David took also joined in once on the adding adding support for cam certificate management. We had another try to specify the way how to do message protect using cam cam keys and cam certificates this time. I think we are quite quite close, and we that the the best practice would say from CMS MRI. We did introduce new algorithm identifier"
  },
  {
    "startTime": "00:20:01",
    "text": "Cam based MAC parameter. this is kind of following the the practice of a password based MAC parameter and Diffehan based MAC parameter as it is already in 4210. then we introduced an infotied value to transfer the cam ciphertext and we introduced chemotherinfo structure to provide context information for the KDF. Next slide, please. Mike? Yeah. point to it. It's actually not on the slide, Mike Ellsworth. It's not on the slide. Maybe it should have been wanna the change here was that we undid the HPKA usage. So I just wanna call about explicit case anyone's a big HPKE fan. I think should have been HPKE based. that that is right. We got the guidance from the working group back in IETF in London that we should use BKE. We did a try, but we step back from that. I'm Also, because of quite struggling with the PKE for this specific use case in in in CMP, and as a decision in for CMS, MRI we also feel like this approach is much more appropriated because we do not set up any sessions and have much communication channels. So here, we see the ACE one structure, we introduce so the cam password based mac parameter where we have the KDF, the KDF output lengths and the MAC algorithm in Then we have the info type value, camciphertext info to transfer the chem algorithm identifier and"
  },
  {
    "startTime": "00:22:00",
    "text": "ciphertext output of the cam mcaps, which can be transferred either in a general message body or in a arbitrary message header in the general info field. So we'll see on the next slide how how how this could work out. And then we have this chemotherinfo sequence which has a static string, which should be CMPchem. Then we have the optional fields from the message header. which is transaction IDs and the nonrecipenons. So as we do not know whether the message is making use of these header fields. They are also optional in the sequence. Then we added the cam output length and the MAC algorithm identifier. And we did add the cyber text itself because if we thought if there is no transaction ID sending on 3 seed nons, the context would not be really a context information on the PKI management transaction. But this is something that we would like to get feedback on If you copy this from the document, you have colonequalsinsteadofcolonequals. soon. Okay. Okay. So this slide shows How the the the cam based message protection would work if the client owns the cam key. So if the client opens the key, the client first have to has to send a general message to the server to request a cam ciphertext In this message, the client would provide or could provide its can certificate to the server. The server could then provide the camp cipher text in this new camp cipher"
  },
  {
    "startTime": "00:24:01",
    "text": "tech info value in the response message. then the client could encapsulate the shared secret and by using the KDF. provide a shared secret key for the MAC. And then since the request, it wishes to send here. The example is the initial request message. with a Mac based protection using using that shared secret key. On the server side, the server can then use a shared secret from the previous step and derives the same shared secret key to improve or to validate on the Mac based protection. And as this is just the the key derivation for the for the client side. the server is free to use whatever credentials it has for message protect to And this shared secret can be used on the client side for message protection for all further messages of that PKI Management operation. Next slide, please. If the server site has a cam key then it it could either make use of this initial general message from trip, but but It could also The the client could also incorporate the ciphertext info type value already in the header. general info field of the initial request message if it already owns or has the cam certificate of the CNP Server. And then the thing works like on the previous slide, And finally, both mechanisms can also be combined. If both sides have a cam certificate."
  },
  {
    "startTime": "00:26:00",
    "text": "Thank you. Questions? You also would like to get much revenue and feedback on this approach We specified this hopefully well in the body of the text, but also with some more detailed an additional appendix. Yeah. I was I was just it's John from EntTrust 1 authors 2. I was just gonna point out as part of our hackathon, Alexander, actually did implement some chem in CMP. So there is an implementation. So we're looking forward to having some more so we do some interop. But from what I heard, he said it was pretty straightforward. So And yeah. Yeah. you wanted to point that in? Yeah. Thanks for the addition. Okay. The next Topic since I don't see anyone else in the queue. Thank you, Hendrik. Is The updates to pkcs12 for PBMac 1. I did not get any slides on this. Is there any update? k. Hearing. None will move on. Next is Michael Richardson on 70 30 CSR at 1st Okay. Hi. Thanks. Can I have slide control? I can do that. There we go. Wonderful. Thank you. Okay. So the story so far, I've done this slide before. we did this. I noticed actually that that it was exactly July 27th last year that we did this last time in Philadelphia. And we did we had"
  },
  {
    "startTime": "00:28:01",
    "text": "assumptions and some documents, both certain things, turned out to be wrong, and CSR attributes were poorly defined, and We've now gotten to the point where we have a document that I think at least defines everything as well as quickly defined there with some examples. I have some running code. Dan put some examples in with some, I think, from his running code. And we could, at this point, I think, easily go to a working group last call and be done by the next ITSF But So this is a little bit but just to remind you what the CSR look like, which is basically the thing we're trying to build in. We have only addressed the problem of the attributes, and we haven't addressed the question of of the subject there. the subject public key info, of course, gets created based upon, you know, other requests about what kind of keys you want, how big they're gonna be, what signatures, what shot, what hashes and this kind of stuff. And so the question is, well, what do we what do the subject need, And so we could do some things when we thought about, you know, some interesting hacks that would let this. But David had a a a better choice. So I've yeah, you can read this as well, but I just said that. So his suggestion is, well, what if we just, in fact, instead of trying to make up a description of what the CSR is supposed to look like. What did we just send 1? Just this is a thing fill in the blanks. and send it back to me with the right place. And so this is an example of what it might look like in a kind of YAML or whatever, like, presentation, highlight presentation. So in this case, you can see the subject says CN equals blank. so you better fill that in. So you have to somehow have a way of distinguishing hoping all of your fields blank is never valid. there, and I think that's true for most things."
  },
  {
    "startTime": "00:30:04",
    "text": "the serial number because someone else is gonna do this. One of the places where we think that this is by the way, that's the X Five Twenty serial number, not the ticket serial number, just to be clear for everyone. and, you know, challenge password, value null, another place you fill it in there. One of the places we realized where, actually, this is valuable. We actually do need to set subject because we need to set the subject the serial number or some other fields is actually when we're creating IDF ID certificates in a in a factory. And actually, there's an effort within the NCCOEs IoT onboarding to do exactly this and Right now, it's underway. So that's the 2nd approach. Right? So allows us to specialize in such a DN, And would, of course, be lovely if that was the only way we needed do it, and you can in fact do anything. I don't have I had to code my own CSR attribute library based on on on ASN objects. Whereas I I probably could have easily used the CSR code that was in the library already. So then it becomes like, well, maybe we just have keep the old mechanism for the old uses and in a greenfield situation like ID provisioning that you can avoid all of that and just do this new as a and that's discussion. Really, that's it. Anyone have concerns with this approach. Sean's coming to the mic. Hi, Mike. probably help start someone's problem. So it's great that the whoever this David guy is is just this idea of returning a CSR. That's awesome. That's already in an RFC, and I wrote that one. So that one's great. What what are -- So are we done? Just We'll just stop."
  },
  {
    "startTime": "00:32:01",
    "text": "I I think I'm gonna shut up and say nice job, guys. No. Which which RFC is it? I don't know. Okay. I have to look. Alright. Send it to the list -- Yeah. -- and So -- and make sure you log in to me to go. He's leaving the room? No. Anybody else? He's he's wearing a nomcom colored can't Apologies. I think I may shirt. So he misplace my phone. It's r c 8295. 10 to 8295. Alright. informative, so it's not the same. But it's it's Yeah. Okay. Alright. So Okay. maybe we just need to reference that and and would still publish this, or should we just throw it all away? there and we Sean, it it's just shaking his head. doesn't know. Alright. Well, alright. Let's take it to the list. So Yeah. Take it to the list. And Anyone else That was David Van Onahyme, I have to say his name right, and I think he's in the list somewhere. Yeah. Ben. Yeah. Go ahead. I'll get your name. Mike, like like I said in in the chat, This is a A collateral, of common, not directly related. I like to run ascended one staff. through 3 compilers. such as sN1c. and they unfortunately do not support this New Ish ASM.one with all those capabilities. It will be true. I'm I'm sorry. I would love fix that from you, but 70:30 already had that bug. So I don't have a way of describing what is necessary without using that. and 70 30 didn't either. So so"
  },
  {
    "startTime": "00:34:02",
    "text": "I'm with you. I had no idea what any of that meant. and I had to learn. So, like, literally, when I was writing my code, I'm like, you know, I have no idea what this means. I was just guessing based upon the examples I had. So, yeah, it'd be great, Yuri. I don't have an answer you, and I I don't think there's a way for me to to change the s n one to be both compatible with what's out there and express the what needs to be said. without those at type thingies. Understood. Understood. Thank you. And to Danielle, the it's not fixes. It's a very significant amount of enhancements. which means I have not seen someone to step up and volunteer perhaps you would like, over Oh, don't see anyone accepting the Arm twist. Okay. Back to the list and somewhere is the that RC is mentioned. guess, in the record, maybe someone to write it. Thank you. Let's Okay. Now I'm the Kia Testation stuff. with which has been in flight in a whole bunch of different ways. So I think Mike Ellsworth is gonna talk. Right?"
  },
  {
    "startTime": "00:36:03",
    "text": "Okay. So this is work that is new in there. I think this is the first time I'm presenting it, but it was on the agenda in Yokohama Correct. Yeah. Okay. So this is the 2nd round of slides of the first actual presentation. So we are trying to do carry at the stations and CSRs. At the stations in the full Wamps are rats sense of the term attestation. ve Next slide. The the the driving motivation here is a cab forum change. driving motivation is Starting a month ago, June 1st, Public CAAs are not allowed to issue code signing certs unless there's proof that that private key is in hardware. this is I understand cab doesn't want Windows binaries yet. Tim's on and on doesn't want Windows binaries signed with p12 files or Windowscat cappy keys that are not hardware backed. The problem is we don't have good automation to make this run smoothly, and so the public c's are So, I mean, Tim's gonna keep nodding really struggling to actually do this validation in a smooth and automated sort of way. So we need, like, the this is the this is really what's this mechanism, hopefully, is useful beyond this use case, but this is really what the time pressure is. we need a way to carry these in CSRs so that your HSM can attest to the CA at CSR time that this key really is in hardware. And, yeah, I'll then all the once you can do that, then all the other attestation y stuff, platform attestation, Kia to you can sort of leverage the whole ecosystem, and the CA can pick and choose what it wants to validate from Next, oh, Question, Hurry? Actually, 2 quick ones. 1, would the hardware token such as ubiqui, or pay for card card a account from the CAPP point of view as HSM. or do they require"
  },
  {
    "startTime": "00:38:00",
    "text": "are true through HSM. Well, so, you know, true true HSM depends on how much you like your HSM vendor. But it would be compliant with the requirements for issuing a code signing key that complies with the cap form requirements. My only capital bar is just as if it's module. Yeah. It the It's a Fipps level thing. So, you know, if you -- Absolutely. -- Android means phone, that's technically a lot. I did not get this discussion. So, basically, you are saying that as long as the hardware can, such as ubiquit, is Fipps certified, it is okay. Is it correct? Level 3. Level 3. But Got it. Thank you. And are you thinking about quantum a resilient signatures. k. Let me take those questions 2 at a time. So the Yeah. So you you do raise a good point there that this draft has to consider that that'll get in a few slides, there are, like, a bajillion different key attestation formats. depending and if if we are considering that we're making no assumptions about what kind of hardware we're talking about, we have to support you know, opaquely any attestation format. Like, literally could be an Android device. Quantum resistance? I mean, yes. But, again, not in scope here, we're just trying to opaquely carry whatever the device produced. Alright. This is a Pedancic comment. So PIV and CAC are Phipps level 2. certified. They are hardware, but they're level 2, so they won't qualify? 3. I don't know what Ubiquis HSMisurf They would not qualify. -- If it's 3, I guess, qualified but I don't know. Yep. Yeah. The point is we're this draft is being completely agnostic about all of that. there is an attestation blob, we carry it. Don't really particularly care what it"
  },
  {
    "startTime": "00:40:00",
    "text": "just as a bit of brief background, we don't follow this as closely the motivation of this ballot is the previous security level was a end user device with form factors similar to a USB token. So going to fix level 3 is a Quantum leap forward. card looks in Phil Humberger. looks to me like if you go this way, then People are It's gonna be a HSM, in most cases, that's controlled by the CA rather than the end user anyway. Yep. because, I mean, like, I didn't spent yeah. I cannot buy a fixed 140. 3, device for the price of what I pay for my code signing certs. Yeah. No. That's absolutely true, and that's actually part of the motivation. The the desire to have everybody sign their code is incompatible with every everybody having and purchasing and refreshing regularly a fits level 3 compliant device. So, yes, there will be some somebody else will probably be holding your key if you can't avoid an h s if you can't afford an HSM. I would and suggest to postpone the debate about whether the platform requirements are good, bad, or whatever do. actually get to the real point. Get Next. Next. Next slide. Okay. So the status of this draft, we have been doing a Peakxtrotation design team which has a huge pile of people who represent all the vendors you would sort of expect this work be represented by all the big HSM vendors and number of the big CAs. I've really tried to hold an open process here and invite anyone who has an interest of participating. So I do hope this work is representative of all the people that should be representative of. We used several input documents. So these are all"
  },
  {
    "startTime": "00:42:02",
    "text": "All on the agenda, they're certainly all on the lamps opened on this this current incarnation of the draft is supposed to replace and supersede all previous key attestation CSR extension estuffinlapse. And I believe at this point, all the authors of these things maybe except Mike St. John's have publicly said that they're okay with being replaced. What man? Okay. So I think we actually do have agreement from all the authors that we can go ahead and do the queue jump thing. But I saw the last the last point on that slide is we're doing regular meetings. They are Monday, mornings, open like, open invitation email, the lamps list, we can shoot you the the outlook invite if you wanna participate. So here's the model. We're taking the rats So we this this document fully complies with the rats architecture. We've taken the rats sure. Sure. terminology concepts. That was a bit of a rework for a previous version that was based on t terminology, we're now fully completed based on Rett's terminology. We're using the passport model. The idea is that the CA or RA is a relying party that this model gets to be completely agnostic about what the content of this attestation is. we're just providing a shipping container. You'd stuff your attestation in it. It comes along, this this CRARA forfeifts it out. handed off to a verifier. Conceptually, we're imagining the verifier would either be a utility provided by harder manufacturer or a library or I mean, maybe maybe an external component, maybe a library the CEO wrote. Maybe maybe part of the CA, but conceptually, we're we're allowing it to be separable. So the CA doesn't actually need to parse,parse this thing. It's just some bits, and you can see knows how to take it out and hand it off to whoever knows how to check There is the question of answers. Do you, like, attestations in general want some concept of freshness this is a fantastically philosophical debate with CSRs because CSRs often want anti freshness. It's often desirable for CSRs to be reusable."
  },
  {
    "startTime": "00:44:01",
    "text": "for example. So this has been a phenomenal debate about what the concept of a nonce actually means in the context of the CSR. in in the context of a certificate request protocol like CMP or ACME, you probably do have a meeting concept of the knots. But in general, with CSRs, you don't. So we've done some fancy footwork around that concept. Next. There are a lot of attestation formats. are trying to be very not opinionated about them. Next. Yeah. There are lots of different accessorialities, TPM, Arm, PSA, Dice, Yeah. We're so this this leads to the the decision of how do we actually what is the correct way to opaquely carry all of these things? So, definitely, we all agree that it needs to be treated as an opaque blob We definitely agree that the attester and the verifier need to understand the evidence form up, but box in the middle of the CA and RA do not. hence the passport model. Next, the this brings to the open question, though. So you would you do want some sort of type value pair. That that is really the only content of this draft is that the CSR attribute will be a you can specify what the type is gonna be, and then you provide the bits of it. the the open issue then is what exactly is that type type specifier, should it be an OID? should, should we, you know, be able to register Oids for public common attestation types like webauthn as a wrapper or and then allow proprietary to station vendors to register their ownoids. to say this is and shield attestation inside, or should we use the wrap conceptual message wrapper. And this is this is sort of a philosophical debate. I think we probably need working buy in for. The the design team started So I'll just I I see that she put in the queue. I will note that the design"
  },
  {
    "startTime": "00:46:03",
    "text": "that is the HSM vendors have a strong preference to stay with ASN 1 in p kicks modules. which is how this group got started in the first place. If we were amenable to just using, like, webauthn or Rhett's those match rapid that Robert directly, then we wouldn't have done this work in the first place. So strong preference that we want to stay within ASN 1, which is which sort of implies that OID is the way that the design team here wants to go, but I think this is a debate needs to be had by the working group. I can take from the queue. Yeah. Hank in the room. It's in the queue. Yeah. I'm trying to oh, it works. Finally. Yeah. Sorry. I'm I'm I'm close by. I'm in the building. Unfortunately, not in the room. Sorry for that. I will be in the room later. Yeah. I I see that so I'm taking the head of Thomas Fazati on here was, like, a strong support of doing the message rep idea, and I can see why because you're doing the back background check model. And and and I have to I think I think we have to have a good understanding of the pros and cons of staying with the oil based We have an oil based identification scheme also in in the co room because we can't get it out there. It's just tool fossilized in there. But I think there are good reasons to really take into a consideration this year. CMW. that the discussion really has to be, I think, orchestrated and very, very prepared. Watson. Watson Lad, Akamai. I guess I'm not sure why there's a difference here. because you always throw the integer in as the last arc complement of an arc and make it the same I do think when in terms of rats, like, You're not if I understand the problem correctly, you're not really interested in all the wide world of Adestations. You're interested in very"
  },
  {
    "startTime": "00:48:03",
    "text": "some big set, but a subset of them for the ones that come from HSMs and tell you Yes. This key was generated in the HSM. It matches the requirements of the cab forum. Or are we thinking that down the line, we might want even more kinds things in alignment with rats would be great. Yeah. So you've hit another philosophical sharp edge here, which is are we designing a a mechanism specific to the cab requirements, or are we just doing here's how you put a monetization in a CSR. I I think there's varying points of view on that question. In short, I think what he's saying is this group of people don't agree on whether they're just solving for that one point requirement. or they're trying to address the broader requirement Well, this one is even that group that you showed previously already has a number of different at the station technologies in use today. So there is already the question of, like, how do you indicate which one of the those you are passing around, so But, of course, as Mike said, you need to somehow indicate that type. What is the encoding for that type? In yet at pros and consents, we haven't figured it out. So further work, I have one more slide? 2. Right? Right? Yeah. So the other other open like, that was the big open issue, some other smaller open issues, currently define 2 attributes in a test attribute and then a test search attribute. So that's one of the one of the requirements here is you you you you should be able to put multiple attestations into a CSR. You might have a platform at a and a Kia test station,"
  },
  {
    "startTime": "00:50:02",
    "text": "or you might have multiple Kia test stations looking at queue. You might wanna test your key on multiple algorithm chains. for example, So we so you we definitely need 1 or more attest attributes. we're currently defining 0 or 1 attest CERT's attributes, so that's a CERT bag of all the certs that may or may not be useful for validating these 1 or more test stations. There's been some debate about whether we should stick the cert chains inside the attest attribute and only define one attribute, which seems cleaner because then you can associate search chain to attestation easier But if you have multiple attestation that share a cert chain, then you're duplicating the certs, And, yes, the last point, their size you're gonna embed multiple potentially long search chains inside the CSR. Won't that make the CSR huge? Yes? which is the reason for not duplicating them. And then the other sort of related debate there is Yeah. some attestation statement formats. Like, I'm looking at web often. already carry their search inside. So for us, they'd be inside the opaque blog or has inserts, other other formats like TPM, ATPM a test. do not, the cert seem to be carried separately. So that's always gonna the cert bag is always gonna be optional. is a there's a bit of fancy footwork here. I I propose the way we have it is is right, but I wanted to raise it for attention. And there's one more that Hendrick raised, which is not on the slides proposed yesterday, which is this mechanism isn't CRMF friendly. So I'll need to work work with Hendrick to figure how to make this CRMF friendly. Ned with that Ned? Ned? That's with Intel. So little confused by the terminology where you say data stations. I think that's sort of ambiguous. It's not really defined in the rats architecture."
  },
  {
    "startTime": "00:52:01",
    "text": "if a test attribute here is intended to be evidence, why don't you just call evidence attribute similarly with certificates. it's a certificate chain, just call it that. And I don't know if you can answer that. There's also in the context of the use cases, I don't know if you are considering putting attestation results in some way in in either a CSR or in a certificate didn't see that described in the The the the assumption on that picture is that the CARA is communicating directly with the verifier out of band somehow not not through the CSR. Thomas, do you want Thomas, do you wanna answer that question? Yeah. So that is right. It's evidence, so we could aligned at terminology. I think the ASM 1 dates back to the time before we made the terminology change. So that's a a kind of a leftover It's like, from a scoping point of view, I think this slide also nicely shows the nonsense covered outside And likewise, what would go into if anything goes into the certificate, that is issued by the CA As in response to all sorts of evaluation That's also not described in this document. Could be described in a future document. like the think that was also discussed where maybe for the For specific CA browser form based attestation, there could be some specific details on how these different data could be munched together for certain attestation technologies, Also not described in this document could be done in the future. the X Level 9 sort of extension thing, I think, we're about to have to step into, though. understanding is to make it CRMf compatible. We're gonna have to define an extension that's gonna be a little bit weird because we're explicitly not telling you how to carry attestation in certs, what we might end up having to. Xander. Sandra Temma, Fortanix. We're an HSM vendor in"
  },
  {
    "startTime": "00:54:02",
    "text": "yes, we would like to embed certificates certificate chain in CSR itself, with, yeah, deduplication if possible because of size considerations, especially for talking about larger keys or quantum algorithms or what have you, yes, the word at the station is overloaded. But this is specifically for the the provenance of the signing keys for those code signing certificates Yeah. I I like that suggestion of of stripping out a test station and replacing it with evidence that Yeah. because you you you may have attestation Providence at the stations built by specific instances that need to make themselves known even if they roll up to the same trust chain as other infrastructure. Thanks. I think my last slide just says adopt the question mark. Oh, no. It doesn't. more stuff. Yeah. It does say adopt a question mark. It also says, can we drop the other ones? and it says we're gonna this design team is gonna keep meeting every 2 weeks. So I think I think this work obviously will will deal with anything the working group wants to get this this this work adopted and move forward. There is some time pressure and that the longer this goes, the longer we don't have a good automated mechanism. for it. The next step for the design group is we do want a public standard that test station format that, I guess so the goal of phase 2, and I don't know which group will submit this to, not lamp. maybe maybe rats. we're gonna come up with this an attestation format. so that the CA doesn't need a proprietary verifier. the CA can look at the attestation and know whether it meets the cap requirements, FIFS mode, level 3, etcetera. without needing to to to outsource out to a 3rd party verifier. So that's the next step in gonna be probably a lot more controversial in this. in terms of design. Alright. Don't call it."
  },
  {
    "startTime": "00:56:03",
    "text": "understanding on my tiptoes already. So code signing is all you're worried about here? Officially, yes. all the people on your your authors on your drafts are only worried about code time? just looking for officially, yes. What's your what's your question? So I'm I'm looking at scope creep. Mizu. -- just code signing. Tiz. Right? well. Yep. You should join our Monday meetings. It's their fun. I I I think, like, what's cart so The document defines a transport. and the transport is Like -- The court signing requirement doesn't impact the transport in in any reasonable way. I think that's a policy issue. It it you know, to the extent that it's a scope of working group documenting. I understand what Deb saying, and that totally makes sense. But what you're trying to say is if somebody wanted to do the same thing for another use case, the smart thing to do would be to reuse this technology after it's already been standardized instead of inventing new, and I agree with that. Hello, Sean Turner. I figured out how to get in the queue. So on the first point, I think I sent something to list, but I guess I just wanna confirm you can take the name of the draft that got admit admitted that was mine or not your call, but I'm happy to have you mix it off with this grand group of people as opposed to just me and Carl working on So thanks. Hi. you knew that I was gonna raise thresholds. Okay. I mean, you know, the frost draft is getting through CFRG. and since you bring up the idea of we're gonna have a Fipps thing. please when you write whatever requirements,"
  },
  {
    "startTime": "00:58:04",
    "text": "make sure that we can still use threshold in a mode where through the pits, Part Sure. and there is a share held by the user. because I think that that's probably gonna be a use case that you want to end up supporting because you. That's just the right way to do it eventually. I don't know what you're talking about. Can you fire me some re reimaterials on list? Yes. Yes. So I'm channeling Carl. walls She says, defining an extension does not mean for search the prior draft. ought to have had ought to have language to support extension or attribute, which was the point on the list. No code signing is not all that is of interest to the group at large The already accepted draft predates the code signing focus. Yeah. Good point. Yep. Well, when does Carl not have a good point? Yeah. I think I think I am the 3rd or 4th person in a long line of this ought to be simple and you try to do and it's Okay. Is there anyone who objects 22 us having a call for adoption of this document. k. Thank you. Can I sit down now? You can sit down now. Yes. What's next? Kindly with inserts. Okay. There's a the lithium search or the next topic. I did not not get slides, which I think means there's not much to say. That's perfect. Yeah. Yeah. this will be this will be very quick. still waiting. We haven't updated the draft in August September, I'm planning on putting some examples in the certificate that pause very nicely."
  },
  {
    "startTime": "01:00:02",
    "text": "hooked me off with, and then get every vehicle and press the button, magic happens. but that's it. So for both of these drafts, we'll get them aligned and get them going, and then we're we'll we'll feast in profit once we actually get some wins. kyber certificates. That's the other one he mentioned. again. The next one we've already talked about because it went to the ISG. And then we have the X Five 9 policy graph from David Benjamin. I did not see an update for that. And then we have The CERT binding who's talking, Ali? Okay. too short. Alright. Yeah. Super quick. From the last meeting, we generalized it. So now it's just certa related to certb. So that's how the whole draft is written, and then we have a use case section at the end that discusses what to do for PQ in traditional. because that was requested. We made a couple of clarification edits that were requested on list. And as hackathon, Brendan Zumber, had an implementation running. I don't think we had any interrupt yet, but that is the next that we're gonna try to do. So That's it. Okay. Any questions? Alright. Now we're moving into the SMOM related documents. Kyber. Julian, I think, is gonna speak Yes. Can you hear me? Yeah. Barely. Yeah. Okay. So, anyway, everybody. a little update on the cabre, CMS, the graph services. So Actually, the draft hasn't moved since last meeting."
  },
  {
    "startTime": "01:02:02",
    "text": "And I'm currently working on the implementation to generate some test vectors to that will be included for the next meeting, maybe So that's it. Okay. Thank you. Thank you. The next one's sphinx plus. Baz. Do you wanna talk, or do you want me to do Okay. Yeah. The document here has had one update, which pick the the ones that we were planning to support. We're waiting for the Sphinx team to tell missed whether that set is the ones that are gonna move that they want to move forward. And if whatever happens there is we we will align but that's our crystal ball is what's in the document. MRI. So, yeah, so this is the key encapsulation mechanism. can go to the next slide, Russ. So it's tomofolemy Russ and myself. I'm not really gonna go over the slide much other than to say is It's being used by RFC 59.90 bps. We're also using it in our composite chem draft. And we took inspiration from a in it of this draft in the CMP draft, which Kentrick already talked about. So I'm just going on to the next slide Yes. So this draft in working group last. The working group last call ended on 14th July. So all the issues resolved on the mailing list except one. This was to do with the UKM field. It's an optional field. But In cases where an API or a chem algorithm doesn't support or Yeah. It's not needed. Then there are some questions about that. So that that question was raised. And then there was kind of the"
  },
  {
    "startTime": "01:04:01",
    "text": "contract question raised that, well, in some cases, should always support this. So we anyway, if you go to the next slide, we've come up with some text, to try to resolve that that little bit of tension. So I'm just gonna read the one line And I think it's towards the ends. Yes. So implementations that do not support the UKM field should gracefully discontinue processing when the UKM field is president, So that is essentially the rest of it remain the same. Well, we did actually add one little part about the for example, the UK umbrella. You can include a non an application specific context information. I just wanna be clear that this the UKM is used as an input to the KDF, and it's usually for context specific reasons. So If you go to the next slide, I'm trying to do this really quick because I know there's a lot to go and do. yeah, so does that text I don't know if anyone would look at that text other than we just showed it. does this represent consensus and the lamb's working group. So we think David and Mike Jenkins agreeing with that. Does anyone else have comments about that? And if not, what is needed to be changed? So any comments, Or does everyone agree? So that text was posted to the list like, last week sometime? And Since the last call has kinda ended, we're kinda waiting for people to digest it and make sure it meets their needs. If it does, we'll send the document to the ASG. If it doesn't, then we want to update -- that one paragraph. Yes. Let us know. -- That is the only part that doesn't seem to have achieved consensus as of last week."
  },
  {
    "startTime": "01:06:01",
    "text": "Alright, Tim. Okay. Next week you get to tell us. 5990. Sean, 5990. Sound like a broken record. No updates. This document does not not affected by the 59 90 or the the MRI changes that you made. we're just kinda waiting at this point. k. Next. Composites, Oh, another short one. Yeah. I'm here to map. Okay. Hi. next slide. So the call for adoption happened. I I assume most people in the room are are aware of all Okay. followed that debate. So Composite chems past the adoption, composite signatures, did not. Tim, can I put you on the spot to summarize where you think, like, working chair position on is this dead yet? So about deposit signatures or composite gems or what are you putting me on that spot for? Like, you've you've done a spiel already. Yes. Yeah. Okay. Thank you. Exactly. Composite signatures are not dead. The approach that was in the drafts that were put up for the adoption call. People did not like how that was done. composite signatures. Assigning things remains important. It turns out to be again and again, a lot harder than people think. Although, chem's actually turned out to be easier than I thought. So I guess it does happen sometimes. But so, yeah, we're you know, it's"
  },
  {
    "startTime": "01:08:00",
    "text": "there no matter how long you work on it in RFC, it doesn't automatically get to pass the call just because you've been working on it for a long time. It actually has to be the right approach and the right way forward. So we're still looking for the people to figure out what's the right way to do composite signatures for about PQC transitions. So that that thank you, Tim. That explains why we are stubbornly still working on this document that failed it's call for adoption. because we do believe there's a real problem that needs to be clearly, like, there's not consensus of exactly what the problem is and the solution may need to change when we get consensus on the problem statement, but In the meantime, we're gonna continue refining the proposal. So you sort of whittled at what the core objections were from the call for adoptions for SIGs. So it's from Tim there, there still needs to be some serious conversations with exactly what we are trying to achieve and exactly how to work, Yep. Yep. Yep. Agreed. This whole strong non separability discussion that came up is fascinating and academically interesting, and is it? So that's the have one camp thing. This isn't needed at all. And one camp thing, it's not strong enough. Yep. Yep. Cool. And then the other category of objections there was a fair amount of holdover from you know, like, this draft has changed a lot over the 4 year run, And there was a lot of ormogeneric not there anymore. If you check the current draft, all of that is gone. So there's a lot of objections to it's the sort of soft, wishy washy. Like, that that's all not in the current draft anymore. We've really tightened it down to just be in ad mode, and you don't get to choose your algorithms. IETF will fix them in a registry. So I think some of these objections, I hope, are were safe to ignore as being bested as in previous versions. Roan, Ron, Yeah. Yeah. On the hi, Roman, Daniel. Just number 2 kind of on the list for those that weren't insect dispatch to kind of quickly replay that particular draft did did comfort dispatching process, and I would say it got"
  },
  {
    "startTime": "01:10:01",
    "text": "kind of mixed feedback. They were definitely some folks in the room that did not under stand, wife, someone would kinda want that, and they were not so enthusiastic. enthusiastic about it. So can't properly kinda summarize everything how we got the last track but I would say that broadly in the area outside you're working from where we're also kind of having those same questions. The same question. Yes. Yes. And while I have the the electronic talking stick, I'll make I'll make the point that This debate, I think, is harmed when people say hybrid signatures aren't needed. without qualifying what context they're talking about. if you're talking about a negotiated protocol like TLS that is a very different context of the word not needed, then if you're talking about long term Yep. Precise, you're right. Yeah. I'm sorry to have a misspoke. I it was definitely clear, at least for me, from the sec dispatch conversation that folks had a very different nonuniform kind of perspective on it. We're coming out from a different problem. We're saying the same thing kind of in the end, and we probably needed to same biguate all of kinda pull it apart. So I'm I'm putting a plea I'm putting a plea to the community. When when you voucher opinion on on hybrids, please qualify it with whether you're talking about a negotiated short lived, you know, signature only needs to live for 3 milliseconds versus a nonnegotiated. It needs to live for 30 years. I think those qualifiers are really important. I think we do the the discussion of disservice when we don't qualify our context. Next slide. Okay. Here's a checklist of of knits and edits we need to do for composite chems. In the interest of time, I'm not gonna walk them. I don't think there's anything particularly controversial here. All of this has been well hushed out in the discussion on list. The last one is sort of fun, we have a DHchem for CMS draft that we have written but not put on data tracker yet. So the way we wanna do the hybrid chems, we need, obviously, Kaiber is a chem, and ECDH is not"
  },
  {
    "startTime": "01:12:00",
    "text": "And the way we wanna merge them is by promoting ECDH to be a chem and then merge a chem with a chem. To do that, which doesn't exist. There is a DH there is an RSA cam for CS. US. There's RSC 5990. So we already know how to merge with RSA, but we don't know how to merge our Kaiber with ECDA. So we've we've been sitting on this draft. We have put it on data tracker I want to let all the praising us to die down. But we we have another document which is gonna be a prerequisite for this one. I'm having it's best to suit. Yeah. Sorry? You don't have an asbestos suit yet? Yeah. And, yeah, composite cigs is a much Yes. So itchy. Yes. shorter list of to dos. That's because composite SIGs we've actually put a lot more effort into in some senses actually a lot more mature than Kim's. yeah, It just doesn't have concerns? Right. Yeah. So the la the last sort of actual design change we're gonna make is currently we have flexible parameters for RS. Like, we do not specify RSA key size, and we we allow you to carry the RSA PSS programs. I think working group consensus is we don't want brands at all. So we're gonna instead of saying, RSA with Delotham, we're gonna say RSA 2048 and RSA 4096 with and and we're also gonna tell you which RSA PSS, params, KDS, etcetera, you're gonna use. We're gonna make that not flexible anymore. Yeah. You have made DKG happy. Okay. That says 505, so I think I can sit down now. Any questions for Mike? Right? Wait. Florence. Hi. Frederiscoll at UK And CSC. I guess Just to comment on a few slides back when you were asking about what properties needed. in hybrid signatures or I"
  },
  {
    "startTime": "01:14:02",
    "text": "for whatever use case you would like. I'm not specifying. think what would be really useful is to see the use cases specifically. It's difficult to work out what properties needed we don't know wear wear this needs to be used. Interesting. Yeah. So since you brought that up, I mean, one of the interesting discussions is in in the context of certificates and outside the context of certificates. is a really important difference. If your protocol uses bare public keys, then maybe you need the signature primitive to do the binding, whereas if you have certificates, maybe you can Keith, and that's okay. Yeah. I yeah. thank you for bringing that up, though. I think the context discussion on what properties you need the context of your protocol is Yeah. 1st It's all part of this first the intro needs stronger driving use case, and that's security properties is definitely a valid part of k. Corey, I think we're gonna talk about if you mentioned 5019 biz. Yeah. Yeah. 5th about 5090 this Yes, sir. Please. Yeah. thought Corey was talking. Sorry. Go ahead. next Oh, yeah. It's highlighted. It's missed Yeah. Yeah. I'll highlight it. Not needs published the plan to turn it away from the current limited use of. So We have planning to migrate from Shawan, or OCSP satellite. Sorry."
  },
  {
    "startTime": "01:16:02",
    "text": "Yeah. So right hand side, is, like, protocol specification or bushesb satellite these things. At the right hand side, say, like, to 2560 was 6960 or doesn't this district you. So, like, share 1 or any action well, sorry. It's defined set ID without resolution or hashing gathering. but for some profile for high volume environment, that we define like, different side, we define out of g5019. We mandate use of Sharma, who are the profile or set to ID. And the our price take out, like, like, is to allow you, so share 256 for like, start ID. actually, Like, at state hand side, 1696 6960. Like, some implementation auto had already already support share 256. But, like, I'm I'm not sure, Adi. But, like, some implementation only supports I think that is because of 15 19. And I we think, like, we had a better away from this station and support share 256. next to the service. So what do we want is to just to budget adoption, and we want to migrate from share 1, starter ID to share 256. Yeah. Why is there more slides? Day. some, like, additional information, but information. So if you are interested, Yeah. we talk about some migration plan and some potential question. Patrick. Okay. So there's backup slides on the data tracker if you want to see them. Go ahead, Jonathan."
  },
  {
    "startTime": "01:18:02",
    "text": "Sorry. Jonathan Oden, cloudflare. why Shaw 256 and why not just any cache? Like, Shaw 3 is out now. It's been out for a while. Yeah. Woah. It because, like, who we support many environment was all kind of hybrid environment, we kind of need to pre calculate like, OSSP response and Nate, we we I I believe we had better limit use orb, like, we had a bit limit the number of question that way. And so you think just shall 3. Cheesy. Yeah. But but So if you only want 1, right, go go for the new one. We It's slower. If you're pretty confusing, who cares? If you're precomputing, how much like, we're talking milliseconds. So if you're precomputing it all, who cares if it's slower by, like, about we we pretty compete with with HSN. z. limitation is much more Yes. She have so many certificate. Yeah. So Yeah. And, anyway, we might migrate to Huawei. k. Okay, Deb. as So shiny objects? Talk to the mic, Deb. Hey. Well, I think I am. Are you still shoney objects? Does anyone, Mike? Sorry. The The point is when we're when we're here in"
  },
  {
    "startTime": "01:20:00",
    "text": "40 years' time, and it's like, oh, it says shartu. We've gotta keep using shartu. and it's, like, Right? But now we know how to, like, immediately generate collisions. like, right with the specs there, Charlotte. Like, let's just skip char 2. Go char 3. It's fine. why do you believe that Sean's really stronger? It's newer. Yeah. So so so I'm correct. It's a shiny object thing. So it's just faster, and it's not a problem. k. Watson? side Watson led, Akamai. I like this draft. I am really concerned about just from looking at the others list, it's not clear if, like, the web PKI people are like, what's their attitude on this? Because migration that breaks OCSP for a lot of clients out there. Well, okay. OCSP doesn't really matter in the 1st place. but would be really sad if we had a situation where we don't understand the migration path and we don't have one because of the huge number of browsers and devices out there. of buying on the web PKI that might only support Shaw 1. So we need to think about that. Sorry to be sad about this. Yeah. Interesting because you're hot calling out the web PKI where it's the one place where OCSB isn't taking off. So o c s p in the web together The one thing is it is required to run the responders It is something that, yeah, the browsers can't rely on in all the places. They still required at our spa. It would be, you know, Yeah. Maybe it's okay to break it, but we need to check first. Oh, absolutely. Yeah. Hi, Sean Turner. So, again, right, the 1591 is the is the profile of the high volume. If you wanna"
  },
  {
    "startTime": "01:22:02",
    "text": "support 20 different algorithms. That's generic OCSB. So we were just going for the I profile 1. to Watson's point about, like, hey, let's not do this and what's gonna get support. one of the only reasons why I put my name on it because people actually were like, well, we might actually use this. So my kind of attitude is let's go for the super low hanging fruit because there's a whole lot of certs out there. told that do shot 56. So the chance of them actually being supported is quite high, this will allow people to get rid of Shaw 1, and then we all profit. If we need another one for Shaw 3 or know, your favorite whatever. Great. We can do that one too later, but, like, we ought to be able to iterate things without going for the gold plated one now. let's just let's just for the low hanging fruit and get it done Yeah. I I can't just make sure you're talking to the mic. We're Remember, there are a fair number of remote participants. I did try to get myself in the queue. I couldn't. Yeah. There is a basic Phil Humberger. basically, the result of the Shah 3 competition was we discovered HR 2 wasn't that bad. But we'd already committed to having a 3 The only reason in my mind for insisting on 3 is if we were going to force people to implement 3 in the browsers, I don't think that that would have that effect in this case. And we've already done that with Ed 448. Which depends on Shell. Right? Quinn? I'm Quinn Dang at Niss. For this purpose, to me, sha 256 or child 3? They are both fine for the job. About, say, out to be sick as fast lane shot 3. That is not accurate in what I understood. For sure, 512. And then if you run on the new machine, a 64 bit machine, And then is a little bit faster than shot 3. but not in the same Bashaw 256. because, obviously, is the the the"
  },
  {
    "startTime": "01:24:01",
    "text": "the side is half shorter. So you don't take advantage of the F assembly instruction to split it into a multiple thread. So that's why I if you want fast, the Shell 50 seconds is not the one to choose to be to beat charter 3 in performance in software. But even in software, Shar Five 12 is not that much faster than in Shar 3 in software. A little bit, but not but but if you're running hardware, child 3 is way better than child 2. shot to is not the the one to do fast in in in hardware. yeah, it breaks Currently, we have implementation for shaft 256. And quite sure about I these are questions, please. But, like, I Hi. don't think we have got too much implementation for Chastry. And, like, for if we we want to just be, like, we need to implement and migrate we need to do those kinds of things. So they they Yeah. It will take much more time to migrate. And I think if Both is okay, I think, share to 56 good way to go. So Yeah. Jonathan. you put yourself back in the queue? No. You're not. Okay. Alright. Is there anyone who objects to a call for adoption? Okay. Adam. Good. Next on the agenda. science. No. I did not get slides for key compromise. at the station. Does anyone want to talk to that? There was a big threat on the list. Okay. We're done with we're up to chameleon."
  },
  {
    "startTime": "01:26:24",
    "text": "Alright. So I'm gonna be presenting today a draft from myself John Gray. David Hook, Tomafumi, and Mike Owensworth. So In the background here, we have a picture a picture of a gundam. We thought that was very timely given that we kind of developed this idea in Yokohama But for copyright reasons, we will likely not be using we decided to that name. So We decided to go with chameleon certificates. Yeah. Alright. So first off with we'll start with the problem statement. So Subjects often have multiple related certificates which which certify different keys. in one such scenario where this where this happen is you have an algorithm migration. You have a a a a a key pair that uses a legacy algorithm and then a key pair that uses a new orism, algorithm, algorithm, algorithm, algorithm, algorithm, and a single subject entity would then have 2 certificates issued to it. certify separate keys. Another scenario would be dual use So, for example, For for s line, for example, you would have a assigning key and then an encryption key. These would be represented with obviously, different key pairs and different certificates. And question arises is how do redline parties obtain the most appropriate certificate. how can multiple certificates be transported through protocols that might have restrictions on not those certificates, a single tran single certificate is expected. Next slide, please."
  },
  {
    "startTime": "01:28:01",
    "text": "Alright. So an alternative approach that we came up with in Yokohama, is 2x509 certificates with public keys, and it's pretty straightforward. Turkish very traditional approach They will have different serial numbers, and you don't have any modification to the certification path validation algorithm specified in 5280. The idea that we have is that you have one of the certificates issue We call this the the delta certificate. You then Take a look at the to be signed other certificate, which we call base certificate, and calculate the differences. You then contain all this information inside an extension which contains the differences and also contains the signature value of the delta certificate. You then put this extension and then you sign it. What this does then is you can now officially efficiently convey 2 different x 509 certificates within one certificate. Next slide, please. So this is kind of the idea that we have you know, not naively kinda what we already discussed. You know, it's it's a single key pair, single certificate, there there's no winter relationship. So on the left, we have a traditional algorithm certificate RSA key pair. And then on the right, we have dilithium 3. you know, entirely separate. Next slide, please. I'm sure Joe means example. Right? Yes. Porto. So the the idea is is when when you go to reconstruct, As as we already talked about, you have the Delta certificate descriptor extension. in the base certificate that contains the signature value and also contains all the differences from the base from we that basically comprise the difference between the delta certificate and the base certificate. And using that information, you can"
  },
  {
    "startTime": "01:30:00",
    "text": "a realign party can then reconstruct the delta's We have some limitations in the in the specification on, like, extension ordering and extension presence, things like that. I guess, Next slide, please. Yeah. Otherwise, the signature doesn't work. Exactly. Yeah. Yeah. Yeah. So we so so we did take some opinionated approach 2, what is allowed to be different. So you can have obviously different signature algorithms. different subject, Different issuer in validity period. Those might be a little more controversial, but we were thinking that the issuer would be the issuer DN difference would be valuable in the case where your your PKI doesn't have key rollover. know, you basically you have a one to one mapping of CA keys to CA names, So, you know, your dilithium chain the distinguished names in there may have different names. Probably probably could abuse that potentially a little bit beyond that, but that was the intent of putting that But these are the potential fields that can be different. And, again, as I mentioned, the extensions have some further strictions defined in the in the document such that you can't add or remove extensions that exist in one certificate, but not the other. Just to is the encoding decode in complexity. Next slide, please. Alright. So we're gonna talk about relying party use. If the client in an online protocol can send its supported algorithms, then the server in that protocol can send either the base certificate or delta certificate. In this case, the client need not implement the specification. So a case where you have many 1000 different clients, But a single, say, for example, know, an application sir single application server. You could merely implement this on the server side. And when the client goes with its"
  },
  {
    "startTime": "01:32:01",
    "text": "you know, initiates the handshake. It specifies the the algorithms that supports the the server can selectively send 1 of these certificates. based on that information. And alternatively, the relying party, the recipient can also extract the Delta certificate as As mentioned previously, No modification to the certification path algorithm. validation algorithm is required. The only difference is that the path errors. the the the the way how collection of the certificates would that logic would have to change. Right? You know? logic that would go and potentially do AIA chasing or going and checking like another an online database of, like, intermediate certificates, case where our server might not be sending those along. this would just be an extension of that. And this also allows the base certificate algorithm to be seamlessly migrated to the delta certificate without legacy overhead. So If, for example, you have in the case where you have your lithium certificate is your base certificate and then the Delta certificate is an RSA certificate the the server can extract the RSA Delta certificate to send that to the client. Next slide, please. Alright. So We do have 4 implementations of this right now. We have 1 in Rust, 2 in Java, and 1 in Python. We've already received some excellent feedback on this draft. that we've integrated and are continuing to integrate and we welcome suggestions for improvement. and know, if it's not too premature, we would like to consider a call for adoption for this. So Thank you. Thank you."
  },
  {
    "startTime": "01:34:02",
    "text": "Right. You're stipulated interest. Okay. Okay. Scott Fluor, You've mentioned that yours you can use this property to switch between and dilithium However, to have a real dilithium path, you really need to to have the rich certificate. be a post quantum. And if you're RSA only, obviously, you're not gonna do that. So it doesn't, to me, appear to be solving that particular use case. So the the the the the intermediate case and also the root certificates as well could also be civilian certificates. Right? You could have a base certificate And then within that, you have the deltas certificate is as well that represents the root. So you would have delta for all the signatures and all the public keys in in the search. That would be one way to do it. Yeah. if you need that to complete the path validation. Watson Lad, Akamai Technologies, I don't understand why this draft does what it does because if you are con if if you need to convey the to the certificate and and This is really sort of a special case compression algorithm. it seems. Yes. Yes. Yes. And we already have a way to do it that doesn't require any changes to the PGAX. It's called Zeolyb. and we use Right? Just now in TLS, there was a whole discussion about, okay. How do we go through the chain and and sub separate out, common common extensions, etcetera, across the entire chain. So this method seems to be a much more limited one where you're not gonna be able to apply it as broadly, and it's gonna have implications for sort of let's say you have a PKI, you've issued some certs. You wanna check what certs you've issued. And, oh, there's this whole hidden set of search that your tools might not know about or do know about in different ways"
  },
  {
    "startTime": "01:36:00",
    "text": "that's created through this extension. That to me seems a lot worse then cognitive compression. It's the opposite. Oh, if you wanna go to. Yeah. Go ahead. by you too. you go back to the pretty picture slide. My council is answering. The which slide? pretty picture. Yeah. That's a good refresher. -- was the first Sure. That that'll do. that one. next one. That's pretty one. Yep. Yeah. That's a lot. So the thing that ZEDLIP doesn't compress his -- -- something like The thing that Zedlow doesn't compress as the public key, which is the thing that this allows you to skip. So the the entire point here and those who remember the catalyst proposal, proposal, This is sort of inverse catalyst in the sense that this allows to drop the large Pqq key when you don't need it. You cannot compress out a large PQ key, but you can drop it. Right. But only reason you can drop it is you negotiated, you didn't need that certain in the first place. And if you can negotiate, you didn't need to surrender 1st place, don't send it. Then we do this in TLS all the time. What is this getting over that? That's what I'm not understanding. Nothing. So that was one of the points in the early slide is if you have a negotiated protocol, TLS, you don't need this. Right. And and then there's no client overhead on implementing which is nearly a need to be implanted on the server side. Steven, you can probably guess. Yeah. Steven, you're right. Yeah. So take that as said. It's validate. And, you know, I think -- Oh, you're right about the other thing too. Yeah. at what application is calling for this today. So one one idea that we had, if the hackathon was you were gonna"
  },
  {
    "startTime": "01:38:01",
    "text": "potentially use this as TLS, but we're also thinking this could also have use in in signing, like, CMS as well. k. So so I'm unaware that any TLS implementers are are protocols using TLS or applications that use protocols that use TLS are looking for this. If that's not the case, then maybe it's different. But -- Okay. if it's not really needed, if it's, you know, over complex things that change code at the wrong level, at least in my opinion. I I don't think it should fly. Daniel Congomor, ACLU. So so so Help me think through the implications of of of something like this for a client. So okay. far as the compression stuff goes, This is useful where protocols only allow one search. That that's the one place where this is useful. Protocol that only allows one cert but no negotiation, you can just feed a big thing and let the client figure it out. Right? That's the use case. So in that use case, I'm a client. and I receive a crazy certificate that I don't really recognize. I don't even know the algorithm for the for the signing key. don't know any of these parts. I don't know who the issuer is. It doesn't look doesn't change anything that I understand. I can't validate it cryptographically. But you just give me a blob, and now I have an arbitrary number of ways I can transform this. How many times can I put this extension in? just once. Just once. Are you sure? The the draft says so right now. And what if this if I put it in just once, And that it but it lets me add extensions. Right? to the to the delta, sir. Does the delta cert let me do this? No. That's also prohibited by the draft. Yeah. Okay. Yeah. So So now so just to be clear, this is a a mechanism that lets me as a client, where I expected OneSearch"
  },
  {
    "startTime": "01:40:01",
    "text": "I don't have to change the protocol, but where I expected 1 cert Now I have 2 certs. Yep. That's correct. Yes. Exactly 2. Exactly 2. Yes. Yes. Yes. if I don't if I can't figure out what to do with either of them, then I That would be correct. Yes. Well, But but place where where the where I've also got a certain chain, each of those certs in the cert chain, I also have 2. Yep. Potentially, yes. Why aren't we just changing this protocol to allow multiple certs? Hi. This is Hannes. I I think at the minimum, the document types needs to change, and the problem of the document because it's very confusing. when it comes I have over the years seen that there are numerous attempts to compress omid an otherwise shrink certificates I have contributed to some of those proposals. And here's the funny thing. every time I read a new proposal it says, There are all these previous attempts. but they are not widely implemented. I now have a new one. And currently currently, we have at least 3 such proposal actively being worked on And they basically proposals come faster than the old ones who said they solved the problems that the the previous ones didn't solve to sort of show up. It's really funny. So I'm actually wondering whether the size of the certificates that is of course, a bit contributed to the handshake is actually a problem in a real world. It's an optimization that seems to be Maybe not enough for people to actually then go all the way to really deploy this stuff. a little bit cynical in view after years of working on this. Yeah. Yeah. John Gray, one of the authors of this as well. One of the things that when we're thinking about this because Corey mentioned the Traskowsky draft, the previous one. that was actually, I think, adopted by ITUT. but but but but"
  },
  {
    "startTime": "01:42:00",
    "text": "of the thing is we're trying to look for tools for part we know this this new PQ thing is coming. Right? We're looking for tools for ways we can migrate clients to to these upgrade systems. This actually is one way that does it. So Corey described a use case, you know, at server side, but there's also the client use case where I could have, like, an RSA based certificate inside that is like a dilithium delta certificate. And then at some point in the future, when I wanna migrate my system to dilute lithium. Right? there might be this this period of time where you're a bit uncertain because algorithms are new. you can, with one of these certificates, It's still an RSA certificate. This is just implant is an extension. That's all it is. Right? So your RSA certificate was still verified by legacy clients, that's all fine. You can plug that into system today. It'll still work. You update that client at some point to understand the PQ part you know, new algorithms, you can verify both. That's fine. But then in some day, maybe 27 2027, 2030. I don't know what date, someday. maybe Arce is you know, deprecated or whatever. On that date, you can then just shed shed completely shed. you know, per se skin, and then all your left is with the data theme. Right? So now you've been able to migrate in a nice kind of seamless way. This actually gives us that. So that's just and that's just one of the use case. Right? Point Yeah. So 1000 a month. David Benjamin. So to add to DKG's point, not just You could have extended the new the product called the SPARC 2 certificates. You have to because the protocol is doing something with the certificate. I know we said we're not using this for TLS, but, you know, any protocol is gonna do something with the public key. In the case of TELUS, we sign something in a search verify message. We also have these extensions that add, like, know, SCTs or a stable SCSP response to the certificate. if the protocol expects one certificate, then all these little addendums are associated with that one certificate. And if your one certificate is now secretly 2 certificates,"
  },
  {
    "startTime": "01:44:01",
    "text": "How do you know which thing you attached it to? You're going to need to extend the protocol so you know which thing it was attached to. point, you've now taught the protocol how to handle 2 certificates. you could just and so not only, like, you have to do that. And once you've done that, then you don't need to, like, smuggle it into because it's not a Google tool. You can just do it, like, natively. Yeah. wasn't a loaded tenant. tech. I I I have a brief comment on that, actually. That's true if your if the both certificates are actually involved in the protocol. there's a large number of certificate protocols that largely exist for the purpose transport and management of certificates and don't actually exist for the purposes of actually using certificate. So in the case of issuance and certificate management, there are all you know, there there's some you know, I would love to extend every certificate management system in the in every signature system and everything else to support natively 2 certificates and 2 keys, and update everything, and everything will be able to do two things, and the next crypto transition will be like, we already implemented crypto transitions. We know how to migrate from one key or certificate to another key or certificate. We're not in that world yet. Most of our systems are still very, very they've got this built in assumption that there's one guy and he's got a certificate and there's a key and nothing will ever change. And that's how we built the world and bad us. So, you know, this may or may not help with that problem. It may make it worse. may make it better, but it's a don't we'll see. Alright. I'd like to say this Alright. one needs much more discussion before we get a call for adoption. on the list I next Am Yes. Yep. Okay. If you go quick, we might actually finish the agenda. Well, I'm I'm hoping this one is short and wow. Okay. Alright. feet and far less controversial than the previous one. So Yeah. This is a rrc8398, and 80399bis. Next slide, please."
  },
  {
    "startTime": "01:46:03",
    "text": "So we're we we have 2 updates in progress, and the motivation is that Implementation experience is proven that conditional encoding of domain name in the SMTP, UTA 8 mailbox, other name, using either u u labels or a labels increases implementation complexity in the tax service. This is actually resulted in several real life security vulnerabilities in one major implementation, namely open SSL. And the the idea is that this fundamental problems that the X 509 stack now needs to have a Pina code decoder. the So instead of using the u label representation for encoding IDNs and the domain part We would now be using UA label representations unconditionally. Next slide, please. So here's the old above. And here's the new below. So you know, much much more simple, much straightforward, much more straightforward, and you know, less implementation complex. looks like one's asking and what's not. Yeah. Alright. Next slide. Alright. And here is is is Russ's update to 8399 biz. Apologies for the 1st bullet point. That should say update from 8398 to 8398. That's made mistake there. Apologize. The the there's a note in the security considerations now. that it explains the rationale for this update. Next slide, please. There's any feedback Great. We'd love to add that to the drafts. Otherwise, we'd like to call for working group adoption of these together together together together together together together together together together together Hello, Sean Turner. So in one of these two drafts, it points to IDNA 2008. Is there a later version of IDNA that they're gonna eat make a seat later when we make this little change? I mean, I'm hopeful because Alexis is involved in this because he understands the the"
  },
  {
    "startTime": "01:48:04",
    "text": "that stuff and how to navigate that crowd. But, like, there's a real possibility of adopting this draft oh, there's 2 IDNA 2012. And like, no implementation supports it. And so, again, we're providing more input. If, like, IDNA 2008 is the thing that is implemented, then we've got all kinds of ammo to fight against the crazy changes. But that's what I'm hoping is we actually point to the right version of the thing. Still that version? Yeah. So then so then we'll leave it alone, but maybe state upfront, we're not changing Okay. Great. over, like, over our dead bodies. Yeah. I'm only aware of ID and 1008 niners know, UTS 46. Yeah. Okay. Alright. Okay. Does anyone object to call forward option on this pair of documents. Alright. Believe it or not, removing the duplicates about how all the at station formats we are not gonna talk about. We completed the agenda I'm I'm glad that Steve Farrell came back because I would like to suggest 2 -- for the l. Lots of and loads of. gonna work. Let me just drop that one and become apps. Okay. That's it. and thank you very much, Flo, for taking notes. Wow. Yeah. we did it. Yeah. I I didn't think we were That wasn't too difficult. Was it?"
  }
]
