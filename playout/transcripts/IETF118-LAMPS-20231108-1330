[
  {
    "startTime": "00:00:02",
    "text": "privileges and responsibilities. If you participate, so please make sure that you have, made yourself aware of all of these requirements before contributing and please treat each other with respect It's way okay to attack an idea. It is not okay to attack the person delivering that idea. We have an agenda. We've gone through a good bit of, chunk of this. In terms of what we did on on Monday. But we're gonna start with the special topic where, there's a downgraded grade attack And then we're going to, talk about a way that we think we be able to mitigate that. Make sure it all hangs together. And given that this, attack was just unveiled last Friday, that's pretty fast. So, Falco, would you please come to the mic? to find the slabs. I have Come on. You know, I put them next to each other on the data tracker, but they're not in me to go Meanwhile, I maybe can start with some Yep. Introduction. So we The reason why we disclosed the attack is that we it's actually not yet to publish work, but with decided to disclose it because we thought the K MRI draft might be the right standard to put it in, to put a a countermeasure in. And at least we wouldn't want to didn't want to"
  },
  {
    "startTime": "00:02:03",
    "text": "missed that chance. And, we'll see about whether that is the right a place for a countermeasure. I mean, this is not something we we are sure, but This is one would be one possibility. And, so this is joint work with my colleague, Johannes, and, the work is sponsored by the chairman federal office for information. I'm closer to the mic. So this is work Okay. This is work, sponsored by the German federal office for information security. And, yeah, next slide please. So we'll go a bit about the background, existing attacks and then the new attack how the countermeasure should look. The address the practical relevance and and come to the summary. Next slide, please. Okay. Next please? Okay. So the text that are now in literature, very old. So if you have a CPC, encrypted message to, if you send it to someone and the than an attacker gets hold of that message. He can just take this message, do some transformations on it, and then the victim will receive the message will decrypt the garbage. And then if, the victim replies to the attacker that with that garbage in the message, then the attacker can use that, garbage to actually review, recover the original message it that's straightforward for the legacy modes and is only mitigated really by using authenticated encryption. So next slide, please. This is just, some literature that we see. It's very old from 2000. The idea"
  },
  {
    "startTime": "00:04:01",
    "text": "Next slide, please. Next slide, please. So now the idea to apply this, a an attack of this style to the AAD as it is in CB's, in in CMS, We have to see that the the AS based mode, CCM, AGCM They both use, counter mode. So this means the key stream is generated by encrypting some value that is depending just on public information which is the nuns included in the message and the counter. So we have, a sequence of this key string blocks. Now if the attacker could Encrypt messages with this that he doesn't know, he could actually do something. So we would see what exactly you can do then? And, yeah, of course, counter modern encryption is just exorring the client expert, the key stream. So now with a CBC, encrypt, here, it's decryption. We we're exploiting the decryption we see that the decryption of CBC is just decrypting a certain ciphertext block with a s blocking decryption and then exhiring it with a, previous ciphertext block. So now the idea is that the attacker can use this CBC decryption, as we've seen it in the literature attack so that you get garbled Gabbath, message. You reply to the attacker, and then what can you do? So what you cannot do is just decrypt the key stream because for that, a decrypt message for for the description, he would need the encryption function, the AS encryption, but he doesn't have that. He just gets"
  },
  {
    "startTime": "00:06:00",
    "text": "a a decryption. So of course, the the x r ing with the previous private block and simply be undone by the attacker. So this is why he gets he's able to get the the decryption result for the AS encryption of each book. So now what the attacker can still do? You can guess a certain plain text block. If he has enough information about that block, He makes a set of guesses, for a certain client X block. He knows that corresponding ciphertext block. So it also has a guess for the key stream block. Now it sends that to the victim. The victim decrypts all these guesses. Which means performs AS decryption. And now yes, to compare that against the the this decryption of the STJ against the known nonce, the the known counter block. So the counter block is the 1 the opiate that is encrypted. During the during the messaging groups. So whenever the attacker finds that this but one of the return blocks was actually the counter block corresponding to his guest, then he knows this was the right guest. So that means, for instance, there's a short secret code, like, like, like, like, 4 digits, he needs to, Center 10000 blocks to the victim And if the victim replies, with this, garbage, the that this 10,000 blocks a crypto, then he gets that secret code. So there's another thing about CBC. CBC uses is only defined for full block."
  },
  {
    "startTime": "00:08:01",
    "text": "Messages. So it's always used, and then CMS, it's used with, padding The padding may increase the one hand, the padding may increase the number of guesses. The number of queries that it's necessary because, so it's a petting is length 1, the padding is linked 1 with probability 1 over to 256. So you have this probability and a little bit more for our correct petdings just from random messages. But there's another thing that is, of course, there's also, padding or regular tech. We see that there's already registered, recent literature literature about this, how to exploit this, in the context of So this is not only, a problem for the attack. It may be even an advantage the pending verification. Next slide, please. So this is how to attack, then looks. It's just what I, explained now just the overview. So you have this message, and the attacker knows the template of this message. So it knows everything except the secret code. Actually, he doesn't have to know everything. He just has to know one block for, with the exception of this secret code and then the the offset of the secret code in that lock, and then he can just use the same attack again. Sim or similar attack. Okay. Next slide, please. Now Well, the the we we couldn't really see that it is applicable to S Mine because mine, It it it will depend on the client, but we tried it on Thunderbird and that there are different obstacles. So one is the padding. Next is that there has to be the the proper SMM header. And then also Thunderbird refuses to display your message once there's some garbage blocking it. I don't know what this"
  },
  {
    "startTime": "00:10:00",
    "text": "criterion for garbage, maybe it's invalid UTF Eight. I don't know. But At least it it didn't work out of the box. But the the literature, and this is what I mean, the the, They have, found an attack whether traffic between the the male user agent and the server is observed and petting, and with this petting oracle attacks, exploit it. Because the client is just fetching multiple parts of, of an email. So they managed to actually decrypt messages, against the, an existing system. So this just shows how dangerous this is in the context of, of SMIME also, even though it's not that straightforwardly with the tax and literature, the the previous, the old attacks that I mentioned first, but this one shows other problems that are This is a surprising thing. So you don't think that petting our regular text, applicable for email. But people have all kinds of ideas to create systems. And suddenly, This assumption is violated. Okay. Next slide, please. Okay. Can I measure, next slide, please? So fixing it to MRI is the advantage is that if it's would there would be a key derivation in K MRI, which, prevents these attacks, then there would never be any use of MRI that is vulnerable to this attack. But it's clearly not the right place because then if you have a universal countermeasure, you have the countermeasure twice. You have 2. Key durations in MRI, which is probably not what people want. Next slide, please. So One possibility, and this is Okay. Here, I said, I say just for illustration,"
  },
  {
    "startTime": "00:12:04",
    "text": "but thinking, more closely, I think it would be it would have some advantages to really just deprecate the the existing modes, I mean, this is probably a very, aggressive, solution. But yeah, and then the solution is to release. I will come to the to the advantages then just to say what what you will replace them with, or this is something you do that you give a different name and a different OID. And then what it does, it first derives the key. Different key for each mode. And then you have, mitigated the problem because then an unrelated key will be used in the decryption. Not the same in the if the ticket downgrades to CBC, it will use a different key And then the, the garbage that this return is It doesn't have any value So the the idea behind this proposal would be to tie the key derivation as as strongly to the algorithm as possible. But we can discuss this after, maybe, after rest presented this counter. My knowledge in, CMS is somewhat limited. So I cannot really say if this is really necessary, but it would for sure be, an ultimate measure and give you the the advantage that you have an algorithm that you know is secure no matter what. Oh, with respect to these attacks. Okay. Next slide, please. So one important point to note is that signatures don't help at all and, against such a text. Signatures cannot protect the integrity of ciphertext at least not in a straightforward way because if they applied, like, applied in CMS. So the attacker will not take care of, have to take care of an existing signature or whether outer or inner, So he just, uses the block"
  },
  {
    "startTime": "00:14:00",
    "text": "he wants to use for his guesses. And if he thinks it's necessary, he will apply his own signature. It can only be an outer signature then, of course, but but but that is in line with, as I understand, with CMS and no Usually, no client will tell you whether you received an auto or any signature. So this means that even recipient and forcing signatures were not be able to defend against this attack. And there's even even this is in the morning. Yeah. Even closing the last solution. Forcing in a signatures, and this is exactly what was done in this, related work. But I meant by, easing it all that was their problem shows up. That the padding check comes before the signature verification. So just didn't happen. Even if forcing investigators, Okay. Next slide. Please, practical relevance. Okay. Next slide, please. As I said, as my well, the straightforward attack just manipulating and, transforming and then getting the reply doesn't seem to be very realistic, but there might be, attacks like the one, which I saw in in reference 3. Which exploits interactions between server and main user client. And then we also have to see, for instance, in Thunderbird, AAD, modes are not yet supported. So you have a much bigger tech surface, of course, if you're using CBC, then you have straightforward attacks and they allow you much more than first of all, they allow you complete decryption with no need for our guesses, and they allow for reordering of blocks but but but but as we've seen, it's not they have countermeasures against. So this is probably a result of e fail."
  },
  {
    "startTime": "00:16:01",
    "text": "And I think, a lot of e fail countermeasures will probably, prevent the straightforward attack, and require more sophisticated attack like, the 1 and 3 But that's regarding S MIME. So we're talking about CMS. CMS can be used for any kind of system. So you we I think the discussion shouldn't be just around SME. Okay. Next slide, please. Next slide, please. Okay. So this is a summary. So the new attack. This is, this is new about it. It is inverse our record attack, you're you're taking the block encryption with a block decryption. So it means you only have the possibility to do the grip low entropy blocks and we didn't find any actual vulnerable systems. So far, It could be a used in combination with reference 3 possibly, but that's that one of its system is probably already fixed. So the the previous attacks yeah, they are, then compared to this therefore, but direct attacks oracle attacks and Yeah. They have the 2 variants where you are fully revealing oracles and you have vetting or record the text. The solution is key separation, which means for a each mode, you have a different key. So you don't have any, any of the the the no type, not this type of vulnerability at all. And for instance, an open BGP in the crypto refresh, they already introduced it together with the be encryption in the new data encryption format. Okay. That's pulse, Any questions? Or feedback. John."
  },
  {
    "startTime": "00:18:11",
    "text": "John Gray from Entrust. So I was just wondering. Yeah. I was yeah. It's Oh, okay. Yeah. Is that better? I was just wondering, the garbage coming back from the victim, is it just one block? Of garbage you need or, like, how much garbage do you need You need for each of your guesses, one block. So for 10,000 cases, you would need 10,000 blocks of AS, which is 16,000 uh-uh How much is it? 160,000 bytes. Okay. And I think you said at least you tested. You tested. Thunderbird client. Have you tested other ones? Like, I I would think most If you if you don't decrypt something properly, you're Probably. I don't think it's ever a good idea to send back. That resolved, but So if no one does that, then it shouldn't be. What do you mean not properly? What is properly involved? Yeah. Yeah. It just mean if you got a bunch of garbage, what what use is that sending it back a client. Usually, you would just say, you know, it didn't I got garbage checked. I just I'm just saying I'd I'm not sure how like, I think you you had that, comment to how practical Yeah. For sure. I totally agree. It's totally, like, this this is definitely intact, but Yeah. The point is okay. So You have already a problem with email because I can take an encrypted email from Ellis to Bob. I take it. I I just sent it to Bob and say this is from me. Please reply. I don't say it. I have an opportunity to say it. Maybe in the the subject, I can write it. So this is already a problem. Mhmm. So that's my knowledge, there's no defense against this. So this is"
  },
  {
    "startTime": "00:20:01",
    "text": "one problem in in email. So Now the one reason that bot wouldn't reply is that he sees that the semantics of the message don't fit to me So the sender is indicated as Alice. So this is what prevents him Hopefully, to reply to me with a original message But if it's just garbage, what is preventing him from replying? Yeah. I am not saying there isn't. I'm just if it I think it would probably especially if it was, I guess, s minus headers on there. So it would probably do checking on if it's an actual correct type, but Well, yeah, maybe the but I think the the the real defenses that there's no message shown, and this is what we experienced. And this is maybe for all clients, it's the case. I don't think it's That's what I'm wondering if that's the case, but I guess Yeah. I don't think it's very relevant for SMIME because if a client would be vulnerable to it. Would be vulnerable to many more attacks because CBC is still in common use. Yeah. So I think that would be the smallest problem of that client But that's not the point. The point is that CMS has a vulnerability that you have an AAD mode, which gives you CCA 2 security. It's security against adaptively chosen ciphertext, and that is Gone, in the presence of an, of a CBC decryption because it will give you a somewhat modified message. And this is just you can say this is not a real problem because what would be the system but people find it and I want So, again, mentioned the padding oracle attacks which then surface again. So you send an ADMS and then you're dependent. The use of the security of that message is on dependent on the CBC scriptian oracle, a petting, a petting oracle. This is not really what you want with an AAD mode."
  },
  {
    "startTime": "00:22:03",
    "text": "Okay. Let's move on to Ori and then Scott and DKG, and I'm gonna close the line at up, Scott, I was gonna let you cut me, but Alright. Alright. Oresteel. So, your recommended mitigation says key separation and And the cases where you see these registry options a la carte in other areas. And so I'm thinking about Posey and Cozy, places where we see the same sort of potential a la carte solutions and where, you know, in an application that had really leaned into that a la carte cipher sweet, pattern. We might be sort of going hunting for this kind of thing in those places well. So just wanna confirm that that's a thing to start go looking for right now. It's pretty clear to me that that the this attack applies in CMS Jose and Cozy. Right? And so when you say key separation, you're basically talking about, the missing KDF that should have been mandatory. Yes. Right? That's correct. Be a key deviation and the outcome of the the the resulting key must be dependent on the mode that is used Yes, sir. I'm That binds the mood to the Yeah. Yep. So I'm here to just beg for general guidance that we can just sweep across all of the place where this is gonna I'm gonna make some suggestions for in the CMS context that I think will apply. Daniel Con Gilmore. I was just gonna say that, like, we've been through this game 4 at the IETF. Yeah. Transport layer security, did that work. Of just folding the entire transcript of the handshake to in order to to the key derivation, And, you know, we learned that because TLS got burned. So it's the same thing And while there may be mitigations in some male clients or some CMS"
  },
  {
    "startTime": "00:24:00",
    "text": "tooling, like, which just Yeah. Just fold in all the pieces that you have. Okay. Any other questions? Scott, you decided not to Yeah. Okay. Thank you, Farco. I'm gonna push the buttons, see It's Okay. Perfect. So thank you for, Not waiting. Right, for for disclosing that as soon as you could. Next slide. So, The attack that was just presented no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, a little it's it switches faster here than there, and I don't know why Yeah. Okay. So the summary of the attack is the one that I, posted, as soon as they provided the attack, which is here that, The attacker has to intercept, CMS authenticated envelope data. That it uses either CCM or GCM. Then take the block that they're interested in, replicate it a bunch of times, turn that into a CMS envelope data"
  },
  {
    "startTime": "00:26:00",
    "text": "that contains all of their guesses, send that garbage the victim. The victim has to share the result back. And then the attacker can look for their guests that turned out to be right, and they get that block. Okay. All of this next slide. Has to do with If the Content encryption algorithm could be bound to the key. Then this would not be possible. They couldn't change from an authenticated envelope data to a content to, the one without the authentication and vice versa. And, You can't change the mode that you're using if you don't even need change the type. So you couldn't go from GCM to CCM. You couldn't go from, CBC to some other mode that doesn't. So as, was just said, gee, the missing kid. Yeah. So one potential solution here is to assign anoid for an texted attribute that says, hey. I'm adding that KDF. Then the the potential recipients who see that, or I'd say, oh, I have to do a, additional Computation of the CEK that comes out of all the recipient in hours. Even if different key managements being used for each recipient, Run that through the HKDF. Get this, CEK Pine, and then use the CEK Prime for any of the, actual cryptographic operations, What I note is if the attacker takes out that, unprotected attribute the the originator will still have used the KDF, so it doesn't help them."
  },
  {
    "startTime": "00:28:04",
    "text": "But makes it it at best becomes an denial of service attack. But it doesn't help them out and attack against the key. Next slide. No. Where did you go? That was getting the hook. Alright? Yeah. Oh, come on. They're in a different order again. There it is. What happens is when this queue gets get moves worthy. Oh gosh. Of I've made the mistake. Yeah. Thank you. Okay. I'll watch. So what I did is, during the, hackathon. I threw together some code. Just so that you could see kinda what happens. If the resulting CEK from whatever recipient info you're using is this, one at the top of the slide. Then AES 128 GCM algorithm identifier would be this which in hex when the ASM 1 encoded is that, then the CEK becomes What's at the bottom of the slide when you run it through HKDF with no salt? Now That's a discussion point. Should we put a salt in that says, this is for CMS. So that we don't get a cross Jose CMS attack. But I'm not sure because there may be a case where we wanna do a middle box that transforms is CMS through Cozet. Sure. But, the comment from the back of the room was"
  },
  {
    "startTime": "00:30:00",
    "text": "but this is, you know, for Esquire, maybe you do want this. But That's a dip we can talk about whether we think this approach is right. Next slide. Shows that, oh, well, when you turn it into AES 128, you get a completely different CK at the bottom. And I chose didn't have to I chose to include the parameters. And I the reason I did this was When some other clever guy reads Folco's paper. What's he gonna come up with that lets him take advantage of oh, well, if the algorithm identifier is the same, then I play with this parameter, what I've learned, And so I just thought, heck, bind it all. Okay. Next slide. So, This works in all of the cases, that we have defined in CMS so far. This one shows envelope data. This is where the new OID goes in the unprotected attributes And then down here, when we get to the bottom of the slide, the encrypted content then uses the CEK Prime. That, is the result of the HKDF. Next slide. This is where it goes in in encrypted data. Which has no recipient to impose. It assumes that you know, the key already from whatever context. And still, it works because we have unprotected attributes put a flag, and the encrypted content is exactly the same as the previous slide. Next slide. And with auth envelope data, we have an additional output from the AEAD and that is the Mac. But the ciphertext still goes the same, and we have the unauthenticated ributes to include the flag."
  },
  {
    "startTime": "00:32:00",
    "text": "We Next slide. So my point for going through all that is it also Now, it works with all of our protecting content types that do encryption. It also works with all of the various flavors of recipient info that we have. And so you know, there aren't defined in, the, RFC 5652, and then the, ones that mix in PSKs in, 8696 and the one that we're working on now with the chem receiving info, and it works with all of those. Because all of those output a CEK. And so that becomes the input to the HKDF. Next slide. My design rationale. Let's not add a negotiation for each PDF pick 1. That was that was the first one. I don't want to get it. It's CMS being a store and forwarder thing, there's no place for negotiation. Thick Okay. If the attacker removes the OID from the unprotected attribute, then, the attack will fail The recipient is denied access to the garbage content Okay. And, if the attacker removes the, attribute leaves the message alone. It'll look like garbage, which is an interesting side effect, but that's it still mitigates the attack. And if they mess with the algorithm identifiers, the results are the same. It melts the or denying access to the content. Next slide. So the way forward, I say, Okay. I've developed slides. I have not developed an internet draft yet. I will if this group says this is a reasonable way forward,"
  },
  {
    "startTime": "00:34:01",
    "text": "There's no reason for us to block, publication of the MRI. Which is, with the ISG already. So I'm I'm just don't think there's a reason to pull it back if we take this approach. I would recommend getting early assignment of such an OID for the unprotected attributes so that we can get some implementation experience in in some deployment experience and see how, whether it works as good, in practice as it does on slides. And Then, we can publish a standards track RFC and I would also encourage that we update, RSC 8551, which contains SMIME 40. The one that mandated we go to AEDs and say, yeah, let's do 401 and include this flag. That's what I think we ought to do Love to hear what you all Yep, Michael. Mike Saint Johns. I think this is a good approach. Can you go back to the slide with the KDF on it. Real briefly. Back to the pdf. That's the other And this is this may just be a knit or it may be something that's actually got little bit of sensitivity. This one one more. The the actual example. The added example. It's back quite a ways. Sorry. Yeah. This is good. So, The only mix that you're using right now in the HKDF is the algorithm identifier. That's correct. Generically, length might be useful here. As well. I'm on the same side. It's on it's actually in didn't show it here because it isn't affected. Because It's in the algorithm by Dennardier. Because I took the length of CEK. Because"
  },
  {
    "startTime": "00:36:00",
    "text": "It's already of the algorithm we care about. And I shove inside the KDF. It's not actually mixed in. It is being mixed in. Okay. So that isn't actually the statement of the K HKDF. That isn't incomplete specification. Okay. You're free, one goes away, I think it is. And I actually would like adding the the context stuff that you were talking about with too. This is Okay. Yep. Thank you. The the CMS. Yeah. Yeah. Okay. Usually, you know, I should look at my older graph. Came years for the sun Next, nope. Your naps, Rich Saul, This makes a great deal of sense. Just one minor question. Did you figure out that ASN 1 hex in your head? Yeah. Yes. That's why I said I wrote code during the hackathon. Yeah. No. The important part is, yeah, I think this is a good idea. Yeah. In my head. Can you go eager Maya, Yes. Kevin, I think you need to go 2 sl 1 or 2 slides forward to the ASN with the boxes on it. With the bubbles. Yeah. Bubbles. Yeah. I I think, well, either one will do. If I understand this, which is quite likely I do not, What I think you're telling me is that we already have the unprotected headers. In the envelope data the attributes. Yeah. Attributes, unprotected attributes. That was already part of our structure. That's correct. We just didn't put anything in there. That's correct. It already goes into the hash. No. No. No. No. Okay. That's what I thought I was gonna say. And we just needed to drop some magic things here. And every would just work and recipients would just continue working. Sorry. It was only centers that had to Okay. Unprotected because it"
  },
  {
    "startTime": "00:38:02",
    "text": "doesn't. Because it dished. That's why I was like, well, but it might be unprotected, but it might deliberant fed into the to the key with the rest of the stuff. So that's what I was thinking. Like, what we only have to update senders. No. That's what I was kind of believing over there. So okay. So not the miracle I thought it was, but okay. Sorry. My my life doesn't involve such wonderful miracles. This is Daniel Con Gilmore. So The title slide said this is an alternate solution. But it looks to me like this is doing what what Falco Recommended. So I don't understand what the ultimate thing about it is. Okay. So the Alter he suggested a couple. Ways forward. Right. But, you know, first of all, what I what I what I think Faco's goal was is that we should have key separation based on the parameters of the encryption. And that's what I think this is doing, but it says it's alternate. So help me understand the difference. The chair original message that he responded to suggested we do it for CAM recipient info. And that would have left the other recipient info as vulnerable still. Okay. And so what happened during the week was I sent him the first draft of these slides and he goes, yeah, that'll fix So okay. So so then The one problem with that is that, of course, people could do the KimRI, Without this, And then the MRI stuff would still be vulnerable. That is true. So is it possible to, get the most of best of both worlds and say, you can't do MRI unless you have already done this thing, say, MRI doesn't work. In, in a in a ASM 1 blob that fails to have this particular piece? Or we we'd have to we'd have to yank MRI draft back from the ISG What would happen if we added the Content encryption key algorithm identifier"
  },
  {
    "startTime": "00:40:02",
    "text": "into MRI is we would get protected twice. Sorry. I'm not actually saying that we would change MRI. Oh, I'm sorry. I'm saying I'm saying can we somehow tell implementers. That if you are trying to use MRI in a context where you don't see this, Yeah. MRI should fail. Just fail. Is that true? I don't like that because then I'd I would like all the RIs, all the recipient info is to work the same way. Okay. That's personal time. That that that but I'm, you know, I I'm one voice. Okay. And so so the deployment strategy here that we're talking about is all the recipients update and announce this new property? Yes. In their certificates. Know in their, Eswan capabilities. In their Eswan capabilities. Okay. So it's on a per message basis. It's, well, you you some people put them in certificates, but most don't. Okay. The the swine cert capabilities extension. Right. But most people announce it in their messages. Okay. So if I'm sending you a novel message, and I've never seen a message from What am I gonna put in it? You might try it with this and get a fail or you might in that this affects your email and then guidance document. Right? How do you do these transitions? How do we get from here to there? I'm asking you. I know, but I'm telling you, you've been down this is a trail you've already play is, right, and you know how hard it is. Okay. I've been making that we don't we don't have an answer for first message then. You're correct. Okay. Hi, Jonathan Hammel. So if I understand, correct, the reason you're putting in an unprotected attributes is to do it the same way for both both both both both both off off off off encrypted data and encrypted data Right. Because encrypted data. That way I had a place to put the flag. But you could just"
  },
  {
    "startTime": "00:42:03",
    "text": "specify where to put it based on the content type. Like, for instance, for encrypted data, clients may need to handle the case where they decrypt the garbage because that that's always possible. But for authenticated data, if the MAC tag validates, you wouldn't expect to receive garbage in the 8 in the decryption. So you may want to put it in the protected attributes in that case. I need to think about that, but I like it being in the same place in all of them. Especially since the, removing it doesn't, give the attacker any advantage. Right. Okay. So that that incineration, but I didn't think of it. So let me background process that for a while One thing I'm noting is no one's saying, oh, don't do that. It's a bad way. I guess you're telling me write a draft. Write a draft? If it's your first one, I'll I'll help you out with You're making the consensus call we're not co op. Yeah. Exactly. Oh, yeah. This is gonna be a really fun consensus call and draft to manage. Or is or is Alright. Forest deal. So My I don't I haven't read the MRI. Draft. But I just wanna the MRI draft. Yeah. Right. It's really, you know, exciting. So I just wanna understand, you know, because it seems like it's a generic 2 layer structure consideration. Yeah. Seems like it's a generic failure of the recipient in the sender to, you know, incorrectly or insufficiently specify their intended algorithms. Know, to adequately bind to the key. Both. Yeah. I meant both. Okay. Yeah. And so For for this"
  },
  {
    "startTime": "00:44:01",
    "text": "and your world is I don't know your world very well. You you you maybe you can't go back in time and changed like, all of this up to a higher layer. Like, you know, it started over again. Would never have have built it this way. So Is that is that the am I having, like, the right feeling there that, like We're we're talking late nineties. Right. Yeah. So for anything sort of coming newer from this, like, like, will will the guidance basically be to to fully specify everything, always bind, and always Like, I guess, and Yeah. I'm looking for the for the guidance for the other things that haven't yet. Done gotten to this point and how do we make sure that they don't accidentally stumble over this while trying to give developers the right, set of flexible building blocks. Yeah. How do I don't have a really good answer for that because your Jose and Jose are in the same place. They've got shipping code, and they don't have this nailed down either because guess what? They were built off looking at CMS and saying, how do I get rid of ASN 1? Right. So, yes, they have exactly the same. Okay. Alright. I think that's it. Thank you, Russ and Falco. Like, really weird. Where is that coming from? Really? No. Partially Bob, are you trying to talk? Nope. Okay. Right. What is next on the agenda, sir? So we're moving on to the S Fine stuff. So I think we're it's time for header protection."
  },
  {
    "startTime": "00:46:00",
    "text": "Header protection. Alexis here. Right? Because we deferred this so he could be. Yes. Okay. Okay. Is this all in the and the and mail guidance, slide deck Yes. It is okay. Who's talking? DKG or Lexi? Is Bernie here. It's burning double drugs. Oh, okay. Then we will, move to the next one and come back to this. Alright. CMS COBRA. CMS Kyber. Oh, there's Bernie. Okay. Perfect timing. Back to header prediction. Anterville, Governance and header protection. Hello. I'm Daniel Khan Gilmore. This is about 2 different drafts. One of them is end to end, guidance for, email clients for end to end cryptographic protections. The other one is on header protection. Projection of email headers. Alexya Malekov and Bernie Hennison, our co authors on these drafts, and I'm presenting text It's a short presentation. We've been at these drafts for a while. Version 17 of the header production draft is out now. Minor changes since draft 15, which is at the last IETF, It's basically textual cleanup, and there was correction of a variable name and some of the pseudo code many thanks for the the feedback from working group last call. This is still in a misref state. We're waiting on the end to end mail guidance dressed. Next slide, please. End to end mail guidance draft, is on draft 12. Draft 10 was at the last IETF. Again, some minor changes, from feedback from folks appreciate that the working group is giving us"
  },
  {
    "startTime": "00:48:02",
    "text": "you know, gave us feedback. There's minor updates here. There were no, particularly substantive changes, just mentioning different header fields, and a bit more nuance in the text. And a little bit more about concerns about internal subresources and text HTML mail that claims to have end to end header protection. In particular, if you get sent an email and it's got an external resource, you can't really say much about the cryptographic properties of the message itself you don't know anything about what that external resource does and how it impacts the message as a mail user agent. So, a little bit of a warning there for folks who like external resources in their email, doesn't really mix well with, end to end, to graphic protections. Next slide. That's it. What we want is the working group to help advance this doc both of these documents out of working group last call. And just a note that the appendix of the end to end mail guidance draft is substantial. It is a future work appendix. There's a lot of things that we don't know how to do to get this stuff actually usable And so I think there's there's there's much more work that we could do maybe it's in lamps, maybe it's somewhere else, But if you're interested in making this stuff work, I encourage you to look at that and think about which of those pieces we can carve out into a separate draft. So that's what I've got. There's questions about the either draft, I'm happy to hear them. And if people think that there's any reason that we should not advance the documents to the next stage in publication I'd love to hear those too. That's exactly what I was gonna ask. Is we've had this in last call. And then a flurry of comments came The authors have addressed them Have they been addressed adequately If not, speak now. I'm gonna take the empty mic as a positive indication."
  },
  {
    "startTime": "00:50:06",
    "text": "Please, chairs, follow-up on list and do what you need to do to get that wheels turned Thanks. So we'll be, reaching out to the authors to make sure that all IPR has been, disclosed. And then finish the shepherd right up based on that. And push it forward to the ISG So notetaker, action, chairs, send to ISG. What's next? CMS Kyber. CMS Kyber. No. We did that one. Oh, yeah. I'm sorry. We did that one. We did sphinx. We did 9 90. Yeah. Okay. Here's here's by Wednesday. No. Yeah. Yeah. Mail units we did. Did we do 8398? Yeah. We did 8390 or 80 80 389. We did not. Let's do that one then. Okay. What about composite cam? We did we didn't do that one either. I thought that one was moved. To move next to 6 You're right. Oh, right. Alright. We'll do this one then we'll jump back to Cam next. Okay. Yeah. So I actually, don't think we have to talk about this very much. Alright. Because, the working group last call closed on Monday. And the slides are done before that. So Yeah. I I guess if you have any comments circling the list, but I think this has already moved up to ISCG. Right. So, Anything to say about? Alright. Alright. Cool. Alright. Awesome. That was quick. Kim. Hi. Right a minute. I found a composite signature."
  },
  {
    "startTime": "00:52:00",
    "text": "What body armor do I need for this talk? Composite count. I found it. Does that work? No. Okay. Same purple. Okay. I'm doing a fun thing of sneaking I'm doing a fun thing of sneaking too draft. Into one presentation, one of which is adopted here that is not. Yeah. So this is continuing to work on behalf of the composite authors group, which contains this this group of people and more. Let's go. Next. So let's start with this one, which is adopted. Next. So I would just want to point out here the dependency map for this Draft is getting a little bit weird and complicated. So we removed a dependency on Kim's at the request of the working group. So we took sorry, composite keys, we lifted large swaths of text out of keys and stuffed it into chems and stuffed it into signatures so that those two documents are independent. The the request was we don't wanna have 3 documents moving through in some weird staggered one goes fast and the other goes slow and they're dependent on the same thing and So make them stand alone. This is gonna make it annoying for the authors of the of the the composite keys and composite SIGs draft because of the composite public if if KEMs gets pushed all the way through and then SIGs is slow and then SIGs is gonna changes public key format, that's gonna be annoying to align with Yep. Having copied the text into Kims and 6, but we were asked to remove it. So we removed it. So no longer depends on You do have a few added dependent on other not yet RFC stuff. I think the top one top 2 or okay. Well, So so IETF will have the 59.90 best. That one's gonna go. I think that'll clearly not be rough because that'll go through first."
  },
  {
    "startTime": "00:54:00",
    "text": "Draft Hausley Lamp CMS Shaw 3. So we're one of the open issues is do we we need to depend on Shaw 3. And I know Panos has opinions that we don't, but for the moment we do, And so that's this is an adopted draft, depending on a non adopted draft. And then I'm gonna talk about DHKEMs, which is a new thing that is necessary here that we'll need to get done. Okay. So dependency deficit will get complicated. Next, please. So changes affecting interoperability. We, rewrote the whole thing, not as badly as as sig, six cups of sigs got away completely rewritten. This has been minorly rewritten. Since last I reached out. But, yeah, so things that affect interoperability, we've actually formally defined what generating caps and a decaps. Looks like. We have pseudo code in there that wasn't defined before. It should be obvious, but it's now written out. If anyone in with this and did something different, then you could be broken. We've completely gutted and reworked the wire format of ASN 1 to remove anything that felt like generics. So used to be sequence of size 2 to max. Allow you to have you know, you 55 keys. If you wanted them, now they're all sequence of size 2. We changed the definitions of composite chem. So notice it's now composite Chem Publicy rather than composite public key, and those are giving me a couple of composite sig public keys, the ASIN 1 structures are identical, but have different names so they can versioned differently and stuff. So those are now We changed them from sequence of subject public key info to sequence of bit string. So with the generic version, we had to carry the OID if you wanna do generic cams, you need to carry the oids of the components so that you know what the heck's in it. But if we're only considering explosits now, the OID will tell you this is a MLDSA with east ml, yeah, NLDSA 44 with ECD say, P256, that's all implied by the top OID. So you don't need to carry the sub OID. So we don't need these subject public key info so you can just take the 2 raw public keys slammed. There you go."
  },
  {
    "startTime": "00:56:03",
    "text": "We were no longer subject to public info or no sequence of bit string. Yes, bit string. Not octet string. Because people will need to reconstruct SPKIs from these to hand down to open SSL, So if extract a bit string, you have to She had to take an offset string, turn it into a bit string to put it into at a handed open SSL. That'll be a mess. So I'm this is one case where I will. That is an intentional bit string We're not octet stringing that. How do you really feel? Stop that fight before anyone gets to the mic about it. Okay. We've removed composite, Kemperam, we used to have this params object that CS and when we got to take out that is fantastic because there's now 0 per rounds anywhere that need to be carried in any edge case. So that's cool. Yeah. We've removed discussions that we have a big block in the introduction that said if you have a key translator and you have a key agree, like, the hellman. Here's how you promote them into out. We don't need it anymore because we're now just depending on RFC 15 minute any biz to give us RSA as a chem and we're depending on this new thing, draft downs with CMS D. H. Kim to give you a D. H. H. H. As a cam. We wanna take 2 chems and Chemsmash them. I don't want to take a cam and a DH because I don't actually know how to do that. It's not confined. And this document is not the right place to define how you app at DH and a cam that really should be its own document. So last interrupt changing, interpretation change, we were asked to fix the key sizes of RSA. The previous version said take take, RSA and combined with MLDSA, and people said that's ambiguous. Which RSA I could do night team 23 bid RSA. Yep. Fine. So we're restricting you to 2 be added. So that does expand the OID combination list a bit because now we've got rsapkcs11.5 2048."
  },
  {
    "startTime": "00:58:02",
    "text": "PSS 2048, 1.53072. So we've got 4, all four RSA combinations, which anyway. Okay. Next. I'm sorry. That was signatures. That last comment was signatures, my brain, we for signatures, the PS system knows it anyway. Cam is Cam is only 2. Apologies. Changes that affect interoperability. So we've reworked how the the profile of 59.90 biz. So when you do RSA, you need to provides some Kdf Prims. HKDFs and stuff, you need to instantiate them. So we've reworked that a bit, how you instantiate the the upgrade to Kim is specific the algorithm to keep the symmetric primitives aligned at security level, the things they're combining. So those are updated. And then one that I didn't get to is a chunk of work, we walk we we step forward the CFRG chem combiners draft to 04 and we change the combiner primitive a little bit, and I haven't gotten around to updating this. This is supposed to be aligned, but I just time to do So imagine it's aligned. Circle point. No. It's missing the r length something. I yeah. Just imagine it's a slide. I've got a slide. Point of quest, small. My next slide tells you where it's not aligned. In your second bullet you Talk about RSA Kim Kdf. The default is Kdf3fromx9.44. Is that the one you're using? Yes. Okay. But you have to specify which hash function you're using it with I know. Which output length. But those parameters? They also support 2 and 3. Yes. Kdf 3. Kdf 3 or Kdf 3 needs parameters. Okay. It's next slide, it's there. It's here. It's in the slides. Editorial changes, blah blah blah blah blah. None of this affects interrupt. Hope none of this is controversial refactor to use Martin Thompson's GitHub Automation, document public keys, apparently added tax"
  },
  {
    "startTime": "01:00:01",
    "text": "text non normative tax explaining. If you need to recontract NSPKIA, here's how we suggest you do it, influence situations about, tips. That one maybe is worth slowing down on. So the case where you have a FIP certified Elliptic Curve. ECDH and a non fit certified khyberone, You're sorry. You're you're you're your NL, Kemp hasn't yet received a FIP's validation is compliance, but not It's validated. Therefore your private keys will need to come one from inside your first boundary, one from inside your boundary. That's the thing we're be trying to address here. So we added some text about it. Cape. Someone I can't remember the last comment. If you like to move the slide on me Didn't you ask me to? No. Okay. Then I screwed up. You were giving your opinion on this in, the 5th mode thing. Yeah. Yeah. Yeah, shorten the abstract brush up security considerations, actually flush you at the end of consideration. So that's proper renamed cyber MLTSA none of this effects interrupt. So I'll just send it over. Okay. I'm ready for next. And next. things we still haven't fully solved. So this is the I haven't updated yet. So Right. I need to roll in the ciphertext. That was the difference. It was decided with the CFRG discussions that we should KDF over the ciphertext again, very similar to Russ. If you have it, you might as well include it. That hasn't been updated here. One thing we do, we name the the the keymap groups, KMAC cipher Suites, just give them short names so I can refer to them either. So KMAC 128 slash 256 means key came back 128 with 1056 up, but that didn't fit on the next slide. So it's here. Next slide. Wait. So here, You're using K MAC. If you're combining it with RSA. You may end up being using different KDFs. Yes. Was that intended? Ditto Shaw 3. Let's"
  },
  {
    "startTime": "01:02:02",
    "text": "have a slight on that. Maybe hold that thought. Okay. Okay. Here's the current aux list. The which which s it put size of K MAC. So we've we've lined them up Kmart 128. Sometimes it's 2 56 over 380 4. And so when I was at 256 over 5 12, that's not in the OID, but it is specified in the table. I think Russ wants this list to get smaller. Russ does want this little bit smaller. If Russ has an idea of how to get consensus on ones to remove, Russ can suggest how to do that procedure. Personal preference doesn't mean I know how to representative Yeah. So we've, I mean, one of the things Here's we have the brain pools. I don't think any other working group has specified brain pools. And the people who like Brainpool, like Brainpool, so they wanna stick in that. So I don't know. I mean, right. Sorry? Yeah. One of the authors actually needs Brainpool. Why go specify a brain pool somewhere else? Why not put it here? Yeah, if you have ideas procedurally how to get consensus on a short this, please talk to us because we don't know that it's we think this is minimal that satisfies everyone who wants stuff. The I will mention the RSAs our I think we're the only chem combiners draft across ITS. It still has our saying it. And I I think, like, Esmaim still uses ton of RSA. Like, if the idea is you're trying transition to PQ leveraging the implementations and hardware and card, smart cards, and whatever the heck you're doing with us, but I'm like, you probably need RSA there. So that's why the RSAs are there. I I'm I'm confused by number to and 4. So what ECDH means here is the draft you're about to talk about. In number 2. Right? Yes. What does it mean in 4?"
  },
  {
    "startTime": "01:04:03",
    "text": "Same thing. But it's not. It's not x 25519 is not. ECPA. But it's also not a Kim. Exactly why I'm asking Oh, where is the equivalent to the doctor we're about to talk about? About how to do X2559. I think my DH cam draft does does keep them up. Ken Ken's account. Yeah. I I I it's been awesome. I wrote the DH 1, but I think I also provide the step ups for X Two 509 and x. I I did realize that. not Thank you. It's not ECDH, but it is EDH. Interesting. Next, please. I missed that when I skimmed the doctor. Okay. Alright, Ross. Here you go. Here's the slide you wanna argue about So she No. This is the one Panos wants to argue about. Sure. But your objection fits here too. So, yeah, so we need so here's the the parameters for instantiating 59.90 biz. We are using KDF 3. The question should we do it with Shaw 3 or should we do it with K MAC or should if we need Kmart anyway, then why we need Shaw 3 and And why not you shake is what he's asking. And why not you shake? Right. Kmart shake or Shaw 3, any of which are reasonable choices, Where's Panos? GR1. And also are you online? Well. I mean, really the question here, if you have shot Yeah. So, If you have shot 3 building came back out of it's not hard, if you have shake"
  },
  {
    "startTime": "01:06:01",
    "text": "building came back out of it. It's not hard, but if, like, Yeah. I don't know how to resolve this this particular comment. Main thing is you have parameterized shape 3. CFO, chicken. A length, a length, in there in there. You get to serve up a student. No. You tell it how long you want the output to be. We which isn't in the document as a hard it's in the sheet lane. Which you don't need to do if you're using shot 3256 because then the output is fixed. Is why I thought I'll just do that. That seems easier than saying you shake and then force it to a fixed output. Or use Kmart and force it to a fixed, though. But, yeah, question. Chris Patton, just I'm new to Lamps. This might be like a really naive question. I'm wondering if, like, the use case for RSA hybrid chems is, like, some sort of smart card that already implements RSA. I guess I'm wondering if like, how you do the combiner like, you'll you'll you'll Are you are you stuck with something that's already implemented on the chip? Like, why do we have this option? In this use case. So, part of it is if you've got twenty year old battle tested code that's rock solid, and you're not sure you're gonna implement the new stuff properly, you wanna keep your 20 year balance as a code, but you actually haven't DCDSA yet, then asking you to implement ECTSA and Kyber at the same time is just new code with new code. You're not getting the battle hardenediness. I see. So it's it's like we're bolting on new crypto to existing code. Yes. I I would I would argue that It's, something to do while you're learning voucher, a a foul, a how to use the new stuff. And gaining confidence in its implementation. Yeah. I have no problem with Okay. I'm just I just wanted to I"
  },
  {
    "startTime": "01:08:00",
    "text": "Yeah. Clarify. Got it. Alright. Horace Steel. So you can raise that. You know? It's it's It's just easier to lean down. Deep me, but It's fine. In the spirit of the question that was just asked though, I mean, that the hash function is another dimension of a battle tested Yes. You already have have this thing. Right? So And and I can see you've already tried to align it and it sort of I guess the the thing I'm wishing is, like, we counted, and that's why we have this the number one recommended hash function and Is that the argument you're making here? I'm trying to align it with you're gonna need Shaw 3 anyway for Kyber, you don't necessarily need, like, you you if you only wanna have a lightweight 11 hash function information, already shot 3. Anyway. So you're picking the the the riskier half function, the one you haven't battle tested there. So, I mean, that's my point is just that. Like, you know, 2 battle tested things. 1, un battle tested thing. Or 2 unbattle tested things. 1, about where he is voting that we we multiply the OIT by 2 down the shot too. No. He's not. No. I I don't actually have a good answer for you. I'm just that's how I'm thinking about the problem you know, I heard him arguing for shop too. But then we're forcing people to have a shot 2 and a shot 3. Didn't think that's a single safer suite. Yep. Let's Both. Both hash functions in one Cypress suite also seems weird. Exactly. Code space versus security. Yep. Okay. I maybe I I didn't read deeply enough in this document, but I I think I noticed something weird you had started"
  },
  {
    "startTime": "01:10:00",
    "text": "taking up print when you started deparameterizing it, The references that you're referring to no longer allow you to do this to basically touch the stuffs and the other documents. So, I mean, you you're talking about using this for the KDF, right? If that's correct, the KDF in this is this slide is talking about the KDF inside RSA cam. Right. Which is another document, and you basically we're going to just use that and there's no parameter that we can pass over to to change that over. So I think you may wanna think about You're taking all the parameterization stuff out of thing and making making it very implicit. But if you then say, oh, well, trust this document rather than the other document as to which TADF to use for the RSA camp, 5990bis requires you to choose stuff. Like, it actually has on wire parameter objects and which you're taking out of all this. We're profiling it and fixing. Yeah. He's fixing it as in. Not making it just checking. Not fixing something that was broken. But as in hailing it down. Yeah. Well, in in which case, that argument may be better made, the argument about the KDF the hash may be better made in 5990 this as opposed to here. Since charges. We're already progressing that one. I mean, I think it only makes sense to fix it here because we know the full suite of things we're trying to align with. Right. We we, like, like, even even here across the two things, Mike, I've chosen different sizes of hash function depending on which size of of ML can, I'm trying to align with Like, it didn't really is fixed in context of this so for sweet. Right. That that"
  },
  {
    "startTime": "01:12:00",
    "text": "I have the time. I'm gonna look at the document, though. Please go to the mic. We have remotes. Yeah. Yeah. Yeah. Cause we're gonna see if I can. By the way, it was Mike St. John's before. Half the time, I'm gonna look at the doctor. Alright. Okay. Yeah. Like it was. Half the time, I'm gonna look at at at the reference document and go over and look at that. And I may miss thing that says, oh, well, use everything from that document except this tiny little bit which is a different set of things. So if it were in, if it were in, the structure, I would go, oh, okay. Know how to parse that. If I'm getting something that is notionally 5990bis, I may look at and go 5990bis is right. Yes. You're right. It is in fact, we're saying, used 50.90 BIS, except the generic hybrid brands, you won't find any of those. Right. And actually one of them up here. We get rid of the KDF3 and use something that's actually documented by us rather than requiring a $1500 purchase. The the k the 9.60. Yeah. I found lots of code for it. Do you understand the different dot? I mean, by document documented? Yes. I do. It's $1500 to buy that document. Yeah. That doesn't surprise me. So can we make a move to something that we're already using or the you know, maybe we could put it at appendix that explains it. X963. X 944. Oh, forty foot. Let me see what I could pick up. And talk to the executive, the director, that's fine. Yeah. Am I allowed to move to my next slide yet? It's actually fairly Are are you ready? I'm ready. I was ready. Okay. Here's the guidance. Here's the CMS DH cam, this one's a single slide. Wiz."
  },
  {
    "startTime": "01:14:01",
    "text": "Yeah, this this hopefully is straightforward. I think I did a bad Sorry. I was in the queue. I'm sorry. Oh, Mike. I clarifying question about the previous slide. just wanted to ask a quick Out. Okay. This slide, really? No. No. So TLS, I think, is using Kyber 768 for sorry. Ml cam, I have to learn how to say that. MLKen 768, for, like, with AES 128. So I, I'm, I'm wondering, like, how we pick these, these parameters. So I see 512 for Kyber and 2048 for r s RSA, and then 7 683072. That was actually discussed on Monday. Okay. And and people were arguing that In fact, Scott was arguing that maybe that was a bad choice on I apologize. I'm also presenting at Pequip on alignment between all Yeah. drafts you just mentioned. I've got a big compatibility table. So save that for P Quip on Friday. That's the right place to do that. I I'm trying to stop these from happening in individual working groups and let's due cyberacetal line that at peak, what, Okay. I need I need, DH's just specifically ECGHs to be, like, the ephemeral static versions of them to be chems. This is just a wrapping job job, this is meant to be a sister document to 5990 and just says if you need Diffie Hellmany, shapey things as a chem, Here's how you do it, and it's just like a tiny little bit of Python that I nap from HPKE. And, hopefully, this is non controversial, but I think I didn't a great job at the 00 and Russ gave me some good feedback that I haven't, like, 4 months ago that I haven't that yet, but this this is a mandatory dependency of of Kim reminders. That's really all there is to say. Could you tell me on the a little bit here about X2551."
  },
  {
    "startTime": "01:16:03",
    "text": "Not off the top of my head. It's been a while, but I I mean, I think it I think it just says do an ephemeral keygen. And then do that against the other person's static key and that gives you your shared secret and you call that your but, you know, it's, I think it's fairly I'm sure I'm gonna need to think about that. HPK. It's just HPK. Or or he's still that's what I would For said, I, I don't know how to I think you've the primitives there are not this isn't changing any part of that. Okay. Right? Like, if if you have a thing with a dot key agree, here's how you, right, wrap it to make it a dot brand caps. Okay. So I came to the mic to actually just ask. I know you you've took this part cleanly from HBK with leaving the rest of the auth mode stuff there and just making sure you don't want to have that ruin this draft. With by including and commenting on it those mode other modes. Right? Yeah. Yeah. I mean, auth mode is effectively static static. Right? Yeah. Yeah. I don't need it here. Okay. This is your last line. Yeah. So I don't think there's any questions or actions here. This is just we're working on it. Smooth Okay. What's next? Okay. So that was composite. We didn't No rev available? No rev available. It's Yes. Hi. So no revocation available for short lived 5509 public key certificates. It's a draft, the reason by Russ,"
  },
  {
    "startTime": "01:18:00",
    "text": "Joe Mandel, and myself to move from exce, So RC 5280 says this basically availability is where is a period where the CA maintains the status a certificate. So and is confirmed. Next one, please. So, with short lived certificates, It Sometimes it doesn't make sense. To keep the staffs all the certificate revocation, information as the life of the short certificate is much shorter then the lead time to revoke. So that's the idea of this draft. The node of available available sort of get station. Oh, so it's done through no Rivervale sort of extension, and it indicates, that is no revocation information for the certificate. The the IQT recommendation, exploit 519, credendom hope I'm saying it right. To, was approved October 2023, which allows no no river bill in extension for public key certificates. So previously, it was for attributes certificates, but now it can be useful PK public key certificates. But under the assumption that the validity period is set rate. So you can't create a 3 year, so let's say it's short. It's it's So this is this is it. So this is the the module for, it's very simple. Is he to understand? And there's gonna be an NOID for this Next piece? So that is very straightforward. If you have any comments or suggestions, those are welcome. But If everything is good, It'll be nice if we can get a the working group adoption, hopefully, it goes straight to the mask hole."
  },
  {
    "startTime": "01:20:01",
    "text": "Domestic killing, Mike, Mike Saint John's again. Thank you. This has actually been useful. But I also wonder why you're limiting into short list certificates as long as opposed to something like a device certificate where you manufacture it and there's no way you're gonna be able to revoke something sitting and basically the IDev IDs for for many for device manufacturers. So, the amount of time that I've had to explain why you don't wanna revoke the IDev chain to people has been kind of Yeah. So think about think about that in particular. The other piece of it was that once upon time we talked about doing an extension that was just a chain of of of oides, that was CA assertions. About how they were doing things. So this would be maybe that type of thing. So a bit of context. The, previous version of X 509 that is before last month, allowed this extension only an attribute certificate The change in the core agenda is to allow it in public key certificates. As well as attribute certificates. So So we have a charter item that says, how are you gonna deal with the you know, telling recipients of short lived certificates or relying parties of short lived certificates. That there is no verification available. And so this document was supposedly aimed at that charter item. Didn't think about the Idev, which, has a good point, but That's why it's written this way. Yeah."
  },
  {
    "startTime": "01:22:01",
    "text": "And the interaction We'll we'll just have to get a mic for your chair. Well, yeah, well, the other piece is the interaction between this extension and Russ's I think you were the guy who originally came up with the 9999. So Long time ago. Yeah. The, the the But it never expires. It never expires. So Again, some language might be useful to talk about that. At least to show that we've addressed it and said, Yeah. Yeah. 2. You know, Oh, that's covered. K. Who's next in the queue? Julian. Thank you. So, okay, it's calling, yeah, from, Huawei International, Singapore. So my I have one question. Is that do you have any idea, like, how short the, Yeah. The the the the period should be for such a notable people. Vocable some kind of, compulsory time, like, a 1 day or 1 week. Be tricky shot. Or it is decided by the certificate issuer, how long it can be Any idea about this? Yeah. It will be sit by the CA. Basically using by saying, Okay. Yeah. If they just document it and their CP is what I would expect. Mhmm. Yep. Rich Salzakamak. What is no CSP responded to if asked about such a cert? Is it an error, or does it say It's valid. That's a good question. So it's not quite ready for last call yet. That's a good question in that, It will never appear on the CRL. Right. Budget the your"
  },
  {
    "startTime": "01:24:04",
    "text": "It shouldn't say that it this falls in that category of the difference between It's not revoked and it's not issued. Right. But, you know, an OSP responder doesn't have to base its knowledge of just CRN? That many As you know, many do. That that was the point I was gonna make is that I think the answer has to be valid. Because for most of the use cases where, you know, you're doing, for example, security audit and you're running across all the issued certificates and you wanna know the status. I think it's a valid cert since it can't be revoked, it was issued. And so it's not anything like that, and it can't be revoked. So I think it's always valid. It can't be remote via 5280 mechanisms, but Wait. Could be revoked because you sent to somebody you know, I'm about to destroy my key pair and So I don't I don't really care or know what the answer is, but you need to address it, I think. Yeah. But I'm, like, I I tend to agree with him. Valens the best of but but but Best of the bad choice. Yes. Hi, Henrik. Yeah. So, Henrik Brocal Siemens, I wanted to bond to the point on the ID certificates. If I remember the tripleea to 2.1 AR. Correct? It says you should provide revocation or status information, not revocation CRL. But in some way, some status information. And I I don't know. I've personally feel like it is a bad idea to have such long lived certificates without and really excluding status information because many things can happen in I think you too need to arc Duke that one out on the list. Well, I I can give a simple example. Light switch in somebody's house Yeah. Been compromised. Who do you tell and why? And why? And given there's 1,000,002,000,003,000,004,000,000 of these damn things, Yeah. No."
  },
  {
    "startTime": "01:26:03",
    "text": "The ID of ID is there to enroll you into a local system. And once that's done, you know, only give a shit. Yep. Sorry. Okay. Next one Thank you, Toma, for me. Thank you. We will, start a call for adoption. Would you put that as our action? That's it. You will start a conference. Yeah. Yes. Absolutely. What's next. Uh-uh now that we have CMC. Right? Well, compromise key registration, but I don't know. That's we don't think we have anything for that. I I didn't get any slow. Yep. Since you've got Sean. I have to find your slides. CMC Biz. Alright. Cool. He's doing he's taking notes, so I guess I'm gonna do it all. Hey. So, you know, you'll come up. You'll come up. Inspired by, inspired by other activities in this working group, we kinda looked at their other protocols out there that are know, developed by that were developed by Peaches that wouldn't mind doing a ref. So we looked at GMC BIS. Sorry. So it's your revision of CMC Best. So there's these 3 documents that specify CMC. And I was talking with Joe the last time and was like, well, what else can we do in the way you learn by by doing. So we're if you wanna get you wanna participate, you know, write a draft. So here we are. The key here is is that one of the authors, the previous authors is deceased. And the other person is, I I can't find them. So thanks to all those who sent me a pointer to try to find, the the person that's still alive. But, we're basically just kinda you know, simply revving the draft. So we moved them to the acknowledgement section and just kind of you know, try to do it politely. And then you know, run with the draft. So next slide."
  },
  {
    "startTime": "01:28:01",
    "text": "I think most of them could turn over the jet. There we gervous you know, secret share. Thanks, Sean. Yes. So like Sean mentioned, kind of our primary motivation here was to update these a little closer to the mic. Sorry. Alright. So, yes, we were looking to remove the defaults for Shaawon and H Nine Shaawon and then also, yeah, just update those with, throughout us. Cause her Okay. The changes that we've made so far we worked in the updates from 6402 And then moved on to the verified, Arratas. Then we moved on to the editorial ones and we're still working through some of the the final ones right now. Along with updating the ASN 1 So kind of a good question that we've had and kinda came up before. So if we remove shy 1, as a default what algorithm did we move to next? Is it Shaw 3, shake, kind of a kind of a kind of a kind of an open question. 7. Right. Shaft too. Comes after like, to be clear, like, shot 256 would become the mandatory what's the other one, Chris? You know, typically, we have a mandatory, like, to implement, and the other ones that should What's the other one? Bike shed in suit. So I just, you know, we don't don't know what we're gonna do. Somebody tell me what the answer is because I'm not a photographer. Just just What Mike figured out? And then pick his answer. Right. And that's it. Yeah. I think, are are these close to adoption? Mean, I would, to be honest, I wanna get to the meat of the changes before we're like, here's the thing. So, like, actually make some changes that have people look at it."
  },
  {
    "startTime": "01:30:01",
    "text": "If we cut a Norman of ASN 1 stuff in and then actually do like, getting rid of some of the the shot 1 and putting some examples in there for at least shot 2. Put a placeholder for, like, what's the third one, then do it. So I don't think we'd have to do it immediately. It can wait you know, you know, Yeah. Next time of New Year or whatever. Yeah. Thank you What's next? Siemens strategy. I don't know. There's nothing to say. Okay. The only thing to say about child 3 my individual draft is I did this many years ago. When we thought we might need it. And then, panos and some other folks heading up We don't need it. And so Quinn and Panos wrote a document that I was about how to at that and published it as an RFC. And then came along Mike's composite document and he needed child 3 Oides. And I threw the old document out there. And if he needs them, we'll publish it. If he moves on to something else, then I will withdraw it. Next. Hold on. Oh, still want the OID. Is that what you're saying? You Mike Elser. Mike St. John said on the mailing list that it, having new ideas is useful independent of Okay. Then we could then Then maybe Tim will start in the at a call for adoption. You said having the oides for sure, all three would still be useful. That Okay. Okay. What's next. Hashtags. Hash Sigs. Hash 6. Oh, yes. We're getting so many documents now. It's, Yeah. It's hard to keep straight. Hello? Alright. Well, this is a draft you can find on the next slide."
  },
  {
    "startTime": "01:32:00",
    "text": "To my creditor. Do you understand me right now? Yes. Much better. You can find this draft also on GitHub by now. It's a draft I presented a year ago. And please feel free to report any issues over there. Next slide, please. To recap, we want to take the hash by signatures that are gonna stick So the 2 state for once, that are already. And as well as the stateless 1, 6 plus that is gonna be a standard by a NIST. So if it's, 205, And, we mostly wanted for 2 use cases. For 1. We know manufacturers who actually use XFA for 9 as a key format for code signing. And we do know trust senders as well as agencies. Who want to have hash based signatures on the roots, level. So not as, end user certificate whatsoever, but at least at the root level, And so there's actually demand for that. And we want to provide identifiers, X509, encoding, and so on. And to, of course, we want to align to all the other documents that are relevant Next slide, please. As well, thanks for all your comments. We tried to, do our best to address those. So we clarify the use cases especially about what not to do So don't use, any stateful hash based signatures, where we can't have a proper key handling. And, we extended the security considerations and much more. We try to align to all the documents. In some cases, we have to be a bit more strict than other documents. Because of our use case restrictions, but we think, content wise, it's somewhat mature now. Next slide is one open issue that is still there is, the question, if you should split it."
  },
  {
    "startTime": "01:34:04",
    "text": "Because now we have 3 different algorithms that are in one document. Sure we leave it like that because, we don't to think, or we're not aware of any Hashtag signature scheme that's gonna come in the future. But on the other side, we could split it up, like, one document for each algorithm or at least, like, have one for step 4 and 1 for stepless. And next slide, please. As we think that, we've addressed all the issues. We've received so far. We think it's somewhat ready at least for call for adoption. There's only minor things we have to clarify now. If you have any concerns, if you have any more issues, please let us know. But, kinda ask for adoption. Thank you. Is there anyone who, thinks this document is not ready for adoption? K. Hendrick, you are in the queue. K. Henley Pockhouse Siemens. Thanks for the draft. So I like, idea. I like the idea of, discussing this specifically for for root certificates. What I would like to know as root CAS are typically long lived CAS do you also address the topic of, how to make the keys available over such a long time, specifically if you look at the miss SB800 on HS, a stateful hash based Well, I think the, missed special publication is a bit problematic because they only say, like, you need an M and you have a lot of restrictions, and it's not a really Right. We are not sure how to deal with it. Because, there's, other agencies that, are doing it differently, for example, BSI is not so restrictive. So"
  },
  {
    "startTime": "01:36:00",
    "text": "If you want to have certification, you have to show them how you do it. And then it's like, special case Decision. We are not sure how we should all at dress it, regarding VSP. We have some comments on this we are thinking about ways to maybe clarify it or to explain it better. But, on the other side, I mean, it's like there's gonna be different ways to do it and different regulation So I don't think it will be good to, the, go too much into detail in this document. But, and Please tell me what do you think and if you have any ideas how to do it better. So if if you believe there are other regulations that fit the use cases better than the misregulation, I would propose to discuss it in the document, to give this guidance because with leaving this out and people knowing about the misregulation, you, I think it would I wouldn't feel good to adopt this. Without with leaving this completely out of scope. Okay. I I totally agree with you because people need some guidance. And, I do know, for example, that, BSI wants to actually use it for their own, Cross Center, or they are providing like PKI for the German agencies. And they have to a way to go about it, how to do, state management, or maybe only going for SphX Plus. They don't know yet, but and that will be a bit different But, yeah, maybe, like, one paragraph that lands that there are different ways and where to take a look. Take a look. Hi. Sean Turner. So I think, It's okay to come up with that that tax, but I don't think it's a gating function for getting into the working"
  },
  {
    "startTime": "01:38:02",
    "text": "perfectly fine to get into the working group and then work on that. So, you know, if you've got a your head against the wall for 6 months to come up with text that everybody agrees to before we get in. That seems inappropriate. Pregnant. Okay. I'm I'm Coindang at Nest. I I'm not a decision maker regarding to this, and, I don't make any promise by now, but, there is a chance we are going to call for proposals regarding to, different methods and ways people think about how to do state management And then we would look over all the proposals that different ideas, small ideas, the people in the community have for us, And then after we look at them and then we we can go from there. Certainly, A lot of board have different ideas how to do it. Depends on, you know, their environments and, and what what would be best for them. So that's very, but we cannot make a standard which, you know, adapt all kind of, methods into, into an SP. Then this It's not it's not it's not safe enough for us. Would like to see order, we could see and and and thing on them and and and we can we we can we could go from there. possibility Well, thanks. It does sound good. Mean, there's a lot of things you can do wrong. We've gotta make sure people don't do that. But I think there's a few ways you can do it right. And I I hope that we will have more than one way to do it right. Do do do wrong. It's very easy. Right? Okay. Thank you. From us. She's on us here. Alright. Hendrick's gonna talk to it."
  },
  {
    "startTime": "01:40:01",
    "text": "We already did this. We did that one already. Oh. It's not already done. Last five. Composite 6 Composite 6. You bet because it feels so good. Hello, everyone. Gonna talk about our favorite topic today, composite signatures. I'm wearing purple, as you see, So this is the version 10 of composite signatures. You can go to the next slide. It's development of quite a few authors. And lots of feedback. So This version, we did have to rework the wire format of the composite signature So we pre hash we concatenate the object identifier into the composite signatures. So I have a slide layer that's gonna show that. So it does break We had about 6 to 8 implementations in our hackathon. So the story, we've broken that. Although there are people working on this new version dash 10. Actually, we have at least one that's actually working already, so that's great. So when we also like Mike mentioned, this kind of aligns with we're doing in the comps that came as well. So we've actually removed all the signatures there's no more confidence at signature parameters. The OID now fully specify the component algorithms So and We also removed I'll have a slide later too. We removed the redundancy if during the SPKI, the subject public key info, and each comps key. It's actually a smaller key. And, yeah, RSA, just like in comps at Kemms, we they're fixed by the OE as well. We added there was a request to add more combinations. So NLDSA 44. There's a combination those now. And, again, change the size the sequence of size 2 to max to sequence of size 2. So go to the next slide. Yeah. So this is the comps and signature generation process now. So the first step"
  },
  {
    "startTime": "01:42:04",
    "text": "So we actually we had much discussion about this, but we decided to do the prehashing of the message this is so that, existing things that use, for instance, sending large files across networks And it's also allowed in the MO MLDSA. Draft. So that's something that came out just before what was that in August 24th when this came out saying you could actually prehash. So we're using that important thing in step 2 here, you see when we do the sign operation. So it takes the private key, and now there's this thing called the OID. It's like basically a label. Right now, we're using the ASCII and coding of the the name of the algorithm. So we We use that. We concatenate that with, the message hash. So we do that for both of the signatures, and then we concatenate them together, and that's the signature. Then it gets output. So, Should I take this question now? Except Keith. I Yeah. I can I can take it? If it's regarding this generation process. Yeah. So here's Gailin here from, Hawaii International, Singapore. So I just have one question. So we once had some discussion in the about the some signatures of property or functionality. My card is a strong separation or something. Yes. Yes. I have. I yeah. So I I discussed. Yeah. I just could I have a This is part of that. And we'll talk about that here. Okay. I'm not quite sure whether As well, and it won't be, obviously, because Okay. ground separation is needed here or with Donine. Yeah, if anyone can Yeah. I mean, we've had that discussion back forth and, I mean, adding an oi into it or you'll see later. I have a slide about that. I I actually think is a good thing. I'll come, see. You can go to the next slide. Yeah. So this is the verification process."
  },
  {
    "startTime": "01:44:04",
    "text": "So the first step is just checking your keys and signatures that they're they're consistent 2nd step again. You prehash the message. So the 3rd step Now, of course, you use the same point in there with the message hash. So you should get the same output if you did it correctly. And I just at the bottom here, it says applications must output valid signature true. If and only if all component signatures were successfully validated, an invalid signature. Or false, otherwise. So we're trying to say, this is an and a process you have to do both. If you don't, you have not implemented the correct and there's a clarification on this that's needed that I'll get to later as well. I don't have that many slides today. So you can continue. Yeah. So I just wanted to point this out the the more compact public key format. Mike had mentioned this as well. And we did the same thing for cops Kim. So essentially instead of sequence size 2 to max. Now it's just two bit string. And so we take out that extra. So you see the subject info at the bottom there. We're basically taking out that extra Algren identifier. So the keys used to have 2 of those. We've taken that out because the OID fully specifies We don't need it anymore. Right? The the OID, the composite signature OID now fully specifies it. So it was redundant information. We don't need it. And, again, the same thing. I was gonna say Mike's already done it for me, using fit strings still so we don't have to do that transcription to come into it. So same thing there. So editorial changes, yes, there is lots of them as well. I guess you could say it The first one is that the way that we've structured the document, it very much aligns with confident Kim is doing even the sections. Obviously, there were some sections that had to be added, like, a section on prehashing. So we have a section on that. We have a a section describing the the the OE as well. Let's see what else is important Yeah. So there's a reference to the draft where our PQ P Quip PQ use cases document. Because because"
  },
  {
    "startTime": "01:46:02",
    "text": "There were a lot of discussions about use cases and not having use cases or not mean, So anyway, there's a draft. On that that's being discussed on Pequip. And Yeah. We have somewhere. I guess this is very similar to what Mike was saying too. We have kind of the same paragraph about the Fipps consideration, which I guess rest of the like. And, a section on the signature API. So I think that's Good for this one. Yeah. So a couple of comments that are going to be addressed. So since we released dash 10, so Palko had mentioned. So thank you, Falco. He wanted to make sure that we make it clear that when you have the component keys, you know, must not have the same compork key used you know, across different keys, right, because this is something you could do. You could have 1 hour and use it everywhere just because people might think, you know, that's more efficient. One key and just keep adding different dialects and No. We don't want that to happen. That's not going to happen, and we agree with the statement. We're gonna make sure that it's clear that you must not do that. And, also, the section I mentioned earlier about the fair, fair, verification operation we did have this this highlighted text here in the absence of an app patient profile specifying. Otherwise, that's we're gonna remove that. But we just wanna make a clear So I think that was left over from the generic or something in the past because, again, we're at version 10. So, yeah, that's it would make it clear very clear that you must validate So, Mike, you have a comment Yeah. So the first sub bullet We do have very strong texts in there that you must not reuse keys especially between a composite and and of single algorithms. So I'm I'm really curious and I'm looking a bit back here. Does the strong non separability stuff allow us to relax that requirement? Why would it why would it related to that."
  },
  {
    "startTime": "01:48:00",
    "text": "So that was also that I mean, that that you must not share public keys between certs was a defence against stripping attacks that I can take a composite signature drop off 1 and it still appears to be valid. So so does the strong non operability stuff in already protect against that. And therefore, we don't need to to prevented at the cert's level. So question makes sense. Certainly so I can weigh in, Britta Hale, MPS. Didn't get in the queue, but, answer to that question. To address this, for those in the room, we do have a draft coming up for later this week in discussion at Pequip about non separability guarantees, here's why this, toughest Yep. Actually, this combiner in the certificates is likely to be stronger than having that void there in the message in terms of what you're getting. So if you were to choose between these 2 different mechanisms, I would say stick with the certificate requirement that you must use it only as a combined certificate and not as 2 separate things. Mhmm. Yeah. It's nice to have that OID as a addition potentially, but I wouldn't remove that from our requirement. Yep. Yeah. That's that's what I'm trying to indicate. Thank you. Thank you for clear Yeah. So, yeah, we wanna make that very so it can go to the next. So also during our hackathon on the weekend, actually discussing the contents of this that's avoid concatenation. So that's step 2 I showed you. So right now, like I said, it's just an ASCII. Oh, basically, it's like a label. Just the ASCII of the name. That actually isn't that strong. So if something Like, it's if you know, we know the algorithms, like, MLDSA is going change. We have prototype08. If that changes, then you're not gonna get it's it's it's if you're using the same label, you're not gonna get any kind of separation there. So we there were suggestions of these are things we've discussing and still ongoing, but"
  },
  {
    "startTime": "01:50:03",
    "text": "using a hash of the Durham coded object identifier. So that was one idea or even stronger at hash of the Durham coding of the full algorithm ID So then you actually get the parameters if they're if you were using key, like an EC key, and it had parameters nice thing about that is you could actually use it as a check when the underlying implementation is reconstituting the keys. You could actually use to make sure that you actually did that correctly. And then the other one that I was actually discussing with Max on. Talked to some people about just the last few days was, I think, even better is using hash of the full composite key. So then it's you can't have a place where you have 2 different keys, and they both sign the same document, and then a person takes one key from one to one the other. And said, oh, I signed that thing. Even though they they can't sign anything new, but they could claim it was various. So So adding the public key in there, I think it gives really strong binding. So I think there's gonna be more discussion on that, but that's kind of the remaining, discussion ongoing. And then I think if you go to the next slide, I originally had an elephant on this line. I don't know what happened. It disappeared. Anyway, so that's So the elephant that was in the room, I guess it walked off or something. I don't know. But anyway, So we have gone through the comments from the failed call for adoption. I'm actually put them all into a word document, collective number of pages, we sifted through them trying to figure, okay, what is it that people are saying? And part of that discussion was about the scope of the document. Having defined use cases And so as part of that, we started, then it was draft, but Antonio's gonna present on and P Quip, but I think it started the document, but it never had got published. Anyway, I needed somewhere to put all this information I collected about this, and I had asked people and talk to them. And thank you for those of you that that have given, you know, support testimonials and saying where you're going to use that. So we collected that and put that in the document. So, hopefully, that helps clarify scope."
  },
  {
    "startTime": "01:52:01",
    "text": "And, they also the other thing is we simplify the key format, like I mentioned. So we tried to remove, but there were, like, edge cases, right? Like, we're talking about putting the must in the in the previous slide. So we wanna make sure there's no edge cases the OIts fully specify everything. There's there's really no foot guns, I guess. I've heard that term many times. Right? So we try to eliminate all that. And also, we strike the non separate building property. What will believe we have by putting that white concatenation in there. So then my question is, so are there any of the objectives that objected to this, satisfied with these changes now supported adoption. So I'll I'll speak for myself since I was one of them, I think this is great work, and I no longer have any objections to this. Okay. Great. Thank you. Is there anyone else still opposed to Others. Uh-uh. We have someone. Wants to say something. Go ahead, Rich. Akamai. I won't go as far him, but I'll go from opposed to neutral. Okay. Great. At least you're going in the right direction. Thank you. You know, at least I'm not blocking anything or not blocking. You know, Yep. Thank you. Okay. What I'm hearing is there will be no objections to another call for adoption. Now that this document has morphed quite a bit. That's all I had. Thank you. Any other questions? Thank you, everyone. And it's external now. Right? If you do hear He did that one. Yeah. Extra. 7 minutes. 7 minutes. So we're a highly controversial topic. Right? Let's see. The event?"
  },
  {
    "startTime": "01:54:02",
    "text": "Who's doing this one? Yeah. I thought David Oh, this is gonna be David Hook. Correct? David available? David on live. Yes. David? David. Are you able to come to a mic? If not, I'll say all sorts of great things about Fancy Castle. No. I guess you're talking. getting in the mic line. Oh, yeah. Let's do it. About it Again, the mic line, if you're here. Yeah. Okay. So at this time, we are not looking to work move adoption. We're just gonna as this thing exists, k, next, this thing exists. The core idea is really the draft is just this six lines of ASN1. That's really it. So where public keys are extremely large, Nichlease. Don't wanna put them in a cert. Then the certs are extremely large. So instead, let's put a URL and a hash of the public key in the cert and you can get it. Some other wedding. That's Draft. That's the draft. Next. Looks here's a here's a picture. Looks like this. Right. K. Next You're done with this? Yep. Okay. So the history of this draft, this was, like, the remark who originally suggested this on the mailing list. I went and looked it up. There's the a Rooku's comment back in 2021. I said, that looks cool. I put it in a draft. It received, like, no feedback. It expired. That was it. We discovered during the interim hackathon a month ago that Bouncey Castle implemented this at the request of one of their customers. So one of the bouncy castles customers found this draft paid them to implement it,"
  },
  {
    "startTime": "01:56:03",
    "text": "This was, I this is where I wanna David on the line, but I believe it was a deployment of of classic McCleese, So this is inbouncy Castle at customer request because someone's using it, So we said, alright. Cool. Let's revive the draft. Not looking for adoption. We're just wanting to put it out there that this is being used. So we should keep it. We should have so we bumped it to make it active again. That's to to to to to That's it. I would love to see more discussion of this on the list. But I understand what what it's about. Any any people wanna get in line and comment on this? Scott? Bouncy castles do it stupid question. You originally taught thinking about Mick Elise, but would this make sense in for other cases, like people have complained about that, that lithium cert, signature, certificates or, public keys, are too large. Would it make sense to, in that case, would it make some protocols which can handle large, even even modern size certificates from friendlier. Yes. It Yeah. So I'd I'd requested to spend to talk about this for 5 minutes in TLS, and then I that I'd asked. Sean forgot that I'd asked, and I didn't present it to us. But, yeah, I mean, all this discussion of certs are too large. I, like, I could imagine, for example, you'd need special cases where it makes sense to distribute public keys out of a band like this, but maybe in a I don't know, highly constrained or Kubernetes or something where you can say, here's everyone's public keys and then the actual on wire sorts of super, super small. Yeah. And and is does your draft basically a case where you can, you can specify the"
  },
  {
    "startTime": "01:58:01",
    "text": "that the signature of the public key in both formats so that you could be basically as bits on the wire within the certificate pursently or as a hash URL. You're all in NASH. You write that down in the mailing list so I can think about it. Okay. Excellent. No worries. Ori, can you go back to the ASN 1 for a second? Not very good at reading that. So just while they they go back to it, this is this same issue came up in the W3C a couple years ago, for standard called the decentralized identifiers. Specification and In that standard, you have a thing and you've got public keys and people are, like, they're too big. I want reference to them. And it resulted in a lot of discussion and W3C around all the privacy and security considerations around accessing. And so I'm just here to say, you know, timing of all of these things matters. The hash stuff definitely matters. You know, Yeah. Yeah. There's a through line here to to user engine fingerprinting if you request or didn't US to help Liquide or already have it. Or Right. Yeah. On web tricky dragons. It's fine. Yeah. Maxpilot cable ads. We talk about this you know, prior, I think it's a good work I have some use cases for this, and you know, you know, you know, So I support this. In case Mhmm. I'm astounded that we have less than 1 minute left, I'll throw in one more comment. I'll I'll eat up that one minute if you may. Yeah. I know. We we can't we can't happen in a minute. We came very close to also trying to externalize the signature in the same draft then went Yikes dragons Okay. That's make all that."
  },
  {
    "startTime": "02:00:00",
    "text": "Okay. Alright. So I'm sorry. We're not gonna get to the last one, but I'm astounded we got through this much of the agenda in the 3 hours we had at this meeting. Thank you so much. And, the person who didn't get there, please please say something on the mail list. Thank you. Yes. Oh, not honey as the states sir. Are you able to get, an extension of what you find to you first. Let's see. An extension that lets me find a cue cue for Hi. I'm a For the same subject. Are there. For the same job. That's a really nasty problem."
  }
]
