[
  {
    "startTime": "00:00:00",
    "text": "it over here my computer to look at I was just looking at the materials It's desirable. Do you want to put up the materials from there, Valerie, or do you want me to do it from here? I will do it So, shall we start? Yes, I'm just trying to figure how to get into it to figure how to get into the online tool. I'm sure I can figure it out all by myself. The, so yeah, I think you could put up yeah, I guess you already have up the right slides to start with so why don't we give it one more minute since people getting back from one could put up, yeah, I guess you already have up the right slides to start with. So why don't we give it one more minute since people getting back from lunch and at this have I don't know there might be what ten people in the room so it's like we have 50 people online now which I think includes people in the room, right? I don't know, who I guess, Jan Francis remote and, yeah you and Yonfrid are presented Do we have any other presenters I should be making sure I? have present Yes. The, I, you"
  },
  {
    "startTime": "00:02:00",
    "text": "behind your head Okay, it looks like we're, we've got the usual people, so why don't know, why don't we start? Do you want to do the chair slides or you want me to do them? I will go through the chair slides So, hi, everybody This is our next session at IETF 120 So I hope everybody here in the same, in the right room room And if you are not in the right room, please make sure you are in the right room. So this is not well, and it's a usual note well. It doesn't change recently, so just mind that all the contributions that you are made during this session is subject to IPR from IETF, so and so no so and so knows that the session has been recorded and this is just an advice for conduct, so please respect other people and be polite and so on on submitting details so chairs are margaret cullen and Valerie Smith Our idea is paul wouters and below our links for slides Metacal, notes and wish should do some administrative tasks tasks"
  },
  {
    "startTime": "00:04:00",
    "text": "so we don't need blue sheets collected automatically, but please please those who are on site login where the like client or scanner core codes that must be provided in the entrance of the room so that the number of people in the session are calculated correctly and the next time we can get a room of sufficient size and so we also need to note takers. So any volunteers? So I cannot see all the rooms So Margaret, please Is there anybody who will volunteer to take notes? I don't know your name I'm sorry. Okay, Jonathan will volunteer. Anybody, anybody? else want to take back of notes in case Jonathan gets involved in discussion or something? Okay, I'll try to fill in, I guess, if that, if that happened happens So we also. I can monitor the chat, so in case somebody is unable to send video and want to really hear the question So okay so this is an agenda for today's session and by request we just make some changes in the order from the very beginning So on the first presentation is for Nadia for Radius Blast and then we will go through the walking row documents and we will the most time to devoid for to detail as TLS and DTS transport encryption for radios because this document is"
  },
  {
    "startTime": "00:06:00",
    "text": "very important and it is close to working across last call, but there are still some issues so we're going to discuss or at least in light these issues today and then some short reports for the rest of the working group documents so any agenda passion Okay I don't think here or in the chat, so let's go ahead. Okay, then let's see here or in the chat, so let's go ahead. Okay, then I think we can start with Madias presentation Sure, yeah The camera situation I'm gonna like I'm gonna like yeah pull this out so this will be a joint presentation also with Miro Haller who is my student who also worked on this So I guess we failed to put that in the schedule and you turn away from it because people will have to trouble. Yes, okay and this is joint work with uh number of people from a number of different institutions okay I guess next slide So this present is somewhat similar to what we did yesterday in the SAG meeting, but we'll go into more details on the actual attack for those who are interested So the summary is that radius is vulnerable to a man-in-the-middle attack, and in particular such a man-in-the-middle attacker can forge our arbitrary radius responses for any authentication mode that does not require message authenticator attributes and so that includes all non"
  },
  {
    "startTime": "00:08:00",
    "text": "attacker can forge arbitrary radius responses for any authentication mode that does not require message authenticator attributes and so that includes all non-EAP authentication modes according to the ARR authentication mode that does not require a message authenticator attributes and so that includes all non-EP authentication modes according to the RFCs and this is a protocol vulnerability in the way that the response authenticate is designed. And the full details of our attack are in a paper that will be published at Usnick Security 2024 and they are online at our website last Blastradius.fail. Okay, next slide Um, so, uh, cartoon for anything, any talk about the internet So this is kind of the one for this time And I think everybody in the audience here knows that Radius is everywhere and it's kind of the standard lightweight protocol for authentication and authorization and account accounting and it is embedded everywhere in our network infrastructure and probably I don't need to say too much more for the people who are actually in the audience here. Okay, I will I guess next slide I don't know if this works. Does that work? Hit a button and it didn't do anything I had another button it didn't do anything Sounds like no. Okay so I will hand it off to Miro for the next. Thank you So yeah, in case for the ones that are not maybe radius experts already in the room, I will very briefly introduce how radius works so in rate Radius, you have a radius client and the Radius server and the protocol, for example, if it's used for authentication you will have a user that tries to authenticate by sending it, for example, username and password to the radius client. So that user will not be the radius client. It will have a third device that it tries to log into the radius client And the radius client then generates an access request that sends this"
  },
  {
    "startTime": "00:10:00",
    "text": "username and then obfuscate the password to the radius server which will then look up, for example, in a database or through some other way, whether this is the right credentials And if so, then it will send back an access, accept to the radius client, which will then grant the user access to whichever resource it requested access for. And these packets are very often sent over UDP. There is a RFC that specifies how to do radius over TLS, but it is not a standard yet and in fact, in practice, most of the traffic is going over UDP. Next slide, please So how is this access request looking like? So taking a bit deeper it starts with a code, 01 here stands for access request Then it has a 1 byte ID, a 2 byte length field, and every access request has have a bunch of attributes attached to it There's also a request authenticator, which is just the 16 byte random value. It does not actually authenticate the request, which means that one can modify the request as an adversary without being determined because this is just a random nons The way this radius is set up is that on the server, in the server config, one specifies an I address of which clients are allowed to talk to the server And for this IP address, one specifies a shared secret that is also hard-coded on the client and this shared secret is then used for example for the obfuscation of the password so that not the password is not sending clear text in for example, the password attribute here This is also a bit a sketchy construction, but it's not what we break in this attack Next slide, please so the other two packet formats that are important for our attack or access accept and access recheck packets here note that they they the code for access except"
  },
  {
    "startTime": "00:12:00",
    "text": "is 02 and the code for Axis Reject is 03 zero free. An accept packet can have a bunch of attributes that are specified for it, for example, to specify on which VLAN a user should be put or what M execution privileges are granted to that user These responses now actually have an authentication mechanism that is the response authenticator which is the MD5 hash over the packet content that is the target of our attack next slide please so the goal of this response of indicator is to prevent the forgery of responses, which is necessary because otherwise anyone could impersonate the radio server and just send access except for arbitrary authentication requests And so, for example, for a packet that has the following format, code ID, length, response authenticator and attributes, this response authenticator is computed by copying the code ID length and attribute fields into the input of an MDE 5 hash function and then it also has the request ofenticator, which remember is the nonce from the access request in there, and it's appended with a fixed pre-configured shared secret and this shared secret is what should prevent an adversary from creating a value hash for a packet that is sent. Next slide please Now, in our attack, we might to produce valid response authenticators without knowing this shared secret, which allows us to ensure or, for example, turn an axis recheck into an axis accept. And the way we're doing this is we're going to exploit ND5 collisions such that both the access accept and access reject produce the same response of indicator And for doing that, we need to understand the MD5 collars for which I give back to Nadia okay next slide Okay, so I will go"
  },
  {
    "startTime": "00:14:00",
    "text": "through a brief history of MD5 collisions and the type of collisions that have been developed in the literature. So the earliest weaknesses in MD5 data actually from 1993 This is sort of a pseudo collision. This is a collision of the compression function for MD5 So it was already known very early that that MD5 had some weaknesses But it was not until 10 years later in 2000 that the first full MD5 collision was published. And so this collision just produced unstructured string which basically look like nonsense So I'm calling them G1 and G2 for gibberish And these have the same MD5 hash. And this means that the md5 hash function is no longer collision resistant in a cryptographic sense And so it therefore is inappropriate for use But this kind of fixed collision is hard to exploit in a realistic context This does not lead to an immediate attack against protocols Also in 2004, this attack was able to be extended in a relatively strong straightforward way to what's called an identical prefix collision And so the identical prefix collision, you start with you want to produce two strings, you start with a fixed prefix and you can produce two strings that are different that have, that start with that prefix and have the same MD5 hash So this is also by appending gibberish strings to your prefix and you have two distinct gibberish strings and so you have two distinct strings that have the same MD5 hash. This attack takes at most seconds on a laptop now, and this can be used to create say colliding PDFs if you want to have colliding PDFs that have the same MD5 hash, but have different contents But this is also not strong enough for what you want to attack a prototype radius. Next slide"
  },
  {
    "startTime": "00:16:00",
    "text": "So the attack that we will actually use is called a chosen prefix collision. And in this case, you can take two distinct prefixes P1 and P2, and you want to produce two gibberish strings, G1 and G2 so that if you append gibber string G1 to prefix P1, that will have the same MD5 hash as appending gibberish string G2 to prefix P2 And P1 and P2 can be arbitrary values And this, because of the structure of MD5, because it uses the Merkel-D-Guard construction, which iterates in blocks to incorporate like an arbitrary length string into the MD5 hash, you can append once you have a collision at some point in the hash computation, then you could append any fixed suffix string S to both of the colliding strings, and you will still have an MD5 collision so this is an another final property that is useful for the MD5 collision attack. And this is the property that we want to exploit in a real protocol and this is exactly the attack that was used to produce malicious CA certificates for TLA in 2009 I believe. So the structure there is you can take a certificate you know, a prefix corresponding to an innocuous looking certificate and a prefix corresponding to a malicious certificate, and then compute these gibberish strings and hide them in some kind of certificate parameter and then have kind of the finishing stuff for the certificate that you append and then you get the innocuous looking certificate signed by a certificate authority that still accepts MD5 hashes and then transfer that signature to your malicious certificate and now you have a valid signed malicious TLS certificate. So that's how this attack works"
  },
  {
    "startTime": "00:18:00",
    "text": "in the context of TLS. And then so in the context of radius, we can try to do the same thing. And so the question, the big question is where you hide the gibberish and how you convince the victim to produce the analog of the signature So next slide Okay, so in the context of radius, the attack looks something like the following. So if we go back to our construction of the response authentic, then you can produce two an MD5 hash that results in the same response authenticator for different packets by starting with a prefix, of course, one correspondence to, say, a proper response packet, and the second corresponding to the response packet that the attacker wishes to 14 forge, and these are highlighted in gray and these are all values that are known or can be guessed by the attacker. Then the attacker computes an md5 collision which involves computing a sequence of gibberish and then needs to figure out how to stuff this into a radius protocol attribute that won't cause problems for the victim devices, but will be returned by the server Then when the server computes the response authenticator, the server will take this whole value append the shared secret that only the server and the client know, but the attacker does not compute the response authenticator, send it back the, and then the attacker can copy that response authenticator from the value packet into the one they wish to forge So next slide Okay, so I'm trying to speed up a bit Now, I think explained almost all the things on this side already. But so this may be"
  },
  {
    "startTime": "00:20:00",
    "text": "sounds on the high level a little bit easier than it is because there are two problems with this approach is one of them is for predicting the previous we need to have the request of indicator and ID that is sent in the access request. So we actually, as an adversary, need to see that access request before we can compute the collision And the next problem is we need to hide the gibberish in a way that it comes back from the server So we're looking at these one by one. Next slide, please So to address the first problem, the attacker needs to be amended a man in the middle of the three that intercepts the request from the victim client and then learns the request authenticate or reads out ID and uses this to predict the prefixes and then compute MD5 collision Now the problem with that is that we need to compute this collection fast enough to be able to respond to the client before the client times out And so for our proof of concepts, we reduce this computation time from many hours down to below five minutes This is still longer than most timeouts in practice So in practice, you might see up to 32 seconds for our proof of concepts, we reduce this computation time from many hours down to below five minutes. This is still longer than most timeouts in practice. So in practice you might see up to 30 to 60 seconds timeouts if there are two FA involved in the office authentication process, otherwise it might be lower than that But the computation is very easily parallelizable so we think that it can be easily the time can be easily reduced further if one would spend a few weeks writing a dedicated implementation for this, maybe even on hardware. Next slide, please Now for the second problem in order to do this collision, we will need the server to compute the response of Anticator, including the recheck chamber ish, that is needs to be appended for the second coalition input And so why would the server ever do that? That seems a link"
  },
  {
    "startTime": "00:22:00",
    "text": "bit impossible, but fortunately for us the RFC, or fortunately for the attacker, the RFC specified, the proxy state attribute which is mandated to be returned by the server without any modifications. And so this is perfect for us. This is perfect for how hiding this taberation. Next slide, please So the end-to-end attack works as follows before we go into more detail The diversity tries to log into the radius client sends its user that they want to log in as, say, admin some random password, that's certainly wrong Then it intercepts the access request from the radius client to the radius server It will learn the response authenticate, the requests authenticate and the ID from that packet. Use that to predict the prefixes and then compute the reject JBRish and accept JBRish for the two values of the MEP5 collision. It will append the reject JBRish to the access request and send that along to the server Since that reject JBRish looks like a proxy data, attribute, the server will attach it to the response and set back an access reject with this Jibrish The adversary uses the access reject to learn the response authenticate your and then puts that response authenticator into an access accept and switches the gibberish out to the accept gibberish, which then creates the same response authenticator and thus validates on the client and so the radius client will give the adverse access to this account next slide please So since we all love by bits and bytes, here is a very concrete example of how this works So the attacker triggers an access request. This request looks as follows Here we have the ID1 and then the request authenticator that is just some random bytes. The man in the middle attacker puts these two values, the ID and the request authenticator into the prefix, where the difference is just that one of them is an accept and one of them is a reject, as you can see by the starting bytes 0203"
  },
  {
    "startTime": "00:24:00",
    "text": "and 03. And then you can use this to compute collision chip-rish now this can't be fully random because it must look like a proxy state attribute. And so that's why it needs to be start it needs to start with in hex two one because that's the the number of proxy state attributes and then also the right length. And so since our gibberish is longer than what you can fit into a single proxy state attribute, we also need to spread it across multiple proxy states. And that required some improved of existing md5 collision attacks by the way if you want to actually play around with this example and see the full hex strings, you can look at our example on our website next slide please So then, now that the adversary has this re-checked Chibberish, you can append this to the request, which is exactly the same request as it observed in the first step and then when for the server to respond, since the Chibberish looks like, proxy state attributes, the response also includes the chibberish at the very end, but it now has a response authenticate that the server nicely computed for us using the shared secrets that the attacker doesn't know And so the adversary can take this response authenticator and put it into an access accept and switch out to Jiberish. The rejection, Jaberish, should accept Shibirish. Next slide, please And so those this packet will now verify because of the md5 collision And so here I wrote out how you would compute the MD5 value you can look at the script and see that these two values give the same md5 Next slide please I will briefly mention some extensions for our attacks. It is possible to put any attribute into the accept prefix some extensions for our attacks. It is possible to put any attributes into the access, into the accept prefix, the access accept packets so the adversary can gift themselves any execution privileges or put themselves on any VLAN that they want to, and this just requires us to pat the access"
  },
  {
    "startTime": "00:26:00",
    "text": "the predicted access reject pre- and that is possible with proxy state attributes Also proxy state attributes are not the only way that you can create this echoing back. I think this should, this is a mistake on the slide. It should say rechecked gibberish instead of prefix. Sorry about that But other attributes could also be, could also reflect user input and so for example there could be an application that reflects a user But other attributes could also be, could also reflect user input. And so, for example, there could be an application that reflects a username. So it could say in the reject message, oh, sorry, you log in for user XYZ failed And so we could stuff the collision change bridge into the username and then that would be reflected, and so that could be another way to exploit this attack Note that the client does not need to interpret these attributes it just doesn't need to fail it needs to include them in the response event indicator computation. That's all we need from it Next slide, please So in terms of impact, this means that the pop chop and MS job modes are all vulnerable The modes that do require a message authenticator attribute are not vulnerable, and this is specifically EAP. The reason for this is that the message authenticator attribute is an HMAG MD5 which is not vulnerable to the MD5 collision attack that we presented here The threat model does require the adversary to have network access. So if you send your radius udp traffic over the open internet, then it's of course broken but if you have your traffic in a VLAN or I use IPSEC, then the Docker first would need to have access to this network but the attack is still very useful for Latin movement within an organization. So if an adversary first got access to your network, it can use this attack to then get access to all the devices in your network that use radius for authentication So in the short term, a mitigation is that all requires and responses should include this message authenticator attribute, because we cannot break that. But of course, the better"
  },
  {
    "startTime": "00:28:00",
    "text": "solution and the long-term solution is to move to radius over TLS so that we can wrap radius inside TLS and we can rely on TLS for the confidentiality and integrity that the radius does not provide. Next slide, please. And I think with that I hand over to Nadia for the discussion Okay, so a brief discussion of MD5. So I think useful for like a meta-discussion in the radius working group is that MD5 has been known to have weaknesses for 30 years. It has been cryptographically broken for 20 years. And sort of until last year sort of the consensus in the working group of appeared to be that there was not an explicit MD5 MD5-based attack against the specific construction in radius, but that was basically due to the lack of cryptographic attention. People did not realize that this protocol was still in use. So it is not that the protocol was secure. It was just that no cryptographer had to be apparently looked at it So I am very pleased that there is a lot of movement in mitigating this flaw and I've also, it's been great being here in talking to everybody about this and I would specifically like to praise CERT and Alan for helping disclose helping with a super complicated, coordinated disclosure process which has been incredibly smooth for such a complex and wide-reaching vulnerability So the next slide is our last one And yeah, I think we can, if there's time for questions, we're happy to Hi, paul wouters, individual, I'll keep a chart One question I have is if the pre-shared key had been put in first in MD5 hash, would that have made a difference instead of doing it last? Yes, yeah, yeah Yes, it would have made a difference because we couldn't"
  },
  {
    "startTime": "00:30:00",
    "text": "inject the prefix before the unknown inputs into MD5 So we could not have created the collision the way we do. And my second question was, how much CPU time did you use to get to the five minute point? I let on your answer the second question. I just had a fault for the first question to if you put it first, then you can actually append any attribute to the protocol, to the packets So that will be a different issue. So it will not be a solution but oh yeah right that that would be vulnerable to a length extent attack. So you would have to put it first and last So if you sandwich it, it's not. Let's not recommend but or it's not it's not it's not hMap but I think I think it's actually not vulnerable to it collision attack, okay, or length extension attack But yeah, so the, the not MD5, but it's not a it's not HMAC, but I think it's actually not vulnerable to a collision attack, okay, or length extension attack. But yeah, so the order of magnitude of the computation is 2 to the 43 hash computations um and so so 64 core hours. Okay, that sounds, yeah So sorry, so sorry, translate this to me in money, like computers in the shop kind of thing. $50. OK, thanks Huh? run on AWS will be one. Per run thanks Per run on AWS will be one. Per run. Yeah, we did not want to run this on AWI because something that cost $50 per run will cost $10,000 to develop and debug So this is Alan. Thank you. It's been a tremendous amount of work. Lots of emails back and forth as Natia knows, working through all the issues Yeah, Hecchi from Radiator also helped quite a bit I'd also say, I think, on a protocol"
  },
  {
    "startTime": "00:32:00",
    "text": "design point of view, independent of MD5 or anything else, there are two issues. One is signing data under an attacker's control, as Heckie was saying in the chat, you know, you have a username which gets echoed back Now you have some kind of injection The other one is a failure of Postel's law, which is sometimes you shouldn't be liberal in what you accept, right? If the clients sends a packet without proxy state, and proxy state is for certain kinds of signaling, the client should not accept packets which have proxy state But the RFCs are generally vague about this kind of stuff. Don't worry, it's fine And I think experience in the last 30 years shows that you might want to be a little more parent about what you accept if you can't wrap everything in TLS and go home QMaisal, MPI and this is a I am ignorant about the cryptography question So you said HMAC, MG5 is not vulnerable but what would be the computational cost of breaking H-Mac-M-G-5? So, okay, so the basis for our statement that HMD5 is not vulnerable is a paper by Mihir Bilari from maybe 10 10-ish years ago showing that HMAC is secure, you don't need the assumption of collision resistance for the hash function for HMAC to be secure It is secure. I think if it is like a you don't need the the assumption of collision resistance for the hash function for HMAC to be secure it is secure I think if it is if it is like a PRF like right okay um there's a actually some some discussion there was kind of an enlightening discussion at some point that the output length of MD5 may be an issue because it's only 128 bytes and so you may be able to, or bits and you may be able to get a collision in say like 2 to the 64"
  },
  {
    "startTime": "00:34:00",
    "text": "outputs so um more computational and expansive, but still not great. Not great if you were thinking future proof. Yeah. Thank you HMECMD5 is not a great long-term solution, but it is something that is implementable now on existing devices. I'm going to cut the QA queue after Jonathan just because we're running behind, but Jonathan, go ahead jonathan hoyland, Cloudflare. So this is super interesting very cool work. My question is about the long-term mitigation which is the when you run radius over TLS, is it actually bound to the TLS handshake? Like, does it use the exporter key? and actually tie itself to TLS handshake or are you still vulnerable to man in the middle? in just like channel synchronization attacks? Sounds like Alan's going to answer this one Yes, we've been having discussions about this on the Radix list. The theory is that if you authenticate both sides, TLS should protect you from that The difficulty is it's not clear how to buy, if it doesn't get if TLS doesn't protect you, it's not clear how to bind the radius data to the TLS session because you need to add additional signaling To a certain extent, the radius client and server, especially, for proxies, are just sending packets that they got from somewhere else. So tying it together means you need to inject additional data for hop I think unlike a lot of other uses of TLS, radius is in a trusted model, which you have trust between client and server, which means you are not going to accept TLS connections from random source You have to have a client certificate you have to have a server certificate, and"
  },
  {
    "startTime": "00:36:00",
    "text": "unless the TLS people say otherwise, that should hopefully protect you from issues, unless the argument is. So, yes, I just want to do the security analysis TLS-13 and this is like one of the things that very much annoys me so let's say I have clients connects to TLS server A and then which happens to be attack controlled, it hits the wrong server And then the attacker then goes to the real TLS server, B, and they just shuffle packets in between That shouldn't work. That should stop working especially if you inject. So what you're supposed to do is in the, like in your MD5 hash you should take the TLS exporter key out of the TLS session and shove it in the hash because then it's not valid if it's been forwarded over multiple TLR hops and that's like yeah, this is one of the things that's in the appendices that no one reads in it makes me very sad. Yeah, I sent that exact statement, basically to the mailing list. There's on ongoing discussion and disagreement about whether it's necessary that really is all going to be covered under the detail doc, which is our next thing up So is it, I mean, do people think we should get Yon Fred to do his presentation and then to the DTLS doc, which is our next thing up. So is it, I mean, do people think we should get Jan Fred to do his presentation and then talk about this, or do we want to just jump right into this? under the rubric, but not make a noddy and I'm sorry I missed your name, stand up here while we do it please feel free to join in but it's not about this attack anymore So, yeah, I'll try and close that. I don't think the TLS biz discussion will talk about this because that's all too new I guess from the protocol point of view, if we can't trust the TLS protects"
  },
  {
    "startTime": "00:38:00",
    "text": "us and we still need to add crypto binding, then all uses of RADSEC today have issues And we have to add per hop signaling to radius on top of everything else. So when you do that T and we have to add per hop signaling to radius on top of everything else. So when you do that TLS connection, the first thing you get through is some kind of channel binding, crypto binding We'll need to add that I know you were responding, but please try to add yourself to the queue when it makes sense You know, I added myself to the queue and so I will make my comment, which is that it's not that unusual for things that use TLS to do what I think of as channel buying You said crypto binding. I think we're talking about exactly this same thing, which would be to take some unique information from the TLS session and buy it into the radius layer processing so that you know that both ends of the conversation are talking over the same TLS connection There have been some arguments about why that's not important, Ian radius I I'm being me at this point, not a chair okay? I don't buy them yet. The people who made them are really smart and I might buy them later but i haven't i i'm not quite as smart as they are so I haven't figured out why what they're saying is true The if we did want to do it, we have this pesky secret. We decide to overwrite with the word, you know, constant rad set Maybe we could put it there. We do have the notion of attributes Maybe we could put it there. There are places we could do something to bind these things together it would be a NOMCOMpetible change"
  },
  {
    "startTime": "00:40:00",
    "text": "to Radsec probably, but definitely but it's we could do it It has some advantages whether or not it's worth making a compatible break with RADSEC is not clear but we are already making a compatibility break with RADSEC because we're requiring everything that does RADSEC TLS to do RADSEC D TLS, right? So, if there were a way to do it where people who don't care what we say is required, could keep using RADSEC, maybe that's the right answer, or if it's actually a concerning attack, we might want to do it before we recommend that RADSEC be universally deployed instead of radius UDP and I think we as a work going now, I'll switch my hat and I'll put on my chair regardless of what my personal opinion is we as the working group need to develop a consensus opinion on the answer to this question And I'm, I'm would not be sad to find out that I'm wrong, but right now I'm leaning on the side of we probably should be putting in that channel binding, okay, but my personal opinion is not what's important, what's important is forging a consensus opinion in the work group about this subject. So if people want to talk about this subject, we could talk about it for a few more minutes We do have the document it's about coming up, but I doubt I'm in I can't imagine that Jan could talk about it for a few more minutes. We do have the document it's about coming up, but I doubt, I mean, I can't imagine, that Janfred has put in a good answer to this problem in slides he probably made before it came up on the mailing list. So the anyone want to say any more about that topic or should we just keep talking about it on the mailing list? Alan thinks we should keep talking about it on the mailing list. I don't see anybody else expressing an opinion so let's keep talking about it on the mailing list because I"
  },
  {
    "startTime": "00:42:00",
    "text": "think I have an opinion and both of us agree So in the meantime, let's get Yonfred up to talk about the document and the other issues that exist in the document and what still needs to do done to get this document ready to send to work group last call Adding, of course, that this new issue also will need to be resolved. So, so Janfred, are you ready to get? Yeah I think so Yeah, so very sorry for the short presentation on that one because I'm sitting here at a camp and just squeezed in this Yeah, so I did an update on the document. Go to the next slide Since the last IETF, we actually had some discussions on the mailing list and we received finally some reviews Thanks, I'm sorry for the spelling error thanks to all reviewers for their comments. There was really great input there and Fabian was quite busy putting in a lot of pull requests on the GitHub where we manage the document text There are some discussions ongoing in the in the pull request so have a look at that I think it document text. There are some discussions ongoing in the pull requests. So have a look at that. I think the GitHub rape should be linked on the document page Next slide So we have some open questions that one very big question that we should resolve is the question"
  },
  {
    "startTime": "00:44:00",
    "text": "of server identity. We have a very long discussion on the mailing list about that and I'm not really sure that we reached a consensus or an understanding of what we mean because at some point the document talks about connecting to the same server. So we should have some text around that. Someone would we have the problem because of the hop-by-hop protocol architecture that there is a difference between the final destination rate server and radius proxy, which then forwards the packet but for radius client problems looks the same if it's the radius server or the radius proxy so there should be some text around that problem for some more to do look at the document, I've put them in as comments. So if you use the HTML view, you should have them highlight that's what I use to document what in this spec is still not ready Then go to the next slide So obviously this slide was prepared before I had time to read all the discussions about channel binding and the TLSPSK selfie attack and so obviously we would need to address all that so next steps for for now are to include the feedback from the reviews. Have a look at the full requests sort that one through and once we're done with that, I think working through blast call is a bad idea until we"
  },
  {
    "startTime": "00:46:00",
    "text": "find a solution for 440 the different problems that we have because I also have thought of a possible attack that I'm need to see if it would work that would probably break some of the assumptions we make or at least cause denial of service probably probability So we definitely should have a look at that before we send the document to last call And we still have some TLS parts where I personally think we could use the input from people who actually know the crypto much better than we do. So I've written Utah here. I don't think it's good for TLS, but maybe some TLS experts are in the room and have opinions on what we're trying to do Yeah, so the idea that Margaret talked to me about was to have this document ready before doubt would be great if we could manage that, but it would require that we all keep discussing on the mailing list after this meeting so we can finish up this document because also in light of blast radius I think it's really important that we get a response out quickly and not, but also not produce another standard that people will throw their hands above their hats and ask what they thought when they were specifying this And I think that's it from me Obviously, I didn't have time to encourage all the discussions on the one"
  },
  {
    "startTime": "00:48:00",
    "text": "I think that's it from me. Obviously, I didn't have time to include all the discussions on the pull requests, Fabian submitted sometime this week Yeah So I'm going to interject here that there are a few things we need to do to get this document out the door One of them is that we need to enumerate all of the open issues. Right now, some of them are in the document, some of them are in GitHub I'm not personally sure I was trying at one point to go through all the email on this document. I'm not sure all of the issues that have been brought up are in the union of those two places And so the first thing we've got to do, I think is figure out what are all the open issues on this document and then obviously resolve them and then go to working group, last call, or, or further and whether or not that can happen by Dublin is our obviously going to depend on how quickly we can do those things um i suggest in the last working group meeting that one of the ways, and Alan has walked out of the room, so we'll see We don't want to decide anything before it's back, but one of the ways we could move from one of the ways, and Alan has walked out of the room, so we'll see. We don't want to decide anything before it's back, but one of the ways we could move forward on this is to have like a small design team or a small group of people who are helping you, Janfred, to enumerate all the issues And there's probably many of the issues in recent emails were what I would consider editorial and you should just incorporate those without anybody else's opinion if there's a s this thing from the end of a word or so something but for the issues that are not editorial, there are a number of them that are like one of them is this paragraph should probably occur somewhere else in the document. Okay, and we can just put it somewhere else in the document and send out a version. And if anybody in the work group objects, that's, we'll figure out what to do about it. But, you know, but then there's other issues"
  },
  {
    "startTime": "00:50:01",
    "text": "like the recent ones that have come up around channel binding and other, there's a few other substantive issues already in the document that i think we're going to need a set of people to propose a fix and send it to the list because these issues aren't going to get fixed otherwise. They're not going to get addressed otherwise And so I don't know that it needs to be a closed design team. I mean, maybe we just wanna have a call. I don't know, like a working group interim call to see if we can work on this document with whoever's willing to come. I'm not sure how to get this moving, but we don't know like a working group interim call to see if we can work on this document with whoever's willing to come I'm not sure how to get this moving but we've got to spend some dedicated time working out these issues and writing text as proposed changes. So, and if we can't get that done, the document never gets published, right? So I don't know what to people, any changes. So, and if we can't get that done, the document, never gets published, right? So I don't know what to people, anybody here have any other ideas for how we could get some motion? on this document? Do you think? having an interim call is a good idea? Do you think? coming up with a couple other stuckies to help Janfred is a good idea? I mean, what? any suggestions for how we can get more eyes looking? at this and some work going on to actually resolve this together? issues? People seem excited about it what any suggestions for how we can get more eyes looking at this and some work going on to actually resolve the stickier issues? People seem excited about the TLS stuff. Maybe we had an interim call soon We could have that be one of the agenda items, but we could actually try to cover the issues that have been there longer and people would show up I don't know any thoughts? Because with the current level of feedback, we're getting and the current level of text suggestions we're getting this document will never be published. I will retire and this document will still not be published So how do we change that? And I want to add that we are behind the milestone for this document very badly behind So we need to move quickly just to"
  },
  {
    "startTime": "00:52:00",
    "text": "well, the deadline is already passed, but the document is very important And as a co-chair of Utah, I suggest that young freight wrote a message to Utah, made in least with preferably with concrete questions because people are lazy and it's easy to answer some concrete questions and persuade people to review a document I just proved if you write something to the list that people you say, I think we should do this And people don't agree with you, they will write back somebody's going to come up with I think we should fix this problem this way And then we need to get comments on that text with no text what i meant so just questions and suggestions and I think it will work. It must work so any, I think jonathan kua next jonathan hoyland and Clair Sorry, I was just briefly, look, I haven't been subscribed to Radx on my mailing list subscriptions before. I was just briefly looking through I think there's some misunderstanding about what channel binding are and what they're for and how they work in TLS This is my specialist subject. I'm perfectly happy to contribute now that I know this is happening. And yeah, if you want to have a call, then I'd be happy to join it, assuming it wasn't a ridiculous time this is Alan now that certain panics are done I have more time to spend on this. Thank you paul wouters, if you do not get an enough reviews about open questions for a document, I just read recommend that the author puts in what they think is best"
  },
  {
    "startTime": "00:54:00",
    "text": "and then you hit the early review buttons and then at least you get some feedback from other people. You can do that as at least a kickstart of the process So for me, personally I think it would be nice to have at least a few people set up a call. I don't know if it should be an interim or just an informal call not directly connected to the Radix working group just so that I'm not the only person looking at this stuff because, of course, I have the edurome view, but only that one so it would be nice to have other people who have a different radius point of view in there too to help me figuring out what the best course of action would be Maybe we can rope in Valerie and jonathan flat get some TLS experts on the call, too Sorry paul wouters speaking as AD. If you do a meeting like that, I would recommend you do use the Meetecho Tools and the official interim facilities because then there's a recording offer. People can look at it later, can come back with feedback. Usually the big official interim facilities because then there's a recording offer. People can look at it later, can come back with feedback. Usually the biggest problem for interim meetings is that you get too many people showing up and you don't get any work done, but honestly, this is radius is not your problem. Yeah, I mean, I think we will um i you know i think an interim meeting would be better um, and more open because it'll be absolutely more widely and stuff, but I think that's a deal I think if Jan Fred is said, he would like to have some open discussion of the city"
  },
  {
    "startTime": "00:56:00",
    "text": "it'd be pretty easy for us to set up an interim and less you would object, which I can't imagine Sounds very good Okay, so what's up? after this one? It's going to be you I have the agenda here somewhere. There we are uh deprecating insecure practice Yes so this is the second or third attempt for me to fix radius 5080 was first That was only 2007 or something so we're fine. Next slide, please So the blast radius attack means there's a whole lot more content in the document description of the attack, mitigations, there's almost 10 pages new content with lots of details In theory, everyone has to upgrade everything unless they don't care in which case it's fine, we're vulnerable, we don't need to change anything. That is about how to they don't care, in which case it's fine, we're vulnerable, we don't need to change anything. That is about half of the responses we've been getting for this, unfortunately Next slide, please So for people who missed SAG yesterday Radius was defined in 91 by living What I don't have on here is fights between Jeff Schiller and Mike O'Dell from UUNET in 95 where Jeff Schiller hated MD5, and then ran away because he just didn't want to deal with it and so rating got published 97, there was the actual first draft published 98, the H-MAC-Oth starts being done"
  },
  {
    "startTime": "00:58:00",
    "text": "the actual first draft published. 98, the H-MAC-Oth starts being defined, and 98 is the first record I can find where I complained about this insecurity So it's been a while and then 2869 says, yeah, we don't need to authenticate packets It's after bunch of discussion on the list about it, in 2007 co-off, I'm the co-author on 58 It's after a bunch of discussion on the list about it. In 2007, co-off, I'm the co-author on 5080, which was, can we just use H-MAC everywhere? And the suggestion was to always include HMAC on every access request being sent out and so far as I know there was only one implementation that did that and then now we're getting hit over the head and 2024 with the frying pan for things that we should have fixed 20 years ago or 30 years ago. Next slide please Yeah, does anyone still use Radius? I thought it got replaced by diameter, or maybe we could use EAPL but, you know, no one's actually using PabChap, MS CHAP over UDP right, except for cloud providers who say they're using radius UDP over the internet and that people should use MS CHAP because it's more secure than PAP. And this is the marketing text that people have on their websites and it's wrong. MS CHAP is effectively clear text at this point If you're willing to use a little bit of disk space in about 10 milliseconds of work, you can in invert MS CHAP and get the passwords out So it's a disaster Maybe we can use TACX in some cases for administrator authentication people are already using that. There is a radius RFC for admin authentication and author authorization, which so far as I know, nobody has ever implemented. And then the other point, for admin authentication and authorization, which so far as I know, nobody has ever implemented. And then the other pushback is the attack is hard, so I don't need to upgrade I was just looking earlier today on GitHub There are FPGA"
  },
  {
    "startTime": "01:00:00",
    "text": "code for MD5. So if you're willing to throw that into an FPGA, you might be able to get another two orders of magnitude performance improvement depending on what else you can do with it Next slide, please so the original intent of this doc document was, hey, an attack is coming which was a little timely perhaps maybe we should just deprecate UDP and then as various other things came up including the attack, there's a whole list of deprecating other things too. We should consider MS CHAP to be 100% broken. There's a lot of text on PAP versus CHAP There's a lot of recommendations out there saying PAP is in insecure, use CHAP because it's not sending clear text over the wire, which PAP isn't either, but nobody pays attention to that and if you use CHAP, you now have to have all of your passwords and clear text in the database and for anyone who's seen any pawn to own things, that's a much worse problem than your password being sent maybe in clear text over a DSL PPPOE link Unfortunately, most public recommendations are horrifically wrong, which is why I think it's a good idea to wedge whatever we can into this so we can point at it and go this is the right way to do things Next slide, please Yeah, some last minute notes. There are no RFC which recommend delaying access rejects. Otherwise, you can do dictionary attacks There have been people, most notably Apple, years ago got attacked by this. You just send billions of requests and you can guess people's passwords"
  },
  {
    "startTime": "01:02:00",
    "text": "So this needs to be added to the document and nothing recommends constant time comparisons for things like the request, authenticate, response authenticator, message authenticator, that kind of thing And then also based on Bernard's comment on the list there are security issues with radius once you are within that trust framework you can do anything So there is no provisions anywhere and not even any discussions and anywhere on I just invent packets for someone else's realm and I can send disconnect or COA package somewhere else I can invent accounting packets, send them upstream There's all kinds of attacks you can do once you're in that trust framework Typically these are stopped by the administrators phoning each other and saying stop doing that, but it's worth mentioning Next slide, please I think that's it other than, yeah, nobody's looked at radio security for 25 years, so it's a nice change change change Oh gosh, yeah. Questions, comment, stones No, everyone's happy I think everyone's tired out from previous discussions on radio security. I think that's it Yeah, I mean, I think we need to get the thing in shape that we're telling everyone to move to, and that's the tricky part right now is we're telling everyone to move to something we know from the work we're doing on that document is incomplete and we wonder if it's secure so that I, you know, we need to have a lot more certainty about that. I think this document is blocking on the previous document we talked about"
  },
  {
    "startTime": "01:04:00",
    "text": "So it's going to be published after the one that will never be published unless we do work on it As usual one that will never be published unless we do work on it. Yes, you are, as usual. ALPN, yeah next slide, please So this started off as radius 1-1 turns out it ends up being getting rid of MD5 completely and relying on TLS completely for security, which helps with FIPS, among many other things Lots of reviews from lots of different people lots of different typos barring any additional issues like channel binding, crypto binding the document is implemented. It seems to be done It's interoperable. People are happy with it. And it does solve other longstanding issues with radius like you can send more than 256 packets over a TCP connection Everyone's happy with that I mean we're gonna have to get more review on this document And I think right now we're going to focus on the other one But I don't know that anyone's unhappy with this document, but I also don't know that enough people I think the document is waiting for for our ID for all people are waiting. I think the document is waiting for our ID, for all, at least it is indicated in the Datatracker So if Paul is in the room so Paul is AD review it at this point? Yes, that's what the Datatracker said. Submitting for submitted for two IESG for publication Action holder, paul wouters so i've complained about the action hold market and a Datatracker because if there's any kind of a default follow-up happening, the action remains physically on us but it's actually on somebody else to do the work so um Datatracker, because if there's any kind of AD follow-up happening, the action remains physically on us, but it's actually on somebody else to do the work. So let me just, while you continue, I'll check exactly what you"
  },
  {
    "startTime": "01:06:00",
    "text": "status is and why this is waiting. I'm hoping it's not waiting on me, but if it is, then I'll fix that soon too Okay, thank you But, okay, next one is TLSPSK So, TLS, PSK next slide, please Minor changes since IETF-119, some PR from HAC I've been somewhat busy haven't updated the document. It seems to be pretty close, barring some additional comments from Bernard in the last week. It's good to put additional text in about check identities and PSKs and all that Because if you have the PSK you can pretend to be client or server And so that needs to be made a little bit more explicit in the document Fabian implemented this in Radsec proxy me and my team have been busy we haven't done it in free radius. But after some squinting it open SSL, it does seem to work. And I believe you can do TLSP and or client certs in the same system at the same time, which helps with flexibility of configuration, so you're not forcing to do one or the other Next slide. I think that's it It's the last slide Zero. Good, okay. Yes and this document is also sent to a IESG, but as Datatracker indicates, it is, it's need to be updated after ID review So, Alan, if you have time to make this update and then all hopefully will move this draft"
  },
  {
    "startTime": "01:08:00",
    "text": "further and then Paul, hopefully we'll move this draft. Okay. Yeah. Well, it sounds like we have eight further well it sounds like we have a D review but also a PR from Hecky so I think okay ahead. Yeah. Well, it sounds like we have AD review, but also a PR from Heckee. So, um, I think, um, we need a new version of the document out and we need, you know, people in the working group to at least be given a chance to read it if they're and then we can you know, at the same time, ask Paula if it addresses his concerns So we're through with publication some open mic Jan Fred Yes so just in response to the TLS, PSK and the selfie attempt, I think it would be very useful to actually have a close look at that one. I haven't had the time to read it fully because I'm here at a camp but it looks like yeah, setups like Eddie Rowan would possibly be affected by that because they usually have a setup where the radius proxy is acting as both radius clients and radius server. So if I understand the attack correctly those clients would be, or those those peers would be vulnerable to that attack So I'm not exactly sure how the process would be now that the document is actually already submitted to IESG, but definitely I will have a look at that one and maybe produce something text From a process standpoint, you know, if we find it"
  },
  {
    "startTime": "01:10:00",
    "text": "technically blocking problem with a document, it does I mean, there's no problem with us saying too Paul, never mind, moving it back into the work group to fix it. I don't, you know, it's not going to go through the IESG without somebody from figuring out for sure if this is vulnerable to the selfie attack and what we have to do to make sure that it's not hannis who i don't think is here since I can't say his last name, sure schofenay something like that um i've known him for like 30 years, and I can't say his last name but if he sent some stuff to the list about what would be needed to make it not vulnerable, obviously it would be good if some other people look at that I assume TLS people have all already trodden all over the selfie attacks thing, and then we probably want them to look at what we've written in see if it makes sense. So, yeah I wrote an RC 9257 which is directly addressing this and like how to fix the Pesophia attack and all the things you need to do to make sure selfie doesn't happen in this case. So yeah, 9257 Yeah, I think that was referenced in Hannes' reply. Fabian? Yeah, in short, the way I read Salafi is basically don't exist your own identity for income connections connections Parvada City, I just have a had a look at the V1-1 document it's basically ready for me to initiate the ballot for the IESG so it should be on the telechats in the next couple of weeks"
  },
  {
    "startTime": "01:12:09",
    "text": "Well, that would be cool, a little progress So it's open mic time, so if people have open mic issues please step up and up street Yeah, Shrigandovalis is called. So we had one submission on the 5G authentication or radius So last IETF I presented and the feedback from the working group was at the time that we are too busy. We need to clear a few things I'm just wondering when is it a good time to bring some new work I'm not in inclined to ask Paul to let us do new work until we get the DTLS document out Is Paul inclined to tell me I should consider it? sooner than that? Paul Vardis It's really a sooner than that? Paul Vardis, it's really up to you, or sorry, up to the chairs If you think the working group concerns, up to the chairs. If you think the working group can sort of do this on one end and also start thinking of new work, normally the problem is that new work takes over everything and nobody works on the older work, but again, if we looked at the room here before, the older work is not getting reviews anyway, so that's not your problem here in Radius. So if you want to do that, sometimes I hold back a recharge to make people work on the older things but I think here people really do want to work on it. That's just a matter of reaching out to the right people. So I don't have any principles issues of, you know, slowly ramping up new work and we can do the rechartering All right, well I mean, one of the questions I guess we could put to the group is, has anyone"
  },
  {
    "startTime": "01:14:00",
    "text": "who here has read? the document that Shri is talking about? And Shri, could you come up? and make it clear what document just so that people know if they've read it? I have read it, but Yeah, this is for supporting information private 5G environments. Today, if you look at cellular architecture support only SIM-based authentication that's what diameter interfaces. So in P5G, private 5G is getting deployed in enterprise environments. Enterprises use radius infrastructure extensively for all the Wi-Fi access authentication on dot 1X, Ethernet devices Now, in that environment, if you bring in a P5G, device, we don't need a new authentication infrastructure We can use the same radius infrastructure for authenticating sim and non-sim devices so the proposal is about defining a new method that supports a phi-gaka method so so that enterprise can use one infra for policy and identity correlation, everything is in one place I may have old information, but last I knew we had a liaison relationship with the this is the 3GPP partnership, right, that's no? This is not exactly we are not touching the 3GP architecture I think all we are saying is if some enterprise deploy P5G, they can potentially use, you know, this is how it can work These are the elements that send they can send signal in the access request. This is how the algorithm works. This is how the authentication is enabled. So we are not truly, you know, we don't have to go to 3GPP, but I think that's my view. Yeah, I mean, we should make sure this 3GPP thinks we don't have to go to them too But, but let's, um, anyone in this room read? this document besides me and Shrey?"
  },
  {
    "startTime": "01:16:00",
    "text": "ah Alan is read it on the, how do I ask that on the participant list? Is there a way to ask people? Like if they've read something, we can poll right? I don't think I can do that from here Do you know how to do a post? from your side, Valerie? I will do it What's the question do you want to? ask? Whether and who on the call? Who who will talk? Have you read the Have you read the Have you read the 5GP is it? Draft Gonderville, Radext Draft Gundavalli Radix 5g aught yeah zero one yeah what you say x5g i'm not sure i'm Well, it's correctly, okay, but I think people understand opinion no one has said no opinion I just it's funny to think what that might mean I think perhaps this should be they should be reminded on the least the problem state and the solution. Just people to bring attention of the people, to bring attention of the people because it seems that currently almost nobody reads this draft yet yeah so i think we should go on the list and we should ask people to read the list"
  },
  {
    "startTime": "01:18:00",
    "text": "read the draft and express opinions about whether they would like to bring it into the working group, including a well-formed message like you know, would you be willing to work on this draft? Would you be willing to review it? Are you planning to implement? it? That sort of thing. And see what response we get not a boff, but kind of the boff questions. And if the working group is interested in working on the document, then we'll go to paul and talk about how we get that out to new work and whether going to new work is good enough to get the three GPP's opinion or whether we need to go through the liaison and then and then if everybody wants it maybe by that we will have made some progress on this DTLS stuff We'll have to see about the timing of bringing it in If this group isn't going to have interest or anything to read it, and actually move it forward in a useful working group way, I mean, there are other possible channels like trying to talk to Paul about whether he would AD sponsored or something and have us do review the three or five people who've read it, you know, but I don't want to bring it into the working group if we don't have enough interest in the working group to actually reach working group consensus in a meaning way on publishing it because otherwise that's kind of just a waste of time. So let's see what the, we'll send a message and see if the group replies with interest One comment is last time when I presented I thought at least from my notes says there was good amount of interest That's the only thing I can say and three I suggest that you not only send a message just a short message just with the suggestions for the people to read the draft but sent along the message"
  },
  {
    "startTime": "01:20:00",
    "text": "which describes the problem and summarize the way you are going to solve it, because people before they read the trap, they understand what is all about. Sure I'll do that. Thank you so much Paul Vakos, if this is specifically related to like a to SIM card verification or something? did i understand that properly okay so then i would definitely want to make sure that those people that do SIM cards actually know about this and that this is something they want, right? Like we shouldn't make standards here that the people who actually are supposed to use them don't know about it. Yeah QMASEL MPI-N hopefully this is an easy question. Why is this implemented as an extension of radius and not as an EAP method? I'm trying to understand your question. Yeah, 5G archa is a method that's widely used, right? So, EAP is another mechanism, what you're suggesting is EAP is not so extensively used in the cellar device at this time Phi Gaka, I meant to say, Phi Gaka EPSA in 4G 5G, a car, and this thing, there's also EIP based in fra, right? So, yeah. Yeah, I'll, I, there's a, like, a whole 3GPP architecture into which what Sri is talking about fits and I think what he's saying is they're trying to do this as a small extension to the existing 3G architecture not to move the 3G architecture to eat, which maybe it would have been a good idea if they used to eat or something in the beginning but there's a separate SIM authentication method in radio that was done that way and not through EPS"
  },
  {
    "startTime": "01:22:00",
    "text": "historically. Right, so there's a fundamental difference between EAPA and 5G ACCA, which I'm failing to understand. Cool Anybody else have anything? No, I think we can end early and get, I don't know, 38 minutes of our life back. Thank you everybody And watch the mailing list for a message from Sri starting out with asking people to read it and writing a short explain of it. And then, you know, a couple weeks out with asking people to read it and writing a short explanation of it and then, you know, a couple weeks after that or a week after that or whatever makes sense, the chair will send a message to maybe we'll write back in Vermont and tell people what was discussed in this room but then we'll we'll send a sort of a solicitation of interest kind of message to see if there's enough So we don't have, you know, at least five or ten people who want to read it and think this group would be the right place to move it forward then then I don't, you know, I don't think we can. If we do, then we'll talk to Paul about how to do that. Sure. Thanks So so that is done So thanks to everybody to you. Thank you very least Thank you. See you We'll talk about the alt QR draft for IPSEC too Valerie. I just saw the messages, but I haven't been able to read yet what Terra was winding about"
  },
  {
    "startTime": "01:24:00",
    "text": "about Thank you"
  }
]
