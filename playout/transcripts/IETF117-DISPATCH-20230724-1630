[
  {
    "startTime": "00:00:53",
    "text": "session of this week. and dispatch working group and art area joint meeting. So first, this is the note well. And please, I want to rate it but please do go through it. And please follow the IETF precise and all the policies. and the beware of all the BCPs. keyer. And this time, we were also suggested to add this note really well is about the anti harassment. please, if you have any concerns please speak up. and they will be the team. to take care of this. And since we are the 1st session of the week So we spend a bit time about the meeting takes. And still this time, it is a hybrid meeting."
  },
  {
    "startTime": "00:02:00",
    "text": "And for the in person participants, and still you need to use the meter code. And then so here, this is the sign. and to join the make queue the my queue. And if you are not using the on-site person, please, please, keep the audio and video off. for the remote participants please make sure your audio and video are off. unless you are presenting. And please use a headset. Here are some resources. for this 117 IETF. and the agenda, metaco, and other informations. And here, you can also have the technical assistance if you need it. And this is first, we will go through the dispatch meeting. Here is our agenda. And the first of all, Do we have any comments And on this agenda, So for the 1st dispatch session. we will have 4 items. And then we will go into the art area meetings. Okay. So please do utilize the meeting list. to have the discuss. to have the discussions. and we have the separate meeting list for the art area and the dispatch working group."
  },
  {
    "startTime": "00:04:07",
    "text": "Okay. So now we will start the dispatch topics. but but but please, be focusing on these dispatch questions. since we focus on the dispatch Okay. So Jim, we can start to the first topic. Thank you. Great. Hold on a second. Let me Get switch over here. 35 k. Unstable connection to the server. That's students. No. Not that one. That one. No. Not that one. So I should give it to There. I got it. Right. Yeah. I You would you would would you rather do it? If you yeah. If you do that, then I have a remote clicker. that I can use So if you just approve right here. You got it. And just just to amplify on what Shuping said, Remember, I mean, it's it's really it's really fun to get into the details the technology here. But, really, what we're trying to do is to find the best home for these different topics in IETF or specifically in the art area. So you know, let's let's focus on that. Focus on that. whether we need to create a working group, whether this belongs in an existing working group,"
  },
  {
    "startTime": "00:06:04",
    "text": "whether whether it should be AD sponsored, those sorts of questions are really the focus here. So we'll I'll make sure that we have a little bit of time. towards the end of this 20 minute session in order to address those things. Go for it, Justin. Alright. Thank you. So hello, everybody, and good morning, and welcome to the 1st session of IETF. I don't know if it's worse being the first on the 1st day, the first on the last day. But I've got I've got working groups in both. Alright. So, anyway, I'm here to talk about a technology called spiffy. and sort of the implications that this technology could have in the IETF sort of things that spiffy addresses and doesn't address, and what we think that the IT might be it might be interesting to address here. in this space. So let's say we've got 3 different cloud service These can be Lambda functions. VMs doesn't really matter for our purposes. They're just services sitting out on a cloud architecture somewhere. they wake up, and we want to be able to provision these things with, like, secrets and certificates and identities and identifiers so that we can address them in different ways and stuff like that. And that's where spiffy comes in. So with spiffy, you run an agent on the system so that when these systems wake up. When these services wake up, they call this agent API. basically says, hi. I just got turned on, who am I? What do I do? And they make that query using using the the spiffy specifications, and you may also see a technology named Spire that is an open source implementation of SPIFFie. And in any case, these services wake up, make this call to an agent and that agent turns around and says, okay."
  },
  {
    "startTime": "00:08:02",
    "text": "you. This is your identifier. Here's the certificates that you need. Here's any keys that are associated with Here's your CA, your trust roots, all of that other stuff. just by virtue of you waking up in that space. Now spiffy does this by doing a node attestation. So these things are not preprogrammed with sort of a bootstrapping secret because then it ends up being a whole other layer that you gotta figure out, well, how do I strapping secret in order to get the into the secret store. spiffy is all about solving that specific layer. And this is the first space that we think that there might be some alignment with work here in the and it's at this level that I think perhaps the art area might be the most interesting place for some of these conversations. When we show up, with this new piece of software, and I'm running in this space, like, how do we tell what that is, how do we communicate that across the wire. And, you know, are are there ways that we can actually standardize and do that beyond just the spiffy API and platform. We've already got some existing work with rats and, you know, the token and all of that kind of stuff here. And there's gonna be talks later this week about attestation in the OAuth working group in the SEC area. But this is a really sort of interesting space that a lot of good work is happening, and people are solving real problems in the space. and spiffy is one platform where where that kind of thing is happening that it might be interesting. I I it would be interesting to bring that in here. So now that we've got these identifiers and certificates and keys and all of other stuff, we can start to do some cool tricks. We can use mutual TLS communicate between all of these nodes now because everybody's got a certificate and everybody's been programmed with the appropriate CA's so that the yellow node knows that the orange node is the one that's making that call. The green node knows that the yellow node is the one that's making that call. It's works together really well. This is sort of at the core of what"
  },
  {
    "startTime": "00:10:03",
    "text": "50 solves in data centers today. So you are chaining up all of these workloads, and they know who they're supposed to call and who's supposed to be calling them. However, however, that leaf node down at the end would really like to be sure that it was in fact the orange node that called the yellow node that called me. SPiffy doesn't solve for that. MTLS doesn't solve for that. we need additional kinds of signaling to carry that kind of information across the wire. And this is, of course, a very, very simplified view of what a call chain could be. we'll get into more convoluted cases in just a little bit. But we think that this is a second area that there might be some interest in doing some work here in the standard space, figuring out how do I convey that kind information. Is this even something on the TLS layer? I don't know. We I think we need to start many conversations. I see a lot of people shaking their heads. I'm problem with you on that. By and large, I think this is at a higher level, but We need to figure out where that where that kind of thing lives, how to communicate that. Alright. So let's throw some labels on these things. Let's say that that orange box is actually an API gateway, not is calling the food service, which in turn depends on the bar service. the reason that we had set up a gateway is that we've got some external client application that is calling all of this stuff, and it knows to only talk to the gateway. Well, in this sets us up with the situation that the client all the way over here on the left. that's the thing that has all of the access rights. That's the thing that's allowed to do this call. But that leaf node all the way down at the end, that's the thing that has the data to fulfill the request. So we need to be able to communicate in a secure way a cross that chain in a way that can actually be verified. And that's at the root of a lot of the next series of problems and use cases that I'm gonna talk about. So in all often similar protocols, we abstract out this"
  },
  {
    "startTime": "00:12:02",
    "text": "concept. Instead of saying the client is calling a gateway, we say the client is calling a resource That resource server is internally made up with a gateway that's backed by a bunch of different services. the client doesn't actually care. like, it shouldn't actually care that what happens inside the resource server, the client just knows that I am making this API call. This is what I expect to get out of it. This is what I put into it, and it shouldn't care about what happens inside there. This abstraction allows us to do some really slick stuff, like having an authorization server, abstracting the concept of the resource owner to get access tokens, and all sorts of things that we do with API protection calls. today. We can even do center constrained tokens these days so that client can be the only party that presents that. token in order to call that resource all author remembered ignores everything that's happening inside of that RS. But And that's where the problems really start to come into play. So let's take that sender constrained access token, for example. And the client's the only thing that allowed to present that. Well, we need to get that access token all the way down to leave service in some way because the access token represents the rights, the access rights that are associated with there. So we need to be able to get that information all the way down to the end, but The gateway can't present the token. It's constrained to the client. The food service certainly can't. It's several orders in. So we need to either strip off the center strengths. We need to wrap it with something. We need to replace it with something. There are a lot of techniques out there today. But this is a 3rd place that we think, this type of chained, sender constrained, accessed rights and token sharing. This is where we think that there is some really interesting work probably in the sec area. Once we get down to that leaf node, it's not just about the token, obvious. we wanna be able to ask questions like which resource am I supposed to be presenting here? could be represented inside the access token or something figured out by the gateway and passed along."
  },
  {
    "startTime": "00:14:02",
    "text": "there's a lot of different ways to potentially open this up. And so we think that this is a 4th place that we should really be focusing on use cases and conversations. And this expands really quickly to the fact that that leaf node in many cases is actually gonna be asking a whole ton of different questions. Did the token come from an AS that I trust? Was it, you know, which resource owner said that this was okay, was it actually presented by the client? Now do I have any assurance that it was presented by the client if it was under constrained? And is the chain of services that got to me, like, how this whole thing got to me. Can I trust that? Can I verify that? And at what level do I need to know all of this information? In a lot of cases, these days, we just tell the the Lorraine box. Don't worry about any of that. That's all been taken care of for you, and we have no way to verify any of this. And I think that we can do better. And this is this is a really big place where there's there's a big hole in the spiffy specifications, a deliberate hole in the spiffy specifications, to to solve more complex problems like this. this gets even more fun when we realize that that's not necessarily the end of the chain. that bar service can go call another API down at the end that is out side of its cloud infrastructure. We cannot workload calls go across multiple different cloud architectures, multiple deployments going through their own gateways and all of this. And so now we get to that final leaf node down at the end, there's a whole stack of things that it might need to verify at different levels of extraction. And we need a way to talk about systems like this, and we need a way to talk about this the these types of concerns Hey, Justin. Yeah. If I can interrupt for a sec. There's been a little bit of chatter And one of the questions that's coming up is Does this really belong in sex rather than art? So if you can kind of Oh, yeah. So I'm also presenting at Sec Dispatch, and we don't know where exact this lands"
  },
  {
    "startTime": "00:16:02",
    "text": "And I'll I'll get to that in a sec because I think that there are multiple parts to this that probably bridges both spaces. Yeah. I mean, people seem to agree that this is important, but where is the question? Exactly. And that's that's that's why we're here. And finally, it really is turtles all the way down because So if you miss the transition there, the AS and the client themselves probably have their own internal chains of systems that that they have to call and verify. in order for that call to be trusted by somebody in the system. And if you think that this is sort of complex and overwrought, like, Financial Systems are doing things like this today. on a very regular basis. Like, one of these node probably a, you know, a compliance system and an auditing system that needs to make sure that everything that happened up to this point is actually any good. The spiffy project is has been deliberately about solving that bottom colonel, that's what they called their book, you know, when you when you boot up the system in sort of, you know, a cloud environment, how do you get that information into that and then Spiffy is kind of hands off what you do with that from that point on. The first question and this is the part that is more, I think, a better fit for the art area is that bottom turtle. You know, these node access stations, the this type of information. This whole concept of a workload identity and a cloud service identity. Do we want to, or do we need to address that? Or even parts of that here inside the ICF. And the second question which, you know, I me coming more from the security side of things myself, that I I think that there's there's a lot more meat to it do we want to address any of the other turtles in once we have that sort of idea of a workload identity, we can start building out use cases like I was just showing and start to talk about and reason about the trust in the layering of all of those different pieces."
  },
  {
    "startTime": "00:18:02",
    "text": "So the next step is to figure out what the next steps are. that's this is where we are right now. We just got a nonworking group mailing list, the workload identity in multi service environments or whimsy. because you shouldn't let nerds pick names for things. We're planning to propose a BAW for IETF 118. probably nonworking group forming. We're not sure yet. We really want to start these discussions. That's why I'm here at Dispatch to kind of get this stack of ideas out in front of people. Some of this might belong in art. Some of it a lot of it probably doesn't belong in art. we're at the stage right now where we're figuring out what the what the connection points between IETF and this whole world really ought to be. Great. Thank you. So we've got three people in the queue so far. Jonathan is first. Morning. Jonathan Rosenberg from 59. great to see this. We based a lot of these problems in our cloud software. Mhmm. So I'm familiar with a lot of these. My question in terms of the IETF context is How many of these are protocols that will span vendors? and that was sort of unclear. So if you go to lowest turtle layer. Mhmm. For example, if the agent running on the pod talks to the what whatever that server was that does the enrollment Right. Yeah. Yeah. If if if those are both software written and built by Amazon, or written and built by Google as the cloud provider, and they never a cross vendor thing. then you might not need any standardization effort at all. Mhmm. So that's my question is, could you is is there a clarity on where these things would cross boundaries between different vendors. That is a fantastic question. spiffy is intended to allow that to cross vendor. in practice, it's, by and large, people use the Spire open source project because it works and is deployable across lots of different systems. There are commercial implementations as well. Spiral SPIRL being one of them. And"
  },
  {
    "startTime": "00:20:04",
    "text": "And, you know, it there are other stuff out there. It is intended, though. to allow that type of Cross Fabric connection. I think one of the things that the one of the person -- Why? Like, what would be a use case where there. like, I would deploy an agent made by the Spire team -- Mhmm. -- and it needs to talk to a server Like and it's an IETF question. Like, in my opinion, if it's the same vendor always, And it's just that the client and the server are always made by the same piece of open source code. You don't you don't need to come to IETF, and you don't need to work So that's why I'm asking a question. So there's 2 there's 2 aspects to that. One is I just downloaded one from one place and it was packaged in with an agent and I already have an infrastructure running from somebody else. that's sort of the you know, to my understanding, that's, like, the the that was the drive for the spiffy project to get started up in the first place. And the other one, which I think is more interesting is if you start looking at these concepts at a higher level. So take them outside of the cloud, vendor, you're ultimately looking at, how do I have a trust way to map a sort of a service identification type of thing onto a set of trusted attributes and being able to query that in an environment that may or may not actually be in the same cloud. So this has been deployed as a single sort of, like, within a cloud attestation because that's that's the fundamental problem this spiffy is solving. But, you know, let's say that I'm standing up in a in a federated identity environment. You know, I've got a software bill of materials that I need to be able to about to my auditing system to say, like, this is the right set of software that it's supposed to be here, go check it out, and then they'll come back with, yes, Hi. Welcome to the network. Here's what we are going to call you. And and here's the, you know, here's the trust bundle for this particular network. It's it's the same problem at a different layer, layer, And so"
  },
  {
    "startTime": "00:22:03",
    "text": "some of the some of the conversation that we've been having in on this is, like, do we actually you know, can we actually extrapolate up to that? Okay. But but we need to move on. Yes. Sorry. I think you definitely need to hold a Okay. Philip. there should be a working group forming both. Eventually. Whether it's art or sex, I'm kinda like iffy on because, you know, You can make everything into a security. area problem these days. The other thing is this is actually a problem I tried to solve with WS security about 20 years ago. Mhmm. So you might want to because, you know, we anticipated of those use cases, and we did it so early that, of course, we didn't have the experience of doing the simple problems So it might be worth looking at some of that to see whether What went wrong? Yep. Yep. WS Star is a vertical treasure mine of interesting and sometimes good ideas. Okay. A tool is next and promote Yeah. Hi. Hi, Justin. I know. So just wanted to note a couple of related things that are going on in the OOC's working group. So This is mainly about that second turtle or second level of turtles that Justin was talking about, which is sort of the you know, getting the identity of the caller through the chain, making sure that every service is able to identify which intermediate services have been in the call chain and all that. So there's some work going on in a subgroup inside of the OAuth working group. in the ITS. And there are a couple of talks on Wednesday morning at 9:30. one about transaction tokens and one about identity chaining that are very much related to what Justin just talked about. I'll place the agenda of that meeting in the chat."
  },
  {
    "startTime": "00:24:01",
    "text": "So I just wanted to know that. Thank you. Yeah. I wanna note that that is proposed work. in the oAuth working group. Okay. Thank you. So any other comments about specifically where this should be honed. So So do you have a a clear view of the next steps here, Justin? Yeah. I think so. It's it's still, like, like Phil was saying, like, I think that it's unclear which area this will end up being in, which is why we're doing this at both dispatch and sec dispatch to kind of get people from both general spaces because it it may end up being one of those weird things that kind of straddles areas in in an awkward way. because we are dealing with you know, workloads and things like that and not just the security side of things. But, yeah, our our goal like you said, is to propose a bot you're interested in this topic, please join the mailing list. and we've been working on the the co presenters and I have been working on a set of use case documents that we're gonna be posting to the mailing list really soon now. And, hopefully, that'll help really really kick the conversation forward. Oh, Brian's on the queue. Nope. is not on the queue. Ryan Nobody on the -- Okay. Here comes Murray. Hi. Marie, I'm just if you're gonna do this at sector batch as well, we're gonna have to have some dialogue about you go to a BOP, which area should it be in and all that stuff. Totally. So whatever we decide has to be anything with sec dispatch. That's all. Mhmm. Are they you know what? you off the top of your head when they're meeting? Like, maybe I can try to go to that. I think it's tomorrow afternoon."
  },
  {
    "startTime": "00:26:04",
    "text": "I can't remember. I think it's I think it's tomorrow afternoon if I recall. don't remember which session. I can look it up. That's fine. Thanks. Yeah. Yeah. Tuesday session 4 is the answer. And colon is in the queue. So so thanks for presenting this. We we use this for some of the use cases that you about for tracking for security devices to understand -- Mhmm. what happened to a session so if a virus shows up later, we sort of track back where it went. So it's sort of used for logging information as much as anything else, but we do do use it. I I mean, I think it's great. But I think the work you're proposing doesn't actually have much to do with security in the sense we're not like, it the work to figure out how to create these certificates the crypto is in them, how they're signed, how they're validated, those types of things is is largely already solved. That's not what you're talking We're talking about transporting these around. So I would put a strong argument of You know, running this is a buff in the the art area and making sure it didn't conflict with anything badly in the security area or, you know, until working cross with them type thing. But I I think that that's where it's gonna if you do it the other way around, I don't think it makes any difference anyway. Yeah. All comes the same. It's no big deal. Just the ADs of both. They're going to have to both coordinate on this. Yep. Thank you. We had a we had a similar feeling. and there for those that didn't see, there were a handful of thumbs up in in the room to that comment. Okay. Well, it sounds like that's our come. Thank you very much for presenting, and we have said CDN coming up next. Alright. Thank you. and I need to Hang on a second. I gotta figure which sounds like a said Canadian, but"
  },
  {
    "startTime": "00:28:08",
    "text": "Alright. Go ahead, man. Do you want do you wanna control the slides? Yeah. I'm trying to. I'm not sure. I need to grant that. So there there we go. Just make sure this works. Okay. Hi, everyone. My name is Matt Juris from Meta I'm as often sharing ancillary data enthusiast. And today, we're gonna talk about my draft, which is securing ancillary data for a meeting with Katie that with devices in the network or SADCDN, So these are our topics for today. First, we're gonna talk about what is our problem. So specifically, we're gonna talk about a motivating use case for this work This is not the only motivating use case we see for this work, but it's the one we are focusing on today. we're gonna go into the existing solution landscape. and why maybe those solutions are not really working for this problem. which leads us to the what we view as the need for standardization in this space. particularly from the IETF. And, finally, the dispatch question. diving right in, what is our problem? So So overall, the use case we're focusing on in presentation is what we're calling adaptive video traffic shaping. So this is a very common practice by mobile network operators or MNOs. It is also sometimes referred to maybe not as shaping, but throttling or policing depending on the context and the particulars. But This is overall the thing we are talking about. And the overall goal of this is to try to limit the video bit rate of adaptive video. So stepping back a little bit, what it what is adaptive video or ABRs I'm going call it. So In this diagram, on the left, we have a mobile client. So this is the mobile client that is"
  },
  {
    "startTime": "00:30:00",
    "text": "trying to play a video. It's we'll say it's accessing data Internet via a 15 minute per second radio link just for argument's sake. on the right, we have a content server that is serving this video. So the way these ABR schemes work, if you've heard of things like HLS or dash is that the client at the outset of playing a video know certain things about the video being played. And so these videos, instead of encoding a single video, as one bit rate, they will typically break it up into 1 to 5 second segments and encode that with different bit rates which correspond to different quality levels and resolutions. that's what we see on the right here. These are for a given video session, the quality lanes qualities that we have available, and the client knows this. So the overall goal of an ABR scheme is to adapt to changing network conditions to try to maximize quality while minimizing frustrating experiences like stalling. So looking at the timeline, we have in this little diagram, the way might end up working is that for the first video segment, the client will try to fetch, say, the 1 megabit per second quality. seems that this know, downloads relatively quickly. And so it says, okay. I'll try for the 20 megabits per second. However, the network in this case since it's a constrained link is not able to sustain this. And so that causes a user visible stall. causes the ABR scheme to back off and it will instead fetch the 10 megabit per second quality lane. and it stays there for the rest of the playback. Okay. So what does this have to do with shaping? So The key thing to note about shaping here is that video in modern mobile networks often takes up the and share of the traffic that's being served. And so this is costly both for the operators, but also potentially for the users. And so there's a desire to limit the bit rate that is being played back to trade off the"
  },
  {
    "startTime": "00:32:04",
    "text": "experience of the user while also serving the needs of things like avoiding congestion in the network. but also you know, avoiding things like data overages for the users. So the network so the mobile network operator to achieve this puts a shaper or a police or or a throttle or whatever you wanna call in the network. This is typically implemented with something like a token bucket. that is configured to try to hit a certain target bit rate. So the desired outcome in this case is for the overall quality to be limited to the 2 megabit per second quality lane. So going back to our timeline, how does this end up working in practice. First, the the client has before tries to fetch the 1 megabit per and quality, sets this download really quickly again, and it increases the quality of fetches to 5 megabits per second. However, due to the presence of the shaper, this is not it's not able to sustain this delivery, and so there's, again, a user visible stall. This causes the ABR scheme to back off, and then we end up with vetching a 1.5 megabit per second video. So this all seems fine. right, that the the goal was to limit the quality put a shaper in, we configured it, and the quality was limited. So what's the problem? well, It may look good on paper, but in practice, there are a lot of difficulties here. of the key things to note is that the shaper is a artificial limit on the network delivery capacity because it's pretty much configured to be a set point. And by running the traffic through this shaper, we inevitably end up with periods sometimes long periods of underutilization of the net resources. And this has downstream effects for things that you might not expect like the radio equipment is not able to optimize its spectrum usage because it doesn't have necessarily enough data available, and it just causes a scheduling problem. Another thing that is"
  },
  {
    "startTime": "00:34:03",
    "text": "difficult about this is that these ABR schemes, while they seem like they'd be relatively it's very difficult to get this right. a general sense. And so They don't converge quickly. They end up causing frustrating experiences for users, Anyone that's played video on on the Internet has seen this where there are stalls, the the quality goes down, it goes back up. ping pongs between qualities, and and this is all because the it's trying to apply heuristic to a complicated system. And then that's before we even talk about the struggles of the content server that's actually sending the video data. So as it as all things on the Internet, it uses con a congestion controller, but these congestion controllers in practice, in practice, are not great at dealing with token buckets in particular or really any form of shaping. their end This is a really difficult problem to solve, and they basically just make everything above worse because when when the shapers are composed with other forms of organic, congestion for lack of a better term. It's very difficult to know what exactly is going on. So we talk about all the problems, but is there a better way to do this? And there is. The the the better way to achieve remember that what we're trying to achieve here the operator perspective and from the user perspective, is limiting the quality. That's what we're really trying to do. And so to do that, a much more direct approach, is to just have the constant server cap the bit rate. So everything is the same as before except for now. when the mobile client is trying to play back a video, there is a maximum of the so all the those higher quality lanes are not available. So Yeah? Yeah. Just kinda try and keep it at a top level here. I think people are are understanding the the problem that you're trying to solve. And so we're really trying to find a home for this work. Yeah. I'm I'm getting to that. Thanks. So"
  },
  {
    "startTime": "00:36:04",
    "text": "the basically, what happens is that you're able to converge on the quality level without causing a stall because there's no discovery needed by the client side. So so so The problem here though is how does the content server know to do this? this is where we get to the core issue here is that we don't have a way to communicate this And so getting into what could we use to communicate this, Well, we we need we need to solve basically for information disparity where you have client, the network, and a content provider, all all being able to exchange information in a cooperative way to achieve a certain end. So what can we do use today to do this? Well, There's inbound network signals, so things like ECN, DSCP, IUP options, are all things that we're familiar with that we use today. communicate various things from the network to the endpoints. How how then there's out of band things where People may be familiar or not familiar with these, but these are things where mobile network operators will stand up certain API endpoints that can be integrated with with content endpoints and Exchange more rich information. However, there's problems with both of these existing places. So for the inbound network signals, They they have a lot of appealing properties from an implementation perspective. But the ones we have available today, the core problem with them is there's a limited There's very limited information fidelity available. So if you think of things like ECN, people might say, oh, look. You're just you're just trying to solve a congestion problem. But ECN is really only designed to expediate, the delivery of this information rather than having an implicit signal from congestion being detected. It's just telling you explicitly. that's not really what we're trying to do. We want to know a richer kind of information like, hey, I want the application to change behavior. So ECN is not really fit to do that because it has limited information at Fidelity."
  },
  {
    "startTime": "00:38:02",
    "text": "And if you try to increase the information fidelity, you run into the problem of well ECN and these other things are inherently visible on the wire. and that's not great because now we're going to have the opportunity for of monitoring And then for out of band APIs, they frankly just aren't going to work for something like this. They have a lot of scale problems. They have high complexity for, basically, every party for the operators, OEMs, content providers, and they're also not suited for conveying this sort of real time information They do they do allow you to could convey arbitrarily rich information, but not in a very scalable or realistic way. Additionally, there's not really a lot of consensus in this area right now in the industry. that brings us to the need for standardization. So how do we take those those sad faces and make them happy? Well, we've got basically 4 principles that we want to achieve here. So The first is that we want this information exchange to be secure and with standard cryptography be for very obvious reasons. But this also allows for things like if you have to solve for authentication, how do you trust it? while we we've solved these problems in a standard way, and we should leverage that. The other key another key thing is in band session establishment. For exchanging this information, only way it's realistically going to be achieved is to do it in an inbound way. anything that requires an out of band party is not going to be able to scale for this kind of information exchange. Another thing is we want to maintain transparency with the end user and also maintain privacy. So today, for example, end users are not really aware that any of these kinds of things are happening. They don't know about the shapers. They don't know about the policies. And this is an opportunity to solve that because we are able to exchange that information, and then we can surface it potentially in a user interface."
  },
  {
    "startTime": "00:40:01",
    "text": "then, of course, the most obvious thing is this has to be an open interoperable And standard. If we want everyone to do this, we want all operators, all content providers, and all OEMs to do this in a cooperative fashion, it has to be open interoperable standard, that's why we think that this is potentially good work for the IETF. which leads me to dispatch So what now? Probably a lot of people here are getting vibes of similar work having been done in the past with varying degrees of success and cataclysm, the So we're aware of that. There's there's a lot of ongoing work that's kind of in this area. But none of it's really centralized, and it's not exactly clear where this belongs. So we want what we're here today to find out is are there others facing similar problems, not just like this video problem, but any problem where the network and and content endpoints can cooperatively exchange information for better outcomes for everyone. And facing similar constraints around security and privacy. And Yeah. So that's that's pretty much all I have. There's a side meeting I want to flag tomorrow that if you're interested in learning more details about how we think this might work and other perspectives from OEMs, please show up there. And one of our remote participants asked if there was an online link for side meeting? Is what? An online option for the side meeting -- Yes. It is. -- for that? there a yes, there's. Okay. ends. Yes. It's on the side meeting, Wiki. Okay. Great. Thank you. Alright. have a few people in the queue. Ted is first. We It's at hearty explicit signal enthusiast. So thanks for the presentation. The dispatch question here is I think that this needs to have a off in order to deal with the"
  },
  {
    "startTime": "00:42:01",
    "text": "large scale concerns of the IETF as a whole around how explicit signals leak other information And so I would suggest abaugh with an explicit portion of it addressing privacy and leakage concerns. as part of the setup for the bot. Alright. Alyssa's next. Alissa Cooper. Thank you for this presentation. I agree with what Ted said about the dispatch question. I'm just curious If if it's difficult to get consensus like, let's say you had something Kamara like, but it was more suited for real time and are, the interest involves find to find a difficult to find consensus around something like that. Like, what would be different about doing it here. that would that would make consensus more likely. So that's a very good question. from my perspective, the main reason the main thing we think is better about the IETF is the engagement services. So a lot of the out of band stuff is driven from the operator side versus what and there's many, many, many, many operators, and there's a lot of incentives involved in that space, whereas this kind of solution that's more protocol y for lack of a better M, what we really need as is agreement and consensus between content endpoints and OEMs, the equipment, the people that are actually implementing this stuff. as a much smaller space of people that already have an existing way to work on similar things like protocols. So you still have to obviously engage with mobile network operators and this and this sort of thing. But there's an existing way for us to work together with contident points and OEMs. And so that's why we think this is potentially an easier path to get consensus is"
  },
  {
    "startTime": "00:44:00",
    "text": "the IETF. I answered your question. it does. Thank you. Okay. Richard Burns is next, and we're getting a considerable queue, so I'm gonna have to close it pretty soon. I'm Richard Barnes. So I'll also like Ted team explicit signal yeah, I'm I was glad you you characterized that taxonomy to, like, help clarify those those distinctions. I I note in your in your draft, this kind of solution sketch is looking at explicit signals, kind of in the way that, like, spud or ECN does in, say, in terms of signals emanate, from the endpoint I was wondering, like, if you if you thought that signals that I mean, it emanate from the network toward the endpoint could be a workable solution space here, because that's seems like it might have some better privacy properties and and and leakage properties. Right. So we we see this potentially going both ways for lack of a better churn. So being a like so that there's In in in the draft, there are there are actually 2 use cases presented. 1 is this and the is packet prioritization. Those are directionally different. So, for example, This one, the constraint space would be communicated from a network device to a content endpoint acted upon by a content endpoint. packet prioritization, it would go the other way. It would say, content endpoint originates this information, network acts acts on it. And we think that there's an opportunity here to develop a single channel covers both use cases so that we aren't having to potentially reinvent the wheel every single time we want to do something cooperatively. sentence to your question. Yeah. So that that's good. So I think as we're kind of refining the taxonomy of things here, I think that's another useful distinction to have. because it seems like we might be able to make progress on one bucket of those uses. Yes. not the other time. I agree with that. Okay. Ali Bacon is next. Hello. This is Ali. Thanks for the presentation."
  },
  {
    "startTime": "00:46:02",
    "text": "this pacing stuff for traffic shipping, whatever we call it, has been around for a long time. and then we have done some standardization work in MPAC actually called server and network assistant dash. where we do this kind of signal link within the transport itself so the security actually belongs to the It's the player. And then later on in CTA, a couple of years ago, we completed it specs for a common media client data, common media server data, which allows bidirectional hinting between server and clients. So I'm not sure whether we are familiar with those or not, but that's definitely something you should check. Thank you. Thank you. Magnus? Yep. Magnus Wirthland. I think there's much more interesting use case around this using this signaling. And I think there's clear potential here of actually solving some of the criticism against spot plus plus of security. actually having explicit security entities and all those things, which was in in the general use case, it's very hard. So But, I guess, we're gonna have to go the route above. I see see that it's reasonable, but kind of discuss more tomorrow. So k, Harold. Harald Alistrom. Just to I think this problem is more complicated than you made it out to be. out. I mean, I was considering the factor. If you have a game download. You want to get that at maximum speed so that you get it out of the way. you have a video playback, you want to hit the lane which means that The network has to be told to whether you're watching a video or downloading kit. And the only way you can know which lanes of video are available is by communicating between the endpoint and the network and the service provider. So"
  },
  {
    "startTime": "00:48:02",
    "text": "I see this as means that could expose a terrible amount of information about the user to the network. about what the user is doing. if not, done carefully. I also see this Requiring Things to happen ahead of time when you set up sessions, I mean, normal age or less transfer is TCP. but you choose the bandwidth aim for before you send the send of the tpsash So Very complicated problem. wish you I luck. They'll just respond to a couple things. Yes. It is a very complicated problem. The other thing what what you said about leaking information, I think it's important to note that this is already being done. The like, these shapers, they exist today. is not like a hypothetical thing. Traffic is already being identified. generally by extracting the SNI. And so you know, video traffic is already being specifically targeted and shaped. by having this channel Though, you yes. You would still communicate that information, but you would only you would choose the content end points would have to be in control of what is shared. So that is that part. what you said about the bit rate being chosen before the connection. That's not true for ABR in general. it is adaptive. It is it is done segment by segment. So Okay. We're just about out of time for this segment. This is is a separate TCP session. It's a terrible design. No. It's not. like it's not a separate d t b session. Anyway -- Let let's move on. please please people at the mic, please announce your your name and eat the mic so that we can hear the road people can hear you well. then route to AT and T."
  },
  {
    "startTime": "00:50:02",
    "text": "you have questions on on the screen. I think the yes, yes, yes, Yes. It it is it is a hard problem as Huddl set, but I think it is a good time to resurface and look with different lens with what Ted said about, you know, the privacy considerations and explicit you know, communication between network and devices and working endpoint in the cloud. I do think that you know, the proposal is a little bit vague in terms of where and how the the information is being sent. maybe a little bit too to chatty, but it's a good way to start the conversation. and I do think that it's it's the right time to start think you go above or something too a bit more formal to to to get the ball going. Thank you. Okay. We're we're actually out of time for this segment, but What I'm hearing is Arteria Baugh is that Consensus from the from the crowd here? Getting odds and a couple of thumbs ups. Alright. Well, Yep. you very much. And, I guess, that your your your dispatch outcome. So Kaiser is next. I will. and then you wanna control it. Sure. Sounds good. Sounds good. SDP security assurance. Right? You say control sign in. Control need to request I want you to do Okay. the pollock. Hello, everybody. Hopefully, you can hear me in the back. A thumbs up. All good."
  },
  {
    "startTime": "00:52:01",
    "text": "This mic's better than last time. Cool. So my name is Kiser Davis. I'm with Cisco Systems. and really quickly wanna talk about a problem that I called STP Security Assurance just because I didn't have a name, but, you know, it's still a working title. Next slide. So what we're talking about here in the problem statement is that there's a really important value in the SRTP cryptographic context that is not signaled on the wire or shared amongst applications. And when I tell this to administrators or I tell this to software developers, they kinda scratch their head and say, why did we do it that way? And I don't know why. I wasn't around when we wrote the original specification, but even in the original specification, we cite some examples where you know, we might need to share this on the wire, but we just didn't do So my thought today is how do we share that value on the wire. So one of those main values is the rollover counter. rollover counter is something that we kinda locally manage and maintain. And because it's never explicitly signaled, it's super easy to get out of sync. And when you get out of sync, you have packet decryption problems. And packet decryption problems lead to usually no audio video, sour user experiences and lots of developer time trying to figure out who's at fault pointing the finger at each other and saying, you know, where did we all go wrong? Currently, at the moment, we have a lots of different key management protocols for SRTP, and most of them handle explicit signaling of the route the rock, the ROC. And That's pretty cool. But we've kind of forgot about STP security. I know STP security at the moment is kind of the elephant in the room. We don't like it. it has a very huge install base, and it's good enough for most people's security applications if you layer TLS on top of something like SIP. So we've got a lot of interesting problems, and it really is super simple to solve. go to the next one of us. Some of these scenarios I wanna talk about real fast, just some highlight in 6 of these."
  },
  {
    "startTime": "00:54:02",
    "text": "our ongoing broadcast sessions where we join a session we're blasting media everywhere. Somebody has to join up and understand that cryptographic context. And, you know, if this session's been going on for a while, rollover counter might have happened, and there's no way to tell that new participant. That's not a very common use case nowadays, but it's theoretical. The hold resume transfer is probably the most common type of scenario I see out there. You know, you've got party a and b talking to each other. put a call on hold. You transfer party a to party c. Now party c resumes a cryptographic context of some type, and they're kind of out of luck. Or you might do a hold and that's with a and b, you bring in a media server to play some music on hold or something like that, call them see Something happens. We roll over during that session. We bring the session back to party b. and and we had a rock rollover. And there's no way to tell that party b that, hey. we had a rollover during the time you were gone. So there's a lot of different scenarios there where I see problems, and it generally, you know, interrupts between different vendors because that's kinda why I'm here today. We've got application failovers. And if, you know, you don't have a stateful sync, some sort of proprietary logic in your clustered high availability to share this data amongst your nodes. It's not easy to kinda get that new information on the wire. A theoretical scenario that I put together is if you're using secure SIPREC recording, and you might bring in the recorder later in the session. to start that recording, you know, maybe via button press or some sort of application logic. There's no way to tell that SIPREC recording server via STP security you know, you need to instantiate with rock of 1 or 2 or some other value. There's a lot of other scenarios where ambiguity in the original RFC. kind of led to improper resets of the SRTP cryptographic context. So, for example, I may inadvertently think that a key change should reset the rock to 0. And we have a lot of finger pointing that always happens with, hey. Key doesn't necessarily indicate that we should reset the rock. Well, we can kinda solve those problems by just saying, here's my new key. Here's the rock I'm gonna use in"
  },
  {
    "startTime": "00:56:00",
    "text": "we feed that to the SRTP generator and makes all of those issues go away. And lastly, the original RFC had kind of this misconception that there was no late joiner. And I've mentioned a couple scenarios where there's late joiners and there's probably tons of other ones. But we bring in participants, two sessions very late all the time. So we kinda missed the mark there. And that was the original reason why they kinda didn't put this on the wire. I see this all the time, and it's for the past 6 years, been really pervasive problem that I've been working to solve with many different folks in my industry. And I just think that it's time for us to get together and just say, let's put this thing on the wire. Let's discuss the format in which it needs to be conveyed. and then do it. Next slide. So real quick, comparing those key management solutions, STTP security, We don't have a way to convey this. DTS SRTP with Ekt SRTP, can convey the rock in the SSRC values they need to go together. my key, which I don't see in a commercial offering very often. has a method to to convey the rock in SSRC, but it's there. I'm not sure how ZRTP handles this. I look through the spec. some supporting documents, and I'm not sure if they ever solve for this problem. I know that h 235.8, which is kind of a delta of STP security, which has been morphed to put into a packet. for h 323 purposes based off a.crypto does not have a way to do this. if we kinda solve this problem, h 235.8 can also potentially reuse that. So there's some downstream dependencies. Next. So the question everybody says is why do we update SCP Security. Now there's tons of enterprise endpoints, whether that be the actual phones, endpoints themselves, conferencing, B2B UAs, PBXs, I see conferencing solutions, service providers, and even cloud offerings we might be doing UC as a service in a cloud, cloud conferencing. even just registering end points up there. All of these different things are still using STP security today. I know on the mailer,"
  },
  {
    "startTime": "00:58:02",
    "text": "Some folks have said, you know, handwave. Make this go away. Just use DTLSSRTP. but that came out. almost 10 plus years ago, and we're still not using it. So can we really dismiss the whole thing when we're not even at protocol that at this point is kind of set in stone and and pretty good. But what's it take to get over that hump? And I think that we haven't reached that critical mass for DTLSRTP. So let's, you know, solve this for SCP security. Fix this problem for the majority of endpoints and kinda go from there. clarifying question wrong. Yep. Rowanbase, wire, And So that same argument, I just I just would like your view of the flip side of that, which is if somebody isn't willing to go and implement d t r d d t l s s r p p, would they be willing to go and implement this instead. Yeah. So I think the easiest thing to mention here is for solution aandb, they're very simple, and they're built off the a equal crypto. So it's it's almost a very simple library update for something that they're already using. versus a dtls srtp, which is a much more robust solution and, you know, requires a lot more code implementation and test coverage and planning. versus a, oh, there's a, you know, a new couple things we have to parse out of the SDP value. So it's a it's a little bit easier to implement that I think that could get this across much easier. That answers the question. A good one. So going in here, solution a and b, we'll look at on the next strategy. next page. I kinda have 2 different ways. I've been looking at doing this, and there could be different ways. a solution a just reuses the STDP security session parameters, which if you're not you know If you don't know what those are, which I didn't for the longest time, are kind of the postfix optional parameters there at the end. We've got a couple different ways to do this. You can put a key value pair. And in here, I put the SSRC. You put that value. the ROC, I put the value and the sequence number because there's some scenarios that I'd like to address"
  },
  {
    "startTime": "01:00:04",
    "text": "with a sliding window that also happens when we kind of bring in late joiners. And know, you can signal these 3 values of the packet index pretty quickly. here at the end using a key equal value pair. and it's all part of the original spec. So adding some of those values shouldn't break things too much. I wouldn't think. And then solution b, which is currently in the draft 0, which is up on IETF right now. way I did this originally before knowing about the optional parameters was I just made it s rtpcxat SDP attribute, and I added those 3 values there. It kinda mimic the FMTP attribute where it's just key value pairs separated by a semicolon. And this is currently what draft 0 0 has, but solution a is what I've written in draft 1, which I I should be able to submit after this meeting. it kinda just uses those. But this is what I originally had. So if anybody's looking at the document right now, this was solution on paper, which I think, in my opinion, now, isn't the best. I think solution a is where we would go. Okay. I think that's it for slides. Comments, Richard, you were in the queue. I guess you're not anymore. Maybe you are actually. Yeah. I I was waffling a little bit about this question. It seems like both of these solutions presume that the SDP presume that the SDP entity, which is, you know, it's signaling layer sort of function is involved in the media layer so it can see things like like the rocks and c numbers that are using. Is is that, like, an architectural challenge for you? think that most of the places where this is used I the media does flow through. Or if it's not something that's involved in the media, it'll pass it from, like, leg a to leg b. So you get kind of this pass through of these parameters. But, yes, generally, where I see these things it's the media is anchored and flowing through that device."
  },
  {
    "startTime": "01:02:00",
    "text": "English Westland. 1 of courses of is Estas should die die die. But Yeah. I actually think there's an interesting question to this. this in relation to dispatching it or if it's etcetera. And that says, is this an STP, or should it be done in in in the meetup plane itself. So saying, one solution here would be saying, oh, we just need a way of distributing the 8 k t k key. you could deploy KTT, without the detailers, it would actually have the same properties. Yeah. Yeah. So and my other aspect to this is in some sense, information actually sharing here. It's none of it is secret. The only thing which relates to security of this is can you trust this because wrong information is the denial service extra for for the service. So I think it's a it it's something that you need to trust, but it's not secret in any way. k. Jonathan Lennox remotely is next. Oh, you're not remote. I'm just giving a full client so I can see the depth. just getting the full client so I can see the jet. I'm not sure if this is a good idea, but if we are gonna do it, I think the dispatch question assuming that we go with this approach and not what Magnus said, Like, the dispense answer is music. if it's you know, it's an end music should decide you know, is this a good idea or not? But I think that's clearly the home for it if we're gonna k. Philip? Wilhelm Baker. Yeah. I've been trying to grapple through the WebRTC and all the video and so Coming to it have ignored it for 10 years. And it's really difficult to find out what is actually going on and how to make it do things like oh, I've got this first quantum"
  },
  {
    "startTime": "01:04:00",
    "text": "key exchange that's I've already done. How do I stop that being thrown away? when the DTLS stuff comes up, how do I get conferencing to work well without and still have security that is end to end secure. And oh, yeah. And I'm using a whole bunch of threshold, cryptography, which isn't in the standard I think that if if you have a a group a working group to just make this stuff work. would be a good thing to do. And this would be one of the working group items I think that just taking individual bits that don't work. in the patchwork of what's being developed over 15 years, whatever, trying to build on things like DTLS. And, also, insisting that you must do it this way also that whole w three c interaction I think that there's too much complexity there. and just patching one problem is not worth doing. I think that we should have a a best sort of working group Colin. Colin, Cisco. So let me just start with I agree that probably in music is the place to discuss this stuff from a dispatch point of view. Sure. m music. it's the right place to to send it. We've there's a working group chartered to deal with this. Like, let's send it Right? This seems to be within their charter to me. That said, I would want to start this conversation with getting very or or specific on which use cases currently don't work or have lots of interoperability problems because of ambiguity. Like, If it's something as simple as dealing with, we need to be clear about if the rock gets reset when you put a new key in or something. Like, that's a bug in the spec. not something that needs a new spec. That's purely like, that needs a clarification in the existing spec. But if it's something like there's use cases where we really need to signal this,"
  },
  {
    "startTime": "01:06:00",
    "text": "And you won't you know, when you show just a fragment of SDP like that, you miss that SDP is offer answer transaction, and we have to show the whole transaction how that gets to. And The lot of the cases where this went wrong wasn't actually a problem with the king. It was a problem with somebody was trying to insert a recording service into an offer answer thing without being a party to the offer answer. and you you get into these sort of complications. So I think we'd I think it should really focus on the use cases where we should start up. Which ones do we need to solve that that aren't solved today? Jonathan, Jonathan Rosenberg, 59 and music, I'm in favor of proceeding with the work. Listen, we would love it if the world was all detail SSRTP. It's not. We would love it if the world was ipv6. It's not. This is part of the real world practical deal dealings of maintaining protocol that have been standardized and widely deployed and this is a maintenance project. Let's do it. fix the patch, you know, to add the the signal information that was missed and the concrete use cases we have to solve for. So I'm in favor of proceeding with this practical piece of work. Thank you. Murray. Jonathan. Do you agree with the idea that this might fit under a music charter? Good. Go over there. Okay. That's what I Oh, I I missed that meeting, man. Thanks. Okay. And it sounds like that's the the end of the queue. I guess what I'm hearing is that the consensus is take this to end music. Is that correct? Several thumbs up in the room? Okay. Thank you, Kaiser. And the the next thing is, I think, Donald presenting on s expressions. Oops. button here. Okay. Do you wanna control, or do you want me to control?"
  },
  {
    "startTime": "01:08:00",
    "text": "Okay. I guess you request that first. I think there's something you have to do to request control, but I'm not sure what it is on the client. not, I can just do If can do it. Hi there. I'm Donald Eastlake with Future A Technologies. Is this better? Yeah. Yeah. Yep. Okay. Donald Eastlake with Future A Technologies. And this is about s expressions. Next slide. So these are data structures for representing complex data, Either bite strings or ordered list of simpler as expressions. And look at the document, they were designed taking into account a lot of different considerations, readability, fast affordability, flexibility, efficiency, Also, be sure there was a canonicalized form so you can do digital signatures and verification over them and things like that. And they have lots of different representation options. And I've quoted strings for for white string. You're gonna have a token. And if the character set. It the the by dogs are especially restricted. You can have a hexadecimal base 64 so you can get it into a form where you can pump it through some channel, which is sensitive to peculiar byte values. And they can say that canonical representation for security reasons. Next slide. small up here. Go. So here's the examples of a a 3 byte sequence. heck 61, 62, 63, which feely interpreted as lowercase abc, So you can quote it. You can represented as hexadecimal. The verbatim tronklincoding has a decimal number and a colon for the length, and then you have arbitrary values and the bytes after that. can base 64 encoded, or you can"
  },
  {
    "startTime": "01:10:01",
    "text": "base 64, the verbatim encoding even. And there's also a provision for a display hand which might be a mind type for byte strings, which would be some hint as to what kind of characters that it is perhaps or things like that. So a list simply open parenthesis, 1 or more as expressions in a closed rent is. Actually, 0 more, I guess. next slide. So that's actually a slide error in this slide, I think. So what why what is this stuff? Why is it we're talking about it at all? while they were developed quite a while ago by Ron Rovest, who's given the explicit permission for me to do this effort here. They were developed for the civil distributed security infrastructure by Labsden and Rovest in 1996. the origin of the term as expressions and this sort of thing does go back to McCarthy's list programming language, but these s expressions are a little different. They were further refined when STSI was merged with the simple public key infrastructure. 1997, and there's actually referenced from RFCs 269293. So at the time, there was a file draft, Ravetes, s exp00. which was made publicly available and as referenced from these RFCs and so forth, the whole IETF thing was a little less formal in those days. And in fact, draft was never actually submitted to the IETF. So it it has never been, you know, made to do a and you got a permanent reference or anything like that, which is what the goal of this effort is to update that draft to sort of modern standards and get it issued as That's an informational RFC to make a a permanent reference for this idea, which is referenced from these other RFCs. Next slide. So I say so that's what this says. Make it A permanent reference."
  },
  {
    "startTime": "01:12:01",
    "text": "And the there are changes. The there, you know, this been updated to modern format and put an XML source and so on and so forth. has a, yeah, a consideration section entered as required even though there aren't any cons such in the considerations. so forth. The the the biggest change is, however, we're replacing the BNF just somewhat ad hoc with the Corrod. Carrod. more standardized ABNF from RFC 5234. And Mark who's listed as a contributor is the one who actually did most of that work. I did most of the other stuff. And probably the biggest change is to change the default display hint. for a bite stream, which has no declared this display hand. from from text plane, CaraCEp, ISO 8859 1 to somewhat more modernutf 8. and probably the biggest this change of substance. Next one. So that's really kind of the summary of what's going on, and and I my opinion is that AD sponsorship is probably the way to go forward. And I'd be interested if people support that or have other opinions. By the way, Ron Rovesta, he was actually traveling today. don't know if he would have attempted to join remotely if he if that weren't the case, but he said he would not be available today. Some Alright. Thank you, Donald. Any comments on this? Pete Resnick, is there a reason for 80 sponsorship over ISE, is gonna be informational, doesn't doesn't someone made the comment in the room, doesn't seem like something that needs consensus of the IETF. and all of that mechanism seems pretty straightforward to give to Elliot and get it published quickly."
  },
  {
    "startTime": "01:14:00",
    "text": "I don't know that there is that much of a reason one way or the other for those things. I guess, What's the story on directorate review for things that go through ISE. Yeah. It it doesn't go through director. It reviews Elliot has his own -- I know there's an editorial review board. Right. And so he solicits you know, appropriate editorial review for the document. So it'll, you know, you can suggest to Elliot, hey. Get a couple of these people to read the document to make sure that it's kosher and and then I would say I I think the 80 sponsored off it goes. So I guess processes. perhaps more. lengthy, but -- I and that's the question. If you think it's worth the investment of directorates and other things to get that kind of read over, perhaps, it seems like a lot of mechanism for for what is basically cleaning up a a document that's not gonna really change all that much. from its original state. So i ISC just seems be a less intensive kind of process to -- I would agree. It's less intensive. Yeah. Phil Humberger, you you've got no design scope here. The only thing that you can do is change bugs. you know, so I think ISC would probably be the simplest and the best. 5. Joe was next, I think. Sorry. Yeah. Joe Saloway. Yeah. I I think I either 1 ISE or AD sponsored, that doesn't make too much of a difference to me, I think, in I'd like to see this go forward. I mean, I think it's an interesting thing to we've used it in various places. So I I think it's it's definitely worthwhile to do. Jonathan."
  },
  {
    "startTime": "01:16:01",
    "text": "Jonathan Rosenberg, 59 I I guess if it goes at all in the, you know, the CI agree. It doesn't she doesn't need any consensus. My question is why do you even want that? I mean, like, it's not like there aren't other publishing vehicles on the Internet. Like, let's put it on a web page. was there a particular reason you now woke up and said, oh, let's make this an RFC, that would need I mean, we got lots of stuff that never got documented in the NRCs. But it was Mark gonna say something? Bye, Mark, you can just answer the question. it's for you. Why why are you guys doing this? At the microphone, please. So I did am not on the tumor, but you're gonna so the reason we are doing this is that the reference disappear from the in on it, done it. Right? And this is why we want to have a a reference. Azis was published in terms of craft. Why not going all the work? Why not going so far? Why not going all the way and making it and the rest. Yeah. I see it's probably yeah. So what what to Basically, we'll make it more permanent and accessible. You know? Yeah. it was a draft floating around, and it disappeared and wasn't floating around and You know, you can make it float around again, but You know? Wait. Why not make it permanent? It is. -- accessible. and it's already substantially in the format of a graft. Right? the the current the dash 2 draft, which is in the Internet drafts directory is is I think meets the modern form standards and everything isn't a appropriate Internet draft as far as I know. k. I think Rich, Rich Salt. Yeah. Yeah. Sit down, Barnes. Rich Salkman. Yeah. I think ISC makes a lot of sense. because as someone pointed out, it's not gonna get changed very much."
  },
  {
    "startTime": "01:18:04",
    "text": "We've done a lot of documentation of other things before in the security area. Very, you know, various algorithms were written down even though they kind of existed. is kind of a neat technology. There are some people who use it I won't mention how old some of our code is that uses something like this. So, yeah, ISC. I suggest. Daniel Con Gilmore. I'm also fine with ISC. I would be okay with AD sponsored as well. As long as this is really just documenting what is out there. I do know that there are people who are actively developing as expression tooling which I think is a little bananas, but it's happening, and some of them are changing as expressions or embedding them in other context, And I'm hoping this draft will not try to extend as expressions. it it hasn't so far, and I didn't intend that. I don't think any other authors, exhibitors plan to do that. The only real change was the change in the default display hand. from the ISO characters set to UTFA. So Richard Barnes, just as a minor point of process order, this group can't say anything about what the independent stream does because independent. But that said, we our job is to decide what the IETF does, and I think that like, the IETF doing nothing on this is the right answer. And if Domino's to submit to the independent stream by how it means. I didn't quite understand. We can't this this group can't tell you to go to the ISE because it's independent. but can say the ITS shouldn't do any work, which is I think what I'm hearing here, and if you would like to submit the ISE, it's it's up to you. Sure. So it it's sounding like it's between AD sponsored an ISE, so maybe we should hear from the AD."
  },
  {
    "startTime": "01:20:03",
    "text": "I'm I'm hearing a lot of support from me not doing this. Alright. in addition to if I if I were to say that I would do it, the q my q is very long right now. So you would be IC is gonna be faster, and it seems like that's the quite like Richard said, can't send you there, but, like, can't I can I can quietly point in that direction. it seems like an excellent point. Thank you. Alright. So it sounds like the dispatch outcome here is do nothing, and subtly pointed the ASC. Okay. k. Okay. Okay. you, Dom. need to change the slides here, and so forth, I think we're going back to the chair slides. and I gotta figure out where in the share of slides. Nope. That's too early. So let me just kind of summarize the summarize the outcomes here. If you'll bear with me for just second to find the right icon to touch. So So summary of the Some are the outcomes for the The the first topic was to propose a BAF at IETF118. and to coordinate with tech to make sure that they can attend since it is of course, of interest to them, The The second one, which I think was said CDN, was proposing art area off for that. Let's see. The the the third one, which was SDP security assurance, probably belongs in in music. and the the 4th one"
  },
  {
    "startTime": "01:22:05",
    "text": "which was the the s expressions is to do nothing and look in the direction of the ISC. Okay. So I think at this point, we're gonna be transitioning from being the patch meaning to being the Art area meeting, and I just Do present the meanings of interest. And, okay, I wasn't sure if you wanted to get up and talk about that, Murray. Here are the here are the meetings that might be of interest that are coming up. A couple of boughs several side meetings. Jim? point of order as one of the former chairs of the key transpoth. It's been canceled. Thank you. Yes. Don't go to the key transpoth. You will be in a class by yourself. Great. Thanks. And Kirsten, I think, has I just was wondering whether you will Yeah. scheduling aOB points, so we'll do that at the end Uh-uh. Yeah. We it looks like we're we're running little ahead of schedule. So, yeah, there is time PM. Okay. So I I would like to to mention my performance. Maybe we have couple of minutes to talk about that. later. Just to mention as well, the s frame working group is not meeting the S frame working group is not meeting this week, but just having an informal side meeting to discuss kinda where where the working group stands, where the where the doc stands and, like, what some what people are interested in and kinda read reinvestigate where the energy is in the working group right now. Not not it's explicitly not an official working group meeting."
  },
  {
    "startTime": "01:24:00",
    "text": "but kind of checking in with with interested folks. You know when? Alright. Thank you. That is Tuesday at 3 PM. and it is in the side meeting, Ricky, for the details. We we can't we will have remote participation available. It's sevent figured it out yet. in the hancierge Hi. This is Hans Jorg from Rodrigo. I just want to add there is another site meeting for the structured email topic where we had above in Yokohama. It's it's Thursday at 2 o'clock in the afternoon. There is a remote participation option, it's also the site Wiki. Thanks. You need me to discuss So you need to make the Lazydard. chartering, Will you be discussing chartering? Is that on your agenda for that meeting? Yes. it it That's it. Okay. I'm planning my week. That's all. if if Zabino. is you. Good morning. 2 quick announcements. Francesca will be returning to us at theendofAugust. For those of you who are yes. I have some pictures of her run on the their her and her son on the beach hanging out if anybody see them. She sent them she sent them to say hello to everybody. She says, strangely, she misses this place. So she'll be returning to us at the end of August. If you are in a working group, that she typically manages and you have a document that seems to be going nowhere, it's probably because I don't know that you have requested publication or whatnot, please tell me it only notifies her or not me. no forwarding set up in the tracker. his second It'll come back to me. look, you can go on with AOB Carsten 1 or whatever is next on your -- Oh, I'm I'm sorry. I do remember what I want. The non comp cycle is starting up again. I think that's The art area is going to ask for an additional area director in the cycle because amazing. We are now 36 working groups in and which means we dwarf every other area by a long shot."
  },
  {
    "startTime": "01:26:01",
    "text": "So we will have 3 a d's at least for the next cycle. If you have anyone you would like to nominate, if you would like to self nominate, Please re you'll you'll see the announcements coming soon for invitations for nominations and so forth. please participate. in either with by providing feedback or standing for a position. I think that's all in us. There are questions Back to you. Okay. So any other business and I think maybe Kirsten had some other business and Go for it. Yeah. I want to to quickly bring up the multi format work. I think there was some some mention in the chat already or the audio. already. So we had discussion in in the last dispatch meeting that kind of said if this work needs to be done. It should be done in in a working group. And the the the setting up of this working room seems to happen. Now there there there were some concerns. I'm not sure that people really registered them at the last meeting, but just to to as a piece of background, I'm known as an extremist in the cozy working group to register everything. and and then some So that that's my usual position on things. But for me, body performance really is way on on the kitchen sink experience of of that that that error. So I think that that important part getting some some output from that. working group will be to to generate some guardrails for what what should be done with these two register is in the current charter proposal and what maybe should that be done. And I'm just wondering whether that those gutters will be set up in the chartering process, will there be"
  },
  {
    "startTime": "01:28:02",
    "text": "set up either working group when it actually does its work. So if people have an opinion on that, I I would love to hear that opinion. any any I see Colin moving toward the microphone. Oh, okay. I can't even get on the queue either. But Carson, I think in the room, we had a really hard time sort of understand that. Maybe it'll need to be sent to the list or something, but I I didn't really get what you were asking. Not that my opinion matters either way, but I I don't think we really sit here. Yeah. I I think that I've seen couple people make that comment here. So Is is can we do it that way, Carson? Yeah. Sure. I just was hoping to to use the hardware situation. But if the room audio doesn't work, then I cannot have that. Bye. Okay. Are there any other topics for any other business. Going once. Going twice. We are adjourned. Thank you for coming, and have a good week. Oh, is it"
  },
  {
    "startTime": "01:30:00",
    "text": "by man. need to just finish it, submit the draft, send it to you, and say it's good. and then you're gonna submit it back to a d review for re review? Just curious. I'm trying to remember exactly where it was. So it was an AD review, and they gave back that comment. Okay. So Yeah. Let's let's let's try and talk with Michael about it because he has a little more experience with this -- Okay. -- this part of the process. Okay. That's fine. I'll just -- But, yeah, I I think it would be something like that. Yeah. I just there. I'd I'd wanna look at it and see what see what changed and all of it and what comments for it. Okay. Got it. Good. Next."
  },
  {
    "startTime": "01:32:18",
    "text": "now. or your thing didn't get on the list? Let me see here. No worries. I will state it. soon. available. for I just forgot a lot. 8 This is price. Yeah. I'm What is it? What is that like? My wife and I were trying to come up room. This is a new company. Okay. We we So it's words, use for, like, hosting"
  }
]
