[
  {
    "startTime": "00:02:03",
    "text": "foreign yep good I finally found the link to uh feed Echo I don't know why it took me so long to find it hey Jim foreign are we about ready to start good Brad said he was going to be here but I don't know where he's at so maybe he got tied up on something Michael I also have a hard time finding them the uh the meeting notes Wiki thing"
  },
  {
    "startTime": "00:04:05",
    "text": "um so it's the third button from the left that has a pencil in a box on the top of the screen ah thank you forgot it was linked from here and um also um uh here let me go on materials it opened it in the same window yeah so you can go to it there and in the upper left of that you can open a new tab which is at a box with an arrow coming out of it got it thank you or you can use this button to get there I didn't put anything in it yet probably should have Brad and um Ira do you want to um try your mic so that you can and you'll find in the lower right is a mute local microphone button um the upper the one in the upper left uh takes a second or so to build the audio link but if you trust your local browser to actually be muted then you can use the one in the lower right actually I'm not seeing the lower right one today myself weird uh I think I got it all figured out"
  },
  {
    "startTime": "00:06:03",
    "text": "there it is okay it's just hiding up your mind infinite recursion this is the one down the upper lower right and that's the one in the upper left I heard Brad so uh this is Ira it seems to be working I hear Ira as well I also hear myself thank you foreign I should unmute we haven't posted a new version for today yeah um I guess we have some issues to walk through so I guess is everyone ready yeah all right I think so I will remind you all that all this work is under note well and um there's a bunch of vcps that you may want to look at about IPR disclosures and being nice to each other having said that let's go straight into GitHub and um unless there's any other item items for the agenda I have one but I'll do it all the way at the end okay you want to tell us what it is yeah it's the just having a conversation"
  },
  {
    "startTime": "00:08:00",
    "text": "about the the code appendixes and if we really need them or not okay we won't forget otherwise but we can we can talk about the uh the pull request has everything that's currently ready for draft two um and if we want to look at any individual commit we can but specifically changes are are one tried to do one commit per so we can just scope it like usual um the first is the is number 16 which was describing the nil and Maxi uid variants this is after a long discussion on how we just kind of call those out within the other variant space specifically we have a variant in the ietf that we do everything in but Neil and Max kind of don't exist in those and it's just calling that out in a better way there's a lot of solutions thrown around but they were really deep solutions that ultimately we just added a couple lines to the table so if we look at the commit we're just adding some lines to the table so that earlier in the document people can see that those exist so they exist in a varied space if you happen to be using those um it's just for clarification the next one I think on this list I think if you're just acknowledging there I'm sorry I think if you're just acknowledging there that the nil and the max are uh outside the you know our our in scope that are outside that that normal range"
  },
  {
    "startTime": "00:10:00",
    "text": "then I think that's fine right now without saying that it looks like it's an accident yeah exactly that's what it does if you click the if you click the commit hash to the right uh I think Michael like for number 16 not that that goes to the to the actual comment go to go to the commits tab and then on the right side it says like C7 onto that very first one c16 it says like C7 202 go go because I still goes to that go back one oh I'm very right there's like a blue c70d2 yeah click that guy and this this shows the actual change um specifically in here it's just the text is green we're saying hey this exists here's forward reference and then hey this exists here here's the forward reference as an FYI we know that they're not in the space that we use but if you want more info go check out that section so that's what that's specifically what that change did Jim um the next one you can just click uh 49 we'll just go we can look at them in the in the uh don't click it that way click the click commit but this one's going to Jim's comments on some clarification around non-descript node IDs and ultimately steering towards the correct uh one that we want so in this I moved some things around I changed the verbiage and effectively tried to leave no ambiguity that the centralized registry was not what we want to do so I basically flipped the order it's second and then I called out some some text that says hey we want you to use nondescript node IDs we're just being complete but showing you the other"
  },
  {
    "startTime": "00:12:00",
    "text": "way people do it it's not what we want you to do so the new text effectively is what I just said we're showing the two methods that exist out there in the world don't do that one furthermore you don't need to do either this is just helping you that's that's what that changes and I hope it addresses Jim's comments on the original draft yep um 55 if we click that is me just change it's just that's a semantics we don't have to do it that's just me changing the the name of the that they were missing an A but you looked at it some of them were an example of uuid blah an example of a uuid and semantics and grammar so no need to worry about that 56 was I this was caught I we talked about in the last interim where we remove the a b and F and when I was fixing some of the commit merges I've I messed up I I let this slip through and this effectively is removing it from the I.E the Ina section and actually giving it back to and using reusing the one that we have up in layout which is the better one so I kind of just pointed back to those and said hey the a b and f that we would use is up there so we don't have two abnifs and this is something I thought I did right but then when I was looking at the document I realized I somehow undid my changes so should have already been cool but that's there um what's next up 57 that's formatting we can skip it um I just added I just fixed the markdown"
  },
  {
    "startTime": "00:14:02",
    "text": "so this is security considerations this is the there's one gentleman who has never messaged me about anything but specifically had a lot of strong feelings about random so what I did was I I found another really good use of random and a document that exists out there that is very well updated has a lot of scenarios on using random and I effectively cited this and gave it and added it to the effectively the unguessibility in some other sections and just said hey if you need additional information such as that of the RFC that we have here at the ITF and um that one as well just as an additional because I believe it addresses the items that the other gentleman was was bringing up as a concern and our very first intern again I have that that individual has not come forward and giving me any info that she's been there for a while I haven't sent an email no comments I just wanted to get it off the tracker and hopefully but it wasn't Peter osil I wasn't this person it was not Peter okay what was the concern that the they don't they don't trust the nist guidance on this or there was just a very it doesn't hurt scenario yeah there was a scenario that I again I I was looking for some feedback from them on that it was just there's concerns about running out of random and initializing random properly and using cryptographic randoms and just all these things about like we should provide proper guidance about how to use random and applications and it's not the goal of the RFC right we can cite out other places that provide guidance on how to uh effectively program Randomness in"
  },
  {
    "startTime": "00:16:01",
    "text": "your application or or pseudo or cryptographic random but I don't want to spend sections and talking about you know the topic that's better left for other documents so I just citing it better okay that's the goal okay but this is going to be cited as an informative reference I don't know where I cited it at I guess it probably could be um informational I'll be honest I don't know the difference between those two okay well I mean and then uh a normative reference of course is one that had that uh we have a dependency on in terms of um the requirements in this document and so it's it's much more problematic to cite something that is you know like a say a random academic paper or something like that I think that's of the sort that this is um yeah that should probably be informative yep I can flip it I'll write that down I that makes a lot of sense I put it under normative I think I think just because I put the just the default on where I put it at so let me let me fix that before draft 202. okay all right that's probably not the right issue is it no I missed the discussion on that I fell behind so uh number 26 right yes 26. easy fix um I'll go through and check all of the references before I before I submit draft two as well just with that guidance you gave me because that nobody's nobody's told me that and that just easy layman terms so yeah if if you don't need to read the document to implement then it's informative got it got it"
  },
  {
    "startTime": "00:18:00",
    "text": "and you know that kind of actually you realize there's like so many things that are that simplifies it but anyway that's fine cool uh 50 uh if we click it I'll know what it is we look at the commit next up on the list is oh shop uh 256 this was my first attempt at shot 256 um specifically us making and laying out based on that discussion we had over the past few weeks about where we should put shot 256 and I think the agreement from the discussion was still put it in the uuid version 8 space but let's provide the further discussion was let's just provide some extra guidance around that and that there's going to be another commit that fixes that on that base feedback guidance this was first attempt we're going to put it in a new uidb8 and then if you go back to the commit list we'll see the second one which is scroll down just a little bit which is going to be that right right there again Yep this is the second half of that which um is effectively inside of the the best practices section where we have name based UI generation I'm calling out that we need to use that namespace in conjunction with the hat or sorry the hash space in conjunction with the namespace in conjunction with the name and those three values can give us a nice version eight that shouldn't conflict with some others and then I provided uh basically hash spaces for all of the Shot 2 Shot 3 and Shake algorithms and then I also provided a singular test Vector tested against my code and the other gentleman's code lyos K on"
  },
  {
    "startTime": "00:20:01",
    "text": "effectively a shot 256 Shot 2 256 with the example namespace and the example name and you know both codes resulted in the same thing which follows what they should have go ahead does this does this need to be an Ianna registry we had talked about it in that page and I think the main thing was the the namespaces themselves are also not Ina Registries so I don't know if we want to do the same for like like the issue is someone comes along with a new hash how do they how do they amend this list to include it because I think that the point was that we want deterministic things uh they can just put it in the document um but it they may not even have a document like we don't not every Ina process has to have a document this could be just expert review literally without a document um yeah and I completely agree I think it's it's kind of overkill for for this yep to have that to to you know use Diana resources on this again because this is the one percent use case we're just trying to Future proof and think of what the iesg is is really going to want from us in this type of spec and yeah I don't see very much so you're so you're defining uh um there's a a sub fee a subtype field subversion field that uh defines which which hash it is so so the the process is I think it's down here right that basically you start with the the the the uuid for that hash"
  },
  {
    "startTime": "00:22:00",
    "text": "right and then you added some other stuff to it and putting it together you get a name-based hash that is also encodes the type of hash used to make the the that namespace hash did I get that right and how do how does it encode the type of hash where is that is that a is there a bit field there somewhere that's the the type of hash field no the there's no bit field for the the type of hash it's just the hash is used as one of the inputs of the the hash space namespace and name all three together are the inputs that get the output of that type of of hash so if you're using 256 you use the 256 hash space with the namespace with the name if you're using 512 you use the 512 hashtag so so if if I start with example.com right here's the name www.example.com and I want to make a namespace hash from that I want to use a hash to make a V8 namespace uuid then basically what I'm doing is I'm mixing this plus this plus this which basically results in it being unique and if I changed hashes I also get a different value but it's deterministic okay but it's not possible to determine to look at to look at a uuid and determine what hash was used to generate it that's correct but that's correct yeah but as we in the document also State introspection opacity of the device of the euid isn't something that we really want in the uid right like we have the versions and variants to provide some"
  },
  {
    "startTime": "00:24:01",
    "text": "space but other than that everything else that's input kind of doesn't matter is a easy way to say it okay but if you had a if you had a distributed system uh where um you know one one element when actor receives a a hash from the other and let's say the the the generating actor is in the process of doing some sort of a transition from Hash A to Hash B which is considered to be better um it isn't possible for the receiver to know which hash was used no but they know it's not sha1 or mb5 yeah so they know it's something more modern than that okay that's all they know yeah but you know we're we're talking about you know far in the future when when Shaw 512 is is being deprecated um and they want to go to Shaw 1024 let's say um uh it isn't it isn't possible to look at one of these hashes and and and know know which one is used in order to know how to generate something that perhaps matches with it you have to you have to do it by trial and error basically is what you're saying say well gee that one didn't work let's try this other hash or or whoever is doing this and putting it in a uidb8 would have to encode that information in there somehow but yeah obviously that's not standardized as part of this document for sure it's an interesting point the comments of about not taking a bit is at the end of the day we have 122"
  },
  {
    "startTime": "00:26:01",
    "text": "bits and Brad and I had we're going to allocate one bit or two bits I forget to make this 121 so we could have some interesting uh versions right and variant stuff and the amount of backlash we got from everybody for just changing a single bit into going from 122 down to 121 and the levels of of entropy and all these other conversations on how that shook out was we backed down from changing kany of that so if anything also we talked about truncating if anything this topic makes a lot of sense for something like uuid long as an example uh Jim and and Michael where we have longer uids where 128 is the base and it can go up to a larger number you can introduce the entire Shaw 512 hash and then like you said a subversion hash base but at the moment we can't we got 128 bits 122 that are usable and taking any more Away really angers a lot of folks so so if you really wanted to have identifiable um things then you might actually want to have one of these long things where you say you start with here's the shaw 256 ha uh thing and then there's the result afterwards and you would just have longer some longer or or you you share that right there that on line two seven two set 2760 that uuid and say I use this uuid to create it and now everybody knows that one identifies shot 2256 right that is a identifier unto itself it's Unique for that shot hash space so there's ways to do it it's just not embedded in the the the the end uuid being output by the algorithm kind of kind of reminds me of like um http's method for like md5 authentication or Shaw where you put all the ingredients that you used and then"
  },
  {
    "startTime": "00:28:02",
    "text": "they have a shared secret and they kind of send the ingredients they compute and they know ultimately what happened there but they never actually sent that final result across the wire similar kind of diffie-hellman you send some ingredients an application could send that shot 256 they know the DNS and namespace and they know how to create it themselves from the ingredients is this uid well known somewhere this DNS one yeah that one's defined in RFC 4122 and it's redefined obviously in hours right so we have names we have like four namespace uh uuids and then I allocated a bunch of uuidv4 hash space uuids for hash base at night identification so yes people know what that one is and it's used that's a version one there it is okay that's a version one um we created it the beginning of time right so yeah yeah they just they think I don't know what date they use but they created that's four of those yeah okay yeah they ticked a single bit up and we're like okay these are the four we're using for these specific name spaces and we just reuse the same logic for Azure base hmm well maybe this is something to to clarify and write up um more clearly um in the change in the post let's post this version and then let's let's bring this up as an as an issue into the working group I mean there were only five people here today and um uh you know wonder whether or not it's an issue I mean obviously the the we knew we have this property for md5 and Shaw one that you can know what it is"
  },
  {
    "startTime": "00:30:00",
    "text": "uh by just looking at it and I'm trying to deprecate it those things we're we're not yeah I think it would be really beneficial uh sorry I was just going to say I think it would be beneficial if there were uh if someone has a use case of like what more specifically what real world problem we're trying to solve with this right just because yeah anyway I just think that would be it that's that's what I'm struggling with as well here in trying to figure out the requirements yeah yeah I think the real world so we've opened that we've opened the door to using new and other hash functions but we haven't made it clear that the uid is using them and we're not sure why that matters in the world uh fair enough let's let's continue on yeah go to that number 43 um right there on February 6th that guy is this one was the expansion of the multiplexed fields you know the high low um inversion this is all effectively changing all of our our stuff so that you know where we see online 654 time high inversion it actually has version is the four bits time high is the four bits this rippled obviously throughout the entire document if we change the field I had to change the definitions um we had to change the test vectors we had to change kind of everything that reference time high inversion and same with for these specifically clock sequence high res and clock sequence low because that was a multiplex of the variant two-bit variant and the clock sequence so ultimately split those apart"
  },
  {
    "startTime": "00:32:02",
    "text": "I think it looks better this was feedback from a lot of folks that they wanted this change we were keeping it for backwards compatibilities it's a lot of stuff but it makes sense to just rip that Band-Aid off and fix it so that's what this fixes and this is ultimately what we changed foreign thank you that's much better yeah um I don't know who's who's running as well I know you can do a unified diff you can do a split diff and sometimes it's easier but we'll do unified let's go to the um sorry what do you want you wanted me to change the diff uh no you can leave the diff like this no Rich there's one that does side by side no don't do that maybe maybe my window just needs to be bigger I think it's one of the second options in the top left yeah uh that little setting guy but yeah it's probably gonna be better look at the next one what you got it's fine there you go that's what you want it just uh it just kind of shows specifically our Windows not wide enough it would show the entire table I guess is what was what I was trying to do so you can see the whole thing without inter leaving lines but yeah you're fine we can go back to Unified and then 61 is next up this is I'm trying to remember what this was oh yeah so this was text that was copied from 4122 by themselves raw you know no modifications no changes and what I went through here and I just changed the text so that it reads better throughout the document it's a little bit more formal and"
  },
  {
    "startTime": "00:34:02",
    "text": "effectively it conveys the same thing but it kind of isn't as hard to read I guess because when I was reading through this section I I had to read it like five ten times to understand what we're trying to convey it was just copied from the old doc so just cleaning up the text so it gels better with the rest of the document and that's the next three commits are actually just that they're just looking at what the old RFC had and if there's a better way to rephrase it so we could look at those pretty quickly 47 was I believe the same thing for trying to think which one this is yeah this is the uuid generator States one of the comments from Jim I believe is you know the old document said oh they could just say they're unavailable what does that mean what is unavailable what's the return there so I put text around a what the generator States mean because this is a mesh of like three sections in the RFC old RFC and then provided effectively some guidance more around the unavailable section and ultimately just not gave this one another Fresh coat of paint to kind of just really bring that section home because again it's just copy and paste and it didn't really read well top to bottom when you just kind of jump to that section and kind of just go what does this even mean in the grand scheme of things and really it applies to version six and seven and version one and then addressing Jim's comment and then 44 is the final final item and this one specifically is talking about uh this is I think another comment from I think the gym and specifically it"
  },
  {
    "startTime": "00:36:01",
    "text": "was why we chose the time stamps and why Unix uh why the the rollover is not really a problem and ultimately with calling out the final validity date of these time space time stamps just so they're more apparent in that you know the rollover event is not a 2038 problem this isn't a problem in the 2000s it's approximately 5623 and 10 080 889 so we've got a really long time to worry about that and we shouldn't roll over those time stamps anytime soon cool yeah I know a lot of people are focused on the on the rollover problem and nice to say that we don't have one yes sir and I know I I was thinking the same thing I'm involved with a lot of those conversations here so it makes sense to call out uh last very last commit I actually forgot about because it was so late is back on the shot 256 kind of stuff so the shake algorithms can produce variable rate outputs this is the very very last one down there on February 10th and this is just adding a line to that that effectively says if you've got one of those Shake algorithms for Shaw Three that are used you have to Output 128 bits for your hash or else you're not going to be able to fill out the uid so you know just calling out that if you're going to do those You Gotta it must be 120 bits or larger and truncate some data I didn't realize Shake was um I didn't realize it was variable rate variable output right but it's good call out I don't know if you asked for 130 bits do you are the first 128 the same as if you asked for 128 I don't know I'd have to I'd have to run"
  },
  {
    "startTime": "00:38:02",
    "text": "some through the pro I'm not very familiar with the shake so it might be that it might be that we just strike the or larger yeah let me yeah let me put an item to test some some shake algorithms I can I can throw some inputs in and just run it over you know hello world or something and just see what happens when I do different different rates and if it is different based on the output yeah I'll strike the or larger yeah the or larger seems like a problem because I mean we're defining something that's always 128 bets yeah in my head I was going more with how it does it with sha-1 and Shop 256 where we just dropped the bits off at the end but that's a good point on the maybe it does a different output based on what we request so I'll test it and I'll give us a good answer something crispy but that's the that's the general gist of what's in draft uh two a lot of cleanups um The Shaw 256 and Beyond stuff and just in general mostly formatting if we go back to the pull request itself we can see the high level bullets of what was merged yep okay clarifications cleanups and only big technical things that that shot stuff go ahead I was going to say um be less shy about committing and posting new documents right um I think that it's okay to probably even good to it would have been better if you had posted the document and then we were looking at the diffs in the document that is usually easier but um we could come back to here to see why um I'm just saying just you're maybe don't need to be so shy about about"
  },
  {
    "startTime": "00:40:00",
    "text": "getting uh quite continuous approval I took my foot off the pedal because I the first time I did it I think I did it too fast but yeah I can do that got it okay so so you're going to merge this or you want me to push the button here today no let me let me fix a couple of these things that we we talked about and then I'll I'll merge anyway okay it says I could merge it but I I won't okay um and we're gonna post a new version uh so uh what what further with 13 more issues so a bunch of these are actually these are issues which we've we've just walked through so a bunch of these are going to get closed I think all of those are going to get closed except for the the final one which is the should must check where somebody goes through and just checks and make sure that every should has an alternative and every must has has a thing you know basically that the thing we talked about which I slated for draft one but now it's in draft two where we just kind of sit down and just say did we cover all of the bases on those should musks and um anyway that also is a working group last call review you know always like okay adding we I mean it you can always do it I'm just saying um it's something that you know one of the problems is that you know people throw add new text during working group last call and then you have to come back and think about that again anyway so yeah I know to be a compliance with the new sorry the next ietf meeting 116. I can't submit anything after the 23rd of March I think is the date yeah I mean submission for a couple of weeks prior to a meeting yeah three"
  },
  {
    "startTime": "00:42:03",
    "text": "three thirteen is when we uh I can't submit anything else so we got I got some time if we wanted to do a draft three or something right um there we go yeah okay yeah so you know so so but just to be clear so it stays closed and then you know it opens again the Saturday of the meeting um but anyway uh we're not planning to meet in person there as I recall right Jim right uh so you know yeah so my mind is what do we have left to do to get to working group last call we need to post draft O2 we need to do the should review which is this item here I guess uh and what else I mean I think we probably need to uh probably advertise the working group last call probably uh in a bunch of other places that are using euids yep I mean outside of the ietf we need to just we just need to make people aware of it we might want to make it a little bit longer than two weeks as a normal just to let people that propagate but let's get O2 posted yep got it if it's fine I want to go to that last item on my agenda Bash just to talk about it oh yeah agenda bash right okay sorry was that again um so basically code appendixes and nothing's changed so if we look at draft 01 there's a bunch of appendixes in the"
  },
  {
    "startTime": "00:44:00",
    "text": "final document which are example C code on creating uuid versions one through eight right I changed the multiplexed fields on version one and and almost everything in version one through five relied back on those Multiplex Fields so there's a lot of work to change all of that code that opens this up obviously to erratas and bugs because not every code has bugs in some way there's some interesting copyrights we Brad and I created six seven and eight because we wanted to to mimic what RFC 4122 had so at the time we really didn't want six seven and eight but we we did it because we wanted to show and be compliant and kind of have the same structure that the old document has so people expected it they got it my question for the group is do we need any of this in appendix a example code because if so it's going to be a lot of work to go through and modify one through five and then five as well as six and then finally it just opens us up to potential erratas and all kinds of other things that could be a problem so I guess I'll say two things one we don't need it two uh 4122 still exists right uh if there's been no change in this code and we don't think there's any value in repeating it then just say the example code from RFC 4122 continues to be valid or whatever um you know this is contested on red hat four I know it's like super old wow you know it's got a copyright from digital Equipment Corporation for Evan six"
  },
  {
    "startTime": "00:46:02",
    "text": "1989 there we go yeah it's almost like this is something we put in a like you know you take this you put it in a uuid GitHub and call it a day and say Here's the C code implementation kind of like the entire I would go back to srtp because I'm really intimate with that document it's like there's a live srtp there's implementations and then there's the RFC the code isn't in the RFC it rarely is there's the structures maybe C structures and stuff but you don't I don't see rfcs with just literal C and H you know C code and and stuff in them it's kind of abnormal I don't have any problem with ripping it out and just saying that the code that 4122 code continues to you know is believed to be compliant did you would you still want did we have any errata did we have any Iran on the uh did we have any Errata on appendix a from 4122 there were yes there were two that were Incorrect and yeah the the namespace stuff yes there was there was two in the name space so there it was here no not this not this no I'm not this in the in the in the code the generation names days of A1 sorry it's like a subsection there's a there's a name I fixed it but there was a whole section in here and that this thing generated it wrong basically based on the inputs and some other stuff so I had to fix it oh so 4122 is not correct then um I would just take it out and not say anything we don't have a requirement that there be example code for everything that we publish yeah but as if you have fixed the code and you want to throw it in the GitHub you know in literally in this GitHub"
  },
  {
    "startTime": "00:48:00",
    "text": "right in a new place we can do exactly that okay I'll if we're fine with yanking it I can get that I mean that's just deleting the leading's not hard I can delete this and verify it compiles up nicely for draft two if that's something that we're okay with goes along with I I think it goes nicely I would take out the sample code myself but that's just as a as an individual not not with any Authority Brad IRA I agree to take it out I would say it's unanimous at this point got it okay it's gone I'll get it out and draft two will not have that that was my only agenda bash I just want to talk about that because it was important since I just made it that's a good one with Multiplex changes I think the test vectors are better anyway it's just speaking out loud like like that's what other rfcs do they provide your inputs we have test vectors I think that's a way more that's way better than the example code I mean there's so many languages nowadays you can't cover them so I think we're much better place hi I'm finding that uh yes I agree with the sample code do not and don't do an informative reference to the sample code in 4122 it remains published and shows when you go to the RFC you know repository for this new RFC it will show that it's a complete 4122 and I but that's a question I had does this RFC update for 4122 or does it"
  },
  {
    "startTime": "00:50:02",
    "text": "obsolete it obsolete okay but it you know you'd still be able to see that 4122 was the credit sensor yep it's gonna be burnt into electrons till the end of the universe yep okay or at least until those timestamp things roll over exactly that's all I had folks I appreciate that okay 10 minutes from the end anybody else we can finish early we don't have another meeting scheduled at this point um uh I think I'd like to somehow get to working group last call by the end of March um maybe earlier like the start of it I think we need a three or four week or uh working group last call I think we need to spread the word you know widely um because I think they're used all over the place uh maybe we have to communicate with some of these uh ISO and itu people that had a document that looked sort of similar um that may have to go out through a liaison I don't know I guess we'll just ask them to do that and be done with it uh I would urge a four-week last call yep and a certain amount of spelunking for which other standards bodies obviously I would say itu ISO and I"
  },
  {
    "startTime": "00:52:00",
    "text": "triple possibly and and then even after you know telling that standards body what you mean to tell is somebody who's the go through nitf liaison if so that it gets to the room like in igu it would be study group 17 security so maybe I'll start a thread just asking who else we should talk we should just ask people to uh who else should we notify both during the working group last call we can get that list all right shall we go I think I think we're done then all right great thank you Kaiser thank you IRA and Brad thanks everybody appreciate your guidance bye Jim"
  }
]
