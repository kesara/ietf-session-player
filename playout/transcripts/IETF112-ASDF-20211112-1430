[
  {
    "startTime": "00:00:12",
    "text": "in the participants list so now it's off offpost so let's get going so welcome to this meeting here uh for the asdf working group at iatf112 and there is i realize there is actually the wrong date on the slide here i need to forgot to change that um so i'm nicholas vadell and with me of course we have michael richardson well let's see how i actually change so this is the note well uh the high level thing uh you will be recorded or you are recorded already um remember to be nice and be professional we have a slightly expanded set of this one in a moment and remember that the ipr guidelines of iitf is in effect the link is there as well for all the material relating to asdf there is the link on the repo we're working on github and there's also the links for the to the notes for today where michael is taking uh taking notes and michael is also acting as jabra scribe here is the full note well or the more extended note well you know it well and you've seen it many times this week you need to well this is what you sign up to when you participate in this meeting you agree to follow itf procedures and policies we will not go into detail on this um here is a slightly more expanded part of the code of conduct that hasn't been in a discussion lately um it's basically about you know treating your colleagues with respect speak slowly limit use of slang dispute ideas by using recent arguments use best engineering judgement find best solution for whole internet"
  },
  {
    "startTime": "00:02:01",
    "text": "and contribute to the ongoing work of the group in the iedf and so this is what you need to keep in mind uh when you participate in this meeting we try to be polite to each other and if you need more information there is the rfc up there this is the agenda for today we've already done the note well for the logistics we have a kodi md michael is taking notes there was a link previously you can find it there's the meet echo and you you're on it right now we don't do blue blue sheets because they are automatically generated we will continue with the working group status update um and then continue with the main meet of the meeting which is the sdf getting sdf ready for working group last call after that we have a couple of um new work items or related work that we will sort of uh be looking at and we will sort of try to work out how to fit them into the bigger sdf story on protocol mappings instances and relationships finally we are looking at the asdf milestones we do have a pretty packed agenda so we will be moving along at the brisk pace so uh an admin i mentioned all this already so you don't there's nothing special here uh decisions on mailing lists and work on github and we tried to do in addition to these meetings at the not the physical ifdfs but the virtual physical idfs we also do virtual interims and we have had a couple so far this is the status update where we are right now we were chartered a year ago a little more than a year ago and we have had meetings at two itfs we have had hackathons at these two ldfs uh lately before this one we had a my more on inofficial uh or or a simpler hackathon we still work that generated two ideas so it's good stuff anyway"
  },
  {
    "startTime": "00:04:00",
    "text": "we've had four virtual interims and we've had a spec that has reached implementation implementation draft status and this is we're meeting today and we're planning for another meeting soonish maybe in january and we'll come back to that later depending on the discussion goes today um so on a related thing to asdf is of course the one data model and the the one data model was the activity that kicked off this work initially created in 2018 to harmonize iot data models across multiple ecosystems such as ocf and ipso and bluetooth etc and this group had two main objectives one was it it came out two main objectives came out of this one was this common format for defining data and interaction models and this resulted in sdf which were of course working in this group here and the other part is developing this industry-based standard best practice iot device models and they are i'm putting them in a 1dm repository and this was just a report that this work is ongoing and we have a review board and that work sort of and on approving these models is is happening right now so hopefully by next time we meet we can have actually some adopted models in 1dm which are of course defined in sdf but ready for anybody who can translate from sdf to their ecosystem so with that i leave over to carsten to take us through what remains before we get to working loop lost coal and and and on carson please yeah thank you um so there are a few things we have to do to become ready for working plus call of course there is the draft itself and we also need to do some"
  },
  {
    "startTime": "00:06:00",
    "text": "administrational uh things identify a document shepherd that's usually done by the working chair so if you want to say anything about that please do i we have a proposal at least for for a case of cornbread to be the shepherd i just checked with him so i haven't been able to propagate the information but uh so i think that will that will work out well he has read this back and so on and he's happy to take it on okay so can you put the name in the notes please um so the other thing we need to do is work on the draft and there are some nine issues and two pull requests on the repository at this point and there are a couple actual change requests there is one issue that talks about the limitation with the formal description technique we are using and we we have to diagnose whether that's really something we need to work around or we can live with there are various tasks that need to be done just editorial tasks um there is some tools work that needs to be completed because appendix b is generated out of appendix a and there are limitations in that tool and there's also potential future work that we will be talking about in the last 20 minutes of this work group meeting which we don't have to complete but we probably should look at it to make sure we don't paint ourselves into a corner here by doing something in the base draft that makes the future work harder next slide so there are two change requests so let's talk about the first one pull request 45 stupid that ari isn't here we had a last minute"
  },
  {
    "startTime": "00:08:02",
    "text": "uh thing getting in the way so we have much less experience with action and event performances then with properties affordances so each time somebody touches the the action event stuff again then yeah it turns out it's maybe not not the most streamlined way to talk about these affordances and we we thought we had fixed this in sdf 1.1 but maybe we we swung the pendulum a little bit too far and we may want to look at that again so right now in sdf 1.1 we have a single data type definition for the input and a single definition for the output and that that is often a little bit unwieldy because it's very likely that your action will have more than one input so pull request 45 suggests that maybe we make the the object that we would use to carry all these different parameters uh implicit again next slide please um so for the input side it's quite usual to have multiple parameters it's much less useful to have multiple parameters on the output side so doing this for both or nothing which we probably want to do for symmetry means that one of them will be slightly harder to read than the other but there is no functional limitation uh here so the the um what are currently property names will be some other kind of sdf name for the uh parameters um but that's not probably not really a"
  },
  {
    "startTime": "00:10:02",
    "text": "big uh change so we had some discussion in the last few hours about that and we weren't quite as sure anymore whether this is actually needed so my request would be for for people to look at the issue in more detail or if you already have experienced this uh a little bit of inconvenience maybe you can tell us now okay i'm not seeing people line up in the speaker queue so maybe we can leave this by the way side and talk about the next change request next slide um right now the structure of an sdf json file is that we have altered levels of [Music] sdf categories concepts and specifier defined names and these specified defined names go into a single default namespace that is defined up there in the namespace block and the question is does it make sense to maybe allow a single specification to to make definitions that turn up in different name spaces it would be possible to do something like that the the problem is that i haven't seen a good proposal how we could continue to use json pointers in the straightforward way that we're using them"
  },
  {
    "startTime": "00:12:01",
    "text": "now once we do that because the json pointers would actually have queries in them with with prefixes that are defined in the uh spec the json pointer points into and this is uh getting a bit ugly [Music] so um this is an issue right now it's not a specific pull request so if you think that this issue is important to address uh then we should have a discussion on how we could actually make something work that addresses the issue if we don't address it it just means you have to have multiple sdf specs to to export into different namespaces and that's of course always a little bit uh yeah you have to juggle these different files if you remember programming in java that is sometimes a little bit ugly like what is that uh why do people need to have to emit into multiple namespaces what is this what is the pull on the other side to doing that i understand what's difficult for us to do it but i understand why do people want to do it yeah so um i think one can can come up with a lot of use cases but they are not that strong so imagine you are writing a translation from an ecosystem model and want to to factor out some data type that actually is interesting enough that you want to put it into a common library then you cannot have a single file that does these two things and some people would argue yeah that's exactly what we want we want that you"
  },
  {
    "startTime": "00:14:01",
    "text": "write two files because one goes into the common library and the other one is the thing model that you are just creating so that's why these use cases are weak because you can always make the the argument if you're going into multiple namespaces then it should be different files ivory is on the side of sdf not on the side of the of the output the other side of the translated tubes what i think you're saying yeah so a translator should probably be able to to consume multiple sdf models and translate it into something that that is made might be multiple models or a single model on the ecosystem side so it's not necessarily a one-to-one uh translation and that may be yeah it may require doing additional control files that control these um interrelationships and so on so um [Music] yeah i'm having a hard time actually arguing for this because i'm pretty sure we don't want to do this but i'm doing my best to make the argument uh here [Music] unless someone's really speaking up for this i think we should just let it go i agree yeah we need to check with ari as well or see if he joins later but um unless he objects i think we should just skip this okay thanks please continue the next slide so there is one little ugly thing if you have an sdf choice and the alternatives are actually quite similar"
  },
  {
    "startTime": "00:16:01",
    "text": "then you don't want to repeat all the properties that's the wrong word all the qualities of each choice in in [Music] every single alternative but you want to factor them out and that should be possible but right now the the way we are describing this choice makes it hard to do that which is just one instance of a larger problem which is that we we are using the grammar to these to describe the input to the processing model but the processing model actually has several steps which could be called resolution steps that generate the thing that really needs to conform to this grammar [Music] uh so that that's a limitation that that tools will have to struggle with so they cannot simply validate input they might have to do resolution first before they actually know whether everything that's required is present in in the document because it has been pulled in using sdf ref um yeah so that's one area where we might want to try to have some ideas but unless people have ideas how to solve this it probably will stay that way this this comes up in in translator building if you have an enum or something in in a source [Music] ecosystem and you're translating this and you essentially have to blow up the attributes that come with this enum into the branches of the the sdf choice so it's it's [Music] not beautiful but it's also not really"
  },
  {
    "startTime": "00:18:01",
    "text": "killing us okay nobody cares about that then let's go to the next one yeah there are a number of tasks that need to be done before we can last call this like uh do we use the optional commas in cdl and do our json text examples actually all parse can we add some automated checks and so on and of course we should try to collect more editorial uh reviews by by people who are reading this for the first time and and may uh be be having trouble understanding uh some some of the wording that we're using so that's something that has to happen within the next couple of months to to make sure that we have a readable document if we don't do it now then the isg will force us to do it later and it takes longer next slide there's also a little bit of tool work needed so that there is one um issue that describes how to actually make the the co-occurrence constraints of the json schema inspired part of the ctdl a little bit more tight but we cannot do this at the moment because the [Music] tool that translates cdl into json schema org doesn't support this this kind of structure so we we will need to fix this scenario or do it by hand but that's really not something i would want to do [Music] way too many way too much potential for errors"
  },
  {
    "startTime": "00:20:03",
    "text": "yeah michael asks who could give the document a read now to get this editorial stuff next slide okay um so there are a little set of items that are not in the the next future work block but that that maybe we should look at do we want to do this now or um leave it uh for future work one is that we have a version field in the info block uh we all know that versions are hard and versions usually give us much less than they do but if we have a version of you then it should have at least some reason for existence and right now it's not really defined how you would use that there is a suggestion that that it starts with an rfc 339 or iso 8601 date so you can order versions lexicographically but we may want to make a tighter definition of what the version field would be so that's one thing we want to look at and the other thing we may want to look at is when we are combining uh multiple sdf files or more generally if we are building sdf files out of multiple ecosystem sources how do we combine the information in there so right now there is only one copyright entry in in the info block uh by the way there is no no license field in the oh there is a license field in the info block but it's not fully defined yet and so on and by the way the the ops a"
  },
  {
    "startTime": "00:22:01",
    "text": "working group is working on a similar thing for mud files so they also try to get this metadata [Music] more more precisely defined so you have ownership and licensing statements in yang so maybe we also want to coordinate this a little bit so it works together elliott eliot hi uh carson thanks uh just to comment on that yeah that this is a draft that you and i are writing um and it's been accepted as a working group draft over knobs areawg and the intent at least is for it not simply to be used as you know for mud files but rather if you have stationary or static json that that you're concerned you know you need you need to have a licensing statement you just sort of slap this in and and it should be general along those lines so people should review it for in that context yeah so we may want to be compatible with this uh either literally compatible or at least culturally compatible so people will be able to extract that information in that form and that's probably something that that we want to pay a little bit of attention to next breadcrumbs um so we have these these processing model steps where we we put together specs out of multiple sources and one observation was that when we do this we lose the information what sources these actually came from of course that hurts in the info block as i already said but of course you you also would uh like to be able to to find out uh what what kind of thing is this here what kind of property"
  },
  {
    "startTime": "00:24:00",
    "text": "action event is this here did this come from this or did this come from the other um so keeping some some more more comment level uh information uh there's a pull request for that which maybe doesn't quite have the right shape yet and when we later come to mapping files there's also there's also a consideration that we may want to keep information about where parts of the specification came from of course you can just put it into the comment fields but then you you will have a hard time uh tracing it back so having a little bit more structured representation would be good so that's one thing we may want to look at and number three uh we may want to write up a little bit more of our own guidelines we used when writing this spec so when the next version is generated we remember what those guidelines were so for instance there is an old issue that asks when do we use the term sdf xxx and when do we just use a naked xx so why is it unit and not sdf unit so more generally we might want to record invariants that we expect to be maintained during the evolution of the document so if you you say that again can you give me an exact example of an invariant here yeah for instance that we have this alter alternation between user defined names and and sdf defined uh names which we don't in the info block which has an exception to that but everywhere else we do"
  },
  {
    "startTime": "00:26:00",
    "text": "and um this this is essentially um an artifact of of the the fact that jason has limited expressibility um so in the programming language when you declare something you give the type and and the the name but when you need two different levels of of json to do that and things like that we probably want to explain and maybe also explain why in the info block we have managed to keep that in variant yeah so um let's look at timelines and and i brought some rose-colored glasses for you to look at those timelines everything i have talked about here we can do this here and if this turns into substantive changes then we probably want to have another implementation graph which would be sdf 1.2 so people can actually touch their tools and converters and so on to make sure they actually work with the next version we don't make substantive changes then we can continue calling this sdf 1.1 and don't have a transition in the tool space and if we have the implementation draft this year we probably will have a few units to fix and then we should be able to do a work group last call in mid-january and should be able to process the working group call comments up to well early february or something and if shepard and ad are fast we could actually have an iitf last fall during february so if we manage to run this without"
  },
  {
    "startTime": "00:28:01",
    "text": "larger surprises we might have the telechat date in in march so this is what i want to achieve here and we will have to see whether we we can make it do but i think we should not take um yeah and authors are fast francesca indeed um we should think about whether we take up and any significant changes that would jeopardize this timeline here so that's okay so thank you kirsten i mean this sounds great uh sir was there anyone in the queue no uh this sounds really great uh thank you for making all this progress um do you think that because we had these the first ones on this pr45 and the namespace issue i guess we can resolve them within that shouldn't be a show stopper that needs to be resolved somehow but they are they are not really show stoppers right no we should reserve them with a within the next six weeks yeah and uh [Music] so we have some time for thinking and writing so i don't see a problem there okay great any comments from the rest of the group great um out of this do you think we should have um um uh interim should we try to plan an interim uh uh"
  },
  {
    "startTime": "00:30:01",
    "text": "to follow this time plan han here i guess we need to have an interim in the capital early next year or something to to to fix everything or or what do you think well there are several decision points here whether we have a decision point in december i don't know yet because i don't know whether we do an sdf 1.2 but if we actually do then actually we should have an interrupt in december and then the actual working group last call and yet at the end of that we probably want to have an interim to process those comments so that would be late in january um and yeah then we have to react to the last call comments to the ad comments or to the shepherd report as well [Music] so that's a bit harder to plan right now but it might even be useful to have another one in february so this would mean that we have about one per month of these okay okay we don't have to i mean we can schedule them now and if we decide uh we we got by without them we can just cancel them yeah so let's let's figure out how to scale them afterwards i think we can do that with a doodle or something great um no comforter comments on this or questions i hope everybody will read the specification and figure out lots of questions so we can stretch them quickly great let's move on then um uh i think we're actually ahead of schedule here for a couple of minutes so that's really good um so we we talked before about sort of things that is related to the basic sdf spec but it's"
  },
  {
    "startTime": "00:32:02",
    "text": "sort of extending it slightly so a couple of topics has come up and and this is the first one carson go ahead yeah so early in the development of sdf we found out that there is some ecosystem specific information that the ecosystems want to put into the sdf model which makes it hard to actually have harmonized models because each time an ecosystem starts to use a harmonized model we would have to add information uh to to that so we thought that maybe it would be a good thing to have a way to do what the the xml or html community does with sci files which are separate [Music] data that actually hook into the main document in the html document or the xml document in this case and provide additional information and we have discussed these for a while and and have been thinking about applying css concepts or something like that to it but actually it turns out that the the what we need seems to be much simpler and i have tried to write this up in a first draft before this meeting so essentially the the processing model here is that you can take a slim harmonized model plus one or more mapping files and generate a fat model that has new qualities in them and that that's really probably the part that requires the largest amount of thinking so it's uh structurally still in sdf spec but it's not what you actually would would harmonize in an organization like 1dm uh it just has information for from"
  },
  {
    "startTime": "00:34:02",
    "text": "one or more ecosystems added to the base harmonized specification so a mapping file essentially would start with the same info block and the same namespace management namespaces and default namespace sections that you have in a normal sdf spec but the rest would just be a sequence of pairs or a map actually in the json object that maps a joys adjacent pointer into the sdf spec to new qualities that would be added at this point um in in the spec so it's like a set of editing instructions um except that the amount of editing you can do is is limited uh there and that that's all pretty obvious i mean this should work very very easily um there's just one problem these qualities may not be part of the sdf language so we want to have qualities in there that are specific to ecosystems and next slide so here's an example where where we have an ipso mapping for for an sdf specification and if so has these these object and resource ids um so that's something that is really specific to to ips so oma lightweight mtm um so um it should really be the purview of of those ecosystems to define these additional qualities it should not be something that they have to run to to the asdf working group or fill in a registry with stuff each time so apart from that this looks workable well it's a bit a little bit of"
  },
  {
    "startTime": "00:36:01",
    "text": "a pose but maybe we can fix some of this verbosity in the sdf compact uh work so i'm optimistic that this is possible so next slide we did the same thing for the web of things thing models we didn't do it for the thing descriptions obviously because that has instance information which is a separate item on our list today and uh yeah we immediately fell into the trap here of using the wrong namespace because the namespace really should be the namespace of of the model that we are uh augmenting and uh the the namespace that is listed here is actually the one in which the terms titles and descriptions are defined because what already uses the namespace system so these are the qualities that we are adding so web of things gives us kind of a direction in which we want to go here so maybe we need to have two different namespaces here one for the qualities and one for the pointers into the the spec michael you were at your microphone on michael costner okay yeah so uh but my my diagnosis at the moment is we haven't painted ourselves in a corner yet we we can make these mapping files work and they can be simple um and uh the next step will be using them in more"
  },
  {
    "startTime": "00:38:00",
    "text": "converters so the yank converter for instance currently dumps a lot of ecosystem specific stuff into description qualities where it will be hard to pass out again and it would be much better if it actually generated a mapping file instead to keep this gang-specific information okay i think that's what i had thank you kirsten so you mean that the mapping files in your experimentation without the proposal is not breaking anything with the main sdf spec well the the one thing where they touch the main thing where they touch is in the area of qualities how do we maintain this quality space and similar to units where we have sdf defined values and other values we might want to do the same thing for quality names so that that actually changes the the data model of sdf somewhat but in in a limited way i think it's yeah it still seems like i mean if there is a bet to area we need this kind of sort of semantic information that's good to keep in a in a consistent way so maybe we should explore if there is a way as you said to to add it or change it yeah but okay um there is nothing here at least that"
  },
  {
    "startTime": "00:40:01",
    "text": "prevents us from moving on with sdf specification asses yeah okay good any comments or questions i guess people are burnt out after a full week um then we move on uh who wants to speak to our islands um yeah we had a bitter problem because ari was supposed to present this and he had to drop at the last minute for from other non-work stuff i think uh so um um well let's see um i can maybe it's do you want to talk to it kirsten or i can well i can try yeah go ahead so given that that the world we are coming from here is is the hyper media world where we are describing things in in term terms of uh [Music] resources and links it's probably a good idea to think about how links would improve our situation in sdf and yeah looking at the the way we are using links we already have them in in sdf ref and so on but maybe we should have a little bit of a wider uh look at this and there are some of course some implicit links the parent-child relationship within the tree structure of the sdf specification that's obviously a form of link we can make explicit links in terms of cross references using sdf ref but these are very specific things because they mean we we do wholesale inclusion of of the target um of of the link um yeah so yeah next slide"
  },
  {
    "startTime": "00:42:01",
    "text": "so maybe we want to be able to describe the fact that [Music] i'm always wanted wanting to say things but this is not the right word so so um concepts are linked in more interesting uh ways than just inclusion um and uh for instance the if we have a heater uh there's maybe a boiler somewhere that we we want to that has a temperature that we want to read of that boiler or if there is a switch a light switch then probably there is a light somewhere so these are definitions that describe relationships between instances but then these relationships in turn have properties that we may want to see at the glass level because a heater that that is meant to heat a boiler if you put that in into a [Music] pot for for cooking something that that might not work too well so you may want to put the information that this heater is actually supposed to have a link to a boiler into the definition so we we have links at the instance level that we want to describe at the class level but we also have links at the class level so we have to be really careful about what kind of link we are really talking about and when we have a link then of course you want to have a link relations with that that describe what this link is about"
  },
  {
    "startTime": "00:44:02",
    "text": "and in the web world we have a link relations registry and that's essentially the predicate of an ontology if you look more closely at it and you may want to put in other information like cardinality and so on and what fits into the target position for the link and so on so let's look at the example on the next slide so here we have a robot arm that um is somehow highly related to some other uh robot arm so these arms are not just there and like shipping ships in the night but they need to know about each other um or at least that in this example arm a needs to know about arm b um so you want to be able to say that there is a relation here um to something that is of uh sdf type sdf thing robot arms sdf object rb so this is an example maybe mapping this to to sdf qualities isn't quite done right yet but it might might demonstrate what we mean here next slide so the the instance relations for instance might be a light switch controls a particular light and that relation is something like like a property in in some way but it's also an affordance you would exercise in a different way than a normal property so if you uh know the light switch is on or off that that's of a different quality um then um you know"
  },
  {
    "startTime": "00:46:01",
    "text": "knowing what light that light switch actually is controlling so some of this is runtime information or instance information some of it is definition information and we we want to be able to describe these links and the the reason why this is all a little bit oppressing is that in lightweight m2m there are object links and these are runtime links and of course you want to be able to describe them in an sdf model next slide so we might have a property which is which light is being controlled by this light switch and it's of type link or we may want to model this as a new kind of affordance but in the end this this will look very similar to the previous example so next slide when we talk about instance information and i have to do a little bit of karaoke right now because i'm not entirely sure i understand what arya is talking about he sees two different approaches between himself and michael next slide so there are instance definitions uh which describe a specific object so for instance a web of things thing description is an instance different definition it's not a class definition sdf is about class definitions so in a thing description they didn't have to do the the intellectual work of separating out qualities that describe a specific instance and qualities that are"
  },
  {
    "startTime": "00:48:02",
    "text": "similar enough between all these instances that you might want to put it into a class um yeah so um class kind type in since uh next slide um we we need to work uh on on the words we're using for for this there's only a limited number of english words and many of them have connotations or previous uses that make them difficult to use so if we have an sdf model which is a class do we maybe want to have a separate instance definition which somehow relates to this sdf model by the way this could look a lot like the mapping file i talked about again by adding qualities to the existing tree structure of the model so we could have the ability to give identities identifiers whatever two instances we could describe the the purpose of life relations between the instances um yeah i don't understand the last bullet uh of course you want to be able to to put all the qualities that are in what thing description into this instance definition it would just save us a lot of work because we can just use the the [Music] structures they already have defined so last slide in this deck instance sdf just a quick comment on yeah quick quick comment on this last line there i think the idea here was to have these instances or whatever we call them as not as which is a runtime instances that have a particular state so the instance r is talking mostly"
  },
  {
    "startTime": "00:50:01",
    "text": "about here is this sort of instance without the current state yeah yeah it's not the actual digital twin it it's the definition of a specific happening so good yeah next slide yeah i'm trying to take her yeah okay so this looks almost the same like what we already had but the point is here now we have a specific uh name or id for the thing for the instance so the instance is is not an instance of a specific state of the thing which is yet another way of of going down one one turtle but it's it's the description of the instance so it's on the same level as what uh thing description and we would have the vocabulary here to do this okay i hope i haven't done this too much this service and the next one is the alternative view is michael's view so michael please go ahead so just right back on that last slide um is a good segue where he says uh instance of i think what the main difference between what ari would would was proposing and what i'm proposing and different approaches that not so different but when he says instance of i would just use sdf ref there because we're really bringing in that definition and we're using it to customize it so um next slide please okay so what i really see is that what we have are layered constraints on definitions you start with a base definition you refine it and compose it with others and you get reusability at all the levels and it's"
  },
  {
    "startTime": "00:52:01",
    "text": "it's not clear whether it at any time really becomes an instance until it has a you know a protocol binding but in between there and to address what carson was saying what you need with relations and all and this is more than just breadcrumbs but what what seems to make sense is when you have reusable objects you could take all the trouble to go and classify them and name them and everything but really what you want to do is build an application graph out of reusable objects so you have an on off object but you want to use it for different things in its context and this context is going to be set by a graph that has other objects that relate to it in specific ways so you can either as carson said make a thing and make everything sub parts of the thing or do something that's a little more level and not so hierarchical and we find that very often we need to do the hierarchical thing and can't just make it all level because also we have to describe communication between things and and how they're connected not so much communication always in the digital form but how they're connected in the application graph so uh objects are connected and related and so this is a way to basically make your application graph portable and retargetable so i could cast it on to retarget it onto oma lightweight m2m objects just by filling in the object links to to at runtimes or at generation time when i generate the actual runtime thing and put protocol bindings in at that time i would generate the actual links and assign the namespace ids if i needed to if they weren't already done and then do the on the air schemas and protocol binding so i i don't see it any time it really becomes an instance until you actually give it a network address and and actually embody a state to it until then you're describing things that get closer to instances and it's more like layered constraints next slide please"
  },
  {
    "startTime": "00:54:01",
    "text": "i'll just see questions at the end so um i wanted to also talk about a little bit about the language specific features that we're talking about and um what we only need to do is more than just breadcrumbs there are places where we need to use the json pointer to an sdf definition in specific ways that aren't just expanding it like sdf ref does but rather to use it in relations and in the composition that i was just talking about to build application graphs so really sdf is the best thing you know the dependency here on our our first release would be do we really want to keep calling it sdf ref because sdf ref from doesn't really capture the meaning in my opinion and we really need to think about whether we want to say sdf expand or something like that and you know we have this discussion and you know maybe it's too late and we can't really rename sdf ref but really if there is a last opportunity it's now and the window is going to close with 1.2 so it's kind of too bad we already use it so much but actually i think it might make sense to use sdf ref for the thing that is does not do expansion and invent a new term for the one that does but we need more discussion on this next slide please okay another feature the semantic links is i see them they're semantic links they're subject predicate object triples and you know their web links work that way too so subject is though always pretty much the present definition we don't necessarily need a context override or quads or anything like that but what we do need is the predicates and then the objects that can be an sdf pointer which is one behavior to semantically define the relationship one sdf object to another and sometimes if you're for example lightweight m2m"
  },
  {
    "startTime": "00:56:00",
    "text": "you just need to constrain what kind of objects you can point to when you uh when you build your um instance graph your implementation so a lot of it is is uh using these references in links but but wanting to be able to describe it with a predicate that says you know target type or something like that right so also they can be external references though that are just any old uri so we want to be able to integrate with rdf using this pattern as well uh next slide please i think this is the last part i'm afraid we're kind of running out of time here i know i think this is the last one um okay so protocol binding yeah this is just okay carson already covered this so this is basically um but i wanted to say one thing is that i did an experiment where i i used the web of things protocol binding vocabulary as a sdf extension using the vocabulary extension technique similar to what almost identical to what carson showed earlier and then used that to generate tds and that was i found that to use it as an annotation on sdf and then use it in the generations to be very good workflow i think that's the last slide can you see if there's one more no that's the last one i'm done then i'm done okay thank you very much any super quick questions of this i just wanted to say let's have an interim where we go into any detail but yes quick questions carson yeah i think i look at these lines and we're not sure whether we were talking about the same thing but i'm now convinced that we have a pretty pretty close direction common direction maybe with the exception of whether we want to reuse that jump sdf ref which we kind of"
  },
  {
    "startTime": "00:58:02",
    "text": "and renamed slightly but we should have renamed it more radically but apart from that i think we have very similar ideas and i think that the what thing description is is really a nice benchmark uh that we can use here because it is at the instance level and we can make sure that that the the levels of turtles we we built here actually is able to reach down to that thing description so let's have that interim okay thank you and um that was the last of our presentations i think that actually segues quite nicely to your setting up the next interims uh michael michael rich or something i gave you two seconds into the channel uh into the jabber and into the minutes uh a doodle poll for uh virtual interims in december january and february um so we'll pick one not not uh sorry we're gonna pick three values from that that there are several weeks and i believe if i'm not mistaken i have picked the hour before the one dm meeting which i recognize is early for michael koster and the hour afterwards um which is now getting into late in europe um on the monday or the tuesday of several weeks in each month so please pick uh them appropriately assuming that we will pick uh three uh values in there and uh it sounds like we really want a december meeting a virtual interim um and that we possibly might cancel or skip january depending on how well we're doing with shepherding and other things but that we absolutely want a february virtual interim to deal with any issues arising from a possible working group last call that might have occurred after the occurred in january um and uh we had previously done 90-minute meetings i think we should try to stick to more frequent 60 minutes um and get"
  },
  {
    "startTime": "01:00:03",
    "text": "right into things yes but and yeah go ahead with the quite the milestone review part from the last three minutes or one minute we have left yeah i lost well two seconds right um just a quick thing here uh milestone review we are um developing sdf according to milestone we are slightly we're supposed to be sending it on on in september we are on track but with a slight delay of course and during this work well identified additional interesting work like the one we just discussed on on protocol mappings and relationships and instances and we need to figure out whether that fits within the big document a simple extension so that or whether we actually need to have more complicated extensions uh which would then sort of be beyond the scope of of the asdf group uh but if that happens we will start looking at the sort of need to recharter and of course we would also like to be around uh long enough to that we could have at least one face-to-face meeting during the lifetime having never seen anybody right that would be there that would be a first right but yeah thank you thank you all thank you for attending have a great um you know final hour and a half of iotf meetings it's time and see if some of you on your dreams and some of you at the next face-to-face meeting or whatever whatever happens with that time thank you very much bye great thank you push the button watch button there we go"
  }
]
