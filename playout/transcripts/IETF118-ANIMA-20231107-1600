[
  {
    "startTime": "00:00:02",
    "text": "So Welcome, everybody. So, it goes up again. Oh, yeah. Well, that guy It's it's it's fine. I I think Okay. So we're trying to reduce the, bureaucracy in the beginning. So we'll just have a small slide deck air for from the chairs, but, some guru meditation, please inhale all the necessary requirements stated in the note well. Right? Everything you say here, Kenneth will be used against you in a draft of law. I think everybody here has already, tried to be very helpful in registering themselves by opening the application on the phone or or, kind of scanning the QR code so that you all shall be rightfully counted for presence in this room so that we don't have to sit in a small corner next time Okay. And also, import third party announcement. The IITF is again looking for a great leadership and, They did initially claim they closed the feedback, but it's actually open. And there are also a few, really, late commerce like IR, IITF chair, and, application area, but all the feedback is still open. So please try to get, feedback about people that you know and had experience with, in into a nomcom. That's very important. For the IETF overall Okay. And with that being said, would like to start going through the working documents, without slots. Because those are also the ones that are already in a state where they're, nearing their end of life in in the working group getting punted to our wonderful AD so the first one being Brooski Cloud, so we did"
  },
  {
    "startTime": "00:02:04",
    "text": "push a little bit, got all the IPR disclosures. So she will be doing the check write up, and that should hopefully mean that, with anything small being there being fixed that we can get it to the ADQ and, Brucey Cloud also doesn't have dependencies, against any of the other ongoing Bruski documents. So that document could go out fairly, soon. On the opposite end of of the spectrum, we've got, CAD366bis, which is of the last one of, the brosbee cluster we did get a very good, shepherd review from, Alex Clem, And so, the co office discussed with it. So there is a somewhat amount of work to be done. Utility. And that's, unfortunately, a little bit of a guessing game because the toolchains for Yang, are not really all that, good so far. So we'll we'll we'll hopefully have to see what the original young RFC says, but didn't want to go into detail of that because we haven't done the work yet, but the Shepard review and the initial area with him, was running. So we we we did, invest some good cycles there. The, anima network service auto deployment. So we had, some discussions with that. And, given how, the authors didn't have time and, and, and the review was also not more time to invest, up to this point we may want to, park those, up to, maybe 1 or 2 ideas as we said at IITF117 purely to serialize the work because from the two, documents here on the page, where we wanted to concentrate on finishing the grass distribution, where we also got a refresh only, but, we did review very much from the chair side. Also, the shepherd feedback and discuss that, and I'm going"
  },
  {
    "startTime": "00:04:01",
    "text": "propose fixes. For, the documents so that it hopefully can pass through the shepherd and then, kind of, finalize, in the working group and go to the AT review. So that's the, working groups document with without slots. Overall, Bruceki, we we did explain the cluster. And, at ITF117, we also initiated re review from all the early reviews that we had done. On the documents, which all had a really ugly, you know, reds and similar bad colors. So now we got, especially blue and and the other documents refreshed early reviews for, working group last call. So, with that being said, that means We can also, progress brewski, A. E. So, shepherd will do, now the, Shepherd rope, but I think that's me. It's kind of nicely anonymized here on the slides. We did that and so that we can then also quickly finish that and bring that up also to to 80 and doesn't have other response dependency, so I think we'll be, hopefully passing through before the end of the term of the AD, at 2 of these, Bruce G RFCs. There is a proposal for the restructuring of the excess in Bruce, you have to also speed up the other documents, by moving out some of the existing, advanced discovery tech. So that's what is is a is a major part of, you know, the technical discussion. This time around We're also, wanted to to remind just because we had 1 hour here only, do welcome new work, and especially for the non bruce key areas, right, our charter is much wider. So please, propose and discuss that on the and I'm a mailing list in time before the IITF Working Group meeting schedule because what"
  },
  {
    "startTime": "00:06:03",
    "text": "happened is that, some of these ideas, were discussed on the on the mailing list and when 2 months ago, I was asking, can we please see what we wanna talk in this working group meeting. There was nothing more than this urgent work that we had, but that fits into 1 hour slot. And we've always been reminded that the IETF week is fairly overloaded. So we only reserve time for 1 hour. So please, if you have new work, bring it early to the mailing list so that we can discuss it more I've put a little bit of such new work, on the agenda, but it may likely run out of time, but at least, you know, that'll be in the proceedings. Hopefully, there there will be discussion after the meeting then. And, yep, so everything else of all the wonderful procedures that we have, we don't time, this time around. But, if you're, you know, new here and don't know it, feel feel free to reach out to the chairs afterwards. So and with that, we're going to the next slot, and that would be Who's next here? Stop sharing the site. Sharing slides again. It's a? Okay. Bring up Slides, cinema, slides, from the selection. You. So I'm presenting this also on behalf of my coworkers Andrew. And Stefan who was online. And this time, it's my first time at AITF directly. So my first in person presentation. Yeah. Next slide, please. I have 2 of slides. One is, what happened recently where I think the last call was already in April. And there was only minor comments, and they've already handled pretty soon. And then we had 2 further rounds of the young director's review and the sector review. End. Mattly, a couple of days back, the second review was also done. I was saying vary for that. So"
  },
  {
    "startTime": "00:08:03",
    "text": "These are finished, and a result is ready. There has been one issue open for quite a while, and we it took some effort and some time to to to do the discussion and get you some nice output but finally, there is one. And the issue, is yeah. That's, the existing discovery mechanism of Rusky doesn't really cover, extended feature sets, for example, of registers. In this case, it's Yeah. To which enrollment protocol in in 8 the capable register would be able to support. And and and we figured it's okay. This is really something that's, should not be handled in the draft. Specifically, there's more general topic to be handled elsewhere. And there's a nice upcoming promising draft. Bruce Keep discovery, handling debt, So whiskey, basically just referred to that graft. And then, of course, we have a secondary problem this draft, or it's not yet ROC and even if so, what else other solution might maybe out there, implementation they're lacking. Yeah. The new this new, back in it. So we also needed our fallback strategy, for existing implementations, and they in the end that came up with, very simple, nice solution. Blame to use a specific survey service name apart from Rusky registered, for example, who's registered CMP. Does in the absence of the more capable, more general mechanism to become later. Yeah. And, in the the latest version of the document 6, I, so far, we have"
  },
  {
    "startTime": "00:10:00",
    "text": "just, done a preliminary version of an, section on this topic. And this needs to be updated. I won't do this very soon. Up some internal feedback. And apart from that, we just made explicit some manner, extra, comments and, for example, notes that when, registrar delegates enrollment authorization text and, of course, the RA behind all the needs to have required information to do to do these checks. And we also mentioned that the status telemetry we don't do the mother voucher for the mother voucher is the same as an standard risk so far, any comments or questions on this slide? If not, next slide, please. Yeah. So the status overall is that we We're well past working robust call. We have the the just set up a wrap right up at least in an initial version of it. Atollars, and we have the 2 revenues needed. And the only smaller open to do is to finalize the section about the discovery that I just mentioned. And then the family ready for AD review. Yeah. That's my talk. Okay. Back up slides. Okay. Gets gets wonderful stuff we're not allowed to put into Yeah. And these are the color. Alright. Let's not bring up that, favorite, red hold from Toldis. Didn't see it, so I'm I'm not quite sure if if then it was before, No. I think then maybe that's think in my side, I also said I still need to do that? I I mean, I was I was doing earlier, review of of the Yes. Yep. So probably this this one is is wrong, and I I have exactly on the list. I think this is on the top of this to do section. Yeah. And you should keep a"
  },
  {
    "startTime": "00:12:00",
    "text": "a campaign. Yeah. Just afterwards. You know? Maybe before I'll read you a chocolate. OCA. It's kinda but he's, so you know, push him before the Christmas if you don't hear anything. November. The this will happen. November is a good time. Yeah. On a biscuit line. Mhmm. Yep. You. Okay. Mhmm. Alright. Who's next? JWS. Yes. Actually does work. This So hello, everybody. Also from my side, Thomas Vanno. So a quick update on JWS vouchers. So, there no new content from last IETF. So and what we what we did is and you'll go from there. So to recall, what we did is we did, defined, JWS, voucher format. It's same to the already existing CMS voucher in 8366 There are no young changes to them. And, this format is already used and gross keep Prime Wall Bruce, P. P. I'm Next slide, please. So, We did, a working group last call before IDF 116. Then, in July, the checkout right up happened, And, open is the INA registration for the application voucher, JWS plus JC. The document is ready for API review and indoor testing is welcome can also happen together with those TPM for those you well, just That's"
  },
  {
    "startTime": "00:14:02",
    "text": "I think this, this this this one registration is is is the correct problem, right, because We can't get the expert to reply to that, Michael. Set Right. And the resolution is we just take hostages here and put them in the room before Friday night night or Michael at the mic. Yeah. So we can go ahead with that as it is. Okay. Okay. If we made the decision that we wanted Voucher plus JDOS Plus Jason. Mhmm. Or some other variations in the seaborcozy kind of space. Then we get into the media man not sure what they're doing yet. Wait. Wait. Wait. Sorry. This this one that's that's This one is fine. That's one is fine. Which one's fine, but we do need to get a reply from the designated fruits, which we may need to, yes, get hostage. Just take hostages for it to get them to reply. That's mostly Wait a second. So is it fine now, or do we need to get the reply first. Why does this need to happen before kind of going to IETF review for it. We do not need to have get this before IITF review. We would we would be we would be smart to start the process so that we're not waiting a lot later Yep. And so that any text that happens usually you get you want an early review for media man. I think we did email medium, Man, some many months ago, Yeah. I believe. Yeah. So They need a they've only got one working group chair. No co chair. So but that doesn't seem to help because the experts are is not the working sharing. But it's also the working chair has to wheeled the whip. Right? So but but so, yes, we need expert review for that. If we wanted and we have discussed having 2 pluses or more than 1, 2 pluses in it"
  },
  {
    "startTime": "00:16:03",
    "text": "but that then requires that we wait for them to decide what their process and what does it even mean? But in the end, we should simply move forward. Forward. Yeah. This thing can wait all the way up to the end in of ISG review when I analyze these folks haven't approved this stuff and then it's Right. They're really put under pressure. Right. Right. But but It's entirely likely that we might also cycle with our AD waiting for our AD to do that. Is there AD in the room? Cool. You're behind me. I don't know. Depends on whether you're gonna want us to have gotten our media approved or not. You won't care. Good. So, Roy Wilson, so now I agree with Thomas that I think you just make sense to just pass it on through the process. Maybe we should send an email to media man at the time it gets goes to IT for last call and say, look, just is, you know, has hit the stage and then try and push it along as much as possible. I mean, in in the original discussion in IT, if 116, my understanding was JWS voucher isn't needed for anything, then, the, other Brusski, drafts. Right? So we're we're not in a hurry to send this out, in in so part that by itself, it doesn't give anything. But, mean, we're we're we're happy to push it out through, as as soon as you want, but just don't come later and have a late last last minute change requirements, right, I mean, that's I think for us, it doesn't matter. And and, obviously, bear in mind, I'm stepping down and not So anything sooner rather than later is better to her. I always gonna otherwise even end up waiting after March. So he's the closest to that deadline. Yeah. It doesn't make sense otherwise. Uh-huh. Okay? And then the next one, let me guess. GW is Rusky with pledge and responder mode PRM. Margaret. That's proving my term. Am I audible? Yep. I know. Perfect."
  },
  {
    "startTime": "00:18:03",
    "text": "Okay. So, that is a status update on Bruceky, was veteran responder mode. So next slide, please. So we updated the draft shortly before the the ATF pressing the remaining issues from working group last call, which was done in March. This year. And also some further issues that have been raised during the design team discussion. I I put the most, most important changes. So the technical issues essentially on that slide. But, I would like to skip that that information because it's mostly repeating what we already discussed in the design team and it's also in the GitHub discussion visible, So there are 2 open issues for which we already have proposed a solution and discussed that in the design team. But I would like to share that open issue for those open issues here and also the we have for the it's also going back to the discovery. If you remember, on risky PRM, we are essentially reversing the communication model. So to patch as a server and the red is the client that is essentially talking to the pledge, not the other way around as we have a group team. So for that, we introduced a a registraragent which, basically is the one who was in contact with the pledge and providing the collected information further to the registrar. So it's some kind of depending on the mode, the register agent is operating, and it might be a nomadic device. That goes back and forth between the pledge and the registrar. Or it might be co located with a registrar. So in any case, we have some kind of, discovery of register by the registrar agent. And for the for brewski PRM, we essentially stated here that we expect that there is already some upfront exchange of information, like, for instance, the serial numbers of supply just to be discovered"
  },
  {
    "startTime": "00:20:02",
    "text": "and further information. So there's already a trust relation the registrants, the registrar agent, and we assume that, they know where to find the so that the registration knows where to find the registrar. So that is a, assumed approach that we have here. So that it is, fixed by configuration. And if there is, further discovery necessary between a registrar and a registrar agent and the registrar then we refer to the new ID, Bruce Key Discovery, which will be discussed later on in in the session. So from that that was the issue that that came up in the question also on the design team, and the proposal is to keep the simple assumption in PRM that, the registrar and the registrar agent are known by configuration. And referred to a discovery for any case when an enhanced discovery is necessary. To enhance discovery might be, enhanced feature sets or or a further information like, different voucher formats. So we are using JWS voucher palm but there might be other formats coming up in the in the future. So based on that, the proposal is to to keep to go forward with with, that proposal to solve the open issue 79 Any remarks, remarks, Yeah. I think the it's just a little bit, shortened here. Right? So the the whole point was trying to figure out what's the minimum necessary to get this deployed. And for that, it's perfectly fine to have it configured for the registrar and as soon as you do need to have, I think, multiple registrars or the like or so, then that's Brucey, Brucey registrar, so we don't need to solve the advanced cases inherent. Of of of Yep. Correct. So we would go forward with that. And then we have on the next slide, we have"
  },
  {
    "startTime": "00:22:02",
    "text": "the second open issue that also relates to, discovery. At this time, to the discovery of pledges by the registrar agent. So currently, the draft assumes that we are using DNSST with MDNS that's in in two different ways. So one way is the the, registration already knows up front, which flashes to to bootstrap or which pledges to bootstrap in that case, He would utilize the product serial number that he has configured to discover specific clutches He may also use just _browskipledge as shown in the second bullet point to discover available purchased for bootstrapping At the end, he he always has to to make a first decision based on a list of configured serial numbers for pledges for would scrapping. So that is also as in the case before, it's a simple approach to do this to do the discovery the discovery ID as referenced here. Describes a more versatile approach that may not only be used, be using, MDMS, but also other approach like graspgras So, therefore, we we would state the simple discovery, we would we would stick with simple discovery in the by using just the the product serial numbers and MDNS. As some kind of minimalist solution. Also refer to brew ski discovery for more enhanced discovery, Right. Yeah. Thanks. So I I I had a longer discussion about all these details with your Cheshire on, on Saturday because there were a couple of things that I was worried about reading at this against DNSSD draft, but we discussed this on Monday in in in our site meeting already. So is perfectly fine. The, text is probably a little bit terks. So the, brisket covery has, the same stuff with much more detail and refined"
  },
  {
    "startTime": "00:24:02",
    "text": "more generalized. So let's hope that that this goes through and that we don't to counterfeit much more of these examples and other details into this text, but we'll see that during ISG review. If if somebody really knows DNS SD well, then this is fine. Otherwise, Bruce Gee discovery has all the gory details for people who are starting to implement that for the first time around. That's that's how I would describe it. Mhmm. But but by the way, after the question on Monday that we had regarding the discovery. I did an update of the draft, but only in the on the GitHub of Sanima working group. So as soon as we we, align the new text in the design team, then, I can submit a new version That's perfectly fine. Yeah. Except for words missing of kind kind of shepherd last for you. I think technically, This this should all be fine. Okay, So then there's just one one last slide so the next steps is the finalization of the 2 open issues that I have shown on the slide before Working group last call has been done. Before, 116 IoT, deer review, early review, was already done. The sector early review was done, but it was I think it was ready with knits we addressed those knits. And I think, you you ask Charlie Kaufman to do the sector review again. But that hasn't happened yet. So that needs to be updated Yep. I think for all the drafts, by the way, one comment So it's always good to to, you know, even put in the draft in some section, please remove any type of you know, information about implementations and tolerability, those things that the poor shepherd needs up in the write up because their questions about, that part. So that we can copy that as shepherds over from the draft, then we don't need to dick that up from some other place."
  },
  {
    "startTime": "00:26:00",
    "text": "That's that's marked in the draft. So the history and all implementation details, set us marking the draft for please remove before publishing Great. Yeah. So then, the fire's cover he's the shepherd, he would go ahead and do the write up afterwards. It might be that we have some some kind of restructuring in the document, but the intention is more to have to have a better way through the document. For for the reader, not changing And afterwards, we think that's ready for Mhmm. Okay? What's the last slide, I guess? Yep. Okay. Excellent. So what's next? Yep. This this this this and we need someone else to take notes. Okay. I'll do. I know. Again, these white to small beer cans. Hey. Escode Ike here on the mic. So I will present, frame brewski or see brewski as we're now adopting this new acronym, you can see that 1, 2 bottles of cans of beer have been added to pictures. With local beers for procs, can just keep expanding it. Yeah. So these are the brews keys, Actually, yeah, there are quite small effects as you can see. So, going on to the next slide. So, Should I control it or do you? No. Okay. Yeah. Another acronym was listed here, so we could also say co op, Bruce Key. Should just, as another, likely, acronym explanation. Next slide please. So just as a recap, what is this about? So we, have a Bruce key classic. Basically, what we do is we wanna make it suitable for constraints IoT devices and networks,"
  },
  {
    "startTime": "00:28:00",
    "text": "So there's a schematic, shown here in the diagram. So we have, a constrained site, which is the local network where a co op is used by devices. In this example, they are 6 low pun based devices. You mentioned at work And on the right side from the registrar to the Maza, it can still be the htBS communication as we defined. So now this Bruce Key Platch is a constrained device here the bottom left that wants to onboard and wants to do that via a joint proxy and via the registrar that is on-site. So this is just as an overview what we do Next slide, please. So we only focus here, on the, well, the say important open issues that I see not on the progress. So you can see that in the backup lights, in this deck, but I will not go over it So the issue 1 listed here is basically the yeah, different variations that we have about discovery. I think this relates also to the discussion we had earlier this week. So site meeting and also issue that came up in all the previous drafts. So we have this variation in discovery, and I think we're moving toward solutions here. So that's good. This is just recap yeah, what what is something to consider is that there is different ways to discover it. So can see the picture the top picture is basically the pledge trying to locally discover the joint proxy. So this is, for example, a 6 local mesh network, so it could have its own let's say, network specific way of discovery, And that's option 4 in the first list. So network specific. I think this threats mesh networking uses something specific 6 as something specific, I think, but there are other options as well. So you could say we're going to use unsecured, co op discovery. So that's link local multi cost requests,"
  },
  {
    "startTime": "00:30:02",
    "text": "we can do MD and S. That's, the same communication pattern. It could be a grasp. But that's currently, I think only well defined in the context of, like, say, these, these autonomous networks, right? So where you have a control playing that needs to bootstrap maybe not for generic, networks where you have let's say it data plane and control plane all in 1 So but there is some variation there. And on the bottom picture, you can see while we have a similar variation possible the other discovery action. So this is the joint proxy that needs to find a registrar. So this is not link local anymore that he go over potentially multiple, radio hubs it could also be, yeah, via IP routers and multiple hub So, It's, the reason why we have different type of discovery here is not linked local anymore. So There's some other approaches like you could use, core resource directory, once you know where to find the resource directory, you query it. Okay. Where is my registrar? That could be an approach approach. How you do it? DNS query with the same question, okay, where is services of type registrar? Grass can be used. That's also for multi hop, yeah, kind of flooding of announcements. So you can, also, discover registrars that way and select one could also be something network specific, which is, could be, for example, that's, for example, threats. There is some network management data, that gets flooded to all the nodes in the mesh network, and you have, pointer in that management date, I say, where to find this registrar. Just as an example. So this keeps you lots of combinations because you even say, when I combine, these things. So normally if you use co op discovery on the, on the first use case. You would also use co co op a core,"
  },
  {
    "startTime": "00:32:03",
    "text": "Escovery on the second use case, but it's not necessarily the case. You could also mix and match that would become weird because you get a lot of different combinations, maybe next slide. Just to explain a bit more about the problem there. Yeah, the the problem is that of course, the different parties. That's the first two bullets must support the same discovery method. Otherwise, you don't have interoperability. So the pledge asks in a certain way with a certain protocol, like, hey, can I join? And then join proxy needs to support the same protocol. Ideally, we don't want in single deployments, to mix these discovery, protocols because that's like complexity that no one actually wants to have. So ideally, all the devices in a deployment should you to agree on the single methods. But then again, Yeah. In IETF, we have these 2 multiple methods. So how how to get out of that. So maybe it's a question to consider. Are we okay with it's allowing principal multiple discovery methods here. If we say yes, that's okay, then it applies that that's Yeah. You don't have necessarily interoperability unless some other future documents or organization says, okay, this is what we're going to so you must use co op discovery or you must use and DNS and DNSDC or you must use GRASP in this case where it's in yeah, maybe different use case where that's, suitable. So that's something to keep in mind. So I'm just assuming for the moment that the answer is yes, we we do allow these multiple approaches. And then we have next slide. Can I just make a comment here? Yeah. Sure. So I I think all these different variations equal apply to the nonconstrained rules key. Right? So we have this this problem everywhere. And, what we basically did was that in Bruce itself, we also were hand waving"
  },
  {
    "startTime": "00:34:00",
    "text": "with a very little detail. And then it was the ACP. Which was one particular type of network deployments for the ANI that basically you must use grants. right. So in the same way, I think that That's we most likely would want to I think, hopefully, in constrained Bruski only talk about one single discovery, the minimum that you would like to see anybody who doesn't have a better opinion to use. And maybe that should really be the core LF. The the hookup discovery. Because that's kind of new and best matching the constraint environment Right? That's what it's built for. Even if, you know, people like, matter and threat haven't selected it. Right? But it's kind of the the typical constrained solution in the IPF. And then all these other variations will get through, the Bruski discovery a document, for example, and obviously, I think the overview that you have here is quite nice. And I think in general, we we need to say that different type of network environments need to basically define the standards for discovery that they want to have for interoperability because the service provider will never do the same thing as a small constrained network or as an enterprise or so. We have variations We've gotta live with it and just create kind of a con understandable and what's the process to make make the choices? So that was right there also into the discovery. Document. Fritz. Robleton as a contributor. So, I I think one of the concerns I have to hear is that an artist is finished. Not really. There's nothing else add in when there's nothing else to take out. So it could be on to the normal site. So I'm so worried when you got lots of these different discovery methods that, as you say, sort of reduces interrupt because you have to mix different things, mix and match I think if I understand what TELUS is saying, he's sort of suggesting maybe you should have a should statement, a 21, 211, I should say, at least specifying you you should use the co op based 1 unless you have a better reason to choose something And to me, that would sound like a pragmatic compromise through this that we get"
  },
  {
    "startTime": "00:36:01",
    "text": "get some some level of expectation, but there's still flexibility. Think that was on the next slide, by the way. So maybe we'll just have a look there if that's the case. Yeah. So that's the possible proposal here. Yeah, so to to get complete issue of all these different variations to get it out of scope of this documents and we say, okay, here we define one recommended variants, which is, using COVID discovery and core link format and also with co op based, resource directory, for the next discovery step and then leave any further Yeah. Optimization to this future documents, And keeping in mind that I think different yeah, markets will will probably choose different, solutions, but in a way that that's, yeah, you don't have interoperability at the radio level as well. So if you're tread radio in a six ths radio, then we'll never talk to each other. So in that case, it's fine if they also use a different discovery mechanism because, Yeah. You anyway, don't have interoperability from the link layer or search fiscal layer, So so, yeah, So that's not not bad in that case. At least we make it easy to to adapt this technology to to different cases. I think that should be our goal then. I think the, the the the the only thing we wanna make sure is that the co op discovery that we have, that we keep in in the document that we do understand it will be forward compatible with the cover in the same way. As for DNS SD and and grasp. I'm I'm showing how how we make sure that they're backward compatible with existing RFC 8995. Definitions. So that's that's the only question. Yeah. I think that's something to to, take care of. So we should not finish this document too too quickly in a way that we hamper ourselves with it's, yeah, this discovery work that's still ongoing."
  },
  {
    "startTime": "00:38:00",
    "text": "I think we should finish this issue as soon as as as as you're clear that Yeah. Whatever kind of we have sufficiently good choices for Bruski discovery that we make it backward compatible what we decide here. Right? So, and and this this is pretty much said, I think we would add additional information in the asset of that information. Bruskey disc this discovery will say that the same information is discovered in what's here. Right? So this this is this is the simple default, you know, with with the the the preset. So I I think we can discuss it in the discovery slot. So, yeah, that's right. Yeah. And I also will come to you to creditors as soon as you can with the single defined as default. Yep. Yep. That's wild. We really we are talking about to have another discovery document to submit and to resolve any dependents you know, the the new document will be you know, you know, refer you as a normative document but you shouldn't waiting for the new document, and you shouldn't you know, you referenced to the new document us Let me see. Right. Otherwise, you are still you're you're done. Yeah. Yeah. I think so. That seems to be a good proposal then, and that this is what I propose here. Maybe, if you have time, just quickly have a look at, issue 2. Okay. That was also one that was still open on the issues list. So the current draft had a somewhat somewhat of a simpler of Bruskey, this allows a pledge to be implemented simpler way so that it only gets 1 domain CA certificate on the registrar. So Bruce key normally allows any number. And now it's the idea like, okay, maybe simple device only, ask swarm That seems to be simpler, and and we didn't need, in that case, you don't need support for PKCS7 container format, which can contain multiple,"
  },
  {
    "startTime": "00:40:03",
    "text": "certificates, but this was not in the MSTLS or library. So that point, we thought, oh, let's go for one certificate only. That's easier. But this kind of hampers future developments, that we also identified, like 2 tier and 33 tier CAs that are shown in the picture. So with intermediate CA certificates, in cases where, also, for example, root cas gets, migrated to other root CAs, which which could happen. In these cases, and you don't want to do the bootstrap, the onboarding again for all the devices. If you wanna Yeah. Ideally, you wanna use the EST protocol to to allow these migrations easily. With that in mind, we thought, well, why not think about the solution that, avoids this PKCS7 container, and that also allows multiple certificates to be distributed So that's, proposed in an issue here. So you can see on the bottom, there's a formal proposal here. So it's to use co op, multi part which is an RFC defines format, format, Basically, it's a very simple format in seabor where you include multiple payloads in a response. Turn. So the first, is basically payload, seaboard payload number 60, which include just a number, which is the number of certificates that is available And the 287 is a single X509 certificates. Which is the first you get. So instead of asking for certificates and getting the first, you basically get a number and and diverse certificate, and N will tell you how many certificates there are in total. And you can use co op to get them, 1 by 1. That's the idea. This is a possible way, to do it. So you split up, if you have multiple of DCA search, you split it up, And that's where where we are now. So it's not yet been, text has not been written, but, I think Michael agreed to this proposal"
  },
  {
    "startTime": "00:42:03",
    "text": "Sounds good, but it would sound even better if there's anybody who can declare themselves to be better wait. Wait. Wait. On this to also say yes. So if you know anybody else who Yeah. Yeah. This is, like, I think some people who are not in this room Yep. Uh-huh. Awesome. Maybe, get get the confidence level. Yeah. So that will be good. Yeah. Think that's good next way. So this was the final issue, Okay. And we have, of course, the GitHub is open for issues and pool requests etcetera. I think Michael has some reviews still open for PRs, Oh, or at least 2, I can point you again to them. Okay. Okay. One of them about DNS SD, I think we can, we have to adapt that. Okay. Okay. Thank you very much. Thanks. A shift Yeah. Let let let's let's let's first to to the other stuff of the queue. Yeah. Well, because this this this this no. The no. No. This this one particularly depends on 8366 biz Right? So, it's Yeah. That was actually, yeah, that now built on that. That's one of the things we move the content, 3.66 base as well. Right. Thank you. K. Thank you. So I hope it's fine if I stay sitting here, then I can easier control and, two things. Okay. So, as already mentioned, what in the weekly, Brucey, meetings, we figured out is that, we'll kind of able to move all the documents forward fast. So the events discovery options for Bruce Guder have moved out of the ongoing working group draft ae, cloudconstraintbrowskivoucherprm. And 8995 didn't have a framework to support that. Who would have thought that we have that many"
  },
  {
    "startTime": "00:44:02",
    "text": "variations when we did 8, 9, 9, 5. So, that was another round, another live. And, trying to have a piecemeal in every, document didn't work out. So that's basically what this document proposals, and we consider that to be similar to splitting up risky work AENJWS voucher, which were, directly adopted when, that changes was done. Okay. So the example, why it's an issue, I think we we we heard that already a little Bruce. We cannot reuse the same service would announce itself as brewske registrar, then an RSC 899 only pledge would discover it and fail, and, sure, it could try through all the, registrars and maybe ultimately discover an ESE capable register if it's lucky, but it's really not a good design to, build and plan failure unless it's really a hard problem and you can't solve it easier. Right? And because we do have a lot simpler solutions, this is obviously not what we should do. So now we do new service names and for, a e, with CMP We'll also are trying to do this because we wanna get it out, fast the door, but it's not a general solution that will scale across you know, many different variations, because it would need introduce a new service name, not for every, you know, Bruce see, but for every combination of the different mechanisms that we have as soon as anybody once they have one of the combinations. Right? And what I'll say at some point in time, you know, the on the, INS Services registry would raise multiple eyebrows about that. Right? And even more importantly, for us, we couldn't make, Bruce Key proxies automatically support all the different variations, which is obviously something which we would very much like. So that we can deploy, implement bruceky proxies once and whatever a new variation is being done, they don't care, they they simply transparently supported."
  },
  {
    "startTime": "00:46:04",
    "text": "So the the scope is the variation for, pledges, proxies, discovering the registrars and the proxies and then extensions for future discovery case registrar agents discovering pledges, registrar maybe supporting Maza. Right? So, basically, we don't wanna find these things, but we wanna do it, specify in a way that that can be done. And then the automatic proxies and to do this all once and make it extensible by doing all the work through the registry. That we're introducing. So here are the type of variations that we figured out we have. So we have 3 types of different variations for which we have more than one, you know, variation value. Right? So, we can either, have registrar be in responder mode, or we can have the pledge in responder mode. So that's RRM or PRM. And that can be combined with any of the other options. So we can have the voucher in different formats. Right? We have CMS, which is Bruce key, We have Jose, which is, for constraint, and we've got Jose, which, you know, the PRM people fur as their default, right, but who comes along and says, Some other combination is not wanted by some other type of deployments in the future. And then we've got the third one, which are the enrollment protocols, right, EST, the good old one from 8995. The, CMP alternative, introduce through Burrowski ae, but obviously Burrowski ae also defines on how you would do it other enrollment protocols like, for example, the neanderthal of enrollment called set, which, you know, a company, love to that used for a long time, but there are others as well. So dotdotdot the, Bruce Gaye has a couple of other mentioned so ideally, we should be able to make discovery work for every combination and not write new drafts, as soon as somebody wants to do this discovery, of course,"
  },
  {
    "startTime": "00:48:03",
    "text": "there may be things to bring in a new value. Right, and make new values work, like, ZEP, or so, but, not for us, but only for the people who wanna bring in a new variation, the discovery mechanism, shouldn't change. And it also should be possible for different variants to deployed together as ships in the night, in the same networks, like a rescue registry, 8995 independent of another registragers doing CMP. Right? So you you don't wanna force any registrar to have to support multiple ones just because the discovery sucks. So then we have the different different discovery mechanism, variations. So the protocol that kind of, this draft currently explicitly considers graphs. Corelf and DNS. Or DNSSD rather. And I think one of the important things that had me worried was that I do think, in in a couple of other IETF efforts, about, you know, energy and and being, efficient with solutions, I very much fear that what we think now is a separate universe of itself constrained IoT that a lot of these things will be reused. Right? Some people start, developing only for constraint environments, and then they were using the same implementations even other environments. Right? So I wouldn't, want to guarantee that Core LF, as a discovery mechanisms, is not also used in non constrained environments. Right? I was actually looking through a a couple of RFCs, and I think I found some evidence that these mechanisms will also be used, for example, in HTTP contexts as as a discovery mechanism. Right? So we shouldn't say, oh, this discovery mechanism is only for this subset of Ruske variations that needs to be orthogonal. Right? All the different variations need to be possible to support through any of the, protocols So then the proxy functionalities proxies don't care of all this crappy stuff. All just part of the connection, what voucher format I have"
  },
  {
    "startTime": "00:50:00",
    "text": "what endpoints I'm using PRM or what crazy enrollment protocols proxy is just, you know, connecting a transport connection So it can be made, to do that for any variation. The main problem is the proxy also needs to forward whatever variation the registrar supports to the pledge so that the pledge can discover what variation is available. And if there are different registruss with different variations, then the proxy needs to open a separate socket for clients so that when a client connects, then it knows, oh, it connects to that socket. That is the socket for, let's say, the PRM variation. If one registered as PRM. Oh, it connects to a different socket on the see, oh, now I'm not going to the 8995 registrar. Right? So that is the logic that a proxy needs to have. It doesn't need to know what these variations are. Right? Text down here says, I've got variation, 12 supported I register a. I've got register b, which supports variation 23. One very simple scheme for the proxy is simply to open for every variation that it sees at least one register for one socket and then basically, whenever it gets a connection, from that socket, it can still select the 1 or multiple registrants, 1 of them, and connect that register. Right? So that's that's the logic that that a proxy would have. To support arbitrary, and it doesn't care what these variations are. It just needs to, you know, connect. So oops. Oh, yeah. Okay. So what What happened here? O g. There is a, Back in the slide, Wow. Wow. That is Yeah. That's that's that's that's crap. Easier Wow. That's, that was a PDF conversion. Issue. So let me quickly share my screen. And let's That shouldn't"
  },
  {
    "startTime": "00:52:01",
    "text": "2118 Yeah. That's crazy. Okay. What is it? Share screen. That's what's all I need to Okay. Stop that. Share screen. Accept. And then Is it window entire screen? Okay. Okay. Sorry for that. Okay. So, basically, they'll the the registry, for for Bluskey too too small. Okay. Both screen, Set it. Nope. This is it. Yep. Come on. Yep. There we go. Alright. Sorry for that. So 3 tables. The first table is defining contexts. Which is basically the different set of service names for which, you know, 1 in the same set of rules apply. So we have a brewski context, which is the A and join registrar and proxy, with TCP and the protocol, discovery protocol graphs. Protocol DNSSD Bruce registrar, Brusski proxy also with TCP. And if somebody comes and say, oh, we wanna support you know, a new discovery protocol well, then basically, you know, the expert for the table need to add an appropriate line for that. That. Likewise, and and, basically, all the variations that we have mode v format and enrollment. That I had in the prior slide. Right? So these different variation types, they're all applicable. So we're defining that, they're all supported in this context. So if later on, for example, somebody says, we now need to discover mass"
  },
  {
    "startTime": "00:54:03",
    "text": "or something similar to masses, we may have completely different variation types. So we would, introduce new variation types. But not applicable to this lag between pledge and registrar, but maybe only for masses. Right? So that's basically why the table has the variation types. The protocol and the service names and compresses them down to a simple context stream. So in CBroosky, then we would have all the same very types, also for grasp. Nothing changes here. It's easily under distinguished. Because it's always service name, with the protocol. So it's UDP. See Bruce is UDP. And Brusski is TCP. Right? DNSSD works the same way. And, right, at this point in time, we said, see Bruceky, Core LF, at some point in time, people may come and say, let's also add core LF. To the Bruce key table. One of the things I'm worried about but I'm not worried anymore when we have the table here. Right? Who whoever wants to start having that just kind of needs needs to get the ask to get this added to the table. Then the brewski pledge is the context for brewski PRM. All these things are applicable. Right now, we're only defining this for DNS SD. Bruce Kipletch with TCP So this is basically the different contexts we have. Second table, is then that we're defining what the different values mean. Right? So this CRM, this PRM, I did show this list textually in before. And this is the registry table that defines them. Right? So basically says Rrm is a value for the mode, it's usable in Bruskey and constrained Bruskey the reference is 8995 and this RFC And it's also the default for both brewski and constrained brewski. So if if nobody specifies an alternative like PRM or so, then you can assume that RNN is being used Right? And likewise, in Bruske, the voucher format,"
  },
  {
    "startTime": "00:56:02",
    "text": "CMS is the default. It's only the default in Bruski. I've only shown a small subset of this table in constrained. Of course, it is not CMS. But seaborne, which is the default for the voucher format. So because The defaults are different also have different table entries here Right? So this is basic kitty. It's it's a little bit complex, but it's easier to have complexity in the table than some were hidden in some options of some drafts that don't work together. Right? So, I mean, if I was implementing the thing, I'd rather work through a table than through a bunch of different documents where we're not even able to find all of them. Right? So And then ultimately, Michael came along and said, I don't want to, you know, have complex parsing because Once I only have the variation type choices, RM, PRM CMS, Jose, SAP, EST, those things, and I'm saying, okay. The following combination is supported. He said, please flatten the thing. Do, variations where every variation is exactly one choice for each of the different options. Right? So The default choice would be for Bruski if MRM with CMS and EST, that is what's defined in RFC 995. And we could and coat Yep. Yeah. Right. So we could encode that as as rmcmsest as a long string. But we're encoding it just as a default to be backward compatible. Right? So in the same way, were doing it for all the other things where, encoding a full string for example, F Jose, CMP is now a non default string that you can use. So we're running out of time. I've I've put some, hopefully, useful examples in I think so. Yes. Not here. Right. So I I put 2 samples there. I don't have the time to go through them. Right? So this is how simple graphs This is how complex the same stuff in DNS SD is, but"
  },
  {
    "startTime": "00:58:01",
    "text": "the document explains all that stuff so that people wanna understand how to do it and you see that in DNS SD, you have these text things and they also have one of the variation strings in there. So right. So some some details the pledge discovery, as I already mentioned, more details that we work through, like, in PRM, but backward compatible. And, yeah, so improved details in the slide from work that we've did on Monday. So I need to update 1 to, to fix those up. So, so as the co authors, I think, of of the Bruski draft, we would like to see this moved to working group status as it's outsourced from existing working group crafts. And then I think, one of the core sections that needs to be filled in is the core lf and coding where, Esco had had good proposals. That we need to pick one And that's it? Yeah. Well, I'm not going to call the adopting at this moment. Mostly more discussing, yeah, in the and, when, it gets better, we we'll call it Yeah? Yeah? And, we we don't slow down the previous work So No. I mean, the the point was this we wanted to have the flexibility of the discovery as part of the adopted work. So having flexible discovery across the different things was is already adopted work. We have moved it out into a different document. So it's not, and ask whether to adopt a new work in this case. So that's, near the end of this session. We have one more minute actually we have 2 more presentations, which come late, it's we have slides, online. So people can, you know, read it, and, we hope that all those care."
  },
  {
    "startTime": "01:00:00",
    "text": "You know, the discussing the meninists, then we'll discuss that in scope of this, animal working group or not. It's 14 proposal, of a lightweight grasp and another one is a certificate. Briskie, as well. So By the time we are down for today, just in time. And just hopefully see you or increase that. See you. Yeah. Right? But a fixed tiny Yeah. Okay. Kunjapanal Okay. See you Okay. So, I have to show me Oh, but I actually knew I had to put Sure. Slower"
  },
  {
    "startTime": "01:02:34",
    "text": "Okay."
  }
]
