[
  {
    "startTime": "00:00:06",
    "text": "hi to all the very timely people um we get going shortly I'll start typing up the uh the hedg do while we wait good day folks hi there hi Steve back to uh normal or whatever that means yeah ish so it's it's okay although last um uh week was uh bank holiday on Tuesday and actually did not join on Monday due to that it is not fun to be sick"
  },
  {
    "startTime": "00:02:10",
    "text": "I was just looking to what week it is that where Europe and us get off by the fall back of time it might be as early as next week we go on the the last Sunday of October and I know it's two weeks whatever that means uh [Music] uh November 5th Wait no that's something as far as like remember uh Europe changes uh fourth week in October after that something like that so it's would be like uh shortly before Halloween I guess the weekend before Halloween yes that makes sense so it's November it's always it's usually a week off so it's November 5th here in the US so we just we can either cancel the meetings that week because everybody's meetings Collide or just pick their favorite so the the problem with canceling those meetings is that um the first full week of November is 1118 oh so right um we need to make sure we're ready now we can have light meetings I think I've suggested that the the one immediately before which would be after Halloween probably should be cancelled because it'll just be administrative and making sure we press the right buttons um to get whatever drafts in uh but the one before Halloween I think we should still have because we need to make make sure"
  },
  {
    "startTime": "00:04:00",
    "text": "we we've sort of picked our issues and and all ready for 118 yeah good point um K ory I'm not enely sure if that sorry go ahead go ahead Han I'm not entirely sure that I have not started my my browser yet but I I'm not entirely sure if there is a uh meeting after before thef meeting is there I I believe not I think I think I I skipped that one because in any case it's it's the day of the final deadline for submitting drafts and things like that and it just didn't seem any point what no no no no um so uh why I'm asking this is because ITF starts on November something very early let me look at this so the the actual meeting starts November 6th that's a Monday and uh and uh October 13th that's before Halloween uh that's that's the last Monday in in already in the cutof phase so there is no no no space for an virtual interim after Halloween because we are literally starting with the extra meeting then that's my point yeah yeah agreed and I believe I believe that's how the uh the series is set up I'll double Che that Okay cool so five P everybody's had plenty of time um so as um hoped and promised we want to get a bit more uh focused and outcome oriented here um working on actual issues and PRS I think we had a lot of discussion around what what we want I think it became relatively evident what various people wanted to get out of um the structure structures and updates so"
  },
  {
    "startTime": "00:06:02",
    "text": "um if we take a look from the emails over the past just over a week um and the agenda item up on the hedg do now um we've got three PR that seem to be good ones to review um or's not here uh right now and so uh there was the the pr proposing to remove feeds all together um I think that spurred a very useful debate but it seems like from the balance of debate on that ticket um it didn't necessarily move us forward in and of itself uh but following on the heels of that we've got the 107 uh which I put up um and then 108 which AI put up which I think is a um is worth worth looking at which is to potentially change where we encode feeds uh and then there's the pull request that um everybody should have had time to look at by now from last week which is the one to add uh open API specification to the emulator that includes the ability to find things based on the feed therein um and just as a preamble before I open the floor to people commenting on the PRS and I I will share screen in a second um so the position we're in is that we have to have something reasonable to show at 118 and it makes sense for that to be an answer to the new problems raised at 117 and um there certainly seemed to be consensus back when um we we were looking at this carefully that the the biggest issue to solve coming out of 117 is that the the thing basically works we were able to prove the use case the"
  },
  {
    "startTime": "00:08:01",
    "text": "receipt structures individually work but that it was necessary for sort of applications to be able to use the skip building blocks to be able to somehow find search index and understand what they're looking at and so having a a handle on what a feed is and and how we link related claims together was the next important Focus so I think I think there's enough there now um to do that if we look at these PRS uh and in the spirit of rough consensus and running code if we can get um if we can get that sort of agreed and move on um then for 118 we'll be able to prove that and then the next challenge working with John Anderson and others um will'll actually be able to add the access control piece on at the front that he's been working on um as the stuff to do in the 18 hackathon and then sort of refine and correct that between 118 and 119 and once that's done I think we've got a really good solid um set of building blocks that we could go forward with so um yeah so with with that in mind uh I'm going to share my screen um well before I do that did anybody do a review of the OAS PR that's the one on the um Scrappy document uh and have thought and and thoughtful review to share before we just walk through things I'll take that as a no so I'm going to do things in a slightly different order then um I am going to share um not presentation view sorry John was that uh PR 31 um that's I think that's P request two on Scrappy let me just double check that oh I'm I'm I'm a different I'm sorry wrong wrong repo sorry um disregard my comment please all right my fault I'm pasted the one from the uh let"
  },
  {
    "startTime": "00:10:03",
    "text": "me fix that yeah uh but Ry uh Ry you put your hand up for a second you did you have something well I uh if I'm not I'll tell you what let me just wait and see what direction you're going I I did want to comment on your assertion that we had to have the um feed for um non repudiation uh uh that's the right term uh requirements I don't think that really is true uh so it's definitely not true for non-repudiation it is the only thing we have currently for non-e equivocation oh that's what I mean to say non equivocation um and I don't think that that's true either and and you know it doesn't when we get to that point I don't want to jump the gun okay well let's let's have a look um because I'm mostly just interested in in in moving the uh the work items forward and as much as anything else um trying to maintain a proper position here I was seeking not to really change anything but just to clarify the document uh in the direction of sort of decisions and agreements already made but but clean it up and I think there are a lot of places in the document where it could be much clearer um and and yeah we should spend time on that so hopefully let's get the the words and intent and the cleanup uh yeah decided slightly separately things go ahead and lead the meeting and I'll jump in when it seems right later thanks cool um so okay so here we go so um hopefully you can see on the screen and thank you Steve for taking the notes while I'm sharing um you can see the uh the the the the pr here so I"
  },
  {
    "startTime": "00:12:00",
    "text": "think possibly the the Preamble here is um longer than the the actual spec change um but that's sometimes necessary so um just trying to answer a few of the questions and things that have come up some of the things that have got us stuck in discussions over the last few weeks um there a question over whether we need a feed at all um but if we don't do that we can discuss Ray's point of non-e equivocation very specifically in a minute because I think it's potentially interesting but if we get rid of feeds Al together then there's nothing defined at all um that gives us a shared understanding of how to link related statements together um and that feels like a great shame because it's often um necessary to do that either to suede one um or to have different versions of things or to have completeness of some process and so if we're thinking about security claim can I ask one what do you mean there's no way to link could you expand on that comment uh well okay yeah um so good point we so I shouldn't use that kind of language we should be solving problems so the kinds of um problems that are captured by the use cases and have proven useful in um you know work that I've done I think work that others have done on different uh supply chain projects is to say that I have a thing in my hand I have some sort of provable claim I have a signed statement or whatever it might be I've got non-repudiation of that statement for for some variety of reasion who cares um but I want to know what else it's quote unquote related to because if I'm um if"
  },
  {
    "startTime": "00:14:01",
    "text": "I have a multi-party process which has multiple parties talking about multiple different steps in what is um effectively the same process or there's going to be a um a set of supply chain artifacts that contribute to a real world artifact at the end on which people rely all of those um statements and the real world activities that um are described by those statements go into me assessing the trust that I can have in this um this real world thing okay thank you a single certif if I got a single statement from that series knowing where to go to find the previous or next statement in the process or knowing where to go to get the latest or previous of a version of superseded statements is a very interesting on one face but important in many cases to me knowing that I'm operating correctly or making good upto-date decisions so that's the kind of space that it's looking at so when I said link actually meant find links uh yoges yeah so basically I would put it in a slightly uh different way what Jor already you said it's like logically grouping um statements made about an artifact from n number of entities and we need to have that kind of a architectural flexibility to group those related statements about an artifact in a meaningful way and I think that skid does Pro feed sorry feed does provide a meaningful way of doing that so this is great relevance from my point of view yeah that's all I wanted to say yeah great thanks your guys yeah um oh raise back"
  },
  {
    "startTime": "00:16:01",
    "text": "y going right yeah so I I did some reading on this um non- equivocation topic uh I'll I'll find the article that I found about it and after researching that I I think that there's no real way to guarantee to to to actually and to do that unless you the other party has a complete copy of of all of the statements um and because the the machine that is providing them could could fail to provide the prior statement even though if you have a feed and if you have if you say give me everything that you said about this it may not provide you know that prior statement correctly and so to guar to guarantee that that you got the correct you have to have the entire set of everything and check on the machine that's giving you the prior statements so for that failure mode of the machine breaking um that you know that so there there was different levels of non- equivocation um I I'll post that in the chat or whatever so you can read at least that one article but I do agree that something like feed is necessary and I think that feed is not enough we need to have you know like this whole set of of um Regular metadata that's used for for for querying databases basically of of content um and so yes is there is there um NE is it necessary to to get agreement on what these various things are yeah each one of them has to have the right name and what the values are and so forth has to be something that makes sense same with feed though and so we so I think that trying to come up with this term feed is"
  },
  {
    "startTime": "00:18:02",
    "text": "um I think it's confusing myself I think it' be better just to have the metadata the that describes whatever the entry is and then feeds if you will could be made by by searching over that metadata and providing it I don't see that that the feed actually adds anything to the goal of non-e equivocation um but I'm open to understanding that further I I'll post the article that I found so that people can read about it um and then make their you know judgment as to whether feed actually helps do that um I don't think it does but it does certainly help find the stuff that if you assume the machine is not failing and is and is not lying then it helps you find the stuff that um you could say well I'm assuming the machine is is working correctly I don't have to look at everything then this this this response respon that I have here which says these are all the prior responses of what this particular party said I think you actually have to go back to the entity that's making any claims and say give me all of the claims ever made by The Entity then boil that down to the ones that you're interested in by the metadata um The Entity itself in terms of the qualification using the the key structure and and um anchor of trusted to decide that you you addess that part that you know who that party is that's part of the non equivocation but that that's the only Pro problem I have and I think be better off not to to uh use this language about non equivocation here unless uh at least for me unless we have more um you know thorough foundation for why the feed is essential uh you say it's essential uh I don't think it actually adds anything and I don't think it's essential okay so let me let me post the thing that I found and then um that's"
  },
  {
    "startTime": "00:20:00",
    "text": "that's my comment but I'm all for feed like things um and I'm all for lots of metadata to find things within the skit structure okay thanks yeah cool thanks right I mean that that's a there's a lot of um a lot of things in there and I think the the the failure modes need to be documented the same as you know skit has provision for access controls but we don't talk about what happens when the access controls are circumvented or somebody steals your access token or something like that um th those kinds of things clearly need to be accommodated um so yeah we we could have all sorts of other other ways of of doing non-e equivocation and clearly if the transparency service doesn't give you um the full thing uh that's a that's an issue on the on the transparency service but for sure yeah it's a it's a deeper topic some way as you say having a way of finding all of those things um given pre-commitment on those things from the person you're relying on that's that's the essence of this so if we did it in a different way that would also work okay I I got I found the link and I'll post it in the chat right now thank you great thanks uh Steve still on still on the first paragraph uh yeah so uh just on the feed I think because Orie will make it later so unfortun be part but I I think the what I'm hearing is we like the ability to have a collection of statements about an artifact the question is whether there's a single property that is used to define it or it's up different issuers can make statements around different artifacts and they construct properties to do that so what I'm struggling a little bit with is how do we how do you have a consistent way to"
  },
  {
    "startTime": "00:22:01",
    "text": "define the collection of statements made by different issuers about a specific artifact that's the one that I'm I'm struggling with this conversation because I I I like the idea that a a feed is a string and if you want to use Gil glea or if you want to use you know a subject or you want to use you know any of the DNS any of the other properties we were talking about you could put it in there um and you can you know you can decide that is what you're doing and you have but it's a it's a pattern match exact string match for that ID and it's up to the issuer to decide what they the type they want to use if we're doing metadata which is good but that's the way you're supposed to construct a feed I don't know how two parties would know how to construct a feed over the same thing that's the part that I'm struggling with on this one Roy thanks Steve uh so interesting enough I thanks John for explaining your point I could see uses where that that will come in um to raise point I get that as well that's why I do believe there's a storage and a c system component to this over and above what we're talking for the notary here The Ledger uh policy configuration still resonates is the only way to solve that is with the feed structure I do believe that in a in raise sort of world there are going to be authoritative supplies of comments on existing prodct products like anti- mware or cve endpoints that may not come"
  },
  {
    "startTime": "00:24:03",
    "text": "to a specific um skid instance they may come as as well-known endpoints on the internet that you have to go and talk to um in which case and they still merg together and if skit instances are like DNS servers then your corporate firewall or your corporate instance can augment and do endorsements on products that nobody in the public see so it kind of gives a a slightly different view that that there's layers of this this sort of flow there is one question that we have to decide which is by convention do you always if you're you're going to write content on a on a product always have to use the same skid instance or you allowed to to send them multiples and and have C consumer stitch them together and I think that would be kind of weird I think either you're sending to multiple skin instances 100% consistently or you're sending to one and that is something that came that came out of Ray's comment that that kind of resonated with me the multiple instances um I I've been this is a kind of popular topic for me is the I me just said I think what you were saying is in the corporate or any environment where you have some private perspect private Network and you're making decisions around the software you're consuming you know companies do this all the time the I'm thinking the Steve I'm thinking the one of multiple instances would be in a physical supply chain where the US Customs believes only believes one set of notorized instant in um let's let's pick Ireland believe some"
  },
  {
    "startTime": "00:26:03",
    "text": "some other skin instance so you have to submit to both a European skid instance and an American one but you can't just pingpong between them you have to do 100% to all of them that that yeah I guess there's probably instances for Mo for each of them but what I'm getting I just don't know if we could limit to one not that there's one master one in the world but even one for a particular company so if I in the model that I'm considering is the way security companies work today right lots of companies put out software and they do enlist in audits to have third parties validate that software and gets published on that company's projects feed I'm using sorry feed is too loaded now uh endpoint so wherever you go to find that uh entities's information about the product they put third parties endorsements or criticisms about either way so that's a single feed a single skid instance model that you were talking about but we also have where so uh security companies publish information about other products on their endpoint so nist has theirs and you know various security companies have theirs and many of the security companies they're behind pay walls because that's their business model and that's all fine the question that I think about there is how can they all make statements using our terminology about the same artifact so if I want to go to pick your security favorite security company's um service what is the identifier that they can make a collection of statements because on Monday they might say it's perfectly fine and on Wednesday they discover there's a vulnerability and they publish on Wednesday that nope that software is no longer fine because log for J became a thing and a I've been thinking the feed is the way that various entities can"
  },
  {
    "startTime": "00:28:02",
    "text": "make statements around an artifact and I don't think it has to be limited to one skid instance the consumer has to decide which ones they trust right and that's that's a a decision that they make but it's the same decision entities make today I understand that I that's why I said it's either by convention that they have to submit 100% to on one product to one endpoint so people know where to go to look for cves or they have to be and it's by convention if they do to multiple they have to do 100% for each product goes to 100% of of so you can do this the stitching together it's when they start Ping ponging I start trying to figure out how the heck would they know where to go looking for cves or Vex statements or whatever that become super painful if you allow them to ping pong and once again it's by convention and I don't think we have it codified anywhere it is the notion um like what would be helpful I guess in the case if you had multiple skit instances with and people are trying to uh find everything regarding that product um I think that makes sense that we're going to have to think of that because like you said there there could be in a given supply chain there could be multiple skit instances along the way and um under the control of different different entities that um you know need to control it and then then we would have to you know this this is this is a difficult uh question here how do we uh and have people find um across those skit instances this the same you know product as it could rolls through um H well the product is is is"
  },
  {
    "startTime": "00:30:01",
    "text": "identified by the esom identity identifier so that has to be consistent otherwise it doesn't work so I think I'm not too concerned about that the problem here is is knowing who to go look at becomes problematic if you allow it to float right okay yeah so who to look at and then all right um thank you for for opening up that dark pit of for me sorry sorry R your guess so your guess let's let's take you and then we're yeah 25 minutes in so hopefully um we'll cover the rest of the pr and and come back to whether that closes off the remaining things so yogos yeah uh I was wondering just while while Ray was discussing ing this um there are two two issues as Roy mentioned what if the same the statements for a particular artifact is across multiple skit instances how do we utilize that information and then query meaningfully that's one problem the other problem is there are n number of uh statement issuers for a particular artifact how do they coordinate among themselves what is the what is the right feed to use and and what's a uniform mechanism to pull for look for data Associated to a statement so there are two distinct and different Pro orthogonal problems for for the latter problem I was thinking maybe with the artifact If U if bare minimum information is supplied which is kind of whiches the end users to construct the"
  },
  {
    "startTime": "00:32:01",
    "text": "feed or something like that then anyone who is the consumer of the artifact knows uh how to get Associated statements from the registry or whoever is allowed to get the fetched data from the registry has the knowledge to how to utilize the feed or how to construct a query and get the data I was thinking in that direction so we can associate particular feed mechanism to an artifact and we cannot stipulate that in the spec but we can give an example of that in in our guidance documents or wherever we are publishing examples or the apia documents or stuff like that yeah and that that definitely sounds like a profile and a lot of a lot of what we've discussed today um sounds more like profile on top of a very basic spec um and the the the question to be distilled here is whether the basic spec is usable for those for those profiles um so I think the a really useful way of moving forwards with with this would be to add to the use cases document because use cases doesn't have to be as bold as tracking vulnerabilities in software it can be I've got a thing in my hand and I need to check that it's valid versus invalid or I've got a thing in my hands and I want to check that it's the latest one versus I have no idea where in the world this has been attested and I need to search the entire global internet to find attestations um you those are very different use cases that we um uh Better or Worse serve with the current state of the spec so let's let's make sure if we if we have any um particularly if we have objections or strong feelings on things let make sure the the use cases document or or the"
  },
  {
    "startTime": "00:34:00",
    "text": "preamble to the architecture actually specifies that we're actually trying to solve that problem and then we can solve there yeah I think uh best you described I fully agree that it is like a kind of a profile specific parameter so I I kind of think that we should make the feed as one base type and make the type extensible in cddl so that the profiles can extend it to the way they want to use it right and keep that flexibility in there and not talk much of how it should be used but keep it at a very high level so that profiles can connect to it and expand it the way they want to would be the best um middle term agreement for this deadlock situation cool thank you um good so uh if I with with that sort of spirit in mind um this hopefully is not controversial there was a suggestion uh on different PR which as I mentioned had a lot of very useful discussion on it but I think the discussion was again very um you know two-sided whatever um not really coming to a conclusion but it did did raise an interesting question that the documentation on registration info was not particularly good or clear um and it's as currently specified and as intended by the original authors of the spec registration info is for something different so while I wouldn't say we can't or or would forbid transparency services from indexing on things that's in there if they want to um this doesn't feel like the right place to put um a thing that allows us to group statements about artifacts which U again we seem to be coming to the the group conclusion that we want to do that somehow uh so a person some clarity in there um and then um do we need to have"
  },
  {
    "startTime": "00:36:04",
    "text": "a big first order structure for the feeds um I think this was a a question that really arose from 117 this was the wording that that came out of 117 but I think we keep going round it and um my conclusion certainly was that no in order to have a decent Baseline specification um we we don't need to have a structure just the uh the single simple match will do um and indeed if if we decide because we're about to look at the other PR which which suggests a different place for this concept but if we decide um to to merge this in on the grounds that we want to have a concept or set of Concepts that can be profiled to provide um this this capability to to link things together and find the things that link together um then there's no necessity for it to be heavily structured or or or um specified so that was the um the intent uh yeah before I go into the actual changes Roy go ahead so the only problem we've we were trying to solve and which I still don't see without either their feed or some other thing yeah is to know when identity providers are reconfigured for The Ledger to to accept and that problem Still Remains if you argue that this this we want to simplify and not deal with that then the whole discussion of having feeds and all the rest of it can be postponed until to the future but that that is the one remaining problem that I continue to see is I don't know when some administrator goes off and enables a a route that nobody else trusts yeah yeah so so there's a couple of a couple of thoughts on that I know this is well I say I know I think I believe"
  },
  {
    "startTime": "00:38:02",
    "text": "that this um type of conversation has led to conflating registration info and and access control and feed before um so I I guess my my thought on that is that we need to solve that separately so either um we could have a convention or a necessity possibly but I would suggest a convention um to include changes in visibility and access configuration in the feed uh or rather as a transparent statement with the same feed ID uh and that's you know I I have some interest in that because that's the way my my product does it um but I'm not wedded to it it's just a an example of a thing that works well is that the um the the trans the the complete set of transparent statements includes every a time uh there's a substantive change to the access controls um uh and the other the other thought would be as well or instead of that we still need to sort out um this thorny issue of two-way transparent uh registration policies and I I would like to move that part of the spec forward as well um but just doing everything all at the same time is really hard so my My Hope and belief is that sorting out this bit with the grouping can be done independently and and move the work item forward and doesn't stop us from doing the thing you mentioned um it just makes the problem set a bit smaller but that that that's sort of my my thoughts on on why I'm trying to drive the work in in this order and if that's wrong of course we'd need to revisit it yeah uh John one one notice I I one I"
  },
  {
    "startTime": "00:40:01",
    "text": "was reviewing your poll request while we were discussing and one place I have a question maybe you can answer later on poll request is you removed uh artifacts removed software artifacts and changed it to generic artifacts in the document if I'm not mistaken some places in in two places where it was redundant yes okay so it's still in about 18 other places but the the places where it was written where I removed it it didn't seem to Mak sense okay because I was lit just concerned that because our initial Charter is specifically focused on software supply chain not generic supply chain so we should remember that before making such kind of change but I think you have care if you review the whole document um there there's no substantive change there it just it's kind of conceptually wrong um okay suggest that every every artifact in a software supply chain is a software artifact okay okay makes sense thank you another aspect quickly is uh while I was reviewing the architecture I found a great ambiguity probably you touched on this subject is the registration info coming from the issuer what he is issuing in that and then the registration policy coming from the transparency service so I think we need a bit of work to do in that aspect of clarification and maybe probably change the words or change uh the narrative in a way that is not confusing between the clash of the direction and the content of the data between registration info and the registration policy which are two different things I suppose if I understand correctly uh yes there's a ton of work to do there um it's a separate topic so yeah it's it's super unclear right now and I like to get that fixed but I you we just we need to move along uh at a in a tangible way with small problems we can actually solve so um yeah yeah I will raise an issue on this if you don't have if you don't we might just have a quick look because we might do we attempted to tackle it"
  },
  {
    "startTime": "00:42:00",
    "text": "before but then I think we just decided Cedric just sort of deleted it and we said we' come back to just have a quick look and otherwise we raise an issue cool thank you so much yeah cheers over to you uh well right actually yep okay well um I think actually this um yogus just kind of mentioned what I had in mind and that is it seems like it'll be helpful to split reg info into two parts one is metadata that is about the artifact that is probably structured in such a way that that they're you know with common names and stuff that are used in the industry um for the attributes and then the the other part is attributes about the registration policy and stuff that that has arisen or is is part of the actual you know submission to the to the skit registry and not metadata about the artifact itself but but about the actual registration process or policies and and I think that would solve your um anguish over having metadata type attributes in reg info when that that seems like a proper type of Anguish to have and yet provides a place for th that other metadata and then it broaches the question is that other metadata that same thing as is what we're considering to be the feed uh that's a question I'm not sure I understand but feed seems like as I'm getting to understand now may be still necessary so so that there can be some kind of a name that will propagate amongst any number of places that it could would be used that that would uh consolidate um allow people to track track individual art uh you know sets of artifacts okay that's my input thanks yeah cool so yeah and A's or's here now"
  },
  {
    "startTime": "00:44:03",
    "text": "um I appreciate you've been here quite a long time by now Ari so um taking all that together what I would like to suggest is um so yeah right absolutely and and I think a couple of other people said it it has to be possible to sort of decorate these things and it has to be possible for transparency services to offer degree of you know metadata finding retrieval caching all sorts of other stuff so uh we certainly don't want to stop that from happening we but we don't have to actively specify how to do those things or what those things are so simply having a dictionary where you can throw metadata which is not necessarily secure metadata about the statement that you're making or the the the artifact that it's about um yeah I like that idea too I think it's a great idea and I don't think think we've prevented that um but related to that is this second uh PR that we wanted to talk about which [Music] was um this one which is the this the later of of of or's feed of or's um contributions on it because what I would like to suggest is that um people take a proper look and look favorably on the word content and the Tidy Up and the clarity that comes from uh my PR 107 to say we want to have this concept that joins things together um and and get that merged because I do feel like the words are better than the words that were there before and then consider this um submission from AI that that shows um actually we don't necessarily need to have a special separate named thing to group them together because we can just use existing cwt claim elements um so at this point I'd like to"
  },
  {
    "startTime": "00:46:02",
    "text": "if you're ready ory um hand over to you to to explain how that would work um and whether we want to sort of merge 107 and 108 or whether we want to do a bit of work or maybe come up with a combined uh PR that does both I think AJ's Tech technically in front of me so maybeor I didn't see yeah sorry I'm screen sharing I didn't see the queue um yeah AJ you hear me yep do I remove myself from the queue and then bring it up later I can take you out if you like no no bring up now we we we're running short on time early Junior to this the edits as standing in 107 even though I was President 117 will pretend that I was paying 100% attention I was completely of things that were being discussed this clarifies a lot of stuff that was unclear to me with better wording so um I have one outstanding question but I thought it was helpful and I I don't know if I can approve or not but beyond that clarification and state sticking to the objective of the poll request and what it's intending to do it clarifies what's intended for me enough that I understood it better at the end so I don't know what else beyond that I'm done great thanks AJ um good so well that that's that's positive so um yeah so so that that can stand and then um I need to change the tab I'm sharing um and yeah so what would be interesting AI um is to look at two aspects of this so one is whether we can replace the feed element with a cwt claim um I'm reasonably convinced we probably can that makes sense but the other sort of slightly broader thing to think about then is whether we can generally add custom"
  },
  {
    "startTime": "00:48:01",
    "text": "claims to this cozy webt to um uh to also include a kind of arbitrary list of stuff that skit doesn't understand but um the application uses that our members here do so over you can either screen share or I'm happy to scroll for you um yeah if you could uh just scroll as needed that' be awesome so basically I was reading um your your poll request which clarifies the sort of intention behind feed and I want to Echo the something I think you said earlier I think feed has become very conflated between the ACT uh you the way that the issuer uses feed when they're trying to discuss their sign statement that they're preparing and then the way that the transparency service might expose feed as a something that you could subscribe something that you could subscribe to there feed gets used in both of those cases and I do still think it's highly problematic to use the same language uh in both of those scenarios so if we if it is possible I would like to preserve the behavior that we have in the document but find uh language that distinguishes between the role the transparency service plays and the role the issuer place and this poll request here gives us a path starting to think uh about the issuer side of this so you know recall that the issuer makes their uh their uh statement a sign detecting it with the digital signature and in the process of doing that the issuer uh fills out the protected header which is a metadata section with with Integrity protection and the issuer can put details into that metad data section that are going to be relevant to the transparency service the transparency"
  },
  {
    "startTime": "00:50:00",
    "text": "service is going to be using them uh as you know looking at that protected header to make uh decisions regarding the registration policy and so uh the reg and so uh the registration header parameter is one section of the protected header that contains transparency service specific uh claims but there's another header parameter that you could include um called the cwt claims uh header and that's a you know very new almost RFC so it's not technically the tag 13 in the protected header is not yet an RFC but what it does is it allows for us to use allows for us to use claims that are really valuable uh in context of skit um so I don't know if so I don't know if you can scroll if you could actually pull up the Ian registry which is if you go to the files changed and you look at the there it is online 670 the aana cwt registry uh link yes that one so this is a registry that's maintained by Ayana and registry entries here are updated by specifications you can see has designated experts in fact Hest is one of them so he'll be very familiar with the this familiar with the this registry the point that I'd like to make is we have in our current docu architecture document we have the proposal to add the issuer as uh integer tag to the protected header um and it's like a 300 something 341 or 342 or something like that like tag but we don't actually need that we could use this tag two or tag it's tag one in this registry is the issuer tag so it's already so it's already the can go in the protected header is already defined here it's ISS it's"
  },
  {
    "startTime": "00:52:01",
    "text": "issuer it's a text string it's a text string and it's one so we can do that and then there's this subject parameter here and as far as I can tell every use of the word feed when we're discussing what the issuer is doing is in 100% consistent with the way that the subject is used in cwt so the subject is the entity about which the issuer is making claims and in in the context of skit we've been saying sentences like sentences like the feed identifier for the artifact about which the statements are being made so these are very close sentences um subject is a text string feed is a text string you can add you know typing information into the subject by using structured identifier in the text string that would be things like a UR or URL but it's not required and that's true of feed as well um so basically you're not losing any of the normative behavior that normative behavior that we have to you sort of replace the word feed with subject you could keep the word keep the word feed asso and say the issuer makes statements about a subject the subject is an identifier for the artifact about which these statements are being made and when you ask a transparency service for information regarding a particular subject that is used by the transparency service to prepare a feed so I'm not changing any part of our architecture I'm just giving us some concrete some concrete code points without us having to Define them in our document so we can reuse this registry and preserve a 100% of the behavior that we have in the document today with no changes um it's"
  },
  {
    "startTime": "00:54:00",
    "text": "also slightly smaller so I think this is you know tag 13 is small and then tag one is small and there's other parameters in this cwt claims a registry that might be relevant to other skit use cases so you know I I would be cautious sort of just sort of making the other entries here but you can see that there are actually a lot of rats related registered claim Nam claim names that could over use cases you know in the future you might have a transparency service that's evaluating the hardware oemid as part of its registration policy and in this case like you'd have a very clear uh layering between cozy cwt claims and protected headers and skit um so one other point I'd make is that uh a lot of folks are concerned about tokens um like whether um like whether it's Jason web tokens for some reason token uh causes people to get get you know concerned um and I confirmed with the authors of the RFC in question that you can use this cwt claims in a protected header for something that has a payload content type of type of XML or Json or you know anything so you can use this structure while securing arbitrary content types that's important for skit that's important for skit because we our supply chain ecosystem has a lot of different content types we don't want to get into the to the business of like you know at that layer we want to secure the content types that are happening that we can see and we can do that while also making use of these registered claim names in the saana registry so the pr all the that it really does is just show you how to do that in cddl hopefully this long explanation has"
  },
  {
    "startTime": "00:56:00",
    "text": "been helpful but I'm happy to answer any questions folks have great thanks so I see AJ in the queue thank you AI or very vague and not and not helpful and that's being very sarcastic um I guess my main question is how do we know that the top okay so we're going to use the concept of a subject being the source of the the thing people wish should discuss in a feed how do we know it's always going to be one identifier that everyone agrees to all the time um with a consistent like a exactly one identifier as the quote unquote subject and how do we we know that people will not be talking about a range of them like as a group of them because I won't name our favorite one from a certain us governmental institution but having fuzzy top topics or subjects of topics whether we use this feed um metaphor or not is usually like one of the biggest challenges in dealing with this kind of information yeah yeah I uh completely agree with what you're saying Steve and I had a really long uh chat about this on Friday and I was I was yelling at him on the call because the text string feed has no structure to it casing differences in the identifier for the artifact will cause different groups to form so if your goal is how do I how do I get everyone to identify you know some sof software release at a specific version consist consistently enter string values in is like not going to help you it's actually it's actually"
  },
  {
    "startTime": "00:58:00",
    "text": "going to make that problem worse so what you'd like hey transparency service I am try I am trying to talk software vendor product you identify that software vendor product so that when I give you signed statement when I give you signed statements my sence statements go in the right bucket there is a discovery issue with the index that you build on the protected the index that you bu build on the protected needs to Collision problem you're looking for collisions you want to cause collisions but you won't be able to cause collisions in the transparency service unless the transparency service helps you cause those collisions by exposing some categories or topics to categories or topics to use um yeah so so I I think you have out talking about feed is a concept that the the transparency service service exposes as opposed to talking about registered protected headers that are the structure the structure that issuers were artifacts I mean um I'm slightly I mean I understood what or is where or is coming from but I I'm slightly nervous in prescribing a particular solution as to how one should structure their statements within the transparency service or how the transparency service should identify internally how the statement should be structured so that a meaningful query can be done we can examplify it in a profile that's a fine thing but we cannot prescribe that in the base architecture as to how one should prepare these strings or whatever metadata needs to be aligned in this particular way to construct a feed or whatever you want to to call it through the header header parameters I'm I think that we don't want to kind of"
  },
  {
    "startTime": "01:00:00",
    "text": "restrict uh the supply chain to use only a particular way of uh preparing the queries and stuff like that thank you okay so let's um so Ray I I'll give you a point but just since we're out of time um let's everybody if you got an opinion uh make those opinions on the PRS please uh yeah soon um right you can have your have your time if you want to no I I'm fine I I just think this is great I think I like subject but I do agree that naming things and with consistent names is is U never going to be solved completely and yeah I I don't think this um I don't think A's thing makes it any better or worse than with the explicit feed entry that's still it's still an issue um so yeah good okay thanks so yeah everybody if we can get um it was good discussion last week if we can keep the discussion going and push the PRS forward uh so we can commit some of these changes that' be fantastic uh and see you all online"
  }
]
