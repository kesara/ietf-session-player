[
  {
    "startTime": "00:00:04",
    "text": "foreign okay so good afternoon welcome to the open pgp working group uh I'm Stephen Farrell my co-chair because he is a large head to my left on the screen um and we have 90 minutes today so I don't think we're short of time but we'll see how the discussion runs uh so tkg you're you're you have the slides open I guess you want to advance one sure thank you uh so this is the note well go ahead do you wanna do you want to do it Stephen I can just run the slides yeah you you've got the button so you go ahead okay uh this is the note well we're on day two hopefully you've already seen the Noel uh just covers what uh to do here within the IDF a couple more slides here breaking that down a bit further um so we have hybrid meeting tips here uh please make sure if you're in the room you're connected to the meadeco light client um link from data tracker agenda if you are not in the room um there's just some basic fits there on how to avoid feedback and excessive bandwidth consumption um thanks for being responsible with the masks there um and one more slide here just a reminder of the code of conduct we are aiming for courteous discussion um please communicate slowly limit the use of slang and jargon I might run a Fallout of some of those things myself feel free to encourage me to correct if I do um and we argue through a reason not through intimidation or personal attack and we're aiming for solutions that work"
  },
  {
    "startTime": "00:02:00",
    "text": "for the whole internet ecosystem not just for one particular vendor um or one particular Tech stack um and we are all here to contribute to the ongoing work here so this is the basic agenda that we have coming up um but it's a series of discussions of points that have been raised during working group last call we've been in work group last call for several months we're now on draft of seven um of the cryptographic refresh which is the only chartered work item so the main point of the meeting here today is to review the points that have been raised uh in the working group last call um and uh if we happen to have some time at the end uh Aaron Worcester is offered to present some material on post Quantum potential for uh open pgp which would need to be done as a recharger eventually so you know if we have time in the session today where we've covered the issues of the last call and people are committed to reviewing um we can get into some of the other pieces anybody want to try to push the agenda around a little bit here don't see anybody attempting to bash the agenda in the room for the recording also we have no takers Aaron and Daniel and Rick van Wright have agreed to help we're covered for no takers and things thank you very much tuna takers okay so yeah so Pikachu is going to run this because he prepared the slides and actually knows it much better than I do anyway so uh so he's going to run these issues um again for the no takers if you can kind of take note of any actions or conclusions that's the main thing yep um so uh the Baseline just to make sure everybody's on the same page we had some discussion um uh on the list uh we believe that the"
  },
  {
    "startTime": "00:04:01",
    "text": "crypto refresh draft zero seven is going to be the basis for a working group work uh going forward our goal is to avoid we did decide on the list that there seemed to be a rough consensus towards trying to avoid conflicts with an alternate drafts draft cook where it's possible um that will be on the agenda here today uh but what we also need uh to confirm for working group last call is we need reviews um as you can see from the slides here several uh interesting and useful topics have been raised in working group last call but those are not the same thing as a in-depth review of what is basically a pretty lengthy document so I do encourage you if you have an opportunity to read through the document give a review even if the review says advert this documented it looks good or even better I've implemented it those are great reviews to have but we need vocal responses reviews on list even from people who have been contributing to the document actively if you can speak up with a review that would be really important if we can't get this out the door and straps out the door then we don't get to move on to any of the future work that I know some people in the group have been interested in so that represents the state of play I hope that that matches what everyone else has seen I don't think there's anything new here just want to make sure that everybody here is aware of where we're at uh so so if you go back on so on the can I just check uh how many people have or how many people would consider they're they're pretty familiar with the latest draft or the previous one so I see three hands up in the room and one remote and that kind of seems like not really enough I have to say so so yeah so I'm asking how many people would"
  },
  {
    "startTime": "00:06:00",
    "text": "consider they're pretty familiar with draft six or draft seven of crypto refresh and we had three hands in the room one was the editor another one was a member of the design team and a coloring and a co-chair um so that that seems a little bit short um would anybody be willing to kind of volunteer to do a review of the documents in the next number of weeks so uh and can the note takers get their names so Rick is one of the note takers of volunteered himself so at the back of the room I didn't I didn't great and did you say yes I thought you have put your hand up no you're not gonna okay so we have and Robin is on Robin is volunteering as well Robin is okay so we did I didn't scroll down okay so so that's good and again if we can get those in in the next couple of weeks that would be fantastic and I think he's going to put his name into Jabber so once I see it I fold it out and if it doesn't appear I'll go grab them great okay yeah it'd be great to have those videos and again if anybody has a chance to also just I mean I know some people are like you've implemented it but I don't know if the last time you read the whole thing oh yeah okay so add yourself to the list of victims please um and Jonathan Hamill is the jump the other person volunteers Jonathan so thank you Jonathan yeah thank you for the reviewers it's appreciated does anybody else want to step off the cliff while we're all there everyone else is doing it I I don't see anyone just here okay but"
  },
  {
    "startTime": "00:08:02",
    "text": "thanks it's important that we get those because you know stuff gets missed otherwise though okay sorry go ahead no thank you that's uh this is an important part of the process here um so this is the the um one of the largest concerns that was raised on the list uh during the most recent uh discussion which is that there is this competing draft uh called draftkook um which has a little bit of a confusing name RFC 4880 bits even though it's an individual draft it's unlikely to actually be um coordinated Abyss but it does try to use some of the similar code points and version numbers to what we are using and they're you know the honest discussion was about whether or not um it's possible for us to safely avoid conflicts with that draft since it doesn't look like that draft is going to try particularly hard to avoid conflicts with uh the crypto refresh um so I went through the document and did a bit of a review to look for you know where are the places where there are actual conflicts in terms of code points um and uh the current the slide represent here represents my understanding of the current situation from the best that I could understand of what's missing the two main things are the new public key format it's called version five in both drafts and it yet it behaves slightly differently exactly differently and the new signature format is called version five in both drafts and it also behaves slightly differently um so one possible way that has been proposed on list uh to uh deconflict is to Simply move the crypto refresh draft to call those things V6 um and that's an option um so it would be interesting to hear from folks who uh have an opinion on"
  },
  {
    "startTime": "00:10:02",
    "text": "that I will note in the right hand column on the side here um the design team already did a fair amount of work to ensure that there is no conflict on other parts of the code points um and there's a there's a list on the side here feel free to ask for clarifications I don't know that I need to read through all of the details but there are some subtle differences between the two drafts that already do not conflict because of the work the design team already did so it's mainly a key and signature versions that we need to change in my understanding of the two documents to avoid a full conflict so I wonder whether anybody here um I got two questions for the room one is did this review miss anything um and obviously we don't have to be conclusive here and two is if this is the only thing or if this is a work group interested in making this kind of a change to avoid a conflict Paul go ahead hi I'm Paul Walker speaking as an individual um from a process point I find it a little strange that the working group that basically sort of owns the Ayana Registries now has to see if it can use its own Ariana Registries because some of the squatting on the numbers so from a process point of view I think we should just continue going on using our registry numbers and if anyone is squatting on them then it's their problem right they should not do that they should use private use numbers or they should uh pick experimental numbers or like like the the fact that that someone just unilaterally decides to use their power of deployment to sort of interfere with our Registries I think is from a from a more principled point of view I would just say we should ignore that I agree that that could cause operational issues"
  },
  {
    "startTime": "00:12:06",
    "text": "go ahead Aaron um also I think that the points that were already conflicted were already conflicted because there was a wide deployment or at least a deployment of these in the wild while I think signature version 5 is not yet so I understand using the C by dv2 but I would not justify now switching already because someone threatens let's say it like this yeah secure uh Daniel I believe you're next thank you yes so Daniel Heavens proton um I I do want to note that uh Werner said at some point that well he seemed open to still changing um key version 5 and signature version five since yeah as Aaron noted it's not yet deployed although I worry that well I I'm not sure if uh he would be open to using it in the way that the crypto refresh defines and yeah it would be nice if he were here in my opinion um so that we could ask that question um however I I do worry that if um we deploy version 5 and um and he deploys version five in a way that it's currently implemented that will have some incompatibilities and that I mean the worst case scenario I see is that we'll end up with try catches everywhere to you know parse one way and then if it fails Parts the other way I I would prefer to avoid that if at all possible so even though I agree with the the comments that um we shouldn't necessarily um throw our hands up in here and say okay"
  },
  {
    "startTime": "00:14:01",
    "text": "let's go with version six but um that might still be be preferable to that outcome although I mean Devil's Advocate would say that maybe if if werners really um um contrary and then later he would deploy some other version 6 which is a continuation of his current version 5 and then we're in an even bigger mess although I I would I mean that would be you know really um if version 6 is by then already deployed I would really doubt uh that but um yeah it's something to consider so two two points um I guess you know we can't really speculate as the the motivation or action of somebody who's not present so I don't think there's that much more than that the second point is that I mean we you know in the discussion as to whether to go forward crypto refresh I think there was a pretty clear consensus to go forward with crypto refresh but also to avoid conflict where feasible I mean I think that was a pretty clear uh outcome of that discussion I think so while you know we there might be some gritted teeth um but I think that that's essentially what the I think the conclusion of that fairly dented discussion was so I guess here it seems quite obvious that the avoiding conflict is feasible but it's not 100 certain whether there's conflict yet right it seems uh version 5 of werner's draft is not deployed yet as far as I know so I guess the question is whether we should anticipate that conflict or not but again I think all we have to go on is the text that he submitted in an individual draft okay as a version five right all right we're gonna take this but again we do"
  },
  {
    "startTime": "00:16:01",
    "text": "what the working group wants but it's it's a tricky and undesirable situation but uh dealing with it is what we're here for so do you want to go ahead and make a proposal or your music no you we're not getting your audio to Kitty because that's because I was muted sorry about that so yeah so I will frame a conquer proposal I'm not even sure whether I'm in favor of it or not um but the conquer proposal would be to move the current draft from V5 to V6 or Keys signatures one pass signatures and pkes-k right so technically we don't need to move one pass signatures and PK esk because those are already decompleted but the idea is if we just announced them all as version six all at once the draft is sort of more coherently seen as OPP version 6. um we could also if we wanted to move this SCI PD V2 to V6 if we wanted everything to be V6 but I'm proposing the proposal I'm making here is that we leave sapd32 sv2 and we just change the other four version numbers to V6 in the draft so if that is one option that we could do um I'm kind of tempted to do a show of hands here whether people want to do that or actively do not want to do that um yeah so well just as a suggestion Could you type that into the chat and let people digest it for a moment and but doing that now great so so keep an eye on the chat"
  },
  {
    "startTime": "00:18:06",
    "text": "and even if you need a moment to digest it if you want to get in on the mic line then please feel free to join the queue right now and I guess we will at some point ask if people want to proceed along that route depending on discussion between now and then okay so so BK I'll just read it out in case somebody's out of the chat so bkg's proposal to see what people want to do is to say move the version number from V5 to V6 for key signature Ops and PK esk and now is the time to jump in the mic line if you have if you want to say yes you want to say no do you want to say I don't know I don't have enough information those are all things that that would be valid to hear okay uh pass begins so just one note down so I don't want to end up in a match about who has the latest newest shiniest version right because if a response could be that then the the persons from version 5 will bump to version eight or something so that they are seen as the latest version then we're going to jump this game in a number of iterations sir so so I mean it kind of depends a little bit on if we can get word of saying like this person is going to stick with version five or not like so for us to make any decision beforehand seems a bit silly to me so I I guess again I I think I would disagree with you Paul on the basis that we seem to have it demonstrated uh evidence that we're not going to get that information"
  },
  {
    "startTime": "00:20:01",
    "text": "we could try you know certainly after after the when we when we're posting the minutes to this we could certainly try to see if there's anything any new information to be had I suspect the answer will be there won't be anything concrete and there is information in the form of a draft of draft Pro that says here's what we plan to do for version what we will do for version five um I agree with with Paul with Paula like version number escalation is a silly silly outcome I'm not proposing B6 because it's bigger than E5 I'm closing it because it's different foreign I wonder whether it's worth doing a show of hands here um and I think we were just at the cost of an ID interrupt so let's let's take that one first hi everyone Carnegie Mellon University not as A.D I wanted to just to kind of ask we're worried about this version escalation do we care we specified six so someone else says seven if we got to do something else we'll do it so we have a lower version number I mean can someone explain why that's a problem other than I guess this idea of semantic versioning higher is newer I'm not aware of a concrete problem I mean it depends on how we play the game right I mean there there are 256 versions We have a one octet version number in multiple places here so I guess it could get Super Silly there but um I don't think anyone is proposing to do that level of escalation yeah yeah I mean there's certainly a code Point space to manage the reason why I make that comment is just I'm fresh off you know out of the quick working group they are defining quick V2 who's I whose version number is not V2 but that's the name of the draft and"
  },
  {
    "startTime": "00:22:00",
    "text": "from talking with them there's no guarantee in the future that the the how big or small the number is you know indicates any lineage or kind of sequence I wonder whether we can just do something like that to make progress yes so I I I don't think we have a huge blocker here um you know it is the case that it's easier for quick to to upgrade versions than for a store and forward thing but uh but yeah I don't think it's a huge deal so so okay I don't see other people joining the mic line so should we try the poll tool and see what if people think dkg's suggestion has typed into the chat is worth pursuing I'm gonna do that now oh he's done it already so in that case raise your hand or click the raise hand button if you agree with the proposal that tkg floated or how to handle versions and click the do not raise hand button if you disagree with that proposal and don't click anything if you are unsure or don't feel like you you want to make the decision I'll ask that question after and yes you can change it if you change your mind if the the totals will change okay so that seems to have stabilized at about 12 at for the record at 12 13 raised hands zero do not raise hands which is pretty clear and is at itf14 we had a bunch of polls and we had similar kind of numbers for some of the media discussions so it kind of indicates there's something sane would anybody like to kind of speak to not being ready to kind of decide that or needing more information or other things that the polo tool doesn't capture I mean so just the only thing um as I said as I've as far as I understood Werner was still open to"
  },
  {
    "startTime": "00:24:02",
    "text": "changing things um I think if um if we can reach out and ask if Werner would be okay with changing um his definition of the five keys and signatures to the crypto refresh definition so that we can stay with V5 and have more interoperability I think that would still be preferable and perhaps worth trying sure I'm happy to take an action to try that um so once we have outcomes in this meeting in terms of minutes and so on I'll certainly Reach Out and bring any new information back to the list thanks so yeah for the minutes you can note that it's an action on me to try and follow up with that and I'm assuming that that process uh Stephen would have some termination date if we don't get any response yeah yeah and we can't just wait indefinitely uh um Samuel in the chat is asking if it's possible to remove one's vote I'm not sure what that means um so you can change your mind during the poll um so I just click you know just toggle the the radio button but I ended the poll so too late sorry Rick Rick go ahead Rick foreign personal here um I think the point is that we're not dealing with versions but variants here so V5 should be or V6 should be right varying six and that can coexist because that's actually what's offered us it just uses it as a switch deck it's not like a is larger than b so the race for first nothing doesn't exist sure okay so I think we've is there anything"
  },
  {
    "startTime": "00:26:01",
    "text": "on the right hand side of tkg slide that people uh would disagree with or I think requires some more discussion here or is he correct about these d-conflicts having been done already okay I don't see anybody looking like they're I see a bunch of people who don't know like me but I trust EKG to get it right um I don't see anybody because I'm saying that there is something on the right hand side of the slide that we may need to decide on right now okay so I think you're safe to go to the next one okay and thank you thank you for polling and so on yep so uh one of the issues that came up during working with Glasgow was from Aaron who I believe is in the room um we have uh there's links in the slide if you want to look at the slides to abandon This Thread and to an open um issue in gitlab um The Proposal was to try to So currently the version 5 signatures which may be version six if we do this change everything here is still as soon as Baseline version five on these slides um they have a salt a 16 octet salt and Aaron was recommending moving that to a larger assault in preparation for some of the post Quantum signing schemes that need a larger salt um uh Aaron offered sort of menu of options there either all the cells could be larger or you could make the salt variant in size based on like the hash algorithm and I wonder whether folks want to speak to that Scott during the queue mm-hmm uh yes I just happen to be have looked at the various posts Quantum signature algorithms uh they all have all three of them have some uh some prefix in front of it much larger than 16 uh octets um"
  },
  {
    "startTime": "00:28:01",
    "text": "some of them uh based either based on the public key values or just some random values that Designer picks now uh you could either build that into the uh one pass signature message or uh just another possibility is just do maybe a sold it a standard solid hashtag you have here and then have the the and just have the verifier and then do a standard a signature verification on the uh on the hash all right and so avoid getting in the details of how things uh dilism and Falcon work so my understanding is that with open pgp yes that's that's an alternative that is one certainly certainly one possibility so you're saying then that for the Post Quantum schemes they would their signature packet would contain uh a salt that salt would be pre-pended to the digest the open pgp style digest so you don't need you don't need it in the one-pass signature packet in that case uh it's a little more complex because uh uh sometimes it's it's depending on the algorithm it's either for in the signature or in the public key okay I think maybe Aaron wants to speak to that I see him in the cube yeah but don't but don't don't go far from the mic probably so also in the next presentation as long as I have something about this very problem the lithium for instance has the propense with the public key whilst things has a right an optional random salt the idea would be basically to disable the option on random salt into Sphinx for instance"
  },
  {
    "startTime": "00:30:00",
    "text": "yes to the side yeah so it's sorry can you use them I put the mic uh just a correction how things Works uh it has the option the optional salt is to the signer the signer always picks a random value it's just that is it this uh the designer may use a actual random to to further randomize it or go with a default the verifier doesn't know or care so yeah it can be extracted from random or from the message but like the the issue the following is the fact that Sphinx for instance has a 16 octet sold for the lower security level uh than 24 and 32 octets um the deletion case I think it would be fine still with the pre with this construction because you still apply the the public key at the prefix of then a hash so you basically hash together the public key and then they already derived a hash that you're signing from openpgp um the the request here comes the there are these two options either we want to make this Sim simple implementation and put 32 octets for everything or whether we want to bind it to the hash algorithm in my opinion because the thing we're trying to uh to solve the issue we're trying to solve is a collision into the hash uh when signing and we need an unpredictable sold for uh whether it's signing for whoever is creating the signature so so Jonathan's been in the cube uh Jonathan Hamel so I I think that you Caroline take the crypto algorithm output from the libraries as opaque so that you don't have to be parsing them out in order to fit them into the pgp"
  },
  {
    "startTime": "00:32:02",
    "text": "structures would be my opinion so I I had a question I guess but perhaps for Aaron so my question is if we made this change now would we still have to make other changes around this space later when we actually come to specify pqc so if we bind it to the hash algorithm I still have a proposal later when we do pqc to bind the hash algorithm to the public key algorithm in signature for instance first like the lithium uses chapter internally using Chateau and then shatri would be in my opinion a bad idea so you expanded the the attack surface um still I think that it makes sense to this change now because the hash algorithm that we Define into B5 would mean doing uh basically we would already have longer souls for existing hash algorithms and if instead we want to buy directly to the publicly public key algorithm then that's fine we can just do it later I don't know is it clear so my concrete proposal is binding the signature uh salt length to the hash algorithm used to derive that salt to derive that the signature so you use Shadow shot 256 you have a 16 opted salt you use sha 512 you get a 32 octet sold and yeah that's the actual item now so I I have a if we're going to bind to the hash algorithm used"
  },
  {
    "startTime": "00:34:01",
    "text": "then um it seems like one other option would be to say that you get a different hash algorithm um for we could introduce a novel hash algorithm specifically for the Post Quantum stuff right so for for um sorry can I just do an intro up there I I just wanted to capture Aaron's suggestion all right so I put what I think that is into the chest and then you know I guess we're building up towards a poll with like two or three options or something right um that's right so Aaron did I get that right and if not please correct it particularly in particular I think Aaron's proposal was that the salt length would be the length of the hash algorithm in the signature um so I'll note that dkg's variation if the um but I just heard about dilithium which is leading to Hash the public key material in as well doesn't line up with open pgp's um uh one pass signature framing because the one pass signature doesn't know anything about what Pub Key algorithm is going to be used it only does the uh it only does it digest before calculation Aaron yeah please so when you hash as far as understood when you hash at first like the when you start the hash with prefix the hash with the public key that is not meant to avoid Collision because the public key is known so an attacker could just like doesn't need that like it's not met there for Collision is therefore kind of binding"
  },
  {
    "startTime": "00:36:01",
    "text": "let's say so if even if we put the if we use it later in the hash within the opaque algorithm let's say it's it's fine I think okay so um so the current proposal is that we bind it to the hash out we bind the length to the hash algorithm and it is the length of the hash algorithm output so is that correct Aaron that the length you want is exactly the same length as the hash output um it's it's actually the security level of the hash so it's half of the length because of the collisions thing so I think the shadow physics has a 32 octet and we use 16 and so on got it okay so let me propose um a separate variant just to see if people have a preference here um which is that we add a column to the hash algorithms table that says the length of the salt for this hash algorithm is X and then if you encounter and we set them all initially to 16 octets and then if you have a post Quantum algorithm we say oh you need a special hash we'll bind it will allocate a new point in the space and it'll be shot 356 with longer hash and it has the same code path but it lets us put a larger hash in when we need it and we don't if we don't know what the larger hash is now we can just put the larger hash in later instead of my second question here so I'm proposing this because I want to ask also is there going to be a problem if we bind it to the hash algorithm if something doesn't know a given hash algorithm if how's it going"
  },
  {
    "startTime": "00:38:01",
    "text": "to know will it be able to deal well with a assault of unknown size well obviously if they don't know the hash algorithm they can't actually verify any signatures um on the other hand I don't see the why is there making distinction between post-quantum or non-post Quantum terms of salt size the attack they're addressing uh collisions are it's the same both both cases okay so do we have do we have any yep um um I've been confused for the whole time so I that the thing is for the lithium and for falcon the for the Falcon the results is the fixed size and that's come along with the message when you have it for the deletion the salt is basically the internal value which can be either derived from a part of the public key or you could make a fresh or truly random value as a salt internally for the signing but the but the signature itself does not have any salt and also even internally that source is a fixed value five terabits law so that's why I've been confused I don't really know what the discussion we have been talking about I think I think here is that open pgp has an expected uh frame for all signatures where it does a digest and then the digest is passed to a public key algorithm and that is peculiarity of openpgp and not a frame that we have uh proposed uh breaking should new algorithms come along I don't think it's the right time for us to"
  },
  {
    "startTime": "00:40:00",
    "text": "figure out how to do Post Quantum exactly the the goal for right now is to figure out what should we do about the cells themselves uh so that we don't have too much breakage when we get to PQ stuff okay things Mike ellensworth so I think Quinn's point if I heard it properly is the PQ signatures have built-in salts you could have no salt here and they're still secure so it doesn't matter is that what you were arguing uh so I'm talking about signature along the the Falcon needs assault must have assault and the salt is fixed in its back the false lens fixed in in this bag but the lithium signature does not contain assault but internal signing there must be a student random number of bit string of five terabits long or you have a truly random bit string five terabits long used in the signing procedure that's what I'm saying so I don't and of course if it was a spring plus unique assault you need the random values oh yeah so so great I think my so my uh my understanding which is probably worse than most people in the room is that pgp is already hashing the the message and it's only the hash that's going to be fed into the new signature algorithm so now we want to also add a hash from from the pgp protocol plus assault for the pgp protocol and get that signed and whether the the signing algorithm involves other assaults or the randomness is a different matter I just I just said so that what I said would have been correct so I I did not mean anything I just corrected what my uh Echo what I"
  },
  {
    "startTime": "00:42:03",
    "text": "I I think that um like the lithium as far as understood contains the it's meant to randomize the signature is not meant as a soul to avoid Collision basically what the attack we're trying to uh to towards here is the following I create a second text that hashes to the same result as the first text so we have two uh and this basically lowers the security on the whole setting because um we instead of instead of just a the hash is that if if we use an unpredictable sword we just need second pre-image resistance onto the hash well instead if we just use an unsalted salt and salted hash we need Collision resistance into the hash and we have seen with Shawan that Collision resistance can disappear let's say it like this um so I think that this is just uh like a a little change to match the security level of uh of uh of sphinx plus I personally think that 16 often sold being it an online attack so you need a someone to sign that message many times till you get the right so it's still a very large value so I see the value into dkg's proposal I just don't like it personally because I think it is uh like it creates another Edge case instead if you bind everything to the hash algorithm no matter is if it's post or pre Quantum I think it's better but that's a personal opinion okay Mike Hemsworth yeah I totally agree with what Aaron said I mean it's it's yeah the internals of daily lithium are going to prevent for internal reasons not are not attempting to be um Collision resistance"
  },
  {
    "startTime": "00:44:01",
    "text": "um personal vote dkg I would say just go ahead with this this is well into splitting hairs um I'd also want to point out this is a perfect I mean you've sort of stepped in a bear trap this is a perfect topic for Roman's new pqc working group because everyone's going to have to face this question of whether we pre-hash dilithium and falcon or not and if we prehash it do we salt it or not and this is going to come up absolutely everywhere we nonetheless don't want to wait for that so I think we have three options one is the status quo which is a fixed then 16 octet cells uh oh pardon me Robin go ahead hi is the mic working yep okay um yeah just sorry to to preempt your your summary um if I remember correctly a few itfs back uh cfog I think it was was discussing a a dual or hybrid signature scheme where you would have an algorithm that was thought probably not to be post Quantum safe um and one that you thought was post Quantum safe and you would actually doubly sign uh things that you wanted to sign with the goal that you'd you'd have compatibility you'd have Legacy compatibility because of the non-safe algorithm until such time as you wanted to stop using that or had to stop using it but you would be signing things now with an algorithm thought to be post Quantum safe and the the driver of that was simply uh the length of time for which you might want a signed object the signed artifact"
  },
  {
    "startTime": "00:46:01",
    "text": "to persist so is there an alternative here to say treat these different salt lengths as if you like probably not Quantum safe and probably Quantum safe variants and do a dual signing Aaron you are like reading my slides that come in the next presentation this is another topic so I would like to say maybe of this length of salt we could discuss after the second presentation because there is a better explanation there and also the idea of signing twice with the pre and the post Quantum key so so yes and no uh so we're not chartered to do work on postponed crypto so we need to make this decision regardless um so I'm going to suggest that we have a try a poll with three options one is the status quo which is a fixed length 16 octet salt the second is the proposal iron maid where the salt length is tied to the Collision resistance size of the hash and the third proposal is I think what dkg suggested is that we add a column to the Ayana registry for each signature type receipts for each signature algorithm that we have a salt length parameter in the registry I just wanna I wanna I wanna point out that I think we'll need a column for the registry in either case uh because the registry needs to know what is the Collision resistance of each algorithm I mean if you're an expert in the algorithms you know what that is but we will need the table in any case the question is whether we want the table to exactly we want the column to match the Collision resistance and okay given the discussion I I'm definitely not I'm no longer interested in my counter proposal I I'm I've been convinced by the speakers uh oh okay so proposed dkg's proposal"
  },
  {
    "startTime": "00:48:00",
    "text": "was withdrawn does anybody else want to put tkg's proposal back on the table okay so then we have two proposals one is Aaron's suggestion that the salt length is tied to the Collision resistance of the hash function and the second one is the status quo where we have a 16 octet salt do you want to start the pole dictator should I um uh okay so we have two options status quo or Aaron's suggestion uh okay so raise your hand if you think we should have the Collision the salt length match the Collision resistance of the hash function and do not raise hand if you think we should uh stick with the status quo and if you want to abstain you do that by abstaining foreign so if you raise your hand if you want Aaron's proposal to make the salt lens the the Collision resistance size of the hash and click the do not raise your hand if you'd like to stick with the status quo of a fixed 16 octet salt and it seems to be stable and relatively clear and we have 15 raised hands and one not raised hands it's useful to check with the person who clicked do not raise hand would they like to say at the microphone why uh that can that can be helpful information uh yes this is me uh the reason is that why is there assault there if it's to provide to provide Collision resistance which means that a collision would apply it would apply only if they managed to guess the salt first and someone blindly"
  },
  {
    "startTime": "00:50:00",
    "text": "guessing a 16 octet value is is sufficiently improbable not to worry about okay so thanks to that um even Aaron is nothing but that but we picked something so that's that's that's not fair grab the feet from the jaws of victory I would like to request someone to volunteer to make a merge request I mean Paul if you're okay with making them the edit yourself that's fine but if you would rather have somebody propose a merge requests great okay we are we are way over time for this question so I'd like to move on to the next one unless yeah Robin you're still in the queue or do you want to take yourself out of the queue okay peace all right um so on gitlab this has actually not been brought to the mailing list that's a failure of your chairs here sorry I failed to bring this to the mailing list uh when it came up um demi-marie open hour noted that as currently described a version 5 signature uh over a message that is less than four gigabytes in length can be transformed into a version 3 signature over a subtly different data but signed by the same key so it is possible for an attacker to take a version 5 key and a version 5 signature extract the cryptographic key material from the key transform it into a V3 key and then make take the take the V5 signature and apply it to uh a weird variation of the text that was originally signed and the signature will still validate for those things that validate B3 um there is if it's proposed on that issue um which just changes the way that the trailer is computed for the V5 hash um"
  },
  {
    "startTime": "00:52:01",
    "text": "uh the draft already says you should you I think it says You must not validate V3 signatures uh because we believe them to be insecure um so it's not clear that we need to do this on the other hand the change is not particularly big it just basically moves some bites around to prevent the the signature from being at least in the same way um be relatively easy to do the change and avoid it for those things that are failing at their uh rejecting V3 signatures um I don't know who else I know that there are at least a few people who have read this issue um and commented on it I think Eustis is there um uh and has read in commented on it I don't know whether anybody else wants to speak to this or not um if we were to do a poll on it the poll would be uh should we change the trailer of V5 signatures to avoid any possible aliasing with B3 signatures uh yes Robin you are reading that correctly uh the the issue here is that D5 signatures Hash a trailer that consists of an eight octet size value um of the message and the fourth uh signature the three signatures as a trailer hash the timestamp of the signature prefix by the the signature type so as long as as long as the fifth octet from the end is a zero then the remaining bits will appear as a time stamp when you interpret the hashed stream as a V3 uh as a V3 signature this is a weird thing it's not clear that we have a specific attack but that's the uh that's where the four"
  },
  {
    "startTime": "00:54:00",
    "text": "gigabyte boundary comes from this is not an issue for V4 because V4 hashes the file size at the end but it before the file size comes as 0xff uh octet and there is no signature type 0x okay the does anybody think they're in a position to does anybody need more information um before having an opinion on this or do you think you have enough information I see a whole bunch of non-reactions so I don't know what the answer is uh I'm gonna start a poll here and if nobody votes in the poll or if like three people vote in the poll we will know that nobody has has made a decision there and that will be information we can take to the list later that's okay okay so you're poll will be okay go ahead and say change the V5 signature trailer octet ordering so the V5 signature trailer has a certain octet ordering and open hours proposal is to change the ordering of the trailer octets in a way that would make it uh impossible to Alias with the V3 signature and and the instruction is to raise your hand if you want that change raise it if you want the change click do not raise your hand if you do not want if you oppose the change and if you're not sure please don't click anything Daniel go ahead so we don't support uh V3 signatures anymore already since a long time and"
  },
  {
    "startTime": "00:56:00",
    "text": "haven't had major issues as far as anywhere so I don't have a particularly strong opinion on this I'm I'm fine with changing it I'm also fine with not changing it so I yeah okay so we we have a kind of a weaker distribution here and we have two hands two people click do not raise hand do you want to say why did we good I think that signature verification is something that is on the receiver's end and does not break like you can still read the message if it doesn't verify so the fact that not very validating V3 signatures is something that is necessary and since it's a must I think that it's it's good not to like to to ban on these three verifications and do not change this so there is a weird case where the signature the data being signed is large enough that the fifth octet of its size is 0xff and the sixth octet of its size is 0x04 so signature over that data put Alias from a V5 signature to a V4 signature potentially that's a much fairer case there's you have to be signing exabytes of data but there is a weird aliasing situation there where the signature would be identical it is not just V3 though V3 is much more much easier is there a reason why you're not hashing in when you're while you're hashing before the safety while you're by not hashing in the version number of the signature this version number the signature is Hash but it's hashed in the trailer and the position in the trailer varies depending on the signature version uh and so that's that's why we have this aliasing problem if the if the version number was hashed in at the beginning"
  },
  {
    "startTime": "00:58:00",
    "text": "then uh we would not have this issue the trouble is that that we have this this regular pad this pattern of changing open hours proposal would make it so that um the version of the signature is always a fixed length from the end of the hash stream whereas right now V3 doesn't have a version number in it the four has a version number at the sixth octet from the end and B5 has a version number at the uh ninth octet from the end Yeah so basically so basically saying if I had a dump of what goes into hat to the hash I can pause back I can parse out the version number that that should work um you know the concern is we have the sequence of data that goes into the hash if we know that that sequence of data is a version is a version three signature there is no way to find that it is version 3 from that sequence if we know that the signature is a V4 signature we find the version number from the sixth octet from the end if we know that it's a V5 signature we find the version number from the 10th octet from the end in the current proposal but if you don't know those things and you're looking at the sequence and trying to figure out what version it is you could it's possible for one octet string to land on something that could be interpreted in the same way so open hours proposal makes makes it so that there is a fixed location in the hash stream that cannot so that the data hash for V4 and V5 cannot Collide and V3 also cannot collide okay so so again just as a time check we've got a half hour left so there's a couple other issues to get to I I think we have you know we have input on this um it's clearly in One Direction we have eight raise hands and two not raised for the record uh it's a little bit less strong than the previous so"
  },
  {
    "startTime": "01:00:01",
    "text": "I I guess the action here will be to make that change but be open to somebody on the list um raising new information in the next short while so then the question will be does that was that an issue or a major Coast that's an issue not a merge request okay so we need somebody to turn it into emerge requests foreign recommended a context parameter for encryption to ensure that things could not be decrypted in uh surprising contexts uh this is part of the work on defending against detail um Daniel Wiggins recommended uh that if we're going to add a concert parameter for encryption we could add it for signatures too so that signatures do not verify in surprising contexts um however doing this requires a definite a shared definition of a context and no one has proposed well Brinkmann proposed a specific context for email signatures um but it is not clear if we would be able to use a V5 signature for email without this context um in uh like this might delay the adoption of the additional signatures um or additional encryption of using the signatures or encryption um if we don't have the context well defined for any particular location for example if you're doing backups so there's a question of do we want the context parameter in the current to come"
  },
  {
    "startTime": "01:02:02",
    "text": "out in the crypto refresh or is it something that we can postpone to future work uh anybody want to speak to this Daniel yes so I'm uh quite in favor of this as you know and uh I think for for me uh this is most important possibly for new applications that might want to use open bgp that um want to ensure that messages or signatures can't be um that's a transplanted into different contexts contexts or different applications so having even just uh an application identifier in the context Plus in my opinion having some application specific contexts parameter that that can be defined in in um you know the applications usage of open b2p would be very useful I do also agree that for email moving to um a shared understanding of what the context should be is a lot of work and it's not clear that we can do that like um you know in in the next few weeks or so but um nevertheless I think it would be valuable to add context parameters in the spec um so that new applications can start using it and uh and then we can separately think about how to"
  },
  {
    "startTime": "01:04:00",
    "text": "move email to that so today so just it is what's your suggestion then is that we have a a default context parameter that we Define that has a you know a fixed value for now and then we ask new applications to define context parameters themselves as they go forward yeah yes so that could be one option uh another option could be to to have a registry as I I think dkg perhaps suggested having a registry of application identifiers and then we could um still already Define one for email just so that um uh sign messages messages and signatures for email are are separate and can be transplanted to other applications but and and then have after that an application specific um context parameter that we could figure out later uh what that should be for email and each other application if that makes sense okay so so essentially proposal registry with I guess two initial values one per email one per default sorry one four default ah I guess it might be worth doing some work to to find out where everywhere uh that open bgp is used is and maybe we need more than just email but okay so I I yeah that's starting to sound like a bunch of work but uh so Rick you're annoying Rick for Ryan responding to Daniel's proposal um I like the ability to separate uh applications you mentioned the registry is that a deliberate proposal is that just something that pops up because it means you uh you require a lot of extra work for registering you could also consider no ID which anyone could"
  },
  {
    "startTime": "01:06:00",
    "text": "register or you you ID which is even simpler these are not security attributes anyway so it's good to think about what form of identity you want to use so one concern is that if the context travels in the open pgp material then we're not actually gaining anything from this proposal in terms of security because they'll just drive whatever the Conex is there and then the attacker can modify the context so what the reason for the registry I believe is to coordinate among users to say oh I get it I'm in this context I'm going to use this particular Machinery my concern there even if we just have a registry that's email and not email is if I send you an email with an attachment that is pgp encrypted should it be decrypted with the email context or should it be decrypted without the email I don't actually know what that means so so then the registry's job is to coordinate that kind of thing so I I'm just saying I don't if we're doing a registry I still like I kind of think it's necessary but I also don't even know what would go in the registry so if someone wants to propose that I'm I'm game to read it over and try to review um so you want to do a poll on this I mean so the other option that was the other option that was mentioned in the discussion on list was we can just say we know that we know where the context would go in these constructions both for encryption and for signatures and we could say you know the null context is what we're defining here and if somebody wants to define a particular context in which a the thing should be used and what the context string should be we can just simply Define a V3 SCI PD and figure out how to signal that user supports that as a separate work in recharger uh word converter because that's another way forward"
  },
  {
    "startTime": "01:08:02",
    "text": "so thinking about it from a getting finished point of view that that last option sounds more attractive to me as a just a you know from as a chair and getting finished um uh so I don't know should we do a poll on this or not I think how about a proposal if we were to just point on this and come back to it later as part of retractoring would that be okay with people would anybody object to that so nobody seems to be objecting in the room or the chat so perhaps that's one time say your proposal again and we can put it as a poll The Proposal is report and consider this as part of rechargering so no poll oh okay I mean nobody's objecting okay okay so I will suggest we'll move on the minutes will be close to the list um so Andrea gypsov recommended in uh on the mail list and in git lab uh that for V5 public keys for ACTH and ecdsa we could move from the sec1 uh representation to a more compact X only representation that would mean that the public key format would differ for these things between version 4 and version 5 or version six if we call it version six um I don't know if folks want to have folks want to comment on this come on um I am against this specifically because we kept a hack in"
  },
  {
    "startTime": "01:10:00",
    "text": "the Easy Ed 25519 and also the curve to 519 implementation to be consistent with V4 and in general I don't see that much advantage in switching to X only representation when we have one more issue and then Computing the point second one is not so compact but we're still talking about the elliptic curve keys so I don't really see an advantage in in in in bandwidth so do we do we have anybody who wants to speak for this change I'm gonna start a poll then for move from secular condition to X only representation for ecth and ectsa uh so raise your hand if you want to move to X only and do not raise your hand that is quickly do not raise hand button if you want to retain the SEC 1 rep representation or V5 Keys sorry the text of the poll should say for V5 Keys only okay so that seems to have stabilized that zero raised hands nine times not raised so essentially status quo okay cool thanks folks moving on uh oh already I see you on the list there hey uh or steel transmute um just because this issue has come up on several other lists if you have interacted on any of those other lists"
  },
  {
    "startTime": "01:12:02",
    "text": "and you feel the same way as you voted in this context please share your opinions on those other lists I'm thinking specifically of the Cozy lists regarding key types and key representations in Hosey and cozy thank you sure Jose has kind of different requirements to pgp though so okay moving on okay this is our last chartered topic for this meeting which is about how we handle the Ayanna updates we had a call about this last meeting and you can see the results of that poll in issue 140 on gitlab this is a reminder the crypto refresh is going to change almost all the Registries to specification required which means we will have a designated expert whose job is to determine whether something is a sufficient specification the only two Registries that will remain RFC required are for version numbers um wherever they show up in the spec and packet types so the packet type numbers will both require an RFC so that's a higher bar to meet this is a reminder that that's you know I think we had a rough consensus on this move at the last one and we've talked about this for over a year now um but when I just like to confirm that that's what we want to do and we also are going to need people to volunteer to be designated experts or maybe who would be willing people could identify themselves as being willing to be designated experts and I believe we will need to choose those doesn't be experts Stephen I think okay yeah so the isg make this Choice uh because it it can outpass the working group and so on so it's it's not our call but we can certainly provide input to the isg and if people are willing to volunteer for it great uh so please do that and I guess the more the more interesting question for today is what guidance should we have include in the specification for those experts"
  },
  {
    "startTime": "01:14:00",
    "text": "and typically the guidance is around you know what level of specification is consist considered okay uh is it okay to have a random web page is it okay to have an academic publication that may not be great for interrupt Etc so and this is a topic where people don't get excited until it's too late um so I think it would be good to get some input and it gets too late when somebody proposes that they want to add something based on what we turn out not to like later Aaron given the history of openpgp I would say that a draft is probably what we want like we have like wkd is a draft uh the PKS is a draft like they're all the things that are a bit related to open pgp and they all seem to be drafts so you're suggesting an internet uh yeah okay which can be submitted that has like a personal internet draft is fine or that's where we are at I don't know whether that's a good idea but that's the status quo probably all right or steel transmute um I agree with what he said you said about it being any web page on the internet not that okay so something that's so just to point out that internet drafts are mutable documents right mutability is fine mostly about availability and like posted in a in a context where it's not going to go away so if if we were to consider any person's random web page on the internet I would ask for it to be like the art internet archived version of that page or something durable going I want to jump in in line uh there are former in real IDs kind of also in this room by my read specification required is not really an ID because to"
  },
  {
    "startTime": "01:16:01",
    "text": "your point it's mutable yeah just pointing that out so especially we have a concern about mutability and about um uh reli like reliability like being able to find it that it doesn't disappear right which is I guess an extreme type of mutability do folks have an opinion about whether we need something like interoperability like could you know I can publish any garbage as an internet draft um and it's out there and I can say oh just use version zero two of my um you know thing but that doesn't mean anybody else has actually done it before do you want to ask the designate expert to ensure that there are two implementations from different implementers no for example so just a yeah not coming on the application just to kind of comment on the ID draft to sensitize everyone a way to write the considerations uh you know IDs can change you can also do uh I'm sorry you could do kind of specification required which could mean ietf stream it calls for me ISE so that means you know you're not going through the working group uh and so when we say RFC required I'm actually not sure which one we need uh is that standards action so ietf stream or is that any kind of RFC so that's currently I think it's any kind of RFC um it's also you know it's worth noting as well that there you know there is there are some specification required Registries already and I don't believe a designated expert was ever appointed so yeah right but but it needs a destination designated expert because you can't have uh a specification required without a GE you can have a I you can have an ietf you can have one I'm sorry I'm just staring at the right words you can say standards action and that can be without a de but that's always bad so I'm just saying factually we we have in the in the existing rfcs that are quite old yeah specification required registries"
  },
  {
    "startTime": "01:18:08",
    "text": "so I think what's very clear is people want the guidance and again bear in mind that there's a there's an expert here who's an expert so the guidance doesn't have to be you know something that is machine readable um we want things that are open we want things that are stable we want things that are likely to Foster interoperability so for example some academic papers might be great but a lot of them won't actually have enough information to get interoperability and that's we can give the guidance to an expert in in you know it doesn't have to be very very precise it just has to tell them what to think about and then we depend on the expert to make a good decision so those are things open stable and likely to Foster interoperability thank you yeah I mean the thing I would kind of caution is when we think about what we want imagine the working group is God yes who are you going to trust with the code points because that's pretty much what's going to happen it's going to be the de making a recommendation to the isg uh plus that D may be Consulting at work I'm sorry a mailing list but it's going to be you know what what do you want that group of individuals to tell the isg yeah I think we want something that is immutable to the level like a draft is mutable but if you specify a specific version it's gonna stay there and be immutable so I don't know if Ayanna will put a specific version number of a draft in as the reference for a cold point it is I don't know sorry Paul address there's likely going to be a lot more specification requires that are much weaker than a draft so I'm not sure the draft discussion is really that interesting because they can just put it on the website and not call it the draft um you should really think about I I"
  },
  {
    "startTime": "01:20:01",
    "text": "don't think adding features that might not get deployed widely is a problem as long as the registry is big enough or do we have any Registries that are so small that we want to avoid wasting numbers on them and if you don't have that problem and I think specific specification required is most suitable for most of them yeah okay so I think so I think it sounds like the the guidance essentially is open stable and likely to Foster interoperability and we need to figure out some words to say that and put it into the ionic considerations um who wants to take an action to craft that into words I get tkg you and I should probably do that right and we should we'd hunt around for other rfcs that have such guidance to try to find a good example to to base on sorry but just because I'm looking at the the Ayanna cozy registry right now there's several entries that point to specific draft numbers just for reference okay I suggest looking at the Ayanna cozy and cozy Registries for for guidance sure okay so I think the action there is on the chairs to come up with a bit of text to and I think the the feeling of the working group is is clear we'll see if the text uh generates objections or not okay yep cool and your last slide was just a question yeah um okay Aaron I recognize that we have 10 minutes left in the in the um slot here and we had offered a potential chance to talk about post Quantum work we already did a bunch of talking about post Quantum uh in the extended uh in the self discussion um do folks have any other uh issues that were raised uh during working group last call that you want to discuss now or do you want to try to"
  },
  {
    "startTime": "01:22:00",
    "text": "give Aaron you know five to ten minutes to talk about the post Quantum stuff I don't know if that's a fair slot for him I don't see anybody in queue okay so so I guess we're we've got a few people agreed to do reviews additional reviews we've got some actions to change that means we're extending the working group last call essentially um by some number of weeks dkg and I will discuss off lists and uh declare another date for it and hopefully that will encourage people to do those reviews by that date so that's okay um should I do the slide sharing locally here at tkg it might be easier sure yes so I think you need to stop sharing or I need to take it away from you thank you reloaded slides there we go so just tell me when to move along yeah and and we're we're at seven minutes so you might want to go faster than you expected definitely so uh we're gonna present a big what has been done so far and a few questions for for the working group the people in Boulder the one actually working on the draft right now it's like we'll start with the dicing design criteria next slide please yeah they're a bit redundant so the idea the main ideas are you to use composite multi algorithm for kyber and the lithium and Standalone Sphinx plus to offer backwards compatibility to have two certificate to recommend a user to have two certificates one V4 Legacy with uh basically pre-quantum and and"
  },
  {
    "startTime": "01:24:03",
    "text": "Legacy uh input for legacy implementation and 1v5 with both Quantum or V6 at this point and to ensure compatibility on the protocol level of adding multiple signatures so you sign with both uh with both keys uh we use ECC so we would since they are new algorithms we would basically fix the existing inconsistencies use actual i65519 x448 as they are as they are standardized next slide please so these are the algorithms we thought of and to maintain consistency with the crypto refresh 25509 it must for for it and shoot and everything else in May things we off we've thought about offerings both Chateau and shake the reason is Chateau is twice as fast more than twice as fast as shake and it's not even not it's not really a security company a security trade-off seems like but shake for future compatibility with what comes next slide sphinxplans will have several parameters because some users might want to have smaller signatures but very slow so this means like 256 s that takes even seconds to be issued but all these signatures are very fast to be verified so on the verification end there should be no issue so it's just a signer who decides how slow they want to make their work next um so basically the basic design for the cam is to use ecdh as like a prime curve or x2519 or x448 and omit the key derivation step"
  },
  {
    "startTime": "01:26:02",
    "text": "and just keep the derive everything so the key encryption key is derived from ecdh with kyber and with some fixed information is a simple chatri concatenated hash construction because of the sponge construction of shattri we can we can do that next slide so these are the topic that we already talked about um so is basically the fact that they are not for like they expect both the the whole data the whole message to be fed into the algorithm we cannot really do that because we do streaming so we we can't expect we don't have the information about the signature at the beginning uh unless we put it into the one pass signature but it will be a big change on the protocol level and this is as much as we're doing right now with EDSA that also expects the whole message as input so we basically are asking to extend the hash size as we said before even though as Scott pointed out is a good point as it is an online attack still in 16 octets are pretty large number so it's just that there will be an inconsistency and that would not provide the whole security of things Plus uh deleting propens the public key but that is still fine in our opinion because it just uh ensures that like the the that will still be there just after the hash and yeah next slide and basically these are the differences um the fact that we want to in the future bind the hash algorithm to the um embedded hash algorithm into the post Quantum algorithm so basically say you cannot use sha 2 to then create a signature that is the lithium that uses internally as much as the sold size slide yeah and also this is a big"
  },
  {
    "startTime": "01:28:01",
    "text": "problem we have nowadays especially for um my messages clients tend to parse just the first signature if it validates good if it doesn't well it's not validated and if we want to put multiple signatures we need to ensure that there is compatibility for this and also in open pgp messages so in the embedded signatures we need additional testing in internal purposely Suite that is not done as of now but this is an action item we have on our side next slide so next steps we would like to wait for the publication of the Khyber intellectual property from nist that they told us yesterday it would be that tomorrow so sorry by this month so uh um I I will very warmly looking for that we also would like to publish the draft we have right now we wanted to do it by now but we still some parts are missing and we do have an experimental goal implementation at proton and MTG will work soon on to uh open lead decrypt and rmp implementation and also improve the testing Suite to include that missing tests um next slide so in the last minute uh I would ask if anyone has comments questions please come to uh sorry these are the questions we have for you and they are the algorithm selection if you like it uh whether you're okay with binding a signature size to the hash ID that were discussed and whether you would be okay with also the further change of the hash function to the algorithm ID now I don't think we have times for question but uh we are having a meeting in next slide in 20 minutes so at mezzanine 12 where we will see the draft for real and we will discuss we can discuss it all together to see since this is not charted work we did not want to take time from this meeting for us but if someone has a quick"
  },
  {
    "startTime": "01:30:00",
    "text": "before you go down so I'm going to suggest with we'll try and finish the working group Last Call on the crypto refresh get that to where we hit the publication request button and then have an interim meeting where we can discuss re-chartering we people promise some reviews within weeks so and then Paul has been quite quick as editor so I would hope in a month for six weeks something like that it's very great yeah yeah okay so the queen go ahead and we're at times I'll be very quick just just uh in case I'm Queen deck and let's just in case you didn't attend the cfrg meeting on Monday uh just let you know um I strongly expected the uh the detail of our agreements with the two patent holders will be released uh this month okay okay great thanks and thanks Aaron so you didn't have too much time but I mean things yeah so if you're interested go to that side meeting and this won't be this won't become a chartered item until there's an interim meeting anyway so so you won't totally miss out on anything so okay thank you all um let's try and get this crippery first thing done at the door and then we can move on to these topics foreign foreign"
  },
  {
    "startTime": "01:32:08",
    "text": "hope to see you next time thanks yeah sorry for the destruction you at your own time yes"
  }
]
