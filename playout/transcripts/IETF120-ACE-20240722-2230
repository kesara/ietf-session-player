[
  {
    "startTime": "00:00:06",
    "text": "Thank you All right, I guess it's a little bit after 3.30. We should probably get started So we'll start off with the chair slides, my co-chair, Logan said that he might not be able to make it today. So my might be flying solo on this one So bear with me on that, but I think we'll be able to do it just fine Dean Notewell is up. This is the first day of IETF, so somebody you guys may have not seen this yet. Please pay attention to the note well. It is important. It has a bunch of information about how we deal with Patinson and copyright and code of conduct and anti-hand rats harassment so make sure you're familiar with all of these before you participate And then especially we're calling out the code of conduct please debate technical ideas in a respectful and polite way. Please try to avoid making comments about people and personalities It's not helpful for moving the discussion forward which is what we're trying to do And then this is the agenda"
  },
  {
    "startTime": "00:02:01",
    "text": "I know we had one or two changes in presenting but I think the agenda itself is unchanged But if anybody has comments or modifications, they'd like to make to the agenda, please speak up now Okay, we got jon peterson in the queue Yes, hello, so I will be presenting the end of Oscar profile and the group of score profile So to make them back to back it would possibly move the EDOCO score profile to the second from last point if it's more convenient to have the same presenter consecutively yeah i saw the request to change the presenter so thank you for presenting, and we're getting the doors closed Thank you very much for that. We'll make it much easier to hear in here All right Any other changes to the agenda? All right, in that case, it looks like up first is Draft IETF ACE COAP ESP core So let me get the slides up for that Could you pass? me the controller over the slides? I will attempt to do so But I'm not 100% sure how to do that. Otherwise, I can just run this slides for you, if you would like. Yeah, that's fine, I can just say a new slide. Okay Okay, so my name is militia. I'll be presenting the updates today the draft ACE Co-PST or score so we publish 05 on 8th of July fixing miscellaneous things throughout the document My goal for the presentation today will be to present the resolution"
  },
  {
    "startTime": "00:04:01",
    "text": "of the closed issues, basically Next slide, please Next slide So the first issue is issue number 30 which state which is considering the use of challenge password for signature keys without ad hoc. So the context here is that we use the challenge password field to implement the connection based channel binding between transport and the app objects When a static difficult keys, is enrolled, connection-based channel binding is essentially not needed And for this reason, in the draw, but there are other cases for which we need channel binding and in the draft we use uh we use challenge password uh optional and it's left to the application profile to use it it So the issue refers to the clarification of the use of challenge password when the ad hoc session and enrollment are executed with different keys and essentially what we did is we clarified security consideration on channel binding specifying essentially how to that application profile can specify when this is used in this specific case next slide please please uh issue number 19 took uh so this was an issue to clarify this scope in the introduction and the abstract, so there are two resolutions to this issue Essentially, we clarified the credential to use for initial authentication. This is you can see the diff here in the slide Essentially, we stated what was already assumed by EST, which"
  },
  {
    "startTime": "00:06:01",
    "text": "is that the initial credential how the initial trust is established between the client and the server is out of scope but the trust relation needs to exist. We also wrote new abstract which you can see on the diff here and if you can switch to the next slide, please And as I was saying, we clarify the use of initial authentication credentials to stress the trust the trust relation between the client and the server must exist, but how it is established is out of scope. So this is the new text in the draft Next slide, please This was an issue raised by Yaron on adding a message flow example So the context is that there was no example in the document summarizing how the thing works So what we did is we added a message flow exam with optimizations, with Oscar and ad hoc piggyback into the same Oscar message as per draft in court the specified in core and so we added this example in order to complete the document and there are some TBDs that are holders for some registrations performed in the cozy document on CBOR and coded certificates certificates Next please Other than that, we did some miscellaneous updates, aligning the private key container with draft with the cozy"
  },
  {
    "startTime": "00:08:01",
    "text": "draft on Cibor encoded certificate structure and the structures in that draft and we are essentially using the private key media that is defined in that document and then there were some miscellaneous fixes on references throughout the document essentially aligning with the latest version Next slide, please So in terms of open issues, there are two open issues at the moment on GitHub as far as I remember Issue number 52, which needs to specify the CDDL structure of CSR attributes endpoint, which is still not done and then there is the issue number 54, which was raised by Yoran on the selection of the type of I think normally think I'm credentials. So the issue here is the preliminary knowledge that the client, what kind of preliminary knowledge the client can have in order to make a meaningful enrollment request And we are considering leveraging ad hoc cipher suite negotiation to help with the decision on what kind of algorithms the enrollment request can contain So this is in terms of the open issue Next slide, please In terms of the next steps, I will be resolved these two open issues on GitHub and then I believe we will be ready for working group last call on this document so that would be all for for for this presentation. Are there any questions? Doesn't look like it. Okay. But thank you and I'm glad to hear where we're getting close to working group last call. That's great"
  },
  {
    "startTime": "00:10:01",
    "text": "news. Sounds good All right And so next on the agenda is PubSub Profile All right, and I have figured out how to pass slide control if you would like it No, it's okay if you drive this slide from me. Okay. Okay, thank you very much I'm Chidam Shangoon, and I'm going to present the pops up profile updates We are in version 10, but the update will cover version 9 and 10 Next slide, please Just to recap what we are trying to do with this profile This is a profile of Groupcom and the idea is to protect the communication of the pops up clients when they're doing pops up communication with a broker system We would like to be able to authorize Pups clients to be able to communicate with the broker in a permitted fashion depending on their roles, either publisher or subscribe And we would also like to be able to protect the end-to-end data communication between publishers and subscribers, even though this communication is disseminated by the broker To secure communication, we rely on a transport protocol of ACE between client and broker and KDC and between publishers and subscribers, we use COES for the end-to-end protection of the data Next slide, please"
  },
  {
    "startTime": "00:12:01",
    "text": "Okay, so there has been a lot of cleanup of writing editorial fixes to this document both in version 9 and 10, thanks to Marco We made sure that we aligned better to the IETF Ace Key Cook-Con which this is a profile of And for example, we introduced the premieres X in the joint response, used problem details for the error responses and then also fix the steps for the end end-to-end data protection between publishers and subscribers detailing the COSE-enc encrypt zero object better We also now detail clearly how the NS challenge is defined separately for DTLS 1 2 and 1 now detail clearly how the NS challenge is defined separately for DTS-1-2 and 13. Next slide Okay, we spend quite a bit of time on the scope There are not many changes, but we improve the naming and the scope basically allows for the clients to ask permission on a group. This could be a pop-stop topic which is an application group or a security group where the audience is ADC. And the POPP permission details include an admin which is always zero for this profile, but it kind of sets the ground for the future work for permissions that can which is always zero for this profile, but it kind of sets the ground for the future work for permissions that could be assigned to an administrator client And then the app group kind of signals whether this is permissions for an application group or is security group and then we identify three permissions publisher and delete And then we've added some changes, more explanations about the delete operation in version 10. Next slide, please"
  },
  {
    "startTime": "00:14:01",
    "text": "We basically clarify that if the delete permission is on the application group, and there are no other permissions as please. We basically clarified that if the delete permission is on the application group and there are no other permissions asked for that, they client doesn't need to interact with the KDC or join the security group because it's not trying to protect any communication If the delete permission is on the security group, then this can be safely ignored basically. So we detailed a little bit of that delete operation use We also added more details on the key in the join response kind of changed the naming a little bit added information about the group key and group sender ID, which is used only by the publishers and not the subscribers. We also although we've listed a number of exchanges that could have between KDC and the group members, now we give more detail about them, and these include obtaining the latest information about the group, the group king material, the sender ID the way the publisher can request a new sender ID if it runs out of sequence number can a publisher update an offer? authentication credentials, and particularly leaving a group? Either client initiated, or the KDC initiated. Next slide, please We've added we use always the difficult tricking process defined in Groupcom. Now we added more details on this process and the messages, specifically clarifying that the version number must be incremented and a new group identifier must be generated and the present and the current value of the set that the version number must be incremented and a new group identifier must be generated and the current value of the sender IDs should be preserved A new addition is the replay check of the subscriber. This is built on the approach used by OSCorp, where the subscriber maintain the replay window for each of the publishers in the same"
  },
  {
    "startTime": "00:16:02",
    "text": "group. And the rest is basically tiding up the documents, providing more examples, especially for the delete operation, and etc Next slide There's not much to be done in this document, only we want to spend a bit more time thinking about making things easier for the clients to discover topic-related metadata at the broker and we will think about it few more approaches for discovery of the topic names, and then also add information about group policies per the requirement 20 from the group com profile. After that, we should be ready for last call Next slide That's it All right. Any questions? Looks like I know on questions for this one too. So thank you very much. Thank you Thank you right, up next is EdHoc OS Core Profile Oh, sorry, I thought it was moved down as I come from last item, right? Okay, so which one are we doing next? then that should be also G-M-M-M-in. That's right All right, we can do that Okay, thanks OSCOG-Madmin. That's right. All right, we can do that. I can ask for the slides. Oh, yes Thanks. Just need to find"
  },
  {
    "startTime": "00:18:01",
    "text": "them Okay, hi everyone this is Marco. This is an update on this one working group document on the admin interface at the Osgar Group Manager and as a recap, it's an admin restful interface at the group manager responsible for security groups that use group oscarus security protocols At the Group Manager, we have a single instance of a group collection resource and this resource has multiple child resources one per existing and active security group where Group is used school is used. And from a nice point of view, the interface is intended to be used by an administrator acting as ACE clients, so exhibiting permissions to operate on it And the group manager is the ACE resource server instead and for the secure communication with between the two, you can resort to the security protocol of the specific transport profile of ACE in use Let's just put some graphics on what I said. There are some admin operations specific for the group collection resource for the sake of retrieving the link of existing security groups. All of them or some of them after some filter criteria have been applied or it's possible to create a new security group with a post and as a side effect, yet another resource detailed in a separate document is also created for the sake of joining that security group for its users. Then there are separately on the right operations on the group configuration resource again, one per existing security group and the admin can retrieve the current group configuration, all the parameters only some selected ones or perform an all at once of a right of the current configuration or a selective update of some of these parameters only, or delete the configuration"
  },
  {
    "startTime": "00:20:01",
    "text": "hence the security group in question So where were we? lin march we completed the working group plus call and the version we had in March 11 was fully addressing already the reviews we got from Siegdem and Yoran Thanks a lot for that. And we had one more review from Carsten. That was essentially not addressed with the exception of NITs and editorials in a poor request that got made already. But we addressed already some additional points from the authors. So after March, what was left to do was essentially addressing the review from Carsten. That was provided off-list And that's what we did We believe entirely in this version 12 if you're curious or how that review alone got addressed, it's also confirmed on the PR number 6 on the GitHub, of course now merged into this version 12 And other than manner editorial improvements, of course, always present it touches different points in terms of IANA version 12. And other than manual editorial improvements, of course, always present, it touches different points in terms of Ianna, clarifications, little protocol behavior enhancements, and so on On the Ayana considerations, it was mostly about minor fixes on registry column names and trying to be more aligned on home homogeneous with conventions that we have already in another base registries But getting into the more interesting stuff there were a few major clarifications to introduce as early as possible in the document and the terminology already clarified the relation in URI path between the path component that is supposed to express the group name and its semantic just referring to the ABNF grammar from RFC 39 and we stress now that's slash manage that we use as your iPad from the group"
  },
  {
    "startTime": "00:22:01",
    "text": "collection resource is just an example. It's not even supposed to be named a default choice just an example In section 4-1 later on, we have clarified that what we presented as an example, again, of main administrator as since the administrator is just a case in point, an example to show that in general you may have multiple administrators responsible for the same security group and correspond resources of the group manager sharing the different responsibilities in different possible ways Carson also noticed that we were interchangeably and a bit confused using the words parameters and properties for the information element in the group configuration Fairpoint. Now we use parameters alone and we also clarify the difference conceptually between the configuration and status parameters We took the opportunity to improve on from a presentation point of view the default values that these parameters can take. We stress nothing new though the expected semantics and use of the cop location part option in the messages where it is present And Karsten also noticed that some text we have summarized at the end of the slide was originally in the security consideration, but it wasn't really about security. So we moved it up in the document because it was in fact about operational considerations On explicit definitions, it was suggested that we recapped at least the concept at a high level of secure communication association, even if that is provided by the transport profile used Now we have an entry in the terminology And when we get into defining the format of scroar per the AF data model, we also recap the concept of scope, not brand new, of course, just build on what it comes from from all out in the first place"
  },
  {
    "startTime": "00:24:02",
    "text": "and then the A's framework Then you'll see this point coming again, the next presentations, I think we adopted another proposal from Kirsten in the examples in C Cibor Diagnostic Notation to be more correct to be used during the work on the internet draft is going to be removed at publication time as an RFC, but it's intended to be a correct placeholder for values that are supposed to be picked up by your CDL data model that we have in an appendix and to be read in place of these placeholders in the examples On the topic of a complex group name pattern, that we could always use in the FData model and as a regular expression, it was also suggested to not suggest anymore the possible use of the CyberTac 35 That is not recommended for a number of limitations. So now we stick on for to 21 065 when we have regular expressions as name patterns and we have updated the examples also accordingly And on the same topic, we have an appendix that is supposed to be only an example of a possible suggested implementation direction on the authorization server for handling such complex patterns when processing an authorization request. So we revisited the appendix and written it to be a bit simple and clear And again, it is just an example There were a lot of comments on the expected atomic nature of some operation at the group manager starting with considerations and approaches to prevent or reduce the risk of risk conditions in case there are multiple administrators responsible for the same group at the group manager and clarifying exactly what must or must not happen at which resource in order to respect this"
  },
  {
    "startTime": "00:26:01",
    "text": "atomicity requirements for the different resources for the different operations of those and you can find that the details in the different sections describing the operation on those resources And still on the topic of specific operations on the resources at the group manager Karsten also noticed that we were repeating over and over the sanity checks, the permission and authorization enforcement checks that the group manager had to perform resource by resource for each operation. It got to be team tedious, it was prone to error and slight difference So we just define once and for all as soon as possible what we mean to have permissions for an administrator as if it was the prototype of a function call and then in line when we get into the right resources and the right operation we just say oh well, those checks define in shape earlier in the document are supposed to be performed, considering this exact target group name and this exact permission that the administrator is requesting to use here And it was also noted that one particular, operation follows, in fact, the semantic of the rest post method while it was presented as to be performed with put requests. So we changed the method for the request to operate on that resource to over post method while it was presented as to be performed with put requests. So we changed the method for the request to operate on that resource to overwrite at once the group configuration It is post now and finally on the specific operations patch and I patch for selectively update the value of some parameters of the group configuration we provided some more details and example or operation that can be invalid because they are invalid as a request in the first place or because they will be conducive to a wrong inconsistent or nonsense new configuration where they executed"
  },
  {
    "startTime": "00:28:01",
    "text": "So again to summarize this version should have addressed all the working reports comments and reviews now. Of course, you'll be great if Carson can also confirm that he's happy with the way we addressed his comments I think we have two editorial pending points that can be hopefully addressed in the next iterations without stopping the draftee. And further, one is five instances of an editorial note about cleric naming alignment for what particular parameter in another ACE document that is currently under AD review So we prefer not to touch the document for now, but when we got the AD review from Poland, we start working on that. We'll be sure to align that parameter name. And the second one is a comment we got from IANA last week, suggesting a particular name notation for placeholder values that wait for registration right now. And this is definitely something we can address in the immediate next version of the document. As a reminder, we have an implementation of this building on the implementation of that other is document I mentioned before and above in this slide and it's a very available openly on my bit packet so absent more issues and the authors are not aware of any at the moment we think in its current status the document should be ready to be considered for the Shepherd review and write up. Thank you you Okay, should we given that there was a fairly large number of changes since the original, I'm correct on that, there was actually a reasonably large number since the original working room last caller, or I may miss Mary misremembering? This review was the biggest one. Okay uh for my symptoms yes Carstons was very large that's what I remember. The reason I was bringing that up is because possibly before we do the Shepherd right up"
  },
  {
    "startTime": "00:30:02",
    "text": "and things like that, do you think it would make sense to just recirculate the current? version for another two weeks just to see if anybody spots any? anything, or do you think that's, we should just go forward? Up to you, ultimately Yeah, I'm happy to be surprised anyway oh um we should just go forward? Up to you ultimately. Yeah, I'm having to be surprised anyway. Oh, I don't want to influence you It's up to you. The author thinks this is ready. Okay, the authors think it's ready, I'll take that All right Any questions then? That sounds good. Thank you very much Thank you. Okay, so I can switch right away to the next one then Yeah it should be it. All right. And this is an update on the workflow and Params document Oh, somehow I cannot move to the next slide. Yeah And stop on dusk again. Let me try sharing slide control I think it works now okay awesome thank you um so as a recap, the scope of this document is a formal update to the main ACE framework specification 92200. And it started with the first two main points, defining an alternative execution flow for the ACE framework, where after issuing the access token, DAS, uploads the token itself to the resource server on behalf of the client And as a second point, we have been defining a number of additional oath parameters to use inase, some of which in support of the alternative workflow, other ones mostly in support of more efficiently distributing authentication credentials"
  },
  {
    "startTime": "00:32:01",
    "text": "especially in the case of a group audience for which the access token is issued In more recent versions, we have also proposed the amendment of two requirements on the transport profile base. It was little more than this editorial anyway. And we deprecated the original custom format of error responses in A's in favor of introduced the problem details machine actionable format standardized in RFC 9290 okay some updates in this version other than editorial improvements will then notation I mentioned before with placeholders for values to be imported in a CDDL model. It is used here to in the examples in Cibodagnost notation. So this should stay all the way until publication time, basically Right, specific on the alternative workflow we have made explicit of course that the communication with between the AS and the RS is supposed to be secured all along as expected by the main ACE frame of specification and that means that every single token that per the alternative workflow the AS uploads to DRS, is supposed to be shipped over a secure channel even the first one in a token series in addition to those issued for dynamically updated access rights. We have also added a remark, building on a suggestion we got from dave robin in Brisbane. Thank you very much This is possible to be seamlessly used also in scenarios where the clients are, well, not really ace clients They're not even aware there is an ASS and tokens involved building on pre-configure the AS that issues and uploads the access token on DRS, these clients can just go ahead and according to those configurations"
  },
  {
    "startTime": "00:34:01",
    "text": "access resources at DRS On the parameters, related to the alternative workflow, we revise the semantic of one of those token upload and we define a new one token ash that I show in the next slides So on token upload, we have that already and it used to be Boolean through or false, both in access token requirements and response. It's still using both messages but it's now an unsigned integer and at a high level it is still the same original meaning when it was still a Boolean. So India the access token request the client can include it to kindly ask the AS to consider uploading the access token to DRS on behalf of the client But now it's also taking an unsigned integer as a value that can be 0 1 and 2 at the moment It means that in the AS actually goes ahead, using the alternative workflow and the upload of the access token to the RS is successful then in the access token response, the client is expecting respectively nothing particular related to the token or only the token ash or only the access token And in the access token response, this parameter is present even only if the AS actually used the alternative workflow irrespective of the result of that operation And then the value of the parameter gives exact an indication of the result. So it's zero in case of success one in case of failure. And well, in case of failure, the access token is included so that the client can try itself and maybe can have better luck Otherwise, it's zero in case of success. And to together with that parameter you may have nothing special related to the token or the token hash or the token depending on what was indicated by the client in the access token request with that same"
  },
  {
    "startTime": "00:36:01",
    "text": "parameter In case you take the token, hash territory, well, that's included the token response, consistent with what was wished by the client and indicating the access token request. The value of the token hash is complete without going into too many details following the same approach that is defined to compute token hashes in another is document revoked token notification. Also to be consistent with that service and because, well we have defined once already how token hash can be computed. And if the authorization server provides that service for revoke token notification, and computes those token hash is based on a certain hash algorithm, then the AS has to use the same hash algorithm also to come token hash is to be included in the token hash parameter here. Of course, you may wonder, why would the client be interested in obtaining the token ash or the access token if the alternative workflow was used? and the access token was successfully uploaded by the AS to the RS? Well, the reason to obtain the token action in a way is to be able to still take advantage of the service revoked token notification if the client is interested too, for example or the reason to obtain the access token would be for the client to be able to re-upload that same access token itself to DRS which is, for example, something defined in the Oscar profile of ACE, I've seen NT203 Just some examples from the draft here comparing side by side three successful uses of the alternative workflow where you can see that in the response at the bottom of the slide, the AS is provided the client with nothing special On the left, the token ash in the middle the access token on the right, consistent with"
  },
  {
    "startTime": "00:38:02",
    "text": "the wish expressed by the client in the access token request. You have more examples in the draft Okay, more updates and this is the second major update in the draft, actually we are starting to explore an approach an efficient approach to inform B-directional access control between two devices say, DEV-1 and DEV-2 approach, an efficient approach to enforce B-directional access control between two devices, say dev one and dev two participating in the ACE protocol What you see in this slide is something that has been always possible with Vanilla ACE, as we know it You may have these two devices, the 1 and the 2 two. You want to have a primary direction, say, from Dev1 and Dev2, so the 1 can access ASA Client requests for an access token with audience Dev2 and scope access rights that are granted to Dev1 for accessing resources and Dev2. At the same time, you want access control in the opposite direction, so you want F2 to access protective resources at F1 the same time, you want access control in the opposite direction, so you want Dev2 to access protective resources at Def 1. Well, that's easily possible if the two also acts as his client, request for a second access token, uploads it at Dev1 and consistent with that access token accesses protected resources, and Dev1. Taking experience, access token uploads it at dev one and consistent with that accesses protected resources and there one taking inspiration also from an issue open on the GitHub by Christian, thanks for that. We started to explore if we can achieve the same result, but issuing only one access token that covers both directions, more efficient It turns out if seems to be possible. We have sketched the first solution already available in this version of the draft And it's important to notice that there is only one access to can to be issued, so only one of the two devices here is actually the ACE client requesting for the access token dev one in this example. So Dev2 is the only resource server in this example. Dev1 we request for one"
  },
  {
    "startTime": "00:40:01",
    "text": "access token and regarding the primary direction from Dev1 to Dev2, well, it's the same Audiences scope use the same way as in the previous case. But at the same time, this access token also includes a reverse audience and a reverse scope essentially granting dev two with access rights for accessing protected resources at Dev1. And this, of course, builds on new parameters revout and rev scope, and correspond token claims to be included in the access token yeah this just give some more details of the parameters here. It's pretty simple, device one request for an access token using, again, out-end scope like for the original case, but additional using Revoud Enverscope to specify the permissions that that one is happy to grant to the FTU for accessing resources at itself basically. So we have Dev1 as reverse audience and permissions for DevTU to access in resources of that one as reverse scope So the primary direction is based on the original out and scope while the reverse direction is based on revout and rev scope. But for both directions, of course, it's up to DAS to check the right permissions of the right devices according to the corresponding access control policies to be evaluated some early consideration of course the access control in both directions have to rely on secure communication according to a secure association established and used per the transfer proper ways in use. It is still possible to perform dynamic update of access rights, like in the original case with caveat, we have only one access token here. We have only one access token requester dev one. So again, this is possible, but it has to be"
  },
  {
    "startTime": "00:42:01",
    "text": "initiated and triggered by Dev1 requesting for a new access token in the same token series that update the access rights in one, the other, or both directions And good news for the alternative ACE workflow, it's definitely a separate orthogonal things. So it keeps working even if the issued access token is intended to support access control in both directions, very similar seamlessly As next steps, in the proactive reviews from Ayala, we got a comment on this draft two pretty easy to address we got a new issue on the GitHub also open by Christian Thank you very much on providing already some guidelines related to access tokens issue for group audiences, if relying specifically on the ANCNF parameter when conveyed in the token response and most of the work to be still done is on the alternative-based workflow in itself and for most of those points we have already pretty clear roadmap on the next steps to take in Appendix B of the document as placeholders But we also want to continue exploring the just started B-directional access control topic in particular considering a more complex setup where there is not only one AS but there are two. And in each AS, you have the two devices that one that you registered with one ACEs roll or the other, basically And till then, of course, comments, input review are very welcome Thanks a lot All right, I do have one comment slash question actually. I'm actually really intrigued by this bidirectional access control idea I think it's actually quite clever to be able to negotiate a bidirectional access control at the same time"
  },
  {
    "startTime": "00:44:02",
    "text": "It makes a lot of sense for lots of peer-to-peer communication scenarios. I was wondering did you guys get this from somewhere else? Or are there other places where this pattern is used? Because I think it's actually quite interesting Not to my knowledge. christian hopps the issue originally. Ah, Christian. Yeah, I'm just I don't know of any other place where this has been used this way I'm the motivational use case was with registration with resource the right where both parties act as a class during the setup Yeah, no, I want to think more about it because it's definitely an idea that I think is possibly worth reusing as a pattern elsewhere because it's kind of clever All right, any other questions? All right, I think we're moving on then to OSCorp profile Thank you Yeah. If it's all right, I can take the yeah, the edocos for profile, I can start with that one Yes ask, yes, I asked the slides And you should have side control. Perfect. Thank you. So, yes hello everyone. So I want to present some updates to this talk document with details on EDOC Oscar profile of ACE And yes, as an overview what this is about, well, it's a new profile of the ACE frame It's using EDDO for Kiev's devl establishment and also optionally for the actual access to well, it's a new profile of the ACE framework. It's using EDDOC for key establishment and also optionally for the actual access token upload, where you put the token in an edit item. So the token is actually contained between an ED message. That's option functionality you may also post the token normally It then uses OS core for the actual secure community"
  },
  {
    "startTime": "00:46:01",
    "text": "based on king material generated from the edoc execution And you can see here overview of the workflow you will request an access token the client is granted one, it proceeds to run ad hoc with the resource server, including the access token in Adoc Message 3. And then it transitioned using OSCOR for the actual access to the resource And then I wanted to go over some of the main updates that was done in version 5, which is the latest version So point number one was also covered in two previous presentations about using this notation for in the examples, for importing values from a CDL model And there I have two figures. One is showing the actual example with the E notation, and then on the most right-hand side you see the actual CDDL model. We have defined for a document with the actual integer values We also update the documents so that we actually use if, for instance, scope, it already has registered values, then we indicate scope and comments and we write out the actual value nine in the examples can continue on with up updates we did a number of editorial improvement and there was some fixes to diana considerations with regards to column names and the actual change controller, which was incorrect in some of the instances and we also revised and extended now detailed registration policies for a new registry, edwking information that we're defining We did a simplification of the draft so now we're very clear that in this draft only CWTs are supported as ex access tokens. So practically, we are ruling out"
  },
  {
    "startTime": "00:48:01",
    "text": "JWTs, which is in general admitted by ACE. And the reason we did this is I mean, it's a simplification really in a number of ways. And CWTs are recommended in the actual ACE framework And we felt that for the typical use case practically will be used in CWTs We made the ACE work from and Parents document an informative reference rather normative. So we just point to it as an example of what you could do and you could use that together with this profile that will be completely fine and we do take some concepts, particularly the concept of token series is taken from that document, but it is expanded and used in a customized manner in this raft So the third slide, two more updates. So number one, we clarify that when you're running end dock between the client and the resource server it can be used in both the forward or the reverse message flows and so edoc supports basically, it has two different roles, initiate and responder and what this means in practice in this profile is that the EDUC initiator can either be the ACE client or it can be the ACE resource service this allows for more flexibility now you wish to execute EDDO. And in the first case, where the ADOC client, sorry, where the ACE client is initiator, the client will start EDOC by send EDUCMess1 to the resource server And in the second case, where the initiator is the resource server, the client well, it starts with an actual request going to the resource server, but this is a trigger request that in to the initiator is the resource server, the client, well, it starts with an actual request going to the resource server, but this is a trigger request that in turn triggers resource server to respond with add-up message one. So it's resource server that will be sending ad hoc message 1. And"
  },
  {
    "startTime": "00:50:02",
    "text": "this allows for more flexibility in how you choose to run it. And now what to actually choose, what to prefer? Well, it depends on the deployment setting and we have some text in the draft commenting on this It mostly is relevant to which identity wish to protect the most because in ad hoc, the initiator's identity is protected against active attackers And a related point to this force point is that since we're allowing for both the forward and reverse message flow, now we're allowing the access token to be transported in any of the four possible ed ad-book messages. And each of these ad-up messages has the EAD item where you can basically place additional data that you wish to convey So if you're talking about the forward message flow, you would use the EAD item one or three and in the reverse message flow you would use EID item two or 4 And again, what use, well, it depends about, well, first of all, the flow you're using, because the flow will take you, you have two choices depending on the flow, and second, security and privacy properties you wish to achieve And this is something we plan to add more text about in the draft, and there's also an open issue about this point but we want to elaborate on this further in the draft text So going to some next steps, what we're planning to do we want to add consistency checking of the authentication credentials from the different edoc fields. So what this means is that if an eduk ID item, is transporting the CWT, which includes the client's authentication credential, then we want to see that authentication credential from the IDCRED field in the actual eddoc message is the same as the one indeed item. So, so practice because edoc of course it says already has a field to transport authentication retention"
  },
  {
    "startTime": "00:52:02",
    "text": "And what we're saying is we want to see that that's consistent, whatever you transport in ADOC is consistent with the actual authentication credential in the CWT itself it's just a really consistent check, I would say. Yeah, we got this was also mentioned in two previous presentations, same I IANA feedback. They requested that we had an new column called original specification in the OAP parameters cyber mappings of course we will do that Want to further elaborate and describe on actions to take if authentication credentials have been invalidated or deleted, for instance, they can be revoked and this can be either for the clients authentication credential or the resource service authentication credential. Here we can build on an expect on guidelines that are already written down in the Lake Edoc implementation contract considerations document Yeah, we want to expand because now we allowed or we explicitly said you can use the EDUC rewards measure flow, but we want to add more text described in more detail how you practically use it and also like some example on this is how it looks if you're using the reverse message flow in this profile We want to perform proof of possession of the client's private key at authorization server. So when the authorization server receives the clients authenticate credential in directs the parameter, of the access token request, the authorization service should do some type of local possession of that credential And lastly, we want to discuss how things will work if you're using access tokens issued to a group audience to have some more discussion and guide on how that will work Yeah, so that's it for his presentation. So presentation. All right, we do have a question Christian"
  },
  {
    "startTime": "00:54:01",
    "text": "Christian, I'm curious about that consistency check Will that rule out that there can be both a CWT as used as the ID credit I? and then a CWT used to convey authorization information? in the same step because i'll have to check when there is concrete text but there are applications when it's desirable to have the authentication part and the authorization part separate. And without that, consistency check, that there needs to be some consistency check but the consistency check is not necessarily that those are the same items but just the those are related well overall what we had in mind is that they are in fact the same, but you had some use case in mind where they would develop and be different yeah basically one one would be a more long-term credential issued and the other would add the rather short-lived authorizations in there We can take that offline. Let's discuss more because we had in mind more an absolute match but yes, let's discuss further definitely. Thank you. All right, Marco Yeah, hi, Christian, are you question. As far as I imagine it, it will not be ruled out because the consistency check is between ID credi or credi in the ad hoc message and the CNF into the access token That's the credential of the client and initiator again. So what you have in mind is to be possible into the access token, that's the credential of the client and the initiator again. So what you have in mind should still be possible. Thank you Yeah, thank for a clarification I prepare to share or change to the next slide set Yeah. So let me do it like this"
  },
  {
    "startTime": "00:56:01",
    "text": "Yeah, I asked again to share the slides yep it's coming up and so this is for a piece who are following along. This is the group profile section There we go yeah Right, so now I'll move on to presenting the group of score, ACE Profile which now is the latest version 2. So let's see if I can switch it Yes, I can switch the slides. So yes, it's a recap. What is is about. It's about defining a profile for Ace for the group of score protocol. And what is? does, it enables access control for accessing resource at group members because group of score it's essentially an extension of OSCorp, providing secure group communication And when the profile is using Group of Scores is a security protocol between the C and the resource servers And before you actually use this profile, the group joining procedure happy first, and that's defined in other documents most particularly they is keygroup com osco document and the actual access token it will be bound to the already existing group of score security context and the authentication credential of the client that the client is using in the group and some important properties we have for this is when we do approval session of the client's private key This is achieved when a first group of score requests is verified and so group of score also supports two different modes, the group mode and Parvise mode, where the group mode has a signature attached in a Parvise mode uses the development to calculate p-to-peach symmetric key"
  },
  {
    "startTime": "00:58:02",
    "text": "Parvise keys, and well, the profile supports both those modes. We have proof of group membership for the client, and we also have mutual identity when a first group score exchange is complete completed So expense a bit on the features and the snares where you may want to use this. It's for application scenarios where you are using group communication and a client wants to access resources at multiple resource servers And again, the point is to enforce access control within the group for resources at the servers And so we want to separate these two concepts group membership and access control, meaning that, just because you're a group member, that doesn't mean or should imply any particular access rights at resource servers So we separate the concept of access to the secure group communication channel through membership. And again, that's about other documents. And this draft is about access control to the resource space provided by the service in the group. So after you have joined the group and you can communicate in the group but you should there's access control to the resource based provided by the service in the group so after you have joined the group and you can communicate in the group but there should still be a way to enforce finding access control within the group. And again, this also follows the zero trust paradigm um because we say basically that trust is not implicitly granted and we have access control enforcement as granular as possible And then I want to go over some of the other of the updates that was done in version two. Again, this is the same point as before. I don't have to reiterate it by using this E apostrophe construct And we also updated examples to use the registered values when available We renamed the context ID in also updated examples to use the registered values when available. We renamed the context ID input parameter and claim to ESS context ID, simpler name, and this also"
  },
  {
    "startTime": "01:00:01",
    "text": "parameter and claim to US context ID, simpler name. And this is also more accurate and consistent with some definitions we have in 311 and 322 sections We revised one example in figure six showing a CWT claim set using Cibur encoding. Now, well, it's consistent with the several variations from the CDDL model we define towards the end of the document. And we also now use more meaningful values in the actual example for instance, for IAT and X Yeah, we fixed Diana consideration similar fixes to the previous draft I present and then we need the number of needs and editorial improvements So then I want to come to a little bit larger update. So at the moment, this profile as it is does not and cannot support the update of access rights for a client, like other transport profiles of ACE does. So what we've done, now is we added an initial roadmap text and placeholders and us get sketched plan. How do we enable the support for update of access rights for this profile? And this mainly touches three sections, section three sections we're talking about the C2A access token request And then it also touches section four about processing at the RS. And for both of the sections we have a small placeholder and we're pointing to section three to one we have the bulk of the plan, let's say And in section three to one, this is about C2A C2AS access token response, but here we have a number of notes and plans for forward. And this is basically the plan and what we're planning to do is define the processing of access token requests from C for updating for dynamically updating of access rights and what we want to do is we want to use concepts"
  },
  {
    "startTime": "01:02:01",
    "text": "that are defined or to be defined in the work impairments document specifically the token series concept, which defines a set of consecutive access tokens for the same C and RS. So we want to use that concept in a particular way in this document And associated this concept, you have a token series ID. And this is an identifier of a token series. And that's the actual what we actually want to use here in this document as a practice and as a token claim And well, how will this work? The plan is that in the ASOC responds to the first request for an access token, the AS will include the token series ID to make the client aware of the ID. And then when the client wants to request the token for updating access rights it can include the token series ID to inform the AS that this is about this token series and also that it wants to perform and get a token for update of access rights. And you can actually omit other parameters that you had included in the in the wants to perform and get a token for update of access rights. And you can actually omit other parameters that you have included in the request for the first access token And then in the actual in access tokens of the same series, but you will have the claim token series ID with the same value and when such a token is posted to the resource server, the resource server will be able to see that value and thus understand that okay, this new token I received, it's about update of access right and it's intended to supersede my currently stored access token with this token series ID So we're really building around this concept to enable the update effect access rights. Because this is being done, already in workflow and params, we don't have to define such like a new similar concept in this talk Yeah, and then we had one"
  },
  {
    "startTime": "01:04:01",
    "text": "more, as I would say, bigger update. This is about class clarifying that when using this profile, resource servers, may want to be prepared for storing multiple access token per proof of possession key And basically in RFC 9200, it's recommended, an RSC is recommended to store only one access token per pop key. But what we've expanded on and detailed in now in this year, is the new section 4.6 when we say that well when using this profile Anores might have to deviate from that recommendation because there can be scenarios where this um following that recommendation is too inflexible, basically So for instance, if you have a client C, we where this following that recommendation is too, inflexible, basically. So for instance, if you have a client C with an authentication credential outcred C, as its pop key, well, now it may appear a token T1 and a token T2, but both to that Othcred C obtain a token T1 and a token T2 bound both to that OTHC. And okay, what kind of situations can this happen in? Well, we have three concrete examples listed. Number one is that the resource server belongs to an audience old one and at the same time a group audience old two. And well, you have your T1 target, odd one and T2 targeting OD2 two while still both bound to oldcc so if this these two tokens are posted to the RS, the ORS may want to be prepared to store both access token even though they have the same hockey. Second scenario is the RIS member of two Oscar groups, G1 and G2 where they both rely on the same format of the public attention credentials. And in this case, it would be about T1 targeting and reflecting the membership of G1 and similarly T2 targeting the group G2. So again, you have two tokens with the same"
  },
  {
    "startTime": "01:06:01",
    "text": "pop key third scenario is that the RS uses this profile of ACE and a different profile which also relies on the symmetric pop keys And in such case, well, T1 can be issued to be used with this profile and T2 issued to be used without the profile. And the same problem will occur So we clarified just to give a heads up that an RS may want to be ready to be deviate from this recommendation from 9,200 yeah and then I wanted to go over some next steps, what are we planning to do? Well, number one, we got feedback from an IAN wanted to go over some next steps. What are we planning to do? Well, number one, we got feedback from an Ianna review on section 113. And this is similar again to what I mentioned for previous draft we should add this original specification entry to the old parameter C-BOR mapping strategy and secondly we want to mention that, well, the ACE alternative workflow is an example that can be used together with his profile and as point to it, to point that it exists and that it's, it can potentially be used with this profile. We want to provide some guide on for instance what if you have a situation where a client wants to use both OSCorp and group of score to communicate to a particular resource server. But in such case, we should use both profiles and one token per profile, meaning that it first uses the group of score profile of ACE and then it uses the Oscar profile of ACE so we just describe that and you know explain that it's possible and some explanation on how you may want to do that in the best way We won't, yeah, again, this is coming back to what I was mentioning enabled dynamic up update of access rights, building on our roadmap And finally, we want to consider setups where you have multiple application groups and security groups And there could be scenarios where a client"
  },
  {
    "startTime": "01:08:01",
    "text": "wants to get an access token spanning multiple application and security groups as things are currently an access token can only target one security group so we wanted to elaborate a bit on exploring how we can make it possible for an access token to target multiple security groups Yeah, thank you all for listening That's the updates ahead All right, one from me it's probably perfectly fine to do the one key with multiple groups, but the one thing I would ask for, yeah, this one thing I would ask for is carefully write up in the security consideration sections, why nothing goes wrong if you do this, and if you can't successfully write that up, then we have a problem. But let's make sure we document well exactly what the security considerations are that allow it to be okay to violate the RFC 9200 recommendation yes good point what we put in section 4 should also be reflected in the security considerations and we should analyze what we're proposing within the security considerations, yes All right, Christian huitema kithms is uh mentioned plans for tokens, spending groups um are there ideas yet around on how to express this code? that might use different expressions? between those groups? So for example, when one group has an AIF path rest, scope expression and the other has an AIF other AIF expression, how those might be combined. Would that be like a composite? scope from both? that how are there plans yet or there or this is this just early exploration we have some plans on that exact"
  },
  {
    "startTime": "01:10:01",
    "text": "point you mentioned with different expressions or different semantics of the scope. We haven't considered that point exactly. Overall, our yen general plan or impression is that we may need to make some parameters that are now single parameters we may need to make them structure parameters. You can have multiple values where today you could only have one for the new parameters we're defining in this document Thank you All right, any other questions? Okay in that case, I think we're done for today. Thank you, everyone, for your attention Thank you"
  }
]
