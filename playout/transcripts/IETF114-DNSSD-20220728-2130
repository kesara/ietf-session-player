[
  {
    "startTime": "00:00:10",
    "text": "all right we're gonna wait like two three minutes to leave some time for people trickling and then get started and in the meantime if you're not um on the meat echo then please scan the qr code yeah do we have volunteers to take minutes and or jabber scribe thank you stuart much appreciated can anyone be the jabber scribe it just means watching on the scribe and if someone says make colon you relay what they say at the microphone we'll smile at you to thank you you won't see it through the mask but i promise i will i thought i can do that it's a very low effort role these days and can we have a backup to take notes from what stuart is saying when stewart goes up to the microphone who would be willing to do that it's a collaborative tool so you could just add edits and it works really well it's funny i've never seen everyone look at their email so intently than when i'm looking for a minute taker yeah well let's look at the remote people too see who's in there thank you so much"
  },
  {
    "startTime": "00:02:18",
    "text": "most centerpiece of the thing is bottle yeah looks pretty gross actually yeah uh what's going on stewart all right yeah sorry we forgot to copy the agenda in there my are bad um sure should we get started yes all right hello everyone and happy thursday uh my name is david skenazi and this is chris bucks and we are here to talk about dns service discovery um this is the note well note it well um this is thursday so most of you probably have seen it before but in case this is your first meeting we want to insist on a little bit you when it whether you're registered in"
  },
  {
    "startTime": "00:04:00",
    "text": "person or remotely you agreed to this note well and if you haven't read it before don't try to read it off the slide the font's way too small but it really matters into what we do so for example when you say something or type it in the chat or on email you it it it triggers some requirements with regard to intellectual property and it also says that you agree to follow our code of conduct luckily that we haven't had issues in this working group but i just want to talk about it to guarantee that we keep it that way all right next slide please uh also a reminder for folks who are in the room uh at this itf maxx are required and you have to wear one of those fancy certified ones um if you don't have if you only have a cloth or another one they we have free ones by the itf uh registration and the only exception is if you are actively speaking up here at the chair desk or at the front uh under the anvil there um because we're far from the rest of the room next slide uh we've so thanks stuart and dave for taking minutes and who's doing jabba relay oh i am right i'm sorry i'm very tired it is thursday uh next slide please all right here are some useful links if you're seeing the pdf on there don't try to click that screen next uh similarly we have a github organization um ted we should sit down uh virtually at some point to get everything on github on there that'd be nice but maybe not for the ones that were about to send to the isg because they're almost done but for the new for new adopted work i think that would be nice uh cool next slide"
  },
  {
    "startTime": "00:06:01",
    "text": "uh so an update on our currently adopted working group documents so the srp draft has been in working group last call for a year to the day actually um and those comments were addressed two weeks ago so we're going to chat a bit about that and hopefully start a second work group last call and send it to the iesg in the near future uh the update lease document was adopted a little under a year ago we had the comments during adoption were addressed the that's not a whole lot of revisions but it's a pretty short and simple document so we expect it to um be ready to progress as well and we'll talk about that a bit and of course if anyone has objections we'll give you an opportunity to say so and the advertising proxy document was adopted last august and then some comments were addressed and that one still needs to work so that we'll discuss it in the working group all right next slide and then we have some individual drafts that were published last year and some of them were updated right before the draft deadline so we can talk about those and one of them is expired um all right intentionally all right so we can remove it from the uh from the list uh we can talk about that one later uh our current agenda is kind of going through these drafts in order i realized that we kind of tweaked the agenda a little bit talking with ted and we forgot to update this slide but uh talking through the working group drafts their status then through the ones that ted would like to see adopted in uh the nearest future and then some open discussion time um so would you like to bash the agenda that is not on this slide are we missing something so uh i had suggested that maybe we want to talk about uh unicast's dnssd but if"
  },
  {
    "startTime": "00:08:01",
    "text": "time allows but i don't know if that needs to be explicitly on the agenda yeah that sounds great it is on the agenda that is listed on data tracker so we do plan to cover it yes cool next slide please uh oh right yes and i forgot to mention in the agenda that we had a little presentation from our area director eric about a newly formed dns director tell us more about that eric well actually soon to be formed so next slide very quick so tim wichinski you mostly know him the chair of deprived and dns uh let's make some stats by looking by the word dns in the file name for the internet draft as well as in the abstract about 59 of was cash since april including three no surprise from this working group but as well from others so next these are basically non-working group documents right so not yet adopted and in some case it is nothing to do if you look about the the potential like a group name it has nothing to do with dns of the private dd or the nssd so we may assume that the knowledge the dns knowledge of the people in those working group is not as high as in this room or other room like dns hop so the fear of the ign we have seen is we received document that has gone through working group last call working group last iatf last call arrived at the isg and then we spot some dns issue it's a little bit late in the process so what we want to do is recreate a dns directorate so that any working group based on the chairs of those working group can request an early review by the dns directorate so next slide so we got a meeting uh with add dns of dnsdsdn and deprive"
  },
  {
    "startTime": "00:10:02",
    "text": "shares plus the isg and a couple of the two meetings actually to create this dns directorate next week or a couple of weeks we will be sending an email to the community including this working group asking for volunteers to be reviewers early reviewers of course you will not review all documents coming out from any working group only the one those working group thing there is a dns there a fully qualified domain name local or or some reliance on dns and like in older iterate there will be reviewers we are looking not only for expert and i'm looking about the two dns mdns expert there to be at least one of the two right because mdns is special especially really but also in operation in privacy and so on as well as junior people right the aig really wants to get a pipeline of talent so one way of growing talent is start as a junior reviewer perhaps your review won't be the most perfect one but you will learn how to do it and learn by mistake you need to learn on the job so it's a point to everyone around to marry and myself we will basically select those reviewers small group normally and we are also looking for two secretaries so tell the people they say oh we got a request from working group foo which is the next reviewer so it's a kind of a clerk or bookkeeping thing a misrative thing that you do once a week typically and you select the right reviewer and that's basically this i don't know unsure whether they are questions but basically there's a call for a volunteer i will send over and we'll send an email end of august about this after the vacation okay thank you"
  },
  {
    "startTime": "00:12:02",
    "text": "thanks thanks eric does anyone have any questions for eric and i want to underscore the point that like you don't have to be the person who invented dns to be on this directorate knowing a little bit about is purely sufficient and it's a great way to know how atf works and to see documents that you might not know so if you're interested or have questions uh talk to eric he's very nice he is all right so where do you want to drive the slides uh let's uh why don't we try with you and see how it goes because i always have trouble regulating my breath when i'm talking into a mic with a mask on so i apologize um so first we're going to talk about document updates next slide so the main document that the working group still has has uh outstanding for a long time is the srp service registration protocol document and that document was in pretty good shape when we did the last call we got a couple of additional comments um and i took kind of a long time to get it done and and um while i was working on the final update um actually before i did the final update i updated the tsr document and i realized that there were some terminology problems with the srp document so the first and fairly substantial change the srp document is just changing all of the sort of like server client service zones things like that getting that terminology correct some srp clients are now requesters srp servers are now registrars srp request or srp registrar depending on where you look and that just reduces the confusion there are a couple places where we talk about dns update clients those are still called dns or dns update requesters i think and then dns servers are still called dns servers um so and then i noticed when i was doing the update"
  },
  {
    "startTime": "00:14:01",
    "text": "that the text that describes the discovery of browsing domains was wrong so i fixed that that was just me nobody commented about that in the last call unfortunately we're doing another last call so if anybody thinks i'm wrong about that they can correct me and then there were just a couple of comments from esco about suppressing unusual unusable records which is something that came up when we were talking about the advertising proxy and also clarifying the service discovery instruction section he found kind of unclear i thought it was perfectly clear i wrote it but uh but he had some suggestions and i hopefully it's clear now so we still need esko to tell me that i actually got it right and we may do another cycle on that and the chairs have already decided we need a working group last call so um any questions about srp nobody's coming up to the mic uh next slide so hold on before we move on just to confirm for everyone the uh working group last call has been kind of going on for a while and a lot of folks have forgotten about it and i wouldn't blame anyone for not remembering what they said a year ago uh it's been a while so we're gonna officially have a second working group last call the really for a real last call that's gonna like we're gonna start it very soon and last for two or three weeks and hopefully if everyone can take a look especially like these terminology changes i know every time i do replacements like this i get one of them wrong so please take a look and then assuming that um esko was okay because he had some comments before and no one has some serious comments then we'll send it over to the isg and so if anyone has any concerns with this approach please say so now or doing the working group last call all right thank you thanks now next slide oh yeah there we go um yeah so the other uh the other document um that's sort of"
  },
  {
    "startTime": "00:16:00",
    "text": "close to or hopefully at time for wglc is the update lease document um again the terminology change is a little bit more restricted here because the update lease document is not actually an srp document so we don't talk about srp requesters we just talk about dns requesters dns update requesters um the document was um it's been around a long time and when i was reading the document and i i saw we did actually get some comments you guys said there weren't that many comments but we did get a couple comments and and the comments seemed to largely be a result of failing to understand the behavior that was being described so i tried to sort of organize things a little bit differently and talk about like the server behavior and the requester behavior for each type of message the update message and request message are actually the same message just in a slightly different context the initial update is obviously the initial one and then refresh messages come later um and uh so there was also a question about like you know disambiguating whether like like the behavior for refreshment messages was was was explained as being different than the behavior for update messages but that assumes that the uh the server knows that it's a that it's a refresh message because there isn't any signal in the message that it's a refresh message so um so there's some text in there that just kind of clarifies that and talks about like well you know if the server knows it's a refresh message it should do this but if it doesn't know then obviously it can't it's going to just see it as an update message and this is what will happen if that's the case so hopefully that's clear but you know if if folks see that and it's not clear to them please obviously bring that up in the last call and there was also a question on the handling of the keys key lease interval and i updated that somebody asked whether there should be iana considerations originally there weren't iana considerations because"
  },
  {
    "startTime": "00:18:00",
    "text": "the eds zero option has already been registered however the registration for the edns zero option is actually not consistent with other eds zero option registrations and so i added an in a consideration section that just like fixes those inconsistencies um and also requests that the the entry refer to this document and not to draft sakara update lease um so uh thanks for the folks that reviewed this and um i claim this is at least ready for last call in the sense that you know there may still be more things to do but a last call will hopefully catch them it's not so immature that that's going to be a problem uh oh sorry we had a uh meat echo failure right here um well while chris tries to fix that um i think if you start sharing again it might work oh no you or just oh no it's working um so yeah from the church perspective this draft has gone through many revisions but we're not you know required to go through many revisions if it's something simple and so we think that a working with last call will be a good way to get people to review and flesh or hash out any remaining problems so we're going to have a group last call that has the same duration as the second one for our srp at the same time because it makes sense to page both of them into memory together and we ask that folks please take a look we'll want at least a few reviews before we progress this to make sure that we catch any mistakes and then we'll progress them to the ahd and if anyone has any concern with that please come and speak up now or during the working group last call that's also a perfectly valid time all right by the way i just remembered uh the reason for the key lease uh documentation update was that"
  },
  {
    "startTime": "00:20:00",
    "text": "somebody asked like why do we have a key lease thing and not like just generically for any kind of thing and that's because this document didn't reference srp which is what needs the key lease so i added that so just for completion or completeness next slide um okay so advertising proxy update this is actually um this document um i think we're converging on where we need to be but um it's this was a fairly substantial up update and re-reorg i i don't actually remember the details of how it was before but basically i divided the document into talking about the different functions that the advertising proxy needs to do i also updated the introduction and the the uh the abstract but but this is the main updates were about how it functions and it's kind of interesting like the taxonomy that i came up with actually isn't talking just about the advertising proxy it's talking about all the things that need to be present in a thing that acts as an advertising proxy that's also doing srp um and uh because you could be doing srp to just a regular authoritative dns server it doesn't have to be an advertising proxy and so that actually wound up like it's still basically talking about the advertising proxy but there's a bunch of stuff in there that's you know you could argue isn't an advertising proxy like like uh you know there's uh the srp registrar function basically is an authoritative dns server when you're doing an advertising proxy in a stub networks context it might be bi-directional and you might have different things on one side than on the other and so uh you know on the stub network side you might need a discovery proxy serving information about the uh infrastructure network side for those of you that don't know about stub networks that's what the snack buff was about earlier and um since we're i don't think we're going to"
  },
  {
    "startTime": "00:22:01",
    "text": "i'm not going to go into detail on that but if you want more details about that you can ping me on the mailing list and i suspect we'll wind up discussing this on the mailing list um so discovery might i suggest if you want more detail read the draft that too but and you know and tell us and if there's anything unclear ask on the list because ted will answer the questions and also clara improve the document so i think that's a great way to make sure we publish good documents yeah yeah i mean absolutely you know we we have to we have to uh people do need to read this document to see what you know to find bugs in it um but i can help point you in the direction of other documents you should read although actually if you don't see the pointer in the in the draft then maybe it needs to be there so um anyway the other thing is uh if it's acting as a discovery proxy and it's acting as an authoritative server for the stub network it may also need to be a full service resolver for the stub network so then the question is like have we just stopped talking about the advertising proxy and really we need a separate draft for this or or does it make sense actually to talk about all these functions in this draft so that's a question the working group needs to answer um i kind of think it makes sense to talk about the whole system in one draft but you know that's my opinion so i don't want to i don't want to assume that i'm correct that's just how it looks to me um so that's that's the basic uh status um and you know i think the document is fairly mature but but as we discussed earlier it probably needs a bit more work and definitely needs more reading thanks um could we have some volunteers either in the room or remote to say they'll read the draft and send comments your comments could also be just looks great to me but we'd love to get more folks to to read it anyone like to volunteer to read this document thank you jonathan um hui"
  },
  {
    "startTime": "00:24:00",
    "text": "stewart if you could put that in the minutes anyone else let me check the chat joey oh joey as well thanks awesome no thank you that's very helpful uh and i see our ad in the queue yeah uh eric link quick question and quick suggestions i like the idea to keep the discovery proxy and the full service resolver in the same document but i would suggest to change the title yeah then i think that's coming if we have to if we do that yeah okay okay perfect yeah and then my intention was to bundle those three documents in the same cluster before the isg evaluation so to keep them together because it's way easier to progress all together if it's delaying everything six months or one year then this may be not a good idea so at some point of time i think the author of the working group and the chair we need to understand how to proceed those three together because it's way easier for the rest or separately yep that makes sense i i think it absolutely makes sense to progress them together if we can um hopefully we don't need to make too many more changes we did a pretty i mean i tried to do a pretty thorough update but obviously one person writing an update doesn't mean that everybody's gonna understand what i wrote or agree that it's the right thing so hopefully that won't take too long awesome okay that sounds like a good plan and we'll see based on the uh how the review looks if we think we're in a place to move them forward yep not too long after the other ones okay next slide okay so um srp replication this is not a working group document i'm just telling you guys about it because i think it should be a working group document we now have two uh implementations uh the open thread has an implementation apple has an implementation uh we have not done any drop testing and i know for a fact that the implementations are currently not interoperable that's because the the open thread implementation did a bunch of new stuff that the apple"
  },
  {
    "startTime": "00:26:01",
    "text": "implementation has not yet tracked so there was an update to how replication servers discover each other um this has been i this is by the way there's been a criticism of like this being the ted show i just want to be clear that the all of the updates to the latest document were actually from upton and jonathan so uh so upton and jonathan are both at google and both work on open thread um so um this document um i think is actually fairly mature it's a fairly complicated thing that it's doing um i think it's a really interesting thing that it's doing um and hopefully there's i mean general general interest in it um i'd like to see the working group adopted it you know i think it's ready to adopt at this point whether the working group is ready to adopt it is another question but but it's it's in pretty good shape yeah i think we're pretty close our thing we discussed this among the chairs and what we were thinking is the two documents that we're going to start the working group last call for as soon as those like the working coupe last call is successful and we send them to the iesg then we'll start the adoption uh that way we keep the amount of work in the hub not too high but uh on that note if anyone has concerns on this document and would think that adoption would not be the right play a thing to do um you have some time here to come and and say why uh because we'd love to hear that of course there'll be a formal adoption call maybe in a few weeks on the list where people can also phrase concerns but just wanted to make use of urban person time in case someone has concerns okay thanks uh not seeing anybody come up next slide okay so i can't remember if i presented this at the last meeting um this was definitely i think we did um so this is a document that um talks about a kind of an edge case that"
  },
  {
    "startTime": "00:28:01",
    "text": "becomes a problem when you have more than one advertising proxy acting as an srp server and they are for some reason not in sync and there are a couple reasons why they might not be in sync the normal behavior of an mdns responder that has that has authority for a particular name is that it's going to go out and try and see if there's any other mdns responder out there that has authority for that name using a probe and if it discovers if it gets a reply back with an answer with data in it that conflicts with the data that it has then it's going to tell whoever told it to advertise that data you know it could be a server it could just be a program that's doing that but in either case basically it's going to report back a name conflict and so the idea is first come first serve whoever advertises in mdns a particular name first gets it somebody else comes along tries to advertise the same name they lose um and that makes total sense when you've got like a printer coming onto your network and it's got a particular name and you want it to always be advertising that name you don't want some other printer to come along and get the same name and confuse you however we've been doing some fun new stuff in in the dns ssd working group over the last few years and one of the things we've been doing is srp and advertising proxies and an advertising proxy basically so srp updates a dns authoritative zone notionally at least and an advertising proxy reflects the contents of that zone to a particular network link or links using mdns the problem with that is if you've got two advertising proxies both of which can in principle receive srp updates from the same srp uh what's the word requester thank you it's a new terminology to me um so so if you um"
  },
  {
    "startTime": "00:30:02",
    "text": "if you if you have um if you have two srp one srp client two srp servers there are situations where an srp requester might have registered with a particular srp registrar and then it's unable to re-register with that registrar when some information changes prior to the lease on that information on the original server expiring so we use the lease on the server to expire stale data but sometimes the data needs to be refreshed before it's stale in fact frequently when there's an event like a you know in a thread network for example we use srp and thread networks are our self-organizing mesh networks and you can have some kind of thing like somebody closes the door and suddenly the mesh can no longer see like it's been divided into two meshes and each one of them has a different srp server now you have a client that might have registered with the srp server that's on the other mesh that it's not on so it's going to re-register with the srp server srp registrar that's on the mesh that it's on and that srp registrar is going to get new data and we want the new data to win so remember this is we with mdns we have first come first served so that means that the old data is going to win which is exactly what we don't want in this particular case and so the time since received spec is basically defining a new eds zero option or actually it's a new uh sorry it's a new dns rr type that's mdns specific it's not really intended for use with dns um but this new rr type um allows us to say when in seconds in the past we received the registration for the particular information that we're advertising over mdns in our mdns probe and so if another server is also doing tsr"
  },
  {
    "startTime": "00:32:03",
    "text": "then it's going to get the it's going to get the probe it's going to look at its time since registration like when it received the registration and notice that its registration is older and because the tsr is there it knows that we're not doing first come first serve we're doing freshest data wins and so it's going to relinquish its hold on its old data and now the uh the new registration is going to is going to take over so that's kind of the primary motivation there are also some other edge cases with srp replication where you can have a momentary conflict that you'd rather come out with the new registration winning their srp replication will ultimately clean things up but you you'd rather not have to deal with that so uh so this is this is a document that i think is pretty important for the uh for the srp plus advertising proxy situation um and i'd like to see the working group adopted it's pretty simple um that said when we did our initial implementation we got it completely wrong and so fortunately stewart sorted us out and we managed to get it to work so so that's why the document's been updated so thanks so similar to the other document we'll be waiting a little bit until we get the other ones out the door uh and then what would be really nice if um we got um uh so we haven't you i see you have a co-author from apple which is awesome and it would be great if you had someone maybe interested in another implementation as well uh you know we're talking to on minimizing it being the ted show um so maybe you know we don't have time we don't have to make an absolute determination but if you can try to find someone else as well who's willing to help who's maybe from a different affiliation i think that would probably make the document stronger um but otherwise yeah if anyone thinks this is interesting and wants to learn about how writing rfcs is this is"
  },
  {
    "startTime": "00:34:02",
    "text": "a great opportunity for you and you don't have to be an expert to write an rfc like none of us were when we were right wrote our first one right yeah and also you have experts on hand so you can get advice from them um and you don't also you also don't necessarily even have to be an expert on the protocol the main thing is like you know people make comments somebody's got to update the document and you might have a discussion with the authors who are experts on the protocol to figure out whether what the person says is sensible and how to address it but it doesn't have to be that like the person updating the document is like a super protocol expert who's done an implementation yeah so if you're interested reach out either you know in person after the session or by email to to the current authors or to the chairs whatever you prefer okay so that's all of the document updates if anyone has any questions about this documents or comments this is also the time otherwise we're going to switch to the next set of slides all right so by the way that document uh about uh discovering dns servers um is actually the one that expired the one that expired is actually germaine to the next discussion oh perfect yeah so so these slides are basically here uh for the purposes of discussion or just presenting the problem depending on what happens if nobody's interested in discussing this then nobody's going to come up to the mic and i'm just going to breeze right through these slides and i'll explain them in some detail and hopefully that will be useful to people who are listening and you'll get some ideas and come back on the mailing list but definitely like if you have uh something to contribute or you know some questions or whatever in the middle of this presentation don't wait until the end of the presentation come right up it doesn't matter if we get through to the end of this presentation or not we're just the whole point of having this presentation is to have a discussion about"
  },
  {
    "startTime": "00:36:01",
    "text": "making unit unicast d and ssd real so let's go to the first slide so uh state of the art we already have a manual unicast dnssd you can update his own file and if you do like if the the ietf has has his own file and if you do a dig then you'll get back you know this i i'm assuming you know a little bit of dnssd terminology so if you dig for an iprinter at meeting.ifidtf.org you get back a couple of pointer records and if you dig down into those you get the srv records you get the text records and so forth and you'll be able to print um so so if you have like you know pretty much any commercial operating system and also linux it will be able to discover these printers and print on them cups will find these automatically if you have cups installed and then also we have sorry stuart from apple um probably most of the people in the room know this but i just want to check it because there might be some who don't um the reason ted is showing this is not because we expect anybody to be typing dig commands right if you're on your iphone and you press the share button on a web page and go to print you will see that ietf114 printer shows up in this available printer right and that's because your iphone is doing this query to ask this network are there any printers i can use so that's uh maybe that's obvious to everybody but i just wanted to make sure yeah the reason i put the guts up on the slide is actually because i there could be some dns people who don't know dnssd that well and i want to just give them a little view of the of the guts of the protocol but yeah that's absolutely right this is this is all done automatically you never want to actually have to type this stuff in so uh anyway moving on to the second piece of state of the art and this is something that if you uh if you buy like a uh an apple uh homepod mini or apple tv and i suspect there are other devices that do this but"
  },
  {
    "startTime": "00:38:00",
    "text": "i don't know the details um like this is this was me actually doing a dig at my apple tv using mdns to discover the apple tv and then look up in default.service.arpa which is a domain that we happen to support for doing this kind of lookup uh any printers and it did an mdns query and it responded with a record with a ttl of 10 that pointed to my brother laser printer at home so that was all done automatically that's that exists you can buy things that do that we have an rc that describes that it's really cool um and then uh we also have srp updating a dns authoritative server again uh you know like if you have any sort of thread border router including an apple tv or a mac mini the latest ones um they support srp updates and they support the advertising proxy of course the advertising proxy isn't really unicast but i mention it because srp is um just to give you an idea of what what building blocks we have already built what we already have available to use um and uh this is all this is all in open source code so it's not like it's just an apple proprietary thing i think that open thread has implementations of most of most or all of this stuff yeah jonathan knows everything about open thread so next slide do you mind me jumping up and in um let's go back to that slide because um i think ted sort of glossed over like i mind a miracle happened and um you know it might be you know it's the kind of thing that would be good to explain with the picture so where ted shows that dig command office.local under discovery proxy um i would just want to say a couple of sentences about more what's going on there"
  },
  {
    "startTime": "00:40:00",
    "text": "traditionally today on most of our home networks devices using multicast dns are multicasting the whole network and we know that multicast on wi-fi is slow and unreliable and wasteful of spectrum and when you had two or three devices on a typical home network that wasn't a big deal now if i had up all my home kit devices and the garden sprinkler controller and the solar panel inverters there's more than 100 wi-fi devices on my network and when my iphone is looking for printers it multicasts every device saying are you a printer and all the light switches like no i'm still a light switch stop asking me so so what ted did with that command was instead of multicasting the whole network he sent a unicast to in this case his homepod and said look you probably have a cache that's up to date could you just tell me if there any printers without bothering everybody and um if if the homepod doesn't know it's going to multicast on your behalf but if somebody else asked the same question two seconds ago you don't have to spam the whole network with another multicast the homepod can just say yeah here's the answers and so this is the first step in the direction of trying to make a lot less use of multicast on our home networks and move more of it to unicast yeah i'll say two things that stuart was polite enough not to say one is ted you forgot the motivating slide which i did oops sorry um and two is um mdns is actually really smart like it's insanely smart it does all this cool stuff to avoid multicasting if it doesn't have to and so um every mdns responder that you have sitting on your network and every apple device you have every android phone you have every windows machine you have is doing this all the time they sit there and they listen for mdns packets and they're just passively snooping on the network all the time and"
  },
  {
    "startTime": "00:42:00",
    "text": "they're building a little cache that contains all the information about all the services that they've seen advertised on the network if anybody ever asks whether there's a service present all the other devices that are on the network get that multicast and add the service to their cache this by the way explains why mdns is sometimes flaky if you have a network that filters out uh multicast packets then the cache building algorithm uh may make a mistake because you know somebody sent out a query it didn't see any responses and so it assumes there aren't any assumes that it also wouldn't get an answer if it sends out a query um and so you know if you have something that's suppressing multicast then you can wind up with an incomplete cache and uh negative responses when you should have gotten positive responses so um the discovery proxy is actually a really useful piece of technology because it takes out all of these mdns responders sitting around doing anybody can talk to a discovery proxy and get the same exact behavior as if they were talking to as if they were doing mdns themselves except that they're not doing all of that multicast snooping and they're not doing all that multicast uh broadcasting they're just you know they just send a unicast to the discovery proxy and the discovery proxy takes care of it for them so um so the motivation with unicast bonjour is um in a sense to get rid of of multicast on every link um or at least every link where we care about getting rid of multicast and that means every wi-fi link because wi-fi is not great with multicast if you have a a wi-fi mesh it's hard to get multicast to work well on a wi-fi mesh for you know complicated but probably fairly obvious reasons um and so being able to to do unicast instead of multicast in the same context and get the same results is a pretty clear win and so the question is can we do it and so the point of this slide is to talk about what pieces we've already done let's now go on to the next slide"
  },
  {
    "startTime": "00:44:02",
    "text": "so what would it take um we need to be able to find the unicast dns ssd service right so thinking about the previous slide i just happen to know that office.local has a unicast dns ssd service so i did a dig pointed at that and i got my answer how did i know that because i just happened to know that all apple tvs have that and i happen to know that that was the name of my apple tv and so i could type it in obviously that's not going to do it that's not automatic what's that yeah yeah and i wrote it sorry step one for using this get a job at apple yeah i i know so much more about dnssd than i did before i started at apple it's very exciting um so um so we need to be able to discover the dns ssd service we also need to be able remember we want to do unicast in both directions right we don't want to just do unicast for discovering services because that's not as good as doing unicast for also advertising services so um we need to be able to uh to discover the availability of an srp registrar on our local network um and uh i don't know why i said as above um oh discoverable no i don't i still don't know why i said it about i know i had a reason i just don't remember what it was um but so it's an authoritative dns server um that is being maintained by srp um we we need a discovery proxy because um stuart knows why i said as above uh i i think i know what you're trying to say um we have this is like two sides of a coin yeah we have clients that are looking for services want to discover a discovery proxy that can do that on their behalf and that eliminates one side of the multicast devices that want to offer services on the network want to be able to discover a registry that they can register with and those"
  },
  {
    "startTime": "00:46:01",
    "text": "sound like very similar things and they are very similar things but one is a client looking for services and the other is services seeking to offer their services make them visible to clients right i think that's what you meant by yeah yeah so and um we need to uh let's see so yeah we need to we need to bear in mind that there are going to be devices on the network that don't know how to do srp right so like you know maybe i'm going to cram srp registration into some future version of some you know operating system but i can't assume that my brother printer is going to ever get a software update to do that so i'm still going to need to be able to do mdns to discover my brother printer hopefully future brother printers will fix this and maybe i'll get a firmware update but i can't count on it so we have to have a discovery proxy to to just get us the legacy clients the legacy services i should say we need a full service resolver um the reason we well so first full service resolver what what it gives us is that when we get a query uh for stuff on the local link the full service resolver you know on port 53 or whatever the full service resolver knows oh i need to go into this database to get that information not just forward it to my isp and the other thing is so we have all of these devices that are consuming this service but what if the service goes away we may not need this it depends on how we're doing the service if the service is provided by the network like by your home router well when the home router goes away okay you're not going to be able to do mdns but your home router went away you don't have wi-fi it's not going to matter that much when it comes back you'll have it again so we don't need to solve that problem but suppose that for example we decide that that because home riders don't currently offer this functionality uh maybe we want to offer this functionality that"
  },
  {
    "startTime": "00:48:00",
    "text": "you can discover through mdns right discover you know the replacement for mdns using mdns and then you can stop using mdns until it goes away uh well okay so if it goes away then we need to fall back to mbns that's the point next slide so um and then another thing to think about and this is actually a hard problem um is how we address the various ways we could deploy this so a typical way to deploy it would be that you've got a single link in your home network and you just need to be able to do what you're already doing right right now you can already discover your printer on your home network you only have one link um and uh you know we just want to replicate that same functionality um another use case is where you have pretty much the same setup except you have some stub networks like you have some thread border routers or whatever that are connected to your home network and you'd like to be able to discover the services that are being advertised by hosts on the thread network as well as the services that are being advertised on the wi-fi network um you might have a multi-link network that's that's somewhat managed like a soho network or even an enterprise network um and then so that's like what the network looks like and then there's the question of what the service offering looks like so so the service i'm talking about here is the unicast dnssd service so that service might be part of the infrastructure it could be something that comes on your home router uh it could be something that doesn't come on your home router if it doesn't come on your home router then maybe we want to offer it using mdns as i said earlier um it could also be managed by like you know an i.t staff right so there are a lot of ways this could happen so my point in putting up the slide is not to say what the deployment models are but just to talk about the deployment model problem so that we think about that next slide and then there's like the naming model so um"
  },
  {
    "startTime": "00:50:00",
    "text": "you know the naming model for multicast dns is really simple everything ends in dot local right you can advertise names that don't end in local and mdns it's not forbidden and in fact i've used that functionality joey wrote some code that uses that functionality so so it does work but generally speaking when you're doing service discovery uh with mdns you're using.local so one naming model we could use is to just replicate that like you know if you say local then we do unicast dnssd to do the resolution for whatever is in dot local and dot local just means the network link that i found this service on right so you know you might have several network links um and each of those network links with multicast dns is its own little dot local those network links can actually have conflicting information on them which is a bit of a problem um and there's no way to resolve that because the links aren't connected to each other so there are problems with using.local that way but you can use local that way as long as you're willing to accept those failure modes so one nice thing about using.local is if the if your your dns you know all singing all dancing unicast dns sd uh discovery service goes away then you don't need to use a different name when you're using mdns so there's an advantage there again i'm not saying what we should do i'm just describing some of the issues and some of the ways we could think about this so another approach which we actually have been talking about more when we were doing the home net stuff we talked about this and i think the discovery broker document that stewart did a while ago which has expired talks about this and also the document that expired that we were talking about earlier talks about this and that is just give every link a a global name so every link has a name that is that is unique to that link and whenever you want to discover services on that link you use that name and so uh you know mdns dnssd has this concept"
  },
  {
    "startTime": "00:52:00",
    "text": "of a legacy browsing domain and that's a list of a legacy browsing domain list and that's a list of domains that you sort of by default you know in your legacy behavior which we never actually figured out what the non-legacy behavior was so legacy behavior is the current behavior um you just do service discovery if you get a if you got a question like give me the list of all printers um and it doesn't specify a domain then the legacy browsing domain is what you use to iterate across the set of domains on which you're going to do that service discovery so so we could do that and we could the legacy browsing domain on any given link could be um a list of all of the the per-link names uh that are present in the local infrastructure right that's one way to solve this um these aren't necessarily mutually exclusive either right you could you could say you know whenever you do a local query that means the link that you're attached to but you're also allowed to do um you know you could do the same query by specifying the link the global name for that link and you would get the same list of answers so that's another approach so again i'm not prescribing anything i'm just saying like here are the naming models that we've we've been talking about and we need to figure out if we're going to do unicast dnssd we need to figure out how we're going to approach this we may come up with an approach that says you know in the most simple case we do local but we need to have this per link naming thing in our back pocket for the more complicated cases or we may say you know we really should do prolink naming because gosh that really solves the the name conflict problem nicely right so anyway those are those are some topics next slide i don't know if we run out obstacles yeah so um yeah one issue i was talking about legacy browsing domains one issue is the legacy browsing domain only works currently at least on apple"
  },
  {
    "startTime": "00:54:01",
    "text": "platforms i don't know if this is true of other platforms if you don't specify a domain to to do service discovery in all right you just you pass null in for the domain and then it gives it uses the legacy browsing domain list as the list of domains to do queries in a lot of people pass.local and so do we need to override that um we have to kind of answer that question uh when we're thinking about the domain uh naming or the the link naming problem um so um you know if you do there are advantages to doing perlink naming as opposed to using.local if you do perlink naming then the name of the device doesn't change depending on where you are um if you don't do perlink naming or if you do perlink naming and do.local then if a device was discovered using local then it also has this other name which you could potent you could potentially use to talk to the device but you're not going to because you know the device by its local name which is not valid everywhere is that a problem i don't know if that's a problem that is just a thing to think about so we have a question thanks steve my name is subidas i just want to ask you a basic question when you say link right is it a and also you have a example of wi-fi right so is it the link means an ip link or is it a wi-fi layer link like a layer tooling yeah so i'm using wi-fi as a shorthand that's a good question i'm using wi-fi as a shorthand for the infrastructure link which might be a link that's bridged between ethernet and wi-fi or might be wi-fi only or ethernet only it doesn't really matter i just used wi-fi as sort of because wi-fi is the usual right right yeah also the reason i'm asking is that possibly even stuart know that"
  },
  {
    "startTime": "00:56:01",
    "text": "in wi-fi new evolution happening with multi-link device right so today if i have a one radio in one link that means i have a full stack to the ip on that particular link even in so what is coming in future is that multiple links layer two will represent that one interface to the ip so that means i can have two links right with my device and i'm operating but i'm connecting with one ip link to the router to the back end right so i can then if i send a query right i can actually send only one link not the all links right so i'm just trying to understand that scenario that when the query goes will that query go to every wi-fi link or the query only go uh you know only one link to the network right i think stuart has an answer for that i'll just say for my own opinion that that that's a question we need to answer uh what i was actually going to say is um i'm not actually aware of what you're talking about with these new developments in wi-fi so thank you for coming up to the microphone to make us aware of that and we're kind of out of time now but we should definitely talk more and learn about that yes yes so yeah just to give you know since i'm also involved there so next generation wi-fi which is wi-fi seven which will come in 24 right that's the market uh we are looking at i think what is happening in ieee is that a a device can have multiple links both for the endpoints and that ap and then it will only uh open up one interface to the ip and they don't hide the multiple lower links it's it's interesting because the use case that i actually care about is the exact opposite of the one you just"
  },
  {
    "startTime": "00:58:00",
    "text": "described i want to be able to connect to multiple ssids using a single radio right so one thing one thing also we all know that you know in in ieee terms they don't talk about ssid right that's the deployment model right so that is of course something will evolve and how those are configured right but the way that things are evolving is that there is no visibility for the ip that the underlying the multiple links are and also it is allowed that device can have one at a time say two or three links but it can decide or operate only one link you know at a given time but it can have at least two links and that's where it is evolving well i certainly look forward to seeing this stuff when it when it's available to look at that sounds very cool wait for wi-fi seven yeah thank you cool thanks sabir yeah dave and i think we're gonna cut the queue after dave because we're almost yeah i'm doing this because i just figured you were about to do that i'm to take advantage of having been a note taker to continue sue beer's uh theme of expanding use cases um mdns is starting it adopted in the parallel universe called storage uh the end nvme over fabrics is the successor to iscsi as a network storage protocol nvme of is not an ietf protocol but it's using mdns to solve the discovery problem it's going to be doing it in exactly enterprise networks and the big ones where you don't dare let the multicast domain scale over over even a small portion of the network and so it's headed right for the for the problems this group this working was taking up this is another place to go looking for people who might be very interested in implementation can you uh you you actually know those people it sounds like um i got to be careful because one of the one of the things that gets in my"
  },
  {
    "startTime": "01:00:00",
    "text": "way here is that nvme uh protocol development work is done under an nda so i have to have discussions like that with someone who's asked who's comp who whose company is under the same nda and i apologize for that difficulty totally understand um the reason i mentioned it is because it might be possible for you to tell them to talk to me so that they don't have to tell me anything about nvme they just need to tell me about what they need from me um we'll have to we'll have to look at the details here unfortunately storage is different enough from a printer that you will need to understand why the problem is different okay well we might also be under the nda i don't know anyway uh let's see did we cover everything yeah okay uh yeah i think we pretty much cover so so basically you guys now understand the problem all right well thanks so much for all the presentations ted thanks so much for everyone who participated that was some interesting information that we didn't know that's really helpful and thanks to our note notetakers jordan dave and i guess to our jaguar scribe me you're welcome uh and thanks everyone for coming uh happy rest of your itf week and we will see you on the mailing list i hope we'd love to get as much review of the documents as possible any time 10 knows"
  }
]
