[
  {
    "startTime": "00:00:09",
    "text": "uh all right everybody welcome to the jmap and extra session at iatf in vienna and remotely uh thanks for joining us there's a few people here in the room probably a few more remotely i'm having to pop up here to this microphone to speak because the table microphone is dead so i'm just going to drag this back down to the desk while i read through these initial slides and then we'll get straight down to business so this is this is the slides we've been given here uh we're doing both chairman and extra the plan is to the gym at first there's about 75 minutes of that and then about 45 minutes of extra according to what we put into the agenda but of course that is things will change as we go the noteworld i think everyone in this room has been in additional sessions this morning so you've probably already seen this for everyone remote everything you do here is covered under the note well so you you have to follow the iotf's processes and policies little tips for people in the room uh there are qr codes all over the place that you can scan from your mobile device or you can use the little mobile device on-site tool thing otherwise you can log in with the full meet echo client if you would prefer either way logging into medieco is the way that you indicate you're present for blue sheets everyone remote obviously has already done that cool um links to resources you can find all of this directly from data tracker so i won't spend long on this page here's the agenda for the jmap session so planning to start with jmf s mime because that's with the editors already then work our way through the active drafts with each person speaking to what's happening with that and finally review our milestones and then we will"
  },
  {
    "startTime": "00:02:00",
    "text": "do the same for extra starting with with things that are further along and going back to things that are less far along so with that said any agenda bashing before we get started all right my co-chair is remote here jim if you want to take notes or or put snarky comments whatever you want to do that's all good give us a wave nice to see you awesome all right so the first on our list here is the s mime do i have any slides for that i have s mime signing but not for jffs anything to say on that alexi if you want to pop up um yeah alexey melankov uh not much really i think all the uh feedback is addressed i think um i copied the old niels convention for underscores and stars around various elements and rfc editor is asking what is this so i i did my best to replace it with the xml v3 emphasis and [Music] strong elements hopefully i did it correctly and so there is just a few minor formatting things and it should be done maybe even uh announced this week cool fantastic thank you next is actually me with gmat blob so i'm just going to stay seated in this chair since there's a camera pointed straight at me anyway i put in quite a few changes based mainly on jim's feedback and discussion with neil about the fact that blob set was not really quite the right thing for it because there's no state for blobs and there's no update or destroy this only create so blob upload is is basically a set that"
  },
  {
    "startTime": "00:04:00",
    "text": "can only do creates it still creates creation ids because you need to have them to be able to back reference which is the large point of doing inline blob creates i also removed the catinate both because what even does that mean nobody knows and because it makes it much simpler if it's always just a list of of bite sources octet sources in order that you append together to create a final result which could be zero if you're uploading the nothing file or it could be one or more sources also made the capabilities simpler you used to be able to specify a maximum applied upload size for blob and if you didn't specify it there then it should get it from the upload endpoint if you didn't specify that like not either you specify it or the client can just assume it can send what it likes and the server will reject if it wants to anyway what is that this is the example as you can see it looks beautiful um it works on my computer interoperability is a thing ah no libreoffice breakfast of champions um all right so what you can see here is that instead of it saying create and then an id and then just text the data as text it's got a data and then an array and then the data is text item in it s1 hash within an array it does um are we done it's this was in working group last call it's a fairly significant change um but it's been posted for two weeks now and i told everyone on the list so if you have feedback please send feedback if not i'll ask jim to push the button and send it off to the editors does anyone here have feedback"
  },
  {
    "startTime": "00:06:02",
    "text": "yes yep um feel free to push the button pop up whatever you want um just just go talk to the microphone it's fine just tell people who you are you don't need to do this oh there you go you beat alexi by a millisecond so you're first hence okay um so yeah basically um sorry okay the basic things i looked at was a little bit also from a migration perspective so i wondered um there is this um the way i understood the blob gap thing is that i could specify which properties to get from the server right you can specify uh the range that you want from a blob exactly so my question would be because it was not explicitly written down if i i think in theory i could only include size and would just get the size of the block right yes you can get the size of the blob and you can get a range from within the blob okay because um it might be worthwhile in my opinion to point that explicitly out because this is the only single operation which will only give you metadata from the server without having the server to touch the actual files on disk okay this is an operation typically we do for instance during some scanning kind of operation exactly and this is a reason why i would say also for implementers to have that in mind cool second related thing is actually so the question is would there be a case actually for a list or blob thing um in case you know you want to have a full migration from one mailbox to the other one obviously you could get that from the actual items where you get the references from but sometimes it's more handy also for some reasons for polarization also if you oh let's check that while we're stopped who was uh who was"
  },
  {
    "startTime": "00:08:01",
    "text": "speaking i didn't catch your name still didn't hear that all right uh let me bring you the microphone here you go okay so so so this is hubble hello should i repeat everything or yeah okay i give it short so i have basically two remarks so first remark is um on blob get as far as i interpret rc it's possible to explicitly mention the properties to retrieve from the server so it should be possible for instance also to only retrieve the size which is basically a metadata and sometimes it comes handy to only get set data before deciding maybe you know for forgetting uh knowledge about the size calculating some duration and so on without having the server read the file physically or something like that so it would be helpful i think to point out this possibility also for implementers to make that distinction in the implementation to make it more efficient to read size only that was my first remark and the second question was if it would make sense to have something like list all blobs in order to have the possibility to read all blobs from the server in order to transfer them somewhere else for instance i need to come and grab this i think this is the one that works was listed by meet echo as being remote so yes because he's on the full client um medicare doesn't know if you actually remote just knows which client you're using i understand so uh to respond to that second one yes it would be possible to add a blob query i imagine um service might reject it but they can reject anything um certainly the ability to look through"
  },
  {
    "startTime": "00:10:01",
    "text": "everything um it could be quite a lot of data but yep um okay i think alexia is next let me give you back the microphone um i'm sorry can i be the naughty child in the room that i haven't read the latest draft i'm not always okay so um i think taking out catenate for simplicity is probably fine can you just remind me what the use case for it was was it like i'm a catenate kind of case right to answer that uh what i did by taking out cat mate was made everything a cat note so instead of having a type that was either a single item or a type that was a list of items it's always a list and so you list may have only one item in it but instead of having a key called catinate that meant concatenating multiple of these together everything's just a list we good now hello hello i don't know can you hear me yes yes oh good okay um fine i i think that that's the right way to do it then perfect cool next on the list was neil what um yeah i just wanted to say i'm not sure about having a blog slash query and i don't know that's a good idea um like the point of this draft was to be able to do kind of in band um you know upload and download of blobs so it's kind of the same functionality you already have but"
  },
  {
    "startTime": "00:12:01",
    "text": "um just without having to have a separate connection for those if for some reason that's what you needed uh but knob slash query is quite a different functionality uh and also is a bit weird with you know blobs not a base type in the same way a normal managed object is you you don't have state strings to be able to do um change tracking and stuff i don't it just seems a lot of extra stuff to add without really thinking about it yeah i guess to respond to that a little bit it's it's not going to be that they can change blobs are immutable uh so it's more just a list of all the blocks on the server including ones that maybe aren't referenced by anything um if you if you're using this as a replication mechanism between a system and a hot standby type of thing then doing a an rsync type situation where you fetch the full list and then grab blobs that aren't copied across would allow you to do a failover safely so i imagine that's the kind of case that's being looked at here um the the main issue with it is it's a lot of data so you'd have to page it or something and because there's no state string pagination becomes quite difficult there yeah you wouldn't know they actually can always find the references from the objects themselves yeah i think that should be really the encouraged way all right thank you any other comments on blob or shall we move on all right thank you i will i guess post responses to what's happened here to the mailing list um possibly do an updated draft with the the advice around fetching size from blobs and then asked him to do a working group last call again uh yep"
  },
  {
    "startTime": "00:14:03",
    "text": "hi i'm eures baum i just have a question about the is it still planned to to make a new document based on jmr blob management extension for files or jmf for files or something still in scope of the that's separate from blob but self blob is just for creating creating the blobs which you would then add to files so yes that files is still something that that's that's interesting okay but yeah it would it would use this as an upload mechanism rather than extending this document well it could maybe that could also be the place to have like a query functionality i don't know if it probably will have more metadata associated with all yeah the thing is you might not have your calendar events and your emails appear as files via the files or storage node api yeah so you still need to be able to get the look at all the things that you're interested in to find out which blobs they reference okay cool oh that's not what i meant chair slides so um back on the chair slides for a second next on our agenda is jmap quotas uh yes hello can you hear me hello yes yeah yeah hello i'm renee so yeah uh i'm gonna uh present quickly i mean what's new in gemma quota not so much to be honest um [Music] do i control the slides or not uh you can if you share them would you like me to do that"
  },
  {
    "startTime": "00:16:02",
    "text": "uh i mean you can just push it's just one slide after this one if you thank you uh so i mean there's not much changes lately but i mean thanks to neil that did a few more feedback so [Music] i think it's pretty stable now also in kota capability i mean yeah it was useless to have kota ids we can just fetch them with a quota slash get method for the scope and resource type as well i mean we don't need to specify the some custom extension i mean we can just keep it simple with the standard and if people want to [Music] make extensions of it i mean they can they can do it themselves and then the resource type just uh renaming size to octet so it's uh it's more clear about what we want here and uh and limit as well a bit more generic definition and uh that's that's pretty much it so if people have questions or maybe feedbacks on kuta's uh i mean yeah you're free to ask questions here or to to answer the mailing list as well okay i guess i can uh give you the handbag uh bronn yeah cool go ahead alexis yeah just uh my apologies i haven't read"
  },
  {
    "startTime": "00:18:00",
    "text": "the latest document but now that the quarter i'm up quarter rfc is about to be published i i can you i can give full attention to your document to make sure it's you know consistent uh with mine or at least if there are differences then we discuss and you know agree why they are good thing okay yes basically uh i thought i haven't read the recent version but i'll have a look okay thank you alexa all right anybody else all right right thank you guys all right uh probably after your review yes yeah i think okay i will do i'll do a working group last call on this document and that will that will lead us to reviews uh next up is jmap sharing so um i guess i can share it and then oh no sorry being shared fantastic i do not need to do that or is that me sharing it's hard to tell i think it's you sharing it's me sharing so i hit share and it says a new slide deck has been shared which is not true it's me trying to look in here to see if i have any slides for james sharing and i do not appear to have anything yes sorry about that i don't have any sharing i just had some calendars sharing though actually um it's pretty complete i was just somebody look at that again um before this meeting and i think uh it needs some a bit of wordsmithing just to make sure everything's as clear as possible but it it you know it's reasonably short it's"
  },
  {
    "startTime": "00:20:01",
    "text": "only kind of 10 pages i think in rc format um and reasonably straightforward so that one could possibly progress pretty soon um i don't know whether we want to wait to do it at the same time as calendars and stuff but it's not exactly tied to it it's kind of it's related but i think just yeah go ahead in that case so one more update and then working group last call yeah i think that should be fine cool i don't have any open issues or no any concerns particularly about that one yeah anybody have anything for sharing guys let's move on to calendars where i've got a few things to discuss all right i will find the calendar slides and i think i can pass control over to you neil oh yes excellent okay cool okay so um [Music] since the last meeting been quite a few updates uh we've got quite a bit of implementation experience with this now which has been great uh mainly for servicing just little edge cases which needed to be properly documented um uh so that's obviously why we do that before we try and publish this uh there are still a few questions also that uh came up while from the implantation experience so i just want to talk through a few of those and see what people in the room um have to say about things any thoughts so i'll just step through that now uh now the first one of these is actually one of those ones where when i was writing it up i realized that the answer was kind of obvious but i'll just talk to it briefly anyway because it's kind of interesting um there's a concept that i've called uh"
  },
  {
    "startTime": "00:22:00",
    "text": "whether the server is the source of an event um and i wonder whether that's actually the best way of naming this but essentially this comes down to whether it was created on that server or whether it was created say on completely different server run by different company but you received knight message that added it uh and the the that affects a few things in terms of how it behaves um for example whether when you update the event sending an rsvp or whether it's sending out the invitations to all the other people uh and you can't just look at the apples uh here um uh because you have full permission to edit it it's just that actually you shouldn't edit most of it because you're not really the one that controls it and another update may completely blatant your changes so generally clients already have this concept i don't know what other clients call it necessarily uh but they look at the organizer to know and see is that someone they know is you to determine whether they think this is the source or not but that won't necessarily work in all circumstances because you might have a per event or per account reply to address which lets you do some nice other things um but it means it's not necessarily easy to work out whether this event is uh the source of this event is this server that you're on or somewhere else so basically the episode of this is i think we probably do need to add a new property to the event that the server will set when you create it for the server to say does it think it's the source that's spent or not uh so the client can change his behavior based on this uh so i guess first of all just any objections to that and also does anyone know of a standard naming for this concept or other names or who should i stick with sauce that's kind of the name for that you go ahead barry this is barry lieber uh how about his controller i mean does that"
  },
  {
    "startTime": "00:24:03",
    "text": "ring better than source certainly reasonable um it's what i was going to say and it's the word you were using to describe the concept as you were talking about it right one thing i did want to add to this is that um let's turn myself off all right the one thing i wanted to add to it is that for import export you will need a way to set controller on the server tell the server you're importing this data and by the way you're taking over control of it well i don't know about that because so so it's defined at the moment in the spec of um that the server is the source if it will receive messages sent to the reply to sent to the organizer essentially and so it will know that even when you import them you won't need to set it explicitly uh it's just the client can't necessarily know that it doesn't know all of the addresses that the server might receive stuff on but the server does so i don't know you do need that to import it's just a matter of saying that there has to be some way to set it on the server but not necessarily via jmap i guess yeah the server has to know what it can receive on but yeah i don't i don't think it needs anything to dream up particularly for that that's more about identity management really cool that's read-only but mutable it's it's read-only but yeah i guess potentially mutable by the survey if it changes yeah who what which stresses it receives from my suddenly inside actually i am now the source of this event i guess cool joris so i just wanted to um state that i also added a source property for jmf for tasks currently so this this is supposed to signal if a task comes from a"
  },
  {
    "startTime": "00:26:02",
    "text": "originated from a web application or a mobile application so just to put that out there that it might be confusing to have is source and source at the same time with two semantic different semantic meanings i i've certainly thought i wonder if like his remote event or something is you know switched around the thing rather than use controller i don't know maybe people can think about it in email list if they have other thoughts but yeah it looks like source is not the best term to describe here so we should come up with something better because it turns out to be a reasonably important concept that's referenced a few times in respect for different behaviors here yep that seems fair okay let's move on call the property aquamarine and everyone more okay um so the next question is back about about default calendars uh and you know first of all does there have to be one for each account um or can there be none set which basically means at that point you can pick whichever calendar you want if you need one um like to add an incoming invitation to for example um we the expected company says no which is based on our previous discussion uh because as i recall just because it's like you're picking one at random anyway so you know why why bother just say explicitly i didn't pick what i don't know which one is default but it but cal dev mandates one it uh i think ken reminded me so perhaps we should match uh so anyone got thoughts on that and then also it is mandated like what happens if in various education i'm not sure whether it's for this or the previous thing but jim go ahead the end of the source discussion um i haven't had a chance to think about"
  },
  {
    "startTime": "00:28:00",
    "text": "this very much but is there a by the way i've got a long echo that i'm hearing so that's why i'm uh talking a little bit in here i'll try to ignore it but is there any sort of a security aspect to who has the right to send um uh an update to an event and uh is there is there a question of whether the gmap server can be trusted to not uh change that that property inappropriately so this is talking about the source stuff again i presume um i think yeah you you we presume that you trust your own calendar server um to not do something deliberately malicious um because it has all of your data already anyway uh um and in terms of uh processing the updates and the security bits around that whether you should accept like a change of stuff that's kind of out of scope of jmap that's part of it really okay thanks barry that's barry lieber this this back to the default calendar thing this seems to be analogous to the imap inbox where imap specifies things that um you have you have to have an inbox if you delete it it gets recreated uh with inbox if you rename it then a new one is created with the name inbox you probably don't want that for this but maybe you want to do the same kind of thing with this as imap does with inbox so basically alexa just said so basically you're just say you're saying yes to default and i'm saying yeah probably especially if caldev requires it it would be useful to have that specified as some uh standard behavior"
  },
  {
    "startTime": "00:30:01",
    "text": "in in jmap calendar okay uh ken richardson yeah um i'm clearly in favor of default calendar as it's made by caldev and if you've got a server that's automatically processing itip whether it's implicit scheduling or or via imep you need to put new invites someplace so if the user expects to receive invites they need a calendar and they need to tell us which one it's going to go to and if you've only got one calendar well then that's the default if you've got more then you tell us which one it's going to be but i think we need to have at least one calendar if they expect to have scheduling work so does that mean there must always be at least one calendar in the account i presume which is fine i guess and also yes i'd say yes so cause yes because if you don't have any calendars what's the point of so then what happens if you try and delete the default i think is the next question i'd say you'd have to create a new default before you delete the existing one you just can't if it's currently the default if it's the only calendar you have i'd say we we prohibit you from deleting it and barry gives me a thumbs up so he's in agreement with that and i guess well i if you look at the slide then you also get questions of are there other conditions like what if this is a read-only calendar so i can't actually add stuff to it so i have a calendar but it's not sufficient to be my default calendar if that makes sense do we have restrictions on what can be said that's why i said it's analogous to imap in imap the inbox can't be read only and um like i said you can't fail to have an inbox yeah yes so this is kind of again based on what pete and barry just discussed perhaps the what we do is you do not"
  },
  {
    "startTime": "00:32:00",
    "text": "have to have a default calendar but in that case you aren't able to schedule yeah if all you want are read-only calendars because your subscriptions fine but don't expect invites to go anywhere because you've got no place to put them as pete said it's like the inbox right if you don't have an inbox you're not receiving email but you can certainly read mail on other mailboxes there are certainly servers where you cannot have an inbox and then when mail arrives it gets auto created and then the mail put in it this is robert speaking so um i have to say i don't care so much if a default calendar must be specified so i find it perfectly reasonable that the default calendar id and the preferences might be null but it of course must still be then we could still state that servers might then pick whatever calendar they want to put an invite into and if there is no calendar as we said has been said before while then there is no no invent can't be delivered at all anyway um but separate from the fact if you can set or cannot set the default calendar id to null um what we are doing in our current implementation currently we allow to delete the default calendar but we immediately pick a new one so um this might also be stated in this back then that the server might pick a new default calendar immediately after they destroy or implied not that depends on the implementation um yeah actually that sounds quite reasonable to me because that that's yeah let's deserve it to decide it doesn't actually have that's interoperable you know regardless or whatever does because it tells the client what it did yeah then i think it might make sense if we decide on that to put it also in the spec where it's currently saying that um it's possible to destroy default and then it's set to null still make clear that the server might choose what what it seems appropriate in that situation and that being said for participant"
  },
  {
    "startTime": "00:34:01",
    "text": "identities um the which we which we mapped to the caldf uh calendar user user address set property i think these should these two properties in cal def and jmap should be aligned um but the califs back in 6638 definitely says that if the if the property is destroyed in caldev then this disabled scheduling for that um account so uh in that regard it's in that regard it speaks to me that the participant identities in gmap must be non-empty as well i think it shouldn't implement the magic that if there are no participant identities then scheduling is off if i would have thought probably the server well the server obviously is allowed to reject anytime do you try and destroy stuff and like i would imagine it won't let you destroy whatever your you know your username identity for example you might let you destroy extra ones you've added but not yes um what i'm trying to say is also that it shouldn't be a magic by having or having not participant identities to allow scheduling for an account or not if if that's if we want to disable scheduling for an account there should be some appropriate flag yeah yeah whatever yeah yeah all right okay uh alexi uh very quick note maybe it was sort of overtaken by events but then the question i would ask is what are the benefits of not having a default calendar maybe answer to this question will help you decide i don't know yeah it's more kind of a data consistency thing it's hard to you know if if you say you have to you can't delete the default one so you have"
  },
  {
    "startTime": "00:36:01",
    "text": "to you have to end up doing this dance where you create a new one assign a different default then it's it's easier i think if you can allow it to delete delete the default but then there's the question of what happens at that point basically and that's where i specify that and actually from my map experience there are certain operations that allows allow multiple outcomes and it's actually having multiple outcomes is more difficult to code for clients so if you can decide on one then you either don't allow deletion or if it's deleted it can always be recreated unless there are reasons not to um but if you can't you know the two choices might be okay okay yeah the cases like undo are particularly messy if the server starts doing magic under the hood and you have to work out that magic if you accidentally deleted your last calendar and then you've got a whole mess to clean up and the offline case where you've you've scheduled a bunch of operations you don't necessarily want all the default calendars changed meanwhile and so one of my operations failed anyway all right um this is santiago again um one more point so i think i'm also in favor of having definitely a default calendar because i'm not aware of a single other system that doesn't have that so some systems even only have the default calendar groupware systems and so on um i also wonder um you know from a ui perspective if there wouldn't be anyone what would the ui display would it you know need the user to create a calendar first i think that would be also very weird um and another point it was mentioned before if i delete the default calendar some other calendar might be promoted to be the default calendar i just want to raise a point that um typically the default calendar in most systems since it pre-exist doesn't have a particular name so some systems give it a you know some weird name like default or the identity of the user or something like"
  },
  {
    "startTime": "00:38:00",
    "text": "that and so some systems might get confused if the default calendar after such and delete operation and another calendar is promoted to be default has now a proper name so there might also be internet internet generalization issues we set because uis will have the default calendar displayed typically with a predefined string in the system and not with a user given name and that might be broken if you promote another calendar this would be the default calendar so the case i'm making here is probably not being able to delete the default calendar and make another calendar as a default calendar i yeah i don't entirely agree with that yeah yeah yeah i i i think i understood that um like you can choose a different calendar to be your default like in caldave and it can have a arbitrary name we don't you know i don't think any client just shows the word default server can always um if it has yeah exactly i mean it's not a strong point but certainly it's something from my experience with clients that might lead to weird results even if it's specified yeah camera just said again um i can't speak to the interrupt potential problems that hans york just brought up but to try to clarify my previous thoughts on this and wrap things up so my opinion is if the user expects to have scheduling they need at least one read write calendar the default calendar essentially is a user option that if they have multiple read write calendars they tell you which one they would like new invites to go into it's not a mandatory thing on the server it's a user preferences this is where i want to see all my new invites that's really all it is in cal dev um and i don't think we should make it more than what that is in gmat so it's it's a user preference if they want scheduling you have to have at least one read write i don't care if you call it default or not because it's only"
  },
  {
    "startTime": "00:40:01",
    "text": "one so it's the default by default yeah you know it's it's really in the concept if you have more than one read write calendar all right should we move on yep let's move on thanks for that everyone um so this is about um default alerts on calendars so uh we've discussed this bit before that you can have specified default loads on cameras and then you can specify on an event to use default alerts and just get whatever the ones are on the calendar that's in um so the first question is about if i create a new calendar should i should the server copy over uh the default alerts from your default calendar if you have a default calendar i think from the previous discussion um because at the moment the the spec just says the default is null so if you create a new calendar it doesn't have any default alerts until you explicitly add them um i think again while i was writing up this slide i came to the conclusion um and so i'll just see if other people disagree with it which was that this can actually made vendor specific because the way jmap works the server will return if it created if it said anything like copied over the ones from your default calendar um and uh if you if and the client can always explicitly set null or whatever he wants on create if he doesn't want the server to pick something so does anyone disagree with that in the queue so let's just again so given what i had just said about the default calendar being a preference as opposed to an actual entity i would like to see default alerts maybe be attached to the principal or whatever whatever we're calling that in jmap since that's yeah the trouble is thing on the server regarding the user"
  },
  {
    "startTime": "00:42:01",
    "text": "well yeah i was trying to avoid having yet another level of hierarchy because does that mean that they might inherit from so if you have to say you use default alerts so they inherit from the calendar but then the calendar might inherit from the principle up here to argue with whether we should have should or should not have inheritance i'm just saying because of default calendar being a preference and not an entity you really can't attach anything to it right yeah but i mean in this case it's not attaching anything to it in the spec as such it's just saying that the uh when you create a new calendar if you don't explicitly accept if you have one okay all right that's yeah what i'm saying really here is if you create a new calendar and the client doesn't explicitly say use these default alerts including the category of i don't want any then the server is allowed to set whatever default alerts it wants which might be copying over from your default calendar or might be something entirely different whatever it's going to tell the client so it's up to the server if it if the the server does inherit it then they should probably be returned as part of the create response so the user knows what happened and can change it exactly there would have to be yeah because and that's already part of the core spec of jmap if the server sets it and it's not explicitly set by the client so if i have to tell the client what he did um i'm comfortable with that um possibly the more interesting question is the one on the bottom this slide here which is are you allowed to set default alerts on a calendar if you don't have the may update private apple which is the app we need to be able to update alerts on individual events in that calendar anyone want to pop in for that does that require more that does seem reasonable like yeah if i can't set alerts on individual events"
  },
  {
    "startTime": "00:44:00",
    "text": "why should i be able to set default alerts robert yeah so okay so probably i misunderstood the question then um yeah but since i have the mic i agree if you don't have to make update private it it doesn't really make any sense to set the default alerts you you can't even then toggle if you want to use default alerts on the event or not so no but suppose that it was set to true because you know by whatever source set that what does that mean that wouldn't be set to true for you um it would be it would be set well that brings up the question that we currently have around shared calendars but um by the default value of the js calendar object it would default to false so yeah yeah in that case you would you wouldn't need to be able to set them for this calendar um but yeah at the moment where sherry of a shared calendar defaults to true with usd for the alerts then i think it definitely needs to be possible for them to set the defaults on the calendar otherwise they don't get any alerts at all for the event okay but it yeah there's a there's a few interactions that i guess like whether it's a team mode calendar or kind of secondary mode and stuff yeah it's okay but what i'm trying to say is like if the default value for use default alerts ever changes to true under which circumstances any then under these circumstances might also be allowed to set default alerts because otherwise it's really it isn't useful to default to true in that situation because there will never ever be any alerts there yeah yeah i'll i'll go check the"
  },
  {
    "startTime": "00:46:01",
    "text": "cases and yeah try and come up with some insane cool all right um let's have something on that i'll just move on uh this one's simply we've got this calendar preferences object we've um talked about last time and we've got to store now what the default calendar is and what your default participant is your default identity is um do we want to put anything else in there for now i mean i'm sure at some point this will get extended but there's anything else you want in the initial version of it the one thing that came to mind is the user's first day of week preference which is just a cultural thing if you want monday or sunday as the first day of your week or in a few cases saturday and some other stuff but mostly one of those two um is that worth putting in here or do we just keep it simple for now it's just the default identity and calendar or is there anything else people think should it's worth storing here as a kind of at the data model layer so every every client has access to it default time zone time zone is attached to the principles this is ken again so if we expect multiple different clients to be speaking jmf for calendars would the user might want to have their preferred date time format stored in this preferences certainly yeah if you were storing first of a week that would make sense as well like yeah or like day month year or whatever but yeah yeah that's good good point cool thanks ken uh daniel um apologies for asking a question maybe everybody else here already knows um i'm not sure i understand why default timezone would be a principal uh level thing as opposed to a per calendar thing if i'm scheduling for a group that"
  },
  {
    "startTime": "00:48:00",
    "text": "regularly meets on east coast time i want that calendar to default to east coast time and if i'm scheduling for a group that meets in utc i want that group to meet in utc so this seems calendars also calendars also have a time zone um but if if it's null then it inherits from the particle from the principle there into the calendar i see so why not use that same mechanism for first day of week because it doesn't actually affect me the scheduling um this is purely a kind of display preference if you like okay should it be on the should it just go on the principle as well is more stuff that's required for scheduling and like if you were looking up someone else in your company to you know schedule something with um whereas this to me is just purely a yeah user preference which is why it's in separate place but that sounds like it belongs the same place that the um uh that the i mean the the date format belongs as well right like everybody wants to see it in their own in their own perspective exactly yeah that's exactly what it changed ken just said yeah um i agree i think that's something worth storing here as well if we do first ever week okay um final slide of question stuff i have is just nyana one so the spec lists a set of properties which are treated as per user properties so this means if you're in team mode then each user that's accessing the calendar they can write to the properties but they would just get their own copy of"
  },
  {
    "startTime": "00:50:01",
    "text": "them it doesn't affect the other users like your alerts for example so that if you know we both have a shared calendar with with the you know team meeting next week i could have an alert two hours before and bron could have an alert the day before so at the moment the list of properties that are considered per user is hard coded inspect do we want to have this in a registry somewhere probably like it seems possible that there might be others in the future that you want to treat in the same way um and if so do we modify the js calendar spec which already lists all the properties but to add like an extra column to say whether it should be treated per using germap calendars or is this something we should create just a separate jmap calendars registry for just popping myself in the queue for this one i think we should modify the existing registry it's going to be easy to update both things in one place rather than creating a separate registry which has the same keys in it just a subset of them is that reasonably easy too i've never tried to kind of update registry in that way before i can't yeah yeah that does sound the most reasonable event because yeah one place yeah okay that sounds good to me great so just um wrapping up uh [Music] i think we're almost there with this now um implementation experience has been great i need to make changes based on the discussions we've had here and add some examples which um i saw and yeah but hopefully that none of that's going to take too long and i hope to get this to last school before the next itf meeting fingers crossed cool thanks neil anything else before we move on to the next topic"
  },
  {
    "startTime": "00:52:03",
    "text": "excellent uh next is gemma tasks sorry neil i just turned off your audio because this this system is very good at moving things under you when you're about to click uh i will put gen up tasks up unless you want to share it from your phone and hand you the microphone thank you hi i'm jos baum so um yeah i'm just gonna present you what the last changes are of general for tasks and um yeah present you some of the like most of the changes resulted from the the survey that i did last time um and i also prepared some discussion points that resulted from this survey so if you can continue to the next slide yes so here again is the link to the survey uh i published on github uh the goal of the survey was to make uh you know to make jammer for tasks a more common standard that's not only specific to groupware systems but also specific to kanban boards or issue trackers so we extend the idea is to extend the spec here and there to make it a more common thing yeah so i started with uh yeah some more obvious or for me at least obvious properties um that i added to the spec um and here's a here's a list of the changes basically so the first thing i i added is a source property that i saw in several systems so this describes where a task oh also this is only these are only changes to the task object for now they are not"
  },
  {
    "startTime": "00:54:00",
    "text": "not for the task list object so the source property describes from which from where the the task comes from there are some systems that can automatically create or can create a task from an email or they they tag a certain task as it was created from a mobile app yeah um that's just basically a simple string value then there's also an next value is estimated work which is similar to estimated duration which was already ready there but it's more of an uh more abstract estimation of the amount of work required for a certain task which is a more or less popular thing in kanban so you don't have a time estimate you have more like a more abstract measure um then there's an impact property which is also a simple string um which is more popular in issue tracking which has some values like major or block for example and then there's a the progress property was i extended the progress property with some more values which you will see in the next slide and then i slipped in a small mistake that nobody noticed and i just noticed it like a few days after i published the spec um i added related to which was already in j's calendar it's what i wanted to do is like to extend the relation object with more values so related to can also contain blocked by for example um currently it contains values like child next things like that okay if you can go on to the next slide yeah so the progress property is a bit"
  },
  {
    "startTime": "00:56:01",
    "text": "is a bit of a bigger change um there already were certain values for it the the progress property basically displays yeah the progress of a cert task and uh yeah there already was uh needs action in process completed failed and cancelled and they're just a bunch of other values that exist in various systems so what i tried to do i tried to come up with a mapping from those various values that i that i saw and added some more values that i i thought were necessary in order to have a more complete mapping so for example there are some simple systems that have only done or not done [Music] which was not so obvious for me how to map the simple done or not done uh progress indicator and also uh yes there were some issue tracking specific um values like deferred or waiting or resolved or feedback yeah so basically this is uh this is the mapping here i came up with i also mentioned that in the spec so that other people implementing it know how to which which value to choose for their own system that they they want to implement it for yeah so i don't know maybe there are already some thoughts on this i think the next slide is gonna be what are gonna be other properties for discussion yeah i think it looks good and i think it would be just simple to add these to the"
  },
  {
    "startTime": "00:58:00",
    "text": "uh registry as sellout values for the enums in um i'm not sure if is it also for is is it for i calendar v to do's um i think we already have the needs action process completed already or not was the chest just in the task draft but nevertheless for for gs calendar yeah i think it's just it should be just a thing of extending the existing registry with these values okay all right then if you can move to the next be nice yes so one big thing from the survey was grouping the property somehow so right now there are quite a lot of properties and the plan is to add a bunch of more properties to the mainly to the js calendar [Music] object or the js the js event object so the idea here is to to group it somehow because there are some systems that just don't need certain properties and for example issue trackers they typically don't want to have some scheduling mechanism built in or recurrent issues in an issue tracker are just not really a thing so yeah so that's but that's like a big a big one that i wanted to discuss first because uh yeah i think it's i don't know it's kind of a big change so yeah so it contains a lot of group very specific properties right now um um yeah that's why i tried to split it into groups and the idea here was to split it"
  },
  {
    "startTime": "01:00:02",
    "text": "into certain feature sets um but keep it in line with jmap so use the capability mechanism to to display what the server understands what the client understands but also not make it all too fine-grained um at the same time so we don't want to have 20 different capabilities um yeah so and one thing i wanted to notice that it's if we go that road then systems will need to implement a bit more than they absolutely need but i think that's just that's just uh i don't know one that's just necessary um and what we can do is we can make sure the overhead is just small enough for kanban boards or issue trackers to spot to have some interest in the current spec yeah okay thank you for this work um can we go one slide prior i just had a comment on on the chat that i was asked to take to the mic um confirmed seems orthogonal to the other states here and it sounds to me like each task has uh exactly one uh progress property and so i don't know how you're expecting like how do i indicate something is say confirmed and deferred or confirmed and uh in process uh that seems a little bit confusing i'm also not sure why we have both resolved and completed um i wouldn't know which one to pick in most contexts okay so you wanna have deferred and which one confirmed confirmed seems orthogonal to the other states"
  },
  {
    "startTime": "01:02:07",
    "text": "there's a separate property in jazz counter let's jump in what can you repeat that where does the sound come from um i don't i'm not exactly sure where um so what i what i did my my methodology was that i looked at the issue tracking systems and they have not only a progress like a status property but they have several other properties like impact that i already mentioned but there's also another one so i'm not sure if there is an issue tracker out there where you can confirm something and have it i don't know assigned at the same time well i'm not i'm not suggesting this problem is uh specific to your document here i've certainly seen issue trackers where there is a separate state that is confirmed but it is not assigned but i know that i use issue trackers where whether something is confirmed or not is independent of whether it is assigned it's useful to know okay you know here's a here's something that someone's actually been able to replicate for example um so it's just it doesn't seem related to this i really don't understand the difference between resolved and completed though that would be another thing worth clarifying if you're going to drop you in this bag yeah so um [Music] okay um [Music] yeah i think if i remember correctly if it's resolved then the it has been it"
  },
  {
    "startTime": "01:04:00",
    "text": "has been fixed actually but if it has been completed it's it's done basically so the issue might it's like a won't fix it could be a won't fix you know it's the same as closed uh you just don't work on it any longer but if it's resolved then it's actually yeah you actually fixed something that's maybe i need to i mean to need to specify that a little bit more that's a that's a very good feedback because uh yeah i me too i think the the whole terminology is not very obvious i agree yeah but maybe also [Music] it would need some splitting up it's a it's a good feedback that i need to look into it a bit deeper so this is this is kind of against i stood up for the next slide but just to chime in on the resolve completed i tend to agree that they probably are the same thing and the language that's used in the ui is just a ui thing uh unless we can clarify those in the spec as to what the actual difference between the two are and where they expect to be used so i apologize i haven't read the current spec but regarding the grouping thing so just to wrap my head around the issue are there mandatory properties in js event that the task folks don't want to see or i'm trying to figure out why we need to either remove not show properties in the event that's the intent that i'm i think i'm getting from what's going on here for my way off base not not show okay and what's the reason for not showing them because they're not a proponent of tasks or i just uh just wanted to understand sorry you said you if they're not show"
  },
  {
    "startTime": "01:06:01",
    "text": "properties or no i didn't i might get that i'm trying to understand my head around why we need the grouping so what's the the end goal with grouping these yeah is my question um so the way i understood it um a server still needs to understand or you if you have a server that implements the whole js calendar spec and it it tells you with its capability that it's able to understand it then you expect it to understand all the properties even though they're optional or not you can just leave out the not optional properties um but yeah it's a basically capability thing yeah a little bit i think the reason or what we found out in the survey i think that was presented at the last itf is a little bit we found that task systems in general are much heterogeneous and the calendar systems so for instance each calendar system typically will include recurrences whereas this is rather exceptional even in groupware systems so some like google tasks for instance there is no such no such thing as such a recurrence and so we argued somehow if you want to use this also for an interoperability issue like systems might adopt jmap for you know interoperability as a standard api tasks in indifference to calendars will require some sort of a differentiation because there are certainly a lot of task systems around not having recurrences at all and so we need some sort of a mechanism in order to can i maybe just finish i have two more slides about"
  },
  {
    "startTime": "01:08:01",
    "text": "all three more about grouping actually okay okay i think it was just that i i think the grouping idea with like a reasonably small set of capabilities that can divide up um kind of like you've said there seems like a reasonable idea i will have to see you know the the the details and the specs but i i think the virginia idea is kind of changed okay yeah so the current idea here is i don't know to to group the the the way i tried to solve it is that i i currently um have a grouping of three different in three different groups so the common properties across all task systems um and there's a time estimation features that are um that are about do the do properties or the estimated work for example and there's also advanced scheduling properties like recurrences recurrent tasks or [Music] some automated scheduling features so if you can go on to the next slide i have them i have them a bit uh yes okay so there again the three the three ones yes so and here is a list of the of the classes that would be inside the common group uh i don't want to go through all of them it's just to get you like a glimpse what's what what's my first initial idea of having in there um yeah so for example i don't know color title things that are just very very common or also a bit more outlandish but uh yeah so it makes sense to group them somehow if"
  },
  {
    "startTime": "01:10:02",
    "text": "you continue to the next one are the time estimation properties which basically would add alerts and time zone classes and um yeah also add some some time estimation properties as i said the estimated work estimated duration if you click to the next one there is advanced scheduling which would add recurrence rule class and nd class and add a bunch of properties like free busy status recurrent specific properties as well so yeah that's a the first idea of grouping that and as you can see it's quite a lot already and it i just think to spark interest uh for uh issue tracking and and also kanban boards it makes sense to yeah so either we we say uh it's not really required to implement the whole thing in general or we say it's uh there are certain sets that you can choose from like yeah yeah okay this is kind of again so i i think i finally understand where we're going here so okay um i i think what rather than specifying which properties go in various groups i think you should just come up with different levels of capability so anything in common which would you describe in the text would essentially be mandatory to to implement four tasks which we all we need to be interoperable anyways and i'm either very repeat probably said that before i did then if you've got other levels of feature sets you describe in the text what that feature set entails in terms of properties and just make those sub capabilities underneath the actual js task capability so within the object you say supports time estimation true false advanced scheduling true false and"
  },
  {
    "startTime": "01:12:00",
    "text": "whatever else you might end up in there i think that's probably the easiest way to go about this that makes sense that's nice yeah okay okay good um okay so so if that grouping comes then i would suggest to also introduce a new set error for a task set so that you don't have necessarily an invalid properties error might not be appropriate because the system most likely will know about the property but decides not to implement it so probably i don't know like a not supported set error that might even give the required capability uh might be a good thing but um yeah i would just as to use a set error that's that can be discerned from a from a regular invalid properties error sorry about that yeah but on the other hand it needs to know that it um only advertises in its capabilities a subset of the js task properties so in a way i would expect the implementation to be able to at least know about properties it doesn't support so but anyway this is kind of again so agreeing with robert that um for the the base draft yes an implementation should know if it's excluding certain features and properties but if there's an extension to this draft down the road you can't expect the"
  },
  {
    "startTime": "01:14:00",
    "text": "current implementation to know what hasn't been implemented yet so i can see there makes there's a case for uh unsupported capability but then for other things that it's totally unaware of not supported still makes sense okay i guess i'm in favor of both one's more descriptive than the other one you fall back to not supported if you have no idea what's coming at you okay all right so if you could the next how much time do i have left roughly is it fine okay so here again i i wrote down a mapping between different task systems and the groups that i currently am using uh just to double check that the grouping kind of makes sense so for grouper system obviously we typically want to have we typically want to have all of them so common group time estimation scheduling you just want that then the simple is supposed to be a very simple task application it's just do done i didn't write down a specific system for that but yeah you can imagine there is one out there that doesn't need time estimation or advanced scheduling for kanban systems um yeah they would they would typically use a time estimation thing but they could do without recurrences and and scheduling properties for example microsoft planner and extorted trello and for issue tracking systems they typically make do with the common group already with some slight exception for gyra and red monday they have one do property as i saw um yeah but i think roughly the it kind of looks like it makes sense"
  },
  {
    "startTime": "01:16:02",
    "text": "right now the groups that i chose but yeah of course it's not the final iteration so okay um if you could go to the next slide yes blob created i already sent the mail to the mailing list about that so i saw that in several systems as well so they they tag an attachment basically uh with the time it was created it was uploaded um the first question i i would have is do we actually want to have this in this back it's not a very important thing i think but it's it's a nice to have i would say and yeah and um if you want this yeah so i think the the the mailing list discussion ended with we could use it as an extension add it as an extension to the an object that references a blob and not to the blob itself yeah so yeah maybe neil already has a an opinion on that yes i was just going to say it should definitely be the thing that references the blob that has created that's the thing that has all the metadata the blob itself is just the bytes of data um like you can't assume that you know it could reuse it uh between users even if you know to save space um and reference count it like the metadata is all in the thing that's referencing it so that's where that should go if you have it all right uh so and the the question that i have is uh would that be the for jay's calendar it would be the the for this particular thing it would be the links um uh the the link object so i'm not sure would we just extend the link object with a single um property or would that be sufficient i"
  },
  {
    "startTime": "01:18:00",
    "text": "don't know yeah you can you know everything's in a registry so it's easy to add properties on it you can just say that the creative property is allowed to be there on the link object as well when that's created i think i'll be reading forward okay yeah as i wrote on the mailing list already um yeah we can add we could add the created timestamp to the link object if we do that i'd rather say we should add it to any object because why only for link then if you really want to track the timestamp when this object was added and with that being said i promised two itfs ago to come up with a spec um that tracks property changes in a in a that that fits all jmap object types basically so we could also take this as a as an initiative now to where this might be already useful so yeah i would even prefer the last but it means more work for me um but i might find time to come up with a draft and and and that it comes quite in time for gmat tasks too yeah it makes sense i was going to say i think that's somewhat orthogonal to this the created time on a file is is when the file was created which is not necessarily when you added it to the jmap store you want to say here i'm uploading a file and this is the creation time from the file system um i want i want to say this file was created six months ago and that you're not going to be able to a gem up event history is not going to give you that so it would be a separate property yeah this is what i wrote on the mailing list so it very much depends on the semantics of the created timestamp if it's to create a timestamp for the link then um i would assume that's when the link object was created when it's the"
  },
  {
    "startTime": "01:20:00",
    "text": "created timestamp for the underlying data on disk then that's something different so i don't know what what's the purpose of of the created timestamp in this context i would say there's no big consensus on this like i would need to look a bit deeper but i think it's fine if we come up with a solution that fits for us i think that this is somewhat related you mentioned before sorry i think that's a gmx jmf specific topic here because you have that blob storage which allows you to reference objects from many um you know potential items which is something you typically can't do in most other systems so i think what we are talking about here is really like when the user linked it to the actual item irrespective of when the actual file was already created which i understand which i understand um in the jmap system might even be from another user probably i don't know yeah so i think what we're talking about here is really in the context of the item the link the time of link yes all right so there's not much left so keywords was already discussed in the mailing list already and i think that makes a lot of sense to have a what was that keyword color property for the task list with the colors that we have for each keyword and then you have a separate keyword property or change the keyword property to be not the same simple string but uh yeah something a bit more complex um yeah as already discussed on the mailing list um it probably makes sense to keep that in sync with the category categories property so to be able to do that with that as well"
  },
  {
    "startTime": "01:22:01",
    "text": "and it might also make sense to do that in gmo for calendars as well to not be able to do that for tasks only but also for calendar events so is there an opinion on that it's not something i've seen implanted in calendars at the moment once you start adding these extra properties like this it makes me want to wonder whether it should be a separate data type like is this you know you should have a like a taskless object because it's a um this is another way of uh it's like a label essentially um and then you just reference that i very much like the proposal that braun has written on the mailing list for that okay yeah okay so we basically as i understood we want to keep that out from discussing calendars right now but yeah it might make sense to sync that with categories as well so okay um yes future work is basically we still have to get some more feedback or yeah from from the from the task system vendors we already prepared something for that still needs to happen and also there are still two more or less complex properties like comment which we don't want to exclude because a lot of systems is very important for a lot of systems as well and the history property was already teased in previous meetings we still have yet to tackle that one okay i just have uh com short commands for the properties that were mentioned at the beginning so okay for estimated work"
  },
  {
    "startTime": "01:24:00",
    "text": "i think this property is useful i'm not sure if it's useful if it has uh an arbitrary number in it because i would assume that the meaning of these numbers will differ by teams uh or by products so yeah i'm not sure how much value is in allowing just any number without giving hints what number range indicates what um for the impact property uh i wonder if if that can be if that if that is necessary if the priority property um is enough um and uh what was the last year for the source property i wonder how how much value it provides if it's just a free text if with different implementations put the same thing in or could there be an enumeration of of of typical cases where source property is set or should that be the product id of whatever product generated was the source of that task yeah so i'm i'm not sure how a free text video alone will be inter-available between systems okay yes i'm sorry sorry i'll just present from here thanks yeah thanks alexey make it quick because the document hasn't been updated next slide um so yeah as a reminder this is to uh gmap extension to allow signing and or encrypting on send so there are two uh boolean attributes added"
  },
  {
    "startTime": "01:26:01",
    "text": "by default they are absent and you know may the signing or no encryption would happen if both are specified then its first message is first signed and encrypted next slide three ish open issues one is to what extent we need to control uh how the sign message is generated there are two common ways of doing this using multiple sign or application pks7 mime um if i don't get any feedback learning tentatively i'll probably suggest that there is a boolean to control this with application cases seven mind being the default um as far as header protection is concerned uh lamps working group is working on this and actually uh this atf will announce that we made some progress on this so there is some hope that this document will complete um so i would say yes we probably need to have another boolean to control this for backward compatibility uh with the default being probably no uh don't protect headers [Music] and then the last question is whether this needs to be extended for a spam decryption um and well there is one way of doing this through decrypted blobs cool daniel's just popped up in a queue do you want to say something yeah um i mean lexi may feel differently about where we're landing on the header protection draft but uh i believe we're in the position where the default should be able to be true um because i think the generated messages won't actually have problems"
  },
  {
    "startTime": "01:28:00",
    "text": "um so i think it'd be a shame if the default if we baked a default of false in here uh for header protection um the second question is about how do you think um the s mime signing we're talking about delegating here secret keys to the jmap server yes okay um that definitely changes the idea of end to end at some level uh yes and uh depending on how exhibited the slightly different trust model right yeah the theory here is that maybe the gem app server and the jmf client are within devices under your control so that is still your end um for that purpose gmap's not really designed so much to to only pass encrypted blobs if you did then there's no point having this at all um so if you are using this it's because you believe that you control the server as well and so it's part of your end okay um so yeah i will uh at least implement the first two changes next time and then we talk we can talk about decryption which is uh it's kind of complementary feature but it will require different approach um yeah that's the last slide yeah the um so what i think i understood from that was that we could make it be default to was it signing true if you request the capability for this obviously if you don't request the capability then then this property doesn't exist but we could default it to true everything i think uh gkg was talking about header protection actually okay if you want to do if you do a design encryption by default header protection will be true unless you okay you disable it"
  },
  {
    "startTime": "01:30:01",
    "text": "yes alexa has it right cool thank you awesome uh with that we're basically done with the jmap portion of this other than having a quick glance at the milestones but we might leave that just to the end and move on to extra if that works for people just because we're running over time so looking at the agenda for extra the first item we had on here was uh extra quota which is with the editors is there anything to say on extra quota um no um i've said it i basically noticed that some text to an eye on a website was out of date uh i sent a separate ticket to anna to update it it's sort of a procedural i think they uh they don't want to publish rfc unless this is sorted but uh even like the page saying you know who approved the rfc publication already disappeared so i assume that it's sort of like it's near imminent basically awesome thank you all right so the next thing on our agenda is uh steve action registry yes uh very quickly about this um basically the registry itself the template is relatively straightforward and then the main part of the job was to actually populate it with initial registrations which hopefully can can just did uh so he is now coeditor i think we have one little pending things about reject uh we want to add a comment saying that it with which actions it conflicts which might be useful information uh but basically i think people need to check what we've done uh and you might as well send it to working group last call"
  },
  {
    "startTime": "01:32:02",
    "text": "all right next on the list is not actually what the slides are up there for because i don't appear to have slides for civ snooze this is ken regarding sif's news no updates to the draft um it's been implemented in cyrus imap it's been deployed at fast mail it works as intended as expected firing any other feedback i'd like to ask for working group last call all right anybody have any feedback on that before we go to working group last call okay i checked the diff and it was like minimal qualification so i think it's it hasn't changed recently so it's just done all right um we now since what's up there we might as well talk about process imap sure so um this is an idea i sent an email to the mailing list a few months back um sketching out what we intended to implement in cyrus imap went back and forth between an action to a test back to an action i finally documented what we have implemented in cyrus imap which is on the next slide so this is what it looks like we've got five different options there first one is a list of addresses if they are outside of what the server would normally know this is analogous to the addresses parameter in vacation so that the user would tell the server these are the identities that i have normally email addresses so any invite or reply that i get for one of these addresses you can go ahead and process for me next set is a it's a mutually exclusive pair you can give it a calendar id onto which"
  },
  {
    "startTime": "01:34:00",
    "text": "you expect new invites to go on to which goes back to our previous default calendar discussion ultimately if you do not want to get spammed with invites from untrusted users you can tell the server only process updates which would mean replies from other users or or i'm sorry it would mean updates only meaning changes from an existing event on your calendar or cancel or that kind of thing third option we tell the server if i do receive a cancel please remove this from my calendar and then the other two are optional if um you've got the variables extension enabled um two different variable names one to give you a set of thick strings what the outcome of the action was this could be anything from no action to updated to added and i think there's one other one in the spec i forget what it is off top my head and the last option is another optional variable which would give you a human readable string explaining the actual outcome most notably if it's a an error or a failure so that's what we have i'm here to see if there's interest from anybody else and moving this forward and formalizing this as a spec this has been implemented again as i said in cyrus imap we deployed it to some of our users last week and it appears to be doing what we've had previously done in middleware as opposed to directly in civ um alexi melnikov so yeah i i've scanned this today quickly seems to make sense um a couple of comments is one um versus pro it's probably the first case when you have extra output parameters in action but i suppose you know when there are two"
  },
  {
    "startTime": "01:36:00",
    "text": "extensions but you know it's not in any obvious way wrong is just unusual but i think that's a fine solution um as far as the outcome values uh concerned i think it would be better if you split update and cancel into two different values it just i don't know it seems cancelling and possibly removing the event might mean something different from just updating it so i might want to do something different based on that um the other comment is now that cf action is going to be in last call we need to add it to this to the document yeah this is kind of guy i realized that last week and didn't get a chance to push another update figuring that i was i got added unknowingly to the civ action spec i should probably follow that spec there actually is a a uh example of what this looks like on the next slide but it still doesn't change the question out there is if anybody else feels this is work worth adopting in the working group and moving forward hi this is jerk um i have just a tiny question and maybe i actually i have to admit i didn't read the draft yet but my question is from what i see i'm asking myself you know is there a standard way imap is currently implemented in systems because it's i guess not really standardized how it's done architecturally and this somehow hooks in you know somehow of kind of a dependency which in some systems might you know create architectural issues in some way which is not necessarily an overall issue but i'm just wondering um this is something one should maybe state for potential implementers of this that there might be wider ranging consequences of implementing that so to answer your first question the only two ways that i'm aware of currently that this is done is a the email clients do"
  },
  {
    "startTime": "01:38:03",
    "text": "the processing or b the provider has some other out-of-band facility for doing so which is what we did previously so this is just a different way to have the user be in control of what's going to happen in a standardized way i'm sorry your second question maybe maybe just thinking about it um before probably the it was primary processing might have been unconditional on hard-coded how it's handled now you can say only accept invitations from this set of people for example you know and do a few fancy things yeah to that point this currently does not give you the ability to say i want to accept from this set of users but i believe yes i believe there's other facilities within civ to do exactly that especially using the list extension so you could have it reach into your your card dev you know address book you know whatever this does not tell you when to do the processing it tells you how to do the processing if you choose to have it done does this go to the list to adopt this or just yeah i'll do a call for adoption on the list um it sounds like this there's nobody violently objecting to the idea so we may as well go ahead if adopted i might wrote lexian as a co-author we cannot just credit everything ah yeah i mean not everybody will implement it but i think it's a sensible idea to to doing this working that's all i have thank you excellent thank you there were more slides but"
  },
  {
    "startTime": "01:40:01",
    "text": "they're just examples here beautiful all right fantastic then all we have left in all of this is imap partial right i i actually uh updated the title of the document because it actually has sort of two related extensions now um yeah so uh shall i do people remember what partial is all about do you want to know so uh basically in imap if you do search typically search will do the full mailbox search you can say only return and messages and first or second page whatever this helps the client to receive less data as well as servs saves server work once it reaches the number of messages it can stop doing it somewhat similar example is with uig fetch you can have a uid range where you don't actually necessarily know how many messages in the range so again you say if if my client can only show 10 000 messages there is no reason to return hundred thousand you know if it's so many in the range so you can say just just return me first or you know um yeah next slide and uh i mean for smaller mailbox on mailboxes it doesn't matter that much but this is concerned with large mailboxes say 50k and more so as i said uh search return option for returning page or mul it's a range of"
  },
  {
    "startTime": "01:42:03",
    "text": "messages in the response and also so it's a search modifier and uid fetch modifier next slide so this is how it looks this example says return 100 messages from the end of the mailbox the most recent ones if you don't use miner syntax then it's the first one from the beginning of the mailbox but [Music] so this was motivate partially motivated by yahoo people they they want to do better handling of very large mailboxes and their most common case is going to be the most recent one i have a question about this one yeah um that's not only allowing negative numbers it's also reversing the order it's got the higher numbered one first is that deliberate and supposed to be allowed or is that a what uh minus one minus hundred or minus hundred minus one this should be the same what happens if you make a minus and a positive then i i i i negative and positive you either both use both negatives or both positives oh okay so a a the a the range at the you know the most recent one or in the kind of the least recent one so the partial positive number colon positive number was original part of 5267 so it's backward compatible but this ends the negative syntax to say from the most recent messages so you don't"
  },
  {
    "startTime": "01:44:00",
    "text": "necessarily need to know your ids for them for example one positive and one negative for voice versus an error okay next slide cool and this is how the fetch example works uh again you know some cl if you know how many messages in the range or in the uid fetch range that is not as useful but if you don't or if you want to page through results then it gives you more control over this next slide yeah so uh we do have wonderful problem in imap where we have so many extensions we sometimes forget how they interact with each other so actually partial existed before save existed before save is [Music] do the search and save the result in a variable right and um the interaction between the two weren't actually specified so um timothy ryan and from duff code asked about interactions and now this is clarified next slide so um there were actually a fair amount of changes since version zero but most of them were not related to the partial uh the main clarification about partial is that if it's used with constore uh it exp it is explicit how they use together so you can say send me flag changes for all messages change this timestamp and only return so many of them"
  },
  {
    "startTime": "01:46:04",
    "text": "so the other extension is message limit where server basically insists that you cannot request any operation on more than so many messages i mean obviously if the limit is 10 messages it's not going to be very useful but this is supposed to be like 10 000 or 100 thousand messages or whatever this is of more interest to yahoo people because they try to avoid [Music] storing full maps of message numbers to your ids so it's kind of easier for them to page page through numbers and resolve indexes this way so various revisions clarified interaction with sort i think they a message limit and sort can be used together but you either need to have a special index uh or you say well this mailbox is too big so i cannot do it thread and message limit cannot be used together if the mailbox has more than message delivered messages it's just not going to work because threading doesn't work with partial sub data basically well sort of gives you corrupted threats which are not very useful um don't remember do i have a next slide yep two more okay uh one of the main open issues is copy and uid copy [Music] one of the things that this is trying to address is the client can say well i want to copy all messages from the mailbox to another mailbox you have hundred thousand messages message limit is ten thousand so do you just fail to do the operation"
  },
  {
    "startTime": "01:48:00",
    "text": "altogether or do you copy uh ten thousand messages and say well i only partially completed you need to retry with other with the remainder of them if you care um this is kind of tricky because we never had copy failed partially before but this is trying to do we want to uh all the clients that don't support this become unusable because they don't understand this response code or so that's kind of a tricky question i have i have an opinion i think we should reject it outright rather than allow it to succeed because otherwise the clients will just try again and again and they will wind up copying the same ten thousand messages again and again to the destination holder no it's not how it works i mean yes it might be a valid reason but the way it works at the moment is it says he says copy hundred thousand messages it will copy ten thousand and return okay with message limit so the naive client will say oh all the hundred thousand messages got copied but on actually only ten thousand for a pocket uh and then it will try and delete all of them and it will only delete the same ten thousand assuming it hits the same limit yes yeah uh so well the alternative is you know the client just cannot do it and then it's like well does it try to repeat itself or just give up i don't know yeah or the client has to do batch copies well that's the thing the client basically needs to be updated to know about about the limit and doing batches uh i don't know i i keep flipping back and forth about this this is kind of tricky but we can discuss yeah i don't necessarily have an opinion on this issue but just something else to"
  },
  {
    "startTime": "01:50:00",
    "text": "bring up which is probably painful does this if any way shape or form affect renaming of the inbox that abomination where you're copying barry has an opinion sorry i didn't push the button but this is barry not on what ken just said but the other bit we previously don't have any stuff in imap where the server puts limits on things that the client may not know about that affects the client's behavior and this is the first that i'm aware of i don't like that i don't i don't like the idea that a client that tries to copy a hundred messages and only gets ten of them copied doesn't if they haven't been updated to understand this they have no way of dealing with that situation and i i think that's bad so i think that if the server has a limit and the client tries to do something above that limit it just gets no and nothing happens and then the client that a client that understands message limit knows what to do with that or shouldn't have done it in the first place but a client that doesn't know just has to throw up its hands because it has no way to be recover arguably not a lot of service will implement this because this is kind of a little bit of more niche as opposed to partial partially generic facility so uh what we are saying users will try their clients with the server like this will be unable to do it we'll have to complain to their client client says well i didn't i i didn't implement this why do i want to then there is a discussion with the server vendor whether you know whether they want to implement it okay uh i'm okay with that yeah this is basically what i said as well that it should it should be rejected and then you the client either you either do a"
  },
  {
    "startTime": "01:52:00",
    "text": "smaller copy of just a range of messages which the user can do or you you fix the client okay yeah this is why i struggled there is now like it's unfortunate situation and there is no elegant solution that will just sort of it's kind of a yeah and still barry the uh to go to what ken said with uh what do you do if you uh rename inbox um i think that has to be an exception to message limit i think the server just has to do it even if if the server has a message limit of 100 and there are 10 000 messages in the inbox and you rename the inbox while the server can say no or the server just has to do it and move all 10 000 right you know whatever and if the server is distributed and have a client part and server part well then they'll have to update the client part to actually support this and then it should work i mean can you actually send this in uh uh send the email to the mailing list because i think it's probably worth just saying this explicitly no send the reminder to the mailing list saying about what about renaming box with more than message limit messages what will happen and we'll just say server just has to do this we can add an explicit statement as a reminder for server implementations to do this great thanks alexi is that everything uh you got one more slide next step seems ready for last call with partial message limit may need a bit more work who needs who wants to implement yeah this is kent so i as a server dev i think partial is pretty straightforward to implement uh question for alexi is a as a client of have you actually implemented on your site so we know it operates the way you expect expected to operate"
  },
  {
    "startTime": "01:54:01",
    "text": "code before you go to last call okay yeah i'm happy to do that so i actually did implement it in the client side but i didn't test it with my server yet so that's why i was hesitating i did it but i just i think it worked it's fine it actually makes uh handing off big mailboxes um like webmail clients you know if you can only display you know 10 pages or 15 messages it makes it much easier to implement because you don't need to download you know the whole map for 100 yeah i was mostly concerned with does the spec do what you needed to do as a more so that i was worried about interoperability at this point awesome we have five minutes left let's let's run through our milestones quick hey thanks everybody uh here we go yes i do want to share my screen this one i mean i i put the message limit and partial in the same document do you want me to split them up or is it okay just we'll just keep it first i think we just don't that should be fine to stay in the same document and we'll just do one if it's going to well it's also if if we decide that one of them is more experimental than the other but until we get there that's fine yeah um i'm happy to to have a working group last call on this as one or two documents and i have to do a separate working group adoption call sorry on on one or two all right here's what we've got uh submit document for blobs via gmap to asg is going to have to move forwards to next months basically uh submit civ document to isg that's also for april i guess we decided that the uh gem up sieve is ready for last call"
  },
  {
    "startTime": "01:56:03",
    "text": "i was hanging on to this because i wanted to get some implementation experience with the civ test method okay um but if we want i could break that out and we could make it a an extension down the road no i think it should be fine just to we can we can test that within a month we'll send it to working group last call and test it during that time fine uh sender extensions we're ready to last call that now alexi no fair enough when cool uh god's implementation of imp servers and proxies kick it down the road cool gamer access to address books this is what do you reckon robert yeah we're back on j-map now calendar as we said is nearly ready to to go isn't it i don't know it's pretty late for him no i think he might have might have headed off to bed already yep i'll say july we'll get it by next time here uh"
  },
  {
    "startTime": "01:58:00",
    "text": "jason contact document and i need to move that because it belongs in the other work group now i'll just hit delete on that murray go ahead what what did you have to say oh the first the first one that you edited um you said it for april 2021 did i yeah ridiculous well down there right there thank you okay that's i mean it should have been done by april 2021 but we're where we are thank you for that um i've deleted the js contacts that's being moved uh gmap we said was basically ready to go and that that says june all right i'll say august be nice if we get some stuff done yep done review changes all done okay and milestones for extra we had steve actions registry adopt that got done so just resolve that ea with sieve that was just for adopt so um adopt i think we've adopted it already i'm just gonna resolve that um okay"
  },
  {
    "startTime": "02:00:00",
    "text": "i might say adopt by june submit by december and that leaves update charter which is for extra not done but we were going to update the charter given that we've done stuff but we didn't we charted email core instead murray do you want to comment on this what am i commenting on uh whether we want to update the charter for extra um given that it's currently whatever it is ah not that i was just looking at it what what do we want to cover that's not in there already yep um this was more whether we were going to this was going to take on the other email related stuff oh but the stuff that was brought up in this match this morning this is before email call started i think we decided to question whether it was going to happen here or not oh um yeah the discussion that happened in dispatch this morning i think probably that whole question will either just close the update charter here delete it and work out what we want to do later yeah i don't think we have to include an updated charter as a milestone so let's find it yep awesome we will put those changes through then and we are done which is good because we're one minute over thanks everybody good work see you tomorrow what all right barry's gonna do a thing"
  },
  {
    "startTime": "02:02:08",
    "text": "all right there we go well you got you got the infinite thing i need to turn off my screen i say grant and you now have permission there you go you are now sharing slides go ahead oh everyone everyone's gathered around barry all right thank you to both of my chairs for helping out in this weird combined session and particular gym taking notes very much appreciate it have a have a great evening everybody or morning or wherever you are and thanks for joining us sure thing the hybrid session worked pretty well actually yeah we did all right see y'all next time uh it was a little bit wild not having a microphone at the table i had to hold this thing the whole time um"
  }
]
