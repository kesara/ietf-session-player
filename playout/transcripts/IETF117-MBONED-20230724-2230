[
  {
    "startTime": "00:00:00",
    "text": "participing. Good. Right. But but Someone's there. Some someone wrote their name, Underneath it. It's blishy. Yeah. Yeah. Right. Yeah. the I did notice that with the media code, there's no auto help. you can't hover over and guess what these buttons are. Yeah. Some of them are obvious. Some of them are less obvious. Yes. Hey. to see you. See you. Yeah. Good How are you? Too bad. Yeah. Kinda. The tradition convenience. How are you doing? Okay. What are you the new AD or just subbing for a warrant. Just sobbing for warrant. Okay. Alright. Just just the most of the session, I need to Okay. Alright. try to make sure any fights that you need to break up, you know, I'll Any fist fights need to break up. Happen early while you're here."
  },
  {
    "startTime": "00:02:18",
    "text": "Wait 1 or 2 more minutes for Keep it to trickle in. I Of course. Yes. know? No. We we found We 2 big too much for one meeting. We we Yeah. Yeah. Yeah. 2 hours was not enough time for both of us. We're about 90 minutes is about right for us. Alright. I think we can get started. Okay. Welcome to m bone d. Here's the note well. As always, note it well."
  },
  {
    "startTime": "00:04:01",
    "text": "And Here's stuff to really know well. He's nice to one another. the usual stuff. Session tips, please do sign in to the meet meet echo tool That is your way of Joining the queues. So if you want to speak, at at the mic to join queue, we will use the Midec0 tool to manage the queue. That way, people who are remote are able to participate fairly. And if for some reason you don't, use the Meet echo tool. You can scan QR scan, the flu sheet or that QR scan over there, and that will record your existence this working group meeting, so that we can be assured of another giant room Next time around. And that's about it. Okay. Here's our agenda. Any anything we missed? And you want to bash this agenda? Okay. And Let's go through the active working group docs. the telemetry draft. That went to working group last call in March. And we had zero non authors speak up in support. So that is not quite Consensus? So we need a little bit more support in order to advance this. to refresh folks' minds about this draft because"
  },
  {
    "startTime": "00:06:02",
    "text": "did seem relatively popular, and there was support at least in the room to to advance it. how you will we'll we'll discuss this one. There's the yang models, Sandy. What's any updates on that? Sumitality, Because I must have a review for all the young doctors suggestions and the make sure that all comments has been addressed then I will ask Wolfgang Goodflask Yeah. Gotcha. Gotcha. Gotcha. Gotcha. Thank you. There's the written its ingress failover draft that Sandy's gonna Talk about today. and there is the a MT Yang draft that is going to cover today. There are no iteration at this time. And with that, Let's bring up Yisheng, you you will be up to cover the yang AMT game. So let's see. Hello? Hello, sir? Can you hear me? Yes. Okay. Thank you. And -- You should be able to advance the slides. yourself. I think. So I I don't see the button. Alright. Try now. Oh, I see. Okay. Hello, everyone. I'm Vincent Liu from T Mobile. I will present the MT Young model briefly today."
  },
  {
    "startTime": "00:08:06",
    "text": "MT Portoco into the FC 7450 Use the bay UDP based encapsulation, to overcome the network lack of multicast connectivity. The AMT enables site hosts or applications do not have the native multicast access to network. With multicastal connectivity connectivity, to a source. To request and receive the multicast traffic from network that provide the multicast connectivity to that source. And this AMT model provides the message for the configuration and the management of the MT protoco. For the AMT relay role, we provide the configuration of and parameters of AMT Relay Service also provide the configuration of the AMT relay dness resource of the course. and we also provide the management of the empty tunnels on the empty relay. Also, the statistics of messages including the sending messages, receiving messages, and the error messages on the empty relay. And for the AMT gateway role, We provide the configuration and the management of the AMT Gateway Service. and also We provide the statistics of the messages for the sending message. and receive a message on the AMT gateway."
  },
  {
    "startTime": "00:10:03",
    "text": "For the for the document status, individual draft, Warren 1 and Warren 2, we have presented in the 80th115and116 meeting And we have added the statistics for the messages on the a relay I'll end the Getway. So this document is just adopted by the growing group early this month, So next steps, we want to ask them for more review and comments, and we hope to get more feedback from the working group. this loss in queue. Great. Thank you. You sound? Cool. So, yeah, I'm encouraged, folks. Please read the draft. and provide comments to the authors. Okay. Anything else? Any other questions, comments, for this draft. Okay. next up, is Hello? Good afternoon, everyone. This is Hari Song from Future Technologies. I'm going to give a recap of this draft on behalf of the coauthors."
  },
  {
    "startTime": "00:12:04",
    "text": "As a chair has just said, we have a metric Mida, last call for this draft. Unfortunately, we don't have enough support from the working group attendees. So If you have any comments or suggestions about the drop Please do our WhatsApp. and let let me know. And hopefully, we can start a another round up last call. Next slide, please. So first, the the problem is Recently, we have published several RFCs regarding the enpass network telemetry. which you use either postcard mode or passport mode. to collect the the user traffic telemetry data. So we figure out this is very useful for the multicast traffic monitoring, because it can help us collect the Not only the performance of the model costs packet also can help us to reconstruct the Monica's tree just using the data collected. However, as we know for both this postcard or passport mode. In the case of multicast, let's build generate a a considerable redundant data Because, for example, for the trees mode, at every branch, will carry the We we have a multicast tree, but at every receiver node, it will collect it's days for the entire pass. But obviously, many path all the paths, there are some common branches So those data are definitely redundant if you have a very huge autica's tree, then the redundancy is a considerable we need to remove that. next task, please."
  },
  {
    "startTime": "00:14:01",
    "text": "So weak weak, basically propose 2 solutions in this draft. The first one is a we we messaged, we call that is trace option based, the solution. the trees means each the telemet telemetry data will be just the carrot in the user packet header. Then in the multicast, the previous data are copied to as it's a branching node, the the all the previous data will be copied to each branch, this will introduce redundancy. So the solution here is that we Combine the IOM trees and the postcard based lamptree. which means and each molecules, bronching node. you simply terminate the trees by it supports the data we collected so far. to the to the data collector. and then we start over again. So for for the next part of the multicast pass, only only a new data will be added to the trees. So by doing this, we can you name it as a redundancy. There's no any update need to be done to the RC 9197, which is used to describe the IOM trismode. all we need to do here is to do some controlling configuration. and each branching node. So once this is a branching node, we just less a node to export data so far and clear the the the AOM field, then we start to collect data again. Next slide, please. So these slides give a example. It is in this very simple multicast tree. you have a a node b as a branching node. From there, you can see you have 2 branches. and to enter the further, enter the node d. We have another 3 branches there."
  },
  {
    "startTime": "00:16:00",
    "text": "So we basically need to configure the node b and the d. in this multicast tree to ask them to to terminate the current trees class so far and export that. then we start over again. to help reconstruct the multicast tree. we we must for these trees, it must collect, you know, ID data. And, also, You you can see at each branching node There are some ingress part data will be ex exported locally. And some egress related data will be carried in the trees and Put in the header. and which will be exported at the next next branching node. So with this thing from this allocation, we can basically collect all the data without any redundancy. and also it can can help us to correlate all the part of choices and combine them together to help us to reconstruct the multicast tree. Next slide, please. And the second solution, we call that direct export based solution, This is based on that another mode of our IOM. call it directed directed export. So, basically, and each node will just to export the local data based on some instruction header carried in the packet, And it means that children did dynamically data will not be carried by the user data. user packet. User packet only have a instruction header. So to support this, the the key is to know, to helps the data collector to correlate all the postcard collected from every node. and the help use all those information, we can reconstruct the multicast tree. So how to support that? For the OMDx, it already defined several"
  },
  {
    "startTime": "00:18:05",
    "text": "option optional data help us to correlate the data. But in this specific multi cast trees, we need to extend that by introducing 2 new type of option data. Why is the node ID? So the node ID here, we suggest they suggest the user same specification or definition in the RFC 9197. which is 24 base data. And another thing we need the information is the interface index because for the multicast tree. We as this branching node, there are multiple branches. We need to identify each branch each branch by assigning interface ID to 8. And, originally, we actually In total, we only allocate 32 biz to carry both node ID and the interface index. Why the node ID is 24 piece? and we have only eight piece for the for the interfacing index. But some Working group members suggest that my note is scalable enough. example, if we have actually more than 256 bronchies than We can now support it that in this scheme. So to crack that, We actually extend that by using 2 32 bit words. And first, the 32 b is a dedicated for the node ID. and the second 32 biz. We only actually use the first half part of that sixteen bit. as a interface index. So now we can support up to 16 k different interfaces, which is a big enough Next slide, please. So to indicate this 2 new data fields, option fields, the"
  },
  {
    "startTime": "00:20:00",
    "text": "Node ID and the interface index. We also need 22 flags to indicate the existing sources to data field. So we need to apply 2 flagabits in the extension, flat field. So in the red circle, white embate and i beat, imputed indicates Node ID, ibeats, eyebeats, eyebeats, eyebeats, indicates interface index. So with this, the right side again shows the same multicast tree as before. And you can see that for each node, if you're just output a postcard for some data collection, which contain the local data, And with that package, it just also carries a other information that's a node ID and interface ID. So with all this information, it can easily help data collector to reconstruct the multicast tree. It's So the revision summary is first, the IOM Datatriceandtheiomedx schools has been published as a RFC. So we have updates the documents to reflect that. And, also, we extend multicast branch, Heidi, to 232 b source for scalability as I just spend and to also to sub accommodate that we also need to apply 2 flags beads in an eye to indicate the multicast branching ID note that it's 2 b's out. need to be both need to be set, because we we cannot only use 1. We we we have to use both of them. if you support this this mode. However, in the according to the RFC, that is 3 26 Each flag bid can only indicate the existence of 1 32 bit word. option. option data. So"
  },
  {
    "startTime": "00:22:02",
    "text": "which means here we have 2 32 b's. We have to allocate 2 b's. of for for that. So that's a any collector know, okay, there are actually we need to to to get the 230 to bit worse from the optional data. Next slide. Yeah. So, yeah, Yeah. The last working group last call is meeting March And don't have enough response, and hopefully, we we can start initiate another round of the PRC, and Yeah. Yeah. I I wish I I body can read and this document, and they give a review and, like, such any suggestions I'd like to a a common that that in the new revision. Thank you very much. Mike, me, Brian, FuchsOY. Perhaps for greater success in the working group last call may being that the protocols in this draft We're developed in another working group, which is IPPM, maybe what we could do and we agreed to do the multicast portion here, it's and they under agreement with them. But maybe we can request you issue the working group last call to have include them as well, ippm, that working group last call, and maybe we'll have a better in Response. Alright. Yeah. It's a good idea. Definitely. Definitely. our our have Is IPPM still meeting? And are they aware of this work? Did that ever happened to. They did? Okay. Okay. we may need the remind them. remind them of their offspring. Cool."
  },
  {
    "startTime": "00:24:00",
    "text": "Any other questions, comments, Alright. Well, thank you. And said, we we can't advance the document without more support from the working group and consensus. So Please do read and provide comments whether you do or do not support. advancing the stock. Alright. Next up will be Sandy. Hi, Tim Chan. Just while Sandy's getting up there. I think it'd be quite useful to understand the sort of costs to the overall operation of the network in terms of these IOM methods that are being proposed that wasn't really, to me, clearly, conveyed there. I think that would be an interesting thing to make more explicit. And secondly, I did just check the agenda for this morning's IPgram that that wasn't on agendas k. oh, oh, Good afternoon, everyone. I'm San Islam from ZTE. I press I'd like to present the update of a multicast redundant ingress router failover dropped on behalf of our co author. Greg Yissong, Ying and the next piece. This is the brief introduction of this draft. The motivation of this structure is to bring some experience or guidance of multicast deployment especially in the redundant ingress, they are over scenario. and the disruptor is the information And the new course are again from by region, join us. Thanks for his work. next And and it's still the briefing of the"
  },
  {
    "startTime": "00:26:03",
    "text": "idea of this draft. Let's take the figure for example. We don't discuss the source protection. The multicast protection, we just discuss the ingress protection Because as you'll see, the source may connect to the multicast domain through 2 or more collections. So there are more than one ingress routergings So this structure analysis the global and and VPN use cases. with redundant ingress nodes. and the failover from the primary to the standby UMH. And we we also discuss 3, modes. That is the code warm and the hodge. And and the the the 3 modes had being introduced by FC 1926 previously. So this draft discusses associated with multicastor technologies. such as beam, peer, P2MPT tunnel and MLDP in the centric signaling and the failure detection functions such as DFD and and and or ping, eccentric used in the multicastor domain. Next, please. So this draft has being adopted after IETF One was re meeting, and we'd like to request for working good. Ask for more review. Thanks. Alright. Thank you. just a quick show of hands. Raise your hand if you have read this this doc, just to get a sense of where it is gonna actually Have you read press."
  },
  {
    "startTime": "00:28:02",
    "text": "So we think maybe we call for working group last call there are maybe many more people will review it. Yeah. Okay. Let's see. Alright. Everybody Raise your hand or do not raise your hand virtually. So I must have Have you read the draft? Oh, it's Okay. We'll So it looks like there's a few a few folks have read it. More folks haven't So Why don't we I there's two ways to go about it. We can wait till there's more comments on the draft, or we can use working group last call as we can look at the if the document is in a good shape, we can advance it to how about how about here's a better question. No. a shipper can be assigned for it too. Right? What's that? A shipper. Yeah. is Yes. Yeah. What I'll tell you what. sent a list."
  },
  {
    "startTime": "00:30:00",
    "text": "to request working group last call, and we'll kinda take it from there. at some time. One of the things since I review things on India and ops here is to ask for an early review of of either or both of them maybe. Either or both of what? Okay. into Deer And Ops Deer. And I think we can do in an early stage. Okay. Thank you. Right? Okay. Next up. is Bradley. Okay. So Bradley is going to talk about mobile app development of the off net sourcing, draft, off net sourcing app For background, You you folks may remember last summer in Philadelphia. Lauren presented the work she had done for her senior project at Thomas Jefferson High School. Bradley and another collaborator, Katie. Merrill basically, continued on her work. and for for their senior project this year and but gonna talk about how that's looking. I'm gonna update. Yep. So as Lenny said, my name is Bradley. and pretty much, like, the past year. So then My partner and I, Katie, we've been working on developing a little application, specifically focusing on adapting, like, mobile devices that are not NATOly connected to multicast network to interact with them. for for mobile network."
  },
  {
    "startTime": "00:32:01",
    "text": "slight lighting said, a bit of background. If you remember Lauren from last year. you guys hear in the back? Yeah. It's tough. Moving up a little higher, man. that better, Maybe I just need to speak up. think I'll just have to speak up a bit. Alright. I So Like Lenny said, Lauren presented last year on her project, multicast menu, which I sort of of as, like, kinda, like, the Google, of multicasting away. and that was based like a website, where she compiles different multicast streams that are available on the m bone. and that works pretty great on your computer where, you know, you have applications such as VLC Media Player, specifically VLC 4.0. which has support for AMT in it. where you can just compile that information, download an m 3 u file that gets you all that stuff. and you can watch multicastream off net. Off net. works great, which but it's not really practical on a mobile device. for one, VLC mobile does not have like the VLC 4.0 nightly builds, So no support for AMT and VLC mobile yet. and multicast menu, although it does have browser support, for getting multicast streams, If you think to, like, popular applications like YouTube Twitch, Netflix, people don't really watch YouTube in their mobile browser. So we felt that Ebola application was in need for that. And then some other previous work, the unicast to multicast translator, which is to enable off net streaming. So sending"
  },
  {
    "startTime": "00:34:03",
    "text": "data from an off net source and getting it on to multicast network. Hi. Sorry, Tim. I was just also very naive question maybe what is off net streaming of rates. yeah. So off net streaming, What I mean with that is, like, a device not on the multicast enabled network. because we recall multicast is all or nothing, So any device that's not Like, that doesn't that's not on a network natively connected to on enabled with multicast, does not have access to any of the Right. Yeah. That's that's what I mean by off net streaming, basically. Next slide. And just for memory refresh, unicast, the multicast translator, that was So for those unicast only sources, they can send a unicast stream to the translator, which basically just translates to the destination address from a unicast address to a multicast address. then once it's there, it can on net, on net meaning, on the multicast network. then it can be delivered natively or via AMT, AMT, Right? So, of course, our goal was to develop a mobile application for an an off net mobile device to interact with a multicast enabled network, whether that be to to view a stream, start a stream themselves, etcetera. So just talking a little bit of what we did we aim for, like, a cross platform mobile application. So we use multiplatform GUI framework, Kibi, mostly because it compiles for both Android and iOS or at least there's different tool chains that are available to help us do that. The 2, that we found at least or, like, Python for Android. and KIVIOS. The one that we mostly worked with was Python for Android. because one Android development is a lot less restricted, than iOS development, which kinda forces you to xcode, and neither of us had a Mac."
  },
  {
    "startTime": "00:36:01",
    "text": "But And also but also Python for Android was significantly more robust and had a lot that was, like, working out of the box for us in the sense that we were fairly confident that we could get it deployed to an APK. Next one. So this is just a pretty like, really simplified schematic. of how the app's workflow was essentially if you look at what we call our app multicast mobile, basically 2 workflows. which is either sending a stream or viewing a stream On the back end, Kivi provides access to, for example, the Android hardware camera. and we can just make API calls to that. as well as using the FFmpeg multimedia framework for you know, actually encoding your video and audio. because It's not. there's not much interesting things to see if you can't see or hear it. We sent it through the AWS box that multicast menu is on mostly because It's for, like, the future goal of having it integrated with multicast menu. and that basically forwards it onto the translator, which, again, is on the border between off net and on net. then at the bottom is sort of the workflow for actually getting a stream off of whether it's one that already exists, for example, the translated streams coming from TJ, which is the highest way I go to. We basically treat the app or the phone that the app is running on as its own AMT gateway, which then communicates with the AMD. Relay, again, for example, like, the relay that lives at the high school I go to, and interacts with that and gets the packet and data flow going so that you can watch your streams. Next slide, please."
  },
  {
    "startTime": "00:38:03",
    "text": "So just talking a little bit about the features of the app, Like I mentioned, we have sending video streams and viewing video streams. with, of course, the phone being initialized as AMT. Gateway, We aimed sort of to have a YouTube kinda looking. GUI, and this is sort of something that Lauren last year. paid a lot of attention to with multicast menu as well. which is just making the multicast experience a lot more user friendly, because if you think, like, you start, like, looking really back in time when Multicast was a little bit less obscure than it is now. There's a lot of, you know, terminal messing around with the terminal and doing all sorts of other things that general public, is not necessarily capable or willing to do. making it more simplified more simplified and usable interface to access multicast streams is big focus of ours. So these are just a couple of screenshots from the development environment. that I had on my laptop. It's a little bit simplistic. which is, again, kind of the goal But but you can see like heavy inspiration from, like, YouTube with the concept of thumbnails, and For example, in this picture here, you can actually see one of the streams of senior research presentations, from TJ. This is an example where it actually was translating the stream from multi or from, like, an AMT relay onto the development environment, It's a little bit frugal. because there are quite a a few limitations, which I will discuss in the in the upcoming slides, but yeah, this is, like, the general look of it. And I would say compared to"
  },
  {
    "startTime": "00:40:00",
    "text": "like, terminal commands. It's lot more friendly to use. Next slide, please. So this is sort of like a to do list for the Kivi implementation. I mentioned multicast menu a lot, And something that would, like, really make the app a lot better as integration with multicast menu. If you recall earlier, I describe multi cast menus like the Google multicast because multicast menu is the place where it scrapes information on streams and provides it for users to look up. so having the app have that same functionality would be really neat, There are also a couple issues. For example, video encoding and camera orientation, And these are all sort of limitations of kivi. sort of the idea of, like, when Kivya advertises itself as a multimedia GUI Framework. Some things sound too good to be true. And that's kind of one of them because API frameworks change is that, like, for example, between Android and iOS, Your API calls are different. and there's different ways to access the hardware. And so you know, there's a couple of little kinks, And because of that, like, you know, it was really we still haven't really figured out ways to, like, you know, make it, like, for example, like, a full screen or, like, help having the stream adjust for, like, a vertical versus landscape orientation of your camera. then the last one, which is native multicast integration, We're still kinda debating whether we should actually enable that or not. or, like, work on enabling that or not. And that's simply because most mobile devices probably aren't gonna have need a multicast connectivity anyways. that might be for something later on in the future when more of the Internet enables multicast connectivity. Can you can you elaborate on that with by native multi"
  },
  {
    "startTime": "00:42:02",
    "text": "integration, you mean, on the receiver side or the source side? So we say that we actually mean both both and and would say receiving is probably bigger challenge, on that end. But, really, when we say native multicast, we mean both sending it and receiving it on the native, at did you find it it is is it even possible to send or receive native multicast packets Or is it really difficult. This is actually something I'm gonna touch on a little bit. later on. But Short answer is It's complicated, and I'll explain why in a bit. So like I mentioned, Kivi is a little bit too good to be true. the sense, in the sense Like, it tries to Do everything for everyone And in doing so, tech doesn't do everything that we wanted it to. So something that we were thinking of doing was a sort of like a rewrite in native Java or, for example, like, writing an app natively for Android and an app natively. fro. iOS. Android permissions were a big reason of it. the Android permissions kinda didn't really play well. actually building it to the APK And then, also, like, kiddy again. not really being Specifically for Android, we had to do a lot of hacky, methods to get things working. for example, like, even setting up, like, a camera preview when when doing our setting up our camera to you know, get video and sending it to your translator. basically had to do a solution where you had a camera running, you had to get the data. onto, like, a preview, and then you'd actually take the texture, on your preview. and then pipe them into Emtek, which, again, sounds really hacky, and it kind of is."
  },
  {
    "startTime": "00:44:00",
    "text": "because Kivi wasn't really working great with that. And then Jot The native or sorry. Like, a Java rewrite would also be really helpful. we think because Android in the documentation and this is Java as well. They have multicastockandmulticetchedchannel support. as well as support for IGMPV 3 natively. And overall, would integrate better with Android OS. the caveat here being If you could go to the next slide, please. caveat being that IP multicast needs to be enabled in the Android kernel for native multicast to work. And, unfortunately, from my brief scheme of Stack Overflow. It seems that many devices that come with Android don't have this enabled in the kernel. and It's not that big of a deal because you can just build it from source yourself like, you can, like, build Android from source yourself, But this sort of goes down that rabbit hole again of where need to have a more advanced technical know how to get this done. n, with our goal of getting, you know, more people to use multicast or have access to it. as something that's not really feasible. I'm gonna mention this a little bit. video encoding and decoding is sort of like the other big limit that we encountered VLC, which we've been using a lot for testing, and, for example, we won't take out the menu. relied heavily on VLC for actually, like, watching your streams. don't see an FFmpeg when you use it on your computer are great. taking care of all the encoding, decoding, muxing, demuxing, and all that great stuff. But it's a little bit less Good. Good. on Android. Even though Android's, like, you know, it's built off of Linux, but You know, permissions are different."
  },
  {
    "startTime": "00:46:03",
    "text": "and the Android port of VLC again is not nightly build. So yeah, those are sort of our limitations that we encountered. And just for background, for those not aware, vlc4.0 is the version that has AMT support or, specifically, AMT gateway support. So the I think that's a beta version, current shipping production version of VLC doesn't have The any AMT gateway support. So yeah. So everything that we're doing is sort of in continued development. Like, even though, like, I'm going off to college next year and all that, I should have enough time to still be working on this project. And so Multicast mobile, the kiddie version is already open sourced on GitHub, where you can which you can see there. as for the Android and native Java rewrite, I plan on open source and get really soon. I already have it in a development environment on my own computer. Still, tingering with a little bit to see if it's actually more feasible than our QVM implementation. because the like, each of them kinda has their pros and cons right now, and we're still weighing out which is the best approach. But but Either way, we hope to have, like, pretty fully flushed out. app sometime in the near future. Cool. How how about is multicast mobile is there a way to get it available in the Android Play Store or the So ITunes? Not yet. And the and, like, that sorta goes back to Android permissions being really unhappy. with some of the things that we're trying to do. But once those get sort of, like, ironed out, then it will be on the Play Store. just have to iron out a couple things."
  },
  {
    "startTime": "00:48:00",
    "text": "Cool. So, yeah, I think that's it. Questions? Questions? Hi, Tim Chiang again. what do you think is a good initial use case for this? It kind of needs to be Either on the sending side, it's kind of obvious. It could be any multicast scenario where you you wanna send from a mobile device, that would be great. So it's really useful just for that. it sounds like what you're saying with the AMT for Android. That's something you can do. But from the receiver side, the user side, it kinda needs to be something that's of importance to some people, but not too many people. to be a good application Do you have any ideas for what that might be. Yeah. So, like, our inspiration is mostly from you know, like, your popular streaming applications. Like, YouTube, Twitch, Netflix. and This actually goes back to, like, how I sort of got into the project in the first place. like, when I first met Lenny and, like, I saw his presentation on the topic, and there's that, like, graph of, like, you know, your you know, cast only networks, CDNs, and then treaty end, which is what this is sort of part of. and sort of, like, your it was, like, sort of, like, a cost curve where example, unicast doesn't scale well with cost because you have to have more nodes. to send more data to people. multicast significantly cheaper and has a much lower overhead. So And then we also felt that targeting the app development for specifically sending and receiving video streams. because we felt like at least when it comes to network streaming, for example, or sending packets over the network, that's I would say that's the most common use case of network streams or at least on the wider Internet."
  },
  {
    "startTime": "00:50:02",
    "text": "And so we felt like we wanted to sort of mimic what YouTube and Netflix Have already. But with you know, like, your multicast treaty in. back end. Okay. And I guess part of that is sort of what sort of level level Where would you see the gateway is going how far into the netnet blah blah blah. where would those go if it was campus environment or if it's on a on a true mobile, 45 key environment, Why would those go? Yeah. So So, like, the 2 components that, like, are, you know, the if you if we recall, like, the AMT relays and the AMT gateways, like, the 2 components that actually like, get data, from the multicast single parts of the network onto the unicast parts. I've if I remember correctly, there's 4 AMT relays. already. Yes. that are There are more, but those are the 4 that are connected to Internet too right now -- Right. -- by 2 members. So let's say there's oh, sorry. A few more have been deployed in. since but those aren't public relays just yet. Tim, when when you mentioned gateway, you mean AMT gateway? where Oh, sorry. What do you mean relay? If you go well, go back to the you you got a nice diagram at the architecture there somewhere. So that's the 4th or 5th slide. Yeah. That one. Sorry. The relay So Yeah. I mean, I think Zion has deployed too, but they're not sort of publicly available. if, say, a hypothetical Nren like mine was interested in supporting this, But how and where should we deploy this? Is it initially one on the backbone where we see if anyone is actually going to use it or beyond there where do you see it going into the campuses, or should the campuses be doing native cast bit."
  },
  {
    "startTime": "00:52:00",
    "text": "what's what's the sort of path for this if if you know, if if the great software development leads to something that people want to use. Right? I mean, least for me, I'd probably see it on campuses. 1st, 1st, I think, actually, there was another presentation earlier in the day. from one of the other IETF meetings I went to. I can't remember the name of it. Oh, is it the it was from the research symposium? And it was actually a group of college students who are developing a way to scrape data from wireless routers. to better gather data for AI and ML applications. Okay. And their idea is that, like, kinda use, like, a campus as, like, a testing ground. or, like, sort of like a launch pad, build your platform. off of, off of, in a way or, like, to play around with it, see if that actually works out. up or a UCS the -- Yeah. Yeah. That one. I'm missing a school. pilot or some some word like that. Right. Yeah. So, Tim, to answer your question, if you have a relay, Alright. Okay. No. It's just really good work. we we we would very much welcome you to the to the team. So so today, in terms of status of the global treaty and public network. It is 3 Internet 2 members that have Jerry connections gre tunnels connected to each other. and There are a total of 4 AMT relays. and they map to the way that works is there's a well known global fully qualified domain domain name called AMT Relay dot m2icast.net. And as more relays come on, they just add another a record for them. And the goal is that that will be All the relays are a globally connected"
  },
  {
    "startTime": "00:54:00",
    "text": "native multicast network. And the way VLC works is it randomly selects. You get it gets it it ran randomly selects 1 of the 4. it gets back all four a records and then just picks and and builds a tunnel to that. you get that gives you redundancy and load balancing, not necessarily reality, we have some ideas as they handle making things more optimal. But We would love to get more relays. We just connected Internet 2 and giANT brought up a appearing between the two of them between the members of I2 and gianz So in theory, Each network can transit each other's sources And I believe your your part of you're a member, Ren of Janth. Right? Mhmm. Yeah. But if you'd like to join the party, we'd love to have more public relays. And the idea is the relays create a a global public pool of relays, that can support receivers anywhere on the globe. who want to act who are unicast only receivers. So I think maybe I maybe I should leave my other questions to the last on the agenda and what we've learned from Multipress. No. Yeah. I I can see how that would work. Just one aside, while we're there, Internet, 2 Have they re enabled multicast as they took it away? Yeah. fact? No. So Is it So, basically, the the for those not aware, you know, Internet 2 was multicast enabled. They created a new architecture and the architecture didn't actually support multicast with the vendor that was selected for the the routing architecture. So They had planned to build a tunnel server and they hadn't done that yet. So the"
  },
  {
    "startTime": "00:56:00",
    "text": "The members that were part of project just built separate GRE tunnels to each other. And that's happening as we wait for i 2 to bring back multicast. I think they said they were I just wanted to verify if it had happened. Yeah. Yeah. Yeah. They've been kinda quiet. we we've about about their plans. So maybe. If we have ITO members here, you know, they do respond well to their membership in terms of supporting what they need. So reminding them of the content that or that that there is interest in getting that back on. I think that'll that'll certainly help prioritize them. Okay. And I guess I should asked question. It's the horrible question to ask. when we look on the Janet backbone, the only hardicast application we see pretty much is 1 called EU MedSap, which is a You're probably aware of it. which is a European project gathering satellite data and passing it around. to actually justify putting a relay on and the effort and all the paperwork that's involved these days rather than just sticking a box up. she can't do anymore. We need to have some idea of what the use case, what the application needs. Inc, B, So some plausible answer to that would be very helpful. So so for the people that will be using it and what what is it they're going to be looking at? What are the examples of the streams? So something there. maybe between us and the R&D communities, we can come up with something and put some effort into that. I know it's not the exciting part of this because always did in the technical part. but it is still an important question. I know we've had think Jake from He's here. today. But, you know, he was speaking about the sort of content he could bringing what his company could bring, for example, some plausible answer for that to help justify the effort of And it's not a lot of effort, but you still"
  },
  {
    "startTime": "00:58:00",
    "text": "creates all the the proper rationale for doing these things. k. thoughts along those lines would be useful as well. Yes. I think EU Metsat is is is probably the best example use case for this model. a typical person on a mobile device isn't really gonna want to look at Yeah. atmospheric telemetry data is not probably the killer But it is app. You can make it look interesting. So for for for those who may remember, we actually had you met Sat and giANT Ruth and Rich present in London and Bundy. and gave the details of their deployment. And you met sat basically, They like using multicast because they've said it it reduces costs for distribution by an order of magnitude compared to unicast. CDN delivery. So they They have Yeah. So so they are actually driving the deployment those AMT relays in giANT because they wanna get their content to research institutions that may or may not be connected to the the m bone may or may not have multicast native connectivity. So for those that are unicast only, they wanna be able to deliver that. So that is probably the most commercially viable example. is not that sexy. Obviously, it's not video. It's I mean, you mentioned Twitch, for example, before. I mean, if there was educational R And E related content on Twitch or a platform like that that could be multicasted. That would be a nice use case. Oh, that numeric first. So Just be interesting to between yeah. Maybe the people in the room are not the right people. Maybe it's different people that can come up with that to come up with"
  },
  {
    "startTime": "01:00:00",
    "text": "just a small list of things that are plausible for interest To go along with those lines, just a plug for Bradley and Katie and and Lauren's work. If you go to they've essentially done exactly that with the multicast menu. So If you go to the multicast menu, you'll see the research presentations from Thomas Jefferson and you can actually watch They have a number several channels just continuously streaming. You could see see their work. and I'll I'll post that into the chat, the for for folks who wanna take a look at that. Hi. Chris Leonard with Verizon. Android is kinda when people think of Android they think of mobile phones, but they're also used on IP clients. So with some of the work you're doing with looking at the feasibility, the challenges with getting native multicast into Android. that might be useful to the community to kind of inspire some of these IP client develop burs to looking to actually supporting that or maybe going down the path of having more native AMT gateway support in the phone. But, yeah, I think you know, that good if there's a working demonstration, then that I could prove to people that this is a path forward and made drive more clients that would wanna use it, therefore, you know, pushing some of these other technologies to support, video going down to and devices I I guess it is kind of a vague term. Can can you restate the question? just so for the record so people can hear. Okay. So so What do I mean by an IP client? It could be a set top box. It could be you know, like a a thinner client than a set top box to maybe not the full guide or something like that. But just a IP device"
  },
  {
    "startTime": "01:02:01",
    "text": "dedicated in this case dedicated to video connectivity that would be used for playback on a TV Yeah. So I think it also kind of falls in, like, in a way, like, pressuring the folks who actually ship out Android on, like, Android devices to to enable multicast natively on the kernel. and I'd probably or that would require for example, like I mentioned earlier, sort of like only way to really get it natively right now would be to build the Android kernel from or, like, a compile Android from the kernel. by scratch. enabling it yourself And that's something I haven't plan on playing around with it, but I haven't gotten to it yet. And so I think, then, really, the step forward from there would be to get a working demonstration of it, working with the native multicast implementation there. And then from there, we can see where you know, we can see where it takes us. Because Java and Android. I mean, Android even on their own in their own documentation. They already list support for IGNpv3. they have a dedicated multicast socket class, which is, you know, an extension of your UDP diagram socket, It's really just the issue is that people aren't shipping it out or, like, enabling it for the public to use. So Yes. gotta gotta put the pressure on them to Yeah. But and it may not end up in a consumer device like a cell phone. Right. But the developers working on end video IP clients, Obviously, you know, they don't have that same burden. You know, they're just creating something maybe proprietary for a company. Maybe it's something off the shelf but it would definitely be a different type of user."
  },
  {
    "startTime": "01:04:01",
    "text": "and they could just do all this under the hood, and the only thing that a user would see is the actual told, playback, softwaremethod So it good work, I'm really interested to see how that goes. Thank you. 3. Any other questions for Bradley? Cool. Alright? Great work. And, yeah, it posted I posted the the link to the multicast menu. So You could see the amazing work that's being done and Congrats to Bradley for his first presentation at an IETF. and and I might add the the 3rd ever school student in the history of IETF to ever present. So high Okay. Next up is Yisang, k. Yisong, you're are you there? Yeah. Okay. You are up. Let me Let me give you access here. Okay. should be able to control these slides Okay. Thank you, Chase. This topic about the Multi cost potential multicast service in the DC for the computing and the Storage. And"
  },
  {
    "startTime": "01:06:05",
    "text": "In the large scale DC network could have a significant amount of potential multicast services running. include AI training, and all the high performance computing and the storage area network. So this type of scenarios in the DC network for the AI training, and The training model distribution under the parameter designation, maybe For the potential multicastas service, In the left fig, For for the parameter server, we can look at at the as a multicast source, and the GPU worker we can look at As the receiver, So in this scenario, the receiver number and maybe be maybe not many, but maybe beyond 10000 of the receivers. And the for the HPC, high performance computing, and the dispatcher master starts millions of rank MPIs. and the broadcast of the messages to a scalable number of dispatcher agents. For this scenario, and the receivers Maybe beyond the 10,000 of numbers. For the said a scenario at the storage, And for this, the scenario Uh-uh. the maybe Thousands of the files, I needed to copy"
  },
  {
    "startTime": "01:08:00",
    "text": "to the server for the reliability and the risk and and the the receiver, maybe the number of the receivers, maybe very low. Maybe several receivers is not for the AI training and HPC scenario and the MPI. it's usually used in in this scenarios. and what is the NPI and how it connect with the multicast The MPI is a application program interface. defines the model to to parallel computing, where each parallel process as its own local memory, and the date must be explicitly shared by passing messages between processes Using the MPI, alone Close the per gram. to scale beyond the processors and share the memory. of a single compute server to the distributed the memory and the processors of multiple compute servers. combined together. So MPI parallel code require some changes from the serial code. and NPI functions cause To communicate date, are added. So and the date must have somehow be divided across processes. There are 3 categories of the functions that for under collective communications operations. Some of them are related to pmpormptonp. that may be a potential multicast service For example, for the MPI B Cast. That means we can see the a fig on the right for the MPIB customer. That's it."
  },
  {
    "startTime": "01:10:01",
    "text": "like, the traditional ptomp multicast a service and send the message from the process is the rank of the root, to all other processing in the group. And For the MPI or reduce, it combines the values from all processors. and distributes the result back to all processes. in the MPI all reduce fee. you can see 4 processes. And Arie process. Had 2 numbers. And the the first we can calculate the first four numbers the the sum of the first and 4 numbers and the the result is the 18. and we the 18 numb the the results, 18 will distributed to the to array process for from the from the 0 processed to the sort of process. And the The same as the 2nd, this number. the the result is the 14. also distribute to array processes. And the 3rd is that the MPI altogether. That means the call gathered and saved data from all ranked and provide to Orang's it is logically identical to npi gather to a route followed by MPI be cast from that route. That means in the Fek of the MPI altogether, we have 3 processes. and the The process 0 has the red date. And Process 1 had the Green date. process 2 has a"
  },
  {
    "startTime": "01:12:01",
    "text": "Bluetooth. And the result is that The array process has all of these three color date. And so MPI is or or similarly Sameer. interface implementation is widely used in parallelcomputing for the HPC and AI training So According to the previous scenarios. we can have some questions for discussion. One is the first first one is that the network layer has a role in HPC or AI training scenario. The second is that what is the benefit of doing that cost? in network layer rather than application layer. The third one is that does it request a new multicast approach to code? For example, new tree. setting up signaling. So the traditional multicastor tree and setup process. It's suitable for the multicancer surveys like IPTV broadcast, that is traditional surveys for the money cuts. which is the receiver treatment. So in a previous scenario in the DC Network. can we can the source driven signaling as more suitable The 4th slide, that that data question. New market has a forwarding plan. So And maybe we need a more flexible and a scalable The first one is that that is the request new medical transport plan."
  },
  {
    "startTime": "01:14:02",
    "text": "So there were reliable multicast transport work anti have no is the protocol. Is it enough? Hey. That's all. Thank you. You you, Song, is this Which which working group do you propose for this draft. It's not it's by 5 the said the group, It's I'm not sure. Which global is is a purple Hi. This is Jacome from Huawei SD Corder. I some materials have been re removed from the these slides we have ends on very detailed example about how to use the, for example, p2mp multicastmpi into the existing HPC scenario. For example, HPL with which is the typical HPC benchmark. or the the AI training process, but it it is not very related to the multicast topic. It's quite related to the computing process. But in people are interested in the details we can upload or share in the mailing list. That is the one thing I want to provide as the end additional information. And the second one is maybe the respond to Cher's question. Actually, what we are trying to do is to show that we have found some potential new opportunity for multicastal deployment, but what is the department exactly is is still under discussion. So it's we we have at least a lot of open questions for people and we we want to seek answers together with the room. Right?"
  },
  {
    "startTime": "01:16:00",
    "text": "Are are you presenting this draft and other working groups as well? Actually, we have some quite similar presentation in beer in last IETF. And but we we think beer is more focused on 1 off type of the solution but this is, I think, kind of new scenario and the requirement should come first. So maybe the the most important thing now is that people discuss whether it is the opportunity for multicast. And then next step, we want to see what is what is requested. For example, the forwarding plan, control plan, or it's transport layer, something like that. And then we we go further what what type of existing technologies should be used or we want something new. So that that is kind a long way to a particular solution. So now we just want to introduce some what we have know about the scenario and what is, you know, what has been done in the field. So, yeah, actually, we we can share the the information we have know about these scenarios for for people who are interested and we can discuss. Right? Yeah. Hi. Dale Carter Energy Sciences Network. I'm not an HPC person, but tend to work with a few of them. on they end up being quite concerned about reliability to the extent that they barely believe in congestion Right. Right. Right. Right. for in these big a HPC environments, So I'd Is Norm really the solution for this sort of Is it the solution for this sort of problem? or if or I guess just more generically, have you gotten enough feedback from sort of the RDMA world on this approach."
  },
  {
    "startTime": "01:18:05",
    "text": "Thank you for the question. Actually, that is one of the crew show a problem for what custom form of RDM is arrow. Yeah. The reliability is the first thing. So what we are considering is how to up a multicast reliable connection, p2mp connection in the transport layer actually for RDMA. Actually, there has already been some research And we have tried some similar mechanisms like wrong norm because norm has, for example, gathered the ACK and to make it more reliable rather than a UDP connection but the congestion control not yet. So I think there are still a lot of things to to be done here, not only in network, not not only in network there, but also the the API, the their reliability and then something else. I think it it is very crucial. Yeah. Yeah. Mike McBride as a pimp chair. I just talked to a stake who also chairs Pam. The choice would probably for this type of document would be discussed either here or in PIM we both fill at least at the outset that at at use case scenarios involving data center would probably not be best fit in Pam. I would This type of discussion will probably be best here. That's just our opinion. Thanks. for the feedback there. Here's another question. for the reliability, congestion control, is it possible that let's say, multicast extensions to Quick. Would that be a value or Could that be a potentially Yes. Actually, there there has some Multicast quick solutions that is under discussion in Quick Working Group. And we are also considering to work on it, but it's kind of it's part of the answer. So what we are seeking for is where can we seek"
  },
  {
    "startTime": "01:20:01",
    "text": "for example, people interested in this and make all the parts gather to make it really work. Because if we just care about the transport layer reliability, yes, quick, maybe the answer. and or any other extensions based on existing RDMA transport layer. And what we are trying to talking about is that whether people think it is, you know, potential scenario and need a whole picture to discuss and where to do it. Yeah. Yeah. Sure. I I would I haven't read this draft. I very briefly bruised it. but I I would say if if it's I think if if it's in any way, hopper, if it's not calling for changes to the protocols it probably belongs here if it if it is calling for changes to multicast protocols like PIM, or MLDP, then it it would fit in PIM It doesn't sound like that's what you guys are describing. So as well. Yeah. Yeah. We will try to put more information in there. Thanks. Any other questions? Alright. Thank you. Thank you. Alright, Mike. You're up. taking his home, view Okay. This draft has been presented in the past. It's since been adopted by Pam. It's being presented here. for 2 reasons. One just to provide more visibility to it, and the other one is that"
  },
  {
    "startTime": "01:22:05",
    "text": "doesn't meet till Friday, so you guys may not even be there. So I just wanted to make sure that you guys are here, and this is an operational group, and we use your feedback. So next slide. Brief background is in another non multicast site meeting. It came up the question was we could really use some document that that discuss this multicast and all these protocols that were used in the past. and why aren't they being used now and it's very confusing, and it would be very helpful to have a document that kinda talks about the lessons learned. And so we the authors came up with such a document to help people understand the previous development work particularly over the last 30 years. several of us have been working at multicast for a long time. and perhaps this will help with a better understanding of ongoing efforts that we have today and why we're working on things today and what we've done with the protocols in the past. So we did start just to give you an example with a product called dbmRP, a distance vector algorithm that floods and prunes, over tunnels, and it was used in the early days. fairly successfully. we quickly found out that it didn't scale well for larger deployments. And when you have higher bit rates on the application side. And so we had to you know, the network suffered, and so we've moved on from DB ERP, but it was useful for at the time, particularly in the end bone that was discussed earlier. And so we've done the same thing with other protocols. Just kinda describe, you know, how we've bulle from initial IGMP version 1 to version 2 where we now have leaves and then the version 3 of IGNP or MLD where you are able to join particular sources. we've done that with protocols with dense mode and sparse mode and MSDP. Actually, we don't get into MSDP and maybe we should next slide."
  },
  {
    "startTime": "01:24:05",
    "text": "These are the current protocols and topics that we've addressed. there could be twice as many or three times as many that's why we're here discussing it with you. to just kinda get some feedback and maybe some protocols that you think maybe interesting that we should be talking about. Next slide. So we added BIDR per somebody's request do so. Actually, I think it was Lenny brought that up. We added a little bit about m bone particularly as it relates to DBMRP because that's a good history to know about, we should maybe even include a little bit about m bone and Internet too and all that in there. I'm not sure if that's necessary. But We haven't included much if anything about MSDP and AutoRP and PGMP and MOE app and ad cap and stuff. perhaps we should. There are some protocols are working on in PIM that's kinda re rediscussing the group location protocol, so maybe we need to get into that. but we are focusing on major issues and lessons learned don't plan to include all protocols But each IETF, we update this draft, and we're just including new information, and we're planning work on this information on draft. Probably for quite a while. that's it. Any questions or comments? So Dale Carter Energy Sciences Network at what point are we blaming protocols for economic issues. So as an operator, I mean, I protocols are fine, you know, whatever. We brand huge, distribution trees and sparse mode with MSDP for years and so on, but wasn't really the issue with the the core"
  },
  {
    "startTime": "01:26:01",
    "text": "So are the lessons really in the protocol side or the lessons on sort of what happened in the intermediate 20, 25 years of those initial deployments did today. Yeah. Very good comment. We don't get into the economics of it, but maybe we should briefly mentioned some of the pain points in that hidden reason why we've moved on from certain protocols. It's In some cases, like I mentioned with d mrp, it was mostly about it just didn't scale to meet the later demands, but Yeah. That's a good point. Let's Think about that. Think about that. Yeah. Otherwise, when I I read through it, I think probably after the last time you presented it before, at it's really excellent. really liked it, and it brought back a lot of memories. Sure. -- these things that I forgotten by this Yeah. fix, Hi. Yeah. Tim Chanda. So there's mean, there's I It's hard to say. A litany of lessons learned from GSA MSDP that you could write about. So I think the question is, yeah, how how deep does this postmortem need to be Are we likely to repeat the mistakes of that? So I think I think from the knowledge in the group, it's unlikely. The question is who might read this use that. maybe there's not so many people in this room. who might read this, who's going to benefit from it. Is it just protocol designers this is targeted at? Is it who's the who's the audience here? The audience could be quite open. I mean, I use the example of Madcap, but in PIM, we're reevaluating the group allocation protocol and we kinda had to ask ourselves, where where were we? Why Why are we even here with these new group allocation protocols? And while there's some other ones that another working group worked on years ago, Madcap and others like, oh, yeah. Yeah. What what was the limitations of those? That's kind of the purpose of it is to kinda help understand why we've dismissed or moved on from certain protocols to see where we are at today."
  },
  {
    "startTime": "01:28:04",
    "text": "just to help people just to understand it better. Again, as I mentioned, I came up in a side meeting people were confused about multicast protocols, and they're like, what? why do we have so many protocols and Why are they being used the way they are? And this draft is supposed to help that. There's that old joke of if you one person asks the other How do I get to such and such a place? And the other says, well, you don't wanna start from here. I think that kind of applies quite quite well here. So I think Yeah. I mean, I like the draft. I think it's really good. It's just a question of how much that you want to go. Yeah. Yeah. So I guess you you would probably take contributions from people as long as they're written a fairly a check. Absolutely. Yep. please. Please do. And and for what it's worth in terms of the audience, when we started, it was kind of a coin flip. Should this be an m bone d? Should this be PIM, and what we looked at was the lessons seem to be more pertinent to protocol lessons. than deployment lessons, so it fit a little bit more into PIM in terms of economic lessons that's in neither of our charters. So we we we're we're sticking with just the protocols and and what's what's So so you could think of in terms of, you know, probably the the the audience would probably be protocol developers of multicast related protocols. I think, I guess, it might also be Yeah. Yeah. From that. sort of an academic point of view sort of research as people proposing maybe new methods that would be useful to read this I think also that has been is it the IAB? There was something in the quite recently about a draft on our CEO statement from the idea about lessons learned from protocol development and keeping project policy. I don't remember what that was, but there was something certainly mean, they do that sort of thing all the time, but there was something more specific recently. that I can remember. I'll see if I can take that out, but you could probably point at those more general principles that should always be followed. Thanks."
  },
  {
    "startTime": "01:30:06",
    "text": "Sunny's on the TV. I think this doctor those mixes. been because it will bring many of experience of multicast protocol design And I also think it's a big work because so many modicasa technologist should be included included in edge, and there is many technologies that we all know and there is many technologies that somebody may never heard heard about it. So so it's a big work and hard work grid. Okay. So it sounds to me like you're Yeah. proposing having expanding the scope of it and having more having more protocols that we address, and that's fine. This is Dina. After I think maybe we should reconsider talking about MSDP. because that was the only way to get sources to work into domain. and it led tests of some. the strong push to SSM. So maybe maybe we should talk about and there were a lot of lessons learned from them. That's true. Yeah. Okay. Let's conclude that in the next update. Alright. Thank you. Yeah. I always thought I'm sorry. Oh. Oh. Greg, did you have something to say? I I always thought MSDP was a It wasn't the cause of the problem. It was it it was escape goat. It was more like it was driving the the getaway vehicle. It was really, you know, that's that's Yeah. It it it wasn't the cause of the problem. The cause of the problem was ASM and and, you know, as long as you you have to have every any be anyone able to be a source then you need an MSDP"
  },
  {
    "startTime": "01:32:03",
    "text": "So it wasn't -- True. I would I don't blame MSDP. I blame ASM, Greg, I'm sure you have something to say. No. Alright. Anybody else have anything? Okay. With that, Meeting is hereby closed, and for coming, and we'll see you at 1 18. Thanks everybody. And Yes. Oh, and thank you very much, Kyle, for taking notes. with this was the least amount of arm twisting we've ever had for a a notetaker. you know, wow. gonna have to make sure we're gonna put you on the conflicts list We're we're but you can Oh, sorry. Greg, you should be able to unmute yourself. Greg, I can't unmute you. you can unmute yourself. I can only That's fine. I think"
  },
  {
    "startTime": "01:34:36",
    "text": "Hey, Greg. Sorry. Yeah. Yes. Cool. Well, I think there was Yeah. about this time."
  }
]
