[
  {
    "startTime": "00:01:18",
    "text": "Yeah. Good morning, everybody. Hopefully, you have enough coffee. If not, please go get more coffee quickly. We're about to start. I'm Gary Fuhurst. I'm here for the second time. Nice to see some people again. This is the longer TSBWG meeting, and I'm here with my culture. Who is?"
  },
  {
    "startTime": "00:02:01",
    "text": "I'm Martin, and Welcome to TSBWG. This is the. please read it. Please read it. It has important information regarding Copy rights, intellectual property patterns. It also has our code of conduct, and we take that seriously here. We already have Oh, there's a question for regarding the note well. Please, go ahead Apparently, we don't have a question. Yes. I mean, of For the remotes, please. As I am remote, Yes. Who he what's your question? I can I can barely hear you. So if somebody could adjust the sound increased the volume for the remote, it would be great. Thank you. I don't know if anyone's in me tech or maybe that sounds like a med tech or a problem. We don't we have good audio in this room. So Perhaps, if you consider to have a problem, please put it in the chat. and we will try and get me tackled to look at it. Now when you spoke into the mic, It was perfect. Okay. Great. We already have a notetaker. Thanks a lot for that. We are using the Meet echo. My"
  },
  {
    "startTime": "00:04:01",
    "text": "queue here if you want us if you have any questions or want to comment, please get into the queue. If you are not in the queue, You're not allowed to speak. and this is our agenda for today. We have a lot a lot of things. we will start with I'm I'm not gonna read everything out loud here, and that will take too much time. That's the second part of the agenda. any objections to that agenda. That is not the case. so we will proceed. 2nd? he's been slouch. Can you say Yeah. Okay. there is one slide in the slide deck last meeting, meeting, for the 1 hour TSBWG session, which we didn't manage to show is the speaker for that on the I have what was the draft code? Do you remember Martin? Oh, protocol numbers in UDP options? is is the author of that in the room Let's show the let's show the first slide and move on is this Oh, Just click coup Go ahead, please."
  },
  {
    "startTime": "00:06:01",
    "text": "this question. Hello? Regarding this business of to the a call numbers in duty option. And, Christian, this is just a wait, Christian, this is not a debate on this document, it is purely announcement the document exists, and people to read it in the group. because I think we've been discussing. So we're not presenting it this time. Yeah. Thanks. will And I think probably this discussion we've already had here is enough to You alert people, to go read that draft. We will show the draft name at the end when we get to and we will proceed with the agenda for today. sorted. Oh, didn't you? Yeah. Okay. Gory Furr has going to stop being churn, start being presenter. flags and forwards. Hi. I'm Gary Feuerstein, one of the core editors of the careful convergence of congestion control from retained state ID, this is now a working group item. A quick reminder, it's got an algorithm. The algorithm is meant to Test some information you previously had about a path, congestion control state, a you know there's a lot of capacity available. Last time you used it, you know the RTT. Last time you used the path, Are you start reusing this path Each then decides if the path is the same. We call that reconnaissance. If he tears, then the method attempts, to jump to the previous rate or a subset of the previous rate in what we call the unvalidated phase. unvalidated means"
  },
  {
    "startTime": "00:08:03",
    "text": "You're not really allowed to do it, but we think it is safe. And you look for validation that that capacity was actually available. This is the yellow part of the graph. and, hopefully, you proceed out of the top in normal phase with normal congestion control when all that works well. The tricky bit, of course, is all when this all goes wrong. So the bottom bit of this graph shows the red reconnaissance phase, you discover the RTT is different to normal, in which case you follow the dotted line which means you don't actually do the jump or change your congestive controller in any way. If at any time during the reconnaissance and unvalidated phases, you discover negative feedback that there was congestion on the path that the RTT is very different to what you thought it was, be it higher, be it lower, This is an indication that something is not consistent. at the immediately you need to do a safe retreat. reword retreat is cute because it's a new mechanism. We don't quite know how defined, but we have some good ideas. So this is what the this piece of work is about. Hopefully, with this one picture, might feel enthusiastic to go and read the draft and help us do this. So Let me continue. This is a protocol spec. So we have changed the status to PS. submitted it. There was an adoption call. It was adopted. We've aligned terms throughout the documents so that the various authors all use the same language to talk about the same things. so we think, please ask if you think they're not consistent. We added some little text on floor control interactions. more of that fun later. Next, We have started to try and implement, which is the main reason for standing up here now in front of you. We have an NS 3 model of careful regime for TCP, It's available if you wish to play with it?"
  },
  {
    "startTime": "00:10:00",
    "text": "We include Highstartplusplus, which isn't currently in a s 3 in other places. And well, go look here. Go talk to Rafael Loaseci who will happily collaborate with you if you want to play with that. We have a Linux fork of careful regime to play with. It uses Cubic. It uses FQ. Just some form of pacing. is providing data to us. We are playing with careful resume for quick. dotdotdot is an important target. And we've been playing with PicoQuick and looking at doing this in case. And that importantly includes the BDP frame I'm not going to talk about, but I'm going to mention because it is an important part of this whole puzzle. Next one. we have some results. If you want to try and figure out how much benefit you get from this, It's about 4 RTTs for the right size of transfer. If I had more time, I would do the longer talk I have in ICCRG, There is no ICCIG, so I'm simply showing you data and saying, you get about 4 RTTs of benefit if you get this right. We can explain why that is, but that's kind of the order. If you think that's too small to be worth doing, than tell us if you think that's Too much, Well, I don't think it does match to some people, so, really, it helps. Martin. The other, Martin, Google. So 4 RTs versus doing nothing or 4 RTs versus, like, naively jumping to the to the BDP. Right. Okay. So yeah. Okay. It's for our Alright. RTTs was a slow start. But if you naively jump to the BDP, you play Russian roulette, You win or lose. And, unfortunately, if you jump to the BDP without pacing, you lose. If you do this without pacing, you probably also lose if you"
  },
  {
    "startTime": "00:12:02",
    "text": "do pacing, you also lose. So 4 RTTs is what you could probably get. some is governed by maths. 3 RTTs, if you pace really carefully, and somewhere between the two if you do something nice. I'm saying this not because I want you to kind of stare at the data and worry. I'm trying to indicate how much benefit we're actually talking about it would seem like it was enormous. is enormous in time, but it's a finite amount. Let's go Next slide, please. That's the same graph in a different way, the same sort of data. Yeah. i w ten takes a long time to complete. basic message. So start was not great. but slow starts needed because if you don't do pacing on something careful, you will stomp on things. let's slide Oh, this is the pacing story. Let's be clear that pacing is important. Left side shows no pacing. I'm gonna jump after the 10th acknowledgement comes back. So you do this reconnaissance phase. You get acknowledging for 10 pick packets you have sent, You figure out the RTT was okay. You figure out the path. It's not overly congested. then you jump without pacing All happens quite quickly, but the chances are that you actually then overflow buffer. So you need to do pacing. So if you pace i w, and then jump at the 10th hike. that you actually waste time pacing out i w before you start 10th. Get to the 10 pack, and then you can send the data. So pacing IW does cost you in terms of time. whether that gives you benefits or not, I don't want to comment If you wanna do it, you can do it, but it just cost you something in time. So next, side, Hopefully, is this? We can do a compromise, which is what we currently think is probably best. which is either do the first one"
  },
  {
    "startTime": "00:14:03",
    "text": "No pacing of RW, jump, and paste the jump. That makes sense to me. Don't do the middle one, which is pace i w and then pace the jump. because you do pacing twice, it costs you twice in terms of the delay. Or the 3rd option is pace i w But the first act you get back declared that that act is the start of your invalidated jump. Keep counting all the ones in that reconnaissance phase as indications of whether your RTT was right and give up immediately, you find something was wrong. Seems like a compromise It is a trade off, but it gives you basically the same amount of time for bundling all these packets together. happy to take questions. I'm trying to just bubble up things so we can talk about them. on the mailing list. Martin is in the queue. I see. Yeah. I'm trying, and I failed. So thank you. Martin Duke, again, Google. So good work. I I guess it's really interesting. but I'm gonna suggest, like, maybe a bunch more work Oh, yeah. Sure. Which is that So it seems like seawind resumption is, like, a is a communication from the implementation to itself Yes. Ultimately. Right? And At least what you presented here is 1 half of that communication. Like, the naive way to to to, like, cash the the the sea windage take a snapshot of the c 1 and the RTT at the end of the connection, which, like, might be anywhere on the sawtooth. So I'm wondering if you have any insight as to like, how to properly do that how to properly buffer the BDP in the first place, and like, if that should be part of part of the scope of this document. It is. It's called the observed phase, and it's the elephant bit, which I kept out of the room. Oh, okay. And yeah. And that that's important. Let's Okay. So we have Being careful,"
  },
  {
    "startTime": "00:16:03",
    "text": "we have some notion of pacing because you have to have some clock or pacing mechanism when you're you wanna send it to high rate. Mhmm. And we have How did you find out in the 1st place? And what does that mean when you have more than one floor starting with the same of information So that bit, we haven't looked up. and all of this stuff we're gonna work on. So we this is not a fait accomplice. These are the issues so everybody understands that these are things we need to do work on. Okay. Thank you. Two more questions. who's Tokyo? Christian, Go ahead. Go ahead. Go ahead. They An an answer to Martin Duke's question. Yes. If you pick the BDP the BDP and the RTP at the random time in the connection, you get a random result. Yeah. And so I think we should probably add to the draft some guidance on that. What is done in the PicoQuick implementation is that pick a quick weights for the slow start to complete. and then the connection to stabilize. And then it it it picks the the BDP and the RTG to remember. But that's one implementation, there may be also. Thanks, Christian. And Christian also can Culture at the test because he's one of the editors. The can also get this very wrong as well by choosing the RT T and the amount of data in flight at the very end of your connection. you're not sending anything. means you get 0. So so, clearly, there is a way of deciding what capacity you actually saw, which is sensible. Matt, please. Yes. Man Mathis independent This is all done with Quick with Pico Quick. Or did you do experiments with TCP? I'm wondering if the you -- Okay. -- dealt with the receiver window problem. Please watch. That's the fun bits. Kazuko is next."
  },
  {
    "startTime": "00:18:00",
    "text": "Go ahead. So I'm not necessarily serious, so please forgive me if my question is incorrect back back back I I told I get the Can you move closer to the mic, please? Sorry. So my question is, told I get the fact that you need a variation phase. for TCP. But in case of quick, you you can't determine how many packet capture you went to when through to the other side because act has the accurate information Then at tend to wonder why we need devaluation phase at all for quick. Dithi, Wait. Which phase? reconnaissance phase. The reconnaissance phase The the reconnaissance phase. The is primarily to do 2 things. Number one is it's to not do the jump bright immediately because if the path has really changed a lot that's a really evil thing to do, although it might seem helpful. It would be an RTT less, but it can be really catastrophic in terms of the effect on the flows. What would you wanna do in that phase you wanna do in that phase is primarily confirm that the path is not severely congested, and that the RTT is the same. you need quite a few RTT samples to actually know that the path is anywhere near what it was last time. So these are the two things in reconnaissance phase that the path is not overly congested, and that you have an RTT sample you can believe in. a thank you. as Michael? Michael Jackson. So you are using the RTT and BDP from some earlier time. Yes. Do you have any idea how long this can be? Thank you. Elephant. Yep. This is the observation information. It's How long in the past do you believe this information to be true for? happens if you want to start Two Floors, what we said if you want to use half the information you previously had"
  },
  {
    "startTime": "00:20:04",
    "text": "This all becomes, like, control block sharing questions. And, hopefully, we have some information in the TCP control block sharing regime which we can use to start with. But, yeah, these are questions we have to answer, which why it probably has to be an RFC Okay. Right. Well, that was fun. Next slide. a Well, let let's not do this. It's it's just shows the effect of pacing and actually, if you do pacing in different ways, you can actually get the result you might need. pacing is a bit of a black art? How many packets do you place? How? how over what period all of this can be done, so we're experimenting with it. more data at ICCRG next time. Next slide. Yeah. and So how do we do this? And why don't we have a lot more data? we put it into TCP, and we kind of tried to address the issues apart from the observation issues. and we tried it. and lo behold, the first thing you see It's something you probably might have expected, but you don't get a jump. you get a little bit of a jump in multiple steps. So the graph on the right Shores, the green line for how you actually increase your sending rate of the blue line is the jump which we tried to do using careful regime. So we judge the reconnaissance phase. It's safe to jump. we increase the window to step function, and lo and behold, The minimum of sea wind on our wind is our wind says You don't need much receiver window at the moment. Therefore, you can't send anything. then you rely on TCP auto tuning to try and figure out the And you can send a lot more and gradually, it works up. And after another RTT or 2, you get the rate you want."
  },
  {
    "startTime": "00:22:01",
    "text": "So our wind or auto tuning of the receipt window is a big deal, deal, get this wrong, then you don't get the benefit. should that be changed? It's not I don't know Okay. Why did this suddenly appear? It suddenly appear because we put it into peak. and we really want to do it in quick. And for quick, we had a BDP frameix. extension. The BDP frame extension is a transport parameter you send end to end saying this is the size I'm going to use. The reconnaissance phase. The receiver then knows. They can do the full credit adjustment based on what they understand, then you can take advantage, which is co, peek, or quick, On the quick side, actually, nice to do the jump. For TCP, that was that requires more thinking of, and we've only got this fast so far. to say, you need to think about floor control and quick. in TCP. Sorry. Because QUIC is a different solution. Matt. Yes. To point of the window receiver window auto tuning is to prevent the situation where you get too much memory that you're not actually using. Yeah. And there's a trade off there, and it's a policy. You you could change that algorithm in all sorts of ways. And and you can also imagine at some point, Quick is gonna have to deal with the same problem. So it's gonna it's it's it's a design problem, which is common to both. I actually tried to make a statement earlier and fumbled my raising my hand. So I'm sorry to go to go back. The problem of how to decay information after when you have a silence, that is actually a subproblem and control, which is ideal for machine learning. it's actually contact specific and adaptive. Well, okay. And I would like to encourage somebody to do research of answering that question in a general way. That specific sub question in a general way using ML strategies."
  },
  {
    "startTime": "00:24:00",
    "text": "not gonna do it. Okay. So if I understand paraphrasing you, the observation other words, determining the The jump you think is acceptable from what previous you you saw is something that actually we could learn from in different ways in different environments. k. you can you wanna learn it from your own traffic, your own mix. Yep. Yeah. And so so my solution doesn't help your solution. Okay? that might be fun. And, yep, Okay. Just saying, adopted a work item, we have work. I think standing here, Lumber isn't going to help anyone. Please join us Next slide. We don't have a single fixed solution for these. We believe we have the capability to produce at least one alternative for each of our problems. We will come and present them, If ICCRG meets, we will say less here, and we will go there, and we present lots of data. and show you things in prod Please come and join us. Any more questions? Cool. Thank you. Next up is MPGCCP. Yep. Hello, everyone. Markus Ahmed comes, standing here on behalf of the authors of the MPD CCP draft, and I wanna give you some update on the progress. Next slide, please. Yep. So we incorporated Gory's early. Redview That is also a partner of the or finally completed in the last available version of the MPD CCP"
  },
  {
    "startTime": "00:26:03",
    "text": "draft, mainly it was incorporated with pull request 191. and some some some subsequent PRs after discussion we have with Corey. So everything is merged. There's also a first revenue available from Aud. Yeah. I think one of you know them, were very much engaged in the multi pass TCP, but also now in the multi pass quick. standardization So we took all of his review comments and added them to the GitHub issue tracker. there. it's one comment about optimization of the handshaking procedure which was raised part of here, and I have some slides on that to discuss this with you. In the meantime, also, the RC status change from experimental to PS, after some discussion on the mailing list. And last but not least, we also optimized the prototype handling, we have the MPTCP implemented part of the Linux kernel out of pre and that one we automatic now. So with every merge of new code there will be an automatic build, and we provide this build as a deviant package so it can be easily integrated into any any dbN compatible OS. We had a jump of 3 versions since last IETF So in version 8, we mainly added a section on parts user strategies, which mainly set, that scheduling, reordering, congestion control is out of scope. of of out of scope in the context of concurrent path. handling, In version 9, we changed then after the meeting this discussion the document status to PS."
  },
  {
    "startTime": "00:28:01",
    "text": "and start to incorporate most of queries, left new comments, and this week, we published version 10 to complete Goro's audio. Next slide. Okay. Coming now to the optimized hand checking procedure. which was raised by Olivier in issue 225 and talk 248. we started with the MPDCCP, I think we had a strong look on multi pass TCP, and we adopted mainly the hand trading principle, multi pass DCP because I think it's quite safe. It was discussed in in care. And in the meanwhile, we have 2 MPTC PRCs. wearable. So, yeah, that that was the reason why we adopted it. However, the MPTCP hand tracking principle used to work around to cope with the limited option header size. and there is something we will see then on the next slide. is related to the exchange of keys and through the process, how do we have derived tokens, which are then used to authenticate subsequent flows. of the multipass connection. This principle in multipass, you requires a costly Collision, collision, check, before our during peak generation, and this is probably not necessary because MPTC MPD CCP provides a lot larger header space. So we do not need to, in create this workaround of multi pass TCP, and that is mainly what Olli arrest, and we think that is a good point, and we also have a proposal how to improve this without yeah, without Having a A huge modification principle. There was also a second point where Oddogy asked to remove"
  },
  {
    "startTime": "00:30:03",
    "text": "As for the removal of the TA information in the final leg of the initial handshake, also see this now in the next slide, so please. Go to slide 4. Okay. So let's have, first, a look on the left side. So that is so far the the key exchange. principle So in the upper upper red part that is what all of you are dressed in 248 that it is not required to exchange your TA. I have to admit that was a historical leftover and we can safely remove it when we decided to add here PA, be found at what would be a good idea to confirm again that key to to send this again to host p's or that has p that host the has, again, the possibility to check if PA was correctly received in the beginning of the handshake But when we now thought about it again, I think that is not needed because we have GCC check fumes. So if it would fail or if we do not correctly, transmit key a in the beginning of the handshake. then that would this would be recognized with a check sump check. So we do not have we have not to do it again. So we can safely remove it. which means in the final act, we only transmit the key b, to confirm that the Kiwi was correctly received on host a The second point is now addressing that we have some larger header space available. and what we propose. And now I would like to ask you to focus on the right side. that we add a connection identifier"
  },
  {
    "startTime": "00:32:01",
    "text": "in the initial exchange. That is something which was not possible in MPTCP because not enough header space was available. and we add now a connection identifier which then can be used later on to to authenticate or to let subsequent flows be joined to a multipath connection. So that is what we propose here. to exchange a connection identifier a and connection identifier b, And then in the MP joint process, view this connection identifier instead of the derived token, which was introduced with MultiPASS TCP. So from our perspective, that is a small, small change, but has a huge impact because we don't need the collision check anymore when we generate CA we only have to ensure that KeyB are unique in the system, but I think that can be simply done. and we have not to go through a list of existing derived tokens to check if they are already in the system. So quite simple, and that brings me to the next slide. So the consequence is, as you have seen, We have now introduced the connection identifier which is initially exchanged along with the keys. and the subsequent sub flow establishment, you then the connection identifier to identify the right multipass connection that belongs to. Well, wait. It wants to be long tool that is then part of the MP joint and simply replace the token, What does it mean for the draft, the MP key, option, need some extension, we have to define the field to carry the connection identifier And for sure, we also have to"
  },
  {
    "startTime": "00:34:00",
    "text": "adapt the text around the token generation, which is not needed anymore. and have now to explain how to use the connection identifier. Regarding 248, that's even more simple. So we just have to remove from the from the draft the exchange of the pa and the final ack of the initial exchange Yeah. That means we have to change once in in the draft. Yeah. And that brings me now to to the question. which I would like to ask you, do you share the view that this is just a minimal adaptation of the handshaking procedure. Remember, we just introduced the connection identifier and replace the token, With that, And our view is also that the security principle is not changed because we keep all the Hmac authentication, procedure, and so on. Yeah. I would like to get your feedback. Sorry. Gory Faire has just talking from the floor. This looks like an interesting thing to do because you had machinery there, which was best inherited from a fixing TCP. I think it's a good collate that we could do things better and simpler, So I quite like this as an individual, Is it similar to what MP QUIC does in terms of logic I'm not the absolute expert in quick or multiple with. But as far as I know, they also use a connection identifier, so I think, yeah, it's it's a similar procedure. Well, at least the basic idea is the same. I would have thought it was very similar from what I recall. So that's maybe with a quick cross check if anyone else wants to comment Be interested in knowing whether this is now kind of good practice because we're also doing it in MP quick. Yeah. Yeah. Thanks."
  },
  {
    "startTime": "00:36:06",
    "text": "Okay. q is empty. but let me believe that this is a good design decision, decision, I would like to ask you to go to the last slide. Yeah. Summary. Okay. So The authors believe that we are ready for working group last call, assuming that the last issues can be solved before next IETF. the last issues we see that is incorporating Olivier's first review which you shared on the mailing list 2 weeks ago. What we did already here is to integrate this into the GitHub GitHub issue tracker. So I think we have now 24 issues. available. Most of them are minor. The largest one is, I think, around this hand checking procedure thing, I I presented to you. So we believe after analyzing all the issues or all the comments that we can solve this on a reasonable time frame, and we already addressed or commented most of these issues. So as soon as location time is over, I think we can make a lot of progress here. and become completed. Okay. A couple of chairs questions. Firstly, to the editors. How long do you think you need to resolve the issues you have currently pending onto check through anything that people see in response to those. So this assuming that that audio is available after vacation time, I think and we have enough focus on that. Meddy one and a half months. Okay. Thank you. And you then see no further work? So at least in the issue tracker, we don't have anything available."
  },
  {
    "startTime": "00:38:04",
    "text": "We we have the confidence from the interop test we already presented one of the last ITFs that everything works out or works as expected. So, no, we don't see any remaining issues. at the moment. Okay? So question to the working group as a whole, going to ask if you think this might be ready for a working group last call or whether you think that there is likely to be additional work and Since this is a not a consensus call, it's simply a feeling of the room. get to use a So please if you think subject to the issue is being completed here that this document might b. That was disrupted because our AD just up and ran out of the room as soon as I said I'm going to call home. Apart from Martin, If you think this that subject to the issues being addressed, which are currently in GitHub and the resulting discussion that follows, this document will then be ready for a working group last call. Please nam. Now. I see a mild. The important one, please come now if you think this document will not be ready and there are significant tissues to be addressed, which will take more time than having a working group last call by the next meeting. if you think that there are more issues pending More review is needed, please now. So I call this as a few people like to to say the first outcome, and nobody I noticed and hunt for the second one."
  },
  {
    "startTime": "00:40:02",
    "text": "So with that data point, We expect as chairs that this will be revised in 1 or 2 more revisions and then we will start a working group last call procedure to publish this as a proposed standard you for your contribution in this meeting. any questions? I have a final question. So I recognized automosis, I'm changing from experimental to PS that the milestone is not available anymore on the data tracker. maybe that is something we can fix Yeah. But, I mean, before our AD left the room, he pressed all the buttons and it's all fixed. Ah, Yeah. So it is it is a Right. Okay. Thank you. PS milestone that gives you a date by which we expect to see it published. we do plan to do a working group last call on the list hopefully, prior to the next IETF, So the at the next IETF, we can resolve post working group, must call comments. That would be our plan. Thank you. The next topic is dtls and SCTP. This has been a fun topic on the mailing list. We should start by saying this is part of a discussion we are expect to become even more discussion over the next few months, as we get this all scoped correctly. And the shares are aware of the fact that some of these documents will have to be repackaged into different net drafts. and that is something that we are considering for an interim meeting of this working group in September. but I will let Magnus talk about the details of everything. Yes. So actually to set the drafts here, but And I think we can go on to the next slide."
  },
  {
    "startTime": "00:42:01",
    "text": "So goal of this presentation is really to The ensure that we saying. Recap for real, etcetera, see what it trade offs are between the different proposals and ensure that we can actually go that as many you understand what's going into this inter meeting in in a short time, I will have chance to really in detail discuss the aspect and and try to get to consensus after that hopefully have a consensus call and and select one solution going forward. And and this is really focused around what 3 d PPS for this. I mean, this all work started now. I think it's 2 years ago by PDP noting that they had 2 large messages to fit between rfc6083. found this During the work, I found more security issues with the STDPOAuth and and 60 to 3. So we working on on on trying to resolve this. And in this process, What the detail is over SSD solution, I will talk more about. We found it lacking in a number of issues, and and we did a second proposed individual that which is I'm gonna compare later this slide So we can go forward. I have included in his presentation the relevant we did get an LS response before this meeting from Philippppsa3, Few step 2 slides forward, I think. to Oh, yeah. The IP product creations. So There's several different set of high product durations depending on on the which drafted this. So that's Yep. Can go forward. One more, I think, because this is the first So"
  },
  {
    "startTime": "00:44:02",
    "text": "this is the errors we get received most recently. So basically two things to take from this is to say, note that they in the end of this second paragraph, in in on the left column, you have Since the problems related to use of the TELUS SA3's understanding is that the solution should be based on detailers and the solution not rely on unsupported details features. And the next sentence, STP can only ask TSBW to work on and publish solution as soon as possible. So Anes, Hi. This is Hannes. Yeah. 1 One aspect, of course, SCTP is not only used by by the switch EPP. But What in the discussion, one important aspect, what was was what the 3 GBP specifically trying to constrain regarding the message size because they're has been some uncertainty about that. some sort of like so I didn't understood where Let let's go on to the next slide. So we'll come back I will explain what do you see as the requirements and where they're coming from. Mhmm. So I have this on a coming slide. Okay. So if you move slide forward, think we're actually on yes. So So the message sizes, these are the theoretical maximum sizes from some of this protocol that we know, we have a s 1AP and the specification that's defined in, and we have the XM protocol where we somewhere above around 500 kilobytes theoretical maximum sizes. So is what's need to be protected. but what it doesn't say, like, So"
  },
  {
    "startTime": "00:46:03",
    "text": "how these messages, like, come together? Like, why but, like, 142 kilobytes sounds like a little bit of random. I assume you also you yourself almost wrote the other requirements in the 3GPP to pass it on over here. Right? So, I mean, this is the 3 d people defined user protocol that's on top of the STTP stack. That's generate in these messages. And these protocol uses 2 streams if I most of them. and they send them the different user protocol message. There's several different message in some of this protocol, I think. depending on what for different purposes. But some of these generate messages individual SATP message of this size. So Mhmm. Like, I'm always suspicious when thinks Pablo but from some organization to the other one because I have been working for network equipment manufacturer by itself. And so the way how things were done back then was go to one organization, write the requirements and then pass it on to the other organization to You basically hand it from the same person to the to the to yourself kind of and say, like, he had a refinement. So I was was expecting a little bit more than just saying, Like, there's some specification that says so many kilobytes that conveniently So so go back read the original l s. the task, the basis is saying, we have larger message than 16 k. That was the original thing. Yeah. Yes. And we tried in this saying, okay. What have we found that is theoretical max and sizes. That doesn't mean that they currently used in this size. It just means that they could grow, and they in in in of these cases, my understanding, is that they're based on how, for example, how many UEs are in a cell. The more you risk, the more larger these investors becomes. So I would implore you to actually go read maybe 3 d p specs for these interfaces if you actually want to understand that they are to minus then, these are not just"
  },
  {
    "startTime": "00:48:03",
    "text": "dreamt up things. If there's a real problem here. Otherwise, I wouldn't spend 2 years working on this either, Hellness. So MicroTrickson. Having theoretical limits is fine. It would be really a good, I think, if we would get some practical limits. So I for example, diameter has a 24 bit length field and you normally don't use that length. So It will be good to know what we actually have to deal with. k. So, I mean, the solution to that would be to ask them three d people about, okay, what's the actual required practical limit? As as one of the outcomes this is to write analysis, we could we could put in such a question. So but So I guess what's One other question. It says good modern security practices forward secrecy, cool, periodic rekeying with ECDHE In For example, one could argue that TLS 1 or 3 is a modern security protocol and the key update example, doesn't use for the green key, doesn't use ECDHE. Yes. And that's the problem activities that we see because this is very long lived sessions. which which number of data usage especially, I think, a lot of TLS 1.3. If you go back that, it's it's it's been feels like it's better driven a lot of web use cases where it's fairly easy to tie it down and restart in many of those use cases. So if you have this problem, you can always trigger a new If we have an handshake, which isn't the case here because if you do this in some of these cases, you're actually disconnecting all the UIs from the cell, which is not a good way of forcing and retaining. So -- Right. But the interesting"
  },
  {
    "startTime": "00:50:00",
    "text": "thing is, like, TLS and DTS 1.3 have also sort of try to meet the security requirements of industrial IoT applications, which have even longer lifetimes connection lifetimes. And they are that was not an issue. So I Yeah. It's okay. But it's -- It's it's depends on what's saying. I mean, a single unindustrial u IoT application. Yes. it might be that But we see that and we see that there's some requirements, etcetera, from some national regulators, etcetera, also to have mutual reauthentication and and try to prevent the risk on Rx exposure from if NAPL fill exfiltration happens. So Yeah. I it like, I can't get rid of the feeling that the requirements are written as solutions rather than specific requirements. Sir, if you actually go read the security consideration, we do link in the detail as a speed working document, we are pointing to some of the reference where we see why we're taking those approaches. So but even there, I'm also suspicious because you have in developing a solution in in it's it's not clear what came first. The solution or the requirements for the solution. You you know -- Yeah. Yeah. Yeah. Yeah. I mean, it's not the first time that this No. We I'm saying we we did have the at least from the office perspective, we had we would say, sit down and say, okay. What is the requirement actually to do a good solution for this But, yes, so it's So I think I gone through all of these, basically, talked with this about this, the long lead sessions that you see the need for mutual reauthentication and peyotechnical and where we can actually break the key chain. That's that's as we see it, So so Yeah. Yeah. Next slide."
  },
  {
    "startTime": "00:52:06",
    "text": "So the current working of document describes a solution where you have details on top of SDP. we define this as a adaptation layer in s for SDP. And that adaptation layer contains the fragmentation of the messages as well as logic for doing or how to handle the rekey. by creating new new details session, that's our end doing the handshakes, cross the SDP message and using detail as connection ID to identify the different sessions, being able to have 1 detailed as connection live while you establish a new one. switch over to using the new one and then try clear it down when you're certain that all messages protected by the old connection is as been processed. So that's the kind of solution here for this. We go to next slide. The news news slide is a new solution is the proposed is in crypto shank, Down. So that's a split where we're actually trying to do the protection on individual SDP packet levels, which means that the fragmentation and of SSDP message etcetera is using the normal SSP met SSP mechanism. you have the record processing done on each packet, and then you need to key this. And that's done from basically something on top of the SCT stack. It's using SCTP data sending at SAP messages with the key handshakes. and then keying up the record processing. So Yeah. see if I missed anything. Yep. So So think we go on,"
  },
  {
    "startTime": "00:54:00",
    "text": "to actually the differences. So one of the reason we're go went down this railroad road for the other proposalist that we actually see that we had problems with the funding and and detailed a stack that could fill requirements of detailers over SDP. So You need correction of these. That's not the particularly well implemented features at the end of the detailed stack. only and this is based on basically googling research looking into get up issues, etcetera, for what's been addressed, etcetera. request for features and things like that looking am. plasty what's what's supported. So So the cryptoshank solution, doesn't require connection IDs. We worked around that. You're also staying on IP packets, MTUs. Yeah. Honest, I'm for the availability of the stack, what And what does that refer to? Does that refer to the implementation of the whole solution or does it ask for It is the TLS or a detail stack available. I'm I'm trying to answer if if there's a detailed stack that appears at least on spec paper level to support the features we need. Okay. Mhmm. Yes. But so, for example, Okay. So you may have some extensions that you make use of that are not the volume in a specific stack. of course, you could add -- Yeah. Yeah. -- since you're specifying it. But -- Yeah. Like, in in general, like, wolf the wolf SSL guys have a TLS 1 dot 3 and the detail s 1.3 stack? Yes. And so And and yeah. and why what for example, if there's a DTLS 1.2 stack in MPETLS, are So the the right column there is is"
  },
  {
    "startTime": "00:56:03",
    "text": "basically embedded TLS to my understanding you, I think you implemented yourself connection ID feature for that. And you have to though you have support and, therefore, you cannot at least do that. The question mark is I haven't dig into the APIs or if you can turn off replay how you deal with replay protection and or key key updating. But so that's basic why it's a question mark. I am saying that this is features. whole point with this slide is pointing out that there seems to be poor availability of the off shelf. So You can always as If you need this, okay, you can go request or pay for having this in features implementable. They are defined etcetera or other things. So it's it's not that it's not solvable. adjusting. At this point in time, this is the way is the availability. Right. So a part of the input here is to say, okay. What do you need to be able to actually implement and deploy this, and it means, yes, you're gonna have to touch the detailer stack. Yeah. I But I'm Wondering is, like, why you mentioned it specifically because you you also come up with a lot of new stuff, which obviously is not implemented anywhere. And then you are comparing it to saying Oh, but the TLS implement and one feature in TLS is not available, but I need to added so I could as well implement everything from scratch. I think it feels like an odd Like, the message is sometimes is unclear on, like, why you why you state that. So because other ones earlier in this discussion has raised questions about the availability of the stacks, and it is and it's quite like comment you say, okay. People the detail is, like, taking it off the shelves. and the point here is your may or probably not gonna take be able to take an off the shelf stack and use it. What so and off the show stack There's they're like the the DLS working group has"
  },
  {
    "startTime": "00:58:00",
    "text": "been working on, like, twenties plus years on different features. So, like, there's no such concept as an off the self stack if you want to have different features. Right? Yeah. So but it's it's what the currently available stack that exists out there that's kind of in fair amount to use. Yeah. It is relevant. I think for some of us, that's Yeah. I just want to point out that many of the things that you recently came up with are not implemented, not available anywhere in any stack. No. But but because they are completely brand new designs. So and then you compare it against, oh, I can reuse 5%, but I have to add this 5%. So Yeah. But it's it's the question of saying where where are you implementing this in some cases? And and how is this? This is like Okay. because the features we are implementing in in Most of the features you're implementing here is directly relation to your DDP stack or a layer directly on top of SDP. adding something to a CTP stack and adding something to TLS's Post request effort Yeah. They require effort. Yes. But it it's from the perspective of of of who is the owner of the stack, etcetera. It's So but yeah. I point taken. So m. Yeah. Since we are talking we right now, you're comparing 2 solutions which both have IPRs Yep. So I think talking about what's available in open source decks is The use of that is limited. So that's why I would suggest suggest, Can we focus on one detail last version? No matter what I mean, Personally, I don't care if it's 1.2or1.3. I I would go with 1.3, but I don't see a value in supporting 2 versions which have different things. So it It complicates either solution. Yeah. I I I fully agree. And and that was a question we asked that in our meeting, if you could go"
  },
  {
    "startTime": "01:00:04",
    "text": "with a 1.3 only. And the answer we got at that point was No. Maybe now we moved on a bit further. We can have and that's, I think, is a question. That's a good question to bring into the inter meeting. So Okay. Thank you. Let's move on. So the next Big issue why we proposed it. different solution has to do with rekeying robustness. And the problem here is really about that when you do something on top of SSD, You have multiple messages, multiple streams, Not everything is happening in order. a potential here for reordering aspects of between and especially also packet losses. You might get one message and another is delayed because of packet loss. you might have been Not sending it yet, but it's scheduled for transmission at the sender side, etcetera. So the problem with the detail us over SDPs solution from my perspective has been around that It's actually hard to figure out when a packet has or is saying, individual details record is fully delivered and consumed. because if you would actually remove the key for that stimulus record prior to consumed all the records. you're actually crossing a data loss for data that's is cannot been act as being received by the from the sender's perspective. And and that would cause the data loss, which would basically mean that you should tear down the connection to avoid that data loss to become a real big problem. So for years, we have this habit of putting socket API considerations in the documents and at least the Linux and previous econ implementations, I know follow this stuff, we have APIs for that. Yep. -- in the document. So there is a way to do exactly this."
  },
  {
    "startTime": "01:02:01",
    "text": "It might in in the detail specification, we haven't written it in the language of the socket API because the socket API is informational. But If that's an issue, we can have a generic description there. And Another informational section where we say This is how you you would do it with a socket API. And this is done, for example, in That's Michael. To my understanding, the open SSL implementation. that requires draining. need to -- It's really quite -- -- dry event that your statistics. You when we wrote the original one -- Yeah. -- we wanted to when we get rid of a DTS epoch, We wanted to get rid of the corresponding keys in the SCTP layer. So, yes, we had to drain. If you're willing to accept that at the SCTP layer, we still have the keys from the previous epoch. then you can come over this draining thing I would say, in reality, Yeah. So, yes, I agree. It's it's just that as you need you're gonna need to implement further tracking than the API to actually be -- Sure. But that's still -- Yeah. Yes. But it's yes. Yep. Next slide. Mike, let's see. 6 slides and 0 seconds. Yes. So let's jump -- -- do you wanna go for? Keep going. -- will go for the clues shouldn't slide what the next steps is. So we can Yes. So As you see, this is something that's both things, requires actually to Consider the proposals see what your requirements have, what what you have in in your implementation, etcetera. So proposed way forward here is to try to maximize the input in The this question and be having time for"
  },
  {
    "startTime": "01:04:00",
    "text": "more detailed discussion, is to have an intermeeting the proposed date is the 19th September at 1600 Central European Time. atat for 2 hours. might be some additional topics that consume this part of the time, but it's to have more and much more time to discuss these matter, And from my perspective, after that, it's probably a reasonable hopefully, a time where we can do some consensus calls, etcetera. for for a forward here. I also want to send a license statement to feed the PPS say free and round free. to inform about the intermeeting, And we can also request additional clarification. SA free is meeting in basically two and a half weeks time So we need to get this LS out quickly. So by mid somewhere mid mid next week. So it makes it into the queue, etcetera. But I've been working a draft. I will do a couple of wordish addresses and sends out to the main list so we can discuss the content of that l s. on the mailing list. So on this? I was As I mentioned initially, like, SCTP is not only used by 3 GBPs, it would be good to also get some of the other users in on the board because they may have also something to say about the whole topic They very welcome to come. But I mean, I've discussed this for 2 years. No one else than 3 d p that show any interest. So but if you can find someone, please bring them. Well, I'm you know? Let let I think it's more a call to the to the share some as well. So I I'll say something you can carry on, but I I think the One of my reasons for liking this"
  },
  {
    "startTime": "01:06:03",
    "text": "interim proposal is we try and construct a mental venn diagram of what could be open source and more widely used. and the IETF might like to favor if there is energy to work on it. and what solves the immediate and rather specific requirements of 3gpp. in the hope that we can produce one 2 or 3 RFCs finally that are useful for both uses. Now we have from 3gpp, mainly channeled via Magnus, but also I know with Nokia's input, for other things. other people want to come and bubble up stuff that would really help with that, or make statements on things like, hey. We really shouldn't be doing TLS 1.2 anymore or really we should really look at this. that this is the ideal moment to try and do that where we can have a bit of time and discuss it. So honest. I'm saying, yes. Please bubble these things up. Yep. rounded times a bit more information in the slide deck We if you're interested in this topic, please have a look. Please discuss the chairs do want to have by the Prague IETF a, set of chartered items for this work. that will be different to the currently current set of items If you're interested in formulation of these, Please be active discussing this at IETF meetings without making progress. A different topic though. This one we have made progress on Michael. 0 checks in, please. Yeah. Michael Tickson. Can you go to the next slide? This is about a very simple extension to STDP, which reflects the fact that Some use cases of SCTP have specific methods, which give you error protection or error detection"
  },
  {
    "startTime": "01:08:02",
    "text": "which is at least as good as the CSC 32, which is included in the SCTB common header. And, therefore, it's the CPU cycle spend on sending and receiving not worth doing, So This extension allows the receiver to clear that it is willing to accept SCDP packets with an incorrect check some of 0. And based on the discussion I mean, in in the The main motivation for this is SDDP for data channels and WebRTC see where the STTP runs over detail is. So not like saw in the past presentation as a DTS over as CTP or D TLS in a CTP or something like this. So it's detail as is the lower layer. And during the discussion, Ericsson suggested that we could also consider additional methods like if the packet is protected by the cryptochank or packet is protected by the authentication chunk And so now The declaration of the support is I side can send a message saying, I'm willing to accept packets with incorrect, 0 checksum, for and I'm considering this as the alter alternative or the alternate detection method. Next slide. Yeah. That's that's the basically, that's the the changes between the initial working group tough version and current version. We have a 32 bit field in the message which I provides the information which error detection method is used. So There is there will be an Ayana Registry, first come first serve for doing this. We need to"
  },
  {
    "startTime": "01:10:03",
    "text": "somehow synchronize the I mean, have an organized method of assigning these values, but I don't think an expert revenue or so is is required. Next slide. The implementation status is that It's implemented in the previous kernel, and therefore, in the user CTP, user lens deck, which is based on that. There's an independent implementation of saw the STTP stack used by Google in the Chrome browser. We have support in tooling like Packetrol and Wireshark, and there are pack drill. test scripts are available at that GitHub link which you can use to test your implementation if you are using a socket API or if you one additional clarification how implementations might implement this stuff. Next slide. Next step. Well, submit revision 2. done an hour ago, which included some feedback from Ayanna So Ayana is reviewing working group documents, prior to the IETF. And they said, well, you can remove this word in and this kind of stuff. So nothing really has changed. Just to make INF from the Ayana happy from the wording perspective, and Peter Lee had some Comments. The document is done from my perspective or from the perspective of the authors, includes people from Google and people from Mozilla. So I'm happy to address any upcoming feedback but I think the document is ready for what to do last call. And Corey is asking a question. Yep. gonna ask as an individual because I can't bother walking over there. to the floor might, but it's a floor question. Have you looked at IPV 6. I understand the use case over DTLS and what DTLS gives."
  },
  {
    "startTime": "01:12:02",
    "text": "and that will be okay. But the document isn't restricted just to DTLS. Correct. And if you were to have the direct layering of IPV 6, you do pick extra requirements from the ipv6 specification. So as in you shouldn't turn off your transport Well, the document there's all document says that you can only use this feature When two conditions are fulfilled, first one, there must be an alternate method which is least as good as CSC 30 23. Running over IPV 4, You don't have this running over ipv6. You don't have this. running over author crypto, e, you have that. However, the second condition is that the endpoints must be sure that there are no middle boxes in between which expect non zero checks up. I think As an individual, it may be interest to make sure the ipv6 thing is particularly clear. since ipv6 expects a transport check some. It says already there that that when you run a CDP over TLS, whatever. Wait a minute. Wait. That you run SCTP over ipv6 then you don't have an alternate method. Does it say ipv6 somewhere in the draft? No. It says, in general, if if you don't have this method, you can't use it applies to ipv6ipv4 But I'm happy to take any sentence you want. I mean, What? Okay. got got the comment. The quest you also paused the question with group last call, so now I put my chair hat on. and ask people What are we going to ask? Who was read it? Let's do a poll on who has read this document"
  },
  {
    "startTime": "01:14:00",
    "text": "1 or 02. The difference being only there and the feedback, I think. So who has read 1 of these 2 versions, 0102 of the document. We in a position to try and do our last call. a bit of binary thing. I mean, It's You don't have to raise your hand in the No. I haven't read it because I can see people in the room. I know how big the mailing list is, but How many people it's out? Okay. So we have Some people have read it. We have some reviewers Mhmm. and that also will come to play when we get to a working group last call. Can you call out the number? 6 people have read the document. So it would be nice if this number could increase More people have commented on the document. is also true. It might make sense to read the document before commenting on it. or participate in the vote thing. Okay. So Thanks for the call. it according to will record that certain people have read our poll here. and Well, should we do the the general feeling because I like doing hums again. Can we have a for people who feel this document In the next version is ready for a working group last call. I'm really looking for the second one which where I'll ask people who feel that we are not comfortable with progressing. So please if you have read and think this document is ready for a working group last call. I hear some. At least If you think this document has major work items to be addressed. or is not ready for a working group must call in some way. Please tell me if you think it's not ready. I don't hear. feedback,"
  },
  {
    "startTime": "01:16:00",
    "text": "for the second Okay. That's that's in a good position. And, We expect to take comments from the list to you to prefer a new revision. which we will send for a working group last call. so so All comments have been addressed right now. Yeah. So if I get a few comments, I will 70 degrees. I just gave you 1. Okay. I like that sentence and and put a revision in it now. Fine. we're gonna head this document for working group last call in the interval before the next IETF meeting. putting a new hot hat on. Would you like to talk about this briefly? Yeah. This is about an individual document, which is a best document for RFC 16951. Next slide. the document, basically incorporates the considerations given in The other draft, which is addressing an issue where some text was some some explicit some situation is not explicitly described in see 6951. and talking to Martin and the previous transport ID, I think it was Magnus. What the suggestion was don't have small documents specifying the UDPN solution and then having another small document adding another rule but have a single document to do this, and this is what this this document is about. it's technically complete. it's implemented in the Linux kernel and the previous d kernel, including the about the"
  },
  {
    "startTime": "01:18:02",
    "text": "change described in the in caps considerations. address any future comments, but I don't have anything in coup, Thank you, Michael. Next, topic which is the l for us, It is Oh, is Jason? Is Jason Yes. Do you see me? Do this remotely? Yes. I am. Please go ahead. Thank you. will. Can you hear me alright? can hear you We Great. Perfect. So we've got two things that I'm going to update you about today. The first is the individual draft that's noted here, and the second is an update on our Alfware experimental deployment. I think the the draft part is pretty easy. I've gotten a bunch of feedback over the past few months, and I've incorporated all of those changes into the most recent 02 revision there are probably a couple of more minor things that I can tweak. but I think that within you know, the next month or so, I would love you know, some direction from the chairs. Do you want me to pursue an individual draft ISCE sort of path or make it a working group item. You know, you don't have to answer it now, but that that's the I think the key next direction that I'll need on the Then next slide. Thanks. So this section that which I'll use the rest of my time for is about our L4S experimental deployment. So we announced in June, and we kicked it off. a short time ago, just a few weeks ago. and"
  },
  {
    "startTime": "01:20:03",
    "text": "know, just running through some of our experiences first. we had an ECN marking problem which initially was a little bit humorous. All of our validation tests were outbound, and everything looked fine. And then we missed that we had a basically network policy that was bleaching these marks on an inbound basis. So that was a bit of an oopsie. We found that fixed it on all of our CMTS' so our aggregation network gear, and and also validated that in packet capture. So that was interesting. The ancillary thing that we found however was that we were also in certainly leaking some DSC parks that intend to only be internal into custom networks. And the result was really in the i e triple e WiFi domain, which was that traffic would get inadvertently marked as background traffic using ACBK. So that was an oopsie. probably didn't matter that much without dual queue. But once you go to dual queue, it it would be a bigger deal. So all of that got fixed over the last few weeks. which is good. now working on getting all of the in anticipation We're excuse me, anticipation of the NQB drafts getting DSCP 45 working end to end just because they're all the network policy stuff is connected. terms of our deployment, we have 2 CMTS types in the network. In We have what we would call our legacy integrated CMTS' and our newer virtual CMTS. We're only using the new virtual CMTS platform because it's totally software based, and, you know, there's just lot more agility there in terms of adding features and fixing bugs and so on. Those are also the areas where we've changed the spectrum split for our"
  },
  {
    "startTime": "01:22:02",
    "text": "our cable plant, which means, in essence, the people just have more upstream spectrum But that, you know, be that as it may. It's just easier to innovate on that platform. Next slide. So there are 4 different types of cable modems that using, 2 of which are the ones that we control the software on, the Xfinity be 78, and then 2 of which are customer owned and managed and and administered the RSS 33 and here, CM 1000v2. And we've got a a whole mix of different cases that we're testing out somewhere It's all of the functionality of cable modem, router, and Wi Fi access pointr in one device, somewhere the cable modem and the router or gateway r n 1, but the WiFi AP is separate. and then a third where you would have all of those functions separate or at least the cable modem function separate from the gateway router and Wi Fi AP. And we're also testing with Ethernet and Wi Fi connection. So we're trying to get all of the different permutations of typical equipment that we would see to try to catch any potential issues or other problematic corner cases. And, you know, planning to test out the different Wi Fi queues. I think here, the the big question is, does using a different 80211q make a difference for the low latency flow, or is it better to to throw them all into best effort. So we'll see. Next slide. I should also say and this is remarkable and and very interesting, I think, for this group, The level of customer interest we had here was pretty extraordinary. And I'm talking, like, 20 or 30 times more interest in this type of a trial. than I've ever seen in a prior trial."
  },
  {
    "startTime": "01:24:02",
    "text": "And so definitely set internal records for us And right now this week, you know, we're still in the midst of employee trials. which I'll talk about But one of the reasons that I'm not in the meeting in person as we're trying to get ready for the customer trials and pick all the end users. So, you know, it's been a few weeks. July 11th was the live modem on the production network with dual q We've got 25. Now it's a little bit more than that about 30 modems active. Those are all employees right now. and I anticipate sometime probably looking like early August, we'll have 100100 of customer modems activated. So The the plan and I'll I'll talk about the next section in in a moment, but The plan is when we come to Prague, we'll have a great readout of you know, significant amount of customer testing, you know, lots of modem permutations. It's try to share data on. The way that we parse out the test is by giving weekly test assignments that people can run 1st phase sort of general diagnostics, FaceTime, and other video conferencing gaming and then other apps, you know, TBD, We've seeded out some wipeout lesson that microscope net microscope microscope, excuse me, probes on the same Microsoft, but that's not correct. and also just seeded out a Sam Nose probe as well. and we're talking to one other organization that has some probes they'd like to be deployed If there are any other tests that people are aware of, especially tests that are fairly comprehensible for the average layperson, not an engineer. Let us know. We're happy to have people run those tests. and, you know, give give any results back if if they're not directly collected by whatever tool you have Next slide, So tests are gonna run July through September, probably will run longer. We've been posting things on the LRS Discussed list. as interesting things come along and anticipate sharing, as I said,"
  },
  {
    "startTime": "01:26:04",
    "text": "a lot of results at 118, and we'll do some product launch decision making in the fourth quarter in terms of where we go next. That's it. Happy to take any questions, but quick recap on first for us experiment in the field. Thank you. Are there any questions from the room or from online? I love the teaser for what might come at the next meeting. So thank you ever so much for that. We you asked about possibly adopting your draft work item, and we will consider that and talk to our AD, We're not going to discuss that in a moment. Yep. No problem. Thank you very much. Greg. Alright. Greg White. Cable has Good segue from Jason's discussion about the early deployments of L4S in the network. This draft that I'll be talking about is our working group craft that is intended to encapsulate guidance on interacting or how l for us will interact with classic ECN, in particular, single queue class ECN bottlenecks in the network, and ways to mitigate any potential issues there. of the one big change is a new title. That was a discussion that took place last fall, actually, that the original title was sounded a bit more comprehensive than the actual scope of the draft. So, hopefully, this title is more focused and and people who are interested in this specific topic will will find the graph. Anyway, next time."
  },
  {
    "startTime": "01:28:01",
    "text": "So, yeah, the as I already stated, the scope of this is talking about RFC 3168 bottlenecks in the network and how L4S interacts with those. It has guidance. for operators of end hosts. operator of network, networks and researchers to look for potential issues that might exist. But in the discussions in the previous IETFs, we have talked about the value of keeping this document open as a living document for some period of time in order to collect experience as L4S begins to be deployed in the field. And currently, the working group milestone is that we're planning on keeping it open for a year or more after today. So that I think is plenty of time, hopefully, for any experience that Comcast gets in their niche deployment to be folded in. This draft, draft 5, The only change is the new title. their is is one to do in the documents still. but it's really an open place for anyone who has suggestions for ways to analyze the situation and and ways to to mitigate any potential issues that might at my price. So welcome any comments. on the mailing lists, and Yeah. We'll we'll keep it open. Thank you. Any questions? Some people had a small issue with not being able to contact the data tracker. and If you want to, just please go to the mic queue while this is happening you have questions, Tim, have you got a question? Or are you playing with the button? If That is a question. think there may be a very large buffer on my phone or something."
  },
  {
    "startTime": "01:30:00",
    "text": "So I'm aware of work in other groups towards measurements, monitoring and measurement of the impact of chain putting these things into the network. There's nothing in this draft about that. It's probably not that relevant. How how do we hook these things together? Do we just look at, say, IPPM and what's happening there with the responsiveness test? Are there other thoughts you have on measurement of the impact of of these changes that you would recommend as general guidance for people deploying systems how they should measure it. an interesting question. Yeah. It certainly isn't the scope of this document, but That's in general, how to measure the performance benefits of of L4S as gets deployed, gets deployed I can say we've done quite a bit of experimentation with that in the interops. and have developed a robust straw man test plan of different test conditions that are more amenable to lab testing really rather than field testing, but but could some of them could be used in field testing environments. think that's an open area for for further work and and and would be very useful, I think. As we start to get L4S deployed, in end systems. I think as new network equipment starts to get built and implementing LRS functionality. important that there are good ways to test that new equipment before it goes out in the field and make sure it's doing a good job of doing a CE marking. similarly, for as congestion controls evolve and new ones get deployed ensuring that they are -- Okay. -- performing well, performing fairly and things like that. So, yeah, that's my button wasn't working for the last, but maybe Jason is listening and comments on what Comcast are specifically doing, for example, It says gate. gamers. They will obviously have a qualitative"
  },
  {
    "startTime": "01:32:00",
    "text": "idea, but and many games come with, you know, some idea of latency to the server or throughput, but that you you don't necessarily see the responsiveness. I'm just having that number. It's quite quite a like about the IPPM, which is having a number that shows responsiveness is quite quite a nice thing. But I'm just wondering what Jason is is doing to test that always. then maybe we'll take that on the list. I know there's also a l for s inter planned for the next prague meeting, and this could be an interesting topic to catch up after that after people had a thought about it. and knowing how to measure what tools are available must be an interesting thing to go with this puzzle piece to know about deployment. Yeah. That's a good segue to the next slide. and Be quick. Yeah. Okay? So, hijacking, a little bit of my time on the operational guidance draft. and give an update on the interop activity. So we have been holding the 3rd l for us interop co located with the i e and the ATF hackathon Linked to the readout slides from Sunday is there in middle of the slide, In addition cable apps has been hosting a series of interrupts at our facility. and we'll be planning another one, coming up very soon. Looking like early September time frame. And as Gore indicated, at the next IETF in Prague, we we'll plan on having another interop as well. So if you're interested in participating, let me know. certainly The i e t f one is easy to sign up for. We do it collocated with the hackathon, and we use the hackathon's registration system. So it's easy for anyone to to attend and and to join. So Please do. Right. Any questions on that?"
  },
  {
    "startTime": "01:34:10",
    "text": "Yes. Thank you, B. Should I move 20b then? Yes. Alright. So this is an update on the NQB draft. Next slide. So where I draft 9 seen a quick recap of the status So we did do a working group last call using graph 14 as the source for that. There have been a number of draft updates since that time. most recently, the draft 1819 I I pushed earlier this month. and I'll talk a little bit about what is new and different in those. And then reminder, the milestone is to submit as as a PS. by September 2023, which is coming up pretty quickly. So Next slide. So this was the status of graph 17 as the last IETF. I had incorporated all of the changes that had been discussed in working group last call, and and where we had reached an agreement as to how to handle them. And then the remaining open topics were put into issues tracker on GitHub, There were 13 of them. Next slide, shows a screenshot of the the 3rd team issues. We'll continue on. Next slide. There was one then an additional comment that was raised at the mic last IETF, which was around this impression that some readers could could come away with reading the text. it made it sound like if you mark your packets with the NQB code point, then don't worry about congestion control. You don't need to to think about that. That's really what's not the intent And so Yeah. Go on the next liable."
  },
  {
    "startTime": "01:36:00",
    "text": "talk a bit about that. So in draft 18, that was one of the main things that I tackled there was scrubbing through the sections of the document, which were a bit unclear on that point and Hopefully, that is now clear to any new reader that congestion control is expected in addition, added the recommendation that or if if you're interested in NQB, you're interested in getting lower latency for your application. and you're trying to think of what congestion accrual mechanism you might use to to support your application. Well, o for estimate, a good choice. that's in there now too. Next bullet significantly more guidance on implementation of a traffic protection function. That was one of the requests in working group last call, comments. So that section has been reworked with more examples and more discussion of different options for traffic protection. then the next bullet, this was a a bit of discussion on this. over the last year or so around the sender rate requirements and what is an upper bound on and applications data rates that that we think is reasonable to mark with the NQB code point. And we had previously settled on 1 megabit per second, but that was concerning for some So we have dropped that down to 500 kilobits, and hopefully, that is more possible and and were were moving past that issue. The rest were I think I won't maybe go into those in any detail, but move on to the next one. draft 19, which was posted just yesterday, Mainly editorial changes here and just making the draft more readable"
  },
  {
    "startTime": "01:38:01",
    "text": "moving some things around a bit to to kinda at improve readability, really. So that's that's that. Next slide. Okay. So the status of the working group last call issues, I believe that all of those are now addressed in draft 19, and as I hear. Otherwise, I'll be marking those as closed at at the end of the week. That one additional issue regarding the lack of congestion control and and guidance on that. I also think we've covered that. So unless I hear otherwise, one will be closed. one new issue was raised this week, and that was around the recommendation about handling of the NQB just for a code point in future WiFi equipment. so this draft updates Rfc8325, which is the existing guidance from the IETF on mapping DIP serve code points to user priority. levels in 802.11. the NQB draft, when it talks about that, it talks about mapping the NQB code point to the access category and not directly to a user priority level. And so the suggestion was to be consistent with ADT 325 and point to a specific user priority. there's a little bit of discussion that may need to tap into to get the right wording there. but expect to close that one soon. one other just editorial item I noticed this morning that I'll correct as well. but those are the only 2 items that I'm aware of. at this point. Thank Greg. At least for my issues, I think you provide a good answers to the text. I like the new text. If other people"
  },
  {
    "startTime": "01:40:03",
    "text": "were reading issues or following this document. Now is the time to go through those issues and check whether the words are the words you expect, from my side, I I'm pretty happy with that. I I as a chair, I try to align it with the other RFC on 8325 on Wi Fi. and getting a language right there. There are a number of little Details in the way that language is used and getting those correct is always good because people read the two documents together, when you have done that, I you'll have a new revision. When do you think the new revision might be available with the new text. I'm hoping that's less than 2 weeks. The the editorial item, I can copy take care of in 10 minutes, but there may be some discussion on the WiFi UP. Hopefully, that can be resolved very really quickly. So let's say 2 weeks. I'd hope that the Wi Fi discussion was related to whether this contradicts or complements the 8325 than goes through the the topic again. and the conformance with the standards that are published throughout the ETF is is really important I think. Okay. Ben, can we begin working with last calls? Last line, I see. And I guess We can ask a question. Do we trust questions? Systems we could do a if you have Red. this, or a recent version of the draft in that list of recent draft. Please now if you have read this or a recent version of the draft. Please no. if you think this document is not ready to proceed to IETF"
  },
  {
    "startTime": "01:42:02",
    "text": "publication. In other words, that we should not start a working group last call. Please if you think we should not start a working group last call. Well, that's useful input to the chairs. The purpose of the working group last call is to get people to read the document and to review it. So I believe that this might be a useful point to think about that process. Oh, sorry. Yes. I can read up what I phoned. I I found that people there were a few people who had read this And version of the document, and I did not hear people saying that they think it's not ready for a working group, must call in the Michael Abramson. Is this on? Yes. Go ahead. Michael Abramson. So I'm in the core network, so I quickly scan the draft, and it seems that I'm not supposed to do anything basically But I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I even if if I was running an access network, it would be interesting to see example configs of common platform to implement this because reading the text about like, how to a a treat BE and this the same, but still not building a queue and so on. It's not obvious to me how that should be done. So if there is any might not have to go into the draft, but something like that would be of interest k. I'm Martin. Sounds ahead of me with you. Not Mikkel. Oh, fine. Martin Duke, I just wanna relay from Okay. from Zulup Sebastian Muller says I would for not doing WGLC is this should not be published. Always good tough feedback Thank you for relaying that."
  },
  {
    "startTime": "01:44:04",
    "text": "of course, the purpose of the working group last call is to seek consensus. So We will invite everybody to read this doc document in the upcoming period, and we should expect a working group call this 4, putting on the agenda at the ie at the Prague IETF meeting. So in the period from no till then. Great. Thank you. Thank you. Thank you. Right. Where are we with time? We have 15 minutes than we have done. I think we allocate the whole of the 15 minutes to the the presentation and discussion of this. please allow time for discussing this done as well. Okay. get you this. One one quick note. If you're in the room, please sign into the data tracker tool with all also passed around the blue sheets, and they haven't made it back yet. So I assume they have must have gotten stuck somewhere. Thank you. And go ahead, sir. So So I'm Dan Wang here to talk about using UDP Trailers. with encrypted transports. And, yes, we do have a misspelling in the filename of the draft. So when you look for it, You'll notice that. Next slide, please. So the problem we're attempting to solve is mostly cellular networks, wanting to prioritize and manage traffic. So certain traffic is more important than other traffic inside out of one flow. So my company, one example I work at Citrix, things like keystrokes and mouse movements are more important than a file transfer that is all occurring over that same 5 2 poll. And we'd like the network to have the ability to police that. and and when it is congested to drop the things that are less important that we can go ahead and retransmit. Same old story. Couple of IAB documents that are related to this. that encourage"
  },
  {
    "startTime": "01:46:01",
    "text": "some sort of hint in communication to the network. at a high level, Next slide. We looked at V Six, hop by hop, one of our Our big constraints there is V4, and then, of course, how these 6 hop by hop are destroyed on the path. is a summary of this slide. Next slide, please. So the the solution that we are proposing is for the sender to obtain keys. I have a a quickie on the next slide showing how to do that. and then show show encrypt the tag and stick it in a UDP option. So it's a a trailer of the between the UDP payload and the end of the IP payward, And then the necessary network elements, most likely, access network, so the last top router can process that UDP trailer, authenticate it authorized that This seems like a good tag. I like it. I like the sender. It in a good mood, and I'm gonna do what it says. or I'm gonna take the the network management treatment that it is encourage me to do, and this works for V Four and V Six. X slide. so the interesting and important thing here is this is a a modern approach to an age old problem, you know, that we've tried with RSVP and disserve and bunch of other attempts. so we are encrypting or obfuscating that signal. so that other devices on the path don't know why it's being signaled, what's being signaled, and don't have any hint about about how important that packet is to the sender. So that means they're shared intentionally with only the devices that understand how to decrypt that. data."
  },
  {
    "startTime": "01:48:04",
    "text": "We're integrity protecting it as well, and we decouple it from the endpoint protocol. on purpose. Next slide, please. So the interesting thing on this slide is the scope of this document is just transport, so it's that circle at the bottom. up at the top is how the key is obtained. You know, the diagram sort of implies the access network goes in both directions. It may only go in one direction. It's sort of implies that it makes a connection out. We don't care how many that works. That's the out of scope part. And how that key is obtained is is not what we're discussing and and worried about with the draft that we have here in and and brought to the TSVWG And that's it from our site. which now brings us to questions. Not matcherous meta. So may email the authors about this, but I Some people may have seen that we presented very spiritually similar work at dispatch where the general idea being that you want to secure information exchange between a network device and an endpoint. I think this is broadly speaking covered under the same scope. And I don't think that it's appropriate to be adopted by into DSVWG given the feedback we've received both from dispatch and from the side meeting, most of which is that zone. a lot going on here in terms of understanding the there's various implications of standardizing a way to exchange information from a content endpoint and any device on the network. So that's that's kind of my feedback. I would say, We are"
  },
  {
    "startTime": "01:50:01",
    "text": "that our our dispatch feedback was to have a broth, and so we're probably going to do that. I think that this the this would be very recently covered under that same scope. I can confirm that this is a topic that's been on TSBwg's agenda many times over the time I've been chairing. And before, I was chairing, and it likely does fall within the scope of this working group if the message is in this direction or any method using RSVP, DSCPs, etcetera. So the topic like, lies here. And I don't think we're gonna take an adoption call today. So please coordinate. We we would love We'd love to work with US Cheers, and and and interest in your portfolio. Yeah. And we would certainly like to be part of that thoughts in product Who's next? Tom? Hi. Tom Herbert. So my comments on this are pretty much the same as the other day when we were talking about the wireless media header. fundamentally, this is you have to admit not architecturally Correct. Right. Right. because we're placing network layer information, inside the transport layer, and we're expecting intermediate devices to process that data. So that kinda contradicts some of the core architecture of the Internet. But more importantly, for this proposal and UDP options, understand the I appeal of something shiny and new. but they don't have deployment. there are a lot of issues even in even in this model For instance, we don't know in the network when we see something with surplus area, we cannot prove that that's that for UDP option. That could be something else. There's no code point that identifies that There's also gonna be other practical issues like having Middle boxes process protocol trailers,"
  },
  {
    "startTime": "01:52:00",
    "text": "So there's a long list. And I noticed that you had one slide, on IPV's extension headers, And this is a common theme, by the way. So this is, like, the 4th proposal I've seen at this IETF where people want to signal the network from the host. So it's a common problem. And the answer for i IPV is 6 extension headers is always the same. oh, we can't use them. They're not usable. This is a new twist. You actually mentioned hopohoprocessing draft which is interesting. But I would point out, that draft is not necessary taxulated process hop by hop option. It doesn't really change anything. So What I see is There's a need for this network signaling from the host. It's a common problem. I tend to think we should do the IETF way, which is find a common solution that addresses all of this. And the other the other issue I'd point out Yes. hoppy hop options doesn't work for ipv6, but on the other hand, UDP option doesn't work for TCP, doesn't work work for SCTP So there's always gonna be these limitations. What's the most generic mechanism Moving forward, So I said, my my comments are pretty much the same. Corey, you you made an point the other day and and the Paul, area has a lot of interest. The There's no doubt about that. There's no doubt about that. However, since this is about signaling network layer information. I do have to wonder if this might be more an interior thing. Maybe we can talk about the offline, but So I see the need, but I think these proposals I I think they're creative, but I don't see how they could ever be standardized because of all the limitations I can respond on the area thing. The the QoS aspects of this falls within this group If interior wants to define a generic"
  },
  {
    "startTime": "01:54:03",
    "text": "encapsulation or a generic network wide sickling method, they can do that. But the quality of service related pieces In other words, configuring the queues, etcetera, falls here. Right. So it's not so much the contents. the signal that I'm worried about it's the carrier. So the carry putting the carrier in a transport layer that intermediate devices process, I think that's going to be a a hard thing to get through. It's -- Samuels. It's totally okay with the Internet architecture to have that header and to pass it in equipment that does it. It's the added value question. So it's the end to end principle of whether you need to see it or you don't need to see it etcetera. So we can debate this here. Yep. Thanks for the input, Tom. Sorry. Dan, I cut you off to you on the same one. No. I'm good. Okay. Then let's go to the next slide. Next speaker is -- We're Christian. Well, I I was in the queue I pretty much agree with what the previous speaker just said. I mean, This is not a UDP option function UDP phone option are described as end to end. That means that they are supposed to be used by the transport by both end of the transport not by the intermediary. It's actually said in the draft, So sort of means it, or it doesn't. if the UDP draft doesn't mean what it says in any means that, a, we are defining this thing which is quote end to end. But in fact, what it has been used for. is to send information to the middle boxes Then that's a big issue. And I think that As a general principle, we should not use UDP options 4 things that are not, End to end,"
  },
  {
    "startTime": "01:56:01",
    "text": "if we need a mechanism to send data to the network, that mechanism should be it it does and not be part of a side effect of the UDP options. And in fact, that we enforce my my idea that should definitely not use UDP options with encrypted transports. Thanks. Next person in queue. And a quick note, we have 4 minutes left and four people in the queue. So please keep your comments great? Kenji, China Mola. Actually, I I like this idea excellent idea here. because we have a real case in the field. Well, we mentioned about the 3gb XR extend the reality multimodality is on the downstream. it didn't need quite a few given the streams. with the data ground, we'll have a different cortions or critical clarity, all kind of things that will need should be differentiated upon the more called a laptop or not a laptop, but they call it UPS. in coming to the 5G. So there are some way try to handle it. Well, it's like we can use the the UDP, like the media header ID draft. but the people consider, okay. That might it's going too well. it end to end, they call the UDPA for the the source to a destination park. The thing is I can argue this one is for the 5 g s. It's like a component. receiver, it include the u e as the UDP client. and also the UPS that can do the rocking. So if you make the 5 g f, That's that. a transparent box or black box, actually, is a composite definition for the end to end on this way. The second thing is if the the stream is encrypted, So while the thing like, we have to find a way to do it."
  },
  {
    "startTime": "01:58:00",
    "text": "the UDP option, actually, I think it's better. We have, actually, I've submitted a draft about, you know, how to map the 3 GBP thing through the UHD PAR. Yeah. So And then this one, if for the security, if you have to do like people saying, okay. The security thing, the tag, it actually is some potential solution for that things. So out of 3 point. support this one. Thank you. Thank you. Next is Mike. Mike, go ahead. You're remote. Have you got me now? Yes. Okay. I won't repeat any comments by Tom and Christian, which I largely agree with. I saw some things in the draft specifically that I wanted to caution the authors about There was a proposal to use Auth. and UNC, if I understood it correctly. And those things are very, very controversial and may not make it to may not be in the draft when it's actually published as an RFC. So please keep that in mind. Another thing, and it wasn't obvious from reading the draft, and maybe it's because I did put enough time in. But I see on this last slide something that implies that the network is modifying these options in transit. And that would that it would be nice if the authors could clarify that point. Thank you. That's all I have. So there's no modification of the packets. So sorry. These are 3 separate packets. just showing that they have different tag. 2 of them have different tag values. but there are 3 separate packets. They're not being modified, and we also do not strip the tags They survive all the way through. Kasujo?"
  },
  {
    "startTime": "02:00:00",
    "text": "Thank you for the presentation. I think it's good that the information is encrypted. However, I think there's a privacy concern that is that we actually share creating a mechanism that can be used for mailboxes, asking endpoints disclose information have beta treatment. That seems like a slippery dangerous slope to me. And regarding the requirements, I'm in I'm in I'm in I'm in. if we need this kind of signal, it seemed to me that the premise was that we need this signal, otherwise, switches my drop. But with ECN become more common, is minor saying that packets would not get dropped and that they'll be and the sender can decide what it would drop when it sense at the next round trip. Assuming that is the case, I wonder how much strong need we have for this kind of mechanism that indicates how switches your drop packets instead of asking them implement easier. Thanks. I I'm not addressing comments. We don't have all the time. So -- Oops. And you you can address comments but we would love to join the queue. and So if you're in the queue, please come to the mic, Tim. and we have Marco currently in the queue, Hi, Tim Chiang. Yes. 1 of the authors or 1 of the other Tom mentioned 4 or 5 things. are being presented at this site. Yeah. trying to do this sort of marking very keen to speak to others to other requirements and see if we can come up with some these common requirements, you can be able to all use we would love to use hop by hop because it's V Six only our our use case. k. Love love to talk, Travis. Thanks, Tim. Thanks, Tim. Hey there. think I picks extension headers seem generally more useful, and I think it'd be better to push for more support of that. rather than inventing something new that might also have similar problems when deployed. That's it. Thanks. Thanks. k. Dan still gets the opportunity to find a word if you wish. Well, thanks for your attention on this. 11 point"
  },
  {
    "startTime": "02:02:01",
    "text": "on the architectural question that came up several times is the the waste of the Internet is UDP. It's no longer IP We can blame Nats on that. So I guess that's partly partly on me for co chairing behave for so many years. But here anyway. they're But that that's where the waste is, and that's why we have moved this you know, have brought this proposal here. And, yes, it it moves things up in the stack into an unpleasant place, that is uncomfortable but we would really love to have a solution to this long standing problem that that that we've we've been attempting to tackle for couple decades. x, x, And my last question to Dan, what's your intentions for the next meeting? Are you trained to carry this on? participate in the BAF And I would like, you know, some refinement stuff on top which, you know, is you know, someone else's document and someone else's interest, I expect. and we'll do a reaver 2 of of our own dock, to clarify a lot of the comments that we received here today. Thank you ever so much for that. Thanks, Dan. Right? Then we're over time, thank you for all coming to this meeting. We will hold 2 sessions in Prague or request them. There will be working group last calls coming up on the list. Have a good lunch."
  }
]
