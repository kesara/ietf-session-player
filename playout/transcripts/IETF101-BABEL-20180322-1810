[
  {
    "startTime": "00:00:05",
    "text": "this is [Music] [Music] hmm you sure I can get them probably yeah so definitely the protector no that\u0027s okay we can see it people well "
  },
  {
    "startTime": "00:03:30",
    "text": "boys if there are sorry you know our people yeah it\u0027s hard to see from here okay why don\u0027t you restore it well I might think that I might be something that you might throw tomatoes at me I mean I got the meeting where there was like a big F table and people around the table some of them joined the meeting remotely I mean so they could have a green light part of them though way down there Julius my her jeweler you were joining one my baby welcome to Babel so what\u0027s our agenda start with we\u0027re gonna start with um oh I\u0027m Ross white I\u0027m a routing II and I\u0027m not at least like no I\u0027m a bureaucrat no they do this on purpose they have one Oh so this slide is wrong oh it\u0027s um Martin now right all right so I\u0027m we now have a new ad Martin is Martin Martin\u0027s here Martin see money everybody trusts this working group so much yeah you can you can you can tell we\u0027re a very heavy hard-working working group that does all sorts of I was gonna comment that they at the routing area open meeting day they seem to have given you all the non-controversial working groups was that intentional that\u0027s right spring spring was closing no anyway this is the new note well which you should note it\u0027s got pointers and actually the BCP Fair is twice here because it sort of referencing parts of it to different parts of it so people should review documents it\u0027s great so this is a proposed agenda so "
  },
  {
    "startTime": "00:06:32",
    "text": "there\u0027s three presentations and then this also wants to have a couple minutes to talk about the revised RC is working Changez people have topics they want to add or delete yeah my so so that sort of related to security maybe I\u0027ve ever after the DTLS minor whatever sometimes we can slip a few minutes in for you if we keep on schedule file we\u0027re not behind schedule yet so and anyway so just quickly review status we\u0027ve got these I guess there\u0027s a your I don\u0027t have your draft on here they\u0027d have sixty one twenty six bits that I didn\u0027t update this recently anyway there\u0027s uh it was it neither uh working group adopted drafts to the home that draft and I guess it doesn\u0027t have any problem personal graphs on here except for they Ted lemon home that graft and of course there\u0027s the original instead of RFC so I guess there\u0027s a seventy to ninety eight bits right yeah so that\u0027s also maybe I\u0027ll lift lists the personal drafts next time so we\u0027re kind of behind on our milestones so not too much to say about that possibly we should revise the milestones to get them back in sync where we think the working group really is but uh if we can do that offline and stuff I don\u0027t have any proposal for changing the milestones currently or anything so if people are okay with the agenda yeah yeah julia scrubber check what\u0027s happening with source pacific what happened clear on what we should do about source pacific now as far as I\u0027m concerned there is consensus okay there is consensus for the source Pacific draft and I\u0027m asking the group what I should do next what status is it in I don\u0027t know is it did we do a working group Roscoe honor no okay well I guess what you should do is ask for a working group last call can I do it now guy since sure okay I\u0027d like to ask for working group last call for self specific okay I think it\u0027s been around for a while and been discussed and so I will yeah yeah yeah there\u0027s are their implementations so so it\u0027s a course sort of based on sixty one twenty six bits which is sort of stolen an extended working class call willing to resolve the things that I believe so I\u0027ll post I\u0027ll start do that "
  },
  {
    "startTime": "00:09:32",
    "text": "right after the meeting here any other interesting things people want to do that are are showing us proceed with the update on the bird implementation status of available sounds good actually I am senior so this is what I have you want me to do there so you say in my mailbox so we down here right yes so I assume this is pretty close to what is online yes so I\u0027ll just go ahead and use yes and if you give me the little gizmo out of it you might be able to advance the slides okay this is what you sent me on probably want to view the full screen version yes can I rent it on this screen as well oh I see well I can see it now I\u0027ll hold hold on a second let me so what I want to do here I think is just go to the command f1 so I just want to force them to be the same there we go there we go so I now have only one display so this week as high resolution looks like alright and I can maybe yes amazing all right awesome yes hello everyone my name is Toki Harlan Jorgensen and I am the author of the bird implementation of Babel and I am going to give you a short update on the status of this implementation since it\u0027s been a while since you\u0027ve been forced to listen to me so a quick recap for those who don\u0027t know what the bat what the bird running demon is so it\u0027s a from scratch implementation of a lot of major routing protocols it already spoke "
  },
  {
    "startTime": "00:12:32",
    "text": "BGP OSPF rip PDF and Ra some of which you might notice a non-action routing protocols but they were there as well and I added Babel support to this a few years ago it\u0027s a very nice implementation in - very nice demon clean code well-organized readable and the demon itself is pretty scalable as there\u0027s no problems using this boy for bgp routing table from sam\u0027l so this seemed like a cool place to implement Babel and of course pet bird is also developed by some friendly and very meticulous Czech people which is really nice when you have them reviewing your code and so I did the initial implementation in 2015 of Babel and I did a make implementation experience talk of this at the ITF 95 a few years ago and at that point there was no release that contained the Babel code but that was first done in Beart 1.6 in April 2016 that was an implementation of the original RFC 6120 6 with no extensions but because the 1.6 version of bird is not dual-stack this was a PVC Charlie did up interoperate with with so since then with the release of bird 2.0 in December that last year we now finally have ipv4 support yay yes just in time for the end of the 20th century plus minus a few decades so this is not actually speaking Babel of you but this carries the before out over the v6 packets just as Babel D does and it does that in their way that interoperates with the original Babel the implementation as well members been a few updates since then as we\u0027ve been working with RFC 6120 6 this so we\u0027ve added SAP TLB passing and we now I know the mandatory bit as well and discard all mandatory such a always that we don\u0027t know which is basically all of them with one exception we also it\u0027s also learned about hello flax and we also will cheerfully now discard unicast hellos and so this was the thing that I had to revise my slides because the nice people over at Byrd headquarters as you can see released a new version just a few hours ago so before this was on the list of non released features but that means that there is now a released version of the variant daemon that speaks so specific routing from the updated draft so that is the "
  },
  {
    "startTime": "00:15:34",
    "text": "implementation of Babel so specifically which means that it will speak to the gate version of Babel v but sympathy encoding has changed just not interoperate with the legacy version so unfortunately for people who already run so specific routing a flight base needed but that was going to be the case anyway and as you can see it\u0027s so specific routing in itself is pretty easy to implement in the core protocol it\u0027s less than 200 lines of code I\u0027m cheating a little bit here because of course that requires the kernel to know so specific routing to know what to do with them and this is does not count the bird core changes to soar to support so specific routing either which is another 200 lines of code or so so all in all it\u0027s not that much and it\u0027s pretty useful to have so specific running so that\u0027s nice then there\u0027s a few additional unreleased changes which have not been accepted upstream yet one of them is the acknowledged attractions optional algorithm that was added in RFC 6120 search Biss also known as the Chu an algorithm that is pending code with you it\u0027s actually about the same amount of code I saw specific routing but it\u0027s pretty neat because what it does is that when a route goes away instead of having to wait for the whole time which would be several minutes we can now remove black hole almost immediately since we get the tractions from from other peers and then I have been playing around with unicast stuff but I grab stuck somewhere around so that is only on my laptop and I will not show it to you and then looking further ahead obviously I\u0027ve plans to experiment some more with the unique are stuff we also have some plans to do the security depending on the next talk and what we end up deciding there tentatively there\u0027s H Mac support already in Burt so I was probably going to start with that but we\u0027ll see where we end up in the discussion and then there\u0027s also the whole Wi-Fi issue with it would be really neat to be able to get some parameters out of the kernel and do something useful with that instead of just doing the multicast hack where we look for drop packets and of course scaling packet transmissions I think it would be really fun to try to dump a full BGP routing table into Babel and see what happens and of course this is not a promise to implement features to do any work or anything whatsoever this is just ideas at this point and if anyone else wants to implement some ibid please do so just to sum up we have very full LC 6126 Biss "
  },
  {
    "startTime": "00:18:36",
    "text": "implementation in burt 2.0 it\u0027s interoperable with the deployed babel d except for the saw specific oh bugger I forgot to update this this should say two point zero point two and not yet sorry about that which does not enter operate with Babel D but it does interoperate with the upcoming battle D which Julius will release any time now and security and unicast work is pending so please test report back patch is also welcome and so on and so forth okay one question rest wait LinkedIn no chair hat on it\u0027s just kind of a technical question maybe so you\u0027re carrying v4 routes over the v-stitch transport are you how does the bird the hattiesburg bird interact with the rib in terms of next hops for v4 just curious that\u0027s activity okay but I\u0027m asking like does it check to make sure the v4 next hop exists before it tries to install or does it try to install and then it just fails if there\u0027s no v4 next hop or how does this it was that something that you had to deal with if so I\u0027m curious how you did that\u0027s a good question okay I don\u0027t recall offhand I don\u0027t think it\u0027s doing something terribly intelligent about that I\u0027ll Chucky cool thank us Tony P juniper is though first question is has anything has been done on the Linux kernel for the source this nation specific look up what do you mean been done with I mean like you said Babel is fantastic for the stuff you get all the source destination stuff but now you lis need to look up support in the kernel right to push it in yes they do any work she was working these respect that has been supported in the Linux kernel for several years v6 ok excellent for v6 ok excellent I just left so before you can implement it using policy routing but that is not implemented but there\u0027s native support for it in the living kernel since at least version 4 okay so I go look at it and then obviously since you ran out of ideas for 200 lines patches you shall implement beer right and we actually and we actually have there no completely native v6 encoding on the plate so you can run the whole beer in user space without any kernel support right so it\u0027s like hope hope I hope link local to link local and you get the full frame and you can do whatever you want and it was further out did yes I will I will put that on my list of ideas but maybe 210 maybe you ready to make crash dude skip divisionary send the patch for peer support happy happy to look at it channeling Marcus Steinberg who said that specific routing has been in Linux for 4 years and 90% of there\u0027s some "
  },
  {
    "startTime": "00:21:37",
    "text": "slight bugs on Suresh cases but in general it\u0027s been there for 4 years yes all right all right ok Julie\u0027s chroma-trak just that means that you have that means that you have as far as I can tell you\u0027re fully compliant with six one two six bits as it currently stands and you can implement the Babel profile for homeless probably as except perhaps for land quality estimation do you do it yes you do on Wi-Fi what I mean like you do etx yes okay okay okay it\u0027s working I think well hello I\u0027m not in on this mo and I\u0027m going to present joint work with Judas Kovacic about securing but always DTLS so we need security in Bible and for that we have two approaches either we could secure the lower layer with protocols such as WPA Open VPN or we could secure bubble in Babel or PayPal in battle with two approaches so so but on each micro traffic authentication or DTS DTLS the transport layer security adapted to work on UDP on data grants and this is a subject of this talk why did TLS the Rudy TLS is a plus because we don\u0027t have to think about how a new new security protocol and we don\u0027t have to implement it it\u0027s someone else problem DTLS provides a symmetric keys and authentication and confidentiality okay so good things we have a working implementation we use the embed chalice for our today\u0027s implementations so here you can see a screen capture a packet capture I mean we have neighbor discovery packets blue then a DTLS handshake starting and after the completion of the handshake the two that appears exchanged double protective data in green this is a further moment the user interface so you have to say that you want to use unicast on the interface then you want to enable DTLS on the interface and you just give to Bible and link to your certificate "
  },
  {
    "startTime": "00:24:38",
    "text": "the private key and I can show you the actually the the CA certificates and the key the password to the private key okay so the mole is based on UDP you can use beta over unicast and multicast and Bible is a pure pure pure chapel protocol which means whoops whoops it means that the same part is good for sirs and for this nation and by Dodie the implementation of a reference implementation of Babel uses a lot of multicast but the trellis can only protect unicast so Julius had to rewrite the buffering mechanism in Babel D from a lot of multicast to unicast the implementation in the implementation unicast is independent from DTLS and now we can protect Bible so it means that the welching information is protected that neighbor discovering packets so hellos and Ling quality in each dimension packets so hellos and i/o modules remain unprotected okay now I\u0027m going to talk about our actual prototype so in detail let the handshake is a symmetric but Babel is purely symmetric and we have to break that symmetry so we use the classic technique of selecting the lowest link layer address the peer with the lower address and it becomes DD TLS handshake server now when we receive packets so the bubble structure is pure appear to be a we don\u0027t like to provide this with details so we choose to receive all traffic from bubble and from the TLS on the same circuits but we have now two different shades packets coming from me TLS and coming from data and it turns out that the details library can do that for us most of the time so we have to so we receive the packets from on the same circuit and we try to decrypt the packets so we give the packet to the to the chalice library and if we succeed to decorate the packet we target the we take the packet as secure and if we fail we tagged the packet as insecure if the packet is insecure we will ignore all theories except hellos in IH u so we either other way we bounce the packets as an optimization multicast is insecure by default because details cannot protect multicast and this behavior is interleaved with the DTLS handshake meaning that while we are processing ad TLS handshake we can still receive roll double packets when we anita packets so "
  },
  {
    "startTime": "00:27:57",
    "text": "clearly this is not proposal okay but we have to be some disagreement to shoot the server part be the same a debugger part should the client be the same as a server part we need to discuss that and we still have some open questions that so is passing insecure packets winning a good idea and another question was raised on the list what if appear wibbels after successfully TLS handshake so it turns out that the array the section in the details about see are telling us what we should do but most implementations don\u0027t do this we could use different parts we could do a bit of hacking in the client details library there is room for other internships also on the usability of by Dodie how should we deploy keys and certificates and well the invalidate keys or whatever and another question we need the details of ahead cost presentation especially when exchanging certificates so good news bubble can be protected by DT Alistair we have the running implementations that protects data but nuts discovery and hopefully for be available soon thank you for your attention again from long experience with a GPS so key management still it straight out from the IGP protocols and yes it\u0027s manual it\u0027s a rollover they went through all these operational stuff I mean it well understood to what ultimately customer deploys right the most common attack is really replace and you not protect against that at all because DTLS doesn\u0027t give you any non C\u0027s or anything like that I assume right so it does so DTLS does already the reply protection so what\u0027s the reason about is adjacency formation it\u0027s just because multicast and that you don\u0027t know how to encrypt multicast I mean you can put something and encrypt that stuff even a small piece of information on this key and it will give you you know at least you know that it\u0027s the right guy sending because the most common attack was really like reply protection especially on the adjacent sister which most often ended up just being a denial of service right because they weren\u0027t able to like get adjacency fully up but you can actually muck things up pretty badly simply reply attacks so just practical experience David skin Ozzie Apple to answer to Tony the yeah so DTLS gives us replay "
  },
  {
    "startTime": "00:30:57",
    "text": "protections amongst a bunch of other properties but indeed if we don\u0027t do anything to protect the hellos the attack on Babel is well so you can send evil hellos and mess up the sequence number counts which will completely mess up your like estimation and you could also replay them which would probably have the same effect actually but that\u0027s yeah that\u0027s it but the chart so my name is Dennis and I\u0027ve been waiting for this for about two years the DTS mechanism because Irish had adverted lead since 2016 and I\u0027ve been asking the same question is it possible to see a document that explains of things they expected to work for instance like security considerations the things the bad things that you see might be happening and how you see the mechanism is protection they\u0027re minuses of the routing protocol from those bad things you say and I didn\u0027t have the opportunity to see a document that would explain it it\u0027s nice work work in progress okay I\u0027m not saying they\u0027re doing a bad thing or but what I\u0027m saying there should be a document that explains what you meant to achieve such that if what you\u0027re doing is not what you want it to do other people can see it and say that\u0027s what you\u0027re going to do that\u0027s what you have actually done so if this can be fixed then we need to fix it otherwise we should review the assessment of the security threat and say that no that\u0027s not the model that should be different then the implementation should be different so in a normal development process things go forth and back so that you build then you look what you have then back to the specification profiles once again and you need to have a document also that we have a thing to discuss okay just say that this is what I have missed this is what\u0027s done right and in that document it will be nice to have a section that spells exactly how many bytes do you introduce as an overhead protocol because there should be some power head it would be nice to know how much it is like 5% 50% of the normal traffic I think we have to do some testing it\u0027s one of the things that needs to be discussed because when you hit yes and a specific implementation that can do only those many bytes on the wire because that\u0027s the type of link that you have then you need to see if the protocol can still work on that game okay thank you so I "
  },
  {
    "startTime": "00:34:03",
    "text": "always want this is not least like with whoa I just wanted to say that document seems like a great thing to have and it just mentioning on on unicast and multicast I mean there\u0027s a DTLS as I think where does this handshake to generate the keys so it sort of inherently a peer-to-peer kind of thing you know the point quite the point and the you know some of the Nash you could easily build something which is multicast but has some kind of group key okay but but it\u0027s easier and to do that securely if you want to have a group key of something like that if you have some way to distribute that key to the group members you know it so you kind of want to have a point-to-point security already set up but they\u0027re fucking anyway where you most need the multicast is where your first discovering people or something like that so it\u0027s a little bit of a chicken and egg kind of problem so anyway that\u0027s wanted to say that okay this proper tech first like to answer Dennis\u0027s objection there was no intention to exclude anyone anyone by not writing things down so actually the two implementations happened last week okay so two weeks before to finish I believe so I will just so first I would like to point out that you know there is on one side Donna and on the other side a multi bill reincorporation Antonov finished first and the other point is that we it is really very very recent stuff and we simply haven\u0027t written anything down yet okay and so the second point is that I\u0027d like to make is about the first slide as you can show it back second slide so what we now have are two extensions to Babel for cryptographic security and they are very different so each Mac is simple makes no other requirements and has minimal and the symmetric King only with a short key for everyone only does authentication no encryption no privacy and protects everything including multicast and requires very little changes there Babel implementation you\u0027re still doing Babel / multicast Babel / DTLS is this work and this thing makes you depend on the complex library that you don\u0027t understand because nobody understands DTLS and but on the other hand it means that crypto is somebody else\u0027s problem so at some point we\u0027re "
  },
  {
    "startTime": "00:37:04",
    "text": "going to have to decide which we want to have it strongly recommended in the draft and I would be in favor of pushing Babel H Mac with their Babel / DTLS being the optional algorithm that is reserved for those environments in which you really don\u0027t want to have your own security stack or you need the extra features and you\u0027re saying that it be TLS moves all the security of somebody else but it\u0027s not clear to me that it seems need need need to protect to provide some protection against people screwing with hellos and I heard users and stuff like that and if de las doesn\u0027t do that then it\u0027s even though it may push the crypto off to somebody else it may not the crypto provided by this other party may not be what you need so right so there was one proposal for that so my impression was that were not protecting against the OS yeah okay it looks like was wrong if we want to be protecting against the US then DTLS can work I believe thanks to the unicast hello Akash and what had recently done but I think David has clear ideas and I do know that subject is that sure well you okay Tony Fijian so I would from practical standpoint I think played with the stuff of twenty years right I would second what you do says replay protection plus something like shell on for integrity is mostly as far as people go and if you have something which is simple doesn\u0027t precondition library lots of overhead you know computational overhead this goes a long way where the world is going the DTLS will give you the leg up right I mean the security guys are coming down heavy they\u0027re coming down heavy for a good reason right so I think you\u0027ll end up there anyway but having DTLS that\u0027s the only option that\u0027s a fairly fat pig yeah you know if you won\u0027t like practically deploy the protocol and be successful with it um one thing I like to have David\u0027s Ganassi Apple DTRS doesn\u0027t just give you encryption on top of this it does a new key exchange every time you set up a new Association and so that means that you will never have replay attacks messages that could come on a later date or people sending traffic that we modified it has a much cleaner security boundary and if you say that everything like hellos are outside or hellos are and I heard you\u0027re outside and everything else is inside you know that everything else is completely immune from replay attacks whereas with the HVAC work dennis found a very clever attack on it which because of the way it "
  },
  {
    "startTime": "00:40:08",
    "text": "is it\u0027s kind of harder to reason about it harder to make a security we might have other attacks I\u0027m not a security expert but it might have other problems as well we could also another option is to use a combination of both where you could establish DTLS use a key exporter and use that to H Mac the hellos and that gives you a very secure model that that is also immune from das attacks that\u0027s an option and I cut the line after you go ahead yeah Toby Holland Jorgensen so I like features as much as the next person but I think from my point of view having something like basically what Tony\u0027s at having something that\u0027s really simple it doesn\u0027t give you all the security features but does the does give you a barrier between for me the sort of the main thing that the security mechanism should provide is I run a network I control the routers I run Babel on the same links that there might be client machines and the client machines that do not know the password cannot mess with the routing like that\u0027s sort of the symbol use case but we don\u0027t really have a an agreement on what features we want like there\u0027s no threat model thus I think it\u0027s sort of a a difficult discussion but to me at least having the option of doing the simple thing would be important and also from an implementation point of view I would also like to have security available in environments where I can\u0027t have a details library first such as on a tiny unity linux router with two megabytes of Flash so a more input on that um so there is really this layering of you know what security it is comprised of right so there shiz like the simple integrity if you want then you have to replay thing and then you have really the what you call it but you can see what\u0027s inside yeah confusion right and you\u0027ll be shocked why people deploy at OSPF H Mac the one single most important reason was they didn\u0027t want by miss configuration having random adjacency coming up there was a protection against people miss configuring the network has nothing to do with security okay okay literally so the keys are hanging there for 20 years and the only reason is like you know you can\u0027t just randomly bring it up adjacencies and then you know the read because it\u0027s a really good error correction it\u0027s error correction and harder to come to miss configure and then the replay attacks where they\u0027re getting more common and "
  },
  {
    "startTime": "00:43:09",
    "text": "the confusion the confidentiality is something that has always over had in the price your funky libraries you know funky version of the libraries you have to run funky tunnels you need if you bring up IPSec tunnel before you get is now the the security Association it takes forever and then Psalms and convergence slows down and practically speaking people don\u0027t do that right and then you think like oh yeah but anyway they really have a key infrastructure no one ever deployed dynamic key infrastructure on the routing protocol and I built someone having paid for it but then once people understood what is the implication that you literally break you network right if you lose the the the key Authority no one dares to flip the door no matter how paranoid aware and I dealt with some pretty paranoid people including you know like the people who should me stars in the sky yeah so I\u0027ll say the other thing with my chair had off I would get up and walk around but Tony was blocking the microphone is your very good size anyway is that is that that\u0027s your job is that when I was at Cisco and we were testing H Mac in d5 and we decided to test performance we did we determined that turning on encryption on routing protocols is actually an awesome way to open up a new secure in your network because most modern processors even if you throw enough miss sine to garbage at them it will take down the processor on the router so you\u0027ve opened yourself to a denial of service attack it very low packet rates much lower than you might expect I think we really kind of have to move on to the next item okay I just wanted to make a quick point about the point of disagreement on the ports would you could I make a quick second okay that\u0027s a different topic you know I have worked lassis nothing about the ports the other head so thank you as cotton on pointed out there several ways we can do this I just wanted to insist on the fact that I feel very strongly that we should have a separate port and randomize client ports okay it in general it is possible to get two port assignments for a protocol one for insecure one for secure that\u0027s one thing that the port I guess it\u0027s the pool of experts that are for port assignments will will allow to in that case so it should if we want to do that we should be able to do it so yeah I needs more discussion on the list perhaps but ya know I just really wanted to point out that most implementations we would be if we use the same port we\u0027d be relying on something that as far as I know and I\u0027ve asked a bunch of people in the TLS working group no implementation exists that supports this and having to go and change DTRS implementations is not something "
  },
  {
    "startTime": "00:46:11",
    "text": "I\u0027m comfortable doing okay so we move because Dennis wanted to talk briefly about 7298 this and we do have other talk so what do you want to say do I just have a very quick that I believe that everything speaking about can be done in the client but that\u0027s a debate for another thing okay have you ever anyway thank you for oh thank you okay so that you want to speak about 7298 this yeah I mean so you asked for it a few minutes to do that so Lauren hello hmm I\u0027m Dennis and I\u0027m here mostly to remind about my message in the working group mailing list I have reported an individual internet draft that I believe addresses the problem that I had described a few times of the mailing list and on HF 98 I think session I heard slides that explain the in as much detail as possible how the attack works and we had a few threads now I have abated there 7298 we solution that I believe solves the problem and because it\u0027s still an individual idea I would like to propose it the working group document because as an individual idea its users and it doesn\u0027t serve the purpose if the working group is interested to pick it up I can finish the document at the moment in could it contains the central parts of the technical description then it needs some generic changes I can do them if it becomes a document if it doesn\u0027t become them well I would know what the five things to do so I Manila mainly drawing your attention to what I believe to be an adoption call right what\u0027s the fairest jump for it there anybody who objects to issuing a call for working group adoption they should speak up otherwise we\u0027ll do a call and you know see what people say and unless there\u0027s objections were probably adopted no I had explained the attack in detail before and if anybody wants to discuss I can discuss I can explain how the solution works but if you want to talk about I would expect people I would reasonably expect people to read what I have written maybe together with me we can run through the document and then you can have your opinion if it actually solves the problem or if it doesn\u0027t but I think it does regarding the point that we discussed five minutes ago about control and protection with computing compute a computational intensive operations "
  },
  {
    "startTime": "00:49:13",
    "text": "teaching the central processor of the device right in 7298 original there are provisions that address that specific problem they try to keep CPU load as well as possible when the attacker just feeds packets that pretend to they pretend to be integrity protected that\u0027s it so that there is a mitigation origin in that document for that that problem that\u0027s it okay thank you I think old school is you a call network on the mailing list for working group adoption of the 7298 this draft next is our babel information alrighty so it\u0027s been a while since we actually discussed this and I know y\u0027all are really excited about it um but anyway this is just a brief structural overview of what\u0027s in the current draft but Julius and I met on Monday and then I internalized our meeting on Tuesday and then we talked again on Tuesday and so there\u0027s a lot that\u0027s going to be changing but it\u0027s still mostly this it\u0027s just not quite but anyway that\u0027s what it was um now one thing that we are going to get into you know I just put this slide just to compile a list so people have a warm fuzzy feeling that they know what actually would be configurable from the data model as opposed to just readable and it\u0027s just that it may be configurable because it is up to the implementation to decide whether or not to expose something as configurable or even to make it configurable to some people but not others um there are changes coming in the o2 version yeah there\u0027s a lot of myths that are fixing I\u0027m adding an appendix that\u0027s going to have the change lock so you can see what all the changes are but just some kind of big things yeah that\u0027s not really big um yeah we are a babble link type taking away or this lossy link and so we\u0027ll be able to expand the as it as an enumeration as other link types become supported in implementations for example power line coax we still need to work some on the Babel security object but in any case I\u0027m allowing for credentials multiple credentials of one\u0027s own in addition to multiple credentials of the nca credentials and things like that just in the description but you know how a how a security mechanism makes use of these credential lists is up to that security technology we\u0027re going to add some route filtering rules a table for that that\u0027ll be optional to support a security log just to record any time when you actually examine credentials and yeah "
  },
  {
    "startTime": "00:52:16",
    "text": "there\u0027s some other things we\u0027re going to get rid of the source table anyway it\u0027s just a summary I hope this is readable and I didn\u0027t make it too small I\u0027m really sorry but there\u0027s some open issues I\u0027m not going to step through them all y\u0027all can read through them and tell me if there\u0027s any that stand out at you but I\u0027d be curious I think one of the let\u0027s see at the end oh yeah this was number eight this was all based on input from Julius so it reflects his implementation we really need input from other implementers [Laughter] okay and and just so you understand it is structured that a lot of the data model parameters are listed as optional and that is because if an implementation does not support these if it\u0027s not something that in how that implementation is designed that\u0027s perfectly okay you don\u0027t have to support or implement the parameters either even if you choose to implement the information model via is some data model so that\u0027s kind of what optional means it means well optional I know right it does not mean should that\u0027s a totally different word nothing well the north is chroma-trak so one thing that users do want to configure is filtering rules and the three implementation of the three main implementations the three sorry open-source implementations of babel have very different configuration languages for filtering and I don\u0027t think it is our job here to extract the common filtering language from free range routing bird and my homebrew implementation okay and I don\u0027t know what to do about that and I would say to leave the filtering rules as an aback object so I\u0027ll say I\u0027m Russ Lincoln chair hat off that it is not your job to bother with trying to mess with the filtering rules it\u0027s whatever is in the implementation that you\u0027re using bird through and routing whatever because the users of those implementations are going to expect them to be the way they are for bgp OSPF is is whatever so we had discussed that I would just put a proposal in and see you know if people like it we can have it as to how to "
  },
  {
    "startTime": "00:55:16",
    "text": "model really basic filtering and if something does more advanced filtering then really really basic stuff then it\u0027s just not in the model and it\u0027s not configurable via that model and they would have to do custom model elements but or we could do nothing about filtering either way I mean but I can propose it and you can see it and throw up all over it and then we take it out I\u0027m afraid I\u0027m very afraid that if we start doing filtering rules then we will end up adding features and never finishing I guess I have a question would it make any sense to have sort of a big block of stuff which only something that understood that implementation could parse but could be obtainable through the whatever that you had of reading out configuration you know with your management protocol see that again just have an opaque globo\u0027s filtering rules stuff that you know you could obtain through your whatever I\u0027m adding protocol you were using whether you\u0027d only be able to understand if you understood that the implantation honestly it makes more sense to suggest that an implementation create custom parameters for their implementation if they want to expose it yes okay then that\u0027s probably true I had you know it says out that was completely off the top of my head okay so does anybody have anything else for this meeting I guess varying you wanna say yeah I guess not so I\u0027ll see people on the mailing list and a sec sorry I\u0027m too fast here we go ahead I roll in filthy no not to throw a spare in the works but it\u0027s I read the source specific extension a while back and it\u0027s a very short document especially if you leave of all the boilerplate and on each page of the remaining document were about three or four references to D 6126 document I was wondering would it be simpler to just merge the two things well that\u0027s so yeah we should just you know for you constituent sure well no it\u0027s really for the working "
  },
  {
    "startTime": "00:58:16",
    "text": "groups consideration I mean you know we can we can merge documents or a split documents I don\u0027t know I mean um David skin Ozzie Apple I would prefer them to stay separate precisely because it\u0027s an optional feature and in that case I would kind of say you implement one RFC gives you the man in Babel and then every extension to Babel is its own RFC that seems natural to me and also the timelines might not act like exactly in terms of one we want to publish both documents so Briana and Arrington yeah same point but I would add that you don\u0027t always have a forwarding plane that can handle so specific writing so if we added it to the main document we would have to make it optional and I think that could add as much text now than these back references from the extension does and I think that having duck the documents be really short is a feature it\u0027s one on one of my main my favorite things about this working group is the short length of the documents the thing is the readability of the extension and draft or RFC as it\u0027s going to be and if you have to go back and forth to be the main document all time that was my reason for suggesting it okay anybody have any other topics or points they want to bring up all right we have one minute left maybe I guess not anyway I guess we are adjourned in that case thank you all for C analyst we\u0027re expecting you to push the new version in 15 minutes Julius [Laughter] "
  }
]