[
  {
    "startTime": "00:00:46",
    "text": "We do not I'm Alright. We are shoulder. Dutt. Alright. Those people having conversations we'd like to get started So, welcome everyone to the SCON Pro BAF We'll be talking about Not baked goods, and probably not also, This Not again. So, brief reminder, of the IETF policies that we all have agreed to adhere to"
  },
  {
    "startTime": "00:02:01",
    "text": "We're here to do work That means respecting each other. And the policies that are laid out here, I don't think I need to go through in much detail. Yeah. Don't think I need to go too much in, in detail given that it's Thursday, and most of you have seen this. Quite a number of times. But we, at all agree to adhere to a code of conduct, and there are some, disclosure requirements, if you have intellectual property. And Also, for those people participating in discussions, please remember to say your name clearly at the microphone. So that our notetakers are able to capture what you say correctly So, the agenda for today. Marcus will talk us through the current state of traffic policing in in networks and and some of the experience he has there. Matt will be talking through some of the results that, Mehta and Ericsson have managed to, obtained for some trials. And, Brian will remind us why this is not plus and talk about some of the things that we've learned in the past about network to path and path to network, signalling protocols and and the sort of constraints we have on that one. But then the the bulk of the time here is going to be spent on discussing whether or not we have something that will help us answer the following questions. Which is the the key thing that we're here for, and I ask that everyone sort of focus their attention on working towards answers to these questions. Is there a problem? To be solved here. Do we understand that problem?"
  },
  {
    "startTime": "00:04:00",
    "text": "Well enough to engineer a solution. This is not research. This is not science fiction, we can turn this into a real thing. And, Will the work get done? People kind of implement it, are people going to deploy it, and are people going to sit down and write Drafts and review them and have a functioning working group as a result. So these are the questions we're asking. Please, if you have things that are outside of the scope of these questions, I ask that you limit the time you spend on those things. And so Now I'm going to ask Marcus Marcus, Marcus, to come and talk through through Do you wanna run slides, or shall I do it for Bye. Alright. Hi, everyone. I'm Marcus Ciela from Ericsson, and I will talk a little bit about video shaping and how it's done in networks today and some of the issues with how that's being deployed currently. Next slide, please. So, there are a number of networks in the world that do throttle, traffic, especially there are networks that we care about in this buff or networks that to throttle video traffic specifically. And why do they do this? Well, there are multi multitude of reasons, but principle, like, bandwidth is a shared and limited resource. And when you have networks that are on the RF spectrum, you you kind of, have even more constraints So you need various ways of managing your, your network and your network resources. And at the same time, we know that video is becoming the dominant form of media over the Internet We've had dedicated video platforms for many years. Long form videos and YouTube and whatever, similar. But also nowadays, social media is"
  },
  {
    "startTime": "00:06:00",
    "text": "more and more driven by by video content usually through through these short form videos called reels and stuff like that. So even though there are lots of capacity, investments, being done in these networks, it's kind of hard to keep up with the demand for data continuously increasing. So network operators then tend to take different approaches to to to managing this. Next slide, please. So, when we talk about this kind of content specific work management and shaping in particular, like, where does this happen? So what we've seen is it's fairly common in for satellite operators to do this. Typically for these geostationary type of, networks. We see that cellular operators do this. Quite a large scale, but there are large regional differences here. So in certain continents, this is, something very common common practice. In, in other continents, this is not common at all, and that depends on various things like legal landscapes and so on. And a small number wireline operators do things like this, but it's a very small number, usually. So Next slide, please. So, one way to manage networks when we have this when we have this, situation where it kind of consumption of video is continuously increasing, you need to satisfy kind of demands from your customer that they wanna have continuous access to to video, while at the same time, somehow limit the strain on your network resources. So what we used to see in a lot of networks was that we had subscriptions that were limited based on data caps, So you would pay a monthly fee, and then maybe you have 5 gigabytes per second. So 5 gigabytes of data per month, or you pay a bit more and then maybe have a larger bucket where you can, like, spend more data. What we see now is more and more operators are providing unlimited, data buckets to their customers. So basically, you can consume as much data as you want, you there's no limitation there, but Then they instead, what they do is that they do content specific limitations. So you can perhaps have a cheaper subscription, and then your video bit rates will be limited to"
  },
  {
    "startTime": "00:08:00",
    "text": "to a certain, quality threshold. And if you pay more, maybe you can have the full range of video qualities. Next slide, please. And why do then operators focus on, like, shaping, adaptive bitrate video in particular. That is because of the nature of these, video applications. So ABR video, basically has a process where it dynamically selects the video resolution based on estimates of the estimates and predictions of the network capacity these predictions are made by the client. Usually. And then video, the video itself is divided into small chunks or segments, and each segment is available in various qualities and resolutions. And then the client based on its estimate of the network, quality or network capacity selects one quality track that most probably will work well without interruptions to to the playback service. And if we go to the next slide, This is something that then can be sort of this fact of how these services work can be used by by network shapers, if your goal is to reduce the overall volume that these services, this service is consumed. So what operators can do then is that they can have some kind of mechanism to detect, a video flow typically, this would be done through some form of deep packet inspection or heuristic methods. And this is not always easy, you know, protocols have been evolving, and we have a lot of video being carried by quick now. So This often actually implies that that that the network device that detects this traffic needs to do some form of trial decryption of quick initial packets in order to be able to extract things like the server name indication field that you would find in in in in quick initial packets and once this is done and once you have classified a flow, Then you can start throttling this flow with a shaper or a police"
  },
  {
    "startTime": "00:10:01",
    "text": "We'll go into more details on what that implies later. And then you basically have a policy for these subscribers, you select the you select the bit rate based on this policy. Typically, this is a static policy based on what type of subscription this user has. But there are also possibilities to have, sort of dynamic bitrate policies of that are based on kind of awareness of the network state. So If you know that your network is highly loaded, you might actually, shape your customers slightly more severely than you do when it's not and so on. And of course, works because the ABR client will be measuring the network capacity the the the time it takes to deliver the content is affected by these threatening mechanisms and ideas, then that then it will select. Video of a lower resolution or a lower quality and then consume less data. So if we go to the next slide, we can talk about some of these mechanisms for throttling. So in in Typically, we have, like, 2 classes of, mechanisms to do to do throttling. We have traffic police, and we have traffic shapers. The common thing between these two is that basically, they they create a sort of an artificial bottleneck where out of policy packets are not delivered at the rate. Their incoming. But then what it does with the packets with the packets is is different. So we start by looking at, at the traffic police. It will It will observe the incoming traffic and when the incoming traffic is exceeding some some policy threshold in terms of the bit rate. It will drop those packets. Just to keep the just to keep the the rate cap at some limit. This Policeors are often used more for for, like, overall session limitation. Maybe you have, you have a subscriber that is have a maximum bitrate overall for the entire session to be 100 megabits per second, and you put this police are in there just to make sure"
  },
  {
    "startTime": "00:12:00",
    "text": "that you that that you don't allow anything. More than that. But you can apply this also for some very specific case like this, video shaping, where you're trying to get the traffic to to, to match a particular bit rate that makes it a little bit more difficult. Because these police are because they are dropping packets that are are exceeding the threshold, you will create a lot of bursts of packet losses. This makes it difficult sometimes for congestion controllers to to understand what's going on? Is this congestion loss, or is it something else? Because these drops might not co correspond to increases in in round trip times and so on. So the depending on the nature of your congestion control, this this might be tricky to to to understand. And then we we have seen examples of this where modern congesting control algorithms built in explicit heuristics to actually detect the presence of police officers in the network and kind of try to adapt adapt to them. And to make things even more complicated, Oftentimes, these police officers will allow some kind of momentary burst of of of of traffic to kind of allow a large burst through and then compensate for that birth. Burst by, by allowing less traffic through, for a period of time. There are multiple ways of implementing this, and this, of course, makes things even more complicated. The for the senators because now you have have kind of erratic and hard to predict, loss patterns. So you might need to build even more advanced heuristics to actually work well with these kind of, these kind of mechanisms. The other way of doing it is is, traffic shaping. So where you what you typically do there is that instead of dropping packets that are exceeding the threshold, you'll start buffering them So you basically delay packet transmission. So you wanna get this sort of smoother the smooth idealized rate that is, of course, This is an idealized picture. It doesn't never look like this in, in reality, but this is what you want to try attain with shaping. And then, of course, the idea is that you can really try to to create a specific bit rate and and maintain that one. But the problem with this, of course, is that"
  },
  {
    "startTime": "00:14:04",
    "text": "By doing this, you are now adding delay. You're not adding a bunch of loss, but you're adding delay. And then you're increasing the round trip times, and that's might or might not impact certain congestion controllers as well. And these mechanisms might also sometimes allow bursts in order to yeah. Some traffic peaks and so on. And what happens then is that instead of having this erratic loss patterns, you will now add a bunch of delay variation. And this delay variation is also something that is a bit tricky and complicated for for, for congestion controllers and loss recovery mechanisms as a 1, 2, to kind of, cope with. So so None of these mechanisms are, like, Really good. So let's see. They have both they both have different shortcomings. If we go to the next slide, We can talk about a few more issues with this. So, Yeah. Yeah. General, these shapers and police are designed to kind of enforce a network policy originally, these mechanisms are not designed to, to kind of, create, good user experiences as more had to do with protecting your network or or and network policy and so on. Of course, you can tune your shapers to be more friendly to user experience, especially when you use them for these purposes, like, shaping video in particular, but this is difficult, because as a network operator and a kind of tuneer of this functions. It's actually quite difficult to understand what the quality of experience impact of your tuning decisions really are. And you might have teams that, you know, work with this and figure out, okay. Yeah. This video service response in this way to to my shaper configuration, but that might change very shortly after because these These services are very dynamic. And are also multiple providers of these services, and they might use a very different technologies. Right? So it's difficult, and, yep, hard to know what to do and another thing is that for this to work properly, you need to do"
  },
  {
    "startTime": "00:16:02",
    "text": "proper traffic detection, right? You need to you need to observe the flows passing through your network and you need to know which of these flows are video flows and which are not which are, like, which are candidates for shaping. And this is becoming more and more difficult as these protocols are increasingly encrypted, right, And like I said, And a few slides ago that, for instance, if you wanna extract SNIs from quick packets, you actually need to decrypt them. You need to know which version of need to guess which version of quick it is. You need to find the initial salts. Do that decryption parse the quick packet itself to find the SNI. So it's it's quite a lot of work. And of course, you can also resolve, resorts to more heuristic alternatives basically looking at traffic patterns and combinations of things, but that is a bit fragile and could be error prone. And and yeah. So it it's difficult. Of course, there are, other ways of doing this. There are, Communication service providers and network operators that work with specific, with specific vendors or specific, providers of video services, and, and they, they build, like, proprietary solutions for for handling this maybe to allow self regulation of the video and so on. But then, then then they need to, they need to handle this, And very specifically with proprietary agreements and so on. So We have a situation where All of these different communication service providers work with different vendors, with slightly different implementations of shaping or policing, Some of them work specifically directly with certain video service providers, and it's just a big quite difficult landscape to to, to to work with. And, We hope we can do better. So if you go to the Next slide. Yeah. So is this current situation as good as it gets This is a this is not a scone. This is, Swedish knuckle bread."
  },
  {
    "startTime": "00:18:03",
    "text": "It's a bit dry and a bit dull. I mean, it kind of works. It gets you full, but, you know, kind of yummy stuff out there. So, yeah, then. Okay. Thanks, Marcus. Matt, do you wanna give us the Next one. So head. You guys can do the slides. Hi, everyone. I'm Matt from Meta. And I'm gonna talk about a proof of concept, lab trial that we did with Ericsson, using mask as a sort of feasibility study for something like sconepro. Next slide. So Marcus did a really great job going over, ABR video with just a another diagram to reinforce the point, of how modern ABR schemes like HLS and dash work, so that very briefly, when an user uploads a video, that the content server will break that video down to multiple segments, and you encode each of those segments at different bit rates and those correspond to different qualities. And then the thing that makes ABR video adaptive is that the client is able to, on a per segment basis, change the, bit rate that is it's requesting and playing back. And like Marcus said, this is done generally, mostly based on client side heuristics. So literally trying to measure the download speed and doing other sort of tricks to try to make a guess basically what bit rate can it sustain at any given point? This is why when you play back video, you'll see the quality ping ponging. And doing different things. And so, And like Marcus said, shaping is a way that we can target this kind of traffic and get different outcomes on the application behavior, but it's using a network level adaptation in the network to get a second order"
  },
  {
    "startTime": "00:20:01",
    "text": "result from the application. Next slide. So the proof of concept that we're going over here is essentially to instead of having a network level level at location, we just have a signal from the network that gives the application the ability to to apply a application level adaptation, but also a transport level adaptation, which to in a second. But in this case, instead of having all of these qualities available up to 20 megabits per second, the The client in this case knows that the max quality should get is 2 megabits per second, and so it, self adapts and will cap its own quality there and never exceed it. Next slide. So now let's actually talk about the proof of concept we did. So mask and connect UDP, it's not actually what the RFC is called. It's called proxying, UDP dataograms and HTTP, but everyone calls it connect UDP. Basically, this is a way that we could easily experiment with this because it's an existing standard, had existing software to do this. We had existing software to do this. And it has a lot of similar properties to what we would like from something like Skoten Pro. And if you read our requirements documents, it it takes a lot of the boxes And we also think that from a broad level, if we can implement and deploy something like this, in a in a trial, it's it's a good feasibility metric for whether it's possible for something like this to actually be done with a real traffic. Next slide. So diving into the details a little bit, This is kind of an overview of what this thing that we built is doing. So on the left, we have the literal Facebook app. So this literally the Facebook app. And we also have a mask server that's in a real packet core. And the Facebook app will connect to that max proxy server and then start"
  },
  {
    "startTime": "00:22:00",
    "text": "Sending its end, end, quick connection to the Facebook video CDN server. And then this goes the mass proxy server does what it does, and it proxies them and sends it to the other side. And I think for people that aren't familiar with this, the a couple important things to note is that this this pro this proxy server does not is not able to see the traffic so that these orange boxes, they have a that's like cryptographic context between the Facebook app Facebook with your CDN. The proxy server is not privy to what is in those packets. So it is literally being a proxy. It's similar to, like, how a VPN might work. And so on the left, we just have the this very these this light layer of outer encapsulation from the mass connect UDP. And then that little sliver of blue is what we are calling the, media rate signal And that contains the information from the network that says, hey. This is the media rate information that I want you to base yourself out patient on. So the details of this are in a a draft from Marcus that you can see if you are curious, but that's the overall idea next slide. So to make it a little bit more concrete just so the flow is more obvious just with pictures, the way that this proof of concept is working is that the Facebook app will connect to the mask proxy server, it will start exchanging its, you know, the the the the Package for the mass connection. Next slide. And then once that is established, it's able to make its normal video connection all the way to the CDN And then the normal video playback flow happens. And as part of that, as we've noted, It gets a list of available qualities for this video. Next slide. And then what happens is the, as part of the scone thing, we we are get this media rate capsule that, the Facebook app is able to read. And then first, it applies a application layer at"
  },
  {
    "startTime": "00:24:03",
    "text": "the per second. I will cap myself at 2 megabits per second. And next slide, And additionally, this is not something that we necessarily think is strictly required all the time, but we thought it'd be interesting to, experiment with is that the also instructs the video CDN to apply a transport layer adaptation. So the the video CDN server will also cap its max send rate to 2.5 megabits per second. So in this case, we have both a application layer adaptation and a transport layer adaptation. Do we want to give Lars? I assume this is a clarifying question? As long as I get, Mozilla's clarifying question, I probably would notice if I had draft, but it didn't. So I'm gonna ask, is the stuff in blue encrypted, or is it clear text? Yes. So the, from the Facebook app to the mass proxy server, that's a what's being sent there is a capsule, an HTTP capsule. So the Facebook app and the mass proxy server have an cryptographic context from the end to end quick connection. And so one is able to read that except for those 2 parties. So, yeah, the the client in this case is the only one that has the all of the cryptographic context involved Tommy? These had better be questions for clarification. Absolutely. So the clarification here, when you're communicating like, immediate rate in the capsule is that One value that's bidirectional, is it able to communicate different things, wanna understand, like, when we're reflecting up to the Facebook server, is it potentially different than what you're limiting yourself to it on the client. That's a good question. For the purposes of this proof of concept, the what's in that signal is somewhat, simple, and we And we imagine that if we did this for real, information could be more complicated and more nuanced based on like what"
  },
  {
    "startTime": "00:26:00",
    "text": "network requires at any given time. In this case, the they're essentially the same. And then, well, the the send rate is a little bit higher than the bit rate of the media because just because of, like, how the media is often encoded, we often request a much lower bit rate than what the transport can actually provide. John. John, I got it fastly. It's sorry. I'm I'm gonna ask Could you repeat this? Because I'm a little bit confused because your picture is a little bit confusing. When you say Facebook app, you mean the client. Correct? Yes. Okay. The media rate of 2.5 megabits per second is going from the app to the mask, proxy. What is the cent rate, max cent rate, there of 2.5 megabits per second. Is that actually something going on the wire, or is that Okay. So the way this literally works is The mass proxy server sends that capsule says 2.5 megabits per second. The Facebook app sees that is able to cap its video bit rate, it's going to request And then it also Facebook app says, hey, Facebook video CNN server, please set your max pacing to 2.5 megabits per second. And that's the text up there on top of the blue Yes. That's that that blue is my my attempt to say, like, look, I've done something to this arrow. And I should have I Yes. should use uni direction arrows here. That's Yeah. We're getting a live review of the slides from John. Thank you, Jonas. Just trying to understand. Thank happening. you. Yes. that that is what's So we have 2 So the key point is that there's 2 adaptations. We have an application level adaptation and a transport level adaptation. Okay. It's at Okay. We've got another one. 1000. Sorry. So Jonathan Noyl. Jonathan Noyl. So I thought I understood, but now I think I don't. I bought you, Donna. How how does the client No. This media rate."
  },
  {
    "startTime": "00:28:02",
    "text": "Is it trying to, like, self discover it from the network, or is it is it explicit? So the mask server, in this case, is literally sending an HTTP capsule It's it. So it knows it. So we're assuming that the the client has like a fiber connection to the proxy server? No. No. No. No. So the client made a mask connection. To that server voluntarily. That mass connection is going over some medium, and that's In in this case, it's it's going over a an RF medium. This is connecting to a literal packet core. So the so we're assuming that The client knows the limit of the RF medium. No. No. No. No. Is that that limit is emergent from the network. And the mass proxy server is sending it. Maybe I can just step in a sec. Yeah. I wanna make it very clear. People keep seeming to miss where this number 2.5 is coming from. Can 100% elicit who creates the 2.5? Yes. you The the the the the these 2.5 is coming from a a device in the Mac the network in the packet core. This is literally in a packet core. And it is sending it to the client. So Okay. The the arrow is going both ways is confusing. The arrow is going both ways, and that's confusing. But, but, but, but, but, but, but, Yes. So the the the the blue box is coming from the little thingy, the little squiggly thingy in the middle that says Packet Core proxy mask server. And then it is heading towards the Facebook app. Okay. So, hopefully, that is now clear Carry on. Yes. Okay. Next slide. Okay. Now I have an even more complicated picture. So I don't think this is going to clarify anything, but this is the actual the actual setup. So this is mostly to reiterate the point that we had a literal packet core with literal RF antennas and stuff. Like, it's literally it it's a thing. So and just to make it a little bit clear, The red line here is the normal path. And normal path here goes to a the a shaper. So there is a shaper that is configured"
  },
  {
    "startTime": "00:30:00",
    "text": "as a operator would often configure it, and so that is normal. And so we have We were able to run tests where we say, For this fixed video playback, video playlist, go through a network shaper, And then then repeat it and go through our self adaptation instead, which bypasses the shaper. So in the red line, we have video playback going through a shaper. And in the blue line, we have no shaper, just self adaptation. And then there's lots of other boxes, and that's because, you know, packet cores are complicated. Blaine 3 GPP. And, then, yes, there's also egresses to the real internet. And hits the real face, meta CDN. So this is this is the the lab set up. Next slide. Okay. So result let's get to the results before we get to the results I think there's a couple things I want to say, which is This repeated testing used a fixed, playlist we have the ability to, basically, for the real app a fixed video playlist that we repeatedly test, just to eliminate any sort of problems from having different videos, and we're we're comparing shaping at a fixed bit rate and this this shaping configuration is indeed a shaper. So like Marcus said, this is not a policeer. This is something that building, a queue and we think it's a real it's a realistic, representation of what operators actually do. And the self adaptation has 2 ad adaptations. 1 is the application 1, which is capping quality, and the other one is the maxend rate, which we've, talked about a little bit. And the big TLDR, if you don't get anything from these results, is that we were we are able to achieve a better video experience with similar network tonnage or data use image. So for almost identical amounts of data usage, the self out of patient has a better video experience. Next slide. Okay. And now we have to talk about quality because you're, I mean, a big bull claim about, why that it's a better user experience. So"
  },
  {
    "startTime": "00:32:01",
    "text": "the numbers that you're going to see, the first one is one that's called the video multi method assessment function or v math. And this is basically just a number that represents, relative video quality. And then the second we're gonna get into is stalls. This is much simpler. This is how much time there was a spinner on the screen, basically. So a couple things for people that aren't familiar with video. Is that One thing that's important to know is that higher peak quality is less important then consistency of quality you're playing back a video. And so it's kinda makes sense. We're just like, you know, you're not really pixel peeping when you're watching video on your phone. So, like, having a moment of, like, Oh my gosh. This is, you know, of of a moment of 4 k is a lot less important than, like, you know, keeping that video quality consistent and not dipping down into like, potato quality. And at least the next point, which is that lower qualities are very damaging to user experience. So it's very frustrating when you're watching a video and then suddenly it dips to, like, 2:40 p and you can't really tell what's going on. That's and so that lower quality is going to make people much more frustrated than getting some peak quality. And then the last point is that can't stress this enough that outlier experience is extremely important, both in aggregate across populations, but within also within a a single user session. If 1% of the time you're getting a very bad quality experience, That's still really bad. 2%. That's still really bad. Like, we want to avoid that, and users really do not like this kind of thing because users are us. We are So if you think about it, like, if you ever get that kind of experience, you're much less likely to have a good time. Next slide. Okay. So now we're finally gonna get to the data. So this first one, this is looks a little bit scary if you've never seen, a CDF before. But, CDF is basically a way to visualize a distribution via a percentiles, And so what this is a CDF of VMF, which, as we said before, is about video quality. And so the way to read this is that on y axis, we have percentiles. And on the x axis, we have the actual video quality"
  },
  {
    "startTime": "00:34:04",
    "text": "values. And so the red line is the 1 is the represents the network shaper, and then the blue line represents the self added patient. So a couple quick key points on this one is that I've drawn a vertical arrow at vmaaf equals 80%. And this is accepted generally as the threshold of annoyance. So things below this you're getting an annoying video quality experience. And so the key thing to take away from this is that the points, the percentiles of annoyance are very different. So for the shaper, you have about 36% of the distribution falls below that annoyance threshold. Whereas with the self adaptation, we have only about 7% is is below that threshold. So you have a lot more. The way to think about this is that there's a lot more people that are getting an annoying experience And so so there's more nuance on the right side of that distribution, which talk about it. People are really curious, but for now, let's move on to the next slide. Okay. So getting away from the CDF, let's This is just a classical histogram that's heavily annotated. So let's let's talk about it. So Like I said, VMAF has the sort of distinctions of where they fall in terms of what's what kind of user experience it is. And so we have 3 categories here, which unacceptable, annoying, and acceptable. And annoying, like I said, anything below 80, and unacceptable, that's that's really quite bad. So, like, this is truly unacceptable where it's, like, you can't really tell what's going on in the video anymore. You're not having a good time. And so, again, we have a comparison here between the shaper and the self adaptation. And, starting out the acceptable bucket, we see that with shaping 62.6 percent of the samples fell in the acceptable it, whereas with self adaptation, 93.8%. In that acceptable bucket. And some something else that you might note about this is actually the red so that the shaper has more samples at the highest quality. So at Bmf, higher than 90 and something that is is"
  },
  {
    "startTime": "00:36:00",
    "text": "interesting is that this is good for us. Like, having the blue having fewer of those doesn't matter. Like, having the majority of things in that bucket is more important than having a few that are above 90. So then looking at annoying, there's a really steep drop off, with the the with the shaper versus self adaptation. So with the shaper, we still have 35.4% of samples having annoying, annoying experience. Whereas with the shaper, we've gotten all the way down to 6 point percent, which is approaching what you might think of as the tail of the distribution. And then finally, for unacceptable, shaper still has 2%. And, again, 2% is unacceptably high. It's unacceptable for experience, but also that percentage is unacceptable. Whereas self annotation, we have 0%. There wasn't there aren't any samples that are falling into that. Unacceptable bucket. And and know, at the bottom there, if anyone's wondering, like, oh, did you just use more data? Any inch cheating? Like, Actually, the shaper here is using slightly more data. Than self adaptation. And so probably, I anticipate we might come back to this slide, but this is, Kind of the way to really visualize this and see the differences in between self adaptation and the and the shaper. Next slide. Okay. So what does it mean? Yes. John, do you have a clarifying question, or do you want to, okay, nitpicking data later? Okay. So, what does it mean? I can't stress this enough. A 2% of sessions. There's still a lot of sessions. So you might see like, oh, the shaper in that bucket, it's only 2%. But, like, 2% is really important. Like, If 2% of your experience was unacceptable, like, that is an, like, unacceptable. And so being able to avoid that is really powerful. The overall distributions, I think the shape of them is really important to note that that that distribution of that self adaptation is much tighter. There's the the band of experience that you're getting is a is much smaller. And so that means, like, a user experience level, you're getting a lot less ping ponging between qualities and between"
  },
  {
    "startTime": "00:38:01",
    "text": "And that means that, like, we have better consistency, which we know means a better experience. The tonnage was the same. And what that means is that the self adaptation was able to more judiciously use its data and used it where it was mattering most to user experience. Now another thing that people can say is that, oh, you could just shape. You could you could fine tune the shaper in absolutely true. Like, you can spend a lot of time focusing on a given application with a given network shaper and, like, fine tune it to make sure it's the very best. And in fact, operators often do this. But the problem is, like, Applications are a moving target. Applications change faster than networks do. And, also, it very difficult to do this for every application. If there's a new application that comes online, is totally different from a previous one, of that tuning that the shaper does gets thrown out the window. And and and and the end of the day, the network does context to be able to make those decisions as well as it can. All it has is the network. Next slide. Okay. So this is going back to a CDF, but this one's much easier to explain. Because this is just stall duration. This is a very sim simple metric. Basically, if you're playing the video and you see a little spinner, that's stall duration, then the count the amount of time that the spinner is up, obviously very frustrating. And so what we have on the y axis here is, again, percentiles. And then the x axis is the duration of stalls for the session. And this this chart based I mean, it it basically kinda speaks for itself, but what we see is that with self adaptation, There is some stalling, but it drops off very, very quickly. So at one second of stalling, we're already above the 90th percentile. So ninety 94% of sessions have have less than one second of one second of stalling or less, whereas the shaper, we have this much more gradual shape, going really quite deep into the duration stalls so much so that to get to the 90th percentile, the 90th percentile is about around 5 seconds of stalling, which is it's quite a lot of stalling, like, you know, and installing just like quality"
  },
  {
    "startTime": "00:40:01",
    "text": "is another really key important thing for user experience of video because obviously, like, you're watching a video and it stalls, like, that's super annoying. Alan. Do you have a clarifying point? Clarify this one Clarifying question, Alan from Dalmeda. What was the duration of the videos? So, like, 5 seconds of stalling, but what is it relative to? This is relative to, So a little bit complicated, but basically, so the This this okay. Abhishek, you wanna try to answer. Was involved in the, trial setup. So Yeah. So, there were 20 videos. Each one of them played for 10 second and then swiped away. Yep. Yep. And so each video session was 200 seconds. And then there was a pause, then another video session, and another video session, and so on and so Yeah. And the stall duration is per session. Any other clarifying questions about the the stalls? Okay. And yeah. So, anyway and, again, I wanna reiterate the tonne the tonneage or network usage here is very, very, very similar. So this not cheating, but it's by using more data. Next slide. Okay. So takeaways. I think There's kind of 2 axes of the takeaways here. One is that Could we actually do this? Could we build a thing that has some of the properties going pro and do it in a real video application and in a real packet core. And use real HTTP 33 playback. And the answer is unequivocally, yes. We were able to do this. And it was also not particularly hard, like, building this into the Facebook app from a application developer perspective was not very difficult. And it's also feasible to put this in a real packet core. And we've we've that this should be feasible to do in other similar network deployments especially since, as Marcus talked about,"
  },
  {
    "startTime": "00:42:02",
    "text": "deploying shapers is also not easy. Like, so that is also really challenging. So this is not any more challenging than that kind of thing. And then from the data, we see that the other access here is that There are tangible benefits and user experience from this approach of self adaptation versus using a network level shaper. And that we can also do both application level adaptation transport level adaptation or or both. So this test use both, but there might be some cases where only an application level, at a patient makes sense where you don't have to do this this funny thing where you set a max pacing. Right? Finally, the lab results here, while these are lab results and was a very realistic lab reflects our real world experience with self adaptation. We can speak to that. I know other content providers can speak speak to that. And what I mean by that is that we have seen in real networks where we're able to work with operators to remove shaping in favor of self adaptation, because And we we do that be we spend the time to do that it has a a very tangible effect on real world experience of end users. And that is all I have. So I do have, one more clarifying question. So that that that that was this all conducted in in the lab? In a in, like, a faraday cage, or was it Were all where the radio conditions varying? And Obviously, you wanna answer that, but we can, go back to the There's there is a there is shielding, but here, go ahead. Yeah. The radio conditions were kept constant. The, the only difference in the 2 are, the blue curve and the red curve was one was going through a network based shaping at the back core. And the other one was going through the proxy, which was explicitly signaling the limit as as indicated in max block diagrams earlier. Okay. Mean, that's good. Look, interesting data, but I would expect a drive test would be more informative."
  },
  {
    "startTime": "00:44:01",
    "text": "Right. the queue after West. that's And that that kinda why I said, like We're gonna close Just, you know, but And and keep these quick. We're a little already a little bit over time. So keep going. keep them keep them brave, but it's good to have questions. That's why I said, like, while this these are lab results, we also have production data that we couldn't exactly share that broadly reflects the same trend. Is that when you do this in real mobile networks, you see very similar results. Right. Thanks. Mike Bishop Akamai. I just want to clarify, is the use of approx see here A necessary component What was that? Mike, we can't quite hear you. Alright. Alan asked if I've considered being short Not really. So is the use of a proxy here just for the experiment set up and like, ease, ease of proof of concept, or is that actually a core part of doing this in any way. It is for the ease of experimentation because Ericsson had something like that available and so did we were able to integrate with that as well. We don't we I should reiterate that we are not solutionizing here. This is something that While it has similar properties, we do not necessarily think is the form of the final solution. It just has similar properties and Thank you. So the word proxy does not need to show up in the final thing. Jenna Aengar, Fastly. Is a couple of points. 1st, you mentioned that these are shapers, not police. The prevalence of police or shapers depends on the region in the world. Places where equipment is more expensive. Police are cheaper to purchase because Is this a clarifying question? Take a seat. There's one. There's one. Because we love you, we'll give you a bonus clarifying question. I appreciate that. I didn't know this was just clarifying US. It's my fault. The,"
  },
  {
    "startTime": "00:46:00",
    "text": "Did you do experiments with multiple flows instead of just one? There are multiple flows in this. How many? It varied usually from, like, 2 to 3. Okay. That's basically one. Thanks. Jonna has asserted that one is equal to 3 show. left into the As a non clarifying question. That West Hertica. I assigned. Did you try and compare, like, different bit rates. One of the things I'd worry about, right, is that you're optimizing for, I mean, the whole technique is optimizing for the the people that are willing to not pay as much. If I want, like, maximum bit rate, I expect the quality drops. I'm wondering if it did you compare, like, 1.5 and 3, for example, to see whether the quality curves you know, potentially got worse because the equipment and the multiple streams were actually affecting the higher quality better. So we did run experiments with higher bit rates, but we found that the The results were not like, when once you have higher bit rates of video, at least for this application, and this will depend on the patient like that. You get diminishing returns pretty rapidly. So while you can move the curve more to the right, you you have different trade offs that happen. So but anyway, the the the short answer is yes. We you can we can run those experiments, but for this particular application, it wasn't super relevant. Alright. Thanks, Matt. We're gonna throw it to Brian now. Okay. Jump in the queue, Brian. Do you wanna manage slides? Should we? I can manage slides. Right. How how are my levels? Do I need to eat the mic more? No. You're good. Okay. Cool. Do I have to I mean, I just said I can manage slides, but you have to throw it to me. Right? You you require have to ask for it. Ask."
  },
  {
    "startTime": "00:48:04",
    "text": "You know what? You do it. I knew that was coming. Yeah. Okay. Yeah. I always say, no, I don't need to do the training. I know how this thing works. Minute changes since the last time. So hi. I'm Brian Dramel, Skone enthusiasts. Seriously, I'm probably gonna make some stones after this that the the first chair slide looks pretty yummy. Here to point out that we have a problem that we Okay. Thanks, Chris. But, yeah, I'll just I'll just do things this way. So I have a problem that we think we can solve, by sprinkling some DPI on it. And this feels like we've probably been here before because DPI is no longer a a reasonable thing that you can talk about deploying in the internet in, even the teens. Certainly not in the twenties. And I think a lot of people have looked at this and said, well, this feels kind of like plots haven't haven't we been here before? Didn't we do this thing like 8 years ago? And yes, for those of you who were there, it was 8 years ago. And I think that, you know, spoiler alert the answer to that question is Next slide. Not really. Yeah, my I I felt old when I realized it too. So, since it was 8 years ago, let's actually talk about what plus was what we learned from it. Next slide. Because as we were preparing these, I realized some of the people in the room might not actually remember this. So, 8 years ago plus for the pathway or UDP substrate, also known as spud, which I forget what the original x the the expansion of that was. It was so long ago, was a basically an attempt to address this problem of we need to encrypt the transport in order to make it work, right? We knew this with quick."
  },
  {
    "startTime": "00:50:02",
    "text": "With the, hey, we have all of this random stuff in the, in the network. That we've been doing DPI for because one, it worked and 2 were kind of lazy. Wanted to figure out how we could figure out how to do a generalized wire image for these sort of things. Right? Like, so the thought of things where you have an application where the implicit cooperation that you have between things on the on the path and the endpoints where that cooperation might be adversarial cooperation we wanted to replace that with an explicit protocol, for doing these things. That would be sort of like this, you know, this layer to Jonathan Olin's isn't this a layer violation we're basically trying to push a new later into the stack. Called the Pathlier. You can go read all of the minutes and all of the documents. There's research paper about this where we built it and and showed that it worked. That's what these this these pictures are are from. But as a generalized approach to solving this problem, this bot did not go very well. At the same meeting. So this was, I think, 2016 in Berlin. So, okay, less than 8 years ago because that was in the summer. We chose quick as the future wire image for L4. I don't think we explicitly realize that that what we were doing at time, but basically we said, you know, the future of transport is this. It's gonna look like this on the wire. And the design choice that we made there in the charter was that we wanted that to be explicitly minimal. Right? Like, so we're going to encrypt all the things. What we did here is we basically decided that all of these passing link questions we're going to remain unanswered. And that's why 8 years later, are here today talking about this very particular problem. So what did we learn? Too long didn't read, go read a couple of long documents. Basically everything in RFC 85"
  },
  {
    "startTime": "00:52:01",
    "text": "FDA fell out of this work. Half of RFC 9217, ARC 8558 is the path signaling, passing away in the internet. I forget the actual title of that, Ted was the editor of 17 is open questions and path that we're networking, from Panergy. Which I am the author of. I think the 2 most important things that we learned here most important to, to this effort are, are one that, like, building a generalized approach that would enable complete signal replace for everything that the the path can know about everything between the endpoints in the pre encrypted world, this seems like good engineering, right? Like, we're all We're all engineers here. We all say, oh, why would we solve specific problem when with one little tiny tweak, we can solve the general problem forever. And that turns out to be fairly bad policy because you get ample room for scope creep into dystopia. Remember, one of the things that stuck with me in the the the plus BAF was, why isn't this a thing that would allow a adversarial provider to require somebody to put proof of age on a packet. Which is, you know, absolutely not the intent, but you built a generalized tool. The generalized tool can be used in ways don't necessarily intent. The other thing that was like a sort of a big Harry question here was Yeah. If you have an advisory side channel, so you have this thing that's some annotation on it, on an network stream or on a packet or a set of packets. That's right next to an encrypted channel that essentially enables the endpoints to collude that reduces trustworthiness, right? Why should I believe what you're saying about what's on packet, or why should I believe what you're saying about the capabilities of the network, if there's already a back channel that I can watch you collude over Right? Like, so that the the the the trust model is is is missing here. So how do we turn this into practical guidance for this effort."
  },
  {
    "startTime": "00:54:06",
    "text": "So I'd say the one thing that we learned, and this is this is you know, I'll quote from RRC 8558 and we'll actually read the slide. Implicit signal should be avoided. Should be replaced with an explicit signal only when the signals originator intended to be used by a network on the path Right? So generalized approaches here turn into they expand very rapidly because of the principle that your actual API the actual interface that you're providing is what a competent reverse engineer can discover about your And on the internet, there's a lot of reverse engineers. So In complex environments, these unintended consequences scale will be additional features, which is a really good reason to be as minimal as possible in, in building approaches like this. The other thing is the only way to manage the trust model here is to make sure. That signaling participants can are completely aligned with control points, right, that, like, you don't have sort of something off besides saying, Hey, it would be nice if you would send it rate x. If if there's no actual penalty for not doing so. Right? Like, so another, another way to look at this is that only credible threats of network violence will be believed in active active on. Right? Like, so a system like this, we're talking about Skoned, specifically, is only going to work if the police are, like, the reason that we're looking at police is because police are is that credible threat. Of, of, of network violence. Advisory signaling turns into a spiral of game theory and, and nobody wants that, especially at 1:25 in the morning. So I think a question is to keep in mind as we go into the discussion, is is do we believe that Skosn has these habits? And if we don't, how can we make it do so? And that's all I have. Thanks, Brian. Clarifying planes. The discussions."
  },
  {
    "startTime": "00:56:01",
    "text": "Right. Stop following the queues now. The e one with just general discussion. Right? You know, Yeah. So to be clear, we're we're open to general discussion now, not just clarifying questions. So Come on. Jump back, Shauna. I can't change spots huge me. Jonathan. Hi. Oh, sorry. Go over there. Thanks. John from Hoyland Cloudflare. I'm I'm still confused as to How? Assuming that the client has not got a direct connection to your, Day Center, surely the place that needs to add this data has to be the Lowest bandwidth hop. So it's not like, oh, we can just add this information because we know it at point a, it's some random point on the path needs to be able to add this to the packet. Thank you. Okay. Let let me let me try and just answer this directly from Florence. Oh, and so Come on, correct me if I got this wrong, is that in the cases we're talking about here, the lowest bandwidth place Is the police or or shaper? So it's not a network link. It is a box is deliberately limiting the bandwidth of something. Right? And it's at that that would tell you that would communicate out the number that it believes it's limiting to, the 2.5 in the sample or whatever. So it's it doesn't that 2.5 represents What that box is willing to give you for policy reasons not the limit of what's network links are capable of doing. And I'm not I'm not attributing any judgment value judgment to whether that's a good thing or not. I'm just saying that's my understanding of what's going somebody corrected me if I got that process. So my question is more way"
  },
  {
    "startTime": "00:58:03",
    "text": "How can we be sure that there's only one such box in the connection? Because Lots of networks have them. So that sounds like a a good question. And one that working grid might, might, might, might, box Yes. Exactly. And in this case, we're just saying there's at least one that we are interested in solving So it saying that there could be 10,000 boxes is strictly relevant because as long as we get that one box, would make things better. Only make things better if that one box is both the lowest and you have an encrypted connection to And I'm saying that that's the saying that's the case today. case. I'm Okay. So 10. Denver. Dan Ruther. I wanna clarify some of the things that have been presented here. First of all, it's not about proliferating shaping. It's actually getting rid of shaping. We cannot identify, video in particular ABR. Accurately. Because, the the the the flows are usually bundled are multiplex, and it actually has impact on the user experience And so using shaping, it actually is in in a, adapt, and, and, DPI. It actually is a very blunt tool to really try to identify, you know, ABR flows that can, adapt themselves. The other thing is that it's not about shaping or restricting on an applicationborough application base. It's actually about, identifying specifically ABR flows irrespective of which applications are are are actually, creating these ABR flows. And, and we we re we think we really have a problem to be solved. We needed a solution like yesterday. And it's it's this thing actually is done in conjunction with"
  },
  {
    "startTime": "01:00:03",
    "text": "both the coordination or or or with the consent from from the user by the fact they they they they actually chose a particular subscription that has certain limitations due to the budget conscious options that they made. So it's it it really something that, that we we need to address. I just wanted to clarify some of the things that I saw on the chat about you know, shaping and not shaping, and should it be good, should it be bad, It it's not about that. And and also if we could identify other types of a traffic would be great because treating, background traffic, for instance, you know, and put it to get the right scheduler would also help, but that's that's not the intent. The intent is actually to be able to for the application to sing to to be signaled that they should limit their, their rate. It's not about generic video. It's about ABR. Thank you. And I'll ask people to be brief given the list has scrolled off the screen. Janine, I'll be quick. The just so Jonathan's point, a a very specific point, and then a more general one. I think it's a relevant question. We should consider what happens, for example, if yours, Conpro, device, actually has a higher bandwidth than than the bottleneck itself. So just competitors saying, hey, it's 2.5 megabits per second, and the sender goes I'm actually getting only one right now, but that sounds like an upgrade. So I'm gonna take it. And what happens there is something worth considering. Generally, I wanna note that There is some complexity which the presentations have highlighted here. And I think it's worth considering those things later. I'm not saying that that stops us from doing the work. But, the network itself has some complex that goes into the network in understanding how to distribute bandwidth that it has. Among a lot of flows when there are a lot of flows. That's Just a piece to think about, there's some complexity at the endpoints as well."
  },
  {
    "startTime": "01:02:03",
    "text": "None of that's unsolvable, absolutely engineerable, to your questions, I would say that is there a problem to be solved? I think there is I think there's an important distinction there. We should agree on the problem to be solved. You might end up having people thinking that there are different things that we are looking to solve here. I don't know if you understand the problem well enough may on that. I'm definitely interested in doing the work. So I'm going to, agree with, Jonah from a slightly different angle, and identify what I think one of the areas of complexity is here is that we have sort of 2 just just looking at the conversation so far, It seems that we have sort of 2, I'll call them traditions. Of of building networks and sort of network cooperative rations. We have sort of the the radio side of things, which for a very, very long time has been very used to the ability to say this traffic has properties x. So I am going to give it treatment. Why? Right? Like, so the whole architecture is based around sensing and reacting. And on the other hand, we have the encrypted end to end, right, like reestablishing the engineering principle through crypto, which we've done with with with with with with with QUIC, which is basically saying that inspection is no longer possible. Right? Like, so think we the way that people frame the problem is, oh, we need to figure out what this traffic is. In order to assign it to a bucket. And, unfortunately, for packet treatment, you kind of do need to do that. I think one of the biggest engineering problems to solve is, is looking at this as an impedance matching problem, right, looking at it as there's information that the endpoints have about the traffic that they can volunteer to the network that will make it"
  },
  {
    "startTime": "01:04:00",
    "text": "work better in this very particular case, grace, Is there a problem to be solved Yes. Do we understand that problem enough to engineer a solution? Not yet. Do we understand that the problem is probably has an engineerable solution, I believe, yes. And Yes. I am interested to help do this work. Thank you. Thanks. Good morning. I won this is, like, so bizarre. I wonder when I had my breakfast scone this morning to someone slip an edible into it or something? Like, this is really trippy. I can't believe we're having this conversation yet again, and I was at the center of all of the peer to peer rate shaping, throttling back in the day, which, of course, precipitated, you know, net neutrality as we know it today. I do think it's a good objective to get rid of throttling and shaping That's super, and anything that the IETF can do to help their That's great. I would note that there are some other mechanisms, one is regulatory action, appears to be imminent in the United States that would, you know, seemingly bar any kind of shaping. You could also add capacity your network, that's always helpful. I understand. And you can also not sell what you can't deliver. I think that's another one of course, if there's something else that we can do here, to help, I think that's great. The key is to get rid of this sort of, practice. Thanks. David's good. Feel like too. I figured they'd forecast you David's Kenazi. Oh, really the mic here. David Scanazi encrypting all the things enthusiast So I think first to respond to Jason's point, I think. That would be an ideal world to live in. Wouldn't that be nice? But I don't think it matches"
  },
  {
    "startTime": "01:06:00",
    "text": "our reality. Maybe you you need to share the edibles with the class. But moth more specifically here, I think, this is an instance of the ATF ensuring our job security for a while longer because this all worked quite well with TCP because you could have the middle box terminate the TCP and then turn condition control to flow to get the properties it wanted. And then, you know, quick, you can't do that. And, the In terms of the problem to be solved, I think We might have multiple problems. And the hard part here will be to agree on exactly which one, the problem to be solved in my view is that right now, like, The one I'm involved with is YouTube that has agreements with some network operators. Where if the client is nice enough to reduce their, streaming, quality. Then, you know, you can get 0 rating. Again, we can talk about whether that's a good idea or not, but That's the world we live in. And as an engineer, as we build solutions for for these things. And so making that better by having an explicit thing that the client can opt in. For me, this is a hard requirement for this, that the client ops in as opposed to the network and posing it, seems like a much, much better solution than the world we have. So to go back to the questions, really think there is a problem to be solved. Think we could potentially agree on it. I think we do understand it well enough. We can We'll have to refine that a bit more, but Like, The the presentation about using mask for this seems like one plausible way. But there are many other ways. And I'll say I'm definitely interested and happy to help with the work. Ted Hardy. I wanted to to go back to the the very basic habits of good explicit signal design, because I think this is a point that Brian was trying to make"
  },
  {
    "startTime": "01:08:02",
    "text": "and, maybe got a little bit lost in the part of the conversation. And that is, 1, you're not trying to do something generalized. You set up a signal that tells one specific thing about the network conditions people who care. If you think about ECN as a signal design, it's a very good signal design because there's no incentive to fake it. And it goes in the correct direction. And a signal designed like that can actually improve the situation for the network and for the application because it tells you in advance about a situation that helps you manage, the relationship you have as a as a client to the the bearer that you're using to reach the rest of the network. Okay. Think having gone through the spin bit, exercise in quick. This particular group is very good at examining this the signals that are being sent and looking for things that might be side channel attacks. Or might be other issues which arise from a particular signal. And I think one of the reasons I'm interested in the work is sure that those eyes are on something like this. I think the the mask based proxy demonstrate that this is possible if you're rich enough to have a box in everybody's network. And if you're rich enough to have the relationships with the the carriers. We're asking ourselves whether this is worth doing for an interoperable protocol as opposed to side side agreements. And I think Again, because of that signaling question, it is worth doing. But I think we have to be careful not to presume we know what the architecture is. This is an engineering exercise where we know what we're trying to optimize. And we know that we're trying to make sure that the signal that we're using to optimizing is flowing in the right direction and gives only the minimal data needed to accomplish the task. That's what explicit signals are meant to do. And I think, I'm willing to help. Thanks. Alright. Tommy Polyapple, So So"
  },
  {
    "startTime": "01:10:03",
    "text": "Thank thank you for the segue, Ted. The first thing I was gonna come up and say is you know, in addition to the resources that Brian pointed out, And do you want point people to a IV RFC, RFC 9419, which which which Ted is one of the authors on, so you should Read it. It's good advice, and I think it's very useful when we're looking at this. It's Considerations on application network collaboration using past signals. It has a list of principles in there. I just wanted, like, you know, enumerate some of them. Right? Like, intentional distribution, controlling the distribution of this information, Protecting and authenticating that information minimizing that information, limiting the impact of that information and having a minimum set of entities involved. With that signaling. So whatever solution we have, let's, you know, review it against those principles, I think that will help Get us to a place that will be have, hopefully, fewer foot guns. With regards to the overall direction, I think this is good piece of work to do, I do like the use of encrypted quick based proxies. For what we see here. There are ways we can continue to optimize it. There's stuff we're doing in mask, ground forwarding. I think would apply very well. I think this is an interesting opportunity. To add things like L4S signaling at this bottleneck. Link, in addition to some of these other explicit capsules, I think it kinda gets to Jason's point that Yes. We don't want More throttling, but we can use this type of mechanism to be something like L4S, maybe even slightly richer, but do that in a way that is very generic and is not something that is just favoring one particular proprietary agreement. It's also potentially related to some work that we've taken up recently in discovery if we need to have generic interoperable ways to learn about these capabilities from networks."
  },
  {
    "startTime": "01:12:03",
    "text": "So I think, just one comment overall is I think because of all of these other existing building blocks, these Lego pieces we've put in all of these other groups, It's possible that the new protocol engineering work needed for this is quite minimal. And it's mainly extensions or just putting pieces together in describing the bigger picture in the architecture. Which I think is the positive thing. So Yes. Probably yes, and I'll help. In Sweat, Google. Yeah, I think there are definitely problems to be I mean, an example is for YouTube. Their experience has been that this works really well actually, but is completely unscalable to try to do it with every ISP in the face of the planet. And hence, we only have a few partners the Other comment is I think this could be used for other things. I mean, this comment before, but, like, would love to see this as a mechanism to potentially get rid of people, viewing SNI. And enabling wider deployment of encrypted S and I, because instead of it being just visible on the wire, the SNI equivalent information could be explicitly communicated an encrypted channel to the people that need it. I'm a big fan of that as well. I think we understand enough of I mean, we're gonna have to figure out things as as we go. I do wonder, and this is my personal thought, whether the group is going to focus on quick or quick NTCP? As an individual, I would prefer I mean, I would love to have a solution that works for both, but you know, I would rather have the first deliverable be focused on quick. Because that's where the value is, but I didn't wanna ask that question. Yeah. So on that, on that point, Ian, the the charter very specifically says quick and only quick we, we may be able to reach out to a group if there's enough work to do, but the the charter is quick quick quick quick Alright. That works for me. And, yeah, I think the mass based approach, I haven't come up with anything better."
  },
  {
    "startTime": "01:14:01",
    "text": "Not said that there are other options, but it it seems fine. But, obviously, we have plenty of time to evaluate that. I'm sure we will evaluate it about 14 and, yeah, happy to do the work. Thanks. Martin Zeman, encryption enthusiast enthusiast, and despite my enthusiasm for encrypt in general, I'm not sold on encrypting these bits here. I am not sold on encrypting this information here. I'd like to point out that there's value in keeping things, in the open. As Jonathan said, there's there could be multiple boxes that apply are applying bandwidth limits. So if you have a signal that passes through the network unencrypted, both of these boxes could modify, modify the bits. So that would be that would be of value here. There's also the the privacy part of it. As as soon as we encrypt things, there will be a demand for stuffing more and more things in there. Which might end up having privacy properties that we don't, don't envision when we start working on this Hello. I'm Tom Saffel from YouTube. Won't hear me okay. Just Is it all? Okay. Is this good? Yeah. Let's try this. Alright. I'm Tom. I lead, Hi. I'm, product for the infrastructure team at YouTube. As a couple of my Google colleagues alluded to already, We have actually built something like this, and so I wanted to share a little bit about our learnings and and what's worked well. I'll start by saying what hasn't worked well, which is we built it on a proprietary protocol. And as Ian mentioned, it's hard getting operators to adopt proprietary things. And so we are extremely excited about the idea being turned into a standard. Let's add that this is something that we've been doing since 2018. And it's a project that I've owned since then."
  },
  {
    "startTime": "01:16:01",
    "text": "So what we what we deployed was a mechanism in which an operator can communicate to us what we call a max media rate by the way, the there was 2 slides on this that Ian has uploaded in case people wanna go to the slides. We, an operator can communicate to us a max media rate Kbps. And then what we do is we apply that on API logic, very similar, tourist described it matter. We basically say this will act as a ceiling and format selection. So if the value that's passed to us is 1500, And the 1080p video is encoded at 1600. It's not will not qualify for automatic playback. In return, network operator, does not police our traffic at all. We've been able to run this as an AB experiment, so a fully controlled experiment. I can just give you a a few results here. We saw that the, mean start time for video playback is improved by 8%. Yeah. Frequency of rebuffers by 4% the battery usage per hour is improved by 5%. And that's because, because you can be a much more bursty on the network. So radio can spend more time idle. And, and that was actually with a a a very small increase in video height, so also a small improvement women's, woman's, woman's, woman's, woman's, woman's, woman's, woman's, woman's, woman's, woman's, woman's, woman's, woman's, woman's, woman's, woman's, woman's, woman's, woman's, woman's, woman's, woman's, we saw that the retransmit rate in this case was reduced by 60% and the, client observed throughput was increased by a 100% So, really, we, we do a, a lot at YouTube. We have hundreds of engineers working away trying to make video playback better. And there is almost nothing more effective than access to a faster network. Mobile operators, want to achieve his been said before, a tonnage control. They're trying to limit the amount of traffic on their are fully supportive of their right to do that. Consistent with the commercial products that they sell to their users and how they disclose them, And so from our perspective, mechanism that allows them to achieve that goal of tonnage management, whilst also allowing the full speed of the network to be realized by applications is a win win for everybody."
  },
  {
    "startTime": "01:18:01",
    "text": "So transfer the three questions. I do think there's absolutely a problem to be solved. We know there is. Spend the last 5 years trying to figure out how we get this great principle in place in more places. So I'm very excited about this. We understand it well enough. I'm not sure, but it seems like we're making enough progress. And, yes, on the third one, Google and YouTube are interested in working on Thank you. Which flags right here. So what I was saying, the everyone can check the notes if you said something, have a look at the notes and make sure that the scribes are are doing a good job. If they're not doing a good job, give them more chocolate. Hello, 10 Park from TikTok. I am responsible for, product management for Global Edge Infrastructure for TikTok. And then TikTok is another form of short video. Just like YouTube and, mirror, So I can also test that I can also test the TikTok shape. The traffic shaping is not the most optimal solutions to deliver video more efficiently. Which agreeing with the all the points made by the 1st presenter Marcus, Marcus, TikTok can also attest that shape traffic shaping. Does that always result in best optimal Kogi for the users, And as pointed out by, Matt, 3% of our liar of bad experience is still significant. Of, users. We also believe that if self regulating protocol like scone pro can be standardized, will be very interested in using this protocol and believe that this can help us deliver a video more efficiently. While maintaining good user experience for the users. And finally, TikTok is very much interested in to be part of this work as well. So number 1, yes. 2, yes, and 3, we have enough engineers that will be interested in to be part of this, this work. Thank you. And since you're wearing a newcomer badge, I see. Thank you very much. For being here and bringing us that information."
  },
  {
    "startTime": "01:20:00",
    "text": "Martin Duke Google. Seems to me that the value proposition for clients here is, like, vaguely RSVP ish. Which, you know, whatever the shortcomings of that is a technical solution, like, the the the incentives are, like, I mean, are I seem fairly innocuous. That said, my reflexes to kind of have the same heavy GVs that that Jason expressed, but to me, the way I would state it is, like, The good thing I would be concerned about is the effect on best effort traffic. I think the proponents have made a a quite plausible case that this will actually make things better for best effort traffic because you're reducing the incentives to do kind of clumsy things with heuristics and, like, just rape shaping stuff. But I I I would always want to watch out for setting up situations where we were making it very hard for a video app or any other kind of app to just go in the normal queue and not use the service? WK over there? And, and also the other thing I think one the other thing I'd be sort of concerned about and and, I apologize. Apologize this sort of fud. So I'm a little worried about extensibility. This this particular ABR case sounds pretty good. But if we have this channel, how do we keep it from being used for other things, other sorts of metadata. That that that could be somewhat more, pernicious I don't I don't have a great answer to that, but I think it's something I think we keep it in mind we'll probably be okay, but, I would answer positively the three questions here on on the board. Thanks. Lars, Margaret. So on the buff objectives, the answers are probably yes. Yes. And it looks like it. That said, I'm negative on this thing. And here's why. But operators, are in love with putting in complexity to administer scarcity of bandwidth in the network. They have been not doing this for decades."
  },
  {
    "startTime": "01:22:02",
    "text": "Vendors are very happily selling them the equipment to do that. Know, it tightens the relationship with the operator. And this makes it more acceptable to do this. It's not good for the network in the long run. You're gonna have to put in more bandwidth eventually why bother putting in equipment to administer the scarcity first? It's not helping anybody. Right? Also, who remembers DSL fast path? So I'm I'm looking forward to, getting an offer from my operator to turn on video optimization for my traffic for a small monthly fee, which would make that signal go my way. And if I don't pay, it doesn't. Hi. This is Sanjay Mishra from Verizon. So first, wanna thank to the presenters, Marcus. I think you did a good job in and sort of, just giving out the the basics of the, traffic shaping and the video shaping. And, also, Matt, Thanks for your presentation and sharing your results. And and Brian, you know, laying out some of the the previous, work that you know, you did it with plus and spud. Some of the guidelines. So I think very helpful. On coming back here on the three points, So I think this is a problem certainly looking for a solution. So I think the answer to the first question is really a yes. And, do we understand enough of the to engineer a solution? I think broad brush, what Matt presented. It sounds like you know, has the basic elements. And, from what I heard here, all from other presenters here that more work needs to be done as as Tommy was laying out and and some other folks. So clearly more work needs to be done to make sure that the solution is is engineered in the in the best way. That it can be. So the answer is we don't understand it yet, but I think there's enough basis here to continue the work. So that's yes. And then I'm certainly, I'm happy to, to work with, Matt and others too. To help out with any kind of, you know,"
  },
  {
    "startTime": "01:24:00",
    "text": "trial and field work that's needed. Thanks. Hey. Lucas. How are you? So in respect to if there's a problem to be solved, I I do understand the media throttling case. That is a very specific problem, and I do wonder if there are other problems to be solved, which might relate to the other kinds of signals that might be shared. And I don't wanna focus on that here because I think there's enough of a problem to be solved that this is interesting work. But focusing on what was being done for the media use case, effectively, as some others have said, this is just information that a client or a server that is receiving or sending media already detect and determine So in some respect from what I've seen today, it's just about reducing the delay in obtaining those signals indirectly from the path. So that seems like a net positive because it's not revealing any information to those endpoints that they couldn't already get and doing that in a more structured way, that standard could improve things. And if there's a case where there is no throttling in the network, the network can just indicate that it's infinity and that there's maybe other signals that they could tell us sort of like the stuff that Tommy was saying. But the question I've got is to whom does it signal? In the case we have here, it's it's signaling to say a Facebook app, which might have and and a lower layer access to the operating system, or or the way that it speaks to his mobile network. So I think the success of some of this work is is moderated by, the ability to filter those signals up the stack to applications that would be able to use them. So, for example, a lot of video streaming is driven by JavaScript in web browsers. So to to to what other bodies do it send to answers, like, question 2 and 3, are the people here interested, or or is there a problem that we understand to engineer the solution. I think there's dependencies we might need"
  },
  {
    "startTime": "01:26:03",
    "text": "take on in order to deliver the value that we are discussing here beyond the scope of people who can develop native apps for mobile devices. Yeah. That's it. Chess. Chris and Osceo Carnegie Mellon to answer questions 3. I think the answer is yes. But question 2, I'm not so convinced on I think there's a big scalability problem. I I think heard a bunch of interesting statements from kinda YouTube and Facebook or whatever. And I think at that scale it works. But how does this work on something where I have a device that connected via, like, a a myFi, a portable cellular Wi Fi. Device? What does that signaling look like and who what's that there's obviously a channel there. There can be multiple WiFi device is going through a cellular channel. What does that mean? I don't know that we have the kind of the full scope of of the problem. And I I wonder if the solutions that we've heard so far work well at the scale that they've been tested at, which is a provider with a network, But when you try and generalize that and deploy it much more widely, we don't actually have the model for that. And so this is not necessarily my area, but Let me just ask you a little dig on that. I think the question is, I, I mean, I, I get the, the problem you were talking about there of, like, that type of do you think a working group could do the engineering to figure that out, or is it a basic research problem that's beyond what the IETF should do. I guess that's sort of what we're trying to Yeah. So my problem is I'm not Sure, and we haven't talked about it at all. I didn't hear that. anything to To that, to that, but I think that's a massive gotcha. And there's a lot of Great engineers dedicated to it and so maybe but but I'm not convinced, I guess."
  },
  {
    "startTime": "01:28:00",
    "text": "Bye. Okay. Suhas, from Cisco. Can everyone hear me? Things Yes. We can. Thank you. So I I I think, for the 3 questions for each answer is s s and s, just giving some of my perspective on this one being an expressive signal enthusiast whether it's needed, I think, having an signal in the corporate way, cooperative way would be helpful. For a couple of reasons, one as as presenter showed it's removes the guest work and also operators put putting an explicit signal makes operators, to be more transparent, saying that they're doing something, to your traffic. And I think that that things some accountability there, which which today is, like, more of guest work. And also coming from an interactive video delivery, experience. I think, the similar kinds of problems we also see, in the, conference calls and other things. And the problem is that you're here would, very well apply, even there as well. And, given that more and more media today are being entered encrypted, as as one of the if if the working group takes this task for that, forward. Like, we we need to think about how what kind of information we can put in us that would help, something in the middle box to kind of, make such kind of policy decisions and be more explicit about it. And also being a mock, a media or quick enthusiasts, I think, there are a lot of use cases in the mock that can be applied to here as well and some of the, architecture designs that we are proposing in mock can be directly applied here. One thing I I would want as working group also to think about in future research, how do we take this work when we interact with other standard bot is like what is what should be the way we should get this work done if we want to get some changes done in either packet core or something like Other than that, I think this this is work we need to do, and there's a clearly different problem. And we should be working on it. Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
  },
  {
    "startTime": "01:30:03",
    "text": "Jeff. With my last Hi. My name is Jeff Smith with, T Mobile US. So I'm mayor with this challenge around Pleasers and shapers. And, We've had conversations with multiple content providers around kind of a self regulating solution, kind of what's being proposed here. And based on these conversations and and work we've done with some content providers that I see there's absolute interest here. But the lack of a standardized approach kinda limits the adoption since it requires kind of a one off or a proprietary solution that that the provider may not have the resources to to to contribute to. So from what I see as standardized approach would would be much better. And based on experience with working with various services, would have a wider adoption over a proprietary over the proprietary options we have today. And so with that said, you know, I'm interested in this work and, I think it could, yeah, it could really benefit. So yes to all three. Sorry. Please go ahead. Yeah. So is your name Arizona from Nokia? So I think my answers would be, yes, maybe, maybe. I'm interested here in the, scalability issues because It looks like we have a lot of video flows that have to go through a proxy here. And I'm wondering if the the experiment had had been done have evaluated what how that could be performed with a very large deployment because this might have some serious implications on the costs and I simply wanted to ask the authors if they had some, ideas about that. Thank you."
  },
  {
    "startTime": "01:32:03",
    "text": "Just being, I can just briefly answer that for the authors a little bit here, which is I think that I mean, you you you heard what in from YouTube said at the experience of right now, these shapers are already very expensive. Our police are. Shapers are more expensive to run than police. They're both expensive to run network, and people are running them anyway. I think this is your opinion. And then having something like this would means that you could remove those out of the flows and didn't need to run as many would probably reduce your cost and you're you're running something that's more like a VP, a mask proxy, which is a much cheaper thing to run than either places or shapers. I'm not, I'm not saying any of this is true. I'm trying to say, I think that's the answer. I've heard from the proponents to your Yeah. I I think that this is a fair answer. But the shapers first are already there. And second, might still be required for other type of traffic, which is not this one. So, actually, it's not such a clear question. Okay. Hi, Steven Farrell. So I guess I gotta echo, me tell you what Lara said and what Chris and As you said, so I think the answers to the questions are yesno and seems like it. The reason for the note for number 2 is It this, if you're if the charter text, I think, assumes that there's a way for the the the clients here to authenticate some random box that I'd never heard of before. And I don't understand how that's feasible. Unless you think that there's only YouTube clients and Facebook clients and so on in the world. So there seems to be an Possibly insurmountable problem. In which case, I think the answer to 2 has to be no. So, Steven, would it would it change your your thinking on this if it were not the cryptographic sense backed by a signature from a key that, like, the p the PKI is is is perhaps not what was being thought here, but in the same sense that ICMP authenticates itself, is to say that it proves that it's on the path. By saying that,"
  },
  {
    "startTime": "01:34:00",
    "text": "by providing bits of packets that have been flying past it, for instance. As an example. So I don't see how that would be consistent with the what I read in the the charter tech number 9, Okay. We'll we'll have to get back to that one. Yeah. So so it's it just seems to me that the, you know, the charter tech says the the mechanism should ensure the confidentiality, blah blah blah. Not to find any new security mechanism. I don't just don't see how that's possible from a random client to, on a random network to some box that's just claims it's something. So if that's not possible, then I don't see how the answer to 2 is Can be yes. That indeed be incorrect. That may be overstating the the requirement there. may So, so I think that leads to to, be agreeing with, Chris Nasio and and Laura's in general. Lesid Agol, Coach share of the media operations working group. I want to the questions, I think there probably is a problem here to be solved. I don't know about 2 because it depends on which problem specifically and 3 certainly looks like there are enough people. But I wanted to, echo something that Steven just said, which is the YouTube and Facebook are not actually all the video that versus the internet. And there are whole industries that are running their stuff over internet and their video needs need to be addressed as well. So that really is my long winded circuitous way of getting to Could you please add the MOX working group to your list of conflicts when you schedule next time. Let me apologize right now. I don't know how we did that. Sorry. Tom from YouTube back here. I when I mentioned what we did before, I didn't address kind of any of the policy concerns. And I think people made some interesting points about, like, or why not just make the network faster? From our point of view,"
  },
  {
    "startTime": "01:36:00",
    "text": "are some, like, practical realities that we have to deal with about how operators safe and healthy sell their product. One thing that we do, and I think that any application was a provider would need to do if they were gonna look at this is only to implement if it system where they have principles. So I just wanted to share a few principles that we hold very near and dear to a heart, and we wouldn't use this technology if it wasn't there. One is, transparency to users. So, whatever restriction is being put in place must be clearly communicated buy operators to users. Otherwise, we wouldn't do it. Second one is user choice, which is that users should be able to buy a data plan that isn't subject to any restriction, and the third one is equal treatment. Which is the we would wish to be treated the same as any other video provider. And we would only do this if we knew we were. So I, I do think that the policy questions matter. I don't think they get encoded in the technical design but I think application providers will have to make a choice about whether or not to use this based on the principles that they wanna hold true. Alright. We're we drained the cube, but we're gonna give Marcus a chance to answer some questions here. Because I think a number of the questions that came up, came up she may be able to Daywood. Just briefly. sell Yeah. So just, on Larson's point about willing to complex stuff to, to operators. I mean, sure. It's, it's good to sell boxes. But selling, selling radio capacity and capacity upgrades is like so, so much more profitable, and we would be happy to do that. The the problem is that the the economic reality of operators kind of precludes them from just adding the capacity in that in that rate to to kind of remove the problem So I I think we do have a problem here to solve and, yeah, kind of the money we make from selling a box like this is is nothing compared to to the capacity upgrades, but Yeah."
  },
  {
    "startTime": "01:38:00",
    "text": "We've got time for Dan's gone. Yeah. Dan, why don't we we have a little bit of time if you can be brave. Yeah. Thank you. I put myself back in the queue because I didn't answer the 3 question I jumped in too early. And, second, to clarify, is not a capacity problem for operators. It's giving users choice. Giving subscribers a differentiator in terms of their they're they're options, on what, what, what, to, to purchase or to acquire. And, I mentioned that Yes. We do have a a problem and so yes, yes, And, yes, we're willing to, participate in any way, shape, or form to to get this standardized, because, It's a end to end problem with content providers and operators, and we really need to get it solved. So, look, I'd I'd like to get, So, so, Stephen, and various people have asked the questions that come to the form largely you know, Do we Do we know how will the working group be able to figure out is that an engineering solution to this how you discover where these proxies are we're talking to. And, how how you authenticate to them, roughly speaking. I mean, we know we'd have an encrypted context on what the quick connection set up. But before that, how do you know you set the quick to the right box you wanted to be talking to. So I'd like to open the for just a couple minutes. People who think that they can address that issue and explain not necessarily the solution we'll end up using, but argue that there are solutions that the working group can do in a solvable problem, or that's not solvable problem. Just sort of think about that little problem for a second. Good. So let's open up on that. Thanks. Yeah. And and and, Tom, if you wanna tell us, how you've done it. Your deployments, which, which may may inform things, for instance. I can tell you, but it's all out of Bend, so I don't think it's particularly relevant. Yeah. Yeah. Yeah. Marcus Elon. Yeah. I think I think discovery is is going to be a"
  },
  {
    "startTime": "01:40:03",
    "text": "super important thing to solve here. And I would like to point to some very interesting work that is being proposed in interior that Tommy mentioned as well. Where discovery of proxies, using PDDs is being discussed. And I think Something along those lines would be a very nice way to to facilitate proxy discovery here or discovery of this mechanism. It doesn't have to be a proxy. And the good thing is that it's tied to your specific access network, this type of discovery. So I I think it's definitely something that's solvable it's a party. I I think it's it it's solvable. Our lady of any cast will come and bless we have nothing else, but I also think it's presuming a solution set that we haven't yet established as the right solution set yet. I think the idea that you find a proxy on the network and you go through the proxy using this capsule is a great demonstration of, of the of the fact that this can work but I actually think require you to have that kind of relationship to the, to the network it would be better, and I think it would look much more like ECN. Right, where in TCP, you you've set these bits that say, hey. Hey. There there is congestion here, and I'm notifying you of this congestion so that you can behave in a way that causes you not to hit the congestion in the more decimal way to TCP can hit congestion. In the same way here, if you're saying, look, this there's a shaper on this. There's an explicit shaper notification and you can avoid hitting it the way you would normally hit it by running up against it and doing the 4 k down to 480 jump, if if you pay attention to the signal on the on the the path that you're getting from it. And that's a very different signaling mechanism, but it accomplishes the same thing. So I don't want us to go in presuming this mass based solution and asking whether there's a way to do that"
  },
  {
    "startTime": "01:42:00",
    "text": "because I think the bigger question is, can we send a signal along the path about the characteristics of the path to the endpoint, and we have proof points that it's possible. Thanks. Gemma, anger. I'm actually gonna piggyback on that because this is close to what I gonna say. But that is, I won't distill the question down. So in addition to what Ted said, I'm not gonna repeat that. But, yes, we don't want to think about the mask proxy as the only solution. All you need to look for is a proof that the network element that wants to signal you can also drop your packets. That's what you're looking for. If the network element can write to your packets, That means it can drop your packets, and therefore, it's worth listening to. That's really all you're looking for. And there are various ways of solving that problem. So as long as we understand the question properly, I think we can solve the problem. A new? Anup from Meta. So I'm trying to explain, or clarify some of the questions, That is Is it a random box? So it won't be a random box. So, the box will be box, which is all the capability or information, to to provide an information to client. For example, it should have access to policy, subscriber policy, network policy, it should be able to drop the packets like required. So, for example, in mobile networks, it'll be a packet core, user plane. So gateway for 14 network, UPS for 5 g network. So because it is all the information And right now, shipping is also taking place in the same box. So that should answer the question. Is it a random box? No. It is not random box. Coming about the discovery and authentication. Right now, in 3 g p p. I'm just taking example, mobile network. This box is already authenticated. What happens is when we come to the network or you switch on the phone, you register itself. It's it's the network. And you do that authentication. Right? So in the process, you already authenticated the client this box. So the same mechanism can be raised. So And the discovery part is, Marcus mentioned, once we ex share the"
  },
  {
    "startTime": "01:44:00",
    "text": "like, select the access that which base station you are going to connect to automatically you are going to select the this box also. So we don't have to do additional discovery if you're trying to leverage the same mechanism which is available in the mobile networks for example. Ron? So I I basically came up here to say what Ted said followed by what Anoop said. So endorse both of those. Very quickly, I do wanna reiterate this does seem a lot like the scope here is we're building a new type of ECN. And I think that thinking about the dynamics of ECN, And also the deployment problems we've had with ECN will be very, instructive for for figuring out how to do this, and that actually makes me more optimistic than I was the first time I came up about to Right? Like, this is, the the engineering problem gets more tractable if you look at it that Mike Bishop. I've I feel like we're Some people are getting caught up on that the proof of concept used a proxy Doesn't have to be a proxy. It's anything that is on path and could have dropped your packet just like the ECN markings demonstrate. And we have examples of ways that that already gets communicated in the network, ECN marking is 1, ICMP sending back your packet header to demonstrate that this is the packet that I dropped because it too large or whatever, you could just as easily send back This is the packet that I did not drop but could have. And then if the shaper tells you I am about to start dropping your packets if you exceed this in the spend with threshold. Okay. You can act on that. You cannot act on that just information about what is about to happen to your connection. It's tractable. Matt Torres Meta."
  },
  {
    "startTime": "01:46:03",
    "text": "So, on this point about ECN, etcetera, so I agree that there are a lot of things to learn from ECN, but I wanna make something clear, which is that This is not strictly a congestion problem. So Dan mentioned this, but The thing is, like, this isn't just, like, ECN plus plus. Like, what we also want to know is the there is This is an application level signal right, which is not something that's strictly speaking related to just whether there's congestion right now. So, like, what Dan mentioned is that sometimes the network might not be congested, but there are other things that the network would desire to get out of the application behavior, like data limitation for a subscriber policy reason. And us, as a content endpoint, we don't want to know all those specifics, but we do want to know information that's emergent from the network. That helps us, do this in a way that is better for our application that having a network do it to gear to achieve that second order effect. So Well, yes, there are similarities to ACN. It's not this isn't just a problem. We're like, oh, if we turned on ECN today and sent ECN instead of shaping, that would solve all these problems. It would not solve all these problems. So, you know, we we have a short amount of time. Okay. Just quickly, You have got the the last discussion about discovering and how to authenticate brought up in the answers. There was always just speak of a single proxy. So how many are there? How when are you when do you know that you're done this covering. How many things do you need to talk to? And how do you make sure that you can authenticate with all of those? This is a bunch of questions that come the moment. Could we because you may have more than a single access network, you may have more than single Network Segment, end, I sense there were quite a few assumptions that there will be exactly one thing you are talking to. I'm not sure that this is in our experience Enough."
  },
  {
    "startTime": "01:48:00",
    "text": "But maybe I just missed something here. Again, taking example from mobile network here, So in that context, it'll be one box which will be in the data plane, and that packet core user plane function, P gateway or upF. And if you try to understand, this box is going to connect to multiple base stations. And then base station will be serving multiple users. So for all the users, connect to the this box, that will be only one box in the in the in the process to be selected. And the the discovery is already going to make use of, 3 gbps there is no additional discovery required. And authentication is also going to take take use of the seem three g people procedures. Okay. So hopefully that conversation has helped a few people understand a little bit better, right, I, I, So we'll get the sense that there are people there who have some concerns, but I think it's probably worth moving on to ask answering the question in in in in in the hole. We're gonna put together a poll, we're gonna simply ask, do you think we should be forming a working group on this topic. You will, you will, you will, you will, you will, you will, you will, you will, reach your own conclusions about these questions and how that informs your answer. But please just Give me a second. And look, this this is this is guidance of of how how we should move forward on Yeah. This is not, you know, we haven't had a charter. We haven't reviewed a charter or any of those things. This is not a, you know, this is not the question that'll form the group. We will have another BAF or Time or area on the list to do that. But we do want to get feedback from this room of, you know, if, if you what's, what's our guidance going forward here? Should we go do this, or shouldn't we go do this? So I'm Okay. Should the IETF form a working group on the topic we have discussed today? Yes, no."
  },
  {
    "startTime": "01:50:20",
    "text": "Yeah. Let's get this a little bit more time. So kept kept kept kept So, Look, we'll we'll leave this open for a second longer. But, obviously, what we'd like to hear a little bit more about is, could a few of the people who our nose and maybe put put put particularly if it's topics that haven't already been raised or voiced that you have some concern about, If you're willing to speak about them at the mic of of why or no on on on different topics, we we we we love to know. If it's things that have already been brought up, I I guess we'd probably still like to know, but just very briefly on that. If we get a little bit more feedback of, of, you know, why we have a significant number you are on the no side. So thank you. Mikulevin as nobody's jumping to the queue. I was I was actually not voting. No. But I wasn't clear about this because it's not clear to me yet. Oh, if we need I want to work with the work But if it needs to be done in a new working group or somewhere else in the IETF, let's not care. For sure. But Steve Farrell. So, again, I I think the question to number 2 issue that was discussed already, I was I still, it's, I think it's a blocker for me if you if I look at the charter text that was there. Seems fairly fundamental. I think there was one other point. I think there's some of the discussion, maybe some of the chats there's been some lack of distinction between user and for example, the piece of software that the user is using. I think"
  },
  {
    "startTime": "01:52:03",
    "text": "it would help to, to kind of, be better at clarifying that. But I, I don't think that's a blocking issue, we shouldn't talk about the Facebook client as the user because the person is not the piece of software. Yeah. Chris and Osio, 99%. What Steven just said you know, like, the answer of your your device authenticated to the network and then the application will be able to know all about that seems terrifying to me. I don't understand the security model of how this thing kind of fits together it seems very under explored in that regard and, you know, I still have engineering questions, so that that's The fundamental no. Multipath problem I didn't even bring up yet and, that completely blows my mind. John Pollum, cloud player. Yeah. The the multipath problem seems Like, it's just going to make this completely impossible Okay. If you have let let's say I'm doing multipath quick. I'm sending things on 2 different parts. That doesn't mean the paths are independent parts. Right? So the first hop, for example, might be to the same Wi Fi box. And that might be the ones the tightest bandwidth or they might diverge and then come together before they But then then how does applying the bandwidth restriction Sorry. How does applying the shaping? Work because you're going to double oh, you're going to exceed the limit by twice. Byte by 2. Hey. This is a really deep topic. Let's go figure out the whole multipath problem somewhere else. But but acknowledge it's not a simple problem, and we didn't address it today. Okay. We've got 5 minutes. Go ahead."
  },
  {
    "startTime": "01:54:01",
    "text": "That. Do you have any, do you want any mic time, or are you just like, no. I'm going for lunch. Go ahead. I was thinking about going to the lunch because this this went really well. I have all the answers I need. No. I think I think we had a very good discussion. This is a kind of, like, it was a nonworking group farming boss. So, yeah, I mean, we you can we can think about it. This is about, like, knowing the you should do, is there interest? I think there has been really good interest by both form like mobile or purchase side, content vendor side and vendor vendor of the network. So so that's good, but we have also heard that some issues that we need to deal with, like, the architecture issue or the what kind of security model we should use, what kind of, like, is there any issue with processing and all these things. So operational issues kind of thing. So I think there are more work need to be done. But, I think you chairs have a good idea, like, of the summary. So that's my thinking is, like, let's discuss more on the, maining list, and see, like, where it takes, Do you want me to you something for you? No. specifically ask No. I I I I think that's good. That, that makes sense. So we'll, we'll, we'll move forward going with some more discussion on the mailing list. Make sure that we dig in deeper to a bunch of the issues we're raised, particularly security, the discovery, the multiple sort of enforcement points, some of those issues. We'll clean up some charter on that, and I didn't summarize just for the minutes on the the poll we took, we had 51, yes, 20, no, you know, so so You know, there was, there significant amount of discomfort with the current with the current stuff as it stands. So I think I'd sort of how I'd loosely summarize the situation. And, we'll, we'll work on trying to get some of that nailed down and more specific."
  },
  {
    "startTime": "01:56:00",
    "text": "On the mailing list, and we'll see you all there. So I'd like to also thank everyone for just a very cordial and pleasant, BAF with with good exchange of information. Particularly to all the newcomers Thank you Yes. And, thanks to our scrubs. For what what I'm sure are excellent notes. Be careful what you ask for. Something I think Yeah."
  }
]
