[
  {
    "startTime": "00:00:04",
    "text": "years fantastic all right um I think we can get started uh the the basic agenda here I think is to um one just remind everybody that we're all under kind of ietf uh participation uh roles here note well and all that um and then uh I think the main agenda here what I think we want to spend our time today doing is going through the tip Errata I set up a couple uh interim meetings here so that we have a couple more days and times to go through some of this um and if we need to schedule more we can do that but today I think what we want to do is uh focus on the Errata um Alan has kind of gone through um and and looked at those so I'll have him kind of go take us through the Errata so far that he's looked at and have the proposal so we can hopefully move forward with the resolutions to those um does anybody have any other uh topics that they think we need to cover urgently questions about the approach or okay uh Alan do you want to uh take control of the screen sure um I I don't think I need to do any screen sharing or something um hopefully everything should be online what I'll do"
  },
  {
    "startTime": "00:02:00",
    "text": "is I'll start with the actual errata um and uh go from there that's okay so I'll post a link um to each a rata that we're we're talking about and just see if we have um sort of consensus on that so if you give me a bit for each one so that's the initial Errata we're gonna we can take a look at um if people want I can post links to the commits so if you look at the actual list of commits what I've done is I put the erratic ID in each of the commits which addresses that errata um so go back and forth and verify that each Errata has been addressed in the commit so if we go to 5765 in the commit um we can see that that one's been changed um and what I'm going to do is I think I'm just going to go through each one and if people have comments um they can stop me and we'll go from there it's a 6157 so people know which one you're on yay okay we'll do that um I will let me pull everything out yes that would be"
  },
  {
    "startTime": "00:04:00",
    "text": "sense I just have to rearrange everything here and uh uh presentation view or let go ask to share screen all right our requests sent to I've asked to share a screen so I think that she shows you to pop up for that uh let's see I'm hoping yes there you go yeah uh when no there we are um do we see that or no no it says okay um don't tell me I have to Quick Chrome and restart it yes window s [Music] um sorry give me a second here um okay so well let me share my screen and there's no oh I can fix that either you probably need to restart your browser or I let me see if I can share yeah how about you just do a Joe from those from those links um I'll post the links and we'll go from there and it's not worth debugging things with a bunch of people on the call let me get to this here right here"
  },
  {
    "startTime": "00:06:04",
    "text": "foreign let's see for some reason I am not able to share either foreign I'll be back in a second yeah okay four five seven seven five is one of them perhaps for the first one that you wanted which was five seven six five um let me try screen sharing now see if that works yes uh I think should be good yay there we are okay a little bit of fighting later we're back"
  },
  {
    "startTime": "00:08:01",
    "text": "um like so let's let's go back for a second five seven six five this one is pretty straightforward um The Authority Field is optional right and we've we've already this around a rat has already been verified uh yes yes and so hopefully it's hopefully it's non-controversial but um yeah we can always address it if it is okay next one is uh five six one five seven um this is also verified status field is one octet and if we go to the commits and massively scroll the screen for a second and bounce around you see that the change has been made so it's one of these things of I tried to cross link everything where possible because the alternative is to look at an Errata and somewhere somehow it's been fixed and it's not really sure not really clear what to do um yeah and also to resolve the Errata we're going to want to put the text editing instructions into the Errata report and have one of the aeds submit it yeah it's useful to have the text Jesus yeah um this one I think is in fact"
  },
  {
    "startTime": "00:10:00",
    "text": "uh wrong that is wrong the correct text is um sorry what number was that 5127 the correct text I took from Joe's tip Errata stuff is not comma 64 but is in fact um sending those exact bytes and I've looked at um the the code that Alex was working on this is what it does this is interoperable with Windows so whether or not this is go ahead that zero uh X4 bottom which is different from uh oh it's hexadeximal four rather than hexadecimal 40. I'm gonna go let me go fix that right away um well I make notes Here uh okay noted thank you so if there's any controversy there no I will close that go back to the errata was that the only change that was made um that was the only change that was made from five one so there was another commit for five one two seven this is the first one which followed the Errata report and then I pulled in your changes Joe which were the actual correct ones Elliot um do you have a comment uh good evening uh good afternoon and good morning to everyone um first of all thank you Alan for for"
  },
  {
    "startTime": "00:12:02",
    "text": "taking this on it's a lot of work and I appreciate you doing it um I and I was saying to a colleague today that uh the the pace of this work is likely to be blindingly fast for when I have perspective um but that having been said uh in this meeting you're going just a little bit too fast for me to follow sure going on and um is I I think I need help from the chairs just a little bit which is it's really difficult for me to follow what's on your screen is it is there a feature in in mid Echo that allows me to to increase the the magnification of what's on the screen I can't tell um I am able with with on my Mac to kind of uh use uh you know the expand feature okay there's a box um at the top where it says you know 257 kilobits per second and then a pause and then there's two buttons that will expand the video or make it full screen and it would be also better if Alan just hit control plus a few times yeah so if I if I did what Control Plus and ideally you made your your browser window smaller oh yeah so then fewer pixels and then they'll be bigger on my screen good point okay it's a bit of a balance one way or the other but yes that that does look better thank you um so my two cents for people following along I mean we have an hour to go through 10 or 12 Errata and a bunch of changes which are not in there so I will try to push it somewhat my two cents is have"
  },
  {
    "startTime": "00:14:05",
    "text": "um follow along with the actual errata and I will be going back and forth a bit between um the changes that Joe suggested in in the uh tip errata uh repository and then my commits in the actual 7170 Biz document um the initial few Errata are relatively straightforward typos this that and the other thing um I do expect that some of the other ones are going to be pretty horrific unfortunately um with lots of discussion um so moving on uh this one is a similar issue of everything should be concatenated not commas um I think I mean this one is 51.28 yes sorry 51.28 um try and post yeah I'll I'll do less opening and closing of Windows because I think that also is a problem so 5128 um I do have commits for that um let me go there I believe I do have to update them um because the current text still has comma 60. um and I don't believe that's correct um but I will have to go double check that against the implementations so if we change the previous one to have this 0x000x40"
  },
  {
    "startTime": "00:16:03",
    "text": "um then I suspect this one has to do the same thing um Alex you've looked at this recently I think does this ring a bell or or is it not pushed off your stack maybe maybe not okay so I need to make a note to um update that um so hearing no discussion that one's that one should be fairly mechanical um I'll I'll check that and let me go back to the errata uh scroll down five seven six seven um this one is a little longer but is relatively straightforward the issue is that 7170 is a little ambiguous about whether you send intermediate result after a successful authentication um and so this text clarifies it that yes you should send intermediate results after every inner method um that's sort of part one um and then the second part is clarifying eat method versus Eep authentication method given that there are eight methods which are not authentication ones um and there's a bunch of commits which address this I didn't make all of these changes suggested in the Errata this does need to be discussed a"
  },
  {
    "startTime": "00:18:00",
    "text": "bit and then olegs comments were perhaps if there's overlap between the eat text and the password text we can avoid the issue of beep authentication method versus eat method and just have a generic section describing how authentication works and then remove all this repeated text from the Eep sequences and password sequences text or sections and instead just have text specifically for that um so the question here is I think there's no controversy about requiring intermediate result for every inner authentication what that I think whatever that authentication is and then the next question is how do we clarify the rest of the text um do we want to rewrite things a bit or do we want to just do what the Errata suggests suggests and just say epauthentication method to make it excruciatingly clear what's going on for Eep foreign in that case we're saying so your suggestion here is to do specifically for Eep authentication method and and then address inter authentication separately or um the the issue is there's a lot of text about how inner authentication works and that's repeated both for Eep sequences and for password and so either we leave it alone and just clarify that eat"
  },
  {
    "startTime": "00:20:00",
    "text": "method is Eep authentication method or we do a little more in-depth work and pull all the common text into a new section which would say for any inner authentication here's what you do and then the Eep sequences and then in fact the Eep would not be in each sequences it would just say how Eep works and the password would not be a password sequence it would just say how password works and all the sequencing information would be in a comment section right because there's no particular reason why you couldn't do um machine authentication with a client cert and user authentication with a password um it should be possible but the text in the document really talks about Eep sequences or password sequences and not there's Eep or password and they're all inner things and it doesn't matter how you mix and match them okay Elliot at least all of these issues are so intertwined that um it gets it gets a little hairy to to pick them apart um and I think what you just described would be a pretty major reorganic um and my suggestion would be to not go there and I may differ from my colleague Oleg a little bit on this and we'll see what um a couple of key points that that I think I would make first um we if if we just deal with the E path and equation functions here that leaves us open to have the the a separate discussion about what to do with the pkcs 10K cs7 tlbs and then also how to"
  },
  {
    "startTime": "00:22:00",
    "text": "handle off uh basic auth the other point is that no matter what we do here we have to separate out what to do about an imck for cases where you're not running an Eep method and I do think running an eat method is qualitatively different than say some of the other things going on so I would say just keep this separate for now would be my my suggestion and try not to go for the report yeah we could always add um a sentence or two before this because these are sub subsections we could add a sentence or two before this going by the way you can mix and match even basic password it's fine um in in the interest of just having minimal changes to the document that would work yeah and and and I think the key thing there is just to be clear as to um and I think 7170 actually got this one at least part of this right which was when you're the when you're derive in the imck to derive it from the last you know if you have this this array of IMC case which the only issue is to make clear and we should make sure that the text is clear about if you're going from um say an eat method to basic auth and we're at and we're and we're calculating I an imck for that if in fact we are um what it is that means and and what it means for the for the the uh intermediate result and the crypto binding that follows yeah one of the other Errata um and and some of the text from um Joe's tea Parada comments on ads explicit text that for um basic password uh authentication the inner imck must be treated as 20 octets of zero yeah what I'm getting at is that if if"
  },
  {
    "startTime": "00:24:01",
    "text": "you're chaining Eep and basic auth we probably would like a few informational words as to what that means in terms of what that array you know in terms of how you're incrementing that array at that point okay that's all okay makes sense Olex I want to add that today we have three different terms in the document about what happens in space inside phase two it could be inner deep method and the second is inner method that implies that it could be naughty but something else and inner authentication I think that it's worth to use a single term for all three of them and change every occurrence in the document just to make it very clear to the implementer that they are the same between them the same foreign yeah I'll make a note um uh what I've also tried to do is um I think this is also one of the other Errata um there's a bunch of text outside of these this Eep sequences section which talks about eat method where it refers to the inner authentication and I've tried to change those to Inner authentication method um in order to just avoid the subject of what it is it's Eep it's passwords it's whatever um and then the only text which should refer to the inner Eep authentication method is this Eep sequences section we can still do sequences of basic password authentication one for user one"
  },
  {
    "startTime": "00:26:01",
    "text": "for machine theoretically yes they are not deep yes thank you do we cover sequences elsewhere in the in the document or is it just um the the basic password um section also mentions that you can do sequences of basic passwords um and then there's various bits and pieces scattered around where it talks about you know crypto binding or all this um or it references the the various imcks so I think I think I I think we already covered this but what it sounds like we need to do is cover that you know we we have sequences of Eep we have sequences of of authentication that's not even we could also have sequences of both right and and the rules should be roughly the same we don't necessarily need to put all of this in one section because that would reach be a major restructure like Elliot said um but we should make sure that that behavior is clear yes okay let me make some notes for me okay uh let's scroll down five seven six eight um this is the uh the issue of do we hard code it to so we we create an inner Mac or there's an inner Mac and then we do things based on TLS one two um and the document says it's 20 octets and this also comes up later in the crypto binding tlv um which says that the compound Mac is"
  },
  {
    "startTime": "00:28:00",
    "text": "20 octets um this clearly does not work for tls13 where the Macs are different sizes um and so what would we need to say for tls13 um what would we need to do for different Macs there's a couple of different options the code I looked at and I posted a comment to the mailing list earlier today host AP for example just hard codes them to 20 octets um and that's hard-coded in the source code and it only supports TLS 1.2 so the question is if we support TLS 1.3 do we want to say that um these Macs are variable size or do we want to truncate them to 20 octets that's a bit open-ended for me this this would be a reason to Rev teep um if we're going to change the size of those Macs and change the size of the crypto binding tlv and the current implementations do not support variable size which is what it looks like then in order to support TLS 1.3 it might be simpler just to Rev rather than trying to say oh for tls13 support this thing which used to be fixed size is now variable size um or maybe I think that the previous discussion we had on this I think we came out with let's say Trump always say the truncate"
  },
  {
    "startTime": "00:30:01",
    "text": "to 20 octet okay um which uh has its own set of it's not maybe not the worst thing uh to do that um if you still are you know using the to be using a stronger Mac but if you truncate but there still is potential for you know birthday attacks and things like that that might be yeah I'm more of an issue at some point um okay um so some of the text I put in the document change this TLS 1.2 reference to for example TLS 1.2 because we don't want to hard code a requirement of tls12 in this and then if we have time we'll get into some of the other errata which also discuss whether you truncate this or whether the compound Mac is sort of crypto binding tlv the compound Max are variable sized so wait we have a Q Elliot and John so Elliot yeah thanks um I I think the issue here would be if we would even be able to pass the security area the area director is gonna and and there would be good reason to be concerned right if if what we're doing essentially is weakening TLS 1.3 um somebody's going to say well you better go into a lot of detail as to why you aren't increasing the correct surface um in in this regard and um I'm not going to be the guy who there's nothing says well here's why because I just don't but so I think we probably want to think about you know not truncating it unless people have a really strong argument but Joe you're you're like a TLS co-chair right so you know you probably you have more to say here"
  },
  {
    "startTime": "00:32:07",
    "text": "what John has to say yeah I I agree with Elliot that it might like raise questions cryptographically I think to empty bytes Mac or or plenty often you say yes 256 with a 16 byte Mac for like the dnsa top secret so security device I don't see a problem with 20 bytes staging TLS 103 my race questions of course okay thanks um hey um I know I when I was writing an implementation I think when I was talking to host AP and Windows 10 and 100 is actually the same um and all the implications are truncated into 20 bytes um so I I think we're stuck with truncation aren't we we're stuck with truncation and unless we until we rev the protocol or rev the I think the crypto binding tlv may have a separate version on it or we could create a different crypto binding tlv right that that um you know just a different tlv number uh that could have an extensible or or another option is simply Define it as currently with truncation for TLS 1.2 and then say by the way if you negotiate TLS one not three the crypto binding field crypto binding TLD and the compound Max are now variable sized um and that would be compatible with existing implementations because nothing"
  },
  {
    "startTime": "00:34:02",
    "text": "implements TLS 1.3 for t um and you just go yep whatever they do for TLS 1.2 that gets blessed we're not going to change it and for TLS 1.3 we can fix it later or not um but at least we have the options and it won't break anything I think um okay hickey also had a comment about eat notification and knack um I think in terms of Knack that's all just Eve discussions negotiation um and those Eep conversations either end in success or failure and so the Knack is buried somewhere in the middle and doesn't really affect teeth at all um for each notification yes um eat notification exists I'm not really aware of much of anything that uses it but um it might be useful necessarily Thinking Out Loud here one of the common problems um for any kind of uh Wi-Fi deployment data 2 on X deployment is there is essentially um no feedback from the server to the supplicant through to the end user I try to log in and I get no what happened yeah I don't know sometimes I might get certificate errors there is no way to get any kind of notice back through to the end user saying you know please come down to security your account has been canceled or what whatever [Music] um yeah so so just thinking out loud given that we have a prompt for the basic password"
  },
  {
    "startTime": "00:36:00",
    "text": "it might be useful to add a suggestion saying that eat notifications should get sent to the end user um this is a change from 7170 but it's new functionality and if nobody implements it right now um that's fine I guess the question would be what do implementations currently do if they get a eaten notification instead of anything else um 5768 or it sounds like a new topic new issue um it's it's related to that I think so it's all this discussion it's heck he brought up a comment here um okay well we can move on to the errata uh 57 70. um this is a lot of text there foreign I don't remember I don't want to flip my screen around but I don't remember which changes went where one second yes I made no changes to um the document and instead left a to-do"
  },
  {
    "startTime": "00:38:01",
    "text": "going we have to discuss this and figure this out so this Errata has no solution right now foreign so we did have something yeah oh there we are yes there's a pull request number that yeah number 13. 13 not 13 and and yeah that's right that's right yeah I was looking at this this morning before my head exploded with too many erratas um yes I do believe okay yeah I believe those changes mostly got pulled in um I'll double check maybe not I'll also check offline but those are yeah we should still validate this because it is a little bit of a tricky um we definitely should make sure it's not changing anything that affects implementations because I I don't think it would but um we it would be good to validate that so this is a complicated one might you sense would be table this one for now and move on because some of the other ones are pretty straightforward and this way we can make progress in sort of not 90 of them"
  },
  {
    "startTime": "00:40:01",
    "text": "but let's do that okay uh uh let's close that and go back to the Errata five seven five there is overlap between this and some of the earlier ones um so yes this says um when the inner method is basic password what value do you use for imck and the suggestion and the fix from Joe zorata was just use zero and that requires text in a bunch of places now is this indeed what implementations do you do um I'd have to check uh yeah Ellen um yeah the yoni's text does do zeros because we looked at this and actually that's what we borrowed what we did we sort of worked that text in order to get something going when we were doing um the the pkcs7pkcs 10 uh requests that having been said I'm not sure it's the right answer from a cryptographic standpoint um and I wrote a pretty lengthy message about this um now and then we had a nice discussion actually a timely discussion right between um Alexander and myself and you Joe about this uh just over the last 24 hours um and so it boils down to"
  },
  {
    "startTime": "00:42:00",
    "text": "um what what sort of crypto binding is needed for the authentication method what sort of crypto binding is needed for um pkcs7pk cs10 uh tlds and and whether whether it's whether this stuff should be protected in any case um and there's one wrinkle we didn't get into an email which is um if we're going to bind to as you wrote Joe um if we if we're going to make use of the TLs secret information um for this that there is one possible man in the middle that we might want to sort and we have to be a little we should give a little thought to this which is when the Eep server is not the ra right or and and or not the CA and therefore um is it needs to basically forward things on uh to an Raca and um so one example might be if you're using something crazy like I don't know if it's so crazy if you're using something like ESP on the back end for instance well then how to how does the secret information from TLS get all the way to the ra you have to have essentially a proprietary mechanism to do it and is that what you really want and that proprietary mechanism is essentially the code that you would have in a in a um in an integral implementation of the server and the ca so so there's a little bit of hair around that that we haven't yet uncovered I feel um so one answer is that we do away with the password components here and we just use the crypto binding tlvs for all of this um that's one possibility another possibility is we say screw it you have to bind to the the you have to have this integral CA capability but that might"
  },
  {
    "startTime": "00:44:01",
    "text": "have some pretty interesting deployment uh implications and we need to sift through that a little bit and so I think it from for a today's standpoint right I'd be interested to hear what Alan has to say I'd actually be interested to hear what um both Oleg and Michael have to say um in terms of the deployment View and what other people have to say and maybe we close this out on the next call for me I no worries for me I don't have a lot of comments on this um I I see the uh cmk derivation is a bit separate from some of the other issues and until we get into some more actual implementations um I'm not sure I want to sort of stick my neck out one way or the other then maybe Alex has some more theories yeah foreign hey um I I'm wondering about if you are talking to uh when you say EST you're talking about um uh uh device right I'm not not familiar with the language sorry my my apologies EST is enrollment over secure transport and is I want to say it's RFC 7030 and there are some uh uh amendments to that some updates to it basically it's a restful interface to do um pkcs10pk CS 7 exchanges Observer using that on the back end right to handle its requests now the issue there is how do you know that the auth server hasn't turned into a man in the middle right in in and that's what the channel binding is there to to address yeah I am I would have trying to paste that in I would have I I"
  },
  {
    "startTime": "00:46:01",
    "text": "I would have thought that rest API would let you um submit crypto calculations it's an RFC I would need to read and dig around I don't know um I would expect you because the the HVAC functions or uh the prf functions are sort of box box standard high level low level uh crypto functions that you should be able to submit and then receive a reply back of the hash whilst the other end gets to retain all the Keen material and not leak it um that's what I would expect in a deploy just just to follow up um the issue here is that the Eep server the authentication server has the the appropriate King material from the from the TLs secret because it's got the TLs connection which is shared with the the enrollee right it's just that the back end CA doesn't have that information and so that would be the information you have to convey out of band in some way and that's not part of EST right yeah some meditation on it then I guess the complication and so we need we need a I think we just I I think we just need to give it a little bit of thought I mean there's a this is a a it's a little bit of hair but I don't think it's insolvable and if it is the simple answer is screw it don't worry about trying to do something like EST on the back end at least for T version one we just keep going yeah so um I think there there's the the issue you're mainly raising is around the use of the the pkcs 10 tlbs right to do enrollment and so I think we do want to take a close look at that I think if if I remember correctly when when we did this like either Dan or somebody had"
  },
  {
    "startTime": "00:48:01",
    "text": "recommended the text that we put in the pkcs 10 request uh in that tlv um but I don't know if that was in mind to be interoperable with s or to provide the same functionality as s or i I'm not I'm not sure but we certainly should take a look at that because I don't think if if there's a better implementation route there we I don't think anybody's really implemented those tlvs as far as I know and so we we could you know make changes there and uh to kind of improve that um and I also think we can cut we may be able to address the inner method uh kind of binding issues separately I don't I don't know that those two things have to be linked um so you have code ready but is is so but you you I guess my point would be is if if there is a change that's needed like you're saying in in order to make this work in certain deployments then we we want to make that so that you could have interoperability right all right so I think for this one I think we we still have some discussion here but I think all right the main I think resolution for this particular one was to specify how the zeros are you know to specify what the initial imsk is"
  },
  {
    "startTime": "00:50:01",
    "text": "in this case um and I'm yeah I believe I believe that's it um yeah I mean if we go back and forth to the um either the uh Errata um pushed by by Joe or the commits um to the southern one Sony Biz document and just look for five seven seven five um we'll get all the updated text there so I think that should be good for this one and we may have a separate Errata or consideration around the pkcs10 handling yes uh five eight eight four that's relatively straightforward um a bunch of the diagrams have to be updated to show that there is either an intermediate result tlv of success or failure every time we do an inner any Authentication and that just is updated here in the diagrams to match the text from one of the earlier erata foreign no controversy moving on um yes this is largely duplicate again um intermediate result tlv get set after every inner"
  },
  {
    "startTime": "00:52:00",
    "text": "Authentication and that text has been updated in the document you are on this bit at some stage did we want to mention to help implementers don't send each success or failure inside that uh tlv would this be roughly where it goes I know yes um I believe if you look at the commit log all right I'm sorry I push changes on your Elite yesterday or today sorry I missed that no no worries you had a comment I was like oh God put it in the document before the meeting um so yeah there's I don't know 30 or 40 commits in the 7170 Biz repo um but the goal there was to have each commit relatively simple and understandable um and referring to either the Iran or Joe's comment turbo um and that way everything is is available and accessible foreign just looking at oleg's comment in chat okay I'll have to think about that I'll I'll make a note um moving on foreign so yeah I think the consensus is crypto binding"
  },
  {
    "startTime": "00:54:01",
    "text": "um should be sent along with intermediate result tlv and result tlv and the crypto binding is checked um before you look at result tlv let me make a note sorry Alan are we saying we're rejecting this one at this point um let me just check what I did because I made um lots of changes let me see uh uh type Natalie here um no I think that should be accepted because there should be some additional text um I think the the the change noted here is except as noted below which is where you send failure um I believe so if you send failure then you don't need to send crypto binding because you have no msks um but you can still send an inner result of failure which is protected by the TLs wrapper and you'll have no crypto binding but well you can't do crypto binding if if authentication failed um and then the rest of the text here um just needs to be double checked through that I guess the question is to Joe like how do you want to handle this one in terms of the Errata do you want to because"
  },
  {
    "startTime": "00:56:00",
    "text": "we're really coming close to we if the text is close to Accurate we can verify it but for some of these more complex ones we can simply hold for update right like if we go back to 57.70 if we're really going to work hot and heavy on getting all this stuff on getting uh the this current draft out then you might as well hold for update we work don't worry about the Errata as a as a verification we just we we just hold for update and work on it in in Alan's text yeah I think we'll we'll have to look and I think once a change gets to be where you're having to modify multiple places in order to understand the change then it really becomes something I think we need to hold for update if there's a change that we can make in the Errata in in one or two places that make it easier for an implementer who's just looking at this document to get something that's interoperable um we could consider like a subset in the in in the Errata if it's complete enough to to address the issue um so I think we'll have to look at the scope of the change because if you get too too many things in too many places then it just gets confusing yeah yeah and that's why I put links to everything everywhere so you don't have to sort of you know look at the the changes and hope for the best to try and figure out what went what changed what we what we can do is put together some sample of what their router would look like sure uh this one is really this text um I've made that change and based on some additional references and olegs feedback there's now a sub subsection"
  },
  {
    "startTime": "00:58:00",
    "text": "um saying by the way if Ms chap is not used it's the Eep fast Ms chat and I think this is the biggest interoperability issue that people ran into um and when we got closure on this that sort of what what triggered the the timing for for these changes um so I think that should be either verified or hold for update Because the actual text and the update will be different from this I can pull it up if people want but it doesn't really matter a lot how much text is it differently um let me see sorry what you're at ID was it seven five two nine yeah if it's a modest change from what's there Joe has the opportunity to edit that stuff okay so yeah that's it yeah I mean that's pretty easy to do in Errata so okay um okay so I we're just about out of time and I think we touched on most of the Errata except for the there's one or two ones I think we didn't resolve so what yeah I propose as we keep our meeting next week and we try to we in the meantime try to raise some of those we have two things to do on the list one is raise some of the try to resolve any of the open issues and get the um for things that we want to put into an Errata I'll work on getting some Errata text together uh based on Allen's changes to see which ones we can include in the Narada and which ones we would hold for updating yeah there's a couple other changes I made based on comments on the list um and things I found like the one that I remember is um the basic uh password"
  },
  {
    "startTime": "01:00:01",
    "text": "was not marked as mandatory but if you didn't support it you were supposed to send a error tlv a fatal error and that was not allowed and so it should have been marked as mandatory um and then there's a couple other small ones but it's one of these things that I don't think there's a lot there that's controversial um if you go through the individual commits in that repo um they should be relatively clearly explained I hope so yeah other than 5 7 7 in uh 5775 I think we've either I think we've fixed pretty much everything which is very good for an hour and a long technical discussion all right okay uh we're we're at the end so thank you everybody for uh participating we'll we'll hold the the meeting again next week uh to try to close off any remaining ones and then if we need additional ones we can we can schedule them uh uh at that time or after that meeting um I think uh yeah thanks a lot this is good foreign Happy New Year bye-bye"
  }
]
