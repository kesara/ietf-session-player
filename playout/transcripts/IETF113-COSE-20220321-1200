[
  {
    "startTime": "00:00:04",
    "text": "you're welcome so i'm mike jones one of your two co-chairs for kosai thank you all for coming both those of you in the room and those of you in the virtual room i appreciate your participation we have a full agenda today we only have an hour and a completely packed set of presentations so going through the chair slides and i'm starting on time because we are so tight um i wonder if the clicker works no i wonder how i advance slides maybe on this computer uh and the same computer that you've started them from there should be like arrows near the bottom of the screen and i think that the arrow keys on your keyboard will work as well and i see brian raising his hand maybe or maybe just playing with the ui um i'm not seeing the arrows i would like to advance the slide the clicker doesn't seem to work ben where did you think i could find arrows uh i think they're like chevron type arrow which what i'm seeing on the left of my screen is the participant list"
  },
  {
    "startTime": "00:02:01",
    "text": "right in the middle mute audience i think you can also if you click on the slide part and then use your arrow keys on the keyboard i forget if it's left and right or down and up i'm pretty sure that works um the slide i see a slide list i'm not seeing the slides on my screen sorry about the technical difficulties here i've never used this tool has anybody used this tool no like if you i can try to uh share this likes and see if i managed to figure it out let me have to tell you next night you're gonna have to speak louder evo oh yeah i can try to uh take control of the slides not sure if that will be helpful i'm sure there's a ui element somewhere to advance the slides i just don't see it honest have you ever used meat echo to present slides if so come sit here for a sec thank you how do i advance a slide i cannot find it okay you're um even sure it's like it no i uh let's say which one did uh status by the chairs okay yeah i think uh all that does is open it in my browser that's not right okay is there something up here presentation view yeah let's try"
  },
  {
    "startTime": "00:04:00",
    "text": "presentation view ah now there are arrows thank you hannes honest joe fenninger our our hero this is the notewill many of you have seen it before please pay attention to the notewell um there's a set of meeting tips the most important one i believe is that all of you in the room are to join using the lite version of meat echo which is the one that looks like a mobile telephone and you use that user interface in order to cue yourselves so that we are being fair to people not only in the room but in the virtual room so please do so also you're all requested to scan the qr code or use the tools to fill in the virtual blue sheet to indicate attendance there's a set of resources that i'm going to skip in the interest of time most of you've probably already found them per every itf working group meeting i need two volunteers or more than two i need people that are willing to contribute to the note taking there is a shared note space can someone in the room raise their hand or in the virtual room send me a chat saying you're going to be taking notes and we won't proceed until we have a note taker peter thank you others feel free to join peter in taking notes in a communal fashion it's a shared editing tool we also need a jabber scribe there's the"
  },
  {
    "startTime": "00:06:01",
    "text": "jabber link in the meeting agenda tools the same place that you found the little icon to join the meeting can someone monitor the chat traffic and again this can be done in the meat echo tool as well by selecting the chat icon in the chat currently mike perak has said something jeffrey haas has said something evo has said something that chat is where you would monitor it is anybody willing to monitor the chat and speak up if necessary hi mike yeah this has been i will be watching the chat thank you very much ben our esteemed area director we have a very tight meeting agenda we only have an hour we have a lot of good presentations cued up i am now over by a minute so i'm going to turn it over at this point to my co-chair evo the second agenda item who is going to talk about the status of current drafts including the bist drafts um eva do you want me to try to present that i should probably figure out how to do that again well yeah either you should share the slides so if you flew into sloth i think i'll be able to do that myself perfect okay okay thank you so yes i will be presenting the uh slides i'm here by the patrol yes i will start with the beast"
  },
  {
    "startTime": "00:08:00",
    "text": "documents uh name the 1952 rfc to be and uh a 1953 subjective rfc2b know you should get closer to your microphone and speak louder please i am sure uh so basically there and ben caduck has been spearheading the discussion with the rfc editor there has been a number of exchanges and most of them are already closed the important part is for me a question about how whether we need to require private key in key operation values this is table 5 in section 7.1 and maybe it will be best first to present all the slides and then come back to this question if there are any comments in um in from the participants so this is the most important question for me that we could discuss today because this is not exactly consistent with the rc7517 and with nw3c's web crypto and we are claiming to be consistent with those and then there is a reason formulation of this sentence where ben has indicated uh we might want to check if this still makes sense to everyone whether the formulation is still good um my personal individual opinion is that it seems fine but yes if anyone has"
  },
  {
    "startTime": "00:10:00",
    "text": "other opinions we can discuss that further and going forward so then there is uh there were some comments from carsten and the first one has already been addressed and there were some texts that didn't make sense in its state but yeah now it's fixed and then there is an update that i was done in 1952 and not in 1953 documents so we would need to make them consistent and the last point is suggestions to not call cdl a grammar but rather standard definition language or symbolic data structure makes sense to me individually but we can discuss if there are other opinions and yes calling then to the next discussion item carsten was suggesting to be more precise when we talk about uh deterministic encoding requirements and specify which section we are um aiming for and yes this is the text that he has suggested and so that was for the peace documents and after we have resolved those couple of issues"
  },
  {
    "startTime": "00:12:01",
    "text": "we need to check for consistencies between the two drafts and they should be ready for publication and then for the hash hawks draft i answered to some questions from the editors and my understanding is that now ben or some other lady needs to take a final look and say that it's good for them as well and then it will be ready for publication so next the x509 draft uh we are going to publish a new version of the draft and that was discussed uh some time ago and there is an issue 31 that i believe we should uh get some more uh discussion on i saw that today like maybe an hour ago there was also some and discussion for a new issue i have not yet uh dig deep into how it might affect the draft so and then the counter same document as far as i saw itself with roman and awaiting kd review it's in a publication requested status and going then to see burn coded certificates um my understanding is that there are more reviews that are needed and there are some small to-do's that are still pending there so that's all the traps and that i wanted to present the status of now we can go back mainly to see if there is any quick opinion on"
  },
  {
    "startTime": "00:14:00",
    "text": "this required private key fields text or maybe we can start mainly please discussion and device and in my role as timekeeper this is the one minute warning honest we'll take over in a minute are there any any questions for evo if so cue yourself otherwise i will cue hanus's draft and we can start on that okay thank you you can also write in the mainly please of course if you take some comments um meeting materials that might be it does someone know how to eva do you know how to share a deck how did you do that maybe eva did it thank you thank you take us away okay perfect yeah thanks uh thanks a lot um so briefly talk about the cozy hpke document next slide probably evo needs to do that um so we had a fruitful discussion at the virtual intro meeting in january and i published a zero one version in response to those discussions and i will show the"
  },
  {
    "startTime": "00:16:00",
    "text": "um the most important change with zero one i also created as i promised uh an implementation a reference implementation of this which you can find at this link below it's uh the decocy library and here's also the link for the draft repository next slide so this is uh next slide this is the new structure um if you haven't been following the discussions last time so this is a two-layer structure at the top um you see the sort of classical encryption sort of headers in this case the ciphertext is not included it's detached there's the algorithm information in there and the topmost the part and also the nonce uh and then the recipient structure that's where the hb key content goes in there uh with obviously the ephemeral public key and then finally with in this case with the encrypted keck which is the keck uh is used to encrypt the the outermost plain text okay so that's uh what's currently in the document it's a big change compared to the previous version next slide okay uh open issues so we talked about the algorithm registry and the the group wanted to have an efficient way to reuse the hbke defined algorithms and obviously for the currently defined algorithms there isn't really a problem because they are listed in the now rfc and we can just uh they will be put into the document and registered but um the question is what happens going forward with new algorithms and we had we discussed primarily the first approach uh which was to add a rule uh in quotes to the hbke uh specification to then automatically populate uh values in the cosy registry unfortunately"
  },
  {
    "startTime": "00:18:00",
    "text": "shortly after the virtual intro meeting and the discussion the hb key document was published as an rfc so no changes were possible anymore which leaves us with two other choices either to have a rule um with ayanna to sort of automatically populate values in the registry which in my opinion requires some discussions with ayanna to make sure that this actually works some folks in the group were hopeful that this is simple to do but i don't know and if that doesn't work and the last approach is obviously this approach is is uh is sensible to um require that whenever someone defines a new hpke uh algorithm or cypher suite then they need to also populate the registry for the for the corresponding cozy registry so that's kind of like nothing really earth shaking um but but at least there was a lot of discussion on this topic on on the list i want the questions now or no no go ahead i haven't been please go ahead yeah so i think there are definitely some cases where ayanna will be able to say when there is a change to one registry go and reflect that in another registry but you're right you should definitely talk to them about this particular case because they really want it to be a very deterministic algorithm that they follow they don't want to have to use any judgment and i believe they have office hours this week but it's probably only in gather town it may not be in person the other option that you can do is to have the registration policy for the cozy specific parts involve a designated expert and then basically give the experts"
  },
  {
    "startTime": "00:20:01",
    "text": "leeway to say whenever there's a new addition to the other registry they can just make the new registration in their role as the experts to approve it yeah yeah we'll definitely use the idf meeting here in some sense it's a pretty simple task um the cosy or the hp key registry consists of three separate registry aadid key fld and camera id as i wrote on the slide and in cosi it's just mapped to one number uh that combines the three uh well it's it's uh well you could call it simple or not i don't know but uh but in any case there's some something that needs to happen it's almost like a ci in in case you uh um you make some changes then automatically does something else but uh yeah so yeah i don't know if someone has some better ideas what to do but uh it the first option that we discussed and preferred that the intro meeting is kind of gone unfortunately i think the second one will work pretty well uh and i would suggest that we just keep going in the slide deck yeah okay perfect thanks ben next slide so um that was another point that hillary raised that was briefly touched on at the virtual intro meeting but there was no conclusion or no feedback and hopefully i get some feedback from you and russ was kind enough to reach out to some guys in the industry to get an understanding of where we are in terms of state of the art so this is about point compression and currently the the previously shown example with the ephemeral public key that was included in the in the structure in the in the uh recipient layer um that's an uncompressed point and point compression would obviously help to transmit uh fewer bytes on the wire and it turns out that uh this is a 20 plus year old technology um"
  },
  {
    "startTime": "00:22:02",
    "text": "and the idea is to and that was illary was suggesting to add that capability to the document as another point format being optional because it's not necessarily widely supported everywhere for mostly patent reasons and so yeah i think to me that makes uh sense what hillary was proposing on the list i don't know if anyone has some opinion here about this topic or has some experience with point compression and this and the like yes first please go ahead um so my discussion with some implements where there was a lot of code to implement point compression and in small devices it would not be desirable because you have to add a square root function that you don't otherwise need and so the code gets much bigger so they were opposed to making point compression required we'll see what other people think but at least several implementers said that's not what they want to do thanks russ yeah russ checked out um with paper so at the microphone please say your name yeah malicious uh so just the data point for the data compression i was just working with the with the point compression for the past two weeks in the context of the ad hoc and lake implementation and it is true that it is poorly supported in the existing libraries but there is the rfc 6090 algorithm that doesn't uh"
  },
  {
    "startTime": "00:24:01",
    "text": "that doesn't require the implementation of square root that can be implemented with the pure module operation and that is fairly simple to implement from my experience so this is and this is well needed in the context of constrained technologies uh in in the context of bites over the wire savings thank you could you guys show peter your name badge for the purposes of the minutes okay 69 one minute warning okay thank you uh next slide um i will skip that one next slide in interest of time so this is a change i'm proposing so the cosy specification has for all the different operations it constructs um additional data or additional information to be included in in in the whole processing and so regardless of whether you use a sign operation or in this case an encrypt operation and and that's a that's this information is also structured as a cosi um sort of data element and currently what's in there in the document is also an infrastructure to be used with hbke and initially when it it's a leftover from the early days of the document in the suit group and hbke itself has its own way to pass information into hp key for inclusion into the key derivation and so in my opinion um that infrastructure is not uh needed in addition to that so since hb key already provides uh uses its own mechanism and provides addition for someone who wants to pass in additional information can do so um for certain usage environments but uh so i'm proposing to remove that infrastructure from the document"
  },
  {
    "startTime": "00:26:00",
    "text": "it's probably something to digest for people who are following these type of mechanisms we are at time i'm going to have you take that question to the list yeah i will recognize militia vucinic on the queue and then we'll switch presentations militia do you want us was that from previous from the previous thing okay okay thank you very much janice and do you engage with on us on the mailing list so the next pair of presentations um i am not the chair um evo is the chair i am an individual contributor to two documents that my colleague tobias looker in new zealand is the primary author of but it is exactly 12 hours time difference and so this was not a convenient time for him to present next so there's a set of elliptic curves called bls that belong to the realm of pairing friendly cryptography and there's related work underway at the cfrg there's been some discussion of this on the mailing list already from russ housley and the like and i'd like russ to comment at the end if possible so this is used by a number of different pairing based operations all this draft does is register jose and cos a algorithm identifiers so that these can be used for cose and jose it does not define any cryptographic operations next so there's numerous applications of pairing-based cryptography"
  },
  {
    "startTime": "00:28:00",
    "text": "there's one called bls signatures there's the bbs bbs plus signatures work that some of you who are aware of some of the current decentralized zero knowledge proof work may have been following again this is supporting other work in other standards organizations but jose and kosei have become the gold standard for respectively based and seabore based cryptographic operations which is why tobias is bringing this draft to this working group um there's also ongoing work on something called json web proofs that i'm a co-author of for doing jot like in jws like signatures but with multi-signature and zero knowledge selective disclosure proofs next so the only next steps that the authors are requesting today is for people to read the draft and to comment on the mailing list um following a discussion on the mailing list depending upon how that goes we may ask for working group adoption but we are not doing that today i would invite russ to speak to his comments on list about the charter of this working group and what we may and may not do and the relationship between this work and the cfrg works cited if you are willing to do that russ um i'm not opposed to seeing these code points russ you're too quiet for us to hear can"
  },
  {
    "startTime": "00:30:00",
    "text": "you yell into your microphone please and the chairs can take that up with uh the area directors etc and eva and i will take that action item uh with me wearing my chair hat and not as a draft author hat unless there's questions on this i would ask you to read and take it to the list and let's move on to the next presentation this is another one that tobias wrote in response to a real need seen among other things that came up during i believe the development of the new zealand coveted credentials which do use cose and sebor web token formats so here here that we're having adoption in the healthcare space uh next slide so we all worked on or many of us worked on seabor web token together we worked on cose together the jot spec which came before has an interesting feature which dick hart had requested and some others based on practical experience which was dick was looking at if you have an encrypted token with jwe you obviously can't see the claims that's generally a good thing but sometimes when you're processing a token like routing it trying to decide where it goes you may want some information from the claims to be publicly visible and so section 5.3 of the jot spec"
  },
  {
    "startTime": "00:32:00",
    "text": "explicitly sanctions you repeating claims that are not privacy sensitive in the header parameters in particular the issuer claim has been repeated in some contexts in encrypted jots to help retrieve the key set that you need to even do the decryption that's worked out okay for jots it does not that feature is not present in cwt's and furthermore you couldn't just port the feature directly into cwt's because john excuse me cwt claim names and cos a header parameter names are both small integers with an overlapping space so you couldn't just mix and match next slide so the proposed solution in this draft is to define one new cozy header parameter the value for which is a set of cwt claims that uh can be disclosed in the integrity protected but non-encrypted header this parallels the chat functionality that's already been shown to have at least been good enough to solve the problem at hand um i think that should be fairly clear let's go to the next slide it is exactly the same as the last slide in the previous presentation where we are requesting that working group members read the draft comment on list and depending upon how that discussion goes uh the authors may ask the chairs for working group adoption where i will obviously stay out of that as a conflict of interest any comments or can we move on to the"
  },
  {
    "startTime": "00:34:01",
    "text": "next presentation because i think we're even a minute or two ahead the next presentation is by mike prorock whose remote um evo could you queue up mike prorock's presentation on post quantum signatures and mike are you with us i am indeed hopefully you can hear me all right that's good thank you please please proceed awesome thanks so much all and we can jump right into the next slide here i authored an individual draft and then got some great feedback and support from a number of folks as well as contributions so uh and some folks also obviously working across other aspects of cryptography so we've got basically the problem statement is this we know post quantum algorithms will come out from a day job perspective i do a lot with signatures and i wanted a way to be able to interoperably sign things with post quantum uh methods and make sure that the other side was interpreting that correctly and that's with both jose and jose um so we wrote up the draft initially focused on kind of two aspects of post quantum signatures so hash based and lattice based uh schemes um the main reason for that is that we want to make sure we have a good trade-off and good options in case we find problems uh either with size on signatures that just make them impractical or key sizes or if we find a weakness in one approach be it a lattice-based approach that has some fundamental weakness that we're not aware of we want the ability to fail over to hash based or otherwise right so it's really about providing crypto agility the main concern i see is that the nist standardization process is obviously"
  },
  {
    "startTime": "00:36:01",
    "text": "still ongoing uh for this but but these algorithms are out they've been around for a while um they're you know i guess in what round three and are you know moving forward there so i think even if nist does not standardize one of the algorithms that we define here we would still want to go ahead and um go ahead and get it defined uh if for no other reason than to be able to make sure that it is defined and we can flag it as hey please do not actually use this from like an iona registry standpoint uh next slide please um so you know once again kind of going back to the main goals we want to really enable agility to be able to jump up to these post-quantum algorithms when they're appropriate we want to be able to test ahead of time um and then we do want to go ahead and make sure that we can get in our registrations done for these post quantum signature schemes otherwise one of the things especially due to the high level of parameterization and the fact that most of these algorithms get their security properties from specific combinations of parameters we want to make sure very explicit parameters are registered for um each algorithm so we know what's good what's bad etcetera right and can put that out next slide please um the you know some complexity in getting at the um really kind of getting at the parameterization side of things right we really need to be able to use alg or some other identifier right uh within there just to make sure that we can clearly identify what set of parameters is in use for instance with dilithium or falcon um or especially a special sphinx plus etc so we we do want to make sure that that's very explicitly stated otherwise it'd be very possible to either misidentify a key or to uh run a you know run a method or"
  },
  {
    "startTime": "00:38:01",
    "text": "a signature method with the wrong set of parameters and that's obviously not good uh next slide please so next steps for us on the individual draft side is to go through uh really continue flushing out the algorithm descriptions we've got a good baseline in place uh we're looking at as a group uh that are working on some different ways of just talking about you know like the sign verify operations we're not defining any new cryptography here like no desire to do that this is just pointing back at the well-defined stuff we may for right now we're just pointing back to the papers and that they just stay that way um we are based on feedback on the list looking a little broader at some other hash based signature approaches especially some more stateful ones and then we're getting ready to start into a whole bunch of test factor generation and getting into some better serialization examples with both jwk and uh with jws so uh really the big ask little group is go ahead and read the draft i know quite a few of you that i see here have already done so um provide feedback and then if appropriate and if in line for the charter we'd like to be able to get this adopted as a working group item and move it forward uh when the time is right assuming that it matches the group's needs so thanks so much all right i see brendan and then jonathan hamill on the q let me take brendan first brendan here i just wanted to point out that there is already a point in cozy for one of the uh hash bay signature schemes hss lms has a reference in rfc 8778"
  },
  {
    "startTime": "00:40:05",
    "text": "thank you jonathan hello um yeah i i just want to point out what what i pointed in chat that the algorithms according to the cozy charter have to be evaluated by cfrd or um completed public review and violation by a process that is the nist process so if these algorithms that you're defining here are not collected by nist i believe they would have to go through pfrg evaluation i believe that to be true is there anybody else on the queue all right if not i will speak um oh there we go now i can see the cue andrew please proceed andrew fragley you sure i just want to note that the uh lms and xms are actually all approved missed algorithms post quantum um you read miss 800 sp 208 we'll see their proof there do you have a document you could reference in the chat for purposes of this yeah that would be fabulous people don't realize they're approved because they weren't part of the competition but they're acknowledged by this because one's up with that okay very good benjamin yeah sorry i guess i jumped a little bit too early with sending my video but uh i mainly wanted"
  },
  {
    "startTime": "00:42:02",
    "text": "to just say thank you to my for the um yeah to michael for the bit about reducing optionality and really nailing down the parameters for the post quantum stuff and it'd be really useful to have these sort of just use this and not have people worry about exactly what they have to choose i agreed with that emmanuel hey can you hear me we can okay thanks um yeah thanks a lot a very interesting wrap um i i think it's it's uh uh might become like uh in my mind like uh two drafts uh in a sense that um what uh we do with uh jose but with causes might be slightly different this is like they're targeting different uh use cases at least in the very constrained case uh some of these signatures might be less appropriate than others due to their size and things like that um maybe uh uh clearly uh separating this this use case of very constrained devices might uh makes it make sense uh there are some things that are really uh can be set as less interesting in this in this context of very constrained devices um i i i talk on behalf of the committee working on on on the riot operating system where we have like very constrained devices and microcontrollers and things like that i know some of people in the room are very uh uh sensitive to these types of uh constraints um but yeah so so um that would be great um actually we we have uh um a uh um recently previous paper on this uh that is analyzing some of uh these signatures"
  },
  {
    "startTime": "00:44:02",
    "text": "in this context uh using cozy uh for for a suit uh secured security for updates on on riot devices i can share the link if that's interesting also here yeah indeed please share links for any relevant things for the minutes to the chat to help peter out that would be great um mr prorock you have the cue gonna note there's a related draft and actually can we pop to the next slide i think i put a uh link reference in there and i'm gonna dig up the link and put it in chat but this is actually also highly referenced and has a number of the folks that are also working on the key information uh spec as well i'm linking that now um the um so there's quite a bit of overlap there just in terms of yep we already know that these things are getting well defined the keys are going to be well defined and now let's make sure we can do this with you know compact binary representations as well as json representations as appropriate appreciate it emmanuel you have the floor oh and it's just leftover i think i said what i needed to say sorry okay um i'll make one closing remark um which is kozai as a working group is chartered among other things to do registration of algorithm identifiers for algorithms with a certain level of maturity we are explicitly not chartered to describe new kinds of cryptographic"
  },
  {
    "startTime": "00:46:00",
    "text": "operations and there's a fairly bright line between the two i will say just wearing a hat as an individual right now when i read the draft at first i know that there was a lot of explanatory text trying to say how these algorithms work and how they might be used i don't think that was intended to be normative but some readers could think that it was where all the normative components should come from the authoritative sources i'm not suggesting a particular action other than think about making sure that the draft stays on the right side of that bright line in our charter because otherwise you'll run into problems with reviewers later are there any other comments on this otherwise we will switch to the last presentation and we are running a few minutes ahead of schedule all right um thank you mike for writing that and thank you for all the feedback that's already come on the mailing list please keep it up hello can you hear me we can maybe speak a little louder right can you hear me yes that's better okay so hello everyone i'm joran salander i'm going to talk about this really short draft who's been updated today on uh standing here the entire integers next slide please so this is something we discussed on mailing list between two previous meetings and it's addressing the use case when you have really tight message size constraints and you would like to use their short in"
  },
  {
    "startTime": "00:48:01",
    "text": "key identifiers so the cosec parameter kid the identifier is currently restricted to byte strings and c board by strings are typically two bytes or more except for the empty byte string which is a very special identifier and in order to allow more one-byte identifiers we propose to extend the kid value type to int seaborg hints which have the order of 50 and one byte identifiers so that's that's the proposal um it's a short draft they're essentially updating three registries and that's a little shoppie can you hear me now thank you okay ben had some problems with the audio so i i think the i mean this is the last slide i think the proposal is fairly clear on on the slide ask questions otherwise it's basically extending uh the value type for for kid for the currencies of kid we had a discussion about pros and cons for making this a separate parameter and whether this was really needed and i think the conclusion was that this was how we should do it and i'm happy to have any comments or um or questions okay there's a couple of people who have choppy audio here i don't know if there's anything that needs to be repeat ah still possible to understand okay good dennis in the queue you're recognized yeah so i guess this is my fault for not having actually read the draft i do agree that reusing kid as the parameter instead of"
  },
  {
    "startTime": "00:50:01",
    "text": "defining a new parameter is useful i just want to make sure that the draft talks about like the deployment considerations for when it is actually safe to use the integer form of it because if you just have an updated sender that starts sending it without indication that the recipient will be able to do something useful with it you will get a lock loss of interoperability yeah that's i mean that that type of consideration isn't currently in the draft but we had the discussion at the time and the general feeling if i understand if i remember right but that since this is c boar and if you have implemented c or byte string you typically have implemented zebra in as well and these are typed i mean zebra has a built-in type typing so you would typically of course you would notice that there there is an error here if you expect the byte string and you get an in but but you wouldn't sort of it wouldn't result in any uh that you would get sort of the wrong type of value you would get the wrong uh you expect a certain uh string and you get some get an integer instead right i think that's like a very clear error it would not be mispricing what's there yeah it would be basically detecting the wrong it's the wrong seaboard type and that of course if you can't support the ins that that would lead to a fatal error of course right okay uh yeah i mean i think that having some text in the document will be good eventually you know by the time we get later on into the process that's yes thank you we'll make that update to the next version"
  },
  {
    "startTime": "00:52:02",
    "text": "other comments okay thank you i i've been waiting to the end uh i'll i'm not speaking as a chair one thing that i think should be explicitly said in the document is that presently all 8152 cos a implementations would be required to reject a data structure with a numeric key id there's a there's a data type defined for key id it's b string and so if you have a conformant implementation and you encounter something that uses a mismatch data type it must be rejected therefore this is a breaking change i am certainly willing to leave it up to the working group whether to make the breaking change but it needs to be labeled as such because no 8152 implementation may be allowed to support it right that's that's correct but okay specifically stressed that in the in the update all right um is there anything else you'd like to say karen i'm happy thank you okay thank you we unexpectedly have five minutes of time which uh i will now have open mic time uh on any koze related topic uh join the queue um ben you were in the queue"
  },
  {
    "startTime": "00:54:00",
    "text": "yeah i had taken some notes locally about the point compression presentation but i didn't get to say them earlier so i'll go back to that now um about the optionality of it i think that this is very likely to be something we would want to only be optional i think the arguments about making it required being potentially problematic carry a lot of weight to me uh the other topic that comes up is about like the relationship of the point format to the curve and so like currently we've got the uh octet key pair which is used by like the x25509 and whatnot the cfrg curves and we've got the ec2 point format which is the traditional uncompressed point format that's used by like the nist curves and so if we start trying to bring in new point formats that are using compressed points we would want to think about how we're gonna signal that and if it's if the intention is to be able to use both ec2 and this new compressed point format on the same existing curves we might have some situations where it's hard to get interoperability or it's very complicated to reason about and so we might potentially and i haven't thought about this very hard but we might potentially even like define new curves that would use the compressed point representation as a way of having a clear signal that the different implementations are able to support it and that would potentially reduce the risk of drop issues uh and i guess i will yield to john and get back into the queue for my other topic i recognize john"
  },
  {
    "startTime": "00:56:02",
    "text": "um i i'm very can see me but yeah i hope you can hear me uh i i think it should be optional i don't know exactly what was discussed but i think it makes sense as daniel bentley has to register a new ayanna code point or compressed format it was discussed during the hp ke discussions but not really compressed point format rather compact representation i don't see any benefit of using compressed point over compact representation i think the most sense would be to register compact resistance representation in the http register and then use that in code thank you ben all right i'm back i've been uk and this one i'm more as the responsible ad at least for a couple more days there was a question about whether the bls algorithms would be in charter and i think given the ongoing cfrg work it seems fairly straightforward to say it's in charter for us obviously if the cfrg work gets abandoned or something and it doesn't complete we would not want to go forward but i think it would be reasonable to do what we currently have okay i appreciate that determination ben that helps some of the individual authors make progress um seeing it that the queue is empty i'm going to make a personal statement thanking ben for serving as a security area director for us and many other working groups and it's been a pleasure working with you"
  },
  {
    "startTime": "00:58:01",
    "text": "and if people agree with me maybe congratulate him in the chat and thank him our time together is drawing to a close i appreciate the productive session going once going twice we are adjourned thank you kosai working group for your participation i know i don't know if i joined it i think you can but let me see if i can save it got it all let me know if you can get it otherwise we'll send it to you"
  }
]
