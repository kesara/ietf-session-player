[
  {
    "startTime": "00:00:06",
    "text": "uh so francesca did you hear us i guess not wow something is using a lot of cpu right now that's not normal yeah that seems to be the medical tab hello marco hi baby hi everyone"
  },
  {
    "startTime": "00:02:20",
    "text": "i have apparently still been unsuccessful at convincing the medico people to sort all the jabber users at the end do you have a message that i can plus one uh let me uh so where do we where do we post suggestions for meat echo what is the discus we'll discuss okay i will i will post a message there and you can plus one now i think i had suggested it on the working group chairs list ages ago as the first time i suggested it anyway i don't know if we're gonna i know ian is not coming and christian is not coming i have not heard anything from michael either way so"
  },
  {
    "startTime": "00:05:50",
    "text": "one two three testing i heard you yeah but did transition francesca yes"
  },
  {
    "startTime": "00:06:10",
    "text": "and she's going offline again so unfortunately it's just you me and marco and francesca if she can get her audio working let's wait a few more minutes and see if we get anybody else i always hate to disrespect the time of the people who are prompt but uh what is that interesting sound in the background uh they are today is lawn mowing day in my neighborhood oh i had a guy with a chainsaw standing on my balcony yesterday so i think that's an improvement is that monthly the chainsaw yeah not mowing sorry is it what marco is that a monthly event in your neighborhood or yearly well no it's weekly um now it's uh it's supposed to be every tuesday but i guess because monday was a holiday in the u.s everything got pushed out a day i see [Music]"
  },
  {
    "startTime": "00:08:02",
    "text": "yeah they um they mow every week starting sometime in may and until um sometime in october okay it seems i'm not successful summoning other people okay everybody seems to be somewhere but not online well i mean i guess that we can just if you and marco have things to discuss um in this we can start it um like if you care about zebra picked i care i i don't have any particular point to discuss other than what i raised in the review right yeah so maybe i should actually write up that design that is on the slides i have a couple of administrative points near the end so maybe we can could at least go through those quickly sure what is it everybody's favorite subject um so we have one errata that was"
  },
  {
    "startTime": "00:10:02",
    "text": "reported a year ago on 8610 and we had a little bit of discussion on the mailing list but we didn't take that anywhere so who actually has the the ball in the court right now yeah the um the ad is the one who does the uh handling of the errata they look for advice from the working group uh we often for trivial things we just do it but um this one is not trivial so um you posted yeah a year ago to the mailing list i see that post i mean i guess uh if nobody commented on that your suggestion of hold for document update is can be considered the working group's advice to the ad yeah i think the the the text the notes for the hold for document update would uh mention that there is a missing pointer from 223 to 36 where that that additional effect that is actually supplied so that that solves lawrence's uh problem right here all the information is there it's just not properly internally cross-linked right i right i guess the thing to do with if francesca can't hear us uh the thing to do is just send email to uh seabor ads um asking that they close this um withhold for document update so i guess"
  },
  {
    "startTime": "00:12:01",
    "text": "i can do that thank you so we now have another participant right so francesco says she can hear now but missed the beginning of the conversation francesca the conversation is about uh errata report um 6575 which is on rfc 8610 and this the working group suggestion is to close that hold for document update so i'll send you that by email okay go on carsten yeah so just to to remind people what what the the underlying problem uh here is uh the we have this this weird syntax we use in cgdl for uh basing for essentially grounding the the semantical uh definitions uh in the syntax of sibor so hash 7.25 is is a major type 7 with an additional information of 25 and there is one weirdness in in that we when we actually add parenthesis to that we we are not using the additional information but the whole argument so the additional information just tells you how many bytes there are in the argument and then the the argument supplies uh the actual information so that that's um yeah um maybe not that greater design and um this actually came up repeatedly um in in various drafts where we tried to use some some generics and and couldn't make this work so you you cannot say dash six dot x uh somewhere in a generic or you you cannot compute tag numbers and if you could the syntax"
  },
  {
    "startTime": "00:14:02",
    "text": "would be uh really bad um probably not not possible uh the the way it would look like so it seems we want to do something about that in the next version of cdl because it has come up more than once in in rfc under under discussion i received to be completed and maybe it's this is it's worth discussing this together with other formats so for instance in the http with working group uh they found out that they don't have a way to talk about structured field values and cdl is approximately 90 percent uh useful for that it just doesn't have an obvious way how to base it on the very different generic data model of structured field values so this this is almost but but not entirely unlike uh jason so we would have to we cannot just rely on the analogy to to jason um here so that that's something that uh we should look at if we think it's a good thing that other um documents can use cdf for defining their data models of course you also could use yang but then you need an even heavier adaptation mechanism to to transfer the yang data model to the data model that that is actually uh being used here so that's one point i wanted uh people to start thinking about uh we probably won't have the the solution in in this meeting but it's definitely on the agenda for for an update to cdl"
  },
  {
    "startTime": "00:16:12",
    "text": "okay i'm wondering if anybody has anything to add them okay i make this point to to other people again and again and and see whether there is a point in trying to make this uh happen or whether we should uh frugally limit ourselves to sibo and json applications of cdl this is a bit difficult to narrate yeah so the the other discussion the the sibo pack discussion um we had a good discussion two weeks ago and i tried to uh flesh this out and uh i i now have a design that that i think can be made to work i haven't completely implemented it yet but what we took away from the previous meeting was that we won't have separate prefix and suffix tables and that we probably want to make the merge table available to additional processing that we hadn't um defined uh two weeks ago"
  },
  {
    "startTime": "00:18:00",
    "text": "so we we already have the the processing that is making use of the information for prefixes and suffixes but we haven't looked at other ways of using this and i have a little bit of slide we are doing that and let me just show how it looked like uh two weeks um ago that's the the one with the tank 51 and uh so what the the change would mean that we wouldn't have separate prefix and suffix table they would all be in one table and that just means we have to use different numbers here so we cannot start at zero again for the suffixes but then on the other hand we can use the same string for suffixes and prefixes so this is probably the the right thing uh to do um so what what we now have is we the package consists of the table setup tag uh the um sharing reference so a reference that just points into the sharing uh table and extracts the the item there unchanged and we have this argument reference thing where we have a tag that has both their their own data the argument and the reference into the the uh merged table and a bit that says whether this is a prefix or a suffix reference so that would continue to work on on pairs of strings arrays and maps as before so within those domains string area and map it would just work as prefix and suffix but it also could work with tags and by consuming such a tag"
  },
  {
    "startTime": "00:20:02",
    "text": "you would execute a function for instance like this midfix thing so the processing model is not really defined for packing that is not a change and for unpacking we would have the two processing models the accessor in place model which we have also called pointer tracing and the the unpacker model but the unpacker model where you unpack the whole packed silver data item that that can be described in terms of the accessor in place model so would just use the accessor in place model for defining the the meaning and um the the meaning is essentially and when you have an when you do an accessor in place uh unpacking uh if you are looking at a reference tag so one of the tags that we define in this document if it's a sharing reference then it has an implied number n somewhere in its in the tag which is 0 to 15 for for a simple data item and 16 or more for take six then you index the shared table uh apply the accessor in place uh processing to that and and return the whole thing and if it's an argument reference where which has an additional parameter the content of the tag that is doing the referencing then again you you do a lookup in the argument table and you run the accessor in place on both the argument and the tag content and then you run the argument processing which is dependent on the the flag this a prefix or suffix uh on the"
  },
  {
    "startTime": "00:22:01",
    "text": "reference that that was implied by the tag number and on the uh unpacked uh content which is referred to as the rump here so this this argument process uh would look at both the reference and the rump and if both are strings it would do a string card and if both are arrays it will do an array cad and if both are maps then it would do a map merge and otherwise it would do a function process and that's the new uh thing that that's coming in here and the the function process uh works by using a tag on one of the two uh parameters here on the reference value or the ramp value so there must be a tag there otherwise it's not uh not a valid uh accessor in place reference and we can use this v flag the prefix versus suffix flag otherwise we can use that flag uh to decide whether we are looking for the tag in the reference or we are looking for the tag in the ramp so it is completely determined by by the referencing mechanism and not by what you find in the referenced uh data which of the two is is true so essentially you find a tag there and then it's the job of the tag to tell you what to do so that's that's essentially the extension uh model here and let's uh look at that in an example let's imagine we define a midfix tag and uh we could uh put this midfix tag into an argument reference tag uh with the the index zero so we would extract the pack.example"
  },
  {
    "startTime": "00:24:02",
    "text": "and use it with the mid fix semantics that of course have to be redefined somewhere uh like for every tag and um then um the the function processing would find the the midfix tag because v equals one it's it's the one in the argument and not in the reference and uh the matrix tag says uh take my take the array inside me and put the the first element first then the referenced data and then the last element um so this can be done the other way around um so if we know we will be using pec.example in the matrix situation most of the time we can go to the v equals 0 reference so the the prefix reference and uh leave out the matrix there but put the matrix in in the argument table so this is essentially the the same thing but uh the diff differs in whether the referencing side says uh that we want to use the matrix processing or uh the argument table says that so this all works even if it's a little bit difficult to to express in one slide we have a couple of new terms the argument table which is the the merged prefix and suffix table and the argument reference which was one of the ethics tags and we have function tags that define some processing that goes beyond what is defined in in this document so the function tags obviously are the extension"
  },
  {
    "startTime": "00:26:00",
    "text": "point here the a generic unpicker would not necessarily know about all application specific function tags the generic unpicker would be able to find out that it just hit on an unknown function tag and then function tag unknown to it because the argument reference semantics are telling it using the reflect where there needs to be a function tag um if we are using a tag at all otherwise we have the three string array map uh mechanisms that that are implicit functions but if it's none of these three because we have a tag then that must be a function tag and the generic unpicker can decide whether it can it knows the tag or has to leave this to the application and the only thing i couldn't really figure out is how would the generic unpacker present this to the application so clearly this is outside what you can express by head just handing a zero structure uh to uh the application so we probably need to say something about that so this relies on on only ever adding function tags if we actually add reference tags then it's much harder to do forward compatibility so if we ever find out that the set of tags we have defined here is not enough that will be much harder to add to existing implementations okay so we said last time that we want to do this this whole sequence thing and the unwrap splicing proposal outside of this document and we probably don't want to do a cushion sync set of function tags in this document"
  },
  {
    "startTime": "00:28:01",
    "text": "but maybe we do it should do at least one so we have a we have something that people who are trying to implement sibo packed uh try to implement so they they have an incentive to actually get function tags uh going so maybe midfix is a good candidate for that but we can find that out um yeah then the the error handling the error handling of course provides additional opportunity for extension points i didn't find any particular reason to put extension points here but that's maybe one of the things that one should think about so right now you can do string plus string array plus array map plus map or tag plus any or any plus tag depending on on the v flag um yeah there's uh one uh ugly thing uh remaining tag six is is uh uh expensive as edge it's it's an efficient way uh tagging things uh so we are uh splitting tactics between shared references and argument references and with the fact that we now allow any um in the um set of parameters to a function tag we no longer can rely on the fact that there will be no integer there so this becomes ambiguous or at least if we define it the way it's defined right now it means you cannot use tag 6 for supplying an integer argument to a function tag and yeah if and the function tag wants that so maybe we should just bite the bullet and reserve another tag which would be 224"
  },
  {
    "startTime": "00:30:01",
    "text": "naturally um as a reference tag that is also using the first item in the argument table but doesn't have this this shared duty between shared references and argument references so this would be spending one more uh tag but it would make uh would avoid having this weird watch where you suddenly cannot use the the argument the first entry in the argument table for for something that all the other argument table entries can do yeah so extension points we can define new table setup tags we can define new function tags but we probably don't want to define new reference text that's that's my proposal to handle that and then we probably need to think about complexity do we want to do some profiling uh here i'm pretty sure that we will want to have a sharing only uh profile for for people who uh only want to do point out chasing and no function tag processing and then the the number two is the one with function tag processing and then maybe maybe there are subsets there uh as well and one question would be whether we we add additional tags that explicitly identify um this using a specific profile so that's the the questions to the working group i had prepared i hope that some people will look at this in the uh recording that will be up soon and try answering this this off list but if you have a reaction right now i would be glad to hear about"
  },
  {
    "startTime": "00:32:00",
    "text": "that i hear a roar of response from two people who are on okay so i guess we are done with the agenda um i'll note uh you've probably seen the message to the list that the chairs requested a session in philadelphia so we do plan to meet for an hour in philadelphia and we will work on an agenda for that over the next month yeah so the the assumption by assumption would be that we will have a completed uh reaction to the regular blast goal comments for the pac document before the internet draft deadline for that meeting so we will either have a second working plus call or however we we handle this um and discuss it in in philadelphia um i'm i'm not sure we have any big other agenda items but we will find out yep um yeah my inclination right now depending on how extensive things need to be is um that we'll just let any other working group comments on pact come during regular last call so probably uh when you post this revision we'll just uh send it up to francesca at that point"
  },
  {
    "startTime": "00:34:00",
    "text": "okay okay then i guess we are done for today we will meet again in two weeks agenda given and um i will not be here christian will run it so um christian will see you guys in two weeks and i will see you after that anything else from anybody before we close it okay it is a meeting enjoy your day thank you bye bye"
  }
]
