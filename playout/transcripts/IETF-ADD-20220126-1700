[
  {
    "startTime": "00:00:06",
    "text": "let's try this permission deny by system uh i may need somebody else to pull slides up um because i am getting a permission error from meet echo now when i try to share the screen let me try one other approach i apologize for those joining we're having some slide issues and but we'll be on with the media in a minute i okay how's that looking can people see the uh title slide right now awesome um okay i'll have to do that for each of the slides all right um so welcome it's uh 9 a.m here in pacific time i think it's time to get started i see we've got a healthy debate upon what you call abv participants adders has has been take taking off the the the uh choice and how many we have 51 participants okay and we've got uh the very chairs are here looks like it and we've got um uh ben is gonna be our one set of slides"
  },
  {
    "startTime": "00:02:00",
    "text": "for today so let's get started um welcome this is a joint uh intern meeting between um 80d dsl and deep um be aware this is this is and then i gotta change this slide here uh be aware this is an itf meeting and as such is covered by the notewell set of rules uh please be familiar with them for your participation i'll also add that this is covered by the sort of informal add set of rules which is be kind to one another even if you disagree be kind in how you disagree uh we get a lot more productivity out of all of us when we are kind to one another so that's not just an informal edd rule this is a modern guiding principle of the itf so it will be enforced formally even if it is informal and let me bring up here the main agenda for today forgive me i'm doing as a tab all right and then we'll stop sharing that one and i'm gonna share this one is that big enough for everybody forgive me i'm um i can't see what you see so what do you see right now"
  },
  {
    "startTime": "00:04:01",
    "text": "the agenda oh perfect that was the goal i'm glad i'm glad i achieved it let me bring it over here so um welcome i'm glendi um i'm one of the co-chairs of add along with uh david lawrence um this is joint server also we also have the chairs of dns op and gprive and i'll give everybody a chance to speak in a minute along with our error directories uh warren kumar who i see i misspelled warren's name my apologies to warren uh and eric um the goal today uh so we've done no well uh we need a scribe do we have anybody volunteering to help be subscribed for today's session and it's okay to have a couple one to sort of take the main notes and somebody else to fill in when they're getting behind or correct things and we can't proceed until we get a scribe so a volunteer is really welcome oh so glenn i'll i volunteer to take notes yep okay so we have a slide uh we have a thrive and we gotta volunteer to sort of uh be this be the one to follow the chat uh in jabber and and bring up any issues to the the group so uh yes i can do that thank you thank you very much uh okay so the agenda's been posted for about a week uh do we have any bashes uh for the agenda things that people want to add or remove this is the first part the reading about the background on this discovery the topic then we're going to break into a discussion uh with initial presentation by ben schwartz talking about a proposed approach on a few of the issues around um the split dns and discovery for it uh this is a a presentation light discussion heavy"
  },
  {
    "startTime": "00:06:00",
    "text": "session so it is going to be essentially focused around the mic line and the topics we we put up here are going to be to prompt you to have conversations around these topics if there's additional topics feel free to bring them to the mic line this is a open discussion for us to move uh forward on the on the the mind thinking here the consensus building so any changes people want to propose to the agenda okay fantastic uh well then let's get to the welcome from the chairs so um do we have somebody from uh diaz up suzanne are you on do you want to say a few words okay anybody else yeah [Music] um so welcome of uh participants um so as i think that dinosaur chairs already mentioned earlier uh that before itf meetings the dinosaur atd and deprived working groups chairs are sitting together discussing ongoing matters discussing topics that might be of interest of each other's working group and make sure that it gets attention in the different working groups this is one of these topics that didn't split so yeah we're looking forward for the participation of between the talk participants or the participant members or sorry dinosaur members and yeah give their perspective and their clue on the topic being discussed today that's it from the dinosaur series and with one of the chairs of deprived like to that to me yep that's me i was actually going to add to that um the discussion around split dns"
  },
  {
    "startTime": "00:08:01",
    "text": "um is kind of it's definitely more of a dns you know it's a topic that's near and dear to a lot of the dns folks and um and i think some of the stuff that's going on especially with um what you're using to try to key on things or or uh flag things definitely sort of falls there's definitely some deprived um pieces here or or they could over they they do seem to overlap if you sort of look at it in that sort of way it's probably the right way to put it that may not be the right way to looking at it but um they do kind of look that way so that's all i'm going to say um eric would you like to say from the perspective of the 80 the 80d uh um a.d drive and deprive don't forget yeah so basically very short glenn so first thank you for all the chairs to come together and all the participants of the working group it really means to believe that we may need to see whether a dns directory could be useful at some point of time to gather the interest and the other part is more like a logistic warren told me he will be late by 15 20 minutes so don't expect him into the beginning of the meeting and let's do have a nice meeting thank you so um uh uh tail do you want to say a few words before i jump in or uh just hello all you uh wonderful standards concerned fellows um thank you so much for taking time out of your day to come here and discuss this particularly thorny problem with us thank you dave so uh how this is gonna work today is i'm gonna play the role of your master of ceremonies uh which basically means i move the agenda along"
  },
  {
    "startTime": "00:10:00",
    "text": "as we go and when we seem to get on a topic where we get to a place where we're we're um sort of got nothing new to say on that particular topic we'll move on to the next one uh mr lawrence is going to manage the mic queue uh so that that way we'll know who's supposed to speak and when and uh other than that we're going to sort of jump in um let me introduce a little bit about the background for this and and this is largely for maybe people that haven't followed the the add list very closely so adb has been working on the discovery mechanisms for encrypted dns servers whether they be do or dot and we've got a couple of mechanisms now that are one is really well suited for the open internet uh and it's uh uh um uses the uh uh the records and publish the url within the dns uh i encourage people to go read that draft and then they're linked here at the bottom the draft number one and two discovery designated resolvers and then dhcp and runner advertisement so this uh the dnr is an approach for how you do it in um in environments whether you're either using ghcp or weather advertising um and their documents are fairly mature along along the way we in the discussions of the group came hit a bit of a bottle uh or not bottleneck a bit of a wall we as a group have decided that the problem of doing discovery in split dns environments is important oh it's an important one to solve one of the worries of course is that if we do nothing in that environment knowing that the environments of themselves very prevalent in operational uh spaces in enterprises organizations all many other places if we do nothing then ultimately that community will figure out how to do their own discovery mechanisms and there'll be a bunch of ad-hoc ones not standards-based"
  },
  {
    "startTime": "00:12:00",
    "text": "and once you get that genie out of the bottle it's very hard to put it back in and come up with a discovery mechanism that is standards-based and so the group has said it's important as a use case to solve but we um had a document which came up pretty well written very mature document as well but that which failed to get um adoption um uh through a consensus the consensus call for working group adoption i'll note however the group didn't reject that documents approach and hasn't said this is a terrible document uh i would more characterize it as we were not ready as a group necessarily to adopt that and there was a bunch of issues raised around uh the discovery uh needs in a split dns environment a lot of around things like validation of the resolver's authority to serve out those domains uh validation of the answers that would come out of them uh there is even discussion about the potential role and use of dns sec in some of this problem space and so we realized there was a bunch of these topics which were very much out of scope of add which was only focused on the discovery question you know how do you do discovery these other topics were beyond us and so uh this is sort of the the genesis of this discussion of well what is the indigenous environment what should be considered by edd and then hopefully the goal here is that we get to a place where we have those questions some consensus around them and that the add group then goes okay now we know how we think we should move forward and what features and behaviors need to be in a discovery mechanism for the split dns environment okay so hopefully that sort of tease us up for the conversations come forward moving on um so acknowledging that split dns is widely deployed we're not here to discuss how to get rid of that"
  },
  {
    "startTime": "00:14:00",
    "text": "environment we're not here to do a referendum on the practice uh some people hate it a lot of people love it a lot of people hate it too but accepting that it's there and if we do nothing this is a genie that we'll get out of the bottle on how to do discovery let's move on and talk about this so we're gonna kick off with ben schwartz uh who uh along with a bunch of other people and then i assume we'll have them mentioned on his title slide um has put together a presentation uh bringing about 20 minutes for this one followed by discussion uh and then uh we'll move on to the other topics uh that are around this topic space as you can see in two two and two three um in the agenda and hopefully that'll take us up to about five or ten minutes before the end of the meeting then we'll have a quick wrap up and see where we're going and that's about it so ben how about i turn control over to you and we'll uh see your presentation hopefully we'll get the creative juices going and let's see i will stop sharing my screen and then are you able to take control now here button should start working there it goes okay do you see slide does anyone see slides can anybody okay great let's get started hi everybody uh i'm ben schwartz uh and this is a presentation based on uh based on that non-adopted draft that that was just mentioned but this is not a presentation of that draft this is a presentation of really the background material talking about what split horizon dns is and some thought based on the the work that we did to try to put together a solution but this is not about"
  },
  {
    "startTime": "00:16:00",
    "text": "that solution uh it's it's meant to provide us with food for thought for this discussion and maybe some some shared definitions to work with so to start what is split horizon dns there are a lot of different ways to define this i'll just give you the the one that works best for me which is that the network provided resolver gives you answers that are meaningfully different from the answers you would get if you just went and asked any other general-purpose resolver meaningfully different is not an objectively defined phrase and so it's not always clear whether you're doing split horizon dna it might be a matter of opinion but if the difference is meaningful to you then i'd say that's split horizon and there are a bunch of different reasons people do this people do this to create corporate intranets uh with domains that are only resolvable from inside the network people do this to have a domain that exists on both sides of the network but behaves differently depending on you know resolves to a different version of that domain or sometimes it's just an optimization but it's a very a very pointed optimization like putting a high traffic server physically inside the network and making sure that that's the result you get if you try to resolve the domain from inside that network so this is used in many different kinds of networks one thing i didn't mention here actually is infrastructure uses of split horizon dns among servers that's something i'm a little less familiar with but there are a lot of different reasons that people like to do this so that's the basics let's also talk about dns hijacking which is kind of the"
  },
  {
    "startTime": "00:18:01",
    "text": "the dark side of split horizon dns so dns hijacking here we're saying is answering queries for a name when you do not have authorization to do so from the zone and again authorization here is not meant to be a technical term this is a human term and so whether something is dns hijacking might depend on the social nature of your relationship with an actual person who owns that zone dns hijacking is not allowed within ietf standards i think that's clear both from general architectural principles in rfc 2826 and also on a technical basis from dns sec and many other documents that talk about what it means for dns data to be authentic or for a delegation to be authorized so the obvious example here is answering for a domain that exists when you don't have permission from the zone that contains that domain legitimately but there are also interesting variations on this one of them is nx domain hijacking so that's in injecting an answer for a domain that would be nx domain if you actually resolved it to the to the authoritative owner and a version of that is inventing new fake top-level domains that don't actually exist in that case you're doing nx domain hijacking in the root zone and then maybe a new term that uh that i found helpful to think about this space was that if you're doing split horizon dns and you're not dns hijacking then you are doing authorized split horizon dns so the the local resolver has been authorized by the zone owner to actually serve these these local answers okay"
  },
  {
    "startTime": "00:20:00",
    "text": "another thing we have to talk about if in this space is that we're going to bump up against some intractable topics we're going to bump up against some topics that are essentially out of scope for the ietf or are not really things that we can solve here one of those is the nature of trust relationships because sometimes devices are connected to networks and they're managed by different entities that don't have a high degree of mutual trust when that happens each of those parties is going to have its own policies that it's going to apply to the systems that it controls probably each party is going to make those policy choices based on things like their security assumptions and uh so they're going to make those choices independently and it's at least for add although this is a this session is a little bit interesting because it's not clear if this is just an add session but but certainly in add making any recommendations about those policies is is strictly out of scope in general i think that standards development is not a place where we can get people to change their security assumptions and if their security assumptions are not compatible then they're not going to work well together that's not something that we can really solve we are in the business here of providing technical solutions for people who actually do have compatible goals and do want to work together and so my my plea to the to the session today is to focus on use cases where all that's missing is a technical solution and and try to not focus on the situations that we just really can't resolve ourselves uh then michael richardson has a question do you want to save them for the end or can you take one right now"
  },
  {
    "startTime": "00:22:00",
    "text": "uh i can take a question okay go ahead michael hi ben i i i wanna i think this is a very important slide and very important thing and i think that one of the the things often is that people think that they have compatible security assumptions because actually their terminology is is overloaded and um incompatible so they both think they have a banana but in fact one of them has an apple and the other one has a uh potato right but they're both they look like the same color so they think it's a banana and so i think i i'd like to add a point here which is that there are some use cases where the thing that is missing is an accurate technical description and then it would be obvious that we have an incompatible security assumption thank you would you include that as as as a in focus then uh absolutely good so how do we make progress in my view the way we can make progress here is by looking for situations that are technically interesting so we can think about the effects of different policies we can look for combinations of policies that might exist and then when those policies happen to apply then there's a technically interesting problem to solve so for example if the client is always going to use the networks resolver then it's always going to see split horizon names if the client never uses the networks resolver it's never going to see those names these are boring cases there's just not much technically interesting to do in either of these cases in my opinion although i'm you know after the the slides we can certainly talk about uh talk about that if people disagree but i think there might be an interesting technical case for clients that sometimes use the network provided resolve but to talk about that we need to i"
  },
  {
    "startTime": "00:24:00",
    "text": "think introduce another new term at least this is how it this helps me to think about the problem i call it a hybrid resolver first i want to show you these puzzle pieces i'm sure this is a little weird for people who didn't look at the slides in advance but this is my attempt to give you a conceptual model of how dns resolvers are composed so we have these different building blocks things like asking a dns question providing an answer sending a query or an answer over a response over the network accepting a a query over the network and parsing out the question [Music] taking a question serializing it into a query sending that over the network and then the very complicated business of iterative resolution with multiple network paths so let me this will become clearer on the next couple of slides so if we take our question source and plug it directly into a remote answering function which sends out our queries over the network i think that's what we call a stub resolver and if we take our network frontend which accepts queries over the network and parses them and then forwards that sort of re-serializes that into another query and sends that along a different path that is what we call a dns forwarder if we accept queries over the network and then turn those into questions and then perform iterative resolution to resolve the answers to those questions that together is called a recursive resolver if we just answer them locally that's an authoritative server this is my my mental map of dns functionality why why am i giving you these building blocks because i want to introduce a new one the idea of a question dispatcher or you can think about this as a question policy that takes in a question a dns question"
  },
  {
    "startTime": "00:26:00",
    "text": "and potentially does something different with it according to some local policy has at least two different behaviors that it might apply and so i submit to you that hybrid resolvers are actually everywhere almost all of the things that we call stub resolvers or recursive resolvers or at least a large fraction of them are actually a little more complicated they're actually hybrid resolvers here's some familiar examples if you have a posix style stub resolver that sometimes answers dns questions directly out of etsy hosts without ever serializing a query but sometimes it actually most of the time it forwards that the queries to to some upstream resolver uh i submit that this is a hybrid resolver it's not strictly a stub because sometimes it answers the question locally and i've sometimes heard the term authoritative resolver to describe this if you're running a dns server so it accepts an incoming query over the network and maybe it answers it locally out of a zone file or maybe it actually performs iterative resolution and asks other authoritative servers again i would say that this is a hybrid resolution behavior so with these concepts we can now put together i think a clearer definition of what the interesting case is here and that is the case where both the client and the network provided resolver are actually hybrid resolvers so network has to be a hybrid resolver because otherwise it's not doing split dns it's essentially a hybrid network resolver that sometimes serves answers locally like out of a zone file to me that's sort of the definition of split horizon dns and uh as i mentioned earlier for this to be for there to be something interesting to talk about here i think that we need to talk about clients that sometimes run their queries through the network resolver and sometimes"
  },
  {
    "startTime": "00:28:01",
    "text": "are able to answer query some other way maybe by another remote answer behavior that forwards queries to a different upstream resolver or maybe even local iterative resolution it doesn't really matter but to me this is the interesting case because the question then becomes how can the how can the client and the network cooperate so that the client gets access to the network's local zone or local zones without within the parameters of each party's threat model so now let's talk a little bit in more detail about the scope of uh of our conversation it seems to me that there are a couple of things that we can easily do that we can that we can do as standards development actors the easy thing is we can enable clients to learn about the split horizon names that are available on this network the hard thing but maybe possible is to enable clients to distinguish dns hijacking of those names from authorized split horizon dns where the network provided resolver actually is authorized to to serve those names so the easy part of just conveying those names we actually have a lot of good tools for this already provisioning domains defines an extension for this to be clear provisioning domains doesn't authenticate the contents of this in any in any way what they what provisioning domains does offer is identification of the source of the provisioning domain claim but it's not not necessarily true that there's any"
  },
  {
    "startTime": "00:30:00",
    "text": "trust relationship there that would allow that party to make claims about what dns zones it should control there's a standard for split dns configuration for ikev2 that's vpn configuration and the nice thing about vpn configuration is that there is actually usually a pretty close relationship between the client and the tunnel operator there's a usually not intrinsically uh a certain amount of trust there that and so this this draft actually allows a lot of affords a lot of power to the to the tunnel operator it even lets them override dns trust anchors for the client but it also assumes that there's a certain amount of user confirmation some sort of not very clearly specified white list but so that's that's the state of the art for vpn split dns and finally even the old dhcp search option is actually very close to what pvd offers you know really this is just a the problem of distributing a list of domain names to clients on the network is is not that hard to solve and it maybe is already solved but the hard part is how to confirm authorization of those names so what would the client need to confirm that that local resolver is authorized to serve a given dns zone so here's my my personal view of what it would take the client needs an identity for the local resolver and normally in classic dns configuration the client doesn't really have an identity for the dns resolver if in dhcp in ipv4 all it would have is an rfc 1918 address which is not really much of an identifier at all"
  },
  {
    "startTime": "00:32:00",
    "text": "another thing it would need is an assertion by the zone owner that it authorizes the local resolver to serve this zone so presumably we have to imagine that somehow the local resolver has a name and then the zone owner can assert that that name is authorized to serve the zone uh but if you fetch that assertion through the local network then then the local network could be tampering with it could just forge that assertion and so we need some way that the client could somehow convince itself that that assertion was not forged and finally we would need a secure transport to that resolver so that we actually know that we're talking to the entity that was authorized by that assertion in classic dns we didn't have any of these four things and so it was kind of a lost cause to to try to do authorized split dns or maybe we could call it authenticated split dns where the client actually confirms that authorization but there's been some progress in dns security over the last few years we have encrypted transports for dns and with add we have a bunch of new drafts about how to do more secure bootstrapping and transport bootstrapping of those secure transports so and this is the only time i'll mention this draft this draft found some some pieces that you can put together to cover these four things and this isn't the only way on each of these four things there are there are many different ways you could imagine but what this draft said is look the the dnr draft which is adopted in add actually does provide you with an authentication domain name for r and it tells you how to set up a secure transport which proves that ownership of that that authentication domain name to the client"
  },
  {
    "startTime": "00:34:00",
    "text": "and an ns record is a good old-fashioned way to assert that a given server by its domain name is authorized to serve some zone so that gives us number two and the last thing we need is number three a way to ensure that that assertion wasn't forged but remember we're we're focusing on this hybrid resolver client case so we're almost assuming from the start that that we're talking about a client that has some other resolution path to the global dns so if we if we further assume that that resolution path is over a secure transport to a resolver that's not affiliated with the local network then that actually provides a straightforward way to resolve that ns record in a tamper-proof fashion a way that the local network couldn't have modified so that's one way you could do it that there's actually also at least one other way mentioned in the draft which is to use local dns validation so in that case the client actually could resolve this record through the network's resolver without trusting it yet and then use local dns chain validation to confirm that that ns record is valid and that the local resolver is authorized as a name server for that zone so i hope that gives you a tour of what some of the ideas that we've been batting around about how to deal with split horizon dns mostly i want to emphasize that there are some new opportunities here because dns security is changing and improving we have new opportunities to improve the security of split horizon dns but we do have to focus on use cases where a solution is actually possible and we're not going to be able to solve this problem in a way that works for every network and every client"
  },
  {
    "startTime": "00:36:01",
    "text": "the question is whether we can find a solution that's useful to enough networks and enough clients that it's worth writing down thank you um one comment before we open the mic line is um the draft that was in add we sort of structured this session not to be a major discussion on that draft it has ideas which ben has presented that's pretty laid up so the request is that let's focus on the ideas um and not debate the draft itself the draft will be covered at itf 113 during the agd session um so let's stick to the ideas versus the particulars of that particular match fair enough all right mr lawrence i turn the manager with the queue over to you and first up is paul routers please we can't hear you paul your mic is active but perhaps a local mute we still cannot hear you paul okay paul will be back in a minute tommy polly please who yep go ahead tommy tommy had activated himself and then okay paul's back tommy's back all first let's try paul first oh paul still can't hear paul let's go with tommy yes we can hear you tommy great yeah uh sorry uh meat echo had popped up a window here that wouldn't let me click on anything because it was having trouble connecting to audio so that was useful all right um thanks for the presentation ben uh a lot of people are saying your diagrams are great so yeah thank you for that"
  },
  {
    "startTime": "00:38:00",
    "text": "i had a question just on scope for the discussion if you could actually go back one slide um or if you're still controlling that yeah um so yeah i think the list of things you have here makes sense for some of the use cases um but it is focusing on the case where you know you can even try to prove that a resolver has permission to resolve that name because it's like some public zone um there are you know as i think you mentioned earlier in many cases where that's not going to be possible like maybe i just have some like weird walled garden network with just some like local names of servers to like access some video content or you know i the the split dns is just coming up with its own names and that's possible within like the vpn case it can just say yeah i'm just going to come up with whatever and there certainly are cases where you know a device will want to be able to access local names that are not going to be anything that's going to be publicly attestable so do we think that is in scope for this discussion around split dns since that is so common i'm concerned that if we don't allow that to be in the solution space we're going to miss out on a lot of cases sure so uh the chair should tell me when when this section is done and i should stop um answering trying to answer all the questions that come in but i'll tell you tommy i'll tell you my my perspective which is uh if your name doesn't exist in the global dns and so can't be delegated to you in any secure fashion then you are doing dns hijacking you are hijacking something um if you are not hijacking an actual like.com"
  },
  {
    "startTime": "00:40:01",
    "text": "name or something then you're hijacking the root and this does actually cause real um you know classic compatibility problems like it's a pain for the gtld program at icann which has to figure out like oh we got a gtld registration request for this name but is this actually a popular split horizon name that people are squatting on and it's going to be a big mess when uh when it actually becomes real and registered so uh i think that this topic of of how to handle how to handle split horizon with dns hijacking is absolutely in scope for us we should think about how we want to handle it and respond to it but my personal answer to that is that i think we should respond to it by making clear that it's not something we can support really it's not compatible with a global dns and what we can do is is essentially guide people toward architectures that are more supportable and sustainable okay and well i just wanted to add that ben is not on the spot for addressing all of these questions this is a this is a discussion between all of us so i appreciate very much hearing ben's thoughts on it but it's this is not ben's presentation that he has to answer for right like so so let me ask the chairs um if this i'm happy to answer this queue um but also if you'd like me to step out and get in line i'm happy to do that well i think for as long as people are addressing things that have come up in your proposal i think it's great or your uh framework here that's not really the right word but i hope you understand what i'm trying to say um that that this is still a useful um that this is facilitating useful discussion to have you"
  },
  {
    "startTime": "00:42:01",
    "text": "um okay addressing just what you brought up and uh if tommy if you were done or no i i was just gonna respond quickly to ben okay um as far as you know when we're talking about the things that are easy or possible to solve um i i'm skeptical that we'd just be able to tell people oh yeah you know hijacking a name on your local walled garden is bad you shouldn't do it like that that will just make them stop um and you know in practice because as as we have for products like private relay tried to handle the case where we're now doing some encrypted dns that's not on the local network the case of saying all right i can't find this name externally i can fall back to just trying locally it's actually quite easy and so like we could say essentially you know there's this whole category of things where if you can't resolve it on the public dns and you can't get anything else all right try some local fallback if that's within your policy that could solve a huge swath of cases both for cases where it's a dns hijacking or even if you do have permission for the internal domains they're just not publicly accessible and really what i think remains as the very tricky technical problem if we think that other solution is acceptable is dual facing resolution where i have a name that is in the public dns and also wants to resolve differently on this one network because of some enterprise policy and that's the one where we need some extra assertion thank you tommy oh we're ready for you now unless uh yeah we can hear okay go paul excellent so um i did reconnect so i'm sorry if i'm i might be saying something that tommy my co-author on the split dns for ipv2 has already said but um i just"
  },
  {
    "startTime": "00:44:01",
    "text": "wanted to make sure we had a lot of site meetings with with the ad and the tls working group chairs and acker and other people when we did the the ip2 version and specifically even in that situation where both the client and the server are authenticated and they have a trust relationship even on top of that it was required that we add restrictions in a way that you know we could not do certain domain hijacking to the point where that's why the the allow list for instance appears on the rfc so the client already has the list of expected domain names it's allowed to be overwritten when it talks to the server people are really afraid that having this sort of blanket approval of like well you have a trust relationship so you can send us any list of domains including gmail.com and we'll do it was too dangerous and i see that um so so so yeah so so if you look at that there's no authentication it's not really true your authentication was based on provisioning right which is authenticated so so with that said um it is for the non vpn case there is no authentication there is no trust relationship between the network and the client possibly and that is where the real promise i think if if there is a trust relationship with the network you can do something like what the ikv2 rfc did with an authentication list and you'll have to provision it but that's fine because there's a trust relationship to provision with if you're talking about coffee shop networks and things like that or hotels then obviously there is no trust relationship there and people in general don't want any domains to be overwritten and then unfortunately i it becomes really like you know do you hide this from the user or do you let the user make a decision and either of these decisions are going to be working badly and i'm not sure if we"
  },
  {
    "startTime": "00:46:00",
    "text": "have a good solution for this space in that sense um and just one last one the public zones of something like example.com externally and internally having compexample.com or just example.com also internally these are really common scenarios where they're different and a solution really needs to support all of them if we're if we're going to limit that based on assumptions that the internal and the external network have to in some way synchronize then i think that the solution will just not work okay yep ben do you have something to say back or can we move on to uh yeah i i'll just add that um you know we've had a long mailing list throughout the addi some people here maybe aren't on the ad though so paul and i have had a long discussion on the add list about the question of uh of cooperation between management of internal and external name spaces and what that would require i'll just know that the you know this also talks about the need to authenticate the identity of the network resolver right so that's that's not the only interesting technical problem that this this brings up that's not the only way in which this is currently science fiction warren marino hats um so i mean i'm somewhat concerned that a lot of this views much of the dns sort of as a spherical cow right like this is how the dns is described this is how we think it all works and so we can just do these things and there are a lot of things that are a lot more messy for example dns-64 dns-64 you have resolvers which generate answers um with the ipv4 address mapped into an ipv6 one and it's not in any way clear that they would count as sort of authorized according to this why not you know dns-64 is an ietf"
  },
  {
    "startTime": "00:48:00",
    "text": "protocol it's written up in an rfc and it's widely deployed there's also this sort of thing is used in many many cases poor voters said probably your coffee shop resolver shouldn't be able to do this um and users wouldn't want the coffee shop resolved to do that but often they would because if the coffee shop resolver doesn't do this then you're not actually going to manage to get on the network because you won't get through the captive portal so there's a lot of things which it feels like is being proposed here but doesn't have doesn't address all of the problems and sort of feels into the hijacking is bad if we tell people not to hijack or create some process so we can tell when they will they will just stop doing that and i don't think that that's true i also think that a fair bit of this needs sort of wider discussion um serving dnsop for example could have more of the this is what we're proposing and then operators could say well hang on a minute it doesn't work in the following 37 cases um and rant over i think okay great thank you warren andrew kampling please yeah hi uh thanks uh for that um two good two points ready uh one is which was made in in the chat uh about the the risk of of uh with with some of the methods of been discussed leaking names um which would be a problem certainly in the enterprise space potentially um if if i think it was tommy that suggested you maybe check externally first and then i only look to the uh so local resolver if if in the event of failing um with an external resolver and then that does risk leaking names which will be a a concern as i say for some enterprises um perhaps a more substantive point if"
  },
  {
    "startTime": "00:50:01",
    "text": "to validate the the the the the that that this isn't hijacking that this is done uh in an agreed way you you've that the client needs to have access to a second dns resolver again in some enterprise environments um i think they're actively trying to not allow access to alternate resolvers and i think that's recommended practice from amongst others uh the nsa uh in the enterprise environments to uh with for example encrypted resolvers to only provide access to a corporate uh encrypted resolver and block access to third-party encrypted resolvers so if if the validation method that's recommended is you need access to those external resolvers that might not work in enterprise uh examples where they're flying recommended security practices well i'll stop there uh thank you very much and um fortunately okay um ecker please yeah hi uh uh sort of three i think hopefully not two not two hundred virtual points maybe the last one won't be um the first is that on the fallback thing um but we do it as as um as tommy suggests um when you uh you know if you can't resolve a name um you uh uh you you fall out to local resolver um it is not a deal for both the reason andrew indicated which is um that it leaks um internal names which actually i'm somewhat less concerned about um you've seen my seatbelt see my previous commentary about um uh uh about about the trust in the resolver but also these external names which i am more concerned about so you know if i attempt to type you know if i attempt to type gmail.com and i type gsnail.com and that's not doesn't resolve and that does release their local resolve which i don't want and so um and so it is desirable to um you know and that's that's not a great example but like you know if it's like the secret secret label but the but the main the 2ld is is is is right then it"
  },
  {
    "startTime": "00:52:03",
    "text": "also leaks um and so it is convenient even if you don't trust it to have an assertion from the um print local resolver the names that it allegedly controls so that you can filter out those for like for fallback resolution um so you know if for instance like i knew that you know if there was a way to tell you know the browser um for instance that the local network only you know only attempts to control things that end in corp.example.com then when i you know didn't resolve g still i wouldn't even try so that would be helpful um the um uh second point is um to warm as mentioned the captain portal um that's actually a special case that everybody's special cases so i really wouldn't worry about that too much um the standard procedure um for people um for things um uh for i don't know how probably relay works but you know how firefighters power network works i know how a firefox doe works is to do capture portal attachment prior to like doing anything else precisely for the reasons you indicate so um you know i i i i'm sure there are many reasons to indicate to the client that there there's um that there's non you know non-transparent behavior but the counterpart is probably not one of them um and of course you do have a cap working group for this kind of material material um i think the the the last um you know uh um uh uh a thing that i'm going to say which may be slightly more controversial is i do agree that in principle um you know if i um uh um if i decide to um you know advertise names for ecker um that i'm hijacking the root but in practice um there's a a difference in that there's um you know one might think of there being um uh um where there actually is or there's not um authenticated dial existence of dudacker um you know from uh um from the root um and so it is possible to determine in general whether or not this is a um a domain name which does not even exist in principle versus one versus one which which i'm merely overloading and um so we might imagine having that differently um it does feel a little different at least um by which i mean you know if we had if we"
  },
  {
    "startTime": "00:54:01",
    "text": "had a solution uh i feel like the harder tactical problem is the problem of um that we i know you and um reuters were discussing on the list of like how to like how to like carve out parts of like the valid space um um you know um but for the practical matter if the name cannot be resolved in any case then i might as well trust the local resolver about a status because like that's all the information you're ever gonna have um so i think that's probably has more controversial opinion but um i'm less bent out of shape like that one it seems like a policy question with a touch of a question thank you yeah thank you ecker paul vixi please hello hello paul ah good thank you good morning everyone let me start by thanking uh everybody for getting organized around this it's a very touchy and broad topic and it's been difficult to address and this meeting feels like progress to me um i wanted to represent a use case that is not compatible with one of the models i heard discussed and that model was first check the global dns to find out if there's an answer and then if there isn't an answer uh do something maybe go ask that question of some locally advertised resolver so that names that aren't in the global dns will then be locable uppable i recognize this as a strict definitional implementation of the split dns problem as it has been described the the pr the in practice uh definition of split dns is more subtle and it includes the idea"
  },
  {
    "startTime": "00:56:01",
    "text": "of filtering results so not just the ability to say hey i've got some names which aren't in the global dns here's how you find them what's actually happening and this would account for not only enterprise but many university government military educational corporate uh and family small small office home office so it's a very broad industry-wide use case and that is uh the local resolver may have policy and that may be introduced through some mechanism like rpz that doesn't matter there may be policy that would say that certain names if you query for them should not work for example botnet command and control names or certain responses that contain certain addresses or c names or mx's or whatever should not be resolved and should indicate to the stub that there's a failure maybe a false indication to this dub of the non-existence of some global name uh based only on the response to the the cache miss rather than based on something that is apparent at the time of query which would be the query name in that case the idea that an application doing dns is going to consult the global dns first and then only speak to the local dns if the global dns has no answer uh is either a non-solution to the broader problem or a making worse of the broader problem and so i hope that that knowledge will be incorporated into the discussion and again i thank you for the constructive"
  },
  {
    "startTime": "00:58:01",
    "text": "uh tone of of these discussions and thank you paul welcome back mr wilders whose av problems are hopefully all sorted and he will be popping up and he's saying oh he just dropped from the queue well glenn it's your turn so i was going to say ben thank you for the presentation i think the conversation sort of evolved into a more general case so i think we'll sort of switch over to sort of the more general open discussion um a couple things i will note in the conversations i've just heard it would seem that whatever a discovery documents that come out of add on this topic we're going to need to be very clear in the materials in those documents on what use cases to narrow them down so that it's understood what is being addressed and what's not being addressed because this is a this isn't a a large elephant we have to tackle this the herd of elephants they're all slightly different so that's sort of a takeaway i'm really pulling out of this as sort of a big picture thing that we and and it would be really awesome if somebody were to document all these potential use cases because i think that the dns rule could really benefit from the long term from having that but that's definitely on the scope of the add in our mission there well that's what tim wisinski has been doing for us all along so thank you tim okay let me um throw up the general agenda screen sharing permissions"
  },
  {
    "startTime": "01:00:02",
    "text": "interesting i can share chrome tabs but i can't share other pieces all right there's the general agenda so um as soon as the my cues settle down let's move on then to sort of the this general open mic line um and here are some seed issues to get the conversation started feel free to pick up a different topic and and may ask yes the way to do this is is to state what your topic is up front if you do it a different topic um and then uh go with it but that way we all know what the comments are coming in about but here are three seed issues um is the validation resolvers a resolver's authority to answer queries for domains needed in general does this it's not something we have today in other environments sort of um is answer validation needed in these split dns environments uh and then getting over to the dns sect discussion well you know generally today dns is not being used in the 53 environments um is is you know is is this different is there you know since we're now in this environment where we've got these other features as ben noted available to us now is this time to you know say i say yeah yeah it needs to have a role here um and and needs adoption and that of course would you know trickle down to things like clients uh doctors supporting uh the nsx stuff so those are starting questions feel free to go in other directions and we'll open up the floor um to discussion which could be dangerous but let's go just try it anyways"
  },
  {
    "startTime": "01:02:00",
    "text": "so far doesn't look that dangerous so rather shocking non-stampede of people for discussing this i wonder if we should start pulling in people from the very active discussion that's going on on the chat i'm finding it shocking that ads crowd would not have opinions yeah yeah well paul paul waters is back i welcome the ball so okay hi uh paul vogt speaking um one thing i i kind of find missing so far is that i would really like to see a sort of way where you can where a network can present a list of domains and some sort of authorization over it that it can give to the client and then the client can via whatever method valid tried to validate that list and and that's that i don't think there's a document that tries to do something like that the documents that are now proposed are all trying to tie it back into public dns um i would like like what if it's some ca certificate that signs the or a sorry a certificate that signs a list of domains that the client can then validate and if the client believes that certificate can make that claim then it can just reconfigure its network okay uh thank you paul christian wiedema please uh we have this discussion already on the uh on the chat i was wondering whether we should make some kind of uh assumption about the way the client accesses the internal host"
  },
  {
    "startTime": "01:04:01",
    "text": "i mean if i'm using as a secret if i'm connecting to internal.exemple.com am i doing that on the public internet in a way that everybody can do it or am i doing that because i am connected either directly to the enterprise network or through a vpn because if we reduce the problem to making split dns work for internal host or vpn with host then we probably have a much simpler problem to solve yeah was there more christian no no i'm sorry um i just i i i really think that we should have this this discussion about network topology and for which network topology do we want to solve the problem okay great uh thank you echo please so i came in a little late this morning so perhaps this got presented earlier but like i'm not sure i have a clear statement of like what what we're trying to do i guess what i would say is um you know and obviously if you use like i mean in an existing world um you know where you just trust you know your your your resolver to tell you what to do then like it's free to do anything at once which is how expensive works in the first place um and so it seems like we're talking about two interactions with security uh two interactions um where that is becoming more problematic and maybe there's more but it nice to see a list in that case um one is dnsec which is to say um the what what um uh looters and"
  },
  {
    "startTime": "01:06:02",
    "text": "uh men members discussing the list which say um you know domains which are nominally dns sex signed but then wish to have um to to use um and um uh um and and that of course an obstacle to domestic deployment if these people should also deploy dns for those domains um and then there is um a sort of set of like um uh i guess i would say um non-corporate uh or sorry um non-default um resolvers um like for instance uh transfer cursors over um that we use or private relay or things like that where um if you just start the public resolver um then you get um then you get an answer doesn't work for the local enterprise um um so are there other k like what other cases are there that like where like that like this is now a concern that it was not pretty concerned because i say um you know i wasn't previously concerned basically at all um so like what other cases are that need to be resolved and it's not clear to me that those cases will need the same you know have the same answer so um um in particular like i think that the you know uh um the answers i saw being floated around for um for for uh the dns you know exception cutout case seems like they they might or might not work but like i don't have no have almost no application to the um the sort of sex scenarios uppercase great thank you ecker ami pauli please all right um so going to one of the questions on this on the slide that's coming up you know is validation results authority to answer queries needed i don't think it's always needed as an answer to that um [Music] ecker earlier mentioned a case where just having a hint is actually sufficient to do something interesting um as a way to fall back"
  },
  {
    "startTime": "01:08:00",
    "text": "i do like the direction that paul reuters was going in i'm just saying you know we kind of just need an alternate way to back up the hints about the what domains should be split and that doesn't need to be based in checking against something in the public dns or checking dns sec i think that clearly translates to the vpn case which is one of the cases that we actually already have solved and in the vpn case i trust this list because i trust the vpn authentication based on whatever local configuration or certificates i got from my enterprise and because i have that and it tells me the list i i use it so you know if we could have the list that i get from the local network be signed by some enterprise cert that i trust because of a configuration i don't necessarily need to check anything else or maybe even if i go on to like i walk into google's corporate network as a guest maybe there's something signed by the public google.com website cert that says oh yeah on this network you can use this list that may be enough for some cases and then for cases that are really just like walled garden public things like i want to watch a movie on my airplane i would argue that those cases um you know just having a hint list about what things this local network is authoritative for without any proof and we just try it publicly and we fall back that may be enough because these aren't going to be sensitive domains it's like all right you're you know you're accessing some movies.airline.net that's not going to be something that people are going to be really concerned about leaking of you know corporate internal secrets thank you tommy warren please"
  },
  {
    "startTime": "01:10:03",
    "text": "thank you warren stoner hats um so two things i think we need to be really careful that we're not simply ending up solving for use cases that we find convenient like a very common use case in many corporations is if you join network the guest network from your phone or sometimes the employee network from your phone laptop whatever they still want the ability to do things like intercept queries to facebook and pop up some sort of thing saying you know you shouldn't be browsing facebook during business hours or you know sexually explicit content or whatever and we need to be careful that we don't just design a solution that works well for the use cases that we think we can solve for because then it's going to be really hard to get that deployed um another thing which i think we need to be careful we don't end up doing is falling into the when i join the network the network can tell me what things it's authoritative for you know is allowed to do this behavior for which is one of the easy ways we could get out of this because then we run the problem of you know i join company x's network and they immediately tell me that they can do interception or blocking or rewriting or hijacking or do we want to call it for you know company y companies e etc um but i mean the main part is i think that we need to make sure that whatever we are designing is actually something that solves the use cases that people who are going to want to deploy this actually need to solve and that we don't ignore the use cases which are just kind of icky or hard great thank you warren andrew campbell please yeah hi um well i was covered most of us gonna say so i agree"
  },
  {
    "startTime": "01:12:01",
    "text": "with that i won't repeat it and i guess i'm reminded of um the those of us involved in add where um i think initially there was a view not to worry about the sort of private ip address uh sort of uh issue because that wasn't terribly common uh whereas it turned out that uh if we ignored it um i think that was 85 percent of traffic um so yeah i think if if we only solve the easy problems then we might not really be solving um any of the important problems so i think we need to take that approach with with a great deal of care yes uh thank you andrew um and i just wanted to observe that there is a discussion going on in the chat about whether things filtering in particular is in scope i think part of the issue that we're experiencing here and why this you know expanded beyond the scope of add itself is you know we're looking at how the ietf handles this issue of um the what pragmatic approaches we can take to the fact that that um split dns is an existing feature or bug as you may care to find it but it is in use on the dns at large and as we look at protocols within the within the different groups of the itf how this impacts all of them and so um filtering is you know kind of the same thing it's in scope by nature of the fact that it's in in use out there and if the itf is working on protocols um it has to acknowledge that that these protocol that that these uses are already out there um i feel like i'm stumbling over myself a little but the overall point is to say is um the purpose of this very meeting is to"
  },
  {
    "startTime": "01:14:01",
    "text": "understand uh how different uses of the dns are being done out there and so to the extent that split dns was not particularly in scope directly for add or for deprive or for dnsof we're trying to figure out how to accommodate that in all of our discussions of our ongoing protocol work ben please hi so i think i want to say the opposite of what warren said i think that we should figure out what versions of the split horizon problem are amenable to technical solutions within our architecture and put forward solutions for them so that people who are configured in in a way that we can support have a paved path to uh to a well-functioning secure network and i think that there are a bunch of cases here that aren't not things that we really can solve they're they're not something we have the ability to to really help much with as the iatf and so i think we can't get bogged down trying to to bang our heads against impossible problems we should focus on on the things that we can solve i do think it could be helpful and maybe the right first step here would be to try to map out all of the different tricky sub cases of things that call people call split horizon dns and and try to identify you know what kinds of solutions might fit for which cases i don't think you're going to see a blanket solution and i don't think we're going to be able to solve the current majority case but what i do think we can do is solve solve one case and make it clear enough and reliable enough that people who are serious about configuring their networks to to work in this way have the option to do so and maybe we can see a slow migration one example i want to bring up here is the idea of http transparent proxies so in the 1990s it was common to have caching http transparent proxies inside"
  },
  {
    "startTime": "01:16:00",
    "text": "your network so that people's people's content could be cached locally and reduce the you know get better performance reduce upstream traffic it became clear that that practice was not really compatible with https and so as https usage grows grew that practice fell away it didn't happen immediately after tls 1.0 was defined but it happened over a period of 10 or 15 years and you know i think that we may be seeing a transition like that with the rise of encrypted dns some other assumptions about things you can do in the network are going to have to change right and that goes perhaps it was a better way of saying what i was trying to get to with regard to scope is it's in scope to discuss these as problems but the answer to discussing it in scope might be to say um it is not a problem we have to solve we just have to recognize that this is going to break this particular form of usage but you still have to recognize that it exists paul dixie please um i put myself in queue a few minutes ago after it was uh asserted that um if you're on a some kind of a captive network on an airplane for example um there was not a leakage risk of uh you know you're looking for something dot airplane or dot whatever dot arrow that is i think an overbroad assertion um when someone is being tracked whether for commercial or political or other reasons the queries that they make"
  },
  {
    "startTime": "01:18:01",
    "text": "to an audience who does not have their best interests at heart and to the extent that that kind of leak into the global dns can be correlated towards someone who's being tracked it is a very important leak and this leads me to uh the point about it's not just about filtering you know one of the things that characterizes the success of the recent discussions on these topics which are very touchy topics is to try to find something that has nearly universal agreement at least among those willing to speak and then try to use that as a foundation for going forward and um somebody mentioned transparency and anti-transparency and i think there is a universal uh perceived good there which is you know there was there were in the middle of possibly nearing the end of but certainly in the middle of a very ugly time where on path adversaries whether surveillance capitalists or national security or otherwise have had free reign in terms of trying to make us see the internet that they want us to see i think that whatever solution comes out of this you know whatever we end up recommending whatever ends up getting deployed if our recommendation is successful in that way i think everyone is going to agree that it has to be done with some kind of transparency ideally rising to the level of consent because if you're in a coffee shop or an airplane or a hotel room or you know whatever and your network provider wants to hijack some of your traffic and answer it differently for reasons of their own"
  },
  {
    "startTime": "01:20:02",
    "text": "we can't necessarily agree i don't think we will necessarily agree that the internet should be proof against such interference uh because there will be some people who don't deploy it on the for that reason but we could say you just can't be doing that without transparency in other words if you're going to intercept traffic if you if you've got policy on the network the user should be made aware of that so that they have an opportunity to say i don't want to use that network or better fire up my vpn or you know something should there should be a transaction there in an information transaction of this is what's going to happen if you use this network i do or do not agree to those terms i will or will not use the network on that basis and that transparency element has been notably absent from the decades of abusive position by on path actors which have led us to this conference call um so you know if if there isn't universal agreement on this call about the virtues of transparency of whatever it is the network wants to do ought to be you know made made apparent to the end user so they can decide uh consciously explicitly whether they they want to to whether they accept those terms then i'd like to see that discussed but i'm going to proceed with the assumption that that transparency is a universal and i'm going to suggest that the filtering thing fits the category that warren was talking about earlier which is this is the way the network works and you know with regard to ben schwartz's follow-up which is sometimes the network has to work differently and it might take a while for that to catch"
  },
  {
    "startTime": "01:22:00",
    "text": "on but uh you know it doesn't we're not always shackled to the way the network is used today some things that people have been doing will eventually stop working for you know various reasons maybe the cost of supporting that use case was simply too complex and so we had to abandon something so that went over the side um i believe that that in this case where we're talking about uh signal diameter uh where your dns questions go is a matter of huge importance for uh both political and commercial surveillance activities um i you know i i my google chromecast won't use my dns server it gets an address and a gateway from my dhcp server that it does use gets a dns server address that it doesn't use sends everything to 8888 this is objectionable and i think would be objectionable to almost anyone in the information security industry but it's something google does because of the number of trouble calls they get from people behind bad dns in hotel rooms and so they had to make a choice and that choice had an impact globally on the privacy of their customers um i think that we're in dangerous waters with that and so i think that if if we're going to introduce a new signal pattern for a device on a network where it can authoritatively determine that there is policy which is coming from the local network operator then again maybe they'll opt out maybe they'll say i don't want to use that network because there should be transparency around that but offering only a list of names these names are mine don't ask the"
  },
  {
    "startTime": "01:24:00",
    "text": "global dns about them instead you should ask this local thing which will tell you about these local names i guess that would support the nat use case but for me i would very much have to offer the root name dot or the null string as the list because what i would be saying is i care about everything i don't want anything to go to the global dns i want everything to come to me and i think that that is objectionable to various people who are working on this uh authoritative list of local names proposal and that if we're not going to have that then this is again as i said earlier either a non-solution or a making worse and we should be discussing that i know it's painful to discuss it but we should be discussing that because as warren said this is how the network works and the people who have to deploy this are likely to go to considerable expense before they will let outside third parties on non-contracted third parties control the information perimeter of the signals uh that are on their local network okay thank you paul i really don't want to cut you off but we're down to our last five minutes of the session oh and i apologize thank you yeah thank you ted party and eric worth and q ted please go um with acknowledgement that we have just a few minutes and glenn is going to want to do a couple minute chair wrap up at the end but uh ted please please join again you were in queue and we do want to hear your thoughts or i i tried to join and apparently uh got a little bit cut off there uh so i'll try and speak very quickly i i wanted to to to kind of tackle two two pieces at breakneck speed one is the question of whether there's something useful we can do here and provide an applicability statement to make it clear to the community"
  },
  {
    "startTime": "01:26:01",
    "text": "exactly what that useful bit is and what it doesn't cover because i think um what we've described so far is a way of providing a signal uh that a certain set of authorizations have occurred and a potential signal that allows you to discover both local and and global uh dns resolvers that say hey this is what i'm uh i'm authorized to talk about based on dns sec or or similar uh if we say and this doesn't help you if you're doing x y or z let's say this is how you do it if this is what you are doing um i think we do get a little bit forward on what was argued for by a previous speaker that there are certain things we can do and as long as we're not claiming that we're solving world hunger with those things but write down what the applicability is and understand that this does not change that people may configure both their networks and their devices differently i think that is still progress right because we have written down a set of methods we've agreed to those set of methods for those use cases and i don't think that that's necessarily um clear in in my mind whether that's 40 60 50 50 80 20 but at least we can be clear about what we can do and i think that would be useful i don't think it's useful to be honest to try and uh lay out all the different things people do with split dns and to map the problem space because some of it is very very idiosyncratic like there are people who have different dns answers based on the port you're connected to that's not normal it's possible but it's not common mapping all of that out isn't very useful similarly i think trying to to take the case where filtering and other aspects of how people use the dns or kind of being worked into the the same conversation as split dns is is a bit of a problem and i"
  },
  {
    "startTime": "01:28:02",
    "text": "think we should continue our focus on the discovery problem and continue our focus on saying when you discover it this is what you get and that doesn't tell you anything about other things that you may configure or other ways in which people may behave thanks thank you ted um eric with the note that unfortunately we only have a couple of minutes in the session uh hopefully concise i'll be extra quick so i joined the cube maybe about half an hour ago and the discussion was on validation resolvers and cases where that might not be useful and stuff i think that ties really directly into the 80d charter scoping against client and server policy i think yeah there are cases where clients may have policy where they either have direct knowledge of certain configuration or certain use cases where they might not want validation and there are other cases where clients might want it so i think it's a clear case where there clearly are cases where it is useful so let's provide those technical solutions let's provide ways to say here's the here's the proof of the authority behind the name that's being applied splittiness here's a way to prove authority behind like some name that you might trust for your network configuration so if we plo if we provide those solutions i think they'll find you so we don't need to worry about saying oh it must always be have this authority i must always do it that way that's getting the policy we can just call that out of scope and not worry about it okay that's my quick statement on the matter great thank you very much for your thoughts eric and over to you glenn for um wrapping up with where we're gonna go from here thank you everybody um great comments and great comments in the comments chat session too by the way uh so uh logistics wise moving forward um we're gonna get these notes out um because we got a lot of chairs here we're it's gonna take us a little bit longer than normal we have a lot of hands that need to go in and take a look but so expect the notes to be available uh early next week uh this session of course is recorded and we'll get that with the"
  },
  {
    "startTime": "01:30:01",
    "text": "secretary up and published so you can go back and re-watch all the exciting conversations uh we've all had and uh with that i will say thank you for participating uh and uh we'll see you at itf 113 hopefully in person you never know take care everyone you"
  }
]
