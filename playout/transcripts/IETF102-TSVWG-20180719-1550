[
  {
    "startTime": "00:00:04",
    "text": "and that do you want to just tell me who you are oh I just want here to take some notes these are all good options no-nobody Europe okay um the gender with lightness and we\u0027re just giving you can do that\u0027s why we put what we\u0027re going to use all our agenda time so they\u0027re probably more or less real [Laughter] yeah we should be fine okay what\u0027s it called 3/4 transport printmaking okay we\u0027ll be done it ever stops going again "
  },
  {
    "startTime": "00:03:15",
    "text": "[Music] okay just know yeah this to work for you do I have to do this yellow box thing before I can do anything cuz it just I think but we can always start the meeting but we can\u0027t start the meeting we\u0027ve got to start this this sure rolling and we need a note-taker and a jabber scribe do we have office of a note-taker for the meeting I think we\u0027d be good if we could have somebody take some notes as well okay a YouTube between you\u0027re going to take notes that\u0027s good okay so we have right things this is TS v WG we are in Montreal we are going to meet twice this session with a short gap between the two sessions and I\u0027m Gauri first and I\u0027m David black and Wes Wes Wes is not here and let\u0027s see our ad is on the is on remote as well Spencer is out there okay so hang on a minute there we go this no well you seen it before it apply it applies to you we\u0027ve got a note-taker have a got a jack okay javis cribe anybody in Jabbar at all okay Randy be sorry your name Craig okay my apologies Craig okay Craig will be jabbar Scott thank you very much please note that th DWG is the thing chairs look for when we\u0027re when we\u0027re new dresses are submitted to see whether with it whether whether they might they might apply to us okay doctrine review reminder dr. Holly relies on reviews please review documents and your working group at least one of the doctor another working group if you\u0027d like documents that you care about reviewed please review other documents I subscribe to treasure the "
  },
  {
    "startTime": "00:06:15",
    "text": "peoples back both of those guys yours okay accomplishments and status we\u0027ve had no Marcy\u0027s published since the start of London IETF however we had four RFC\u0027s published between Singapore London demonstrating the addition of network traffic output this working group is bursty there are two net drafts in our editor queue the tips of web RTC QoS trap has been there for a while it\u0027s in miss ref state on a number of our TC drafts is a massive web RTC draft hairball or tar ball that will eventually pop out of there and this is part of it DSC PR Anna process changes that is at the RFC editor in the RFC and there is editing on that one okay we had one more ID that almost made it SCTP errata and issues this one is still act the iesg there\u0027ll be a technical update on this later in the meeting the status update is the IHG has taken a look at it honest now in the hands of our area director and he gets he get he gets to choose why sees I think Spencer would say we have two drafts room chairs and authors after working group glass code these the two forward error correction drafts there\u0027ll be a slide labels Decker will show you what the inclusion glass working-class last call is concluded and I think we need one more set of minor updates all before these go to the is G diffserv low-effort pro-hop behavior draft work that\u0027ll be later in this session the plan is to conclude working group last call later today with the discussion on the slides and that draft we\u0027re likely to work with last call these two EC and tunnel related drafts in the variant in the very near future I was hoping to working group glass to call them before this meeting other things happened while I was busy while I was busy making plans to do that last month so these will get last called in the very near future there are seven additional working group IDs listed here most of them are on our agenda the one that the one that really isn\u0027t is childish and feedback that draft is on hold while a use case for it gets worked out the use case is over in the service function chaining working group and as that work moves forward this draft will get picked up and move forward also related graphs on the agenda here path MTU detection via v6 packet truncation which is a draft that was new submitted six man we want to talk about it here because path MTU is something we care a lot about translator encryption there are impacts we talked about this a few times there will be requests with group adoption here in this meeting TCP encapsulation considerations which came out of a talk at TSV area the "
  },
  {
    "startTime": "00:09:17",
    "text": "develop our topic TSV area in London l4 s and diffserv which is part of the l4 s draft set which will come up in that item and ipv6 reservation protocol which is a new draft we\u0027ll talk about to add down the end of the next session all right related drafts to more drafts or transfer related but not on the agenda one is the priority switching scheduler which we\u0027ve reviewed here and which we will support publication of via the independent submission under track I need to do a few more things to go dot the i\u0027s cross city say say this is this is this is a fine draft ta Street of G supports its publication EC and NS h draft Eastlake SF c NS HEC and support this is the SS FC draft that is that has the usage of telling Direction feedback that will be discussed over in the SFC working group then we have a three internet draft draft IETF into area tunnels which job touches we\u0027ve been working on over an empty area fragmentation of fragility draft ronica in the area frag fragile that ron has been been been working on and a draft on socks protocol version 6 okay so now we get to start start telling you where you\u0027re on the agenda in a little bit I\u0027m gonna go gonna show you the agenda and we will go go ahead and see we meet do any bashing do more to right now go through the the milestone review ok milestone review we originally hoping to get the two ecn encapsulation drafts done for this meeting so I call that\u0027s going to be next meeting cycles are going to move those two dates to October the next three are in good shape the for our glass call is done on the two forward error correction drafts and we\u0027re about to finish off a working group last call on the lower ever phb draft and in addition the related dscp I Anna mechanism allocation mechanism change draft is already at the RFC editor and being edited so those three in good shape for reasons that we\u0027ll talk about more when all 4s comes up the September dates for l4s are shall we say a wee bit optimistic we\u0027re going to move those out to July of next year\u0027s Bob Brisco here yes he\u0027s here Bob is that going to that is is that a better approximation of reality we\u0027re aiming for September we\u0027re ready you\u0027re aiming for September for working class and College mystic absence of discussion on the list about the documents yes okay right yeah yeah yeah "
  },
  {
    "startTime": "00:12:20",
    "text": "I know going on the list yeah right okay any case well push the dates out out of July and there\u0027s there\u0027s positive credit for getting it done earlier SCTP not support is Michael Michael focusing back there somewhere is October so reasonable date I think it is yes okay good transfer options are UDP packet is a taxation layer path MTU discovery for Datagram transports those have ND your milestones to look plausible telling Jason feedback is unlikely to be done by the end of this year but we\u0027ll adjust that date when we get to get the Bangkok and courtesy of the iesg in part of the ISU review of a CTP errata draft we pick up a milestone for a year from December for a this version of RFC 4960 a new rolled up the SS CTP spec that\u0027s the milestone reviews click go through the agenda you are in currently act item to hear a gender bashing we\u0027re gonna do in this session the lower effort pH be including Berg last call Datagram path layer and Taxation layer path layer and view discovery ipv6 packet orientation a couple of discussions that have come our way out of the quick working group Jonna young guard wants to talk about with transport mechanisms and Magnus has some quick and ECN details to the guide us through hopefully we won\u0027t vote we won\u0027t get lost wait a minute interesting there you go transferred header encryption impacts that\u0027s uh Gouri Fairhurst and and Colin uh that we\u0027ve talked about a few sessions we\u0027re going to talk about our adoption and then TC encapsulation considerations that gets us to the break after we trekked plans after the break SCTP drafts are the two drafts that we\u0027re looking at that that are in them that are being dealt with here Knapp the nat support draft and the errata draft lesson plans for the this RFC 4960 UTP options l4 s drafters now includes a fourth draft on this cert on diffserv and finally a new draft proposing a new idea for an ipv6 a reservation protocol so that\u0027s the agenda any comments going once going twice considered bashed all right so Vincent sent along this slide Vincent Roca for the feck for the two drafts "
  },
  {
    "startTime": "00:15:20",
    "text": "these are both both about updating the forward error correction framework we\u0027ve had a bunch of bunch of good solid reviews aroun groove last call a number of things happened the big one was that the pseudo-random number generator got replaced and there\u0027s minor typos so is Vincent here so I\u0027m guessing the story is that we\u0027re waiting a little bit for one more version of these and then those go to and then and then those could submit the iesg yeah yes probably I have a few things to update but very menial Corrections otherwise I said we made a lot of modifications to this document during this previous period we clarified what this parameter duration section and we changed totally the PNG for reasons I want detail you know I mentioned this on the lists and I also did a presentation during the energy meeting to the morning so if you interest in the United States you can it can explain you or why it is already so much explaining why we did it right and we have related work full up in some way we are considering using I\u0027ve seen within quick as an example of a CC scheme that could be useful that\u0027s all okay excellent one thank thank Vincent and thank the expert expert reviewers we\u0027ve got a lot of a lot of good support on reviewing these drafts which require detailed detailed knowledge of the domain to the check review so thank you yeah this brief brief update on the the wire for PHP draft next slide yeah words okay great okay so working group last call started and end of May and there weren\u0027t many comments but there has been several reviews earlier on the earlier versions and so yeah I incorporated only the few comments from Brian and David I think Fred had one comment on updating the RFC are 45 94 David responded to their that\u0027s probably the right thing to do Fred wanted discussion I don\u0027t know you want to say something I guess my thought my comment was that "
  },
  {
    "startTime": "00:18:24",
    "text": "if we\u0027re going to rev that there\u0027s probably quite a few things to go Rev and you\u0027d be good to have a list of the what do you want fixed yeah and I think that\u0027s a follow-on effort to this we need to make just enough of an update to tell people look 45 ninety-four as it currently exists but they need to start using the new dscp in preferences us one for scavenger traffic and that\u0027s that that\u0027s what\u0027s neat that\u0027s what\u0027s me move this one along and then yeah maybe if you\u0027ve got the appetite for it we could talk about a 45 90 for this well either one is a forty five ninety four bills if you want I can literally make that change and it becomes 45 94 best um I\u0027ll bet there\u0027s an e if you open that if you open that can of worms has more than one worm in there hence my comment could we enumerate the worms I think I\u0027ve been finding to do here but I think for the LEP HB draft we simply need to have that draft contain the text update that is to be applied to 45 94 and it moves forward on that basis okay I just tried to see what is our 362 to and it didn\u0027t make any sense but RFC 3-6 6-2 might make sense yeah so that\u0027s a that\u0027s a correct one thank you Tim sorry didn\u0027t remember my own RC a number of cricket okay so yeah the changes there were some suggestions of also incorporating the scavenger service term into the draft in order to that people find it by googling for that or so so I added also some more history just putting out the relation to that and there were some requests from David I guess for more references edit them and I had a text to the RTC web walk us draft right so what needs to be updated there that probably needs review on I revised the text slightly on congestion control in case it gets remarked to best airport and yeah some small other fixes so next steps what I didn\u0027t address so far was Turlough Secord\u0027s comments with respect to multicast so he just should suggested to have a small I don\u0027t know paragraph or section about the problem that you want to probably avoid replications of lower F or pickets too busy output ports so that packets don\u0027t get replicated and then dropped directly afterwards and "
  },
  {
    "startTime": "00:21:27",
    "text": "trellis also would suggested include the keyboard is TCP and scavenger in the document title I also didn\u0027t do that maybe there is support for that and I can do anything and yeah we need to need basically to resolve the issue with the draft in the MS roof maybe just the suggestion for updating the lado RC is okay I don\u0027t know because it\u0027s maybe too far and in the process right now and so I try to submit version or six incorporating any open issues that come up right now or in the next week I\u0027m now coming to me first set of bullets and I think in this case the DHCP and scavenger thing is well worth bringing up because we were replacing something which is rather obscure in the RFC series so we really need to be clear that people find it and they\u0027ll be got the good chance of people actually reading this rather than the previous thing so I\u0027ll be good right do you know bang carpenter just commenting directly on that if it gets ugly to include it in the title I don\u0027t know if it will or it won\u0027t when you actually get two or 48 you are to supply keywords for the RFC editor search so you can put it in there but you can definitely up strike them okay about multicasts hmm I think it would be good to include something of multicast but the text should be limited to if you\u0027re doing multicast this might also apply and there might be things you need to consider to prevent going wrong and I would just leave it at there at the moment we are not specifying multicast forwarding here but we kind of a specified diffserv so what we are specifying this step so so which we should make sure there\u0027s heads-up that there are multicast considerations here and you shouldn\u0027t do the wrong thing but saying what to do I don\u0027t I don\u0027t know that we can say what to do maybe not mean journalist just offered help so thanks on that okay we\u0027ll need to have we\u0027ll need to check that tech that that that that text on the mailing list and I\u0027ll take an action item too so okay we should do this also I will take a look at the at the revision to RTC web cross I\u0027ll also take a look at the revision the update text for 45-45-90 for I believe the path forward on RTC web cross is let\u0027s go and write the before and after text that we want to see and then after the iesg approves this draft we can then figure out what to do if not an easy path and likely path that forward is that our aid our ad asks the RFC editor to go make that change please okay so to conclude and this draft is "
  },
  {
    "startTime": "00:24:30",
    "text": "past working group last call if you have additional comments you can always provide them on the mailing list because the ITF will move it to IETF Lascaux source still possible to comment please read but we\u0027ve concluded the formal working group last column we\u0027re trying to finalize this document and please prepare new rather yep enrolling we owe you we will you beers or whatever your favorite adult beverages for putting up with this thank you very much what happened it\u0027s interesting okay it works hello I\u0027m Tom Jones planning our draft datagrampacket ization lira path MTU discovery which I don\u0027t know some people see much of a mouthful by seem okay with it so changes since zero one that I presented London the zero to Rev addressed a lot of the comments we got from the working group and Magna special in a particular from that we updated the requirements list for the for the algorithm we tried to document a simpler black hole detection that was more SAR contained in the algorithm itself application implementation discussion and and some text on dealing with flapping paths where we have ruing where we gained two different m to use and try to detect that and then the next Rev we came through and we updated all of the figures and we added more detection on on black hole detection and a figure to try and capture just a simplified algorithm we added a figure relating packet sizes just to try and explain what all of these different terms of reasoning are we updated the the big state machine we have um ok so since year one we\u0027ve done some terminology changes we thought the term effective path MTU was too much to say and really the the right conclusion from the the DPR PMT UD algorithm is the PRP MTU so the the packetization layers estimate of the path MTU and this is the number we consistently went to use and we think we\u0027ve called them and we\u0027re okay um and gory went through and changed every instance of ICMP verifications ICMP validation this is very difficult grunt to tread at people like this about different in terms of those we think this is correct Tom one small request I this change looks good but would you or gory or somebody read this draft against the interior tunnels draft so we have a coherent set of empty you\u0027ve terminology across both of them yeah yeah I see you could have responded from "
  },
  {
    "startTime": "00:27:35",
    "text": "over there hi Corey hi I\u0027m Gary first I\u0027m an author and the terminology is messed up David there are different flavors of this and I think I\u0027m as an author what I would propose is we choose a term very clearly and we explain the reference to the other terms in the terminology bit which is what we\u0027ve now tried to that would that would be fine and dandy I just would like it to be that someone who reads this draft and the anti area tunnels draft doesn\u0027t doesn\u0027t see the same term used to use to refer to two different things and your proposal to explain what all attorneys are they get used over an entire Eternals is an excellent idea we think we\u0027re doing that now so okay good we will check Ron Bonica Juniper Networks yeah in in the int area we have the same problem that we do many drafts that talk about the same things maybe it\u0027d be a good idea to abstract the terminology and put it in a separate short document oh yeah hide victim tear myself to do the work if it needs to be done I mean if you use our terms I\u0027m perfectly happy to talk about it somewhere definitely speed to run okay okay sounds good a picture and so these are all of the different terms we have when we are talking about packet and probe sizes in the network and our algorithm and so there\u0027s there\u0027s there\u0027s really is quite a lot here and it is very difficult to keep these terms straight and so at the very bottom lowest done the diagram in the middle and we have our new term the PRP MTU and affective MTU insight here could really refer to several of these different numbers and so the PLP MTU is the number our algorithm finds it is not the number we can probe for because we have have headers and it\u0027s not the actual PM to you because we have logical step sizes which might make it different and then below that as a smaller value we have the NPS which is what we would signal from the the PL up to the it to the algorithm and and then going down we have our base and then we have a min NTU which is probably hopefully close to the base and so since the the last Rev there\u0027s been quite a lot of discussion in the quick working group and Igor and Magnus give us a review comments on this books are coming from the same direction eager erase a lot of questions about how we handle and package of big messages and state transitions and what we do at different sizes and - asses questions about ptb and and robustness and we think we have addressed these we spoke to both these people so hopefully we\u0027re all on the same page and then Timur Volker has done an implementation based on a UDP application layer and he\u0027s raised similar issues with terminology he really doesn\u0027t like the past tense "
  },
  {
    "startTime": "00:30:35",
    "text": "for probes sighs I don\u0027t know this as a German thing and and so we\u0027re going to incorporate these he also raised some issues with the state machine all three of these Comoros greatest issues of the state machine and most people do okay so we react into the questions on ptb this is this is not captured in rev zero three but we\u0027re gonna do the next Rev and this is what we think we should do and we\u0027d quite like feedback up if this is actually the right case so if we get a PT b wherever in the done state we should reduce down to our safe size and and use the value in the PTB to start a search algorithm and we think that\u0027s a nice step if we get a PT be in the the base state then this is probably an error and if you\u0027re getting a PT B for a base sized ipv6 Datagram then this is involved in your network and ipv4 where\u0027s number we can use in the numbers we can use are very small and we think this is actually just at our state and we\u0027re gonna write the text so this can be left up to implementers to deal with so if they want to use like a 48 by MTU they can yeah but we don\u0027t want to and then we have PTP handling when we\u0027re we\u0027re in search and we have three different outcomes depending on what the the MTU value in the PTB is so if it\u0027s less than base and this is invalid and we can ignore it apart from other before if it\u0027s less than our current path estimate then we have a signal from the network saying what our estimate of the MTU on the path is wrong and so we can move to base to be safe and then start searching and with this value um and if we get a value in between our our search probe size and our estimate of the path then we can use this as an input for our search algorithm and so this is this is what we think hopefully people will come and argue with us if they think we\u0027re wrong but I think we\u0027re quite happy with this now you know once that thing up okay quick and so there\u0027s there\u0027s been quite a lot of discussion on this one on the quick list and we think quick is probably a protocol to capture quite there\u0027s quite relevant for the draft and so I I did work at the hackathon this past weekend and I implemented a small subset of the algorithm without ICMP handling on top of Moz quick and the conclusion from that was this is entirely possible and all of the the mechanisms are there in the protocol um so we\u0027re happy with the we\u0027re quick is now in relation to our protocol to include text and and swing to Magnus and we have sort of thon that may be load balancers will need more states so they can handle ptb and as I understand please correct me if I\u0027m wrong so there\u0027s there\u0027s two directions for connection IDs in quick there\u0027s a source and a destination connection ID and we think any quick probes that are going to go to load balancers will need to carry both IDs nobody looks angry sauce okay and and so we need to figure out how that\u0027s actually going to work with quick and I haven\u0027t gone back and read the "
  },
  {
    "startTime": "00:33:35",
    "text": "draft but yeah so so that\u0027s our plot right now okay the state machine we have right now is is very big it almost does not fit on one page of paper in an ASCII art diagram and we think we need to redesign our algorithm around some core components and so we\u0027ve identified four pieces and the the first two pieces of the algorithm are the gross phase where we are trying to grow and discover the the actual PRP MTU of the path we have our reduction phase which is driven from two two mechanisms and this is when our estimate is incorrect and so we have black hole detection and we have ICMP path you big handling um and we think these are are the the core pieces that we can describe separately and then integrate together into the fool algorithm and where we\u0027re gonna update the document hopefully for a September and we will Rev the spec around this and then there are two more states and and so there\u0027s this error state that I alluded to where that we\u0027re getting just really strange stuff from the network and and we think we know what to do about that but it\u0027s probably gonna be quite contentious text to write I can I can see who I\u0027ll be arguing with and then finally we have this discussion about robustness and resilience in search and when we deal with inconsistent network state and so we really need some real-world information to feed into this discussion so we can do detection of weird broken network paths and so that we can do the right thing and we\u0027re gonna work towards this for for a November and okay and that is me and I will take questions Iger Omaha so first thanks for working with us to improve this suggestion for error states the way I would think about it and your error state that typically due to PT B that\u0027s claiming something that shouldn\u0027t be the case in the network I would probably just equate it to ICMP that comes and says things like basically network has broken the destination unreachable and asked to treat the error state just like what you would do in case of those those packets yeah and and so the error states are are partially for things which are just weird getting ICMP for for Network MTU values which are just generally invalid for our for our address family and then dealing with you know malicious attacks where people are able to inject valid ICMP messages and we just have to deal with that simply so but well-vetted looking destination unreachable could be "
  },
  {
    "startTime": "00:36:39",
    "text": "both get the same or they could be coming from who knows why one thing to consider in error States is misconfigured tunnels ipv4 misconfigured tunnels of or below the minimum required MTU are kind of unusual these six less so is omit the minimum empty with some is somewhat larger so that that\u0027s something to think about as a possible cause of errors yeah Corey fast as an author again and one of the arrows states which is actually meaningful is when your application so it\u0027s gonna send 1000 bytes that\u0027s the minimum and then your error state says the only workable thing is 576 and you know that ipv4 actually supports that as a smaller number and your application kind of wants to go there if it really has to but it doesn\u0027t want to drop back unless it\u0027s explicitly told that the other one doesn\u0027t work so there might be some error states that actually are useful to work with the really broken stuff like that right and and I think that\u0027s I think that\u0027s also a good way to think about are the possible of dealing with misconfigured v6 tunnels I think that\u0027ll be fun I don\u0027t understand what I need to do that but that\u0027s always good and like let anybody want to talk to us then please come and talk to us the other thing we should announce though is there are several implementations being played around here there\u0027s the team oh one you have some code tongue oh yeah I have I\u0027m gonna say three implementation though the divisions a bit fuzzy I mean with some stuffing quick being played with well that\u0027s me that\u0027s you one of them is one of the three okay but it\u0027s just nice to know that there\u0027s some code there so if you want to kind of play with the court or get examples then and tell us as well mycotoxin yeah the implementation of team was just using UDP packets worth some something in the payload to detect the packets back and we also have an implementation for a CDP that\u0027s sorry Michael could you so we were planning to keep the two real implementations we have so quick and UDP options going well the SCT p1 follow the draft yes okay so that\u0027s eventually three implementations that\u0027s very good at this stage thank you thank you all very much all right so one is going to do this one welcome thank you Ron Bonica Juniper Networks I\u0027d like to talk about this draft that\u0027s going on in the six men working group and also about a recommendation that we got from the TSV working group about how to change it maybe talk about that change a little bit more and you know if "
  },
  {
    "startTime": "00:39:39",
    "text": "we all agree on it I\u0027ll make the change in the next grab of the draft okay ipv6 allows for fragmentation at the source only so source source nodes have a choice they can either refrain from sending packets greater than 1280 bytes which incidentally is what they all most of them do these days or they make it can maintain a running estimate of the PM to you and refrain from sending packets that are large larger than that estimate and they\u0027ve got two tools to do that one is PM PM tud the other PL PM tud now called DP LM anyhow this this tool certainly helps with some of the PL PM tu D problem with it and maybe tweaked a little bit to help with DPL PM tu d I can do that in Morse code - okay a second to talk about how PM PM tud works um the source produces an initial estimate of the PM to you and that initial estimate is normally the MTU of the first hop along the pass that estimate may be larger than the actual PM to you then the source starts sending packets the packets are never larger than the PM t you estimate but they may be larger than the actual PM to you when a packets larger than the actual PM to you the intermediate node that can\u0027t forward the packet drops it and sends an ICMP PT b to the source and if that message reaches the source it updates its PM t you estimate and everything is fine that\u0027s if the ICMP PT b reaches the source now that we\u0027ve talked about how PMT UD works let\u0027s talk about how it breaks well sometimes that ICMP ptb can\u0027t make it back to the source and there are a bunch of reasons why the most common is a poorly implemented firewall rule um lots of consumer CPE will not allow the ICMP message in because it\u0027s coming from an unknown source a source that\u0027s in the middle of the network there are other reasons too but we don\u0027t need to get into that for the purpose of this presentation in any event when this happens the ICMP PT UMS ptb message does not make it to the source um the source does not update its PMT you estimate and a persistent black hole occurs so this is how PMT UD breaks so we need some new procedures and let\u0027s talk about what those new procedures are an upper layer protocol is emitting a packet and it marks that packet as being truncation eligible and it\u0027s you know "
  },
  {
    "startTime": "00:42:39",
    "text": "it\u0027s the upper layer protocols decision whether it marks the packet or not when an intermediate node can\u0027t forward a truncation eligible packet because of a PT because of an MTU issue it truncates the packet it marks it as being truncated and it forwards it to the destination the destination node sends an ICMP message back to the source and the assumption here is that the ICMP message from the destination node is more likely to make it to the source than an ICMP message that originated somewheres in the middle of the network it\u0027s more likely to get around that misconfigured firewall it\u0027s more likely to not have the anycast problem that we referred to in the last slide so let\u0027s talk a little bit about mechanics how do we do this well to mark a packet as being truncation eligible we have a new destination option called the truncation eligible option and to mark a packet as having been truncated and still be eligible for further truncation by another downstream node we have this truncated packet option so one indicates that a packets eligible for truncation the other indicates that it\u0027s been truncated and it\u0027s eligible for further truncation let\u0027s talk about what the truncation eligible packet looks like it has right now it has two fields in it and there\u0027s a proposal from this working group to add a field there\u0027s an option type that\u0027s TBD by iana it indicates that it is the truncation eligible the first two bits of that packet indicate what a destination node should do if it receives the option and it does not understand it and in this case it should just skip over the option the packet was truncation eligible it was not truncated it\u0027s all irrelevant just skip over it the third bit of the option type indicates whether the option data can be changed on route since there\u0027s no option data it doesn\u0027t matter and the second packet tells you the length of the option data there\u0027s no option data so it must be 0 whoops next is the truncated option packet this indicates that a packet has been truncated so when a node has to truncate a packet it overwrites the truncation eligible with the truncated packet this one has a different action if it\u0027s received by a node that does not recognize it it\u0027s action is to discard the packet and send an ICMP parameter problem message and again the change bits are irrelevant because there\u0027s no option data so summarizing quickly source node procedures it emits a packet with a truncation eligible option destination node procedure the intermediate node attempts to forward a packet and encounters an MTU issue if the packets eligible for "
  },
  {
    "startTime": "00:45:40",
    "text": "truncation you truncate it and mark it for truncation and forward it if the packet isn\u0027t eligible for truncation you do what you do today drop the packet and send an ICMP that\u0027s for backwards compatibility at the destination node if you receive a packet that\u0027s truncation eligible and it hasn\u0027t been drunk ated just deliver it to the upper layer protocol there\u0027s no special action to take but if it receives a packet that has been truncated and it recognizes the option send an ICMP to the source node and the ICMP MTU reflects the length of the packet by default you discard the packet however the upper layer protocol can register for delivery of the truncated packet now one thing that it can do is take the packet it realizes that the stream has been corrupted because that truncated packet options there and it might just use the metadata it might use the metadata to say oh I know now I now know the PM to you between the source and myself maybe I\u0027ll use that to signal at layer four what the MSS is so it might be the metadata might be useful by the way if the destination receives a truncated packet and it doesn\u0027t recognize the option it\u0027s obliged to drop the packet and send an ICMP program at a problem so you won\u0027t try to keep truncating packets now what are the benefits of truncation it allows you to use larger m to use at very very least that fixes the PM to you PMT you deep problem it might also provide some tools that upper layer protocols can use to learn the PM to you without relying on ICMP at all um we can skip over these slides because it appears that you know everybody\u0027s got the up and got the idea but I\u0027d like to bring up another idea that came off this list somebody recommended that we add yet a third option this option could be used very early in a TCP session or a transport layer session the option says this packet is transport eligible it has some additional option data it tells truncation eligible you might run Oh what did I say transport eligible sorry those packets are I\u0027m still tongue-tied from trying to say DL p.m. to you in any event you have this new option you pad a packet the very first packet in a session with lots and lots of zeros the new option says this packet is truncated as trunk truncation eligible and the option data tells you how many bytes of that packet are not padding now it is very likely to "
  },
  {
    "startTime": "00:48:44",
    "text": "be truncated it\u0027s truncated downfield so the option type is over overwritten with the truncated packet option now you get to the destination the destination looks at it and says oh this was a padded packet and it was truncated you can tell whether all of the useful data made it or not if all the useful data made it you\u0027ve learned the PM to you and you have all the useful data if all the useful data didn\u0027t make it well you\u0027ve at least learned the PM to you and you throw away the data you have as if the packet had been picked up so anyhow my questions for the working group first is the work interesting without that extra padding tweak that has been recommended and second is the padding tweak interesting hey just want to rewind I think you said this is very likely to be truncated yes and I was following I was with you until you said there were truncated because I was expecting the word dropped the packet is eligible for truncation let\u0027s say it\u0027s the first TCP packet in this action session and it\u0027s carrying only a couple useful bytes you pat it out to 65k so it is very likely to get truncated at the first hop down to the MTU of the first hop as opposed to fragment that at the first of its I think I think it\u0027s more likely to get dropped because there\u0027s gonna be some legacy node between you and first router that had understands how to do the truncation ah good point it is likely to be dropped because of the legacy node that doesn\u0027t understand any of these options so does that mean you knew that already actually I didn\u0027t think of that but I would amplify Tim\u0027s comment to suggest some thinking about incremental deployment I think well if the packet actually truncated packet does get to the destination now it\u0027s a big if I think it\u0027s interesting because for TCP the upper layer actually can use way more than just metadata because effectively you got maybe big n minus small Delta of the actual data that doesn\u0027t need to be retransmitted it can be act so that that is useful the question is there is a premise that ICMP from the destination is more likely to reach the source the source and for any car that seems plausible but for other reasons I think it\u0027s basically needs to be tested did you do any any sort of tests for measurements to see if the same kind "
  },
  {
    "startTime": "00:51:45",
    "text": "of ICMP send by the source is more likely to reach yes we know of a common bug that\u0027s in consumer CPE what they will do is allow a packet to come in only if you\u0027ve sent a packet to the same address out recently well if you\u0027ve sent a packet and the ICMP comes from the destination it will get past that firewall if it came from an intermediate node it won\u0027t now grant that this is a bug in the CPE the CPE shouldn\u0027t when it gets an ICMP message should look at the quoted packet in the payload to determine if it should let it in or not but the bug is so common that estimate for how much more likely you ought to get that I don\u0027t have I just know that the bug is very common I don\u0027t know if I tested how many how many nodes will have it sometimes and so three things wrong is very easy it\u0027s D P LP m tu d okay and so for the for the extra bits I think this is a requirement to make this feature useful but if there if the there\u0027s enough information to reconstruct the original IP datagram then I hesitant to say this might be a solution to p LP m QD for a tcp okay so you\u0027re talking about adding the extra bits that tell you about them but the base draft you\u0027re okay with I know I I think adding was misses required adding the bits is required okay okay and then then a question so just a second the reason being that TC the TCP header doesn\u0027t have a length field that\u0027s different to the IP length so okay so we should be careful about lengths we passed up to TCP in anyway yeah so unless I hear otherwise I\u0027ll resend the draft adding that extra option data please do okay and then a final question so and this is quite a new draft um they\u0027ve been five revs since May do you think it\u0027s going to settle down and be ready for people to try and implement soon um I\u0027m hoping it\u0027ll settle down well before the next IETF it it revved a lot mostly because um I had way too much caffeine in a little attention deficit disorder gonna close the microphones after Bob I could have been I just got an idea from the bed idea ferry why don\u0027t you put the petting directly in an option I\u0027m pretty sure that might be middleboxes already there to help you stripping that I\u0027m sorry couldn\u0027t why don\u0027t I put the petting they\u0027d you want to add to the packets while probing just in an option oh there\u0027s an idea oh there is a reason why the maximum "
  },
  {
    "startTime": "00:54:47",
    "text": "size of a padding option is 255 bytes and the maximum size of destination option header I think is only another 255 so we couldn\u0027t pad it out to 6k mycotoxin for TCP the padding would be part of the TCP payload yes so if it stopped the check sums wrong absolutely it would make the well I\u0027m willing to accept this data I have to accept data with the wrong chick some I guess the the checksum would be correct if the padding were stripped away what I mean I suspect me the checksum covers the TCP segment and then this is added at the network layer as you generate this option and do it so you need so you need a length to be able to undo this is what I was saying yes the lengths come from the up here well disappear you need to lunch yeah so the suggestion is there\u0027s there\u0027s two lights there\u0027s the the the length of the total IP diagram and there was a length carried which is the original size of the Datagram before any padding is added and so when you when you get these you can you can strip away until you have the original IP Datagram again but you do raise a good question that I need an answer to the checksum should the checksum be correct for the packet before the padding was added or the packet after the padding was added before before okay I agree with that so in the case of STP we have petting chunks and we can add that and we can reconstruct the packet structure if we would ignore the checksum and if I would do this for I would only do this for pro packets where I know oh I don\u0027t want to date it transfer data with it so I just need to verify this belongs to an association and which number are you so I could live for that case the wrong checksum okay but I\u0027ve got a couple of reactions you\u0027ve mentioned a destination off Fred Baker and in case anybody didn\u0027t um you\u0027ve mentioned a destination option so you run one through outer to disobey RFC 8200 and look at an option after the hop-by-hop option but only on an exception basis only when the packet cannot be forwarded because you\u0027ve hit an MTU issue now there is precedent for doing that the precedent decided in the draft and it happens there\u0027s an option called the encapsulation max and I forget the RFC that does it but there it there is one other RFC in which on an exception basis you go all the way to "
  },
  {
    "startTime": "00:57:48",
    "text": "the end of the destination options in fact it only does this if if you think about if you think about how an a6 base has to pass the well if you think about how an a6 base router is generally architected you\u0027ve realized you have a forwarding problem you\u0027re kicking the packet up to the slow path anyway to send an ICMP message so instead of sending the ICMP message you\u0027re forwarding out the truncated packet okay second question second comment you referred to net based firewalls as walking doing its own based defense I don\u0027t know very many actual nets in the world most of them are napped and so you find yourself looking into a UDP or TCP header looking for a I I never said anything about NAT based you said that broken CPE equipment looks for address pairs yes yeah address pairs are napped well there may not be any translation going on oh okay third question third comment you said something about the protocol sending back a message saying I\u0027ve changed the maximum segment size so I went and looked in RFC 793 maximum segment size is by specification only used on this impact on the first packet in session mm-hmm so if it comes in a later thing what does that mean well actually this draft stays away from telling the upper layer how it should communicate back to its upper layer peer to use smaller packets it it says it doesn\u0027t specify any of that this is just a tool that I think and somebody else can use I think you\u0027re gonna need to address that somehow yeah now Morton my coat is from Alaska so winter is coming Ron I was shocked to see the word overwrite you start out with truncation eligible which is destination option and somewhere along the line when something bad happens you get truncation happened ah what happened to the are not modified extension headers are not modified or removed or added or deleted obviously this is the stretch so so I\u0027ve got post "
  },
  {
    "startTime": "01:00:51",
    "text": "iesg review stress disorder and there\u0027s no support meeting this time so what\u0027s what\u0027s going on why are you guys so special well granted it\u0027s it is a big deal to to modify an option identifier in flight it\u0027s also a big deal to truncate a packet yeah well dropping it is kind of we have a lot of precedents for that the precedent we have precedent for looking beyond for on an exception basis looking at the destination at some place other than the destination option someplace other than the destination precedent for overwriting an option type well yeah we do it but only on this crazy exception basis when you\u0027ve already gotten off the forwarding path and it\u0027s a case where you would have dropped the packet anyway all right so make sure you spray paint that on the ceiling someplace yeah yeah we\u0027re cutting the line and wheels need to make sure that we don\u0027t beat up too much on this proposal since it seems to the product more coffee and thinking they\u0027re necessarily good text so what give us a last question yeah it was just on this incremental deployment thing it\u0027s got to have some way of people wanting to do this without the packet being likely to be lost and so you know something like a bi balls would help but I was just just looked up RFC 78 72 which is statistics on drop of the distillation option and it\u0027s between 12 and 17 percent yeah and even if this Reuter supported it the first all the route is up to where you wanted to deal with your support of it is that drop the destination option or drop the bucket with the destiny yeah yeah my buddy would be even if somebody embeds no way of drop the destination option and some hope codon forwarding the packet which then ends up with a really strange thing we have these many things here we actually talked about that in the draft the very first thing you have to do is see if you\u0027re on of one of those 10% of the paths and that\u0027s why there\u0027s another draft called draft Bonica unrecognized destination option or you have a special destination option that if it makes it through we\u0027ll send you an ICMP message and if it doesn\u0027t make it through we\u0027ll send you silence uh-huh thanks Ron I think my summary of what we talked about here was that was much fun can you can you go and do some more thinking and when you\u0027ve figured out the the IP layer stuff a bit more come back and talk to us because I\u0027m really not sure how the transport interacts with this but it looks like an interesting signal okay so you\u0027d be welcome here we\u0027ll keep you posted on the mailing list Janet we think your sides are "
  },
  {
    "startTime": "01:03:58",
    "text": "uploaded no I think your side trip loaded debits fun yet while they\u0027re trying to get the slides on let\u0027s practice saying DPL PMD u DNT see ppl PMT you d to do it first time and i managed to do it i not had too much coffee my name is Jen Iyengar and I\u0027m here to very briefly talk about quick loss detection and congestion control I will not be going into the weeds I will only be touching upon a few things it\u0027s few slides and only a few minutes so that\u0027s the name of the draft next slide I can use this right wonderful so very briefly the premise of the draft is this quicks transport or general transport machinery is different from DCPS in in some in subtle ways and some in glaring ways but for instance and this is not an exhaustive list but it\u0027s the list that I could come up with send order n quick is separable from delivery order in quick this is not so in TCP the sequence in sequence number is used for both send order and for delivery order and that causes all kinds of hurt in pain in quick delivery order is with streams and stream sequence numbers whereas end order is uses a packet number and we explicitly chose to call it packet number instead of sequence number two avoid conflating the concepts of sequence number in TCP with that of packet number in quick-quick has moronically increasing packet numbers what this means specifically is that if there is a if there is data that is retransmitted the packet number on the packet is not the same as what it was earlier it\u0027s a new packet number that is still increasing this is a pretty significant and a pretty big difference from TCP again in terms of how we think about the mechanisms there is no retransmission in quick there is there is death there is no packet level retransmission in quick stream data can be rebuttal and sent again in a new packet but the new packet just gets a new packet number and that goes along just fine that way acknowledgments use this monotonically increasing packet number of course and the receiver explicitly states actally instead of inferring how long the receiver of sitting on an ACK before sending it that\u0027s explicitly stated in the ACK and again there\u0027s there\u0027s sort of a fiddly bit which is that we do not use a cumulative ACK we use the largest "
  },
  {
    "startTime": "01:07:00",
    "text": "technology which is sort of if you think of it it\u0027s sort of the the right edge of what you would receive your receiving sacks right and not the left edge of the of what you believe has been received at the receiver and ECM signaling is quite different and you\u0027ll hear more about that in the next presentation that Magnus is doing so loss detection and congestion control use all of these signals and these signals are quite different in quick than from TCP so how does loss of diction and condition control how do they look well they are same but different so that\u0027s basically what it is we have fast retransmit we have early retransmit we have time-out that looks look the same but they\u0027re just slightly different here and there and in some places significantly and it\u0027s confusing when you see it because then you go huh this I thought this work this way but it doesn\u0027t in addition to those differences in just the mechanisms themselves because again like said we have these signals that are different we\u0027ve introduced some other elements like an early retransmit timer which is there in Linux but not there in the standard not there any any any RFC RNA draft we used a loss probe which is an expired draft somebody should really pick it up and run with it for TCP but we have those things baked into the loss recovery draft in quick and those are a part of it again because of the difference in signaling we have a completely different spurious time out detection technique than fr2 you it covers previous time out detection but it\u0027s sort of hidden and those are all things that are in the in the mechanisms congestion control we specified in the draft we specified nearly no in the draft for quick but we use again larger signal acknowledged install the cumulative ACK for a recovery period this in practice turns out to be quite an important difference because TCP ends up staying and recovery for much longer than quick does so again these are just I\u0027m just touching on things it\u0027s not to get into the details here we are doing a bunch of editorial work we will be adding a lot more rational and clarifying the mechanisms in the draft over the next few months and I am hoping to present it in much more detail here or TCP M or TCP this V area maybe probably Bangkok but I want to give a heads up to this community if you if you are interested go read the draft and provide feedback I\u0027m happy to discuss we will like I said we are doing a bunch of work on it so curry first I have to accept the blame for inviting you here and we can have comments at the mic but we are not going to discuss the quic protocol functions here because that\u0027s the quick working group so if you\u0027ve got protocol stuff on all this discussion join the quick mailing list tell someone in quick deal with it on quick but it\u0027s good to talk about it here so thanks John for "
  },
  {
    "startTime": "01:10:01",
    "text": "doing that Randall would you like Stuart one little comment for Jonah um if you look at the rack draft it has the other so but it has been merged as the others yeah TLS quo has not died yep no I know I\u0027m glad of that I forgot that though thank you Michael Jackson justice Allah come on why why not use rack I mean a version of rack for quick instead of all the other mechanisms we could I mean in in in theory so effectively quick loss recovery is covers rack again as the mechanisms are different because the protocol itself is different but it effectively is rack so rack uses time based things right so when you\u0027re doing retransmissions for example it helps quite a bit because now you\u0027re looking at time from transmission rather than the actual packet number as it turns out because packet numbers are monotonically increasing in quick that actually gives you time ordering directly so we don\u0027t need to look at time ordering outside of sequence numbers because the packet number itself gives you time ordering in addition if you want to look at the time from packet sent to do the reordering thing that rack does we have that also so yes it covers rock effectively it\u0027s on a rack for quick but it\u0027s covered in quick just simple creation question I think when this is recovered rock has initiated I stick it in initial design he rose up is something like you know using random you are now is famous with deviating it\u0027s trying to how come as a design new congestion control based on new Reno but it\u0027s better than in Reno is that the current the design principle I would say that no I\u0027d say it\u0027s still nearly no and that\u0027s one thing that is different that you may be alluding to that we talked about yesterday is they\u0027re really talking about and so this is one thing I should yeah so you are using time a page right so the so the launch detection mechanisms can be slightly different than what\u0027s in the standards and that\u0027s where rack comes in so this is more PC P plus rack + PL PE which is also in rack + earlier transferred timers which is not in any other document that\u0027s the last detection part on the condition control side we basically quit simple plain Yuri no but just modified it for the protocol things maybe we can write we can so one thing I will note is that quick again allows for a receiver to send acknowledgments less frequently then every two packets and we absolutely intend to exercise that freedom we are right now we are trying to figure out how to how to do this right so that the congestion control doesn\u0027t suffer we\u0027ve done some experiments with this but we need to have a good signaling mechanism from the receiver to the sender to say or the sender to the receiver to see how frequently this and their needs the "
  },
  {
    "startTime": "01:13:01",
    "text": "receiver to signal send acts back but those are all things again that I\u0027m happy to discuss in much more detail but maybe I can help with the question here I\u0027ve got a question to the people here and many of the people here will be familiar with transport protocols and their interaction with the Internet if what he heard from Janet sounded good and you would think you\u0027d be valuable to find out more of an introduction about this so you could actually comment on the quick mechanisms could you just raise your hand if you think that introduction would be something useful for us to try and arrange okay we could do no it\u0027s like five people we saw half a dozen hands from those people in the room and we\u0027ll talk to the quick choice and figure out how to do this thank you real details yes so my name is Westland I will talk about the addition to quick of ECM in the latest version and those specifications is in those since in these two draft the transporter no cover draft yes let\u0027s see nips okay so let\u0027s start summary of the what\u0027s actually went into the into quick now listen so it\u0027s packets with any type of easy n marking is acknowledged in a special act for a key cm frame and it has counters for marking them for the different parking types if you get an easy NC mark you send an immediate a Kia been increased counter so that\u0027s how you do send the notes that you get you can use to mark in congestion indication its per Direction verification of ECT capability of the path and the receiving host stack so it\u0027s both p.m. you\u0027d verify both that you can send this here and ect marks receive easy and related markings on the receiver side and report them back so that you shaking each all of this functionality both at starter connection and the any connection migration happens if you get any if the receiver Allah C is not easy T it will act back and regular RAC frame and that\u0027s why how you separate the two types to cope with any kind of path changes anything else that will screw up the ECT capability you actually do a continuous verification of "
  },
  {
    "startTime": "01:16:01",
    "text": "the balance you see that the number of received and act packets is correspondent by similar race in the counters and if it\u0027s something happening then you stop sending so do not get for false benefit of is he marks like when you\u0027re not responding to them the markings when it comes to ECM black hole mitigation there\u0027s some description what you could do for example if you get the retransmission time out during connection establishment you could retransmits without ECT marks as a way of ensuring that you don\u0027t go into primary connection failure but there is quite a lot of implementation freedom around this black hole mitigation how we would do it you could mark 7% your package or anything in the stats but it\u0027s up to you as an implementer in this case so the next slide yes I should add that I\u0027m speaking on this topic based on my experiences writing up the PRS and help try to get the things into draft but there\u0027s also design team behind the holders discussed a lot about how easy and quick should look like etc and just took that and run with so there\u0027s a lot of help from them also quite a lot to change its help from the editors to document so it\u0027s all an community effort but I\u0027m a peer speaking for us there\u0027s still some related issues in the quick working group in their github tracker there\u0027s one about potentially optimizing yak formats that\u0027s might happen or not but it\u0027s at least ongoing discussions around that the continuous verification and applause handling this actually been addressed with one in one way currently is that issue has actually been closed but it\u0027s something that resulted in tax changes coming out in the next version it\u0027s in merchants master currently they also need around detecting Lion receivers so and based on these issues and some I have some kind of high-level questions or issues that came up around this which will go into I know we don\u0027t have time to go through all of them but we\u0027ll see how far we get depending how much feedback I get so next slide so one thing that came up was that there\u0027s this potential attack which is for if B is having a session with C and you have an attacker a which is on the side but he gets a copies of some or all all the packets that goes between B and C he could actually remark the packet and re-inject them in default by the source address spoofing so they reach C and in that way drive down the congestion window for D for the for the connection between B and C and so therefore based on that potential attack we kind of and "
  },
  {
    "startTime": "01:19:02",
    "text": "with the fact that quick as I said before all this increasing packet numbers we if you get the application it\u0027s a true networked application it\u0027s not the transmission when you can I said okay one way of dealing with this is saying that at least if you\u0027re gonna do this attack you need to raise your packets with the original connection which makes it so much much harder to actually successfully do because of the external direction so therefore we only reports the first packet of any duplicated packets that arrives at the receiver so there\u0027s some risk of missing in legit marking that happened downs downstream so to say of the where the packets get supplicated but and it could result in a slightly delayed congestion response but I think this is a trade-off where same straight for for now at the moment to be but people have a penis it is it\u0027s you\u0027re welcome to comment on this etcetera you know okay yeah next slide so another thing which this has really but this may be looking at other ways of doing the acknowledgement formant is well we see actually see easy to zeros and easy to once mixed in one packet flow now that we don\u0027t have any kind of you seen on style use etc and also and this access to do with can we assume one we could actually assume that we will see mostly markings keeping with what\u0027s the default here and I mean current recommendations following the classic is an approach would be to set this to zero period and only use that if you knew l4 s with the corresponding congestion controller and quick you would only see ECT one that\u0027s my understanding with the whole thing and you wouldn\u0027t see alternating but so and if you actually see alternating you probably need to have some dual controller states etc to deal with the different treatments from the net which is likely to arise from having two different coupons so David David black David Blackman floor as author of our RG 83 11 I think you\u0027re you\u0027re on solid ground in assuming only one of the ECT code points in code points in a single flow yeah David does that mean that if you see another one after you that is unexpected you should plug it up and do something I think I want to see where we go with l4s and its use of ECT one before I speculate about hypotheticals beyond there I got Bob right behind me expand on that remark but Briscoe the approach we took in after ACN was that the receiver is just a dumb reflector "
  },
  {
    "startTime": "01:22:03",
    "text": "yeah it doesn\u0027t make judgments as to what might come in the future because you know what Dave was talking about is current experimentation but the future is very long time and and however there is also the question of how how quickly quick deployment is compared to yeah TCP because in TCP we assume that things take a very long time to change and so you want a dumb reflector at the receiver so that senders can unilaterally upgrade and just expect things to be reflected back but it may be a different question music so I I mean even quickcast mostly the same kind Adam report reporting back for the Seas it\u0027s more sequest this was mostly from a perspective if you make an assumption that you mostly you expect to see one of those you could actually optimize the report informant to see that and then you have only summers exception indicators that oh I see something I wasn\u0027t expecting oh good if this is only about optimizing reporting format just don\u0027t so yeah we didn\u0027t in a curation you could in such a way that you can report one or the other usually and not have to report them both or something like that but but but my question was if your expect to see ECT zero and you see easy T zero and then you see CT one do we have to signal that back to the sender is that they a condition we have to do or should we just ignore it I would have thought you do because something\u0027s obviously going strange yeah yeah last I thought Jenna and does there\u0027s a slight difference though the optimization is not it\u0027s not just an optimization it\u0027s also what being able to reflect something accurately so in in in quick the AK format itself is actually quite extensive it\u0027s expensive in the sense that you can have a large number of packets that I acknowledged and large number of gaps are acknowledged and there\u0027s a particular format that that is currently being used so the question part of the question is how do you you know encode this information into the current AK format so that we get the most the most accurate reflection back and if we can make this assumption of there\u0027s gonna be only one of the two that\u0027s default it allows us to get a a more sort of accurate description in the ACT back that said if we need to change the AK format I would say it so quick has versioning which TCP doesn\u0027t have so it allows us to say that okay subsequent version of quick will have a different act format and so on if that\u0027s something you want to do we could certainly do that we don\u0027t have to bike shed the design of this of this now can be done in quick order design T it\u0027s just kind of knowing what to the requirements yeah yeah I think what David said is useful do that hey I think we have a history of "
  },
  {
    "startTime": "01:25:03",
    "text": "devices in the network which think they understand the toss byte but I wouldn\u0027t be surprised if you see CT 0 and E 61 transmuting into each other so something that which can report that happens might be useful yeah yeah I definitely agree with that and I think we need to have that type of mechanism reporting it\u0027s it\u0027s a quest you know how often or how how it done I mean the current formats clearly capable of reporting that only how many you seen during between each X so that\u0027s not a problem so likeness you decide how many questions you want to take because you\u0027ve only got so much of time yeah I think we have you can go on to the next slide if so yes and then this we\u0027re gonna be the last one so detecting heating receptors receivers so I mean this is the only point that a receiver here could ignore to report a see mark for the benefit of saying I will grab a bit more ballast and on the other flow stats are following and reporting correctly if they\u0027re sharing both liquid multiple suppose that\u0027s the kind of assumption there one way of detecting this would be able to mark see marks in index see marks from the sender side so that these sender knows that okay a scientist I should yet report and if you don\u0027t get report you turn off these this and sending at all because we have a lying receipt receiver the question around that was basically the problem should be some limit limitations there I mean okay if you send this very infrequently it\u0027s it\u0027s definitely find its but it shouldn\u0027t be sent to frequently because it might hide true see marks but I guess some common rule huh if you send it every number of hundred packets you\u0027d probably not really hide it as much so but if anyone has any more in PI yeah staying about this go ahead refers to about that technique and obviously you don\u0027t want to do it in a predictable way so we don\u0027t write in an RFC is su random and no or more often than every 100 packets it still tells you something that it\u0027s you\u0027re not overloading you know who you\u0027re dealing with you don\u0027t necessarily need for all the way through it yeah I\u0027ve actually noticed this is is this a requirement or is it it\u0027s it\u0027s this relates one of those issue which was somebody brought up they were that they thought that should have better detection of this type of behavior but no it\u0027s not enough currently no yeah just my personal "
  },
  {
    "startTime": "01:28:09",
    "text": "opinion I told this to you already I think like any kind of us those recommendations are not quick the specific specific so they shouldn\u0027t go in the quick document there should be a separate document that applies actually to all kind of transport entities quick easy that comment Mike Ramiro was the reason why Magnus is here because I looked at that and I said AHA we\u0027re going to do this for quick we should talk about this for the whole community because it\u0027s a way of using easier so it should come here to have a little bit of a discussion at least but for everything for this I think it\u0027s really separate between its independent of quick yeah the mechanism is independent of quick the rules for doing it etc and actually you can do the same thing with injecting losses to see Archie 3540 was the first attempt at this done by a different different code points and it didn\u0027t it didn\u0027t make it in friendly hindsight did not make make it into orbit so I would advise a light careful touch here the idea that I heard about maybe we make maybe run the sandy check once early in the session sound some it sounded promising okay okay lost comment and actually and I\u0027m not I\u0027m not sure this is actually too useful because if the seat Magnus gets removed then you compete with the rest of the world and see losses at some point or whatever I don\u0027t know I mean like you can\u0027t get it it\u0027s all but depending on how much competition you have in the bottleneck okay you can discuss this game on this list yeah I mean there\u0027s a male on the menu list for the other two issues also so it\u0027s and this is the slide so you can read so we\u0027ll end here and because we\u0027re out of time and and please comment on the mailing list thank you question I\u0027ll be waiting to ask for the end all right yep I need the meantime Tom yeah that\u0027s good okay it\u0027s more moral suggestion from the experience we\u0027ve had with after ACN the the the point you made about immediately sending an acknowledgement when you go to see E it\u0027s been suggested we haven\u0027t done it yet you know curious in that actually you could have a time before you apply with the seee cuz if you\u0027re doing stretch acts there\u0027s no not necessarily any need to to respond to each Cee because you may be getting a lot of them and and you only need to wait a certain amount of time and then report how many you\u0027ve received you don\u0027t actually need to go discuss this on the mailing list it will be it\u0027ll be a good topic to talk about "
  },
  {
    "startTime": "01:31:22",
    "text": "let\u0027s just do this okay go for it : okay alright so we have Gauri and I have a draft on looking at the impacts of Transport header confidentiality and encryption on network operations and the evolution of the Internet these were thinking big next slide please so the the the point of this draft right we\u0027re beginning to see transfer protocols of which quick is the the the prime example which do end-to-end encryption and the integrity protection of the transport layer headers so things like the sequence numbers and their equivalents this obviously has some implications it has some implications for the way we build transport protocols it has some implications for the way people build network monitoring equipments which tends to look at the sequence numbers to CS this packet loss entering Firth round-trip times and things like that so the draft is trying to do a review of the in network uses of this transport the transport I had our information is trying to review some of the implications of the fact that we\u0027re now encrypting this information or integrity protecting this information and discuss some of the impacts that these changes are having on the network and the way people manage networks and also in a slightly more philosophical way perhaps consider the impact on the way we design transport protocols and the way the IETF distractors standardization as it becomes difficult to monitor what\u0027s happening and to get wider input into the dynamics of the transport protocol operation next slide so I\u0027ve just been around for a while we\u0027ve had three revisions since the last meeting we got a bunch of comments on the list from our from Chris from Kathleen from Spencer and from Joe touch which we believe we\u0027ve incorporated we\u0027ve done a bunch of readability fixes we\u0027ve tried to give a more neutral point of view and to expand the security considerations so that the two big sets of changes firstly to try and give a more neutral and more balanced discussion of what\u0027s going on not to advocate any any particular viewpoints on whether this encryption of the transport layer headers or the various uses of the transport layer headers in in the network are good things or bad things but just to try and document what is actually being done in addition we\u0027ve expanded all the various introductory remarks about the ossification and the reasons for encrypting the transport layer headers as a way of preventing ossification and added some notes about the implications for accountability network neutrality and the like and again we\u0027re trying to do this in a neutral way to avoid advocating for any particular side and just just factually document what\u0027s going on next slide "
  },
  {
    "startTime": "01:34:24",
    "text": "in addition we\u0027ve actually written a sensible security consideration section for the draft this mostly talks about the implications on avoiding ossification versus exposing information to the network the ability of preventing various sort of data data injection attacks and the like primarily given the nature of the draft this is sort of summarizing and elaborating summarizing on the issues which we then elaborate on in much more detail elsewhere in the draft next slide so this has been running for about 18 months we\u0027ve got a lot of feedback there seems to be a lot of interest from people in this working group we think it\u0027s useful to try and take a step back a little from the actual ongoing standardization of quick and reflects a little about the broader lessons from the development and deployment of these protocols and try and try and learn some of the more general lessons up about it and think about how they apply to future protocols network operations the way we do things in the ITF and that\u0027s the sort of thing we\u0027re trying to get across in this draft accordingly we\u0027d like to ask this working group to consider adopting it as a working group draft we can get in pretty good shape and we think topic is important so if there any comments I\u0027d be very well very happy to receive them and as I say I\u0027d like to request the group consider adopting this as a work item ok Jenna I came here first because mine\u0027s legacy broken I did not think of that so thank you for presenting this I haven\u0027t read the draft in in detail but I\u0027ve seen it in previous iterations and yeah and definitely intend learning to read it I wanted to say that it\u0027s it\u0027s good - it\u0027s very good to see the ossification text show up in the introduction because that was in big part one of the motivators for actually encrypting most of the header was instruct the ossification that we have seen it might be very useful to actually list out some of those things that we are suffering right now specific examples of them are this will be fast open we have some data and some some some presentations that have happened in the past from Apple folks and from others on on problems that deploying PCB fast open because of strange middle box assumptions about TCP similarly MP TCP and there are examples of that as yet I think in the past I think examples of that kind might be useful because those are in fact direct motivators for why quick at least chose to encrypt yes I think that\u0027s a good idea if you can send some point source Raman happy to do that thank you quick "
  },
  {
    "startTime": "01:37:24",
    "text": "quick question pun intended you think this trap is something that would be good if this working group to work on what\u0027s a it is is this like an informational document oh yeah I guess it would be informational I think as a way of documenting something that quick has done this might be a useful thing to do like we have gone through the considerations that are in this document it\u0027d be useful to make sure that the people who are who are proponents not proponents but the editors of the quick working group people who have been talking about introducing network signalling into quick all of them have a look at this and make sure that their points of view have been represented if all of that can be done yeah I think it might be useful thing to have thank you hi Brian Trammell I have not read this version of the draft yet um it\u0027s on my old students did you I was at the opinion last time that there should be adopted this working group I continue to be a vet opinion one question so like there was a very very very long process that went over sore the mmm encrypt draft which this one refers to which was sort of a more general arrangement I think the that we learned we learned some things in that process and I think reflected here how do you see this draft um sort of how do you see the positioning this draft with respect to the wire image in past signals drafts that we talked about in TSP area do you see is compliment or like I mean they talk about easily about the same things but is it I mean is there something we should be doing together on these or it\u0027s just like hey these are different groups that have different viewpoints in different opinions um I mean it turns out people into the same thing but it\u0027s suddenly similar issue yes yeah yeah Gouri certainly has an opinion on this seeing him running up Gouri first I could try an opinion I mean I suspect the IAB you\u0027re going to provide us with some guidance on the way forward and I suspect if this document is well you hope to okay and if this document is well-written it\u0027s going to indicate there are giants over here there are giants over there there are good things over here good but no real guidance probably because we don\u0027t yet have the audience we we we have experience from the past about building things that we understand how they\u0027re used when this document is is raising issues and documenting issues rather than giving guidance so um we didn\u0027t actually talk about at the TSP or anything we didn\u0027t rely with a split between those two documents the first document the wire image document really just says here\u0027s what we mean when we say why our image it actually refers to this document as an example of the type of places we\u0027re considering you know these considerations are coming to the forefront and the supposed to be "
  },
  {
    "startTime": "01:40:25",
    "text": "terminology of this exactly right yeah so we didn\u0027t write I I think wire image is pretty close to done personally um I hope that that comes out for community review september/october um and then yeah so please have a look at it and if there\u0027s feedback from your process here but it makes sense in the scope of that document with the understanding thoughts about talk to me you have limited scope the passing those draft was basic is much older actually it\u0027s been kicking around for a while probably a little bit more controversial leaving within the IAD and that essentially says you must think about these things you must think about the act of non visibility and maybe the outcome of their thinking about it is yeah okay that was on purpose um so to some extent that this is a transport a wide consideration announcing for so that\u0027s probably the extent of the guidance that\u0027s gonna come on the IV on that maybe all we can give right now exactly so we have more experience okay um this is cool please yeah I\u0027d like to see this this is the right working group work clearly I like the scope I like where it\u0027s going I will read it in for my feedback okay thank you great taylor relaying from java and after celeb like to know how much review if you had and comment back on the mailing list i mean we in the one of the previous slides we listed half a dozen people you\u0027ve provided input since the last meeting we believe we\u0027ve engaged with them and address those comments and i if he gets exactly who but there have been previous comments on meetings unload to expand on collins remarks at both of the authors of the unencrypted doc that referred to earlier are on long the reviewers listed here of comment didn\u0027t like to thank both allen Kathleen for doing that yes we had a very long discussion with named blanking security person earlier in the year as well and in addition he\u0027s being presented in v6 hops and will be talked about there again where we know what we\u0027re doing here so and these people provide quite a bit of feedback from the v6 ops community which has been very very helpful we could have been so there\u0027s actually there\u0027s a step between just listing the use cases and giving some recommendation or developing solutions or whatever that means and the step in between is to kind of analyze the use cases figure out what the benefits what the risks are in getting some agreement in the community what we want to support what what\u0027s good what\u0027s bad a little bit it\u0027s like that\u0027s the heart step the more you can the more you can get in that direction the harder it will be to proceed with a document but more useful you can get yes I would suggest the IAB has a draft that seems a good place to put that complicated discussion I don\u0027t know yeah I mean "
  },
  {
    "startTime": "01:43:29",
    "text": "that\u0027s one of the things we need to figure out is the balance between how much of that goes in the ia be strapped and how much goes in here so I\u0027m looking at our lucidum thank you is there anything more that we that we ought to be aware of here about the adventure with the mMmmm encrypt draft and can you say anything interesting about the relationship with this draft to encrypt well Morton I\u0027m really glad to see the whole slide on neutral point of view I learned a lot about that and I found that there\u0027s a really good tutorial on it in Wikipedia yes and so I encourage other people to find that and take a look at it I I support this draft going forward I also support the reestablishment of the support group for iesg another review a stress disorder you\u0027re welcome to join I work with this and I\u0027ll do what I can just to help Thanks thank you I\u0027m not no fan hi Spencer Dredd is about to be RFC 8404 I\u0027ve finally finished off 480 Spencer I think your ma I think your life okay I was just waiting for Al to finish so I got I wanted to also mention that one of the sets of comments you got was from me as one of the editors of the Mar new IP workshop report and because that was me and I see that also is a lot closer to being you know kind of mm encrypt kind of document than this I was really pleased to see this document being just descriptive just from the transport protocol perspective and not trying not trying to do more than that and I really think that that\u0027s going to shorten the stay of these authors and the isg support group meetings which will probably continue for some time but thanks sure thank you I want to give some some piece of background information on the EM encrypt craft and correct me if I\u0027m wrong and but that was an ad sponsored individual draft so there was no working group and it was or it will be finally published without IETF consensus just to make the confusion about the IRT f series more complete okay nice okay so it\u0027s time to go do this please raise your hand if you\u0027ve read the draft I see "
  },
  {
    "startTime": "01:46:32",
    "text": "a good does I see a good any read read read any version of this draft I see well over a dozen hands that\u0027s that\u0027s really good for it for this group okay it\u0027s home time hung if you think the working group should adopt this draft and work on it and if you think we should not work on it I heard clear hum a favor adoption and I heard silence the second time so I believe we\u0027re going to adopt this rule we will verify that in the list to see if there\u0027s any objection thank you thank you very much and thank you for working on this thank you because proxies gonna do it we can run a little bit over if we need to let\u0027s go have some fun here awesome all right I\u0027m Eric Kinnear from Apple and I\u0027m not Tommy obviously but at ATF 101 a strategy for encapsulating Ike and ESP was presented in TSV area and there was some interest expressed in having a document that kind of codifies the problems with doing that and the concerns around doing that independently of Ike or ESP but just as a general what happens when you try to do this kind of thing it\u0027s meant to be an informational reference for other things that support tunneling any sort of protocol over TCP and it kind of covers some of our experience with with experimenting with that but one of the primary things we\u0027d like to hear from all of you is like what are the other cases that you have to do this and what are the other pitfalls that we haven\u0027t captured here I\u0027m sure there are more it would be great if we could collectively enumerate those so that we could write them down and other people could look at them so to get it out of the way this document is not intended to say go encapsulate TCP within TCP and it\u0027s a great thing it says here is all sorts of ways it causes problems it\u0027s deliberately not trying to modify TCP to add unreliability or anything like that so some of the strategies for doing this involve making one of the two GPS no longer really TCP and just kind of fake and that\u0027s out of scope here and we\u0027re also not trying to say this is exactly the format that you must use on the wire to encapsulate things we\u0027d like to document multiple ways of doing that if anybody has any other ones we\u0027ve "
  },
  {
    "startTime": "01:49:33",
    "text": "proposed one but there are lots and lots of ways to do that so first just kind of why do we even want this especially around the VPN protocols case there\u0027s networks that block UDP traffic and Nats that then timeout with UDP at very very different timeouts than they have for TCP so really the reason you\u0027d want to encapsulate stuff in TCP is because you want it to get there at all not because you wanted to get there in the most optimal way or the best way which is why some of the concerns around performance and other issues or things that you kind of put up with because you do this when the alternative is you aren\u0027t going there today so very briefly we\u0027ve proposed a link value format for how to do this encapsulation if you have other formats we\u0027d love to chat about them and add them in but it\u0027s very basic you take what would have been your Datagram payload and you prefix it with the length and you stick it on the stream that allows you to find the delineation between them and at the other end you unpack them and send them along you can also have some sort of type or D MUX value if you want to handle different types of data grams and stuff like that and the nice part is because this is a way to pack any sort of Datagram onto a in order byte stream you can do this over TLS or TCP or anything else you want this is just how to take data grams and shove them over streams and what goes horribly horribly wrong if you do that protocols that actually want to deploy this need to allocate a port we\u0027re suggesting the parallel port from UDP so the same way you have the IQ ports for UDP if they\u0027re available it\u0027s great to use those from TCP so things kind of line up in people\u0027s minds so the the meat of the content that we\u0027re trying to talk about here is kind of what can go wrong with this and what are the around how to how do you deal with it and there are going to be concerns that don\u0027t have mitigations or don\u0027t have ways to fully mitigate it so in a lot of cases we\u0027ve managed to partially make the problem less bad which is not the same thing as not a problem there\u0027s two cases that we\u0027re going to talk about we\u0027re going to focus a lot on the second one so the first one is if you were previously sending UDP inside your datagrams and now you\u0027re encapsulating it in TCP you\u0027ve added unneeded reliability because usually somebody on top of that is handling it and so that\u0027s not great but it\u0027s not nearly as concerning for many people as TCP within TCP where now you\u0027ve got all sorts of other issues because you\u0027re doing to congestion controls and etc so diving right into those yes mia kudamon and wonder if we want to make an even stronger architectural recommendation here and say even if you have reliability on top you should not like "
  },
  {
    "startTime": "01:52:33",
    "text": "redesign your protocol and try to remove it to save a couple of bits because that\u0027s even more confusing to users I\u0027m not sure if like I think that would be the guidance I would give em much of this agreement yeah I from my perspective I think that would make a lot of sense it effectively if you have something on top like that you\u0027re effectively in the second bucket here and don\u0027t try to screw with it to move around where you are so just a little bit of terminology of how I\u0027m going to talk about this because you start when you have duplicate copies of anything the the which one you\u0027re referring to starts to become very repetitive so I\u0027m going to talk about an outer tunnel an outer TCP and inner flows that are going through that outer tunnel so you have an inner TCP and you have an outer TCP one of them is tunneling the other traffic through and we\u0027re going to cover just three concerns which is all that\u0027s in the draft right now so if you have more concerns than these we\u0027d love to add them and make a four and a five and a six but the first one and I think the the main core of a lot of the other issues that that happen are that because you\u0027re running two different loss recovery contacts the inner flows experience loss on the segments that are tunneled inside of the outer ones as delay not as loss and so that confuses things the second one is going to be some stuff around how the congestion windows tend to interact and how buffering and buffer bloat start to really become a pain and the third one is going to be ahead of line blocking in the sense that you are now using 8 in order reliable byte stream for what might not have cared about being in order or reliable so the big one is like I said the inner flows are going to see any loss on the network segments that are tunneled inside the tunnel as delay well the outer tunnel makes up for those losses by retransmitting and that can confuse things because effectively instead of going through fast retransmit and knocking your window down and everybody backs off a little bit you think Oh everything is great there\u0027s just some buffer in the middle and if you\u0027re using purely lost sensitive conduction control now you build all the way up until that delay is so bad that you experience a full timeout and have to start all over and go through slow start again and that\u0027s really unfortunate so this one\u0027s kind of nice because there is a potential mitigation here is if you use congestion control like PBR or something like that that uses delay as input you\u0027re happy because now the the signal from the network about okay you\u0027re going too fast you need to back off the outer tunnel backs off and all of the inner flows also do because that that signal is propagated through which is propagated as delay instead of loss directly there\u0027s one kind of side effect that we were kind of surprised by when running running tests about this is if you have a very minor little bit of loss that and you and you "
  },
  {
    "startTime": "01:55:36",
    "text": "have a short enough RTT that you can make up for it very quickly the outer tunnel is actually going to hide some of that loss from the inner flows and they will on occasion complete faster although I don\u0027t expect that to hold true for the Internet at large so with with very small amounts of loss it can be kind of nice because there\u0027s minimal delay because fast retransmit tends to work for well in in catching up and then your your inner flows don\u0027t actually back off Brandon Williams Akamai in there are some similar issues with tunneling or sending TCP and interactions between TCP and network coding and there\u0027s some discussion ramping up that kind of goes in fits and starts in the network coding research group there some of the work that we\u0027ve done sort of amplifies what you\u0027re saying here about using delay based congestion control that\u0027s an approach that we\u0027ve found effective in the network coding context nice I believe some of the stuff that discussions going on in the research group looks at another approach they might be experimenting with actually using ecn on the inner flow as a signal to say hey I have to say hey I encountered congestion back off a little bit that\u0027s awesome yeah it sounds like we should talk a little more but yes so ECN would be great there are other signals to bring that in and we\u0027d love to add that in here as well so if you have and also if there are other use cases of times where you\u0027d want to be tunneling things like that one we should we should cover those two and make sure we get everything how many most sites do you have effectively two more okay so the last point on this slide that kind of makes a lot of the other schemes that you might try to come up with to be really really sneaky fall to pieces is that very often after you get outside of the tunnel those inner flows need to then be out on the wild wild internet or at least in a they have multiple hops that they need to go through before they get to their final destination and so they still need to be fully functional in all the ways that that implies so you you can\u0027t otherwise tune them with crazy parameters that would mean they just don\u0027t retransmit because they don\u0027t need to all they\u0027re in the tunnel because then a colossus experience after the tunnel now they don\u0027t retransmit they\u0027re in you\u0027re screwed yeah so a next piece which is very related is now that you\u0027ve got all of these guys who are seeing delay or potentially seeing packet loss beyond the tunnel anytime somebody retransmits for a loss when they time out within the tunnel that is "
  },
  {
    "startTime": "01:58:37",
    "text": "effectively a spurious retransmission because the outer tunnel is going to make up for that loss eventually even if it\u0027s taking it a really long time so it may be that 3 4 or 500 milliseconds later it comes back and you get your original act for the original segment and you\u0027ve already timed out and retransmitted that entire flight and so now you\u0027ve dumped a whole bunch of other data into this tunnel that and the tunnel doesn\u0027t know that this is duplicate data that this is a waste of time and so wait very happily delivers it and outside the other end of the tunnel comes this huge dump of duplicate packets a network on the other side is like what the heck man you just handed me a whole wheelbarrow and then you brought in another wheelbarrow too so that causes some problems that\u0027s one of the ones that we don\u0027t have a way to fully mitigate effectively you can do some some sneaky things if you make the retransmission time out of the inner flows slightly higher by at least one RTT of that if the outer flows or that of the outer tunnel you can you can kind of try to avoid that because the outer one will give up and and retransmit hit this bone but you still have a point at which you fall off a cliff and the one thing that does give us a little bit of hope here is we\u0027ve seen that you don\u0027t fall off of this cliff until you have fairly significant packet loss in the in the high-ish single-digit percentage which is not too too far off from where tcp falls off a cliff all by itself so it you definitely fall off the cliff sooner but it\u0027s not like you you suddenly just the floor drops out from under you immediately the other concern here is you end up with multiple layers of slow starts so after you fall off of this cliff waking everybody back up and saying alright let\u0027s get back to a acceptable sending rate means you effectively have to push the window open of the outer tunnel while you\u0027re also trying to push the window open for your inner flows and so you you now are effectively doing twice as much work to to get the packets across once you\u0027ve fallen off a cliff so your recovery is slower that\u0027s it for this slide and I did not advance the last one here is out of line blocking so now you\u0027ve got this in order byte stream that you\u0027re putting things that didn\u0027t really care about being in order on and so when you fall off of this cliff and you have a problem any kind of timeout like that on the outer tunnel means that every other flow is blocked well it makes up that lost packet and so everybody who is trying to sneak their way through here is suddenly blocked by the fact that that one of the packets got lost and that is part of what contributes to that burstiness coming out the other end of the tunnel is all these people who are blocked and waiting up and just sitting there on the other side waiting to be delivered for that last segment to be filled in it gets filled in and everything Donson goes out "
  },
  {
    "startTime": "02:01:37",
    "text": "that\u0027s also very true of a lot of things that end up being tunneled but is still painful when you fall off that cliff and it also means that if there is loss outside of the tunnel on one of the inner flows that it then needs to retransmit for and the tunnel happens to be blocked it now can\u0027t make up that other loss that it actually does need to be transmitted for so somebody else\u0027s spurious retransmissions screw up your legitimate retransmissions that you desperately need in order to make progress so this is the kind of partial mitigation here that I mentioned a little bit earlier is effectively if you can tune some of your timeouts you can make it such that you fall off the cliff a little bit less often but you still in in significantly high loss scenarios you still are going to end up falling off a cliff fortunately it\u0027s not too too far away from where TCP does all by its lonesome faster clarification Weston the second wheelbarrow of packets which we\u0027re exactly the same you said it caused some problems is it just just because you\u0027re selling too much data or well it can cause some problems on the other side on that on that last mile of the network where you\u0027re now an independent flow that needs top right all in its own because even if that\u0027s a if that network was desperately signaling to you by probably tossing out your packets that it couldn\u0027t handle everything ah you haven\u0027t seen that yet yeah and now you just hit it with a whole other blast of packets and it goes whoa there what are you doing that\u0027s why I just dropped it so much thank you fairly quick so we don\u0027t use the whole breakup here yeah Jenna and I feel like you really should be using the word channel in a TCP or something like that somewhere in here there\u0027s a lot of words we could I know on the you might be able to make some interesting you if you control the channel endpoints which seems like that\u0027s sort of the situation you\u0027re thinking about the terminal endpoints I\u0027m sorry that you might if you\u0027re able to make guarantees on how you packet is on the sin side you might be able to do pull packets pull the inner TCP packets out of order and jetsam along reducing the burstiness and so on yes so you might be able to do some tricks there you don\u0027t have to specify them but you might wanna lude to that in the that would be good to mention we did some experience experiments with that and at least under not particularly real-world conditions it didn\u0027t give us that much of a win but I am I would imagine as you start varying all the parameters for how a network could behave it would help significantly yeah it might be useful to mention that the other thing I want to point out is that you don\u0027t want to make assumptions about the condition controllers yes on the outside specifically if you are assuming that it\u0027s it\u0027s small space or the inner one is delay based or not then you might have issues at least just keep that in mind as that\u0027s a good point we should we should we should do a read of the text from that mindset and clean it up a bit "
  },
  {
    "startTime": "02:04:37",
    "text": "because right now it\u0027s pretty dirty yeah Mira\u0027s got a bit lost on this common plugins so we did a very similar encapsulation for RTP stuff in RFC four five seven one I believe there are also similar things as part of a DSP and turn TCP you probably want to reference some of those that would be great I would a true sis you might want to list this as updating RFC four five seven one since it\u0027s the same on the wire format and I think the people who implement that in it I believe it is recently widely implemented would do well to read what you have written the initial list isn\u0027t updated see that\u0027s really get that you live in and say especially regarding the emigration turning she described but might make sense to distinguish between an encapsulation were opposes the endpoints are the one end captivating and declare cleaning or where you actually have a ton of just somewhere in the middle yes that would be really good okay and I\u0027ve got wrong question and I need to ask which is how many people have read this document six perhaps that\u0027s good simply comment this is a what definite one of one encourage are the work here it\u0027s highly germane this working group if for no other reason than both gory and I have and now that the scars in dealing with UD UDP encapsulation and guidance for people who want to do things like encapsulation with UDP okay so thank you please continue what please discuss this on this list this things within the scope of this working group and also we have a 15 minute break for people to do whatever they like and please come back yeah we will start promptly at ten after don\u0027t deceive "
  }
]