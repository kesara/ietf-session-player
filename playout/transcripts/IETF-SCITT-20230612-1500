[
  {
    "startTime": "00:00:06",
    "text": "foreign s to our usual participants I see Eduardo I see Ray rich yoga's yogish is just shining let's wait a few minutes for folks to join thank you hi everyone hey John I was just saying that we should give folks a few minutes to join then we get started"
  },
  {
    "startTime": "00:02:27",
    "text": "hey Steve foreign [Music] did we finalize the agenda for today yeah we we will do an agenda bashing in a in a second uh and then yeah we'll I hope hopefully we will make some progress on the registration policy topic but um if there's some other topics you guys want to talk about uh happen to consider those in during the agenda bashing as well thank you is that good for you sounds good are you here for a full hour today uh I believe I am actually okay I will take some notes again uh as always but if someone can help me uh that would be fantastic as well okay I guess uh John it's it's time to get started right you would say so yeah let's do that yeah yep uh Welcome to our sort of weekly virtual intro meeting for this kid working group um we've sent around well last week at last week's discussion"
  },
  {
    "startTime": "00:04:01",
    "text": "um we concluded that we wanted to talk about the registration policy is at this meeting um in case you have some other topics uh it would be good to bring them up now so we can do a little bit of uh um agenda fine tuning is there anything else don't do anything um or Ray do you have something I'm just gonna say I I've been I actually have been working on this stuff um in terms of the endorsement and uh and then uh I did get my submission in so I guess I'll send that submission thing to the list in case people are are interested that was a submission to the election assistance commission for their their thing but it includes the the protocol and and I'm looking at the um well I don't need to give a full let me just finish this that the um the air gap you know protocol in trying to blend that with TLS um but that's what I'm working on I it's really not ready for discussion yet thanks okay but is that related to the action item you had when we talked about the transparent statement urls and you brought up the air cap scenario is that uh in that context the main body I can go into my current thoughts on it okay yeah please post it uh also on the list so I can reference it in the meeting minutes yeah okay good I'll I'll put because I did work pretty hard on this submission for uh and I'm hoping to get a cryptography group started on the selections um with nist because they've shut everything down uh prior to about two years ago but"
  },
  {
    "startTime": "00:06:03",
    "text": "okay uh so yeah yeah it's actually uh quite a relevant topic uh for someone living in Austria because uh some of our other editions uh messed up the most recent elections uh they made an extra sheet error in accidental and switch the candidates as a uh by doing so so yeah so maybe maybe actually oh yeah it's hot topic okay cool um good uh John you are in the queue is that intentional uh it is just because I took an action a couple weeks ago um on the last times hackathon stuff um this is a progress update since we have time on the agenda bashing um I'll edit that talk in a minute to put some links in um so there is a branch in the public skit Community working group um GitHub for my implementation of the end to end uh receipts process which people are free to look at and discuss uh I just need to update some of the docs before I turn it into a real PR but um there is a usable implementation and the um Microsoft provided emulator are both up there and and working if people are interested okay yeah uh that's a that's a good uh good topic because a few weeks ago we we made a call um basically to everyone showing interest in the hackathon preparation and so so that would be quite dummy so let me put it on the on the meeting notes uh on into onto the agenda so we have um the hackathon and um the voting topic I will reframe it okay so we have those"
  },
  {
    "startTime": "00:08:02",
    "text": "and we also have the registration policies so three topics okay perfect uh so capitals anything else I see Neil uh you joined as well excellent Charlie also here good Peter okay um so regarding the registration policies so I looked at the open issues um let's start with this one because that was what we indicated in the in the official um meeting invite uh there are a few open issues in the GitHub issue tracker and I will post the links to the meeting minutes uh so you can you can click on those they don't contain an awful lot of content um but we talked about the registration policy in the past uh and the architecture draft also contains a little bit of content contains a few attributes of that policy but it's um otherwise um like everything is a little bit on the on the uh sort of not super proposed side uh so the question is like for me obviously we want to make some some progress on this topic this is one of the bigger issues in the architecture document um the question is I'll be a little bit too ambitious here for an initial version do we have something like a minimal version that we can get out and get away with and then extend it later on or um where are we with are we with this topic like what what's the sort of like the workable version that we could put together without going a little bit overboard with these policies it can get very complicated at some"
  },
  {
    "startTime": "00:10:00",
    "text": "point in time Hank do you have an opinion about this put you on the spot here and um I can talk um hi um yeah um how to expediate this we need a functioning um middle ground in specification for issue messages which are sign statements and um transparent Services output which is a transparent statement that is correct registration policy is super complex um at the very least I think um the Gateway function that limits issuers to transparency service I think should be there should be understood how that works and then we are good they're not adding anything it's like a trusting customer I assume so which Gateway keeps a um a limited number of issues to the service I think and if that would be a long enough not enough flowing food um then you can iterate on that this is me speaking without anyone having a stake and implementation next to John here so uh I would now uh sneakily put that Spotlight back keeps on and ask him would you see this the same way that we could have registration policies that are basically uh trusted income stories on transparency services and again maybe naively supersimplifying this um trust anchor obviously means different things to different people um but following those lines I think is is reasonable you know there's a a strategic reason why we chose registration policies for the 117 Focus is precisely because we've got these"
  },
  {
    "startTime": "00:12:00",
    "text": "these various tentacles that are very complex so there are 39 instances of the phrase registration policies um across the document so far and the vast majority of them are using registration policies simply to gatekeep the registration of a sign statement um as you said and the easiest way to do that is to have you know as long as by trust anchor you mean it could be an IDP certificate for oidc or it could be um some kind of more direct device certificate if we've got you know machined use cases with TLS or whatever it might be I think we need to be flexible in how those work but fundamentally some set of identity relationships for the purposes of restricting who can make a thing yes I think that's the best minimum um there have been two big topics coming off this that I as an implementer actually have no particular stake in but I find them um a kind of unnecessarily complex for getting a version of the spec out one is going down the road of formally specifying identities that's how we got into all the did web and did urn stuff before um again if people feel strongly that we need it I'm happy to go down that road but actually I think it's unnecessary for the architectural description of what a a registration policy does um and more worryingly at 116 we had a bunch of conversations about how registration policies might be much more complex than gatekeeping the requester and actually include all sorts of other contextual abec style stuff um even I I don't even know it won't my idea so I can't represent them Faithfully but there were ideas of registration policies having some semantic understanding of the payload"
  },
  {
    "startTime": "00:14:00",
    "text": "itself um and I wanted to make sure we get that all very clean and clear in what the the needs of the group are because I think that's you know making it more complex than what you said I think is unnecessary and difficult but I have heard the group express interest in it so I wanted to flush it out I think do you want to go next you're in a queue John what Coop was that as in the group they're interested so I've heard um this was from discussions with um uh you know sensible and venerable members of this group um so I think if I heard him correctly Roy was interested in things like that although I can't find him now on the on the group I wouldn't want to miss represent him but I think Roy is interested in more powerful registration policies um Cedric as well um her did quite a bit of work around the uh the spec at 116 hackathon to try and deal with things like that and then Ori who actually is here okay so or you might remember better um Orion and at least both of those people I think some others were looking at the implications of remembering and Reporting the registration policy that was in place at the time that a statement was made um which is a kind of Middle Ground I actually quite like that idea but again it's more complex than absolutely strictly necessary um so those are all the edges to that really my motivation is just to get the spec published in a version that makes sense where we know what a registration policy does and doesn't do um and and hence hence it being the uh the agenda item for here okay cool I just uh managed to get to the top of the queue uh thank you Hank"
  },
  {
    "startTime": "00:16:02",
    "text": "um I want to briefly explain what I understand um when I hear trust anchors so when um a statement a statement is signed and provided uh to the transparency service it that signature needs to be verified and that happens via um in directly or indirectly using uh using some public key or slash certificate uh and that's that's the trust anchor that needs to be present at the transparency service um so I is does that match roughly your understanding John uh rough roughly yes but we have to also remember that there are newer sort of web first authentication schemes like the various oidc flows that aren't necessarily a certificate in the way that we would think of them but essentially yeah you know that's true it doesn't need to be an x509 certificate uh but uh conceptually it's uh for example if that's a some other structure with a different encoding um but it still reassembles uh the concept of a certificate or it could be just a a naked key like uh uh Republic Key for example yeah so sorry honestly let me understand you're saying here you're wanting to know the trust Incas we're talking about here the configuration of what the skip Ledger validates the identity against a policy for and then signs not the signature of the skit Ledger itself right now the um I was primarily uh sort of like there needs to be some information I can um let's"
  },
  {
    "startTime": "00:18:00",
    "text": "um use the DLS as an example so to have fewer options like in DLS you if you get a certificate from this server you need to have a trust anchor store with a trust with one or more trust anchors that allow you to um do the path validation um to verify the the signature of what you've received through the protocol and you need something similar something um kind of equivalent in in this context as well just uh uh specifically since we have the um the sign statement uh coming to the lectures slash slash transparency service and so that needs to be verified and and that's when I hear trust anchor um I think that's what I'm which which is trust anchor because it gets a little bit more complicated if we're using did web then you still have the TLs trust anchors that you have to worry about and then it's by proxy so I think Corey probably gives a better definition than anybody else that I've heard well you know difficulty is um John was sort of previously saying that he wants to sort of like yeah push away the details and he called it more complex or more challenging topics like uh formerly specifying specifying the identities but unfortunately you somehow have to talk about those as well because there are subtle details on how let's say it did web did key Etc works with relationship to these trust anchors they all have something equivalent because otherwise it won't work but um it's just different terms different everything but I stopped now and let uh already talk"
  },
  {
    "startTime": "00:20:06",
    "text": "to kind of recap on some of what was discussed at 116. uh John mentioned you know several things that we talked about and they are kind of complicated details um but the I think the primary complicated one that maybe it's possible to to remove from the discussion is the dependencies between different uh envelope formats as related to a registration policy so you know for example if you if you're storing your policies in the transparency service and you want to basically reflect the policies that were in place at the time at which a signed statement was made into a transparent statement you can do that by including identifiers in the um transparent statement that we returned and as you do that you start to build the sort of like these graphs of like well this thing required these and these are the policies that were in place at this time and that can get complicated and it can also be allowed without us specifying it as long as we you know sort of describe that you know these are the extension extension points that you can make use of you can make use of the protected header you can make use of the unprotected header and you know what you do with those values is kind of your business but it's not necessarily ours the issue is that if you want a consistent way to refer to a sign statement that's been made transparent in a particular service you will have to sort of describe some identifier scheme for that it could be a URL it could be your n it could be your eye but if you want to be able to take a"
  },
  {
    "startTime": "00:22:00",
    "text": "reference from one place and make a pointer to that you know in another place you're going to be including that reference and and that's what created the complexity um so that's just you know a summary of kind of what was discussed and uh yeah I think you know the important part here is like you have signatures you have issuers those are the entities that are doing the signing you need to discover keys that are authoritative for those issuers every verifier relying party may have their own way of doing that but you won't be able to discuss verifying without discussing issue or identity in some format that's it or a follow-up question do you think it's possible to remove that complexity for about the information of what policy was used when it when the transparent transparent date I think it's what's produced it was to my understanding it was out of scope originally to discuss policy specific details so right I think we're including a reference to a policy by including a URI or URL uh is something that you can always do but it shouldn't there shouldn't be any interoperability impact from the decisions that we make on that now if we say actually there are these specific header properties that are supposed to be used to establish interoperability around references then it's in scope so I don't know you know which of those two things we want to do but we discussed to specific header parameters that could be used to point to other references at 116 and if we wanted to go down that path that's where we would have to continue the work"
  },
  {
    "startTime": "00:24:01",
    "text": "thanks uh yogish hello can you hear me yeah now now we can yeah okay so I think should we just kind of because a bit of a registration policy detail could be a very much an implementation kind of a aspect of a transparency service can we keep it at a high level where we say that the minimum guidelines or minimum registration policy requirements we should state in the architecture and and and leave it to there because otherwise we're going in a circle where there is very much tied to an implementation which could lead to an endless kind of circles there that's my feeler that's my view on this how much what yeah into the document would you sort of postpone it entirely to sort of an extension or a future version two kind of uh or something like um the registration policy is required to validate the issuers with a certain uh like uniquely able to identify the issuers unambiguously and can be recognized using some known trust anchors or something like that at a high level what is what we should the registration policy should do rather than how it should do okay what what kind of ease out our responsibility in a way that we don't force a specific way of doing registration policy because policy is very kind of complicated matter and if you lock down ourselves to a very rigid policy then also it reduces the scope of our"
  },
  {
    "startTime": "00:26:00",
    "text": "architecture I think so that's all I wanted to say okay thank you Ray yeah I I agree with that concept um of trying I'm not you know detailing it too much but I wanted to provide a uh I what I think is a pretty powerful idea that was helping me with regard to the air gap thing but I think it can be applied here and that is this idea that the skit transparency Service uh the registry everything you know just the core of it though um is acting like a proxy at like a proxy agent to to what would be the other side or what would be one side of a TLS connection so the TLs connection is already well undefined and understood um certainly we'll be using that with people communicating with the service but I'm talking about if they say if you would have communicated with me back at this time I would have provided you these things to prove my my uh you know identity and so forth as a certificate that I would have provided to the other side of a TLS connection and the skit service basically acts as a an agent to to record and and and and and memorialize those things such that you can come back later and say okay well I want us I want to act like I'm at the other side of this TLS connection and by kind of looking at it this way maybe uh [Music] this would uh allow us to um maybe even leverage some of the any of the newer Concepts that would be coming down for TLS although I'm a little bit cautious about that um because they"
  },
  {
    "startTime": "00:28:01",
    "text": "don't all necessarily apply but anyway that is the concept that that we look at uh okay well if we if we did have to act as a as an agent and record these things such that in the future if someone could come back and act kind of like act like they're there on that side then that may be enough now if you wanna establish registration policies for I think that's up at a higher level like an application layer or something where where this is more uh if you will a single-ended transport layer with with a uh and this agent on one side that's not that that could act like anybody coming in later and accessing the the artifacts uh just that idea maybe that'll be helpful to to think about this and and I it was helping me with the air gap thing because uh what I came to was that it's going to be really useful just to use TLS in some form for both sides of that and and that that's going to be a another good powerful idea that can help thanks okay thanks thanks Roy so I just wanted to voice the opinion here that you know we're we're at the point where we're trying to Future proof and think of some of the things we we're going to run into going forward I don't think there's a problem with what we have today but we're looking for gaps or features that we think we're just overlooking in the case of configuration of what identity providers we're going to accept in the next five years we're going to have everything from post Quantum to did mechanisms coming in that we have to to be able to adapt here in the in this venue of software supply chain we're already talking about"
  },
  {
    "startTime": "00:30:01",
    "text": "um probably trees of data to evaluate with the current security posture is based on cves and vexes and s-bombs and things like this dealing with those receipts at bulk and knowing that the configuration or the the identity trust has changed since the last time we audited is why I was driving to say hey we kind of need some Escape hatched here to understand what the configuration is there was other thoughts that Hank and others proposed of hey there's a feed but not everybody's going to be sitting monitoring the feed 2400 24x7 um so this is a way to deal with stored or air-gapped or things carried across boundaries both you guess and and rare correct that that we could get by with an initial State the question is do we want to think about it now because pretty soon we're going to have to do something if we start getting clouds federations right um what type of information needs to be available to sort of half the policies you have in mind that's fair I think from a a product that's built with the skip building blocks there's a different set of policy outside of this right so you you know you could Envision only people that are approved to be able to publish to a products cluster makes sense but that's more of an hour back problem that doesn't belong in the notary Ledger half of this thing what really is in the The Ledger portion of it is what identity providers and what sources are we going to to evaluate and store the information for because you kind of need to know"
  },
  {
    "startTime": "00:32:02",
    "text": "that policy bar is before you accept the receipt the receipt isn't a hey you can go back to The Ledger and go and retrieve all the raw information and rebuild the certificate chain or did document yourself it's more of a case of hey it exists anything that we have a receipt form must have passed a policy the question becomes what was the policy but basically what you're calling trusted roots okay thanks thanks and I'm truly I am fine if you say hey we want to push this down the road I suspect though we'll be back at this point in a year having to put in this functionality anyway okay um Hank yeah this is me just being an interim uh summarizer so what I um a true strippered is that um I think pretty much everybody agrees that a key list of public Keys somehow is required to have validate issue identities if you don't have the key uh that's the Gateway uh gatekeeper not in um so uh that's that's called this list of public Keys wherever you get them from if it's a justification path this is basically the term that you use instead of a certification path that's right uh certificate chain today and so uh it doesn't matter where it comes from although where it comes from the influence the second item here so if that is an agreed one the next step we have to agree on how is that represented how do we represent that list of public keys that are coming from things for example pkx certification Brands then if you know how to represent it then you have to understand where to find it that of course relates to bad stored"
  },
  {
    "startTime": "00:34:02",
    "text": "um we have this appendoli log you can store things in there I heard that feed might not be the only thing because you have to monitor that and or have an understanding of at least when last you monitor that's your current um no understanding of what the registration policy probably looks fine and if you know where it start how to point at it from a receipt that is basically the representation the identifier also uh if you are just not needing that um so so I think these four items we have to agree on somehow in in sequence maybe maybe in parallel I don't know and then we can progress everything um because then have a baseline registration policy nowhere to find it know how to deal with it and how to establish trust into it or not and um I think that's that's how I would summarize it um maybe that's again a little bit oversimplified but we have to move and that would be something I at least I understand and thank you set forward um second item is how to represent that list so much noise are you [Music] perfect okay uh repeat that again Hank Okay so first decision populist with all the where it comes from yes no if yes then uh what's the representation of that trust anchor uh star thing the standard that it keeps you validating issues then where to start it which basically also indicates battlefinded um and uh and then how to find it so what's the representation of the uh identifier here the lookup or resolve whatever and so uh we had for the for the where to start I heard some concerns"
  },
  {
    "startTime": "00:36:01",
    "text": "that feed might not be good enough and and that is something we have to discuss then uh but I think these four decision points you have to pass and then from there we can write text pretty fast and uh do all the uh minimal required things here and then we can progress I think that's my naive point of view uh maybe there's some caveats there yeah okay thanks Hank I think I captured it uh Neil hi thanks a bunch um and sorry for the audio problem um so I confessed to not being uh really up to speed here but I just want to briefly note that I'm kind of nervous about some of the discussion of getting of adding more complexity to to skit um you know my general advice is to really simplify really try to um recognize that relying parties are really going to be the ones that have to make decisions and just trying to provide them with with uh you know the um set of Stein's sign statements to work with um and then you know so I see Sig store still as a great example I think it is making very simple decisions about a lot of these things and I think that people are going to have to deal with the realign parties are going to have to deal with these things so I'm trying to picture our registration policy that would actually help relying parties and uh I I wonder if even the notion of restricting statements to certain issuers is going to do enough in other words uh you know this notion of a trust anchors in a list of keys kind of way because I think we all know that over time any given issuer might be compromised so a relying party can't"
  },
  {
    "startTime": "00:38:01",
    "text": "just trust all the statements that make it into a particular instance um because going back perhaps some arbitrary amount of time you might say wow that that issuer was actually compromised and you can't trust it so relying parties still already have to deal with that so you know from uh from a volume standpoint it can help to reduce the number of people that are actually publishing in a given instance but not necessarily from a trust standpoint and I think I I I saw a brief mention of tough the um transparency um what does it stand for uh opposite abbreviation the tough the update framework yeah yeah the upward framework um it provides some great ways to deal with compromise and key rotation and so on and and I think that incorporating that into um the inner works of things is going to be in a sense more helpful than trying to add even lots of issuing party registration agreements so I don't know just some some random thoughts but it the more complexity and the more optional stuff and the more opaque stuff the less possible it's going to be for people to make trustworthy decisions you know to make actually valid decisions thanks uh the point you mentioned tough uh I thought that you are arguing for not describing any policy basically leaving everything kind of open but then you mentioned tough um and I happen to have looked at it in Concept in context of firmware updates and it's actually a super complicated system so so those two things didn't quite line"
  },
  {
    "startTime": "00:40:01",
    "text": "up with what you said um but um what well I mean I so what I'm saying is that um as a relying party I would want to understand things like tough and I would be happy working with people who sign statements using keys that they um you know assert are using tough but that's in a you know that isn't trying to make I I don't know they they have thought through a very you're right in the sense that they have thought through a very uh carefully designed set of um policies for delegation and for key rollover and and ultimate trust and so on so in that sense I I'm endorsing them as having solved one of the very little problems I just and I think just reusing it would be a fine thing but that doesn't have to be required by uh by skit I think skit could basically say you know a lot of people are having good luck uh promising that that they're using tough and and letting relying parties know that they that they should expect that and and I guess you'd call that a registration policy again I'm not up to speed so I think it's it's a good way to frame it thanks thanks team uh one fundamental question I have is on the registration policy is so long as we can identify the issuer the the the statement is signed by the issuer identity that that that key which signs the statement may not be the same key which it registers with the transparency service"
  },
  {
    "startTime": "00:42:00",
    "text": "or I mean to say is that why it needs to be tightly locked I am not clear because an issuer can issue five different products with five different keys but when it registers with the transparency service and tells that hey I am an authorized issuer it may have a different out of band identity so that the transparency service identifies that guy so why there should be a strict correlation between signing statements versus identifying that issuer only through that means I didn't quite get that your guess can you rephrase that Yeah so basically what I'm trying to say is that an entity X registers initially with the transparency service to say that hey I am entity X and it it has an identity which is corresponding to entity X but it is using for five it has five products and it it signs these five products with a different identity but it produces an identity X as part of the transaction when it is registering uh with the transparency service so the transparency service identifies that this is a guy X who is issuing these statements why the signature on the statement should be linked to that verification in the registration policy that is not clear to me so can I summarize you're basically saying hey they have an authenticated connection they use the identity of the authenticated connection can be different than the signature on the statements they made yes correct yes in our discussions we don't treat we don't even talk about the authenticated connection portion of this what really matters is the signature on the statements themselves those are the things that are validating whether it comes over a a pipeline that comes from a factory or let's say AWS or or"
  },
  {
    "startTime": "00:44:01",
    "text": "cool has a build service they're just a way to get into the system they're not making any claims of of the product or whatever it's the statements identity that we're talking about here and has nothing to do with the authentic connection but the registration is all about identifying who the right person is right correct but it's based on the identity it's similar to you can have your wife go and take in your signed contract with a notary on it from from from Ontario as long as it's Ontario notary that's understood the fact that your wife brought it in doesn't matter it doesn't change the statement that the notary backs your your signature right the transport mechanism how it got to to the notary is not as important as the actual contract and the notarization stamp okay but if if I know the guy through some pre-exchanged information but if it goes in front of a judge it's not the fact that your wife carried the documentary and it's the fact that the notary saw you sign the contract and your wife is out of the picture at that point okay maybe I will think about this yeah thanks yeah but this will be a really good example of a registration policy because the notary like a real notary has to witness the actual signature of the person signing it um and they have to sit there in real time and verify the ID and so forth of that person so the idea that I don't think they allow the wife to bring in a science document um that they don't witness that's a policy of what you would be the you know I just have one sorry I just have one comment uh to"
  },
  {
    "startTime": "00:46:01",
    "text": "yogesh's point I actually I totally agree with that uh we're really spending a lot of time on you know notaries and receipts and that sort of stuff but if I know the party if I'm Hitachi and I'm Contracting with uh I don't know uh you know Mitsubishi uh for part uh we have a long-standing relationship I don't need a bunch of uh verification on that my concern is mostly that we can track Mitsubishi's performance on delivery and all that stuff uh and so I really would caution us about getting too far down the road with the various uh metaphors of you know notaries in the real world and so forth uh the important thing here is the payload not so much the uh you know the the various pieces of administration around it which in my opinion are you know optional additional things that help the functionality not vice versa yeah well that's true I mean that the point there is that you can and what I actually wanted to bring up was was how let's encrypt used um what what they did was they they look for actual evidence on the domain to prove that the domain was operated by the you know vanity that was claiming to own that domain so that you know if you if you're a big entity like Hitachi and you know the rest of these big companies then um certainly you're going to have already a certificate that's that's you know formal certificate and there's no problem 509 certificate but within the software like open source software World um you don't have these necessarily established entities uh you may have people submitting it and the the idea would be that you could maybe leverage the concept of how what's"
  },
  {
    "startTime": "00:48:01",
    "text": "encrypt does it where um what you're doing is you're having a skit machine just witness okay look I went back and this guy proved that he has this uh you know private key that is associated with the public key at this time and and so then the skit machine is witnessing that um that may be uh so so it may be the policy though Charlie that that you say well look I need a wet signature on things or I don't like I I'm I'm okay with with just getting um you know claim that they have this private key or or that they have the the artifact so the artifact issue is another one where if somebody walks in and says here's a hash value and and I have this artifact on my side I'm not going to actually let you see it but I claim to have it well you have to substantiate that claim by by uh um you know give giving it maybe a a random number and say well now hash it with this random number is the same way hmap does and then uh you do it two times so you give a void so forth so then you get a value back and anyone else who gets that could do the same here's that random number and I can validate that when they got the guy does have it even though we didn't we didn't actually exchange it or actually ever see it um but uh bringing this back around the registration policy I think the question in my mind is is it just a matter of of how well we check the certificates and so forth like Charlie says we already know these entities we don't have to check too much as long as they're in our list or we have to have wet signatures or is it more than that on saying it has to follow it has to be a spdx s-bomb uh submission before I accepted and so"
  },
  {
    "startTime": "00:50:00",
    "text": "forth that's getting kind of too far in the weeds I would think but that I think is a question that's good to talk about thanks I I really I lost you but uh um specifically we talked about policies that related to the content of what is being registered but they at that point we said we are not going to do that um so in that sense to bring these questions because I don't know yes can you hear me [Music] um can you hear me yeah yeah go ahead yeah uh I just wanted to bring a point like I understand Neil of keeping like it's simple but I also see a lot of use cases where like maybe for example in iot or stuff we don't have the power to for example verify the same policy with the same concept not for like the same level of security so as like I was mentioning also like uh right for example if we want to I do not verify that the private Keys Kept Secret inside the like it's completely secret and stuff we might go further in the check of policies but at runtime we may just need to verify that it was not later on invitated or removed as a public key so I feel like still having the the policies there something can fasten up once we we are run time without removing trust or without moving security I would say so if you like I'm not saying that you should be inside every envelope or stuff like this it might also be as someone suggested directly inside The Ledger that we can query and check which policy were applied or how were the policies"
  },
  {
    "startTime": "00:52:01",
    "text": "but I feel that removing them let's say as a national as like yeah uh removing them completely would remove some use cases where we might don't want to reproduce the whole policy but maybe just check the validity of the key itself still so now we'll move the stuff let's use it I think things um yeah I don't think the idea is to remove like the policy functionality all together but I think it's just a question of um what is coupled at what stage like is it something that is implementation specific um both standardized and how far do you need to go with standardization at the beginning when it comes to sort of the initial version of the protocol I think that's that's where I'm trying to make a judgment of what the group wants yeah yeah nice sorry maybe I didn't uh express it well but yeah the point was I feel we need to standardize still how we what we applied let's say it so that I can avoid reapplying completely but maybe checking a sub Justice subsection of the policies or these kind of things so I feel I would need completely the information about what was done in my opinion so that I don't have to report to replicate it completely but I can just script some minor points let's say I wonder how this could work um but maybe maybe you can sort of explain on the list on how you think this could actually be done uh like technically yeah yeah I can think about something how to explain it Charlie"
  },
  {
    "startTime": "00:54:02",
    "text": "can you hear me sounds good I think I see my little bars Rising here so the uh basically the uh you know the use case we've been talking about are uh parties that don't know each other and parties that uh have no exchange of hard Goods for the most part uh we're talking about I think the major use case that a lot of people are having in their minds here maybe it's unstated but it's you know uh webcommerce or web uh web authentication and uh things like that uh I have a totally different use case and I'm just not hearing that much uh attention to it and that is I have a uh device say a medical device or something that has hardware and software in it and I have to be sure that I know the suppliers and that there's a way to track their performance and uh a way to uh you know understand their ownership and so on and so forth and I'm going to be basically maintaining that or some authoritative third party that's part of that supply chain will be maintaining that and uh the honestly this you know the all this talk of receipts and um and policies and things like that are kind of uh you know side effects to that use case and I think if you're talking about a strictly software use case you're in similar situation because you know you know identification and uh receiving and a whole bunch of those things are just you know they're all self-attested right now and that is more or less okay to start so I would Advocate spending less time as I said earlier on the superstructure and more time on the payload and how that uh how that could be stored and manipulated uh in volume over thank you you said you would like to spend more time on the payload"
  },
  {
    "startTime": "00:56:03",
    "text": "yes what's the data structure that we're going to use to store an s-bomb for example how does that uh how does that relate to how do I how do I uh store characteristics of um uh you know suppliers and their ownership and countries of origin and other areas of concern you know named individuals all those things that I'm going to have to be worried about when The Regulators come knocking right so yeah uh so those are important and I also want to be able to track my own quality so I need to track the quality of suppliers and it's going to be a way that I can store that and evaluate it in real time for the most part or periodically uh and those topics just haven't gotten any attention at all so I'm concerned that we're over specializing here um thanks Charlie um we have four minutes left and uh and two people on the on the in the cube uh we will definitely uh John and I will definitely have to put something the next steps on the mailing list we had a couple of uh good things brought up already uh so um we will sort of come up with an idea on how to move forward with this but uh uh Ray and and Roy you guys still have the the floor yeah I I know that certainly the payload like the application specific payload like shooting out from what Charlie said is uh something that maybe is better I don't know if maybe it's better done in something like a schema.org type thing where you're working on the exact schema of the content for that for that use case um but I just wanted to give you this quick idea which is to maybe use what rats did and say okay we're going to have a registration policy verifier up front here and"
  },
  {
    "startTime": "00:58:01",
    "text": "and then we can we can basically provide the mechanism for uh for people to for something to sort of review things before it goes into the this get machine and um and yet not have to have us uh detail out exactly how it's done above and beyond exactly what we need to maintain the uh the basic certificates and so forth for who's putting it in and how we verified that and I think that's the basic register you know the basic core registration I think we're already handling but above that um the I think that that may be a good way out is to just say this is a somehow put that defer that how rats did they said there's a verifier that does a registration verification thanks yeah I agree and I think maybe just put a bullet in it and say we're done with that let's move on I just want to point out that the definition of of s-bombs and Vex and cves are being done in the discussion with sisa and open ssf and a whole bunch of other committees the relationship of those documents and the format of those documents is being defined outside the ietf and that that's perfectly understandably acceptable is from where we're seeing because there's just so much movement between various governments at this point the the conversation of rats and how it does things invalidate the relationships up front I have no problem with the problem here is how do you detect when something's changed in a CCF confidential compute Foundation sort of scenario with rats if the hardware changes then the next layer is not going to run how do you detect in this case is exactly the same thing that configuration or a new identity provider has been changed since the last"
  },
  {
    "startTime": "01:00:00",
    "text": "time you did your audit and that kind of gets into some of this iot discretion which is why I suspect it might be worthwhile for Rey and Charlie and I to have a side conversation to make sure we're all understanding everybody's Viewpoint uh because I think some of the details have been lost here now if you can detail that out Roy look at the exact thing that you're thinking about and and then because I don't really understand exactly what you mean but if you can if you can maybe write that up then I I'd like to understand it thanks yeah yeah I too uh I'm happy to participate in that uh Roy uh and Ray uh I just think uh you know we've defined that I'm involved in s-bomb and Vex and csap and all kinds of other crap here and I'm so I'm very familiar with all that uh but we haven't spent any time on how we would uh you know provide a utility to use those and I which I think is the the essence of skit so that's that's where I'd like to spend a little more time if if possible so let's talk offline yep okay let's do that guys thanks Alex thanks Joe Roy please copy me as well because I have I feel well let's discuss it on a mailing list I think that yeah that's what that's what I meant yeah this kid that lots of people are interested in that debate I suspect what's gonna happen here is Charlie and Ray and I are gonna start a thread make sure we have each other's thoughts and ideas captured correctly then we'll I sure back on the aliens right now I think we're missing some details and we're talking across purposes so I'd rather have an author all three of us submit something into the mailing list but let's get it clear first yeah I put you on on giving extra item in the meeting minutes awesome Hennis and feeling much better now that pneumonia is over thank you"
  },
  {
    "startTime": "01:02:00",
    "text": "thank you thanks guys let's get this concluded foreign"
  }
]
