[
  {
    "startTime": "00:00:13",
    "text": "you can be blue shooted in more than one thing per second oh so who ask what oh okay so this is the one of the other drafts i think it was 80d right yeah 80d was at least one yeah okay"
  },
  {
    "startTime": "00:02:04",
    "text": "okay now we can start okay all right so this is ipsec emmy can remote people actually hear me now just checking do we have any remote participants okay hear us okay so this is my basic academy working group starting and i'm terra kevin and this is my co-op co-chair job and our responsible ad is not here because he's in tls but we have this you know spare ad poll here all right let's go forward next page you have the slides okay so this is notewell that is all probably not noted well already and text is on purpose so small that you can't read it because you have read it already beforehand we go to the next part remind people about here yes obligation yes i think it's a next page so administrator so you should you should go to the mid echo and log in even if you are not you know following things there but you should be the blue seats are generated by that so you should call the media echo log in so probably make it a little bit more clear if i talk without my mask so and there's a chopper which actually should"
  },
  {
    "startTime": "00:04:00",
    "text": "be probably replaced with the tulip link but i don't have that one yet and there's a notes document that is already halfway propolated so we would like to get some note takers that would actually add some stuff to the notes any volunteers oh peter is nodding him but he sent me a message that he are not willing to do that this time okay paul is doing something hopefully somebody will help because paul is also presenting at some point it should be it should be only going through the discussion so but okay okay we can follow it somewhere okay oh it's a chat room okay technology doesn't matter all right so and so so and you should be wearing masks here because well you are not presenting or or eating and what else we do we do nothing else so let's go to the next slide so we didn't have a slide about the mask no i don't have that one yeah i just mentioned it just remember the series yeah all right so so this is our agenda so we go to the did the neutral technical difficulties we didn't have those that this time probably no agenda bashing or does somebody want to add something to agenda and then we have a document status and network items we have oh actually this is this all of these work items are something that are not necessary in charter of the no current work but should be useful in that or might be getting worked on i don't know any comments on the agenda okay so let's go look forward so one of the reasons we have been so little things to do is because our publication requested q is getting long"
  },
  {
    "startTime": "00:06:00",
    "text": "so we have we have one rfc attack version to intermediate was published as an rfc since last i think and then we have uh three two documents in the ita ist evaluation and then we have a couple of in ietf last call and ada evaluation and multiple key extensions population requested one of the comments i had for the multiple key exchanges is that there was some discussion about you know some people doing some interrupt testing on that so it might be actually useful to get some numbers for that for iana so it might be perhaps useful to do the early allocation of the you know request for early allocation of the inr location for multiple key exchanges because i think it's stable enough that we don't need to do anything the the numbers are not going to be the iron allocations are not going to be changed and then we have this one document that is labeled ipsec that is waiting for for you know chair review and write up things and then we have the uh three documents that in some way of are in working process the out announce hasn't been i haven't actually seen anything from that for the same time uh gi version 2 is still waiting for more reviews but i think we are not going to get those so i think i will kick it forward anyway it's still in the last goal from beginning of the year and working through blast collab and there's this ad ike which i think is probably quite ready to go to the you know vertical blast call and then forward okay i think comments objections right so yeah i haven't hit the button yet okay where are you go first okay just want to"
  },
  {
    "startTime": "00:08:00",
    "text": "make an update on these uh last three documents because can you speak up a little bit because i can't barely hear can you hear me now we can hear you better well okay because i am uh calls out of all the three documents i can just make a quick update so uh jq 2 uh is waiting for reviews and as far as i remember at the last itf meeting a few people uh volunteered to review this draft but this didn't happen unfortunately so it is just a friendly reminder reminder for those who not committed but at least agreed to review this draft that the draft is still waiting for review and i'll be happy to receive any feedback and what about health announce uh i think uh the draft is updated recently and it is i don't think it is ready for last pool but i think it is in some point where a review is very helpful and probably to the next atf the draft might be ready for last call and what about episcopals i think that the draft is stable and ready for last call and uh we already wrote to the chairs requesting the last call the multiple uh was the last one was the multiple year or what was the last one yeah sorry and uh muhammad also says in the chat room that uh he thinks it's ready so so the seem to be comment that the ike is ready for the last call and uh i cheat version two i think there was somebody starting with p or something like that who uh promised to review it or something like that"
  },
  {
    "startTime": "00:10:00",
    "text": "okay next comment hops christian hops so i we promised to be giving public source code for iptfs the whole time we were writing it we finally got the publication you know the okay to publish it so uh just pushed up the the original reference um implementation which does the whole standard that's based on bpp um and we're right now we're uh writing a linux version and we also got the publication okay on that so that's also been put up on github um i can send some links to the mailing list yeah that would be very useful and i think actually don't we have some kind of code repository thing that actually pro provides links to the implementation i think we have something like that so you should actually check out that and make sure that you publish in that there also okay yeah and oh and like and we also did strong swan changes a long time ago for the ike uh stuff okay so that's for the current uh working groups documents so next slide is i think we are going to be presentations so these are all not necessary in the you know direct charter items in the iq version 2 but sorry me but might be considered as a small enough extensors to be added without charter changes but we have to discuss that slider after we get to the charter discussion so daniel hi everyone so this this extension is um um well the ipv4 downstream fragmentation notification extension and the main purpose is when a security gateway realized that it is undergoing fragmentation and is doing um"
  },
  {
    "startTime": "00:12:02",
    "text": "reassembly or processes it can notify the other peer so next slide so um the reason we want to avoid um fragmentation is that when a security gateway is is needs to do some reassembly it requires some resource and in case of heavy loads you have the identification id that is not large enough to prevent duplication so um it has a sort of security issue and the problem is only happening for uh ipv4 where um fragmentation can happen in the middle next slide so basically the scenario is you have two gateway and an ipv4 network between the gateways somewhere so one way to do if fragmentation is a problem you can set the bit to the done fragment bit to one so that you avoid fragmentation the problem is that a router is in the middle that is receiving a packet that is too too big may send a packet to big icmp message but that that message is unlikely to to reach the gateway so um the the gateway is sending and uh is not receiving the response i mean the the information that there is a fragmentation um happening and so um the system from installed which is named as um black holding so this is one one of the reasons um we we don't set this df bit to one but"
  },
  {
    "startTime": "00:14:02",
    "text": "instead of two zeros so that fragmentation can happen next slide so what we propose is that when the security downstream security gateway um is proceeding to reassembly uh it can i mean you can't proceed we're not preventing that but you can also advertise the sending gateway that hey you're sending packets that seems a little bit too large for uh the network and we expect i mean so and you can also send an mtu value so that that security gateway can adjust the packet that is being sent to that receiving gateway the principle is very similar to the icmp packet too big it's basically the same and this is aligned with the recommendation of rfc 8900 that recommends that fragmentation is being handled by each layers your specific mechanisms so the the idea is to rely the least on the ip signaling next slide so you have the supported agreement to support the extension and when you have that um uh fragmentation happening you send um the notification which is the uh designated as a ipv4 downstream fragmentation the receiving security gateway can be initiator or respender it is not related to that um next slide so what do you do oh so that's the very complex data sent by the the security gateway so that's the data"
  },
  {
    "startTime": "00:16:00",
    "text": "carried by the extension so it's actually only the mtu value sorry 32 pitch oh well you have mutable lines [Laughter] so the next slide so what we expect so it's one thing that you receive that fragmentation is ongoing um then i mean another thing is how you handle that and you have different ways one way is that you advertise your peers in your back network that um fragmentation is ongoing so typically you can send a packet to big message to those um so that the inner packet match the mtu advertised by the the downstream security gateway if some the packets are the inner packet is enabling fragmentation fragmentation can be also handled by the security gateway it's a one way to do and um the the security gateway can also perform out of fragmentation um so there are um different way this could be handled and we leave that to the implementation and i think that's all thank you okay go ahead valerie uh i think that this draft must be subject for transport area review because uh well uh i remember when uh fragmentation was developed there were a lot of discussion with transport guys because they think that uh"
  },
  {
    "startTime": "00:18:00",
    "text": "well fragmentation uh is uh is the realm and they think then they know how to do it right and don't worry that we are invade the wheel because well the problem that packet too big icp message is often blocked by the network is not new and as far as i know it's long ago another approach uh is used and picketization layer passenger discoveries it doesn't rely on this icmp message it's rfc 4821 and so it's probably worse to look at rfc and it is updated for udp i don't remember the rfc number it's quite new something like 88 99 because initially it was for tcp only and so i was told at the time by transportation guys that most current operation system supports uh this rfc i mean package the practication layer uh passing to discovery and don't rely only saying be too big no more so i'm not an expert in kernel but i trust them uh so probably this is this is not a problem this is not so big problem as you described and uh another concern that i have uh we have an uh ipsec architecture rfc protector 301 which describes in very detail how a simple message should be forwarded by security gateways so that this error message including packet to big uh get reached for the initial sender"
  },
  {
    "startTime": "00:20:01",
    "text": "and so that everything works and it's i don't know whether everybody implements because it's quite complex because traffic selected for tcp must also include an acp message that is related to this issue to this tcp stream and it requires some additional uh additional code uh in the current additional logic but it is so uh how we violate with this draft as a basic architecture referee another concern that came to my mind was that probably this approach is not it has its drawbacks because it assumes that as packets out packets will have john fragment bit set so that i know they are not fragmented and once the receiving gateway reports the mtu and again the transport cars guys think that ascending host must always try to increase them to you pass them to as much as possible because road might change and so then to you may change so that's why i send ascending hosts sometimes tries to use a big mtu and in this case i think that some additional logic must be implemented in the security gateways it is duplicated by the water logic is implemented in the sending sending host so that it must not stick to a particular mtu values it was reported initially and it sometimes it must try to increase this mtu and see what happens so my concern is that it's"
  },
  {
    "startTime": "00:22:01",
    "text": "it's an area that is belong to transport guys and probably we don't want to reinvent the wheel and one more question just for the slides can you come back i have a question back and one more and one more one more back oh no not the very beginning the next next next next oh well this one uh previews well uh i don't understand since is it the last message in the diagram is it the standard iq2 exchange that requires a response because you just show it as a one-way message so if it is a one-way message on likely two layers that it will uh which will break the fundamental principles that every request might have a response or am i missing something yeah so um i mean i didn't get pretty much the concern but when the one gateway is realizing it's doing uh reassembly it's just sending the notification so the mechanism is very okay what message id will this notification have how it will rely how it will be related with the message id logic uh on the receiving side uh this is this territory i think it has to be you know just the informational message with you know round trip yes i"
  },
  {
    "startTime": "00:24:00",
    "text": "think that i i i think it's just you you are i think that's the only way to actually get it working is to have any information so we need a response yes you need to report okay right um uh valerie this is um so every document that goes through this working group eventually has to go to the transport area directorate review uh i'm assuming that what you're advocating for is to get an early review even before we uh we talk about adopting the draft right uh probably yes because well i remember when i created fragmentation was discussed i get a lot of feedback from transportation guys and this feedback was mostly that you do everything wrong well and we do okay okay okay let's so how do we do that do we do we send that to the transporter area directly yes there's a there's a button on the data tracker individual here so one of the things i have for here for this slide is that i don't see any need for the trans the down stream fragmentation supporting notifications you are sending one status notification and every implementation out there if they get an informational notification we'd have status information they don't understand they just ignore it so you don't need to have you know any kind of this kind of negotiation to be support this or not and i'd rather have less of this kind of negotiation when you don't need it yeah i mean specifically if there's implementation doesn't recognize ipv4 downstream fragmentation it won't recognize ipv4"
  },
  {
    "startTime": "00:26:02",
    "text": "downstream fragmentation supported either yes that's true okay and if you go to the previous slide i think there were some cases we have a problem with there i go what's the no actually i have a couple of topics so so actually one of the other topics i had there is yeah you can you can if you have comments on that sorry power so so i think one use of the the notified payload is that you can actually signal that you support this and then the both parties can start sending these mtu updates if you don't see the supported one you don't have to generate otherwise you keep generating these mtu things and the other side keeps ignoring them because they don't support them so it's better to not send them so the supported notify would actually reduce sending you know a round-trip exchange message uh just for the notified that they don't understand anyway uh yeah that's that's true and i think we we can also say so that you can actually send i mean you are not sending names all the time you only send when you notice that there is an empty you that you don't like yeah i mean you don't so meaning you send one of them and if nothing changes in the path then you are not sending any more and if you don't if you get and of course we could say that so when you when you receive one you should send you know in a reply you should send it back other one if you support this we can actually say so we can actually do the negotiations in the first one so and then also the i think the mtu is i think we don't need to have a 32-bit uh you know long mtu there because i think we only have you know 60 bits usually if you go two slides forward one more so so i have no idea why why you actually have a port tree there why would the security gateway do the outer fragmentation i think that's actually is a bad thing i mean if you have something in the middle that fragments your pockets"
  },
  {
    "startTime": "00:28:00",
    "text": "if the security gateway does the outer fragmentation if something changes he will never notice it he will still fragment it in the small pieces because at the beginning there was something that was reducing the them to the very small one so that's why i think it's better to just leave it you know the you know the outer fragmentation always to the network so so you you you could advertise your out but this is also actually part thing is the problem with this kind of better is that you are only getting the pocket notifications they say so the notify you are getting is exactly the same as icmp packet 2 big notify and it should have an exact same processing than if you would have received that one which means that there is all kind of you know things that they say that okay you should be forgetting this you should be you know trying again with with the bigger buckets and and throwing all kind of probes and it is very complicated in innovative and it's also mostly outside the scope of you know ipsec we not actually have to specify that i think we it would be better we could specify just you know oh this is the way to send end-to-end packet to big messages uh for for you know uh to to to correctly feed it today whatever fragmentation avoidance or path empty uh discovery method you have okay so just to repeat you you would yeah i mean if we do that then we never actually know this if something happens in the middle because we never actually yeah but if if the empty if somebody in the beginning says they m2 is hot 200. oh okay if they agree the mp200 they frack it empty to 200 that puts it down fragment bit up and then this node that was having uh m200 goes away and you you could be able to use 1000 you will never do that because you will never notice it okay so um one thing uh"
  },
  {
    "startTime": "00:30:00",
    "text": "when we talk about mtu you have all this mtu discovery and changes are never once forever i mean regularly you can send dummy packets [Laughter] so that's one thing i didn't want to go into mtu discovery or is it past mtu discovery protocol so if you send a dummy packet and so on i think that's way beyond the scope of such a document if i remember correctly we talked about this before and you had a only a downgrade process where you could get two small empties and after my comment i said you also need the probe to go back to bigger mtus again i think you add a text for that right that's the same draft right um i don't so this draft is the first one it's the first time i'm presenting it so i don't think we have okay so i remember we had a discussion about mtu where you where you also suggested something about signaling this smaller nasa balco if you're signaling small entities you also have to be able to signal bigger empty use again um so i was expecting that to be in this draft no um i don't recall that discussion i am to you um but um so so i guess those are unrelated this one is really coming from we had an issue we have an issue to operate our gateways and uh this is one way we propose to solve that okay so so then let me bring it up right now if you downgrade the mtu size based on whatever process you define in this draft you should also define something to try it and that's what tyra i guess said too you should define something again to see if you can bring them to you up again oh yeah the bigger empties again right um"
  },
  {
    "startTime": "00:32:01",
    "text": "yeah yeah yeah that's um um but this is what i okay so what you're saying is that in this draft we we need to um to define a process to discover somehow no no no so we can bring it up um what i say simply is that you have it you when you reduce the mtu it's for uh some time and then you retry this is the right let's see that right but so and that's my next point about where i actually want to go to the microphone is that this actually requires a lot of talk between the kernel and ike right because now the idea may need to continuously look at the kernel to see if it's time to do bigger packets or smaller packets or whether you know it should act on the unsecured packet too big that they do come in you just usually don't trust them and so so should you use them as a as a trigger mechanism to do this um so i'm also getting nearer nearer to to tiro's point where i think it would be good to i don't know maybe maybe not define how you should handle this but just say like the argument should talk to the colonel to get this information and then send these packets and leave out of this graph how that works even though that is a really difficult part to do but that's you know the the operating system people should do that yeah yeah yeah so um i'm unclear um about your proposal do you want us to describe how we interact with the kernel than the m2 or not i think it's not no i i think you should just put a note in there saying that this is not just decisions from the eye dem and i diminished oh yeah kernel and they need to they need to get this information somehow yeah but but i wouldn't i wouldn't try to define a mechanism of how to process them what to do like how to lower the limit when to"
  },
  {
    "startTime": "00:34:01",
    "text": "repro because then indeed to valerie's point you're in the transport area and you should listen to them instead yeah yeah christian hops so valerie was talking he made a lot of points and but there's one in particular i want to stress the transport area has defined a new method right and it's called like packetization layer mtu discovery and it gives you exactly how to do this right like when when to probe how to probe um but it's specifically designed so you can do it within your protocols right within your packetization so if if you do get into the realm of of like trying to report mtus don't don't come up with your own system oh yeah yeah use that 88.99 um and if it looks anything like you're doing that you're going to have to do that or the transport area is just going to shut you down um you know you might be able to just i mean if it was me if i wanted to stay out of transport area trouble i would just uh define a message that says fragmentation is happening like if if you go beyond that then you're you're doing mtu discovery right you're gonna yeah you're gonna be in trouble that's how this is so you are saying that this uh method that they are describing it's the only input it actually gets is the fragmentation is happening there is no path you know mtu already like yeah i think once you start reporting mtu's you're doing mtu discovery right yeah if you can't report mtu then what good is this i think you should do pl mtud right i think it's worthwhile to actually go to 88.99 and for the ipsec tunnel why not and because you would use your ike packets with and you know you'd set pro bits just like they say they tell you how to do the implementation right and you could use like packets to do this"
  },
  {
    "startTime": "00:36:05",
    "text": "use the mic yeah if you use an ike to probe it it will be treated differently because esp will be treated differently by the network devices to segment it you mean because the ports are different or it might take a different path protocol is different yeah yeah this is actually true that the protocol 50 esp might get actually completely different uh processing than udp right i can also do is udp and the other one is protocol 50. but this is actually something that is very very useful to discuss in in and and talk with you know the transport area people yeah so i i agree somehow um that was that was the intent to to not try to implement a um path n2 discovery and um and that um to have something light and since it's very easy to get the mtu to also send it but um yeah i agree so i don't remember why but i thought that defining this way back up back up because you just said it's very easy to get the mtu right that that's like a that's the opposite of true right it's a really hard problem that's why we have all these problems it's easy to get the mtu of the fragment no no because you don't know if the device in the middle split it in two pieces or put as big be the first and then as small pieces as the next you don't know how the bucket the device in the middle might actually do whatever kind of uh you know and it actually might reassemble it in some ways and and you know you know combine them and you don't know what's happening yeah okay okay i see to that perspective could it be different for each"
  },
  {
    "startTime": "00:38:00",
    "text": "essay because it's going to a different segment of the network yeah sorry i'll repeat that couldn't it be different for each sa because hsa could be going to a different segment of the network so the path mtu from the gateway to that segment of the network can be different than it is for another essay yeah but you only have one downstream down to none especially right but so um is the recommendation to remove the mtu so so so yeah i have it so i was asking if there's any other questions or comments on this so it's a little bit i think we need to discuss more about this and i think there is you know lots of things that uh i think this falls a little bit you know immediately if you go anywhere to describe how it actually is the discovery is done we we go a little bit out of i would say actually we go out of the charter of the acquisition if it's just you know send a very stinger the minimal information that the past the transport area about discovery requires you know oh fragmentation happening uh that would be completely okay and it would be very simple you know what's just one you know you know you know rate limited notification to the other and say oh there's some fragmentation going on somewhere you should do something and the director question is do people think this document is useful should we actually continue working on this and and think about this as a work item or or as an item that would be interesting to other people i think this should go to the list yeah i think it's worth discussing on the list at least okay so so so we will take this release and and and hopefully people actually can i i i whatever plan i'll go to pick okay so so there's there are several comments coming to you that you should be you know working on our sticker but should we actually wait for the next revision"
  },
  {
    "startTime": "00:40:01",
    "text": "of the draft and then start reviewing it or the the first um the first action point is to discuss with the transport is it no yes yeah yeah i think that that also you could actually find somebody who actually uh you know actively working on the transport area for for and talk with them and and ask what what their opinions about this is and so on do we know someone that is passionate about mtu okay all right okay that's good so if there's nothing else on that so this was go back to the list and then go to the next presentation i think it is the con count based sa extension yeah so in this um in this extension we want to i mean there's a thing we want next slide so the the problem is that when you're using a hardware to accelerate ipsec the the hardware as a number a fixed number of entries and it is a limit and uh when you have a simultaneous three key it means you have an additional essay so the entry and the uh i mean you're using an entry that you're going to delete later but i mean you need that entry and um if one of those entry i mean if you don't have enough entries you cannot create an essay so it ends up in a i mean traffic this is disruption um so we do i mean um so the the main problem is that um redundant essay results in um an under utilization of the hardware usually i mean in our deployment it's a ten percent so that but when you have a smaller lifetime of"
  },
  {
    "startTime": "00:42:00",
    "text": "essay um i mean the i mean the under utilization reach uh 40 so that's really something we would like to avoid and find a determinist deterministic way to avoid those redundant essay the next slide so if you use a lifetime of essay using um so essay can can be the lifetime of the security association can be defined according to time or according to byte count if you're using time then you can actually predict very precisely when i mean um the s the lifetime is expired but if you're using a byte count it's much more difficult because it's hard to predict the traffic that is going and when you have a traffic burst you can um you can make a huge jump so it's not linear in that sense and um so how our implementation work is that every two seconds we go through the s8 lifetime and we decide which is um i mean we compare the lifetime and say which of these has expired or not so um so when you have um i mean with a a lifetime defined with time since you can predict i mean you randomize those and you end up in a uniform distribution of um of the lifetime if you use count based because i mean it's not a linear process i mean the number of bytes you receive is not linear i mean you you very easily in a two second uh time a slot of traffic i mean you you ended up in uh i mean the randomization is not able to take that into account and so you have a lot of those um redundant tricky simultaneous ricky"
  },
  {
    "startTime": "00:44:01",
    "text": "so the method we have works pretty well for time but doesn't work for count randomization and this is why we want this extension sorry paul can i ask a clarifying question are you are you talking that the problem is in general too many wikis are you talking about the problem is that it's it happens too often that both sides re-key at the same time so what is the difference um so you say in um so are you afraid of two endpoints deciding at the exact same time that they need to re-key is that your problem or is your problem just like i want to better predict wikis in general yeah i mean if it's one i think it's it it works fine if it's multiple that's a problem okay and our problem is that we have a fixed number of sa and i mean we we we can use a 90 percent but when i mean we don't want to use a half okay so sorry so no it's okay so you're not talking about simultaneous reviews you said simultaneously which confused me oh so that is when the peers decide that they have at the exact same byte counter they decide both to re-key and then you've got a double reading yeah that's the problem the problem is a double they say well but every key has a double essay except if they do it at the same time you basically have triple essays okay so that's four times we want to avoid we want to evolve okay yeah so you have one s i mean when you have two essays per um directions okay so you're talking just about the general re-key process okay yeah yeah yeah so next slide oh okay that's the next slide so"
  },
  {
    "startTime": "00:46:01",
    "text": "okay so so another question is why do we want account based essays um so the main motivation for us is that um the cryptographic lifetime of a key or based on the the number of bytes that have been encrypted so it's it's strictly down to um the lifetime of the key as opposed to if you describe it in terms of seconds it's uh it's a two different metrics and the other um but the other reason is that um when i mean one advantage of using a byte count is that if you have a device that goes to sleep and um um if if during that time if you're using time-based and when he wakes up he has a lot of um let's say that can be expired and he notifies that very late while if you use count based at the time he wakes up he can handle the refreshment and the management of those they say so that's a one of the reason we we we'd like to stick to account bait though i mean they are i don't remember which are probably the ipsec architecture defined that you must support both so there is no magic um in how it works when the p agrees an essay they also agree who is going who is good to play who is going to start their key so that's uh how the extension works the next slide so for um so the idea is that when you have a handshake you um you have a notify payload that uh provide you some information um that propose you some parameters and you have a response from the other one and when it's done uh um i mean uh both appear as a as agreed"
  },
  {
    "startTime": "00:48:03",
    "text": "who is gonna start to rekey the next slide so the proposal consists in providing for each transform a rickey value which is going to be a random number and depending on the who's got the largest number uh is going to be defined as um i don't remember but either the initiator or the responder and um you provide an indication about the the count based lifetime you you're willing to so you provide your wrench and this is done for every transformer id um that are considered in the sa payload so then once you have that the next slide the responder the refund approach pick up one count based lifetime a re-key value and next slide and so as i mentioned they decide first who is going to re-key and this is a based on the reiki value and then they set their lifetime hard and soft for the essay so the idea is here um this value is a 80 percent i think i forgot to mention this one is a lower or up to 80 percent uh this one is a greater uh than a 95 percent you had a little bit of random and oh i mentioned that uh and so this is how you set those things so even if because the thing is that even even if if we agree to if if one is"
  },
  {
    "startTime": "00:50:01",
    "text": "agreed to say yeah i'm gonna be the first one there is a commitment to do that but if he fails i mean we still have the five person to to realize that and to perform the re-key next slide i think it's over yeah uh the staircase so one of the comments that i have usually when you are doing count-based essays or this but you actually don't really care about the risk incoming you know you you care about you know wreaking your own essay that you are you know sending because that's the one that you are actually running out of the so so if you actually then it's very uncommon to actually have a you know so you have so symmetric traffic that you're sending exactly the same amount of bytes in both direction to be able to do starter wreaking at the same time and it even in that case if you have the if you got the previous slide if you have that you know responder using you know 80 and the you know sorry iditator using 80 that there is probably using 95 that will take care of that usually so so i don't really see the issue i think all of this is actually more or less implementation guidance to the people who actually implement the reiki and one of the things one of the things we actually did in hikers too we moved this whole thing when to do re-key how to do rikki whether to you know pocket-based or white-based or time-based out from the i cannot negotiate its policies local policy different peers has different policies and they are they are willing they can enforce them as ever they like and if they have very different policies if other incense i i will only send one gigabyte the other one says i will send"
  },
  {
    "startTime": "00:52:00",
    "text": "you know 10 gigabytes the one that is sending one gigabyte will always retract with uh ricky first because he is running out and in that case he actually probably wants to actually check also the other direction if he wants to enforce the other ends sending sa but usually the only thing that people are caring that what what they sell they transport themselves so i'm a little bit i don't think actually think that we actually need the traffic is the thing that i i'm saying i i don't think we actually want to bring back the negatives of the lifetimes it was really painful in you know i person one because there were so stupid implementations this mostly because the implementation was saying oh they must have have exactly same you know values otherwise we don't accept the proposal so it was really hard to get you know okay you want to have one megabyte and 10 megabytes and you and it was really difficult and so that's why actually you know leaving it only the policy the local policy i think is best okay so that's correct that um the problem right um when we do have on the deployment where the traffic is pretty symmetric i think valerie is next or do you have a clarifying question so you can pull it clarify because now tarot talked about simultaneous re-keying again and i just thought i had clarified earlier that that that was actually not what we were talking about we were talking about that reeking in general causes multiple essays and that was the problem so now i'm again lost at what the problem is that we're solving my understanding is it was really about ricky uh simultaneously happening you know both ends deciding to do re-keys at the same time i'm causing redundant essays to be created"
  },
  {
    "startTime": "00:54:00",
    "text": "which will to be cleared out at some point but usually you know not necessarily quickly and enough for their uses and of course the one that they have the problem that they're actually doing this checking every two seconds only might actually cause that they actually suddenly have tens of you know assets they need to re-key at the same time because i think most of the implementation actually do every time they actually set the pocket they verify you know oh it's it's getting close to the you know uh ricky time a pocket counter or white count and send the trigger to the you know uh usually saying that oh you should be start drinking quite soon but i think valerie is the next uh well i mostly agree with sarah and i wanted to say just to say the same thing so just uh [Music] more consideration to support uh the positions that these uh protocol is uh i think is not needed because it can be achieved by a simply a simpler method uh first uh the need for limit um the byte current of the [Music] essay is comes from the cryptographic uh need to limit the uh amount of data that attacker can get to uh to provide to to demand to mount an attack and to put forces or something give some method to to to get the key so uh it is from this point of view the most uh sensible is to count uh the number of bytes on the sending site and there is there is very little point to count bytes on the receiving side because once the"
  },
  {
    "startTime": "00:56:00",
    "text": "data is sent it is already in the network and if you receive it the possible damage the promise the possible damage as it can attack the possible advantage that attacker can get is already received because attacker has already seen this traffic here and it get it there is no count there is no point to to count number one bites on the research site well there is small point if we if you can't decide channel attacks but uh generally if we if we are in a dollar field threat model uh the host itself considered secure internally network is considered a field where tekken can can operate so the point is that the most sensible is to count the number of bytes sent and not received and if you do it uh well uh okay it is possible that with uh almost symmetric traffic you will get a simultaneous answer key but if there is an asymmetry and well i don't know the application but in most cases in most cases there is some asymmetry and traffic uh the sentence site will receive pointer key and it will rarely happen simultaneously and one more point network sometimes drops packets and so the count of bytes that sent inside and receiving sites uh have will very often will differ and in this situation it is possible some well consider situation for example he has decided that the receiving site will rekey okay according to your protocol but the packets every half every second"
  },
  {
    "startTime": "00:58:02",
    "text": "package gets dropped that way that's what to do uh what the sentence side should do should it violate its policy and set more traffic than uh it is required uh to be sent before a key because there's even say it doesn't get the traffic the packet get dropped so i think it's it's not very good from cryptographic point of view so i think that sand inside should decide to win turkey so um i i i didn't get why um um we should only monitor the sending side and because because the main motivation for limit as the byte count sentence essay is to limit the amount of the amount of data that the network attacker gets to mount an attack on the key so uh when the sending side sent the packet the attacker has already get it there is no point to cut on the receiver because the package has already sent yeah i i i thought of something like an oracle uh for receiving but that doesn't make sense well [Music] if we consider the horse securing in july our threat model the cost is secure against the tax so if it doesn't consider if you don't consider the side channel attacks well we can consider them if you can see the side general attacks there is some point to count number of bytes from the receiving site too but generally it's a very complex topic and with simple jewelry vr model uh host is is not acceptable to is not accessible"
  },
  {
    "startTime": "01:00:01",
    "text": "to an attacker only network so once the package is in the network it can be attacked once is uh it is received by the host attacker cannot get to it well we told you okay so that was the first comment and the second was the second word that the the network can drop packets oh yeah and considers the loss in networks that drops every second packets and consider the situation with your protocols that the peers decided that the receiving site will rekey in the situation before the receiving site starts rekeying the sending site will have to send twice as many data as it is safe from cryptographic point of view because it has a limit not to send much then i don't know some predefined number of bytes but the packet get dropped so what the sentence i should do in this situation should it stop sending should the turkey itself should it continue sending and thus give more data to attacker well the the thing if one out of two packets is dropped then uh one lifetime is going to increase much more than the other yes so actually that's going to be interesting and there is a damage because because he is if they receive insight according to your protocol uh master key in this situation before the receiving site gets enough data there is to to decide that their key is needed ascending site has already sent much more data and gives this much more data to attacker or should it stop sending on shooting"
  },
  {
    "startTime": "01:02:01",
    "text": "the key itself so i think it's a bit dangerous from security point of view um i am happy if you bring that attack on the mailing list but okay that's uh thank you christian christian hops um these are aren't these users edible values sorry aren't these user user settable values these limits yeah so couldn't you just set the values to be different oh you mean for for the for the the lifetime yeah you know like you're doing this formula right because you just have configure your stuff yeah but that um one issue we have is that uh we would like to have one configuration file and distribute that configuration file instead of uh handling this is currently what we're doing we're handling uh one configuration for instantiation and uh that's a little bit of a headache so i think somebody mentioned this earlier that this is really this isn't a protocol right it's it's a it's an implementation detail it's a feature so i think that i you might be able to do this as like a bcp or an informational document but what you really want to do is contact your vendors and say we want this feature right i mean i i think you know and if it helps to have an informational rfc to point them at maybe that's good actually we we would like to implement to implement it so so it's very easy to contact yeah yeah that's uh so once just so for for example lieberson and strongstone implement something called re-key fuss where they add a random value to the re-keying parameters so that you know you get this more random is not randomization but like a spread at the end so like you know the default value i believe is 20 so"
  },
  {
    "startTime": "01:04:01",
    "text": "you've got this spread already so again yeah it's it's a it's something you can easily do on on the implementation and you don't need to do it on a protocol level and what tero said doing it at the prodigal level causes all these people to make the wrong decisions about if i don't negotiate the same lifetime value then we must disconnect which is indeed what happened yeah at that point um uh what i'm saying is that um i mean i propose a range of of count based and if you disagree you skip i mean it's not something that we are not proposing an agreement it's something that can be skipped and and you fall back to the exact same uh logic as um because i mean you don't have to negotiate so you can do the the way you used to do it it's just a hint currently the way it is being um done so it's i mean you you're not mandate to consider that um it's if we negotiate i cannot force you to to choose one count based it you can say no i'm not supporting it and ignore so well i'd like to to go on with that um proposal especially given the valuers feedback um and you see i mean if we can end up with a either a best practice or it's even better if we have a best practice as opposed as a something to implement um so that's my next step is probably to take the comments so feel free to make more comments and then we can see whether we need these packets or uh if we can do with that doing without it probably better for me so one suggestion has instead of negotiating who is the intended initiator and then responder"
  },
  {
    "startTime": "01:06:00",
    "text": "just use whoever was the initiator when the sa was negotiated for the 80 versus 95 percent chance that you um had in the other yeah so when i um i think terrell came with that uh yeah then negotiate yeah they're giving it so so i remember that in old code we had in the early 2000s we were doing this that indicator always used you know shorter lifetime so it actually had certain lifetime times some constant minus some constant so it actually get you know depending because there's all kind of weird things when somebody the stupid qa decides to do you know ricky every you know uh one megabyte and we you know take you know 90 or like do i negotiate every three seconds and so on so you have to do all kind of you know limits there because the qa was wanting to sort up there you know testing times not waiting for one minute to do the re-key they wanted through every three seconds but so so there's this you know different values for recipient and you know the uh original initiator or internal responder there was you know hard limits were actually then you know if you hit the heart limit then either end can actually start a reaky regardless of the you know so long ago when when i had an implementation of ipsec we did that and um so of course the qa people stopped all the traffic wait until five seconds before the expiration and then sent the ping which would cause both sides to re-key immediately so one reason when i proposed to have only the initiator to to to be in charge of the re-key um i mean um what they they told me that they prefer to have that uh extra operations to be um equally spread among the different instances of the gateway so all right so i don't see anybody in the queue and i think there so this is no and"
  },
  {
    "startTime": "01:08:02",
    "text": "my feeling is that it actually is we don't want to make this as a protocol is that we actually might want to make some kind of implementation guidance hints or this kind of document which actually tells you what i actually say most of this is you know this is one of the things that they're not different ibiza implementation differ i mean that's one of the things that you know which is actually a little bit you know has done for certain people might be you know not telling what they're doing because that that tells how well your you know system works under load when doing re-keys and if they have you know been tuning these parameters for you know with the testing for months and so on they might not be willing to tell it but some people actually might be doing this and so so having common you know ways of doing this would be very useful documented it's it's it's something that you know implementers have to decide anyway and it's it's not affecting the interoperability but it affects the performance and usability of the system so i think it's a basic big type of thing is probably so i would propose to bring this in the list and talk about more about the what would be the useful best method of doing re-keying based on both pocket or sorry byte counts or or timing oh you mean compare the two type of lifetime or i mean i mean it the same issues are both in both i mean if you have exactly the same times in both ends you you still have this then you actually have the simultaneously unless you have some kind of uh randomness and you know uh different values for responder and uh educator and so on okay right yeah yeah i mean it's a it's a good um it's a good path and then we might decide if we need an extension or not from that but yeah i'm happy about that all right yeah there are some performance performance"
  },
  {
    "startTime": "01:10:00",
    "text": "improvements nobody knows if they're actually oh sorry paul wants to have these thank you uh next slide so um this is just to to wake up the working group again about a draft we have going uh that hasn't seen that option yet and that we want to see adopted it's about increasing the problems of ibsec by using multiple cpus without getting into any kind of contention whereby one cpu limits the other one so in short what the proposal is is negotiate via ike multiple child assays that have the same traffic selectors but they are bound to a specific cpu and then extend the acquire mechanism in the kernel so that you can acquire per cpu uh to the eye daemon so that argument can on demand set up multiple tunnels for each cpu that also starts doing traffic on on a certain traffic selector um so multiple identical child assays are already possible but it's not always clear that they're used for the same goal or you want to make sure that they're like pinned to the same cpu on the other side so you want to sort of transfer that information so that both both sides can know that this is why you have multiple essays and why you have pinned them to a certain piece of hardware next slide so at the 0 draft we try to cover the two use cases we knew which was multiple cpus and quality of service groups and the quality of service groups plus the interaction of quality service groups and multiple cpus was getting so complicated and we were not quality of service experts and no one else stepped in to take on on writing that part of the draft better we decided to remove it completely so now we're only doing the the multi-cpu type child assays"
  },
  {
    "startTime": "01:12:00",
    "text": "so uh that was a while ago nothing has changed since then there is an implementation for this in linux kernel there are ike implementations that can negotiate this so so we're pretty happy that that it works next slide uh so we recently uh tested with uh different cards and in the past we'd use melanox now we're using the more common intel i40e cards um in forwarding mode so gateway to gateway this is where the host is not actually generating the packet but just forwarding the packets using modern linux kernels with xframe using you know one traditional ipsec tunnel you get about three and a half gigabit per second and then your cpu maxes out if you run this draft protocol and you fire up eight cpus then we just got to 27 gigabits per second um so fast this is clearly really important for um for use cases where you have like you know multiple uh connections that you have between data centers and this becomes extremely useful um people getting like you know 10 40 gig cards and nick cards and they get full traffic and when the ipsec protected it's only dropped to 3.5 gig it's a serious operational issue so this really solves solves the problem that we're seeing in real life and we really like to fix this and we'd like to be able to to for this to be not just a linux solution but to interoperate with other vendors so um hence the proposal the next slide so yeah so please read the draft again and since we we saw little feedback i reworded it this time if you strongly object to this proposal please send feedback to the list which implies that if you keep quiet that you don't really care that we move forward and take to notify code points"
  },
  {
    "startTime": "01:14:00",
    "text": "uh out of the list of 16 384 plenty divided by two i think maybe because the error ones are different um anyway we have plenty of them we can take two um so please adopt this uh or discuss this briefly if you have strong objections and hopefully i can poke the chairs in a couple of weeks to move this forward thank you any questions comments go ahead valerie uh so i just want to say that i just read the draft and um i think it's a good idea and if the calls for adoption is issued i i will support adoption for this draft but i have some comments and i think i will send a review after utf because there are some things that i i think that something can be made simply or at least it should be discussed but generally i think that it's very good uh document and if a person can be working group decide to work on it i will be ready to support this work to review to participate thank you excellent thank you and simple as always better so looking forward to your text have you got um christian hops have you talked to uh got heard from anybody from the other like the vpp or dpdk guys growls not that i'm aware of oh maybe anthony has if they are they interested i i think i i think it's a cool idea too by the way i just i i've seen um vp people doing a demo with it similar very similar but they just use a different endpoints ip addresses we are trying to use without"
  },
  {
    "startTime": "01:16:01",
    "text": "ip addresses and then vpp needed each essay to have a different ip address for a tunnel device so i think the vpp has a similar implementation and they're not using ike to negotiate it but just setting up as a new essay so i did send a mail to the vpp guys and they said yeah well go ahead and we will see at some point yeah i mean it it's not too hard to implement i guess then for them i yeah so like that'd be cool like especially if you got two but at the person who was commenting was the anthony without mentioning his name all right any other comments on this so you are asking for i think i think the working group adoption call and then we can start working on this well we ask that every time we present so so i think it's up to you not me but sure i will happily issue the working group last call with no hats on i know yeah now you can actually do it yes oh can you actually because you are you are not the disk groups adi okay all right so so i think we actually go to the next thing that is the charter update and status information things so our current start uh charters start to be we are coming to the you know doing most of the things we have there we have finished the ppk that's already rfc we have implicit iv hrc post quantum is rfc and multiple key exchanges in the you know process of being published tcp base is going to be in in a queue already and i can't see the slides because it's too low and dlc and and the young and meep for it are in in you know given to the ist though they are out from our hands really so we still have four items in the in"
  },
  {
    "startTime": "01:18:01",
    "text": "the charter if i count them correctly so we have gdoi we have course constraint isp we have signature algorithm negotiation and security labels those are the things that are mostly there i think we might have actually some work also for the uh you know constraint esp it will concentrate ike but i don't think we have any work happening on those so that's why it's not this list there then we have a couple of work items that are not in the charter one is the add uh the like version of conflict for uh encrypted dns and i question to the history quiz those are not really explicitly in our charter but we have agreed to act as a working group items and i think the multi-essay performance goes to the same category it's just very small enhancement to the question too and we can actually our charger has in the boiler decks in the beginning saying that okay we can do all this kind of we are doing this small applet but in a chance i think it would be better to actually start updating our charter removing old stuff and adding new stuff that we want to add there but we are not going to do this today because of course we would want to have in our 80 here and because we have a spare 80 here that real 80 we we can't really start talking to doing that go ahead ball followed us uh speaking as an author of uh ipsec if to sats payloads the reason that nothing happened is because um we think it's done um so maybe either we need some more discussion or uh we need to consider a group adoption call all right so yeah so usually usually we want to have you know yeah yeah so so okay that's all that's there in the other items things and then we have this uh okay we have"
  },
  {
    "startTime": "01:20:01",
    "text": "already been working with the empty essays i think both of them actually get you know a little bit you know work done we are not going to be taking them as a work right then uh the ts payload oops i haven't read it for some time i really need to think about it diet esp is it going to be going here or in lv ig um the tsp is is going to be here um the reason it has been a little bit silent for some time is that we have described what we want but i mean a shake has been published on an rfc and they have another way to express rules so we would like to use their syntax to express what we do to do exactly the same thing as what we're doing okay so so all right i think valerie is ready to talk about the cookie revised and beyond the 64 gig i think yes exactly so uh what about cookery wise i believe this draft is ready for adoption if the working group want to address this problem because it's just a problem with it's it's it's a minor problem but there is a real problem with like with you and if we were to address it as that i think we can adopt the draft and follow the way it is addressed in the draft or find another way to address it so if the chairs think that the problem is uh imported enough then also for the option can be issued and what about beyond 64 card drafts well it it is been developed but we as announcers thought that nist will select michaelis and in this case"
  },
  {
    "startTime": "01:22:01",
    "text": "this draft would be very important but since nist didn't do it it is not so important but makalis is still in the neast list for the next round so probably it happened and as far as i remember bsi as a german organization still recommends michaelis it's a national organization security and i don't know about other national organizations but well i think that michaelis steele is considered as very conservative uh post quantum algorithm so uh we have an intention to ask for adoption of this draft but given that the nist has selected and post quantum algorithm with smaller public key sizes this is at this point it's probably not so important but it is for the working group to decide because the problem can arise again in a few years if he still uh selected something like michaelis or some algorithms very large public keys and besides there is a another idea that is currently in this draft that so-called mixed transport mode when ike works with tcp and ipsec works or wii udp uh again it may be useful for other things well we have besides key exchange mechanism also have signatures and signature size is also"
  },
  {
    "startTime": "01:24:00",
    "text": "not small with quantum signatures for example even for selected uh fully selected signature algorithm as far as i remember for for example for sphinx plus it's about 45 kilobytes so it is not probably it is not a need for something uh to handle pillows greater than 64 card because it's less than 64 but it still requires some [Music] mechanism to for robust delivery of udp messages even without fragmentation so in this case splitting ike and esp transport might be an interesting idea so that ike works with tcp and get uh reliable robust transport and esp works on native uh protocol or edp and doesn't have a performance issues with tcp so i think this draft should be discussed and probably in some way adopted as is or as uh some part of it yeah there are a chair this is actually part of our current charter because our current charter says anything that is related to post quantum you know crypto is in charter so beyond 64 kilobytes will be in charter in two years or something when the the currentness the proposals don't require this yet so so i think what we are going to be doing what i think we should be doing probably should wait for there needs to be you know uh when this publishes that they are having a algorithm that has more than 64 kilobyte of 10 then we can actually come back to this and and start working on this"
  },
  {
    "startTime": "01:26:01",
    "text": "because i think it's still going to take several years from there until we actually need the implementations so i think i would probably put that one on the hold for now and and come back to that when when this comes forward with that because because they didn't pick up any of the algorithms this time uh i think we could do that does that sound okay for you valerie or do you think that you should push it out even if you don't know how but i think it's a little bit different the it could be a little bit different if the key size is going to be 100 kilobytes or if it's going to be three megabytes but i think the mechanism we are going to be using are going to be different at that point so so i think it would be better to know exactly what we are aiming for before we actually start defining it i agree that we can hold this draft uh and wait for uh next missed decision or if something happen or that will change this landscape in post quantum algorithm all right okay anything else larry well i have a question uh to the working group into the chairs is there any interest on working on integration iq2 with bake password authentication key exchange algorithms because this area is developed and prg had uh some kind of selection of fake algorithms and is there an interest the question i have there what should the working group do because i think we have the we have already to bake you know the generic you know method of doing that and all the all the methods there published in that is our information are not working group craft they are individuals so i i think i was proposing that we should"
  },
  {
    "startTime": "01:28:01",
    "text": "actually pick one and make this a standard or with failed last time so i have not really see what we actually want to go back to that well uh the current draft uh it's your draw or not draft rc uh the framework for integration vehicle algorithm is informational status and should we promote it to standards track or not it's a 60 64 67 it it's i believe terror it's here uh it's uh ufc should we start the walk to make it a standard check or not so paul was asking if there is any implementation of this drug there is i careful i haven't done everything so so i think yeah okay that's one of the things we probably need to think about but we are not going to be deciding it this time so so actually so so for the charter process uh i think it would be best if we now start thinking about you know this process of the mailing list so we actually start going through what items we have in the mailing list what are they have in the charter and verify i i did very quickly this morning this you know this list here at the previous list i didn't really go that well through what the charter actually says so i might have actually missed some items but anyway so i think we should actually do the charter update at some point perhaps in either either you know in november or we should actually be able to do in november so so start the process of you know collecting what items you actually want to put in the charter and uh you know then uh"
  },
  {
    "startTime": "01:30:00",
    "text": "what i remove the items that you have already done and then probably november we will actually go through the list that are proposed for the charter and see that if there's interestingly enough people doing it that we would uh prepare the ready starter charter and then after the november we would actually go to the ad approval for that so so we actually get you know updated charter any comments or feedback from that all right so i don't see anything so i think we go forward that then we haven't any other business i think paul is coming up yeah just a just a quick note if anyone wants to see the multi-essay code in action stephen classer here has it running uh and he can he can show you on his laptop so if you're interested go to codesteadfan all right any other comments i don't see anybody coming to the mics or anybody in the queuing up in the there and i think then we are done thank you see you all in london yeah cheerio and thanks for the note breakers paul thank you [Music] like one european i think it balds"
  },
  {
    "startTime": "01:32:23",
    "text": "and he got us because i usually edit it and fix those you know way too positive comments people have about their travels oh we have several thousands of people reading now we haven't really seen those oh uh"
  }
]
