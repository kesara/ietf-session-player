[
  {
    "startTime": "00:00:14",
    "text": "Good morning, everyone. Welcome to dispatch. We've got a full agenda here, so we'd like to get started right away. Can we go to the next line? Here we go. And so this being the first session of the meeting, I wanna really emphasize the, content of the note well, which, is a condition of your participation here. At, at IETF. There's a a number of processes that you should be aware of. A number of, things, having to do with the intellectual property and, making sure that the, IITF Patent Policy is followed. If you're not, aware of what this document says, you should read it in detail, please. Next slide. And we now have a note really well, which deals with things like anti harassment per seizures and and things like that. We wanna be good to each other in this meeting. And in general, in IITF, And so we wanna make, everyone feel comfortable with their participation and we ask that everyone contribute to making this a positive environment for everyone. Next fine. So this session is being recorded. If you're, if you're here or if you're participating remotely, well, I guess if you're participating remotely, you're already signed in to meet echo. But if you're here in the meeting, you need to sign in to meet echo that's the way that we keep track of how many people are participating in the sessions And,"
  },
  {
    "startTime": "00:02:00",
    "text": "there's, you know, there's a what's referred to as the Mead echo light client that you can get to from the IETF agenda page, we'll be using that also to manage the, the microphone queue. Please keep your audio and video off if you're not I'm If you're not using the, if if you're using the full client, so that we don't get feedback. Next line. It's loading. And, of course, here's, agenda, meet echo, and so forth. And, how you report issues. So on with the agenda, We have, we're in the middle of the status and agenda bash. We have 4 presentations for the the dispatch part of this meeting, And this is joint with the, art area, meeting, which, only begins at 11 o'clock. And has a number of, number of issues that number of topics that might be of interest to people that are participating, particularly in that area. Any, comments, any any bashing that needs to be done to this agenda. K. Do we have any volunteers to assist as note takers? Oh, very raising your hand?"
  },
  {
    "startTime": "00:04:04",
    "text": "With the people at the back of the room, please close the door. Getting a little bit of extra audio. We didn't needed. Thank you. Ah, Braun has volunteered to take notes. Thank you, Braun. Your You're a world class notetaker. So We have we have 2 mailing lists. We have the general applications area, mailing list at art. And then there's another mailing list for this working group called dispatch. The difference being that, art is is more topics, I would say more technical, more detail about the topics whereas dispatch we're really focused on what the purpose of the dispatch part of this meeting is, which is to determine where in IETF or if at IATF is the right place to do a particular item that's being described. So, I mean, we have a number of options. Which include things like creating working group, moving, deciding that the topic is relevant to an existing working group there's, app area director sponsored for a for an individual draft. There's, the I, independent submissions editor, And then there's also just it's possible that people will look at particular piece of work and say, know, it's it's not appropriate topic for Art, or for IETF. I mean, it could go into a different area as well. So, That's that's kind of what we're here about. Please please be focused on trying to answer what we call as the dispatch question, which is where does this piece of work go rather than getting into too much detail about the topic?"
  },
  {
    "startTime": "00:06:00",
    "text": "Yes. Hi, Ben Campbell. Just wanted to add 1 more category to your choices, which is to send something to a buff. Doing a buff for some make make make make Yes. Thank you. I I was just doing it off the top of my head and didn't have a full list. Okay. Let's go into the next one. Okay. Okay. So now we start the the session. And, our 1st speaker I need to Sorry. Let me just Okay. So hi. Would like to present to you a draft that we've been working on for around the, you know, the technology itself we're working on for I think, the the decade, and I'm not I'm not Sure. I remember correctly. This is joint work with Kristang Rotov, Panfix, and I'm Martin. Next slide, please. So I don't really have time to into the details of what the distributed hash table is, but R5N is the distributed hash table you can store, keys values under He's in a essentially a peer to peer system, But R5N has some very specific design goals that I think fit better in, in today's world. For example, it has open participation peer to peer routing, so it does not have access control. It works in"
  },
  {
    "startTime": "00:08:03",
    "text": "restricted route environments, which I will get into detail. It supports route path recording, which, is an interesting feature for source rotting, It has inbound request and response validation for improved cashing, and, a loss for result filtering. Next slide, please. So regarding the, The open participation, P2P routing, there is actually already an RFC, which is called reload, 6940. Which in its security model specifies that each node, receives basically a a certificate from a central issue, or it implicitly is already trusted because it's in a closed network. However, that's not really modern DHTs are used or work. So what you actually need is some kind of a DHT that, allows open participation with all its drawbacks and all the trade offs you have if you don't have, like, an trusted notes, entering the network. Next slide, please. The second and, I'm going to talk about this most important property is support for restricted route environment. So Now the DHT itself, there exists a publication for it, published in if I remember correctly 2011, it defines a restricted route topology simply as a a topology where No words cannot directly establish connections with each other. And this for common DHT routing protocols, basically everything Cademly are like, is a problem, which we will see later as well. So basically, that will cause the the district attached table to work in, in a, a diminished fashion or doesn't work at all, so you cannot really retrieve any values at all. And we argue that this, restricted route to, property is actually very common in today's internet. Like, it's not like you can assume that all peers can directly connect with with each other. They're most likely behind either a firewall or not. Or"
  },
  {
    "startTime": "00:10:01",
    "text": "maybe they're connecting through some kind of a a meshed network. Next slide, please. So this is actually a slide that's just for documentation, maybe, next slide. To visualize a bit what is meant by restricted route topologies. So if you have, like, this reattached table, Cademia based, And you would want it to draw up, a set of notes and they connect as if you know, in a sunshine case, they would want to connect with the nodes to properly establish the and have every, key essentially also reachable in the network, it would would look a bit like this. Often, in reality, when you have a restricted road topology, which we argue that you usually have, next slide. It probably looks more like this And this doesn't really look like a problem. There's no node, like, separate from the whole network or something like this. It's it's a small world topology. But still for for for, a routing routing mechanism, like, XO based distance routing in Cademia, this is a problem. Next slide. Because when you are looking, or you can see that when you are basically calculating the x or distance to specific key prefixes You will notice that you certain you certainly have local minimum in the network. So depending on where you are in the network and you're starting a route towards a key, you will end up in different parts of the network. Which is bad because depending on where you are in the network, it it's possible that you cannot really find the value that you're looking for, And we're going to give an example, the next Next slide. That is the example of you could easily, like, remove such local minimums if they work on between two peers. But since we're assuming that those connections cannot be made, for example, due to an outdoor firewall, that is not an option. Next slide, please."
  },
  {
    "startTime": "00:12:00",
    "text": "So if we had a regular x, x or routing metric, like an EKADMDA th he does, you can see that if we wanted to store a value, let's say, under the key 0011, and the that wants to store this value is 1111. It would basically if you're doing, like, a a greedy descent towards the key, it would end up at this 000 peer and is the responsible peer for the value, and That's where it's going to be stored. However, it appears such as on the on the left side, like 1001 would now try to resolve this key. It would end up with the local minimum on on the top it would not receive this value. And no matter how often we put this value or how often we now try to receive this value, we would just never get So basically, that's, that's a problem. You usually have in those restricted road topologies. Next slide. Now what R5N does is before doing, like, this 3 descent towards the key, the the routing algorithm first takes a random route through the network. This is an example for a random walk of length 1 through the network before the descent happens. But usually the the length of the of the a randomized walk should depend more or less on the the network size. You can see that here, first, we're doing a random walk to some pier and then start really descent, which coincidentally also ends up at the same Next slide. But at the same time, it could also be that our, random walk would end up when we're doing the grid descent at the other local minimum, And basically the idea is that as long as we have a small world topology, when we do a random walk, we will end up at a random which will then, after agreeing to send towards a key end up at a random local minimum and, taking into account the birthday paradox, This allows us to efficiently or ensure that the availability of of values for every p in the network, is very high."
  },
  {
    "startTime": "00:14:00",
    "text": "Basically make it the calculations, but doing just like a square root of n puts in that case, we'll probably get you the the value at any point in the network for with high probability. Next slide. Slide is just an example for you. If you're wondering what would happen if we are directly, ending up on the, on one local minimum, in that case, I mean, that is a technical detail of the current implementation. We would then still start a greedy dissent towards the next local minimum and then basically end up storing it at the bottom, at the top again. Next slide. So, so much to for restricted routes, but we also had another design goes like a router for source routing, So when you, whenever you do like a puts to a value, you record, or the the protocol records, which hops are taken through the network, And whenever you retrieve the value, the same hops are also recorded, which basically gives you a working path through the network because the communication channel peer to peer does not always work. But if those peers on on the on the path through the network from which you retrieve the value, allows you to at least forwards or proxies, transmissions. This allows you to effectively implement source base routing based on metadata provided by the distributed test table. Next slide. Funny, or the the second to last part is inbound response validation. So so basically the ideas, but in order to, in in particular, improve caching, but also to not store essentially garbage values. The HT allows a pluggable mechanism to a allow any fear on the path to verify if the value that is being put actually matches the key and the type of data that is being put We're actually using this mechanism using, cryptographic signatures in, RFC to be 90 4, 98, where we are using very specific, blinded signatures order to ensure the integrity of the payload. Next slide, please."
  },
  {
    "startTime": "00:16:07",
    "text": "Another feature that, it implements is result filtering the muted bloom filter. So whenever you're looking for a value, Essentially, you can provide a bloom filter with values that you have already received. The reason why this is implemented is because we also support storing multiple different values under the same key. And it's possible that those results come in, with a delay in between. So you may want to for example, pause, the the retrieval of the values, or maybe constantly listen to the values And at that point, you probably want to say, okay, I'm not interested in very specific values anymore. And this is done, by providing a a bloom filter along with the request that is basically saying, not interested in the set of results anymore. Next slide, please. And the final property, and this is also, interesting in terms of because we're doing the random walk through the network, we're trying to prevent routing loops through a similar concept. So, basically, with every hop, we are managed, the the protocol also managers of Bloom Filter, where all of the hops are stored inside, so that we potentially reduce routing loops. Because we never really want to revisit any, hop in the network because we quickly as possible. Want to converged towards another minimum in the minimum in the network because the primary problem we're trying to solve is finding another minimum. Next slide, yes. So much to, the the design goals and security properties of the the work. As I said, it's We've been working roughly every year, on this draft now. We have already approached some research groups and working groups, we have already received very valuable feedback. As well. We have not yet been in contact with an working group that would like to take it as a work item, which is basically also why we're here. So maybe if you're interested, if you know who's interested"
  },
  {
    "startTime": "00:18:00",
    "text": "some working group crystallizes and we would be happy to discuss our work and Essentially also modified, with with with input that we receive. Thank you very much Okay. Thank you, Mark. Any comments questions, Please, focus on This past question and, your name and the company first Thank you. So Collin Ginnings, don't think the company matters. The, I I I mean, I I think that this is a big substantial piece of work, one of the authors of reload before. So, and I think it'd be really interesting to have this work available, but I think it would pretty much need a working group. To do this this level of work and expertise that's brought in. There's many. I mean, obviously, I'm already know this, but there's many places that could take advantage of an algorithm like this. We don't have anything standardized and usable broadly. Reload is certainly not Right? And so I I think this would be a good building block tool that we could use for for for many things. That said, I think it would have to have a very strong you know, initial customer and group of people who wanted to pull it forward into something to get the critical energy to to be able to do all the work that would be needed to do to publish this pilot work. Thanks. Okay. Thank you, Kula. Barnes? This is Marie. Just to follow-up on Colin's question, does that community exist here or anywhere else? I'm sorry. I didn't properly hear it. Does the community the kind of community that you have you have a first user? Do you have a like, developers, like, who would join a working group if we were to create one? Well, basically, so if you count ourselves, so we're developing, Noonet, essentially, and Noonet, has a lot of different applications. For example, also the new system, which is the other RFC rescited, and that uses this distributed hash table to store its data."
  },
  {
    "startTime": "00:20:03",
    "text": "Beyond that, our R5N implementation is not, used by any other project. Of course, we have been, I think, in contact with, for guys from IPFS as well. Whether or not they would be interested in something like this. So but that's not like it's not already used by by somebody else. Okay. Alright. Hi. Hello. This is John. I think that this sounds like something that this more realistic than present DHT for Grandezvous and WebRTC, will always have a problem with WebRTC and that it it it it it requires a rendezvous server in order to start up. So something that works in a presence on that would be acutely interesting for the commuted at work once they call it they call it Burning Man Networks. Networks that are largely disconnected from the internet. And quick question. With this most of the deployments of nets in the world are are read single hop. So the procedure sounds like it would, have failure modes when Because of the randomness, the random work, Is it guaranteed to always Always, sir, converge in the case of, where notes are just behind a single net. I mean, it's not guaranteed to converge. I think that you just have a high probability that it it finds a local minimum Thank you. That is one of the questions that we I would like your answer. And I think I agree with Karla that's this requires working group size effort. Okay. Centre"
  },
  {
    "startTime": "00:22:01",
    "text": "Okay. So anybody else? So the conclusion I'm hearing is that this kind of work would weren't, organizing a working group. So would that be a working group beau, organizing MAF, Murray, if you don't mind, I have one more question before I answer yours. What was the feedback you got when you took this to routing? Sorry. I didn't get What was the feedback you got when you took this routing. It's on the list of working groups where you said you took this before routing our RTG where WG was there. Okay. So that was some time ago, but, I think the we would basically post it to the mailing list, and then we received like a it wasn't really in a it's now in a better state than it was then. We we received a lot of feedback on what to improve. But I think there were never wasn't actually follow-up or, like, a presentation at the working group. Before. So kind of the fizzled out more, that's the the contact. Okay. Then to answer Jim's question, think you could try taking this for a buff, but I think before that can succeed, we need to see some more evidence of of likely community. Okay. Thank you. Thank you. Thank you very much. So now move the to the second one. Funds Phillip, are you ready? Do you want to share the slides yourselves? Yourself. I don't know which if you I I can do it. Yes. I'm showing that if you I can move reach you unshare and let's submit share. Okay. Okay. I stopped Please."
  },
  {
    "startTime": "00:24:26",
    "text": "If you press her, or you can you can move the the the sites. No. I'm sorry. We understood maybe you wanted to share the slides yourself. Would you rather we do that? Yes. But, I think it's better if you if you if you change your side. Okay. So let's why don't we do the sharing? Okay. Thank you, Jean. Ask your shipping. This presentation concerns a proposed extension of the JSON and TV format. It is called design entity named on tight value. It is described in the intended draft indicated this slide. I first present the program Secondly, The objectives pursued by this proposal. And finally, I will address the interest of the ATX in this proposal. Next slide, it's So is the most used formats for the title Ah, Jason, and CSE."
  },
  {
    "startTime": "00:26:00",
    "text": "Everyone knows this format on the simplicity makes them easy to understand. But at the same time, these formats are very poor from a 70 point of view. It should also be noted that the CSV format is describing 1005 RFC. Week. Such as now obsolete. On yet, this format is recommended off. By the for the charge for of tabular data. Example, by the European community. So It is difficult to exchange information on everyone use tricks because data Like, we can try to convert a string into a date. If it's worked, it's a date or the rise, something else. Or we can use sniffing tools which automates this kind of tests. We can also use meaningful names grace the nature of the information. Next, please. To improve the situation, 2 strategies are put in place. The first one consists of describing an action protocol for the coding and decoding of data. For example, or the experimental ERC doesn't tip didn't type definition. Disapproach. Is also present Who is able Kima for Tabula data or with XML data. The second strategy is to define extensions for specific domains. Many extension are available. In the slide, I show some examples of EICs And when I searched for Jason with data tracker, Iphone hit the RFC."
  },
  {
    "startTime": "00:28:00",
    "text": "Geogism defines the exchange format for geographic locations. This point, or Horizon lights. Better. Nothing else. Those two strategies work around the program, but does not meet the request be able actions type that It should be noted example of which is interesting because it explicitly Look into the the notion of type through the concept of tag. Next slide, please. So what can we do? To define a solution, several objectives are retained. The first is to be able to address the main exchange formats already mentioned. The second is to have a self supporting solution without the need for a data keyma. The third is to be compatible with the existing g zone format. The 4th is to be able to have a binary oh, textual representation, that is reversible. Their CbdT, is, finding the same data as the coding forward by decoding. It's a is slave which is to have a simple and easily understandable format while being compact. And finally, The 6th is to be expandable. We must be able to integrate complex on not yet define types of data. This is the purpose of the Vision NTV format proposal. The next screen slides quickly present our their subject is, achieved. Next slide is"
  },
  {
    "startTime": "00:30:01",
    "text": "and then Vivint TV defines 2 entities. A simple entity is defined by your value which is on, open a name, on an also optional, right, this entity as a JSON representation, then by combining the name on type with the separator. In the example, shown the entity equinox is represented by a JSON object with a single member which k is a kinoch's couldn't date. This notation, was defining 2020 as part of the design ND project. But but but perhaps it is older. Let's put to identity is an order headset of entities that can also have a name on a tie. Please Not that this this type is only a default value, to apply in the even representation. The example indicates 2 equivalent representations of the same store to add entity. Depending on the type, Susan for the truth to add on You would also notice that the is different between a single entity. It's a single on the strict So, Bill, gooden. With the example of the structure identity named Equinox, if the separator was simple colon, this whole indicate That's an entity is a single entity where the entire JSON object is the value. With this kind of entities, we can represent any nested structure."
  },
  {
    "startTime": "00:32:00",
    "text": "In summary, These principles make it possible to meet objectives. 1, 2, and 5. Next slide, please. Computability with Regis and format is achieved by using a default tip single entities. for For example, if 25 is a decent value, then it will be interpreted as a simple entity with a good name, on with the reason type. Or jeez an object with several Mendeles. Oh, research. It didn't erase. There are 2 to identity without This uneet season, Data can be interpreted as seasonality On conversely, when the NTV is stricter, As a reason, representation, The slide shows examples with a name put to add antiquities. But I could have I did complex examples. The different scenarios that may be encountered, I explained in the internal task. On can also be tested on the existing implementation of this format. I will not detail them here. It's like this. With fixed representation, is achieved simply by using gs and encoding. Gs coding is noticeable and we find the original data after coding, decoding, binary representation can be obtained using coding. Which is adapted to the cutting of types using the concept of tax. Simple mapping between type and tag guarantees reliability. In the example shown, the point type. For geographic data,"
  },
  {
    "startTime": "00:34:03",
    "text": "correspond to tag 6.103. It is important to point out That's good day. Is not reversible when using tax as indicated in the RFC in chapter 6.1. I read the sentence. For all other tax, Major 3. 6 When user tag number, the tag content is represented as a decent value. So tag number is ignored. This means that we accept losing important information during decoding. The proposed format is to make the c ball format reverse c ball This approach was used in another context. For Honda that on the data frame as a d type. That is lost due during season encoding. So implementation of diesel and TV on the mapping between all the details on the NTV types, preserves this information which makes the g on the user interface reversible. If you are interested, this implementation is also accessible in the founder ecosystem. For the need for extensibility, the solution chosen West West Stondale, rights for the most common one. Also, nesting types for application to specific humans possibility of adding different types. Next slide, please. Concluding this proposal, promences for us to address the question of the interest of this approach for the ideas"
  },
  {
    "startTime": "00:36:00",
    "text": "Why is it interesting? The main reason is that in the majority of programming languages, an object is defined by your name, a type, on the set of values, The notion of MTV Antit is therefore entirely entirely appropriate. The second reason is that we cannot settle for an interface based on simple, basic, or CSV. Alternative solutions are needed. The proper solution is not unique. Or may not be the best, but we need to work on it. Last reason is that the proposed approach remains compatible with existing formats. While remaining simple to understand on implement. So this reason makes the solution usable and deployable. Next day, please. Last point, why is this interesting for the The first answer is to say that Jason Gizon on its extension within the scope of the The second reason is that the proper solutions fits well into the ETFs work on season. For example, Design Pointer on g's at patch. Comfortable with your proposal. And can also assist on the existing implementation. See also example, which seems more important to me, He spoke is the complementarity of the solution with Since it allows coding, decoding without of information. The last reason Is that the notion of typing? Is a concern of the We see this in the work carried out around the RFC decent type definition."
  },
  {
    "startTime": "00:38:02",
    "text": "Or the Intelligent West. Notable CboTax. Initiating work on this notion of semantic season is therefore an opportunity to move forward in these directions. If we answer a yes to the question of the relevance, We must also specify the associate working group. It's difficult for me to give guidance on this point. Because I don't know a note However, I see complementary options. The first possibility is to include this project in the CBAR working group who have a solution for JSON decoding of tax, So the other option would be to create a dedicated working group, which will make it possible indoncify the implication of this type of approach. The question of of the CSG format from Tabula Data would also be a subject for To conclude, and, anyway, just simply say that this topic is an interesting area of work for the ETF, and I would be very happy to work with you. Thank you for your attention. Okay. Thank you, Philip. And in comments. Thank you. Elliot's 1st. Hey, good morning. This is Elliot. Thanks for the presentation. I just have, Sort of one half comment and a half question. This seems like, that we're doing some amount of self described data at this point, and, it does begin to make me wonder if we're gonna go this length, is the ground already well trodden in 2 different respects. Is this something where we really should be thinking about, how this works"
  },
  {
    "startTime": "00:40:03",
    "text": "both with, in in terms of the context of open APIs. And and what to do about the relationship between that and Jason's schema. And the second question, which may be more obvious to some of the network geeks in the room, is what's the relationship between this and yang Thank you Roni. Oh, sorry go. I'm I'm not sure to to understand all the questions. The first one is, how does it works with, which came up That's mean, I have a an an simple answer. In the interface with the this interface, is available for JSON data and is available to with table schemer, is the the the main and the main, came out used with the tabular data. The second question with I'm not sure with, with, Yes. Yeah. It's a it's a Wish Young. Yes. It's a standard info information model that we use at the IITF. I don't explore this, this option, but, I'm very open to to this. But that have a union server at But Rowan May. I was gonna ask if you had talked to, if you had posted this on the seabor mailing list, and if so, what the response was. And here comes first I don't understand the question. When I post as a as a mailer, can you just ask the seabor work working group about"
  },
  {
    "startTime": "00:42:00",
    "text": "this work already. And if so, what was their response? Yes. I have a I have asked the the Subaru working group. But I don't have any a new response about it. Horskin Kasan Bowman, for a while, for for seaborne nukes, it was kind of initialization. Right, to Right adjacent to see well to Jason converter, see well to Jason to see well converter that is roundtripable. Unfortunately, somebody came up and Did the Kobayashi Maru sing and said the I can write this in one line because I just take the cbo 64 URL encoded encoded. And put it into adjacent string. And that ended the discussion. I think that that most uses usage usages that actually need to use both Jason and see what we want to do something at the application layout So, for instance, yang Jason through yangzibo converter and Bick. Has a pretty clear idea of what it needs to do, and it uses the yang a schema to actually inform the decision. So when a a number needs to represent it as a string in Jason, and all this stuff So inventing yet another format on the JSON side is not going to make our work much easier, I think. And the the dispatch question is I don't think the idea should be taking on this you heard their comments on this?"
  },
  {
    "startTime": "00:44:07",
    "text": "Okay. So I think the feedback that we're getting comes in two areas, One is to work Get get more feedback from Seabor and the other is that perhaps this is something that shouldn't be taken on by ATF. Are there any other opinions on this? I see Colin getting out So Colin James, I I'm just gonna say, I mean, I don't I I don't think the seaborne group is going to love doing this. I think we could, like, I don't think we need a lot more feedback on that right now. I don't think we should bother getting more feedback. It's already gone there. Once we heard from the chair and the person in the seaboard groups named after, it's all good. So I wouldn't I wouldn't send them down that path. That just seems like a path of us Of frustration to new people coming to the IETF. don't know what that means we should do next, but I don't think we should send them to the seabor group. I Hello. I'm Austin Wright, editor on Jason's schema among other things. Yeah. My only comment is, I json and HTTP allow for some similar functionality. And I haven't heard any Rifin, this hasn't come to my attention until today. So, And that that there's amount of overlap and functionality there, for sure. So have you approached, like, I mean, this question I already came up, but, I was curious about if you approached, like, either HTTP APIs or JSON schema, the Bubba. Making sure this functionality or the functionality that you're looking for is in those specs."
  },
  {
    "startTime": "00:46:05",
    "text": "Philippe, did you catch the question there? Don't understand the question. Yes. Have you thought about approaching JSON schema or like, HTTP hypermedia specifications to to see if similar functionality can be adopted there. That's it. No. Okay. The, oh, yeah, the comment I would add. The the only interface with a data schema is with a table, for Tableau data. Actually, it's a new one. Okay. Excuse me. Your name, please? And Yes. Okay. So I think that inclusion here, and we'll announce we'll summarize these at the end of the meeting, but It it kinda seems like right now, this doesn't really have a home in IETF. Especially lacking any sort of uptake in, some other IETF protocol. Okay. Shall we go on to the next session, the the next, presentation, rather? Thank you, Philip. That was good presentation. Thank you."
  },
  {
    "startTime": "00:48:04",
    "text": "Great. Are you ready? Cool. Well, it's nice to see you all. My name is Michael Timem. And my first IETF was actually here in Prague. 4 years ago. Some of you may remember, I presented a thing called Braid, And that is a so that was the beginning of of an informal working group that began at IETF called Brad, for state synchronization, and now it feels like it's time to propose this as formal working group. So next time. It's also changing. Okay. Cool. Well, so, so state synchronization, I'm gonna say most Networking protocols, implement state synchronization. People are gonna argue about this. Van Jacobson, who created TCP congestion control went on to have the opinion that All networking is actually is trying to do state synchronization in the end. And you would say FTP is about synchronizing peers. And we have a bunch of example protocols down here. We synchronize files with FTP resources, on the web with HTTP emails, video video conferencing state profiles, network data, And so all the stuff in applications, we have a lot of synchronization protocols and then you can even drop down to lower layers and they're synchronizing their synchronization there too with routing tables, header compression dictionaries, reachability state. And next slide, And when we're building these synchronization protocols, we tend to follow a certain pattern. So The first thing you do is very simple. You're just like, I need to get this state over there. So you have a protocol to send the state from a to b. And and That works out pretty well. Next slide."
  },
  {
    "startTime": "00:50:05",
    "text": "And that's very simple to do. It's easy to specify. But then over time, you want a lot more features. So these are general classes of of capabilities that you're gonna want with synchronization protocols. So you're gonna want higher performance. You want push updates And, you know, so the web doesn't provide push updates. It has just relies on the user clicking the reload button. Whenever the resource changes. FTP was the same way. And so you're gonna gonna add you'll we're gonna add some kind of pubsub protocol And then you're gonna wanna have Delta Compression. So that you're only getting the stuff that's changed since the last time you out of the resource. Then you today, we have a lot of collaborative apps So, like, Google docs, Figma, and we're expecting to have multiple editors be able to edit the same thing over the network which gets really complicated. It's hard to write that code. He's like, how do I figure that out? I'm gonna use some special algorithms. On, on you're gonna want things to be consistent and reliable when the network goes down. You wanna offline mode? You want it to be okay if my machine fails? And you're also gonna wanna eventually make this work without a server. Or have different network topologies and have a lot of and then there's versioning, which helps the other capabilities too to have this is how Git works. You can merged to edits offline because they have a whole history. And so all of these features or general classes of things are gonna add to synchronization next slide. And but they it gets a bit complicated to do it. Are we still next lighting. Great. Yeah. And And so we want all these features, but we also want to not have to, like, spec and build all of this ourselves when we're just doing some particular application. Seems like a lot of work. And then we also wanted to interoperate"
  },
  {
    "startTime": "00:52:00",
    "text": "with other systems, and we don't want other people to have to implement all the complicated stuff. So we end up making sacrifices in our algorithms. Next slide. Have to learn how to ask for that earlier. So but anyway, here's Here's the history of of sacrifices. We look at the state of all of our algorithms, you know, so pop started off, but it only supported a single client. So then we made IMac where you could synchronize with multiple clients. And then we made Jamapp which is a lot more efficient. And also lets you synchronize search queries. And HTTP, like I said, it it didn't bother with updating state after it changed, just punch it and said you're gonna have a reload button. But all of these other apps are built on top of HTTP and wanted synchronization And and so they had to add stuff to it, and each one did it in a different way. Then we have, SIP and Co Op, which are a lot like ACDP but but wanted synchronization from the get go. SIP wanted to have real time video conferencing state. So, like, I'm calling you and your phone's ringing. And so it we're not even gonna bother doing HTTP. We're gonna do something different, but it still looks a lot like it. LDAP and NFS are for, you know, files file whole file system, or bunch of other information. We have, synchronization protocols like Netcock netconf Alto and DNS for synchronizing the stuff of the network And then down a a layer, we have routing tables and all these other synchronization protocols, all these or trying to make these different trade offs And, next slide, let's do here. So Here's, so I'm gonna show you an example of Alto. So So Alto is doing synchronization over HTTP, but it needed here's an, a speck that had to be written because we wanted to be able to have incremental updates quest. Also. And so we had to figure out how do we do this again? Next slide. And this was just last year. This next one"
  },
  {
    "startTime": "00:54:02",
    "text": "So last year, at I or sorry, this year, IATF117 in San Francisco, I was setting on the skin group, and I saw this slide, And this is How do you, reconcile changes when you come back online? And you have to figure out what has changed since last time I was there. So this is for change detection. SCIM is for synchronizing profiles like user accounts. Across different domains. And The the next slide's on this. Yeah, you can hit the next slide, but They were talking there about what we have a trade off of. We could do simple way, which isn't gonna be perfect, but it's gonna be easier to implement we could implement the perfect way, which is gonna be a bit harder. How do we make this trade off? And it sure would be nice if we could just do it perfectly. Have it already be done in a standard library in a standard way. We're just reusing so we don't have to think about it each time we're implementing a new protocol. So so so is a proposal for a group, that's a place to solve the general state synchronization problem. Across that that other protocols can use. And so we'd be producing some common libraries. And an abstract model of synchronization. That and it's like, here's a way to do it, and here's a way to do all these different things. Now, synchronization itself is like, an indefinite space of stuff. We're not gonna be doing the indefinite space. We're just gonna be scoping out stuff that's useful to implement our and we can look at all these examples and be like there's a bunch of basic common stuff that we all need. And over time, we can add stuff in. Based on, what people need, what's in demand, and also what's what's doable to do. And next slide, So, this is a model that I'm proposing here because we've actually been doing it. Like I said, with the braid group, this informal working group for the last last 4 years. And, it's worked pretty well. We've we've produced a spec called BRADHTP. So we have both an abstract model of synchronization that handles these 4 aspects, subscriptions, Okay. So I wanna be able to"
  },
  {
    "startTime": "00:56:00",
    "text": "say give me stuff. Keep giving it to me. Push it to me. And, and I wanna, like, resubscribe, and I wanna get the new stuff since when I was last subscribed, We have patches. So, like, How do you express a mutation? In a general way. We can apply that to any different mine type in a general way. We also have a general version history that works for like, works for any of the distributed systems and simple systems. It's easy to specify this stuff, and we've, merge consistency. And, So we've done we've kind of this general model. And then we're also dispatching or dispatching. We're we're taking the Braid HTTP spec is a concrete spec that applies to the HTTP working group. And we're trying to standardize that there. So general model, we're gonna be working with different working groups and creating general infrastructure across them. And It's it's nice because we can test this stuff. So we have this model, the single model, we're able to actually come up with an, a single protocol that can support any CRDT or OT algorithm. And for those of you who don't know what that is, those are, in my opinion, like, the state of the art state synchronization algorithms. This is what Google Docs and Figma and all those people are using, and The new ones are really good. They work peer to peer. You can just edit stuff offline, wherever you want, come back online. And no one's ever, I mean, It it a lot of people thought it would be impossible to have a single, protocol could support any of them, but we succeeded, and we can show it because we have these tests that let them interoperate And, Okay. Next slide. Oh, should we take the queue now or we just keep finish. Okay. Let's just keep going. Okay. Cool. Okay. So, I think, yeah, 2. Okay. So So what we get from this common infrastructure is we can raise the level of abstraction we say in the brave group that should be able to read and write"
  },
  {
    "startTime": "00:58:00",
    "text": "any remote state on the network as easily as a local variable. And So so When you are writing your specs, when you're writing your implementations, instead of doing all the networking yourself, you're just gonna say, what does my data structure look like? And I'm gonna issue patches to it. Or react to patches to it. And this is what it's gonna look like. So this is or actual tools. This is your JavaScript console. And so you can access that state at this HTTPS URL for a chat, as a variable, there you get an array of of of of of messages in it, and then we can push a new message onto the chat. And just using JavaScript push then we can change the first message is username to Alice. And down below, you see what the other peer receives over the internet, and it's automatically updated. Each of these versions comes in because it's subscribed to the state and each it automatically creates versions and patches from your manipulating of this of this variable. So this is what's gonna look like to to program and write specs at this higher level of abstraction makes it way easier. And next slide, last slide, I hope Great. Okay. Great. So We're gonna be able to raise level of abstraction dramatically. For state synchronization. This is gonna make it much easier to write to to create our protocols much easier to build them We're gonna have a new level of interoperability because we're gonna have a common model for synchronization. I'm gonna be able to access the state of my printer in the same way that I'm accessing the state of my profiles in the same way that I'm accessing my files. And, And this is an and and this common substrate is gonna have much better functionality. Better networking robustness, conflict resolution, history, all this stuff built in. Is gonna be a major upgrade to our networking across the So that's the motivation for creating a state synchronization working group"
  },
  {
    "startTime": "01:00:00",
    "text": "place where we can work on the general problem. And, Gradually over time, we can increase the scope, add in some more features. We'll have to do that very selectively. And there is a big question here. Like, some some things that we've noticed in the braid group, One thing is that It is very helpful to have researchers and research knowledge about distributed systems and these these new algorithms in the same room or the same process as implementers. To put those 2 together so that the needs are met by expert abstract knowledge because in the process to create these general protocols, we are also simplifying and generalizing our knowledge of the protocols and of the algorithms. And so we've had this question of do we want an IRTF research group? A working group, And I believe that we want a working group. And because the focus of this group should be creating those common standards. At least come the common abstract protocol. And we can in the process of working group, we can incorporate knowledge from research we can also do research in a working group but you can't really do the other way. And and want the focus to be on creating the common infrastructure. But this is a question for 4th dispatch. We have a bunch of people in the queue. So let's get to it. Go ahead, Ted. Tetra, thank you very much for your presentation. I I I I wondered, first, if you had talked to the usable formal methods proposed research group folks or not. I have not talked to the formal methods research group. Okay. So, one of the two outputs you described in in this was you wanted to be able to create an abstraction that described the different states synchronization aspects of a, I believe, the usable formal methods group might be a useful set of folks for you to talk to because, obviously, state, synchronization, event management, etcetera, are all things that formal methods would like to be able to describe in the abstract. And so I think for the purposes of of of,"
  },
  {
    "startTime": "01:02:00",
    "text": "trying to work with the research community, there's already a group gathered there. I believe that that might be a useful connection for you to make here. The second half of described in creating a set of common libraries and, and, a common abstract protocol. Our experience is that when you build it, with that intent it tends not to be tremendously successful, but if you build something very useful, people tend to poach it very readily. And so we we see the reuse of protocols in in the IETF mostly because they prove themselves over time, to handle a particular set of tasks very well. And whether or not they were abstract to begin with isn't important as the fact that the other bits, were able to borrow them readily. So I would say that, trying to tackle something with the the statement that you want to create an abstract substrate, substrate, is probably not going to work, but if you say we want it to build a a a set of libraries or a a set of functions that work very well with HTTP and HTTP built protocols, then that focus as Brad started out with may get adopted very quickly by other groups. In in effect though, I think your current scope is probably too large to tackle in either a working group or a research group because some of what you talked about, you know, being able to check and change the state of different values on the network as easily as locally some of those are actually in different protocols where different authentication methods and different potentially, network availability of resources is going to be a problem. And so just like quick has to have a fallback to HTTP, you probably are going to have situations where It is absolutely not possible to do this across all the state particular user or application might want simply because they don't have"
  },
  {
    "startTime": "01:04:02",
    "text": "either the application or the network path to do so I think maybe you should narrow the scope to, a particular set of locations that want to use it and build the formal methods, abstraction in the research group and the working group Either afterwards or in parallel, could could could could could could take on that more narrow scope Thank you. Okay. We've got along queue, so please try and keep your comments, your questions kind of short. Go ahead, Elliot. Well, I think Ted covered most of the ground that I was gonna cover I was gonna be a little bit more succinct than simply ask have 2 disparate applications that you're looking to apply, especially, you know, saved from you you have that slide that covered everything from HTTP down to, netconf and routing. Do you do you have 2 disparate applications ready to go? Michael. You get the question? Yeah, I I heard the question was I have 2 applications for you to go. My question do you have 2 disparate applications of grade ready to go? In terms of what willing to test with you, willing to work with you to develop the appropriate abstract model so that it it it stretches in terms of generalization. Oh, we we so We do, we do have applications, a web application where we've been mostly focused on web applications, we have, some chats and some Wiki that are, like, small applications, we haven't had as much, yet. Does does that answer your question? Yeah. I was looking how far down the stack you wanna go, how far, you know, into the network world you wanna Thank you. Yeah. If you wanna go with BGP, you know, where where where you go? Yeah. So, down the network stack, that's all, like, potential possible future scope creep. The focus right now would be, is just a simple application. So, like, email chat kind of like very basic stuff. We would spans go from there, but we'd start out by saying, hey. You're already building some apps."
  },
  {
    "startTime": "01:06:01",
    "text": "We can automatically synchronize that with you, give you offline mode collaborative editing, history, it's gonna be easier to write your code, and you're gonna get better features because we're gonna have infrastructure. And we've already built a bunch of this, actually. Okay. Thank you. York. Elliot, your quest question I mean, Your answer to the dispatch question I'm I'm I'm sort of neutral, but it sounds really interesting. And If the choice were to be between a working group and a research group, gets closer to working group Thank you. Mark Nottingham, I am somewhat enthusiastic about this work in HTTP specifically. I think that if we thread the needle and get, enough interest in giving it a decent amount of review. Go forward, and we're gonna we're gonna talk about that later this week. I am concerned about an overarching working group about this. And and that's because in general, the these top down efforts much like Ted said, tend to fail. They don't tend to match the work well. In that you you often have to make a lot of compromises to paper over the differences the different use cases and the different technologies, and those compromises are our gaps that interoperability suffers in. And we've seen this time and time again. And so I'd be very wary of of, an attempt to try and have you know, high level working group for this. I think doing it protocol by protocol and repeating best practice much as Ted as alluded to is is the right approach, and it's very much the approach this kind of problem, although we have things like SASL, where that's the exception. And that's had a lot trouble, getting adoption and, and, and, and getting matched into applications as well. So so that's what I would recommend. I do I do wonder if if there's maybe a place for a research group. To talk about, you know, the patterns, the best practice"
  },
  {
    "startTime": "01:08:03",
    "text": "do that research work, but not to produce protocols. And and not to do that work. If you're gonna modify HDHP, it should be within the it is. Modify. I don't know. Email, it should be within that email community, make sure that it has those appropriate funds rather than trying to impose it from a a more theoretical direction. So that would be my answer to this ask question is definitely not a working group. Maybe a research group but but really targeted efforts within certain communities. This is Daniel Khan Gilmore from ACLU. So I'm usually loathed to disagree with either I'm not or Ted, And maybe I am agreeing, actually, I think as a dispatch outcome, this might be 2 working groups. And maybe the the research part can be pushed if the formal methods folks are interested you can, maybe pick that up there. I'm I would I just wanted to stand up and say that in lamps, we had the end to end mail guidance, and then encrypted mail guidance discussion. That identified major gaps in what we don't have and actually synchronizing state between mail user agents that are connected to the same email account is a major gap and something like this would be super useful to have an I map context. And however, like like Mark said, just now, I am not convinced that one working group would have the right expertise to figure out how to do this in imap as well as an keep you So I would love to understand how we can get the theoretical results here applied to, Say a male user just to share an IMac box. But I don't know that's that the folks who know how to do that with HDTV will know how to do that at 9 op or vice versa. So that's what I'm saying. Maybe it's not maybe maybe we bring this work I'll agree with market that this is protocol specific I think soon. David's Ganazi, Internet architecture enthusiast."
  },
  {
    "startTime": "01:10:00",
    "text": "I you said one word that really scared me, and it was generalized. To echo what other people have said It's the IETF does not know to solve generalized problem. Like, we have failed at every single attempt I've personally scene. And that's because it is objectively hard and, applying this, like, state synchronization to HTTP or time app will look completely differently. So My personal take on the dispatch question is that starting or working for this? I don't think it will be successful whether working with a research but taking individual instantiations and bringing them to HTTP or other groups and seeing if there are enough people who wanna use it, would be more much more likely to lead you to success. Allstate. Hello, Austin Wright again. Oh, Maybe split the baby down the middle of those last few opinions. HTTP a wonderful general application with our protocol, which you can deploy to do any number of things. And as you showed, it can be used to do any number of user applications. And I think some of the shortcomings you've identified are very specific niche things like how do we, do subscriptions and talk about data. Thinking on the fan of RDF, which which, you know, and and things like that. I do JSON schema, which is specifically about talking about partitioning or identifying in talking about data. And and so these technologies sort of already exist, and it it seems like we could use, There's already working groups for most of these problems or the most of these problems would be in the scope for a particular working group already, it's just that we want to put out or identify some best practices"
  },
  {
    "startTime": "01:12:00",
    "text": "and, unifying some of the technology around synchronization I've the, been putting out a spec for synchronization myself, recently, of course, for byte range batch. Alright. Thank you. We're we're running behind. So Yes. I I I would maybe suggest, research group, and then we can, identify specific recommendations for specific technologies, like how do we bring synchronization, that to HTTP Biz or HTTP APIs? Hi, Dola. I'll list some 20 years ago, I committed an RFC. RSC 325 for. I had to look it up. About defining Apparently, consistency. Turns out there's not one. There's many. And What protocols are useful? Depends strongly on the questions you want to ask I find this presentation convincing in that we should have a working group to standardize or generalize that approach you have. The the toolkit you have come come up with. But I contrast this to them MLS Working Group. Which has a huge set the virus cease. The finding exactly state synchronization, but where the problems to be solved and the requirements on the on the solution are different. Then in other contexts, So To answer the dispatch questions, No. This general thing is not baked enough to be"
  },
  {
    "startTime": "01:14:00",
    "text": "anywhere near, An IETF Working Group It might be valid research to refine the language we use to speak about synchronization Yes. This may be There might be a toolkit that has been developed in the has given that It's valuable to standardize and show how it's applicable to multiple applications. So Go not to the elves for answers who they will say both yes and no. Halston Bowman Koetje of the car working group, which has a protocol was a little bit of state synchronization co op. You mentioned that I would like to see from you. So, but not my answer to the dispatch question. We we have a model that maybe we should be looking at. You said, IRTF cannot do standards. Definitely true, but they can prepare standards. And, about 500 years ago when delayed tournament networking. Came came, to prime time. A research group was made, and that research group looked at the problem and then came up with an experimental protocol that that to was developed in in a large effort involving many researchers, and that actually was deployed in in some form in space. And, then at some point when when that experiment was done. Did the end working group was formed in the IITF to actually come up with and that production version now exists. It's bundled protocol version 7 for some reason. And the the whole effort was successful in in its Well, you find space. So my dispatch proposal, would be to consider the same"
  },
  {
    "startTime": "01:16:00",
    "text": "approach, see if a good research group can be formed. Out of this. But with a view to getting an experimental protocol agreed in that research group and then taking it to Hi, Phil Hanbaker. Yeah. I'm also in the research group camp and here's why I've built one of these as well. And Everything in the mesh is represented as an append only list it has cryptography built into the construction of the list so that every list is a Merkel tree and authentication encryption rolled in and so on. And I'm pretty well aware of the specific optimizations I have required to get performance for my particular application that make my approach non general It's not, you know, it's it's designed to solve my problems, and I know that what the costs are making it more general b. And so, you know, it once you decided everything's a list, and you're never gonna leak stuff, you know, well, that's a fairly big commitment. You probably don't want to have gigabytes of data being added as chunks onto that list. So I'm a bit skeptical of the idea of a generic system. I'm also really, you know, my experience of, say, Hey. I bought this bright shiny object. Hey. You know, just getting people to look at it is hard enough. Getting people to use it, I don't think it's gonna happen. So I think a research group and look at the fundamentals, get some formal methods in there. And, then take it from there and see if that information component funnel back into the wider AGF is the way it forwards. Thank you"
  },
  {
    "startTime": "01:18:04",
    "text": "Yeah. So, one issue with the research group, we talked to the, the chair of I IRTF. Last I And one thing he said was that, research groups have a time span they're expected to produce results over a period of, like, 2, 5, 10 years. When we are already producing some things that some common models that need to be standardized. So it felt like that timescale didn't really fit that's I see some some shaking of heads. I'll accept that. And then, We have had a lot of 6 with your specific point about optimizations, surprisingly, a lot of these can be generalized in our experience we have produced the fastest CRDTs in our group and also have generalized them. But that's awesome. Thanks, man. And also, I appreciate all all the discussion, really good comments I feel a lot of residents with a lot of you as well. So thank you very much. Okay. So it it sounds as though the ref consensus here is something more along the lines of a church group, even though that's not the the preference I mean, the concern is we don't wanna create a protocol that's an orphan that kind of like is very general, but nobody actually uses. Chan Levine. Thank you. I hope this one will be easy. Next slide, please. Who's driving? The chooping is that It's a little slow. Okay. We go. For all of the for everybody who uses webmail, One of the features that every webmail includes is a way to say this message is junk. So the user reads are mailed. The and the the the She decides something is junk. She pushes the junk button. And in most cases, provider then tell tell since will then tell the sender that, hey. This was reported as as junk."
  },
  {
    "startTime": "01:20:01",
    "text": "Gmail is sort of an exception here, but every every Microsoft does. Yahoo does. Large cable providers like Comcast do. Next, please, So the way the way it works now is if you wanna get reports about mail, you send that your recipients have complained about you figure out some some way to figure out which mail system do you wanna talk to? And then you go and tell them like, hey. These are these are the addresses that I send from. And at which point, whenever whenever the there is a whenever somebody reports something as John that comes from one of your IP addresses. Send you an RF report. And this actually works pretty well. And, you know, I mean, I I run a handful of mailing lists, you know, and I get I send mail to the places, and I get a trickle of reports when people like outlook report one of my mailing list messages as spam, typically for reasons I don't understand, but at least it lets me unsubscribe to make the complaints go away. Yahoo does it differently. Yahoo rather than keying it to the IP address, you you you go through the same secret process and you say, These are the domains I control. So if they see a message, if they get a a a junk report about a message, and it has your decim signature on it. Then they will then they will send it to the private address if you register. So Most people use IP addresses. Yahoo uses DECOMC years, but next slide, please. Okay. There's two reasons. There's there's two reasons this is not great. One is that it's like it's sort of a it's it's a there's a definite secret squirrel aspect you know, like, if you if you don't belong to Mogg, then it's very difficult to figure out where to, where to register stuff. And for obvious reasons there are middlemen And historically, there've been middlemen who say register with us, and we'll tell all these providers, which is fine. But some of the middlemen are now have now decided that, that their business plan requires that every everything we wanna and they're and they're and they're starting to charge people for for allowing to get reports about your spam, but everybody agrees is terrible."
  },
  {
    "startTime": "01:22:00",
    "text": "So, Next slide. So this draft is quite simple. We it simply says we're gonna formalize what Yahoo does. We're gonna define a record you can put in you you you can put in your in your DNS sort of adjacent to your D Kim keys. Which basically says, If you get a a a junk report about a message and it has this deke, you know, and it has this dekeem domain signing it. Then send me the reports. So there's no middlemen and it scales with the DNS and everything will be great. And just to emphasize something down to the problem, we're not reporting decim failures. This is this is still to report to to to, to root manual manual junk reports. So it's simply taking what people already do with the junk button. And making it so that we can we can route the messages for free in a in a way scales better and it's more reliable. So so I think I have one more slide. Yeah. So we have the usual questions. It's like, we have a draft that Alex Brotman of Comcast wrote It looks pretty good to me, which is why I'm here pitching it. I would like to, send it down the standards track. Since, people in the business all agreed this would be a good thing to do. And it's not obvious where to put it. Some people suggested the D Mark working group. It is definitely not D Mark. So it could be 80 sponsored. It could be a mini working group And, there's a line that actually I added after you copied this. Which is there's an there's an existing experimental draft that has an an alternative approach for you where you put the address to send the report. In a header line in the message, which is supposed to be signed. So if we do this, I would also wanna reconcile It's like Like, if the deacons, you know, if the DNS has sent the report here and the message sends send the report there, and you do both, you do one, you do the other. That's the sort of thing that we would have to work out, but it's really a detailed yeah, my question is, like, assuming you think this is not a terrible idea, how can we move it ahead Okay. Thank you. K. PHP is first in the queue."
  },
  {
    "startTime": "01:24:00",
    "text": "Well, that's that's the leftover. Sorry. DKG. Hi, Daniel Con Gilmore. So this seems totally reasonable to do, if you're gonna do it as a DNS record, I I mean, maybe DNS. 1 of the DNS working groups would be willing to pick it just as a way to specify Dan, could you could you could you speak up? You're hard to hear. Sorry. If the plan is to do this as in the DNS, as you're describing here, you're not planning on doing anything like specifying the format of the of the report message or anything like that. Then I'm not sure why you can't just do this in a DNS working group. It seems like a reasonable thing. You're basically saying this is a record. This is a rec, you know, one of the ways that people will access to the DNS I don't know how you would square that with trying to reconcile the the header based approach that Oh, if the draft actually specifies the and answer your question. It's not a DM may it it's a regular old text record just like the D Kim keys are. Okay. And it and the and and the and the draft actually specifies, here's what goes in the record. Here's, you know, here's the fields that say where you send stuff and then there's some all, like, if the reports go to a different domain than yours, there's some extra stuff that we borrowed from Dean. Alright. I I take back my thought that this is a DNS thing. Sorry about that. So Yeah. So, yeah, it's it sounds much more male related. I don't I don't know Yeah. mean, it it would be nice if we had sort of a I have I have no idea where to put it then. Sorry. I general mail stuff group because we have a trickle of this stuff coming through all the time. Murray is next. That last thing you said isn't happening. This is is Yahoo planning to do this if they I'd be talking to them about I haven't talked to Richard lately, but I think they would be sympathetic k. It's, if we do we're to do this, you know, we're gonna have to develop consensus and all that kind of stuff. If we don't have a working"
  },
  {
    "startTime": "01:26:05",
    "text": "is MOG going to get any kind of participation from MOG to to work through the process, or is it pretty much gonna be you and Alex I mean, certainly, at at at the Mogg meeting last month, there was a lot of enthusiasm for Okay. So, I mean, if if you want, you know, when, I mean, We we have a pretty good graph, you know, and and, you know, and we since no no good deed goes unpunished because simply say Murray could you sponsor I was hoping not to go that route just because I know you're kinda busy. I I was hoping you wouldn't go that route too, but it's it's it seems like the the path of least resistance given you know, spinning up working groups that MOG tends to like results in pretty much no activity. So let's we can talk about Yeah. Very, Barry Lieber, chair of the working group and IETF liaison to give context. Yes. This is not the monarch it's also not, decim because the decim were group is working on the different problem. Two things about it. I would say we should do a working group simply because any kind of Email abuse thing brings out all of the email people and AD sponsoring this would probably be a mess for Murray. On the other hand, maybe AD sponsoring it will reduce the level of crazy email people who show up. I don't know. I mean, I I have a draft about we were facilitating the expires header, which we could also put into working group Yeah. Yeah. The, certainly, I've I've looked at Alex's, draft, and it it looks it looks good. We definitely should do it. The other thing is that in from the MOG side, We always get a lot of interest in Mogg for this stuff. And we always get a dearth of actual activity from mog people coming here to do it. I've been as liaison trying to drum that up for years and had trouble with it. I think it would be very important for this to make sure that we engage the mog people. And,"
  },
  {
    "startTime": "01:28:03",
    "text": "maybe the right thing to do is to pass this around and log a bit more and something solid from them that we can bring to the IETF where where they have agreement that we've already got it right, and then we can come back and start an an AD sponsor it with, with the fact that Mark was already backing the solution we have. I mean, we we we certainly have put a few drafts. Well, like the the header draft. It came from Aug, but Yeah. My my experience there is we get we get 1 or 2 people at Machowac. We know how to do this stuff. Exactly. Yeah. Yeah. Right. Elliot. Certainly, Alex is a big mall guy. So Yeah. So I I realized there's not a 100% direct comparison here, but, I wonder if you guys could start by leveraging, Felipe's work an RFC 9477 in the complaint feedback form, feedback header that he he just defined. That's the that's the line that that Yeah. The the the So, anyway, as you go to Charter, you might wanna or or you might wanna drop that into, you know, why not or why or or house. I thought I mentioned that. Okay. I missed that. Yeah. Okay. Yeah. No. It's like, yeah. It's just it's definitely overlaps with the what the what the what the what the what the the header Okay. Okay. Anyone else? So I need Okay? I see Alexis. No. He's not stopping at the microphone. Okay. Alright. I'm happy to help. Sorry. I didn't put myself on mute. Happy to help I I don't have an opinion about, you know, I did sponsoring was, working group. Alright. My sense of the feedback is that"
  },
  {
    "startTime": "01:30:00",
    "text": "hoping for more of a commitment to We're participation from Mogg rather than just a suggestion that we go off and do something? Yeah. Yeah. And, if we can get that, then it might be reasonable to do, like, a mini working group and and and all that. Because because ADC, I I think people are kind of agreed that AD sponsoring this would be kind of a mess. Yeah. What you wanna, Barry, and I see if we can, put together a pipeline and log, and we can come back and part of your I'm not gonna be in Australia, but around then. Okay. Sure. Yes. So a quick summary of the dispatch outcomes So for the first one, to have a working group, is, was suggested. AD wants to see more evidence. And before that. And the second one is, more discussions will be needed and seaborne is not the right place. So I'll try to maybe try to get more feedback from the JSON schema. And something related with Tuesday morning evening event. So this, reach out. The third one is, try to narrow down the scale the scope and, AF to form a working group. Maybe a research group And the the the last one is, try to get more feedback and make it more solid. So that to finish our dispatch session, and now it's, our diarrhea. So our eighties I'm going to share the slice."
  },
  {
    "startTime": "01:32:00",
    "text": "Them. Yeah. Whatever. Hi, everyone. It's been a while. Nice to see you all. Hi. Thank you. Thank you. Next slide. So the chairs have compiled a very nice meeting of interest for us, for this week, we have a new working group meeting for the first time. SML, Monday, today. There is some there is some buffs. We only have one in art, which is the whimsy one. But here, very welcome to join all of them. That are in there is listed some some side meetings there. You can read the description in the side meetings page. And then we have sex dispatch, IV openjointispat as usual. There there is also a scenario meeting, this idea was also, We didn't manage to charter V Con in time, but they did get an agenda slot. So we flagged it as boss, just can't conduct any working group business, but they have yet to keep their slot. So that's might conclude them under Buffs there. Right. Economic Next slide. So, I just want to to mention the area restructuring that is happening. If you haven't seen the many announcements, that have been sent out, and you will see this slide and a couple more times during some meetings, But basically, what is happening is that part of"
  },
  {
    "startTime": "01:34:00",
    "text": "transport and part of art will soon merge into a new area that is called Web And Internet Transport. Or wit, so some of the art working groups that are security related will Cool. Back or go to security, the web art working groups will go into wit together with some of the transport working groups and other ops and intralated working groups in transport will go to ops and int art will stay with the rest of the working groups. So the timeline is by itf119 and there's with with with with possibly be a transition period starting in January 2024, and that's not super clear, specified right now. So more information to Kana. Next slide. And for the details of which working groups are moving, which ones are staying, These are the ones that will move to it. So in green are the ones, from art. So those are ABT core CDNI core, HTTP API, HTTP, this, mock, RTC web, web fronts, and wish, and then they will leave art is scheme Tigress and Utah. There is, 2 small changes from, the announcement that was sent the changes are which was not mentioning in your in the announcement, but we'll go to which and Utah was not mentioned either, and we'll go to sec. And just to clarify, to start, so there will be some 80 reshaffling for for these working groups. Well as as the ones that, staying art. But, I guess that's that's gonna be handled when the new ISG seated in March anyway. So we will need to take care of that as well. So, yeah, so you're all aware of this. And Yeah."
  },
  {
    "startTime": "01:36:00",
    "text": "That's it. I don't know if there is any questions or or anything, but if you have time. I apologize. I mean, is the ISG seeking any feedback on this, or just a fair conflict. We have gotten feedback. And they're a senior. Yeah. It's a fair complaint is the answer that they're not seeking feedback is the answer. Right? Right. Got it. It's probably too late to stop the the creation of the area, but if you have feedback on which groups should move and all that kind of stuff, there's probably a little time to make adjustments Okay. Thank you. A March, Mark, Oh, Sorry, Ed. I don't see the queue. Mark Nottingham. Yeah. I gave some of that feedback. I'm not gonna bring it up but, I really think we need to have a discussion in the community about the impact, especially on dispatch. And on the area meetings and in area coordination, because it's already problematic and adding a new area into the mix is gonna make it more. So Thanks, Mark. And we have taken that feedback, and we have been discussing this within the ISG, and there might be some Welcome. To your proposal. We will wait patiently, I suppose. Had really hard. Yes. Yes. Ted Hardy. I also gave some of that feedback, and it won't won't, rehash it here, but I, I do think that there's definitely an for us to bike shed like lightly here. The which and arch, I'm not sure that art actually matches the applications and real time matches the resulting group. Should we go back to apps? Do you mean the description doesn't match the the groups that are"
  },
  {
    "startTime": "01:38:01",
    "text": "Well, you've taken many of the things that were the real time bits of art and moved them into wit. Maybe it would be a better description of the the resulting change to call them apps and with instead of, part and width but I see, as in all bike sheds, people are immediately unhappy because Robert has shaken his head. Like, I'm, about to paint cerulean, something which definitely ought to be hunter green. So I just think maybe it would be worth thinking about the name a little bit so that it is fully descriptive but it is definitely a budget. We we did look, at the description of the area. And considered that that was still accurate, but, we definitely will have to confirm that and we are also going to have to type of description for width at the same time. So we do that. K. Let's see. Thank you. Thank you. We got one topic in the art area. The presenter please. Hi, everyone. I'm calling from China Mobile. And today, I'm a a prepare, new topic collective communication, which might be, which is a new topic for art area, but might be interested to some of you guys. So we have prepared to drop to submitted it to TSB Working Group, but why today I wanna present it"
  },
  {
    "startTime": "01:40:03",
    "text": "in our area because I think the collective communication optimization work is cross layer design. So, we wanna talk about be it today. So next slide, please. So what is Glactic communication? The Calactic communication is an interprocess communication model that plays a key role in, high performance computing and, modern Tributed AI training workflows, and, it involves a group of, processed participating in classic operations like one too many, and, many to one and all to all patterns and usually realized by a sequence of unique cost messages, in underlying network. So next slide, please. And collective communication has a wide area, a wide range of application and in data center networking, like, disability AI model training and big data analysis applications and beauty storage because in today's data center network in this there is a trend that these applications are the underlying network are are trying to be converged to offer capabilities for different applications like this. Next slide, please. So, as you we I listed in this page of typical collective operations. Like, data movement and data aggregation synchronizations, if you are more interested in this you can see my slide, you can view our, drops So next slide, please. So the major problems for, these applications is that the current implementation of collective operations the underlying network is point to point. Sorry about I used P2P but, the P2P has another specific meaning, but I mean, point to point implementation of the collectives in the current network,"
  },
  {
    "startTime": "01:42:01",
    "text": "introduce a lot of overhead, it a major reflected in 3 perspectives. One is that it will occupy large bandwidth because there are a lot duplications and redundancy in the transmission of the packets. And also it will introduce, March datamoment in the end to end transmission of these packets. And also there are large number of data copies and endpoints. So it will these three perspectives will introduce a large, a very severe problem of the communication bottleneck, and it will definitely degrade the performance of these applications, especially in the disputing AI, training workflows so that if we wanted this design, performant network infrastructure, we need to save bandwidth because bandwidth is is extremely important to bandwidth sensitive applications And, is a new oil. The application because if we want to build, like, want to train trillions, numbers of parameters model, you need to spend about 10,000 network cars and accelerators build the infrastructure and you need to spend a around 100 of, $1,000,000. So the Bandwidth and new oil and you need to reduce data movement and decrease data copies So what you should do, you need to offloading the Clacking operation to the network. To to achieve more benefits. And, to design performance applications. So next slide, please. So why it is, should be intred introduced in area, I will, later show some of the, like, issues in the transport, like, issues in the it like, IP multicast and also a, like, operation and management areas"
  },
  {
    "startTime": "01:44:03",
    "text": "but why it should be introduced in our area. Because currently, the the application programming, if you want, the implementing, of the collective operations, you need to be distribution, they need to call the APIs to implement this Collectives operations. But currently, the it is not a performance enough. So, introducing FSR, introducing collective operation offloading will make it better. And, currently, the these applications the API is not designed with is the the offloading mechanism. So I think the API should be redesigned and modified to improve, the behaviors of these applications. And I that's why we think it's related to our area. And, So, the the also, what should be standardized here So the lower level, people may think about that lower level of these collective might differ in the vendors, but, the API should be extended to be common commonly used for the applications. So next time, please. And also, like I said, there were a lot of issues because the topics crawl layers, across layers, We entered we will, we listed several issues related to the transport, to the, a networking layer, like IPMOS test for, the message processing, and also, like, introducing some control in the management. Candy's a for the operations areas. If you are interested, you can go over go through the drafts to see the details And next slide, please. I will quickly go through these very quickly go through these issues. Like, in the transport, there are some reliability issues in the implementation of the, collectives, offload because we need to, for example, we need to realize group to one mode currently"
  },
  {
    "startTime": "01:46:01",
    "text": "there, there is only point to point reliability in the transport protocol design. If you want to realize it in the introduce it in groups of 1 mode, you need to think about the intermediate, how the intermediate network knows for the behave. There are 2, major options like, you can behave like a endpoint to break the transport function but it may have some issues, like maintaining too much states, or it can act as a transparent and transparent note, which doesn't which doesn't need to maintain full transport function, but need to be aware of the operations it should be performed on the packets. So there might might be some design space to to realize a multi point to one point reliability transport issues. Next slide, please. Roan, did you have a clarifying question? Sure. Yeah. Really me. I I read your, you know, read the first the the abstract and the couple chapters of your, your internet draft. And I feel like I started reading a book from the chapter 3. I'm wondering if you could if you could just say what the you know, what I what I TF protocols your already using, if any, And Like, just give up, like, a higher level or Nope. Earlier introduction to this problem, please. Because I think a lot of people here are are either, you know, maybe guessing as to what you're trying to what you where you're trying to accomplish at the very high level. Thank you. Sorry. I think I'm not trying, very quickly get your what you may because of the masks. So, do we mean that, what I talk should be more related to Ontario to"
  },
  {
    "startTime": "01:48:01",
    "text": "there is a a high level, some a a summarization of This topic I'm trying to trying to make sure that I understand the problem that you're trying to solve n, I didn't get enough of in in enough of that information from starting from, you know, knowing less. From your from your draft. I was hoping that you might be able to say, like, What IETF protocols you are using now that are not solving your problem, if any, and what the overall you know, bigger bigger picture of your problem is. Yeah, maybe you can just go back to the the first slide about the the the the concept the page. I think, yeah, I think I will quickly go through the the problem space because 1st, we we need to understand what is clacked communication maybe you can you already understand because it's an enterprise communication model. And the the major problem here is that current implementation, the online network, is point to point. But you could introduce a lot of overhead. Yeah. So It's the When you say interprocess communication, Yep. Yep. It's I I think you assume that we all know what you mean. And what what I'm asking is Be more specific, please, about interprocess communication between which processes and using what protocols and what part of the network. And then I think a lot of a lot more people here are gonna understand your that, you know, the further details of your of your proposal. Thank you. Sure. Thank you. So, there are some proprietary, design of the a classic communication, like, using RDMA based transport protocols implement this, these models, but we are not performing enough because they haven't introduced lack through communication operation, offloading mechanisms."
  },
  {
    "startTime": "01:50:00",
    "text": "And it needs some design space to improve the mechanism. So I think, this, the work well. I know span a lot of areas like transport areas, and also, like, networking areas and also, the operate OPS area. And, also, it needs to be finally designed, APIs that, This is friendly and friendly to the, developers to design this applications. So I think that part work should be within the scope of art area. So I hope my, my explanation will be helpful. Thank you. So maybe we can quickly just go to the the the last page of the slide. Yeah. Sorry. So take one more. The most important one. Yes. The the last page. Yes. I I think I won't go and into the details of the waste drops. So just quickly a broadcast of the side meeting that, will be held on Thursday. November 9th, And so if you have interest, you can come to see what's we what what we wanna show to you guys and we'll come for more discussions and contribution. Thank you guys. Okay. Thank you. So, We don't have, any other questions. So maybe Maury. So you have something to say? Good morning. Just before we adjourn, I wanted to remind everyone that this is the week that non is doing its interviews of"
  },
  {
    "startTime": "01:52:01",
    "text": "people in very seated positions. So if you have feedback for anybody who has accepted nomination. Please do take the time to do it. They could really it would really appreciate that feedback. You'll be reminded several times throughout the week, I realized, but I wanted to get the one end so thanks. Any other business or other announcements for the meeting? Alright. I guess not so We're done. Thank you for attending the session, and have a good week. Phones. Yeah. I I've gotta read and read through it again. It's what I've what I've read so far, scenes Good. 9 keep your Yeah. I may do a little bit of of just"
  }
]
