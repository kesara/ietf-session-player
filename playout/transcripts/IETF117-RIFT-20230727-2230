[
  {
    "startTime": "00:00:04",
    "text": "Everything's fine. purpose. Thank you. tried Good morning. Hi, everyone. Welcome torief meeting in San Francisco. All of you. next slide, please. Not well. seeing your faces around for a couple of years, probably, you know, everything there. all your contribution to ATF are subject to IT referrals, If you don't remember, don't forget, please read it. again, Yes. So colon conduct. That's what you were in does this morning Please don't be like that. we won't tolerate bad behavior. no yelling. But, again, we are We've been working together for a long time. all nice people. So we take anti harassment out of conduct very seriously here. So agenda for today Jordan is going to give us really long talk on progress of base spec key value out of PMs or out of all the stuff that's going around. And Yeah. So thank you for doing that work. Then we have signed in talking about young and have presentation about service extensions. And And then we'll have a open discussion. So the DC routing for high performance compute that came up part of routing working group side meeting as and rifed"
  },
  {
    "startTime": "00:02:01",
    "text": "surprised. It could be extremely suitable for the standard environments. So have open discussion on this. And personally, I think we need to rejuvenate the alias work on the the prefixes. So I'll be looking maybe I'll reach out to her and see. I'll probably reflux the draft. So, Jordan, Alright. Yeah. Okay. Jordan Head, Juniper Networks. I'm just gonna give a fairly brief update. I won't mind. try not to say 20 minutes. First, we'll start with the risk based spec. slide. So what's new in version 18? primarily readability improvements as we kind of go through things. So, you know, few versions ago, we introduced SMGs, a lot of the Aske diagrams are really difficult to illustrate. So there's lots of value from the SVG. So basically, we added a pointer to say, you know, stick with the HTML version, stick with the PDF version so you can get the the better reader experience and so forth. to the ends in a terminology section, and then improved some phrasing in a couple of areas that were hard to parse. Next slide. And the applicability draft discussion point. So prior to 116,"
  },
  {
    "startTime": "00:04:01",
    "text": "AD brought up a few points, you know, that's a to kind of clarify with the applicability draft authors and see if there's anything worth including. So, considerations for misscabling, you know, the use of 1 versus 255 for time to live, and complement values for license ties, and then implementations that might use ipv4 broadcast or a 86 all routers multicast. It's it's in progress. There's been some discussion that that Gotcha. keep driving it. k. Next slide. What's next? Just Yep. What's next? Just pushing through the AD stuff. So if there's anything I can do to make your life easy, Please let me Yeah. are people on lines. Oh, they're on. Okay. So so it's Jim. Main main thing from my perspective is to get Albert stuff squared away because I I it it it it it's little difficult to know what's already been you know Highlighted in what has been So I don't wanna waste I I don't wanna do a double whammy on you guys. I mean, been lots of review anyway. So focus getting those squared away and then on you know, once once you let me know, then I'll go through the document again and give you my comments and I've already given you some which have already taken care of a lot of those anyway. So but it's a long document. So I don't wanna go through it. know, multiple times giving you the same input that you I've already given you. So if you can focus on that and then I'll go through it. Yeah. I'll double check. Yeah. Yeah. I'll double check everything in pretty straight buttoned up I'll hold it. but I'll but I'll Drew, your your comments have been very, very let me make sure, and then I'll I'll reach out. Yeah. Sure. because lots of staff have become"
  },
  {
    "startTime": "00:06:02",
    "text": "kind of obvious because, you know, when you work for a long time on something, don't think we realize that it's it's not obvious for people. you know, other people. So it has been very, very useful, and you read it and, you know, you think Yeah. So is yeah. I'll double check if there's a straggler, but there shouldn't be Yep. mean, I wanna don't Yeah. Steve. And go go god knows how long AFG is going read through it. So -- Oh, yeah. some Yeah. Please do scan the QR code. So we know you are here. even though you may not speak Please do scan the QR code there because test startup. push it for us. I think that's it. Muster's questions. on to the next one. Okay. Same thing. Brief update for key value registry. next slide. Really minor maintenance here about these editorial fixes. There's text that landed in there somehow. copy paste on my part. reference updates and so forth. Next slide. What's next? Not much It's essentially cooked other than maybe decent housekeeping. mostly just wanna call out the fact that this is kind of dependent on the main spec main spec is what creates the INO registry for the for the Fritz schema and then the p value component sole, fall under that. So once base spec gets pushed through, then this is open. pretty rapidly after, I think. k. Next slide. Questions? Thank you. And Next one then."
  },
  {
    "startTime": "00:08:09",
    "text": "Okay. Auto We became a little bit more meat here. next slide. So what's new for version 4? Mate's messages. There were some minor errors in the in the ASCII Depologies. So I fixed those and we but some matching SPGs against it. So this is one of them, but there's there's another in there as well. nicely. k. 3 Yang placeholder in there. There is well, it is a placeholder, but, you know, as is becoming common. If you can model it and do it, So we'll do that for next time. editorial pieces, you know, spelling mistakes reference updates, support, Excellent. Yeah. Like I said, completed training model. go for that. And that's it. Have the open router folks reached out to any of Anyone here any interrupt testing, anything. Remember, we discussed before last meeting were really excited when they disappeared. Anyone anything. Gotcha. besides the non interrupt testing on visual ones with it before. I think I Juniper and then and ZTE are going to do some offline intro testing as well. many times. k. So is there a plan to do some he in t c or just in a lab of one of the vendors. But there are works. Sunday."
  },
  {
    "startTime": "00:10:03",
    "text": "Sunizality, we just finished our update of protocol. So we are beginning to We are going to do the entire operation. test in our company. at first. So and then we we direct to to the Hexa in next So can we think of hackathon table doing Drift in Prague We we think we can do it. Yeah. That's Sounds good. on your side, you're okay. some So k. of Tony P. Juniper. So from our side. Everything reads readily any time. I mean, you are like the newest spec and all the addition all the auto stuff. It's all implemented there. The basic rest stuff is all basically ongoing tested against Bruno stuff. which is all open source. And Bruno stuff has all the infrastructure to build, you know, to run and build topologies and plug in other demons like ours. So there's a need for us. So you could actually add another demon because you have bring Lennox even. Right? You you can plug it in and and drive it basically as a mix between different implementation, internal takes, you know, which implement relations around on which notes so we can build anything. And He has a comprehensive basically set of fixed pro form a to run against risk. So Starviso is up to date. our newest stuff runs against that. It's not on our website to download. but obtainable. So if ZTE brings basically the Linux team or whatever open route guys, then they can relatively easy, you know, plug it into this infra, but we can make it as a Haka going in fracture"
  },
  {
    "startTime": "00:12:01",
    "text": "I mean, it's you know, it it it is a very quick all the inference there. would be great to have to ship an implementation that would make it real a TF protocol. Right? Well, it's really IT protocol after it's in our receiver. So, Sanghi, please keep us updated and I think it would be great if you could make it in Prague, say, a pattern item. Okay. While we make some progress, we will send email to you. Thank you. Just a reminder for Jordan's slides I guess, the font Also, in the stride is not more than 18 size. The size is too small. Okay. For next time. and acceptable. Yes. Good glasses. So I mean, whatever ZTE brings, I mean, even even the hello, I mean, that's how we started Bruno. Right? We were basically just throwing live as we don't even have flat or we don't have to run the ZTP and it's all optional. Even just the live SM is a start, and it'll be already, you know, will have a good amount of experience, and then they can push it up the hill. I mean, the the more implemented once the hackathon framework is there. You just plug it in in say with that which test to run because it's all completely broken up by EFS and by feature and so on. So you choose which tests you run-in past. Alright. One more. One more. One more. They have an update on auto flood reflection. Looks like So what's new here? So there's the we added the common flood reflection thrift model. It's the same as commonVPN and auto VPN, it just carries the core components. Right? You know, ipv6 loop back before loop back if we're using it. ISO address components cluster ID. all that. Next slide. tweets, ipv4 loop like derivation a little bit. So, originally, we were using the the the same function for everything, but, you know, t"
  },
  {
    "startTime": "00:14:00",
    "text": "want to make sure that flood reflectors themselves always work. So work it up to different functions. This is for the ipv4 club reflector. loopback address, basically, more interesting ones on the next slide. from the client perspective, Yeah. So basically, book. Too far. Now today. Basically, we carve out bits from the mask to to from what we use for the flood reflectors so a client system. collide. Right? And then, you know, we'll have some indication of that. It's okay if I client know it doesn't work, but the flutter filters must work. So that's that's the overall go for it. mixedly. So miscellaneous type changes is not really type changes, but several of the actual names have, you know, unsigned, prepended. to Reflection cluster ID type is now unsigned flood reflection cluster ID It's mostly cosmetic that, you know, makes for build us code with casting. Same thing with auto VPN, yank placeholder. get that done and then editorial pieces. Right? So flutterflection hit RFC status. So Reference updates and so forth. Next slide. I think that's it. Okay. Complete the yang model. Yeah. And and as far as working group adoption goes, you know, I I know this has been kind of an ongoing discussion, but the there's a re chartering discussion. I think I think in Yokohama, we talked about once the base effect goes. have that discussion more formally. Yeah. some some kind of still in that state, but It it Slide. questions, comments, Good work. Okay. Thanks. Alright. Yes. One is young."
  },
  {
    "startTime": "00:16:04",
    "text": "20p again, just a side remark. So the change is going in right now into the flood reflection and auto EDPN stuff is basically based on real testing and stuff that we have in basically know, operational field experience and and, you know, people playing with doing jumping up and down doing strange stuff, which is always a good thing. good luck to everyone. I'm sending down from DTE. This permutation for is for the update of Rifton Young A present that this structure on behalf of our coarser. and the product next. So the RIFT young model is defined according to RIFT protocol The model includes a protocol configurations, state information, and some applications. And we added some features to enhance the protocol So the model include support as a mod supports multiple Riffle instance. and the node configuration and the state and the interface configuration state. And, also, we support labor and database stage. and also we support notifications next young daughter has reviewed the previous version there were 3, and they say it's almost writing And the reason to be in we made a no No more cell lubricant modification. And the the challenges is about some small modification such as we align with the multiplication of Riftt protocol. We modified the receiving a a pv4 address from"
  },
  {
    "startTime": "00:18:00",
    "text": "122121, and we add the empty or size and the v. Also, we add add some leaves default values. It's centric. And And, also, we make some improvement according a suggestion from Tom And the the unsold suggestion will be addressing the worshippers such as either some abbreviations in the draft So this structure has complete the working group last call. and now it's in IST status. we welcome more review of this draft Thank you. So it's Jim. Thanks for the document. I I just wanted to state This is in my queue. but I unless somebody tells me otherwise, I don't plan on doing anything with it. until such times, the specs gone through Yeah. didn't seem to be much point because if there are changes that needed with the spec, then presumably the yang model will need to be updated as well. So So just wanted to make that clear. So you don't come knocking on my door saying what are you doing with the yam model? Thank you. So you mentioned there will be another revision is that a big change your Let us change. Let us change. Because we they want Tom wants us to add some abbreviations from Rifted protocol. into the drop. So we will edit it. Small change. Okay. Yeah. Small change. Thank you. Thank you. Thank you."
  },
  {
    "startTime": "00:20:02",
    "text": "Okay. Yes. We can hear. Please go ahead. Hi. Hello? Hi. This is Tawani from new HCC Technology. I will present the list draft on the payroll. You're awesome. coassas. This drop is about lift the institution for s r a 6. Next page, please. So background, why we need Azure ASIC in data center. using Compressed assembly 6 in datacenter. brain cell at wanted to set a simple end to end protocol enhanced TEKability. better SFC function and simple network program Next page, please. In data center, Networks will lift using srv6nandsrvendot x. make it possible to bypass congestive. knows all links. will network conduction is detector, Yeah. Controller can Optimize network forwarding performance by distributing certain loading paths to avoid congested passed of For example, in the finger on the right if either a spy node 11. XTR, conducting all the link between leaf 21 and the spy 20 2. Because conductor the controllers, suppasifies a forwarding pass of Flow Leaf 21 to inspire to do, one one"
  },
  {
    "startTime": "00:22:00",
    "text": "and the tool PLF, tool. to spy. 12. to live Yvan. to optimize the network performance. Yeah. Next date Let's take a look at how the IP protocol to 20 to support SLA 6. at a high level extension to HP the the following. Firstly, and and As are we sick? capability TiO is advertised to indicate the support or As our basic features, features, and as such operations. such as the low local block lens, local block lengths are also necessary for as I always seek Compressed said. Secondly, solo sub TLEs are used to advertise the such as as always 6 MST lens. Certainly, as I will see, look. K? The information is advertised the We'll assign basic and sits including a endpoint behaviors. force the SLA 6 neighbor say this ad will ties. Also, lastly, BP protocol is used to advertise has information. including a linguistic hours information. on the other hand, the lift early require a service fix. okay, the information. And the assembly 6 neighbors see the information to be advertised Based on its o layer the protocol feature,"
  },
  {
    "startTime": "00:24:00",
    "text": "result Lip block lens and the node lens, the same necessary for As I always compress it, Our next page page page page page page page page page please please please please are the lift, the extension for a subway 6 is primarily focused on 3 aspects Firstly, assign with 6, locate the KWGE for DDP is expected to configure a subbasic locator information. always, 6, and the ZIP As a rock to each node. And as I received n.xinformationoroctate to each links neighbor. Secondly, the SRIC locator, Perfect TIE is is turned to support the generation of the locator Perfect. it it Consider of Northbound and the southbound components. for Northbound, the locator, and the exact basic and the information is advertised. Well, for southbound early in the locator subnet load is advertised. Certainly, the assembly 6 neighbors sit are edited to enable TIE information. For Northbound, the end of dota x informations, specified to the link is advertised to the controller. 1 for sauce. found early, like, information about the selectly connected neighbors is advertised. And let's flight. The procedure of"
  },
  {
    "startTime": "00:26:00",
    "text": "traffic forwarding in LIFT as ROE6 networks have following step first started Traffic's jewelry, based by SIIC policy in the head end. end of And then the 14 pass may be azuretic n o, will specific note of As I always get and Dodd x will specify the link for them. next page, Let's take a look about the As I will see, locate KVTE for ZDP. As always, firstly, the controller is connect to that KRF and the dispute and the configuration, of all routers, including the locate and and the set of each router. to TLF. learn the TLF send this information to all routers in the network slowly newly defined S always 6 located kwigi Secondly, auto device is tabless neighbors enables information is transmitted to TLF through northbound node TIE and the path to the controller. certainly, all the receiver enabled information of the router. The controller config and the data access for each neighbors offer a routers And the past luck corresponding and the not access the information to a router. through locate the KVI finally, all routers can obtain the old locator and the seat and and the total exit configurations through It's our basic locator, QATI achieving 0 config Rayson. Next page."
  },
  {
    "startTime": "00:28:06",
    "text": "let definition of a SRA 6, locate KWTE At least coupleades s ROE 6 locator and s ROE 6th ended not x information for each node in the network. That's always 6 locator entry included notifies of as how it 6 located perfect and a76 and the seat information. Next page. I have 36, and dota x interest include the the definition of a service 6 and the dot x And is and associated it's build for specific links in the network. Next page. let's take a look at the law of Now a service locator, perfect normal situation The assembly 6 locator prefix KIE I already send northbound. However, if I know that detector it's defaultedip graphic include 1 or more locate the prefix that can be reached as low and that node but not through are on those at the same level. it looked quite explicitly advertise those s r a 6 locators in sourced TIE Next page, please. At least"
  },
  {
    "startTime": "00:30:00",
    "text": "page we defined as always 6th load. Cater prefect TIE isn't new type of TIE it is deals to advertise located address and and see this information. That's that's Specific. definitely defy can be found in a finger pill. And next week, and the dot x zed is advertised Right. The neighbors t i element in the node t i Next week, This following two slides Oh, wait. offer the tool read for the overview of example. First example is associate will ATP, When the CDP mode is enabled, rifter for a service 6 for the The following workflow. Firstly, a control display to locate configuration of spy item to pfone. which include located perfect and and safe. Secondly, here I have generated that As I always seek, locate KWTI, and propagate to span lemon, Witsi. Witsi. Witsi. will get her the SRVIC locator configurable. certainly the spider level and the leaf level is tapestry. neighbors, and that just need and enable information to TF1. should the north spout the node kk And finally, the enable information is passed to controller. And then force controller aside the n.x said for list neighbors,"
  },
  {
    "startTime": "00:32:00",
    "text": "and pass it to the slide 11 through the update as I will see, locate the Next page. Please, please Another example is about without a HP. look when the 3 p mode is not enabled, reserved for a sub basic worked as followed firstly, the spy, you know, when menu configure as a video 36 related settings. including a salvage 6 located traffic and and that's it. This piece of information propagated to, like, TOF, 1 North SRE 6 Okay? The perfect TIE Secondly, in the north, in the sauce RBC locator early locator perfect information is atbotahighs. So the orderless 511 and live 11 established neighbors, they unlocked corresponding and dotxit based on assembly 6 configuration. the end of dotax information is learned, advertised by in selling inserted into the neighbor information. in the know the TI your next page please please Yeah. That's all any question, comments are welcome. Thank you. Tony, go ahead. Jean, if you want to go first because I have something very extensive on the whole So this is Jim with no hats on there's a lot of detail there, and I haven't read so and the devil's in the details, but"
  },
  {
    "startTime": "00:34:00",
    "text": "the very obvious jumped out to me was in the default rift case, I'm a leaf, or I'm down down near the bottom, then I, you know, I essentially have a default. So how do you take care of I mean, does the draft take care of the case where is this not gonna cause me to basically have explosion of more specific routing information going down down the to tree if you wanna put it that way. where I end up with essentially, the good property of RIFF were just sends the default down Now I need a whole bunch of other stuff. Otherwise, I'm gonna follow the default, which may not be the path that I want. Okay. Good. Yeah. Yeah. I have I have a massive amount of Oh, yeah. So Jordan keep up with the stuff. I assume there's a recording because it will be dense. Okay? So in general, so I read the draft. Yeah. I mean, good attempt to go about the stuff in the first you know, 9 iteration. As first, I think the work has very high value. because you doing the right thing for probably the wrong reasons. would you steal your -- Right? Because who knows the SRV 6? No. Yeah. Maybe useful. Maybe. is fine. you're pointing at an interesting problem. we have the same problem, for example, if we want to ZTP, the whole v 4 address sign assign assign because it's impossible to derive automatic be. Right? There's simply not enough before address space. what you end up with is basically a DHCP server at the top. And natural reaction is to use the key values the"
  },
  {
    "startTime": "00:36:00",
    "text": "store to push the stuff down. Right? So I'll talk about that. So Let's talk about more generic, and then I point you at and codings, and we're more specifically, you will encounter problems of how we address. So, yes, you try to abuse the southbound seems to me as a broadcast mechanism on the fabric. which you can, but the state explosion and the broadcast will limit you very strongly in terms of scalability of the whole thing. And I'll talk about how to avoid it and why be generically a very good solution. So this drop should evolve something much more generic, and this will be just a specific case. simple observation, going sideways a little bit. you don't need special positive or negative disegregation. Those are just V Six prefixes. We have to take care take care of that. you may add to a prefix that it's actually a set, but that's attack. Right? We have these attributes. It's like a loop, like, it's whatever. You can just add it to SIP. But, otherwise, the whole v v Six machinery that we already have, which is magically work. It will do positive disegregation these applications. There's absolutely no need for that. Now if we go and start to talk about why this will not work, and how to bend it to actually not only solve Okay. good scalability, ZTP that you see here, but use the same mechanism later to do things like v 4dac or whatever comes where you really want the leads to be configured from a controller and from the top of the fabric. without state explosion and broadcasting."
  },
  {
    "startTime": "00:38:03",
    "text": "So let's go and look at the locator key value tie. that is on 8 Okay. Can you flip to PowerPoint 8, please? because that will help everyone to follow that. Perfect. So now 14 if you try to stick all the systems into the single key value. you will blow out Your your this key value will become Right? 60 kilobytes. and you try to flood it through the whole And I can guarantee you It will work with Juniper Silicon. but that's about it. If you start to fragment that much, basically, anything touch in terms of cheap silicon, which is belly up. So oh, sorry. I I should be less informal it will it will die. Right? So you have to break those things in a roughly end to use size piece. The wrist on the very very consciously does not prevent fragmentation right, for a lot of reasons. So you can fragment a little bit. But to try something like this, you will die. So you have to break it up in, you know, reasonable pieces. So now Let's think how you break it up in reasonable pieces. The simple reasonable piece would be You just use system ID. But if you look tie breaking rules of the key value store, you have the well known and then you have 3 bytes. and you cannot hash down the system ID into 3 bytes. You'll have collisions. So, basically, the tie breaking sound bound will start to throw information Right? And that's where I think this and we can push the key value store further. will become extremely interesting, namely We can come off the well known and define the new key value where we actually change the tie breaking rules, and we put the system ID into"
  },
  {
    "startTime": "00:40:01",
    "text": "the key value primary key, key, Though we could do well known these 3 bytes or even omit the 3 bytes and put the system ID. And it's picked comes like a targeted southbound key value. Because don't forget, when the stuff goes southbound, everybody knows who is southbound. of the note. So you know whether you need to keep forwarding it towards this guy or whether you can drop it. And that way, you avoid broadcasting on the fabric. and you can actually target Now these preconditions that you do not assume that every leaf on the fabric has to know about all the other leaves because then you've literally end up in broadcast flooding. And then let's If you have such a problem, they would strongly advise that you initiate from the top or from the controller over the top tunnel, and you pump this enormous amount of information to every every leaf specifically. Because abusing routing protocol for that, will end up in tears. There is no upside except melting the thing out. Alright. So I hope that parse at least for, like, the senior folks around here. And from the notes, you should be able to reconstruct it. All the rest is fine. So From my side, I would encourage this work strongly, to evolve into something more generic. where we either define a specific key value, southbound, Okay? Because no pun doesn't make any sense. And where we tie break on the system ID. So you can literally target. people with their specific configuration. And whether we just pickup instead of a well known and other code point, and then"
  },
  {
    "startTime": "00:42:01",
    "text": "say this thing is being tie broken differently. or whether we define a completely new tie, don't care. All same to me. to the mechanics and encodings, and then use this generic mechanism to support this work, which, I mean, if you want to run this as RB6 that way, Fine. Fine. Right? unless I'm mistaken and you really want all the information everywhere, then I take over top, Right? Just push the locate common locator, but don't try to give everyone the index of everyone because that simply mailed out the whole thing. We I'm Alright. And you don't need a desegregation that is automatically taken care of and maybe adds that it's a sit on the ipv6 prefix if that helps things probably a good idea Did I miss anything? I'm thinking. I'm thinking. I'm No. I I I think that's it. So go in this direction, but in a more generic way. And it's all just one application of of such a store. And then the next good draft will be something like define automatically for address assignment from the tops. but that will lead to interesting discussion because If you do it from the tops, then you have to synchronize the tops. Right? because, basically, what what you're building is is the primary and the backup DHCP server. which we can do. or we can actually literally use the HCP and say stick to DHCP to key value stores, you don't need proxy. PHCP. But as we have another complicated discussion, right, it is all doable. If the controller does, if controller is spot. So here, the problem is simple. you can imagine technologies like Auto Fabric where you choose to DXcp serve person, they assign this thing, but then they have to synchronize this primary speaker. Okay? Hope most of the task is recorded."
  },
  {
    "startTime": "00:44:01",
    "text": "I'm sure Jordan had stunningly precise, you know, notes of this thing. And I no. I I'm here to to bounce that above in in in case any of the stuff didn't pass here. Thanks. Any response? to that flow. Oh. -- Go ahead. Yep. Just This is Wujansheng. I'm also calls. So that's to Jim, and call me, I I think you'd day. in in It's very good. input for us. This is the first revision of the draft think we just want to purchase the basic idea and the requirements to disrupt So for the roof the rolls. but we know that. But here, we add something such as the something for the NTP, because of we believe if you want to use rift in the real real at look. you have to support the basic requirements from the crowd operators. LTP is the basic watt. So of maybe maybe the roof to rule is important, but the requirement for the application scenario is also So we hope to see if we can have some solution, to e house, the rift, for the future, And this is the first point And the second one, I think it There are some"
  },
  {
    "startTime": "00:46:00",
    "text": "detailed the suggestion, from Tony as thinking it's valuable. Tony just mentioned about something like a DHSAP. I think the the similar work have been done. Now we spring working group We have a dropped that extend the the DHCP to locate the locator by s76. So I think it may be something of that drop that can be We used it. to to in house the solution here. Maybe. And the Yes. Of course, we we need a more work on this draft. to make it a Mm-mm. make it a feasible in the real network. to stem It Yeah. Okay. Yeah. I think that, like, very high level we're in sync. again, observe that architecturally you cannot flag information of every leaf to every leaf because no matter what protocol you take won't scare. Right? As long as this is not a requirement, we should push it to these more generic mechanisms, and then we start to put this in and and whatever it is where the leaves needs to be or even every node on the fabric needs to be zTP somehow from the top or from a controller. And I think it's an extremely valuable dish. Right? Right? Okay. So please keep it short and you had a tenant name."
  },
  {
    "startTime": "00:48:00",
    "text": "you had a comment? Or -- Yeah. I should be QM Yeah. Go ahead then. Yeah. So two comments. One is about congestion control example, I think that is it especially in the data center, condition events are usually transient and they're quite fast. And if you if you try to introduce control our Zoom, basic reaction time, just it's so long to do something useful. And if there is a persistent congestion, it's actually a problem of traffic engineers. example is valid, but I think it's false squarely into the problem of traffic engineered. And for that, it's a very good example. We should adjust precise at what we can do so people don't get false hopes. Yeah. That kind of too. reach in line with the beam set, you know, the vast part of the user party, BGP next it has never been deployed, never worked. So Yeah. And comment there's a comment about things where which we can to distribute want to distribute from Tops and where jobs should be synchronized. I think we should also sync a little bit about we are kinda approaching a territory where fullborn, distributed consensus protocol, would be proper solutions. So, probably, we should provide guidelines what should be done with Reeve, and where we should be looking at proper distribute concerns. Yeah. we probably should move that discussion offline unless we want to into the time of the next discussion. Yeah. Right. So so I gave it those. Look at the auto fabric. Look at these things. We can actually talk about how we synchronize it even without horizontal links. I already gave it phone. So there could be possible draft to spin out. for a primary and secondary. Right? I mean, this the election mechanism we already have. It's simple."
  },
  {
    "startTime": "00:50:01",
    "text": "And then the synchronization basically needs a tunnel between the two nodes, and that's about Okay? So if there's a feeling that that kind of especially if the proponents have digested what you said. Eventually, we could have an interim and not wait till rock, to discuss in more details. there's an interest, there's an interest, Right? So let us know. Okay. So the next topic is discussion on the dragon flight, topologies, and the rifts. put up the slides, but it's not for presentation. Just in case people need to refer to some pictures, So I put up the slides on yeah. plus plus. Okay. Plus first. plus. Yeah. Yeah. Right. Yeah. One of those probably. So this will be good enough. Right? So I guess people familiar with this topic will be able to to basically discuss this and then discuss relevance with Vipps, I guess. Dmitry, Tony, And Jeff and whoever else online just Speak up. No. No. No. Are you the one start? so sure. So so so I looked at the presos. Right? And"
  },
  {
    "startTime": "00:52:00",
    "text": "I want to stay polite about these BGP solutions and so on. is no. It's a zendless amount of complexity. Right? there are kind of 2 orthogonal topics. 1 is Canorith support the the Dragonfly to power. if it's regular, are we looking, you know, at the left picture or even of the right picture? If you look, it's really nothing but the master claim flow. that needs just, you know, one link to synchronize the clients as this describing the draft. The rift will work out the box. But the i AIDC, will lead to, you know, sticking new things into which is fine. Right? Because we want all this metric. We want, you know, class serveys, and so on and so on. And that also fine, and it's actually southbound and interesting discussion because we run into the the fishnettopology, familiar with this stuff. Right? It's a quality of service with the fishnet. It's basically very difficult to do something with it. the northbound, the question is, how much apology do we want to expose, right, to do no perfect computation. And no matter what, this thing will react in Best implementation tens of millisecond So you can only do very course No. Load balancing. but you already already get for free auto path saturation. So no VP and none of that business necessary. And from there on, it will be a congestion you know, notification discussion, but it is in my second of, you know, discussion which which is out of scope of routing. practically speaking no matter what you dream up. So Happy to support this Dragonfly. you know, easy to describe how you would do it with Drift as long as it's a fool. Right? No. it will also do partial, but then you start to get this aggregation. and the discussion of which metrics we should speak in and what computation we should support that's"
  },
  {
    "startTime": "00:54:03",
    "text": "kind of almost rift version 2. meetings. I mean, it will be backwards compatible if you want. I think it leads to reversion to it, you know, support for all these additional metrics in class of service and so on. potentially will be part of rechartering discussion. Right. Because then we start to talk about, you know, like, of course, load. Right? We also start not only the class of service, but also viewed load, right, to get some course, you know, non equal distribution because we will be not just reacting to a variable bandwidth like RIFTA today, but you probably start to stick more stuff. Don't ask me, you know, We we always have to think about this couple of 10 milliseconds. Right? And and this would be the fastest protocol you can build anyway to, like, you know, anybody assuming you can take into microsecond or millisecond they're just smoking something, which is not in realm of realities. Right? In in my experience of good many years. what why I see? So Okay. So this a discussion of what was already presented. First, I I agree that are you actually should be very easy to make work in this apology because it even has horizontal links between spines. It's even better than my amount of cloth or if it's in translation, actually, especially dense dragonfly. Yeah. Yeah. And even in Spanish, they can fly with some tricks. It probably easy to make it work. I I mean, I I don't see series probably. It's fine to make it k. Oh, so it's like car key. Okay. We can, you know, discussion. the Yeah. So, anyways, that's our possible solutions, and I don't see problem here. where"
  },
  {
    "startTime": "00:56:03",
    "text": "one of the problem slides is that good thing about Drift is that it allows to submit information towards leaves. But in dragonfly, especially in Spanish Dragonfly, we can freely do that. because not all the spines are valid to for all the destinations. Yeah. But then Drift will do that automatically for you. You will either get positive or negative. mean, the stuff is built in, right, for mass I mean, if they ask you to have really good summarization Ed because of the apology here, you just kinda do that and brief don't do many -- No. No. No. It will do what it can. No. Look look at So the dense is simpler, but look at the sparse. Yes. If you if you introduce a horizontal link between each of those 2 purple thing, you will find it is homomorphic to figure t But it's topology. Literally, it's homomorphic. But yes. But capacity. Well, the horizontal links are only used for flooding. No? forget, right through and goes forward unless you are famous. I'm talking about topology for forwarding because you shouldn't use all the Spines for all the destinations in spars dragonfly. Well, just I mean, as long as you have reachability, I mean, refresh to saturate all the stuff and and you calculate bandwidth. So you have less and we will put less traffic We already have that. And and here here's another thing is that Once again, in dense Dragonfly, Samsung Approximated to the end load person is probably enough. not optimal but close enough. So we can kind of load balance or maybe do a way that load balance and In sparse Dragonflies, we have a minimal minimal plus 1, minimal plus 3 pass. They're really not equivalent And, ideally, we want to few shortest first, shortest plus 1 next, and longest bounce back. Does that worn out? And to launch the reasoning behind it. Okay?"
  },
  {
    "startTime": "00:58:01",
    "text": "Different in latency. Difference in latency and all a year using more network capacity. The same traffic goes through more links and there could be local presence. Okay. We don't want to do that. Yeah. Okay. But then you talk about blocking possibilities and for that, we need need to under load. The delay on it with you, but that you can fix with computation. Just just to summarize, now static allocation scheme can do optimal traffic placement here. So we need some kind of productivity. Well, look. I but that's my observation. We can only approximate on, like, tens or 100 miliseconds scale. And from there on, you need congestion control. And I thought you put on that point. Yes. You cannot -- Yeah. -- you could do it fast enough here. And Rif is probably the fastest thing in my own route and protocols. Got it. Yeah. Okay. So -- Yeah. Yeah. Could you hear me? SORFO interrupt. Just one more mark. Is that -- Let let let let Oh, okay. Yeah. Yeah. So Sorry for jumping in. I'm online. and then and then so, currently, we also have drop to and the I think it provide a 7 month GAAP analysis, and as problem statement the thing you just talked So if we Currently, the the the drug and fly topology I think the most of the are using in the HPC. application is narrow, if you want to use that for such as AI Computing, I don't think it. it's a powerful enough. because the because the you know, the HPC application is narrow. it's totally different from the AI"
  },
  {
    "startTime": "01:00:01",
    "text": "application narrow, HPC just focus on the single task. But to the AI appearance narrow for the network, you have 2 meter the multiple activities, in parallel. So the contesting and load balanced. and the the latency, between different links. the requirements are totally different. So I think currently, we are talking about the dragonfly. we should clarify which app is narrow we want to use drug and fly. mean, So so from from my perspective, HPC. application narrow. It's already mature. Right? the most of HPC data center. we are using the Dragonfly. So For that application scenario, maybe, we can can see the if we can enhance the protocol call, such as if we can use the rift idea to enhance the solution. Hello? if we want to use that for AI Computing I don't think it. it's feasible. this moment. -- I -- So Yeah. That that -- I'll take it through. grief share. I don't think you are right to begin with. mean, just because you published draft that focus on HPC I doesn't really mean anything. Right? So you you won't solve cheap problems. Please do so. I don't think"
  },
  {
    "startTime": "01:02:04",
    "text": "HPC, a segment in industries interesting enough actually to yourself. So I think we we would all agree that what we are looking here is more towards ML clusters than HPC Right? Hamz, we are talking about networks with debt flows, lower entropy, and this is where it can really help. Another interesting point, specific to dragonfly, So, you know, AI is very power hungry, Right? We are going 2x towards 60, 80 kilowatts per rack. And if you look at availability of electricity, not only in US kind around the world, getting above 60, 70 megawatt extremely complicated. and it seemed that this become kind of natural boundary of data center So thinks about 60 to 80 megawatt. So in order to connect this, you would need to build longer links. with potentially span of few 100 kilometers. And this is for dragonfly really naturally allows you to build Clusters within data centers, but then also longer one link between data centers. so it's extremely applicable And to AI, and Reef could be a great solution here. Well, I mean, since whatever the DCBOVE. Sorry. I I don't want verify So I did not deny the the vantage of love drug and fly. But at this moment, if you want directly to use dragonfly drop the flight class. for AI I don't think"
  },
  {
    "startTime": "01:04:00",
    "text": "it's enough as you know, it's a maybe save a power consumption. But the it cannot provide the that enough performance, right if you cannot meet the AI performance. the it it's a feed it's not feasible. that's problem. So maybe we need a some more work on that. improve that to meet the AI requirement. me interrupt for one second. Let the meeting time is officially over, but I I think we can continue this version online like this, we just can we can continue until we get kick kicked out. And everyone else, if you need to go somewhere, please feel free to to do so. And to to close this discussion, Tony, before you, Doing the breakout. We didn't get to see presentation from Tencent. So because of technical difficulties. their slides are available. So if you're looking to last slides, specifically about the tccl tccl It's a addition to communication library that makes it apology over. we're not going to talk about kind of virtualization, distribution traffic, and machine learning clusters. However, you could see in their examples that making communication library Technology, I went in to see which ranks could lead to performance improvement 30, 40%, which is huge in terms of numbers. So that's another place where it can potentially play because of you know, ability to disable technology in a very easy way. Yeah. So I kind of close with"
  },
  {
    "startTime": "01:06:03",
    "text": "Have you heard that? Right? My opinion kind of stands since DC 1 or whatever, 100 since the IPF, the the both. We have one woman, and eight women won't help. to bring out the child faster, physics apply. Right? So and economic supply. So if you build locally, a large substrate you will end up on claw. economics will push you there. Right? If we start to talking, connecting over large distances, yeah, this stuff makes sense. Right? And adapting rift to the that stuff is not hard for more than I'm seeing. The hard stuff is how much you information will we slosh around? How will we summarize to actually get the computation good enough so it know, it adds value, low balancing, you but also fast enough that he's reactive to the time scales, you know, to the flows that they're talking about. And from there on, for me, it's all about condition control. I have absolutely interesting because people build different things, and they're in microseconds. I'm a slow guy. Totally agree that for the routing protocol, yeah, about what we what in where we distribute how we install for the same state, what we summarize, And, yeah, it's a little bit more interesting in DragonFly. As for claw and dragonfly, dragonfly actually allows to build large network from the same amount of links, but with same caveats because it depends on traffic patterns for random permutations, the same capacity as claw. But for adversarial purpose, it like, 1 half of the call. So that depends on traffic patterns. As for AI versus SPC, it's It's a big discussion, and it's my opinion. It's a little bit strange discussion because HPC is a very specific area, but all the machine learning training. It actually uses a subset of mathematics"
  },
  {
    "startTime": "01:08:04",
    "text": "which is used in HPC. but it has really huge vectors that speth flows, large transfers when a where sometimes uses very small transfers, and and lot of different things fall from that. But that's probably a subject for, I don't know, GDD. Next, they did something like that. Yeah. So Uh-huh. we are not going to do any rechartering before main spec after IFG, we all agreed on this. So so those words that had been previously discussed on generalization of distribution of data, so a service fix as an example. And Again, thanks to the fact that machine learning clusters are regular pathologist. the direction of error. So again. I think kind of not as a working group share as person involved in industry that is extremely years of a product called to to be some strength topologies. we'll continue next IT of the discussion So And Again, everyone welcome to contribute and see where we get better. Okay. Thank you, everyone. Speaking, sir Jairns. See in Prague."
  }
]
