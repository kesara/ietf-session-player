[
  {
    "startTime": "00:01:11",
    "text": "[Music] I think so yeah we have a jabber scribe I\u0027m a minute take your bio city that I thank you Melinda but neither jabber scribe okay thank you good so I owe you a drink all right is that okay all right well I think it\u0027s because um boots - so I\u0027m influencing it to be okay okay well I wanted to first "
  },
  {
    "startTime": "00:04:14",
    "text": "all say ahoy to everybody because I was very taken by the hello and check that we learned about last night and you are under the note well as a attendee of the research group so do not do not feel that you couldn\u0027t gather way I was reading all that boilerplate and also we followed the ITF anti-harassment policies which I put up on the board last night in the plenary if you were there okay and the agenda today is I have a little bit of an update on the IRT F and there\u0027s a longer one with more silly pictures that you can find in the minutes from Saturday Sunday Sunday whoops Sunday and then our two applied networking research prize talks and I should warn you that we have plaque presentations and photographs to you I you know shaking hands kind of things so tolerate us during that and then if we have a little bit more time at the end I want to get people to just say I\u0027m on a listening expedition what do you need in terms of publications if you\u0027re working in the IRT F so be thinking about that and come up to the mic and talk about that okay so the for those who don\u0027t know I think you do we have a a parallel between the IR Tia and the ietf PIR camp was founded to kind of take on the longer-term work and to not have some of the process strictures and and timeframe that IETF has so it actually goes back to the beginnings of the IETF it\u0027s not a new development by any means and we\u0027re organized into a bunch of research groups this is there\u0027s not a research group this is the area of meaning and then also there\u0027s a steering group with the research chairs research group chairs and some at-large members so because if you are at the plenary you\u0027ve heard me say this last night too for it\u0027s very unusual that everybody meets at the ITF but this time everybody did so I think everyone must like Prague because they don\u0027t have to meet an idea they can meet in different ways so that this is the list of the groups we have and we also had a proposed research group the path aware networking research group pan our G which is our our our G\u0027s are formed in a different way from working groups they they convince the chairs with some consultation and then we give them a year to take off or not take off so they\u0027re not exactly chartered but they\u0027re in the proposed state now and then we also had some initial organizing for a meeting a group "
  },
  {
    "startTime": "00:07:16",
    "text": "that\u0027s currently called din that would be about blockchain and crypto Ledger\u0027s and things like that needs to organize its thoughts okay and Saturday we had the annual applied networking research workshop there\u0027s where the proceedings are and you could also see the recording if you weren\u0027t there so one thing that\u0027s confusing is we have the AARP and the and our W and so the al RW is this kind of a standard research workshop emphasizing applied networking so the intersection of in of ITF tight style things that we do and research and so that\u0027s going to happen again next summer take a look at it let us know if you\u0027re interested in submitting to it and then we have the NRP which I\u0027ll tell you about in a few moments so this is the IRS G membership and it also shows you who are the chairs of the research groups so you can just run your eyes over that and then we my cats don\u0027t look very good in green and purple but but I find it coming to see them and so we have a discuss mailing list and an announce mailing list that you can join and I RTF dot org has links to extensive information on the research crews but you can also find the research groups through the data tracker okay so we\u0027re going to talk about we\u0027re going to move on to the applied networking research prize talk starting with Philip but I also wanted to mention that this prize is a submission of papers that were already published so it\u0027s kind of like a best paper but Pam internet best paper award so we ask for people to submit what they think of as the best papers they\u0027ve they\u0027ve seen anywhere and to nominate a speaker who would benefit from experiencing the ITF and the IRT F so the winners of this receive a trip to the IETF and some hospitality from I saw involving attending the the the ITF fellows dinner I believe and you should even though we\u0027re meeting this this late you should think about ways that you might encourage these speakers to to participate in IETF when you hear what they\u0027ve talked about so with that I\u0027m going to introduce Philip who is just about to defend dissertation is that right yeah and then move to a position with Dave Clark at MIT and has a great study of a multi perspective analysis of carrier grade nat deployment so over to you and here is your download over "
  },
  {
    "startTime": "00:10:23",
    "text": "[Music] Thanks all right can you guys hear me all right also with the okay sounds good okay yeah my name is Philip Lister I\u0027m going to talk about or work multi-perspective analysis of carrier grade nat deployment I think we agreed on be presenting us here yeah okay I think the cameras are all pointing okay yes I\u0027m going to present our work on carrier grade nat deployment in the internet this is a paper that appeared in our last year\u0027s IMC conference and if you\u0027re interested in the PDF you can also get it using this tiny URL link here I also want to acknowledge my co-authors here so this is joint work with Florian now CEO mark Randy Anja Christian Nick and burn okay I think there is no need for a long introduction of what the problem here is i guess everybody in the room is aware of the problem of ipv4 address space exhaustion it in fact it receives a lot of attention more recently also in the media and it is also a long-standing problem so I just found this quote here a couple of days ago from IAB from an IAB meeting in 1992 and already back then the problem of too few ipv4 addresses was clearly named as a clear and present danger to the future successful growth of the worldwide Internet now that was in 1992 if you know fast forward to 2017 now we have a situation in for in which 4 out of 5 of the regional internet registries that manage global IP address allocations exhaust Sedaris pools currently we have only about 1% of the globally routable ipv4 address space that is still under located and usable and of course the question is what do networks now do to mitigate their ipv4 shortage issues and the first thing that comes to mind of course is the transition to ipv6 which will present a long-term solution to the scarcity problem and internet also receives a lot of attention from the measurement community so when it comes to ipv6 we have plenty of measurements and statistics available I will just show you two very common ones you might have seen them a couple of times already in the last days the first one is from Google and it basically tells us that as of today about 20% of the hosts contact in Google and us are using ipv6 the second one is from a pinna class that measures ipv6 adoption on a per country level and here we can see that we are doing quite well in some countries but "
  },
  {
    "startTime": "00:13:23",
    "text": "still also there\u0027s a lot of red color in this in this map now besides transitioning to ipv6 is peace can also use other means to mitigate address shortage issues and in particular they have two other ways of doing that now the first one is to buy ipv4 address on address markets and the IRS like the registries recently introduced policies that allow these transverse and also publish statistics regarding these transfers also here we have data available that we can that we can look at to track how these markets are evolving what I show you here is just some data pulled from the our IRS that shows some statistics of the number of address blocks that are currently or where are bought and sold and on address markets in the recent years and you can see that this is indeed the markets are indeed taking off but then there\u0027s a third thing that network operators of some networks can do and that is that they can use ipv4 carry a great net to to multiplex more users behind a fewer public ipv4 addresses and when we started looking at carry a great net we soon realized that there are no deployment statistics available so it\u0027s really hard to keep track of like how popular this way of combating before exhaustion really is you know so very little is known about how carrier-grade nets are configured in the wild and this is the focus of this work and also of this talk all right now first we wanted to get a bit of an understanding of the problems like that ISPs face when deploying carrier-grade NAT so we have formed a little survey so we asked we asked ISPs about their ipv4 scarcity issues and whether they want to deploy ipv4 carry a great lap so we circulated this and eventually we received some 75 answers just want to quickly show you some of those the highlights of that so probably the most important question that we asked is like did you or do you plan to deploy before carry a great nap and we were quite surprised I mean of course 75 hires piece is a small sample but we were quite surprised at 38% of the ISPs told us yes we already do that and another 12% told us that they are in early trials and they will deploy before carrier grade nat in the near future so we went on and asked him also a little bit more about carrier grade nat specifics so we asked them what if they have any operational concerns when when introducing he for carrier grade nat and they were plenty so one of the most commonly mentioned one was that subscribers might experience problems with applications that just don\u0027t work well behind carrier grade nat so a gaming was mentioned several times another issue that came up frequently is the traceability of users behind carrier grade nat and also issues with publicly facing gateway IP addresses becoming our blacklisted now we also asked some of what they see as the major challenges or caveats when introducing carrier grade nat troubleshooting connectivity issues "
  },
  {
    "startTime": "00:16:24",
    "text": "was was frequently mentioned but also more generally how to how to dimension carrier grade nodes meaning how to do the resource allocation like how many IP addresses how do we allocate IP addresses and ports to subscribers and how do I set the right quotas for individual subscribers one thing that summarized piece mentioned I and I want to mention that here because we will also see some effect of that in our measurements is that their problem would be for carrier grade nat is a shortage of internal address space and it means basically they have used the available RFC 1918 ranges already in their management network and not have problems finding address ranges that they can use behind a carry great nut okay we also get them a free text field where they can tell us more about what they think about carrier grade nat and what we can really see is that most of them were not really fond of deploying before carrier grade net as you can see also from the first comment but a surprisingly large number of networks also told us that v6 deployment seems to be costly and difficult for them so some of them just opted to first go with carry a great nap so basically that really motivated us to study this more because it seems to be widely deployed and the networks also voice concerns like regarding carrier grade nat deployment at the same time we don\u0027t have broad and systematic studies available so what we did as we developed our methods to detect carrier grade nat presence in the internet and also methods that allow us to extract some of the properties of commonly deployed cg net instances before i talk about our methods just want to quickly introduce some terminology so here in this figure you see a common case of our subscriber is connected to to the internet so we have the isp in the center the ISPs some public ipv4 address space yes with other networks in the internet towards the right enhancer or the public IP ad for address to its subscribers in turn the subscriber will run a home that and reconnect these are her devices behind that mat so that would be the canonical page here we don\u0027t have a CG NAT D formant now if the size P no decides to deploy carrier-grade NAT we will have an additional map box that sits within the isp and then the isp will hand out internal address space to its subscribers and that gives us two more cases like the first one is the case of net for for carrier side nut which basically means that here we only have one nad box but the network\u0027s it\u0027s within the isp and not at the end user and then we have the third case where the isp deploys an app box hence our internal IP addresses to the subscribers in china subscriber runs another CPE net so here we have the situation of net 404 okay i mean this is what harry great net deployment looks like on the white or of course like in practice there are more complicated scenarios are possible so our goal was to find ways to detect the presence of these devices "
  },
  {
    "startTime": "00:19:24",
    "text": "this turned out to be really difficult because gnats operate transparently right meaning that if you monitor traffic if you monitor packets there\u0027s no easy way to tell whether it is packet was translated at some point on the path before we can see it so we had a hard time with that but eventually we found two methods that allow us to detect um carrier gretna presence and i will now introduce them to you the first one the first method that we found to be working is what you call detecting cg net from the outside using BitTorrent we call this one from the outside because with this method we don\u0027t need any probing devices within the networks if you want to test but we can this detection works by crawling the BitTorrent DHT let me quickly walk you through i guess everybody here knows the BitTorrent protocol and in the in in the classic way baton would work the way that you want to download a specific talent you will connect to a tracker tell the tracker i want to download torrent XYZ and turn the tracker will give you a list of IP addresses in port numbers of other peers you connect to them you download your content but you can also do that without using a centralized tracker you can do that using your baton distributed hash table and if you do that using the BitTorrent DHT then each the torrent peer that participates in this DHT will maintain a list of our p addresses and port numbers of other BitTorrent peers that had recently interacted with and actually it turns out that we can use these deterrent peers in a baton DHT as vantage points in our study so in order to do that we implemented DHT crawler which is basically a machine that continuously asks the current peers across the Internet the term peers participating in this DHT and we asked him hey please give us a list of IP addresses and port numbers how it appears that you recently interacted with an intern they will tell us ok can reach Pierre each beer has a unique ID I can reach P X Y Z using IP address and port number now we have to scroll up we implemented as : we had to scroll a runny by the way initially not for the purpose of detecting nap but it turned out that we can we can do it partially with that so we had a scroller running and after a while we realized that in some instances we have the time you have the term peers like this peer here that apparently sit behind some form of an app and tell us that they can they have connectivity to another peer using an internal IP address so for example sure in this case we ask a specific peer to peer tells us I can reach peer 8 h2d using an internal address so they leak as internal IP addresses by habit or DHT now when we realize that this is happening we tailor the crawler to extract in harvest as many of these internal end points from the baton DHT and we can do that quite efficiently so within one week of crawling we can learn private IP addresses from more than 700 thousand "
  },
  {
    "startTime": "00:22:25",
    "text": "peers in five thousand guesses now the question is do all these five thousand a SS necessarily deploy carry a great Matt and the answer is of course not right because at this point we just know that there is some form of mapped but it took me a carry a great net or it could just be a home mat with multiple the torrent clients behind it okay so to better understand this and also to be able to resect these small whole nights from carrier-grade nuts you have to have a closer look at the leakage relationships and what we basically do um in order to what we basically do is that we form a graph and whenever we have a peer the term PA that leaves us the contact information for a peer be like this one and PB has a private IP address we will form two vertices in the graph where the leaking PL PA is a big blue Burgess and the internal peer to peer with the internal IP address is a small red verges then we draw this arrow to show hey PA litres PB and then we have a look at these leaking relationships at a larger scale so namely we form a graph for each is in which we crawl return PS now let me what these graphs look like so this is a tiny subset of our data of course we recall many more of these peers and it shows us to a SS and in the first a s we did not detect carry a great nap meaning that here we do see leakage we see patrol MPs leaking us internal IP addresses but typically the only League is one or two and also on that is more importantly all of these leakage relationships are isolated so in this case we cannot say that it are an indication of a carrier grade math but it could just be hole nuts but then we have other a SS like the ones on the right-hand side where we see much more leakage and the important thing is here is that we also see overlaps in this peer leakage meaning that we have different the term PS using different public IP addresses leaking as the same internal peers which is indicative of a net that has ranges of public IP addresses which we use as trigger or carrier grade nat detection all right of course I mean there is much more thresholding involved and we have to pre post process these graphs um we have more details on that in the paper but here I just wanted to give an impression of what this signal looks like for NAT inveterate alright so with this method we can test some roughly at 2,700 a SS in which we crawl a sufficient number of the torrent peers and we detected carry a great nap meaning these clusters on in one or two hundred fifty now the benefits are clear that we have a broad coverage and if we can just do that and we don\u0027t need to put any probing devices within within these networks the problem is that first we need a lot of the torrent activity in a SS so that we can even they can at least in theory show up in our measurements and secondly is even if we have significant baton activity in a specific a s that deploys carrier-grade net it will not "
  },
  {
    "startTime": "00:25:25",
    "text": "necessarily show up here because it kept the net must be configured in a very open way namely it must expose internal IP addresses of the torrent peers to each other so with this we will only partially capture the carrier grade nat landscape so we complemented that with a second approach which is what we termed detecting CG net from the insight using using metalizer we call this approach from the inside because here we have full control over probing devices that are located behind the carrier-grade NAT so I want to quickly introduce Naturalizer maybe some of you folks know that knit eliza is a network troubleshooting suite it is developed by XE in Berkeley you can download it as an Android app or as a Java applet or you can use it as a as a command line tool and when you download metalize done executed it will run a series of tests regarding the health of your connectivity and if we also show you a detailed report showing you lots of properties of your arm internet connection at the same time when you run metalizer you will support our research because we use that in measurement studies and in this particular study we use data captured in more than 550,000 sessions like an accession just means a person executed Naturalizer and they cover more than 1500 guesses and the benefits of this metalizer data is that it gives us direct access to the IP address of the client of the router and also the public IP address in advance and set alignment cellular networks and since we have full control over Naturalizer we also implemented more customized tests now we\u0027ll talk more about them in a second just a quick sketch on how we detect carrier-grade NAT presence with metalizer now here we have two different cases we have two cellular network case in the cellular case detection is straightforward because in a cellular network the IP address of the device will directly be assigned by the ISP so we can compare the device IP address against the IP address that we see at our measurement servants okay it was translation now in residential networks the situation is a little more complicated because here the device IP address will always be assigned from the home router so what we do here is that we use UPnP to query the external IP address from the home router and again we compare it with the server side IP that we see turns out that in practice this is much more cumbersome because in up to 7% of the sessions we see cases that people have to at least two home routers in cascade in their homes meaning that the external IP address from the first CPE router is not assigned from the ISP but from some other CPE device and we developed several filters and heuristics to get rid of these sessions and if you\u0027re interested in that and that we documented that in our paper okay that "
  },
  {
    "startTime": "00:28:27",
    "text": "was a quick overview of detection using naturalizer until we tested some 1500 s s and we detected another roughly 200 to carry a great net instances and also 205 cellular asses using Harry Redknapp now the benefits here are clear we have much more control over this measurement point it gives us direct access to the IP addressing data that we need to detect detect area great not the problem here is again partial visibility this is crowd-sourced data and we are at the mercy of users executing this for us okay now let me show you some key regret not deployment statistics now first when we\u0027ve been talking about like what percentage of networks do calls carry a great net of course we need you to define into what kind of networks we are interested in and so in this work you want to focus on eyeball networks meaning a SS that primarily connect end users to the Internet so the first thing that we did is that we define our a set of eyeball asked by a population of a SS that we consider eyeball a SS and we do that using two different data sources the first is to Spamhaus pv ellis this is a basically a list where you can register residential address ranges and the second one is a data set from a pina gloves which gives you an estimation of the number of subscribers in a particular areas so we use these two to refine our set of eyeball asses which is about 3000 a SS and we may have a look at how many of them like we cover with our measurements we see that we cover roughly 62% of them and in addition this is what an on-set all archives and in addition we test it in total 218 cellular asses okay now how many of them do deploy carry a great net let me rephrase and how many of them do we detect it for the non-cellular case we end up with a little more than 17% and maybe if you know recall our survey and the surveyed was 35% we measure 17% so the real number might be somewhere in between and what is probably interesting to note here is that if we partition Vass that we tested according to the 5 different regions we can see that character at night deployment is particularly pronounced in the a penis in the asia-pacific region and in the ripe region and it\u0027s important to point out here that these are also the two regions where addresses ran out first okay now for the subtler cases we see that hairy right net is just everywhere so more than 94% of the networks that we tested we apply it there are only some very few exceptions in Africa where you still have a chance of getting a public ipv4 address on a cellular network ok so much for the deployment now I want to talk a little bit about some of the properties of the Nets that we identified now the first thing I wanted to show you is um the internal address "
  },
  {
    "startTime": "00:31:27",
    "text": "ranges that networks use behind their carrier-grade NAT deployment now both our methods allow us to study that and we showed it here for again for the non cellular and for the cellular case and what we can see is that the RFC 1918 ranges particular least 10/8 is still the most common commonly used one empty relatively newly allocated 164 which is specifically allocated for the purpose of deploying carrier great not only slowly takes off but what is probably more intriguing to see here is that up to 20 percent of the SS already used multiple internal address ranges behind their carrier great not now if we recall also from our survey that it seems to be an increasing problem for SS to find usable internal address ranges to use behind the net now the schools as far as that in the case of some major cellular networks they seem to see the need to use routable IP IP addresses as internal IP addresses behind their carrier grade that and in this figure here I show you some of the most prominent cases I want to say here you don\u0027t want to do it any name shaming we see this behavior form or ESS and we just chose to show these six because they are like really big so we have a lot of data and can be confident in our reasoning here so what we show here on the x-axis is the corresponding relative address block let me here we show the network\u0027s did use them as internal space now what we want to highlight here is that like for example let\u0027s have a look at the 25/8 address block I recall correctly it is UK Ministry of Defense and currently if you go from the global routing table this address block is not in use and but what we see is that there are at least four major networks that use these addresses internal internally there might even be more as such this is just a subset of them and we would argue that the question is what happens if somebody wants to finally use this address block given its scarcity will increase we can imagine that at some point people want to buy and use this address block and we can likely expect it a lot of users behind these users of these of these networks will have severe connectivity issues here okay now that was that was one of our findings we implemented more customized tests in our metalizer test suite to extract more properties of the carrier great nuts and I want to quickly sketch on earth or methodology here so one thing that we do is that whenever you run metalize or net Eliza will initiate ten subsequent TCP connections from the device to our measurement server and what we can then do is that we compare local IP addresses and port numbers to remote IP addresses and port numbers but that we can study how carrier grade nads allocate ports and IP addresses and for some of them I will show you an example we can also estimate like how many products in an individual subscriber receives we also implemented a custom TTL TTL based nap test "
  },
  {
    "startTime": "00:34:27",
    "text": "basically what this test does is that it sends TTL limited probes to first create state in all nets on the path and then to retain it in some hops but to expired in other hops and with this test we can pinpoint the location of nets on the path including carrier-grade nuts and also extract time all values of the Nats and lastly we also implemented a stun test which allows us to compare the kind of map mappings that a carrier grade map would give you in contrast to your home router Oki there\u0027s probably not enough time to go into all of these all of these results I just picked some of them that I quickly want to show you one thing that we found quite surprising is that up to 20% off to carry a great map instances that we detected use what\u0027s called arbitrary pooling but it basically means these are these are Nats that have ranges of public ipv4 addresses and if they use arbitrary pooling it means that you as a user if you initiate two subsequent connections your public IP address might very well change that this is something of course is courage in the in several RFC\u0027s and we were surprised that we see it to that large extent because just think of what this lets you hosts reputation systems we also studied in detail of a location behavior just want to show you a quick sketch here so Nets have different strategies on holiday allocate oh it\u0027s true to its subscribers and we were interested in studying what it is some sort of a common uniform behavior you within a specific a s and it turns out that this is not the case so to 70 percent of the ASA\u0027s in we did in which we detected carrier grade lab never liked a mixed port allocation strategy meaning what happens to subscriber a will not be the same it what happens to a subscriber B we have more details on that of course written up but generally when studying resource allocation we see a huge diversity um here and we also see that actually the majority of them shows like non-uniform behavior and of course just think of what this can do to your applications to most reputation systems are also to attribution I\u0027m going to quickly show you one case one port allocation strategy which we really like because it is very like measurement friendly some kind of rate notes do allocate parts in a chunk based fashion meaning that every subscriber receives a specific chunk of course then it will ran choose port numbers from this shank and in our measurement system nicely closed up because for each metalizer session we can see okay the chunk size in this particular ISP is like five hundred twelve ports or it is like a thousand ports and this in turn allows us then to reason how many subscribers are behind a sing an IP address in the most intense case that we found here in our measurements is 512 ports per subscriber or 128 subscribers per IP we heard more crazy numbers like people told me that "
  },
  {
    "startTime": "00:37:27",
    "text": "they met like thousands of users behind the IP I don\u0027t know this is the this is the highest number that we can somehow empirically back up here okay um I want to quickly show you one other thing because I think it matters um we also implemented the stun test and as mentioned what the stun test does is that it measures somehow how restrictive or how open the mapping types are that in that uses in first I will not go into detail of all these different mapping types but let\u0027s first quickly look at the distribution of filtering in their mapping and filtering behavior for for home nets and the only thing I want to point out is that the most restrictive way of configuring in that is using symmetric net bindings and it basically means that if you are behind such a net you can\u0027t do any peer-to-peer anymore and even if you use like advanced hole punching that needs it won\u0027t really work so meaning if you are behind a symmetric net that\u0027s that\u0027s it basically and in the case of CPU devices we see that this is quite uncommon so only about two percent of them do that but if you look at our carrier-grade Nets we see that these very restrictive nap bindings are much more common in fact it\u0027s about 10% of the non-cellular deployments and even 40% of the cellular deployments show this behavior meaning that the mapping that a carrier-grade NAT imposes on its subscribers is often more is more restrictive than what your CPE home device would do okay and so that was a quick overview of some of some of the results what we can generally say we see that carrier-grade NAT is very broadly Paulette and it is like a everyday reality for a lot of users I think in fact it is even reality for the majority of Internet users I\u0027m considering that most of them are in cellular networks and what we see in this first study you see a stunning variety of different configurations we see that when we compare networks to each other but we also see that even within networks and what we also see is that the degree of resource sharing like meaning like how many ports for example does an individual subscriber received very fastly across different nets meaning that we can clearly see with these measurements that carry great Nets just limit the resources that are available to subscribers and also it means very different things for different ISPs not it raises some challenges so for example one regarding regarding measurement and I\u0027d be very curious also to hear your opinion on that so for example when we do measurements to - to measure end-user performance it should have performance I mean the common metrics would be speed are less and latency and packet loss anything with these measurement with these metrics are that they don\u0027t necessarily capture the the limitations "
  },
  {
    "startTime": "00:40:27",
    "text": "that are carry a great not imposes on you so for example - to capture them we would meet we would need metrics like for example what is the maximum number of concurrent connections that I can issue as a subscriber of a particular ISP or what kind of map mappings will that ISP impose on me that restrict my connectivity and yeah related to that we also wanted to like point out that perhaps give given how widespread carrier-grade nets are deployed and given their measurable effect on how much internet you receive as a subscriber but it is need for more guidelines or possibly like best practices on what is still considered an okay amount of internet or whether it is also something that could be interesting or subject to regulation all right what I conclude and I\u0027m happy to take your questions judge Nicola our one comment and one question when you\u0027re saying about 20% of ISS doing arbitrary marking that might be just different devices you have once again device in one location as a citizen device next to it you\u0027ve been different has different pools and you just randomly sheet2 an awesome yes yes and question did you compare your database detecting v6 only networks which do in not six four because it looks like you\u0027re connecting to before destinations yes so actually most of that is like currently before most of these measurements the thing is that baturin the public DHT of the torrent is not it\u0027s very sparsely populated in ipv6 so currently we can\u0027t really compare it there and for Naturalizer we do have a v6 data available but we didn\u0027t include it yet endless because very interesting you said you eighty ninety four percent of mobile is s doing CGA it would be interesting to share what they doing in terms of not six five yes just won\u0027t yeah what one quick thing cuz I expect it of course questions regarding ipv6 I just did something which is not a great analysis at this point but just did it yesterday so I took the a SS in which we detect carrier-grade NAT and I just checked where the day at least announced an ipv6 prefix and here we see it\u0027s it\u0027s about half of them hi Alan Jerome first to follow up on this and then another question there are two cases you can have service provider we do ipv6 and ipv4 Calgary not and some we can do simply ipv6 native internally in that six four yeah was that like two different cases that you may want to yes some are separate the second question is about the audible addresses that you found and for me that was the most "
  },
  {
    "startTime": "00:43:27",
    "text": "surprising finding in your study and in very very interesting because you\u0027re right once those blocks are going to be on the market and chopped off in smaller blogs when we may see some interesting behavior so do you publish a list of actual addresses that you have seen something that\u0027s a finer granularity than the slash eight because I look in your paper is you only go to the slash eight yes looking going publishing this data to maybe a slash 24 gladden now he was certainly helped a lot okay okay I mean we didn\u0027t do that yet but if there\u0027s interest in more fine granular data I think we can do it thank you hi Anjali from Boston University so you looked at the deploying different deployments by different ISPs how many of these are like complying to the standards how close are they like what are their strategies you mean like to RFC oh yeah whatever standards are yeah so I mean there are lots of our receives on on that behavior and some also on carry a great nuts the thing is they don\u0027t specify all these to my best knowledge they don\u0027t specify all the things that we measured here but they do specify for example that arbitrary are pooling of IP addresses is not an option so at least 20% were wire like that and in other measurements which I didn\u0027t present you but we also measure time on values and we find it pretty much I don\u0027t I don\u0027t have the exact number but there\u0027s a large number of the of the carrier grade nat boxes also by all item so there\u0027s a large fraction of them that are for sure on what RFC compliant so there are specifications and RFC\u0027s but these are these other people yeah yes there are specifications in the RFC is regarding net mappings and net timeouts but for example what is not specified in charin RFC uses how many ports for example you need or how many sessions are appropriate so it\u0027s both yes okay Eric not Mike thank you this very interesting study so I saw one thing you had two things you had this sort of port behaviors whether it was you know preserving or but I forget the term but and you also had the restrictive Mouse whether it\u0027s a metric or something else did you actually look at potential correlation between those two meaning that there\u0027s sort of if you group them together that things fall in different buckets no not that that\u0027s an interesting thing to do we didn\u0027t do that yet okay hi I\u0027m channeling waffling back when Stan was introduced it was discovered that some map devices changed their behavior when running out of ports or addresses so a full cone may become a symmetric did you observe this with carrier-grade nuts no I mean III saw "
  },
  {
    "startTime": "00:46:27",
    "text": "that too I have found that also really the press if that this can happen I currently I don\u0027t see a way of how to how to measure how to measure that because in the end like for one session we can execute these ten TCP connections and we can run the stun test once and it\u0027s not that the same user will be nice enough to run metalizer the whole day but that would certainly be something very interesting to study how else to make it I have a question but also if there\u0027s any more we have we could take a few more minutes for this so this is one of the nice things is having a chance to discuss my question was with this kind of behavior that you observed why do you think that why how can reputation systems work at all is there any way that you could study that kind of impact of of this on people\u0027s you know persistent use of addresses for reputation yeah I\u0027m that I honestly I I don\u0027t really know how a reputation systems should deal with that or how they currently deal with that I put I would be very interested in speaking with somebody who runs shots such systems and now there might be people who have some some hacks ok maybe Dave Matt Ford thanks this was a really interesting talk I\u0027m at a question in a comment the question was did you go back to any of your survey respondus once you had the measurement results to establish whether there were false-positives turning up in your data set yes I mean generally validation is very difficult because no isp writes that on their website or at least very very few do we had a all that limited set off like a couple of dozen of a SS for which we have like ground truth on whether they deploy it or not we did not find false positives so far and we have several false negatives I mean we try to readjust our thresholds to be as conservative as possible and so far we didn\u0027t find a false positive but that might happen at some point sooner or later Thanks the comment was just I think you made a comment on one of your last slides about regulation and I thought I just observed that I was just looking I know there\u0027s some regulation in Belgium related to this now I was looking for that and the first thing I found was a press release from Europe all with lots of text in it about how alarm how alarmed they are at the growing use of cgn and the impact it\u0027s going to have on their on their law enforcement capabilities and they cite your paper in that press release so I thought that was that was awesome and I\u0027ve also heard of subscribers of ISPs using CG and having problems getting two major pokemons go is there\u0027s another thing that came up high up in my search results and Xbox there\u0027s there\u0027s all kinds of breakage this is causing for a subscriber so it "
  },
  {
    "startTime": "00:49:27",
    "text": "curves to me that given the impending regulation or it seems likely regulation and the effect this is having on subscribers continuing to measure this over time you might start to see this stuff goes away as well thanks Philip I you and I have talked about some of this stuff before so I\u0027ll echo one of the questions that I have for you but I don\u0027t expect you to be able answer it but I\u0027m fascinated by Phelps working in that there are clearly a whole bunch of kinds of commercial devices out there that do these things and no one says hey that\u0027s the J box 1 that\u0027s the C box 1 that\u0027s the Linux one somebody must know so if you know somebody in this community could tell us about what they are that would be fascinating to know they also have a cost in the capacity presumably and I don\u0027t understand why this market place isn\u0027t described in the open right oh and they just have a four color glossy that says that does this the the question that was asked before about reputation and it cross for instance the world wide web client space not speaking for my employer because I\u0027ve just not authoritative about what exactly we do in our reputation product but I can tell you some of the things that you can do there are pieces of software that have unique identifiers in them and you very often see tens or hundreds or even thousands of those unique identifiers show up behind one IP address in a day or a couple of days so clearly that\u0027s an added address the other thing one of the most interesting ones that were pursuing in our nascent research is about finding v4 v6 address pairings sort of the way that a APNIC does where you you force a web browser to connect back with both protocol versions and and over a very short amount of time you\u0027ll see 1/24 associated with tens or hundreds of thousands of slash 64\u0027s and v6 so it\u0027s a it\u0027s an interesting way and that the unit is temporarily unique identifiers in terms of the identities of sign in v6 multiplex on to v4 addresses and you can find the the nets that way and then the last thing following to what Ellison\u0027s I mean she said like I think that just it was how in the world would you do this it\u0027s a huge problem it\u0027s a huge like record-keeping problem because you have to continue continually monitor this and the other place we\u0027re seeing it is people adding through cloud infrastructure so like the cloud right they have a nap that\u0027s infinitely scalable and people are putting commercial enterprises behind a cloud and so we see a cloud address one day and it\u0027s one machine doing some service but the next day it\u0027s a company behind it with a thousand employees it\u0027s a really difficult problem and I\u0027m glad that\u0027s not my job thank you for the great talk Steve check away is a professor at the University of illinois-chicago "
  },
  {
    "startTime": "00:52:27",
    "text": "and this is a really interesting talk for the security folks and all of us good you know good thing to pay attention to so thanks and again we can take extra time at the end so think of good questions to ask him okay great thanks so as Alison said my name is Steve chuckwei I\u0027m at the University of Illinois at Chicago and I want to talk today about the incident involving junipers use of Julie C so if you don\u0027t have any idea what I\u0027m talking about I\u0027ll jump I did so in late 2015 juniper made a pretty surprising announcement they had an out of cycle Security Bulletin that said that some unauthorized parties had gained access to their source code and had managed to introduce two backdoors so the first was an unauthorized remote administrative access and the second was the somewhat cryptic message that a knowledgeable attacker who can monitor VPN traffic can decrypt that traffic so this is what I want to talk about it this work is all about how did this actually happen what was it that the attackers were able to do what the consequences of that are and then I want to end with a couple of lessons that I think that that we\u0027ve learned from this that are applicable to protocol designers so first these are the devices that were affected these are the junipers secure service gateway combination firewall and VPN devices and the affected versions of the software were a variety of screen OS 6.2 and 6.3 versions so let me start with the first one this was actually from my point of view the least interesting one although it was a little bit clever here so basically what the attacker did was they introduced a hard-coded backdoor password that affects telnet and ssh and so this is the the password right there and you can see that it kind of looks like if you can read this it kind of looks like some other format strings that you would be using for logging information and it turns out that you can see this is being passed right here to store compare and so if you if you log in with this this password it it lets you log in that with administrator access and it leaves some some tell-tale sign and the log which one could could actually remove so this was found really quickly by HD more and was able to test it and and sure enough it worked so the next one was more interesting from my point of view because it was really cryptic it just said there\u0027s this knowledgeable attacker who could do "
  },
  {
    "startTime": "00:55:28",
    "text": "something and so once this security bulletin was put out researchers around the world including me and my colleagues decided we were not going to spend Christmas with our families and instead we were going to spend a bunch of time reverse-engineering stuff and the question is well where do we start with this well HD more again was very very helpful here he he ran strings over one of the one of the the versions of the firmware that had been known to have been changed and also ran strings over junipers fix that they put out and ran diff over that and this is almost entirely the full death there\u0027s a few other things but this is the the key point here and so this is kind of interesting if you are a big crypto nerd you might have looked at this and said oh I know what these are immediately if you\u0027re like you know most people you put them into Google and see what comes up and the first five of these long hex digits long hex numbers here are parameters to this elliptic curve P 256 so these you you google them and they they come right up and so the question is what does this change here what what change from 9 5 8 5 etc to 2 5 or 2 C 5 5 etc and to figure that out we had to reverse engineer the the binaries and it turns out that these two values are rather this one value that was changed were for the x-coordinate of a non-standard elliptic curve point which was used for dual EC drbg if you haven\u0027t heard of dual EC drbg it was a or it is a pseudo-random number generator that was designed by the NSA in the early 2000s and then they made a push towards standardization so it appeared as part of an ANSI standard I think it appeared in some other standards eventually NIST standardized it in special publication 800-53 C their default random number generator it doesn\u0027t actually do anything else in this for this particular work but it\u0027s an interesting thing to note here but the key point sorry I couldn\u0027t resist the the key point here is that in 2007\u0027s Microsoft researchers sumo and Ferguson were able to demonstrate at a crypto Rumph session a theoretical backdoor attack against dual EC and sort of after this people thought well okay we know this is bad it has some biases that the we we probably shouldn\u0027t use it and it "
  },
  {
    "startTime": "00:58:28",
    "text": "turns out it\u0027s really slow no one would ever use it so let\u0027s ignore it in 2013 there was some renewed interest to this when a New York Times article was written as a result of the Snowden revelations that revealed that the NSA was trying to tamper with some particular crypto and that dual ec was perhaps one of these and then the following year some of my colleagues and I showed that in fact that if you use dual EC as your random number generator for TLS then you can actually break TLS so fast forward to you know 2015 and we see that once again we can actually do this with with I so let me talk about what it means to have a backdoor to random number generator because that\u0027s kind of an unusual concept but basically the way a normal random number generator works is you start with a seed so you have some seed value s naught to which you apply a pair of functions so you apply F of I compute F of s naught and you get s 1 which is your new state you compute G of s naught and you get some output or 1 and then you can just repeat this as many times as you need subject to some theoretical or I guess practical constraints on how many times you can do this but you can do this to keep getting more output now where the backdoor comes in is if someone who has some sort of secret knowledge is able to start with say some output r2 and apply some other function to it using this secret knowledge and recover one of the internal states of the generator and the reason that this is really bad in a crypto program protocol is probably pretty obvious once the attacker gets the internal state of your random number generator well then they get every subsequent random pseudo-random number that will be generated until the P R and G is receded now Dulli see the the EC stands for elliptic curve and so just do a quick primer on elliptic curve math don\u0027t need to understand most of how this works although it is a pretty neat ear pretty neat area so basically a point on an elliptic curve is a pair of x and y coordinates that satisfy a particular equation it\u0027s no matter what the equation is here the for our purposes x and y are going to be 32 byte integers although there are larger and smaller elliptic curves that one could deal with and sort of the the key properties here are that you can add two points on the curve in this sort of geometric fashion and arrive at another point on the curve and you can repeat "
  },
  {
    "startTime": "01:01:28",
    "text": "this process over and over so you can take an integer in and a point P and you can compute n times P which is just adding P to itself at times and finally the key to this whole scheme is that given a point P and a point in P it\u0027s hard to come up with n so this is the elliptic curve discrete logarithm problem so let me describe dual EC here so this is sort of a somewhat simplified version of how this works but we start with a 32 byte state s naught and we take s naught we treat it as a big integer we multiply it by some fixed elliptic curve point P which is the generator for P 2 5 6 and then we take the x-coordinate of that and that gives us a new state s 1 we take s 1 we multiply that by a second fixed elliptic point Q take the x-coordinate and that gives us R 1 which is not quite our output it\u0027s almost our output so what we do is we take the least significant 30 bytes of R 1 and those become the most significant 30 bytes of our output and then this process repeats so take s 1 times P you take the x-coordinate and it gives us s 2 multiply that by Q take the x-coordinate that gives us R 2 the next 30 bytes are the least significant 30 bytes of that are the next output bytes and so on so the really cool thing that Schumer and Ferguson noted about this is that if an attacker knows the relationship between P and Q in particular if the attacker knows the integer D such that P is equal to D times Q and it turns out that such a d-- exists and the attacker is able to see output from dual EC then it\u0027s actually possible to recover some internal state and so the way this works is pretty neat you start with the output and you set r1 which you don\u0027t know except you know the first 30 bytes of it just because of how dual EC works then you need to guess the two most significant bytes of r1 or in reality what you do is you just try all 65,000 possibilities so that doesn\u0027t take very long and you find an elliptic curve point R that has all one as its x-coordinate this either succeeds and you find two points or it fails and you find zero points in which case you would just try the next most significant byte and now you take R you multiply it by D and you take the x-coordinate and if you Oh indeed so so so you take the "
  },
  {
    "startTime": "01:04:32",
    "text": "x-coordinate and that gives us 2 and if it was not immediately obvious how that works you can read this string of equations here or you can just take my word for it all right but most of the time you\u0027re you\u0027re not going to get a value that works so how do you figure out when you\u0027ve actually recovered the internal state well it\u0027s pretty simple you just walk dual EC forward so you multiply your assumed s2 by Q take the x-coordinate and then you check is the least significant 30 bytes of r2 equal to the remainder of your output and if it\u0027s not just go back to step two and pick a new value for orange and try again and otherwise you have recovered the internal state of the generator and so what is it that an attacker needs in order to do this well obviously the attacker needs to have this secret value D but the attacker also needs to see a large amount of output from a single block of Abdullah see output so say at least 28 bytes and the fewer bytes you have the attack becomes exponentially more difficult so if you have 30 bytes or more it\u0027s it\u0027s basically free to do if you have less than 28 bytes you actually have to spend a lot of time working on and next you don\u0027t actually need to see raw output to do the comparison step it\u0027s sufficient if there is some public function of that so let me give you an example imagine a network protocol that has a 28 or larger byte nonce that gets sent in the clear and it has a difficulty that also gets sent in the clear so here we don\u0027t know what the the private key for the diffie-hellman public he is but that\u0027s okay we can use the Shuma Fergusson attack on the nonce to recover some proposed internal state of the generator then you compute what X would be just by following however X would be normally generated in this protocol and then you compute G to the X and see did that match the the proposed sorry did that match the actual public he or not and if it did then you know you\u0027ve got X and you have basically broken the protocol so you might wonder how can one learn D and I\u0027ve got 4 methods that one could use to learn D here the first is you could solve the discrete logarithm problem the second is you could be the entity in charge of picking the official Q value in dual EC and so either way you do this is you just pick a large integer e you multiply e times P you set that to be Q and then D is just the inverse of e modulo the group order so some simple math and you\u0027ve got D 1/3 you can use a non-standard point Q you don\u0027t have to use the the nsa\u0027s Q value and just do the same thing as in step 2 or you can gain access to somebody else\u0027s source code and substitute your own Q point just as you would have done in step 2 "
  },
  {
    "startTime": "01:07:33",
    "text": "and it\u0027s worth pointing out here that solving a discrete logarithm problem is too hard we just can\u0027t do that picking the official point was done by the NSA but they\u0027re not saying how they picked it so so who knows screen OS that was used in these these juniper boxes actually use a non-standard point Q and finally the this incident that I\u0027m talking about came about because the attackers replaced their the Juniper skew with their own cue and so now we can sort of answer the question what was it that the knowledgeable knowledgeable attacker knew well the attacker knew the discrete log D so this was actually pretty surprising because there\u0027s a 2013 knowledgebase article that says that although some of these screen OS versions use dual EC it it doesn\u0027t matter because dual EC is not the primary PRNG and in fact it takes the output of dual EC feeds that through an ANSI PRNG X 931 and that\u0027s what gets used as the main output and so in light of this we had my my college and I had five research questions that we really wanted to answer so why doesn\u0027t the use of X 931 defend against some compromise Q value why does a change in Q actually result in VPN decryption because this is just a random number generator perhaps other things should be able to defend against this what is the history of the screen OS PRNG code where two dual ec come in and and how did that lead to being able to decrypt traffic and then are their versions of screen OS that are using juniper skew that are vulnerable to the same passive decryption and finally how did juniper actually generate their their Q value and so we were able to answer a subset of these questions the first three by drawing on a body of firmware revision so in this table on the right here this is the the list of revisions of the firmware that I reverse engineer to sum greater or lesser extent in order to answer these particular questions so we can answer the first three questions letting for if we want to figure out the answer to the last two we\u0027re going to need some other body of material that we just don\u0027t have access to although presumably juniper knows the answer to five which as we\u0027ll see will answer for so let\u0027s start with a screen os 6.2 s pseudo-random number generator and let\u0027s start by looking at the the PRNG function over here on the right and so keep in mind this was decompiled code so any of the names that you see here are names that I came up with not names that appeared in the firmware there probably very different in junipers actual source "
  },
  {
    "startTime": "01:10:34",
    "text": "code and so this function has a couple of key features here the first thing is you\u0027ll notice that there is a conditional reseed so it seems pretty standard some condition is met the receipt happens second we can see that it\u0027s always generating 32 bytes of output at a time using the ansi x9 31 PRNG if we look over on the left we can see the the receipt function and the key part points here are that we\u0027re using dual ec drbg to generate 32 bytes of pseudo-random values the first eight bytes of this become the new x 931 seed and the remaining 24 bytes let\u0027s sorry the remaining 24 bytes become the X 931 key so at first glance this looks like exactly what Juniper described we have dual EC here but its output is being fed into X 9 to 31 so there shouldn\u0027t be any problems with this particular use but let\u0027s take a closer look here because it turns out that\u0027s not true so the first thing that happens over in this PRNG function or a PNG generate function here is that we\u0027re setting this index global variable here to 0 then we call this one stage RNG function which it turns out always returns false which means that happens every single time this generator is called so then if we look over at the the receipt function it\u0027s generating 32 bytes from Julie see the index global variable is set to 32 for some reason and then back in the main generate function this loop never execute because index is 32 so the loop guard is always false and thus at the end of the function what we have is 32 bytes from dual EC left in the output array this global output array which is the output of this particular function so what\u0027s going on here well we\u0027ve got these global output and index variables and the they\u0027re being reused for different purposes so the output variable is being used both as a temporary 32 byte buffer for the receipt function and it\u0027s also being used as the main output for the PRNG and this index variable is global for some reason that doesn\u0027t make any sense and will actually come back to this later when we look at the history of this like why is this global and I should note that the the a bunch of people were looking at this code and we\u0027re saying well I don\u0027t understand how anything could go wrong with this including me until Willem Pinker\u0027s on Twitter pointed out that that when the "
  },
  {
    "startTime": "01:13:38",
    "text": "receipt happens the the ansi generator is in fact not being around so he was the one who figured out that the key to this whole thing and so from this we can answer our first research question why doesn\u0027t the use of X 9.31 defend against a compromised Q well X 931 is never used so it can\u0027t possibly do anything so to answer the second question which is why does a change in Q lead to passive decryption we somewhat unfortunately need to talk about the internet key exchange so Ike is used among other things for establishing traffic keys for VPN sessions and there are two major versions of Ike which I\u0027ll collide v1 and IP to and both of them have two phases which is at least seem to me coming from a TLS world somewhat unusual but the first phase establishes keys to encrypt the second phase and the second phase establishes keys for use for IPSec or some other sort of encapsulated protocol and in both cases these are basically classic diffie-hellman protocols so let\u0027s if we if we take a look at at one of the ike phase 1 packets that gets transferred we can see that there\u0027s a header and a series of payloads that follow it so there\u0027s a payload that says which crypto algorithms are we going to use there\u0027s a key exchange payload which contains a diffie-hellman public key G to the X and there\u0027s a nonce which the standard says should be between 8 and 128 bytes long and in screen OS the private key is this 20-byte value X which is generated by dual EC and the nonce is always a 32 byte value which is also generated by dual EC now in an ideal world and ideal for the attacker world I should say the way the attacker would attack this is by applying the the sumo Ferguson attack basically directly so if the nonce is generated before the private key then the it looks something like this so we have to run dual EC a few times we get a nonce and we get this this value X and so what you do is you run this you will Ferguson attack on the nonce which gives you this internal state s2 and then you just generate X compute G to the X and you check did that work so basically what I described before unfortunately what appears to happen if you look at the code and you look at the protocol is that the nonce appears to be generated after the diffie-hellman private key is generated and so the sumo Ferguson attack doesn\u0027t actually recover X right so you could you run your attack over here on r2 you get s3 but you\u0027ve missed on X because X has already been "
  },
  {
    "startTime": "01:16:38",
    "text": "generated and you can\u0027t try to run your attack on X because if you had accident there wouldn\u0027t be anything to do so so that doesn\u0027t work so initially I was a little disheartened when I saw this because it seemed like you would have to deal with multiple connections but it turns out that the reality is somewhere between the ideal case and the apparent case screen OS contains cues of pre-generated Nantes and diffie-hellman values and the reason it does this presumably is to speed up VPN connections these boxes are not super powerful and you know computing G to the X could be an expensive operation and so critically the the nonce q is always filled before any of the other queues so there\u0027s a timer that fires and once a second it will say I\u0027m going to generate one value and either I\u0027m generated nonce or I\u0027ll generate it if you Hellman public key and it always has the nonce is first and the consequence of that is that in many cases the ideal attack really just works the nonce was generated before the private key and so you look at one transfer you look at a transcript of a single VPN connection and what do you see well you\u0027ve got the nonce and you\u0027ve got G to the X and you can run the attack on the knots and get X and I guess I should point out that it is in fact possible for the nonce is to be generated after X for example if you make a bunch of connections quickly you can exhaust the nonce Q before it\u0027s had a chance to refill and then in that case you have to deal with multi connection attacks and you can see the the paper for all the the hairy details about that one interesting thing about ike is that at least for Ike v1 the authentication mode that is chosen and for I could be one at least there are four authentication modes actually has an impact on the the traffic keys on the the encryption keys not merely on the authentication and so if you have authentication via digital signatures then the attack works exactly as described there\u0027s nothing more that you have to do if you\u0027re using Ike be one with pre-shared keys then it turns out that the pre-shared key is actually mixed into the traffic keys so the attacker needs to know the pre-shared key in order for this attack to work and for the two modes involving public key encryption well the nonces are encrypted and there\u0027s just no way to run the attack and it doesn\u0027t work at all and interestingly in Ike v2 the authentication modes don\u0027t affect the traffic keys at all so the attack just works and that\u0027s actually that\u0027s that\u0027s kind of sad we would like later versions of a protocol to be more secure against attack than earlier ones but in this case that\u0027s not snatcher so what about "
  },
  {
    "startTime": "01:19:39",
    "text": "phase two well phase two some more nonces are exchanged optionally another diffie-hellman exchange happens and to attack this it\u0027s actually pretty easy you can either just rerun the Schumer Ferguson attack or even easier is you could run the dual EC generator forward to just get the the new values you care about and the proof of concept that I\u0027m about to describe here we actually just ran the Schumer Ferguson attack again because it was fast enough and it it meant we didn\u0027t have to bother dealing with with values that were sort of generated far apart so to test that this actually works we bought a net screen SSG 550 m which you can see over on the right and we replaced the Q value in the firmware exactly as the attackers did with a Q that I generated so I knew the discrete log D and then we set it up to do to have VPN connections with a variety of different configurations and sure enough the attacks worked as described I could be one with pre-shared keys required the pre-shared keys using an RSA cert it just worked fine and for Ike v2 the attack just worked fine so that gives us the answer to our second research question why does a change in Q result in passive VPN decryption well the dual EC output is right there on the wire we just run the Shema Ferguson attack and at least for some VPN configurations that\u0027s sufficient alright so we figured out what the attacker did and we figured out why it works but now we have this question of of why does screen OS do this is this something that was there from the beginning probably not and in fact one of the things that i did was i reverse-engineered a whole bunch of other versions of the firmware you saw on the table and we can see that there are a number of differences between screen OS 6.1 and 6.2 in particular 6.2 added dual ec in this cascade with ansi x9 31 it moved from reseeding on every 10,000 calls to the generator to reseeding on every call there was this bug with the index variable that was now global so that it it exposed the dual EC output even more interesting than Mike Knotts has changed from 20 bytes to 32 bytes and 6.2 added a nonce pre generation cue and so this the set of changes actually raises a number of questions why why were these changes made so I want to go through them quickly and sort of offer my thoughts on them from an engineering a cryptographic or a standardization point of view so why was dual EC at it I don\u0027t "
  },
  {
    "startTime": "01:22:41",
    "text": "know this is a this was kind of a weird thing I can\u0027t think of any engineering reason that would require this and in fact in 6.2 as far as I remember the only thing that the elliptic curve math was doing was doing dual EC so they had to add a bunch of custom code to their OpenSSL version in order to use dual EC so it seems like a weird trade-off to me and I can\u0027t think of any standardization reason for doing this a screen OS was had was Phipps certified 4x 931 already so they didn\u0027t need that and in they never got it certified for dual EC so I\u0027m not really sure next why does screen OS 6.2 reseed on every call so on the left you can see 6.1 and on the right we have 6.2 here and you\u0027ll notice that this reseed counters global receipt counter was retained in 6.2 but it doesn\u0027t do anything it gets incremented and then when X 931 reseed gets called it gets set backs to 0 so so the receipt value doesn\u0027t do anything anymore so why does this happen well I can\u0027t really think of an engineering reason to reseed every time maybe there\u0027s a cryptographic reason maybe they were trying to add backtracking resistance to X 9.31 I don\u0027t know maybe a cryptographer could could enlighten me could just be a buck next there\u0027s the receipt bug so in 6.1 we can see that output was initially a parameter to the PRNG generate function and index was a local variable then when they moved 26.2 both of these become global variables for some reason I I don\u0027t know why I can\u0027t think of any good engineering reason for doing this I can think of kind of a bad one but it\u0027s not we\u0027re talking about it could just be another bug but it\u0027s a really strange one I don\u0027t think I\u0027ve ever changed a global there a local variable to a global variable accidentally so I don\u0027t know what\u0027s going on there next we have the ike not size increase so 6.2 as I mentioned increase the nonce size from 20 bytes to 32 bytes again I can\u0027t think of an engineering reason to require this I can\u0027t think of a good graphic reason although I will note that the Department of Defense had some bizarre to me line about how you wanted the public randomness to be at least so big and so they wanted to do this and TLS maybe this is the reason here I\u0027m not sure but I will note that at 20 bytes the sumo Fergusson attack would take about 2 to the 96 scalar multiplications which is completely infeasible would never be able to do it we\u0027re at 32 bytes it takes two to the 16 and finally there was this nonce pre generation Q that was added to the diffie-hellman pre "
  },
  {
    "startTime": "01:25:42",
    "text": "generation Q\u0027s so in 6.1 there was the the diffie-hellman Jenner pre generation Q by itself and this is actually reasonable as I mentioned these are not very powerful devices so perhaps computing G to the X mod P was sufficiently slow that they decided to do it ahead of time that makes sense to me in 6.2 they added the nonce pre generation Q and the only thing that I can think of here is that when I measured this on my laptop dual EC was about 125 times slower than using X 931 and so I suspect that what they did was they switched to dual EC and they tested how long it took to establish a VPN session and it took a measurable amount of time and so they said well here\u0027s where it\u0027s slow let\u0027s just generate this in advance so I don\u0027t know that at our adding a nonce generation Q to handle the fact that you\u0027re PR and G is slow is the right move to make but it at least makes sense from an engineering point of view and so if we look at the changes we can see that the first four of them were actually required for VPN for passive VPN decryption if you didn\u0027t have these then the attack just doesn\u0027t work at all and the last change enables single connection attacks whereas if you didn\u0027t have that you would have to do this multi connection attack all right so that\u0027s the the history of the VPN and that sort of leaves us with the final two questions are there versions of screen or less that are vulnerable well maybe it depends on how Q was generated if Q was generated in a safe way and I can describe one way of doing that then then no the answer is it\u0027s not vulnerable if Q is generated such that somebody knows this integer D well then yes it\u0027s vulnerable to whoever knows D and so that leaves us with the final question of how was junipers q generated and I just can\u0027t say I I don\u0027t I don\u0027t know and it\u0027s impossible to tell with the data that we have and so I want to end with with a couple of lessons for protocol designers that I think we\u0027ve learned from this so first and this is sort of banal PRNG is extremely important for cryptographic protocols and so you should pay a lot of attention to what\u0027s going on with your PRNG so one thing you can consider doing is hashing the output of it before you put it on the wire if you have a good PR ng this is a pointless step if you have a bad one maybe this will help you I don\u0027t know it would have in this case perhaps more important is you should look very closely at any proposed changes to the amount ya ng output that is being put on the wire we\u0027ve seen instances in the past where the NSA has tried to increase "
  },
  {
    "startTime": "01:28:42",
    "text": "the amount of random bits that go on the wire and TLS and they didn\u0027t really explain why and we should be very careful about Allah knowing that a one idea is to use separate PRNG instances for your public random values and your private random values and if all you need from your public ones is that don\u0027t repeat then this seems to work pretty well if you need them to be unpredictable then maybe this doesn\u0027t help you so much next is we should think carefully about the nonces that we\u0027re using in our protocols for example we should not allow nonces that are too large or that are variable length anything that\u0027s too large for example Ike\u0027s allowing up to 256 bytes is is unreasonable it\u0027s just too long you don\u0027t need that and it just invites implementations to expose secrets either intentionally or unintentionally by using bad random number generators and it\u0027s worth pointing out that variable length implementations allow you to fingerprint implementations so perhaps don\u0027t allow that one thing that was really interesting to me from the from comparing Ike v1 and Ike fee to as i mentioned that i QV 2 was less secured against a bad random number generator and so maybe we should consider whenever we have some low entropy even low entropy secrets we should consider hashing them into our traffic and authentication keys and finally I just want to end with talking about this this concept of no bus so the NSA has this notion of nobody but us so these are things that they don\u0027t feel like these are vulnerabilities for example that they don\u0027t feel like they have to reveal because the because nobody but us would be able to exploit them and dual ec is indistinguishable from a building block of a no bus exceptional access mechanism and I think that this is a pretty clear warning of what happens when we include exceptional access mechanisms either in our protocols or in our implementations that can be co-opted by third parties and that\u0027s just really bad and so I think we should be very clear here in the IETF or I RTF that we should really not be building exceptional access into our protocols okay thank you [Applause] hi Steve Kenny Patterson let me just start by saying I think this is really amazing work and you probably didn\u0027t tell us exactly how many hours you spent in the lab ruining your Christmas to do all the reverse engineering and congratulations that\u0027s really amazing thank you I have I "
  },
  {
    "startTime": "01:31:42",
    "text": "also have a question and what public statements to Juniper make about the penetration of their software development entity or section that led to this right so what public statements did they make I I think they they had the the out of cycle advisory that started all of the this work and then they eventually decided to remove dual EC from their products altogether I think they made an announcement about that I\u0027m not sure if there\u0027s been any other public statements so they didn\u0027t make any public statements about the mechanism by which they were penetrated or their mediations they took in response to that or anything of that same nothing that I\u0027ve seen I\u0027ve been contacted by a number of reporters who have asked me if I had any insight in town that it that happened and the answer is no I have no idea how how that happened okay thank you thank you i Stephen Feil yeah I totally agree to ask but I thought you might your honor I think this is a fine lesson a demonstration of the detail of exactly the crap consequences if we did go so stupid I hope I hope everybody is listening I\u0027m not just me what question yeah he said on your previous slide you kind of recommends yes before putting on the wire so there\u0027s two people who are interested in the quic protocol or probably on here they\u0027re meeting that but they\u0027re having like fun debates about in a new transfer protocol what to leave in the public header that might be visible on the wire versus what to put in ciphertext including things like packet numbers which may not be sequential and may hence be efforts around us yeah so I guess that\u0027s all a question if you thought about if there are other kind of places and protocols that we might be exposing randomness you know in ways we haven\u0027t really thought about the possible attacks like this it\u0027s a good question I\u0027m actually not sure all of the places that one might be exposing randomness and the obvious ones are nonsense that we that we send but I hadn\u0027t thought about sequence numbers I I guess I haven\u0027t looked at quick in quite a while but I would have assumed a sequence number was sequential but you\u0027re saying that\u0027s not true so I don\u0027t know so I haven\u0027t been involved with details quick but there was one male earlier today on the list is suggesting that you could randomly pick higher bits and then just have the lower bits differential which may give some better properties in some way but I guess just we need to think about being careful about that kind of thing yeah absolutely I feel how big yeah I\u0027m just amazed that anybody would want to do this in the first place because if you go back to your original slide when you doing the Dooly okay it\u0027s not like they\u0027re using the curve 255 1 9 curve or whatever where yeah it\u0027s pretty close to the power of 2 I mean these are you know "
  },
  {
    "startTime": "01:34:43",
    "text": "the NIST curves and so on and so they\u0027re gonna wrap is it even an embarrassed random number generator no absolutely not it is biased and one of the reasons that that it only uses 30 bytes of the 32 byte output is precisely to deal with that there\u0027s some analysis and SP 800 - 90 about about why that is a that was the right trade-off to use and I admit I didn\u0027t totally follow why that was the case but but there is there is a bias I tried measuring it and there\u0027s some some numbers in the the paper about distributions of values you get and it was pretty hard to distinguish so the bias seemed fairly low to me yeah but me like you\u0027re going 125 times slower and you know if you just fiddle around with merkle-damgard construction you can create yourself one that\u0027s unbiased with the free sure yeah I don\u0027t know why anybody would use Dooley see it in that nist special publication there are three other pseudo-random number generators one of which was designed by the NSA the other two by i think john kelsey at nist and or others at nist and all of those are much much faster than dual ec there\u0027s there\u0027s no reason to to use it okay well thank you to our a and our p awardees and i\u0027ll come up again for a moment thank you I\u0027m gonna ask you so are there any folks who are in the the miracle queue who wanted to ask questions so either of our speakers now since I can\u0027t see it you guys will have to tell me if anyone moves okay all righty that um it\u0027s really hot in here so I think that I\u0027m going to spare you I\u0027m going to have a really long discussion now so use up every last bit of our time now I\u0027m going to spare you a further discussion but I will ask a request some some interaction on the IRT F discuss mailing lists about some of the directions of publish out the the overview that I gave to the EDD team and asked you guys to give your your views and so thank you very much for being at this IRT F open maybe you can go get some drinks be set early on and deal with your dehydration and thank you so much to our speakers you guys need this day so we can photograph you getting your plaques sorry oh yes yes and if anyone wants to stay and applaud the "
  },
  {
    "startTime": "01:37:44",
    "text": "receiving of the plaques you\u0027re welcome to stay all right till next time we have two more awardees for the next ITF so hold your breath till I announce those [Music] [Music] "
  },
  {
    "startTime": "01:41:14",
    "text": "[Music] you "
  }
]