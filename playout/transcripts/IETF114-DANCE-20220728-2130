[
  {
    "startTime": "00:00:24",
    "text": "all right uh welcome to dane authentication for network clients everywhere otherwise known as dance i'm wes redeker one of the chairs joey unfortunately can't make it this time and just so you know she's done a ridiculous amount of work she does more than i do i let her push all the buttons because she's fairly new to cheering and uh is just taken on with enthusiasm so i miss her greatly and she's awesome um back in ietf 87 way back in berlin i walked by this infrastructure this is like in scaffolding right outside the ietf hotel room and for those in the back that can't read it the little yellow you know banners around this construction says time to dance i thought it was like the weirdest thing i had ever seen so i took a picture of it and this is a picture of it i didn't even realize until you know two or three iatfs that for this one it had to go on a slide right and clearly since back in etf 87 i have been destined to you know chair this working group is sort of my takeaway for it um people love it and it was a horrible shot to take there was no good angle to take it out but i did the best i could so uh the note well you have heard about this many times this week you're going to hear about it again because it's important make sure that you understand there are you know legal ramifications for participating especially under your sponsor at ihfs especially with respect to patents and disclosures and things like that i'm not a lawyer so that's my 10 second summary of something you should have your lawyers look at"
  },
  {
    "startTime": "00:02:00",
    "text": "there's a lot of information about the notewells stuff in particular you know we have bcps on the internet standards process and how it works the working group process and how it works the anti-harassment procedures the code of conduct the copyright and patents and participation as well as our privacy policy the code of conduct guidelines uh are specified in rfc 7154 and they're important and let's treat everybody with respect i think this group generally has done that because we dance and play along nicely with each other speak slowly and limit the use of slang disrupt dispute don't disrupt ideas that was horrible dispute ideas by using reasoned argument and not other type of slang use your best engineering judgment for the whole internet and then contribute to the work of the ietf uh i'll remind you i actually thought that there was a mask on this but there isn't the ietf does have a masking policy uh we should all be wearing masks at all time and working in ietf controlled areas which are venues like this and it's one of the reasons that our coveted transmission rate is so low this iutf and um i hope to go home without code and i hope you do too this is the information for the dance working group um there is uh you know there are the normal information there's a purpose or mailing list how to subscribe to it and then we have three working group documents that top one um actually there is a zero zero draft and because my mail server is down i haven't been able to click on the stupid email link in order to approve it but it's actually there and it's in the queue waiting for me to click on it so we have three actual official working group documents the biggest one being the architecture document this meeting is being recorded i think everybody knows that at this point it'll be live on it'll be on youtube later uh when you participate please do scan the qr code with your phone or click on the link either on your laptop or in um or on your phone version of the agenda it's important for a participation count so even if you're"
  },
  {
    "startTime": "00:04:01",
    "text": "not planning on speaking please click on it it's also where all the fun chatting is going which i'm not watching because there's only one chair so if anybody else notices stuff please let me know for today's agenda uh we just went through the chairs introduction that was most of it um tim has agreed to take notes i'm sure tim would really really love it if somebody else would watch the notes and type when he's not because it's a tiring job um there's a note there's a note taking link in the agenda as well um there isn't a discussion about the call for adoption results you can ignore that because we've already adopted everything um the working group activity is still kind of comes in small spurts but but we're actually getting stuff done anyway uh we'll have a short discussion about the current work items about those three documents in particular and then we have two interesting dance use cases um one jacques latour is going to talk about one from sierra and bob moskowitz is going to talk about drip and how dance might help in those cases but we will start with the architecture document actually did conclude in may and actually has been since the last ietf and so there was a three-week call it was clearly um had good support so we did adopt it and as i said the zero zero was coming out shortly uh this is all of the mail that's gone through you can see it's actually ticked up a little bit in the last couple of months so good job everybody nice way to dance but more is always better this is still a fairly low volume working group but i think a lot of it is there's not much contention in the documents uh with that i'm going to turn it over to uh i think schumann is going to lead the slides right and we'll pull your slides up you want to control them yourself uh you can use your phone if you ask me i am not set up to do that so i'm just going to ask you to advance them you just click on the little button on your phone it's actually quite easy"
  },
  {
    "startTime": "00:06:01",
    "text": "um okay good good afternoon folks i'm going to give a quick update on the status of the dane core protocol documents uh next slide yes which are the following so the first one is the dane protocol that's the dane tls client authentication document and the second one describes the tls extension used by the protocol for signaling the use of this mechanism and optionally to convey the domain name of the client in situations where that's necessary the um you know the main example is if you using raw public key authentication so so i think these protocols are largely done or maybe even done at this point but i did want to highlight one aspect of the protocol because it took a couple of implementers slightly by surprise when they found out i found out that there are some differences in where the protocol the new protocol elements are placed in tls 1.2 versus 1.3 so next slide please so in 1.2 we really don't have any choice but to place them in the client hello in the server hello where they are unencrypted that's the only thing that can happen in that version of the protocol and uh as you might expect there was some pushback from security and privacy folks about that so we addressed that in the tls 1.3 version of the protocol next slide by uh moving the extensions into the certificate request and the certificate message on the server and client side respectively whereas if you know the protocol those things are encrypted"
  },
  {
    "startTime": "00:08:00",
    "text": "uh one other thing you might have noticed is the ordering has changed so in tls 1.2 the client sent the extension first in its first flight client hello whereas in tls 1.3 we have to send it from the server side first because that is required by the protocol uh the client id extension and the certificate message can't appear unless there's a corresponding uh advertisement of that extension the certificate request message and i see a couple of people are queuing up for comments so maybe i'll do them now yeah might as well take them now uh sure i attempted to address this topic actually at the end of the utah session by asking where i might be able to define a new tls extension yet another one that would ask the server to solicit a client certificate yeah in this diagram the server you know statically solicits one but there are various applications where that's not the case and so even in tls 1.3 we could define an extension with no no privacy payload at all it just says please solicit my certificate and that might address this issue the only question is which working group does that go into uh uta this one or tls i don't know or care but somebody should have an answer perhaps paul will tell us where that goes is there any reason it couldn't go into this one or defining other things it could perhaps go into this one if there's no like you know uh territoriality where tls will say no no no we want to define it i don't know you can still send extensions unencrypted and client hello right so you could stick some right if it has no content other than just the number of the extension i doubt anybody will find that to be a privacy issue unless somebody"
  },
  {
    "startTime": "00:10:01",
    "text": "here has a thought about that i'm sure we can find somewhere that's a privacy issue i'm sure we could find somewhere it's a privacy issue [Laughter] that wasn't what i got up here to say i i'm interested in the previous slide if you if you can show that one yeah no i'm going to ask the standard question here which is um why support a defunct protocol why support it at all is that what your question is yeah uh yeah that's a good question so i think uh one of the ways we addressed that uh the first security and privacy objection was by saying that the dance protocols is probably going to be greenfield applications so maybe everything will roll out with tls 1.3 and we don't have to care about tls 1.2 i think there was some discussion where people made the case that there could be legacy applications that we may want to retrofit with this i don't have a strong opinion about this but others should speak up uh on that topic yeah so there's a couple of other things that i didn't see in the draft that probably do need some consideration here in relation to this privacy issue that you have essentially what you what you have here is the ts12 client for some classes of servers that it talks to essentially just publishes to the world it's its identity and and the um of the stuff it does but i mean in tls 1.2 they're going to do it anyway if you're using client no certificate i think isn't this and that that was the next bit that i was going to get to is that there are a number of ways in which you can avoid having that happen in ts 1.2 you do have the option to do a renegotiation now that's kind of frowned on the food and whatnot but it does give you um confidentiality for the for the client authentication pieces and that is a very common technique that's used for people who are doing client authentication particularly in those contexts where it is potentially sensitive information"
  },
  {
    "startTime": "00:12:01",
    "text": "right the other one to consider here also regarding victor's point is um we have post handshake authentication into ls 1.3 we also have uh exported authenticators which both give you an option to provide information about client identity outside outside of the context of the handshake so you can have something at the application layer that that says i need this information and then you can sort of bootstrap into any of that i didn't see any discussion of any of these options in the draft now it's possible that some of these you're just happy to ignore but i think the renegotiation thing is kind of a big deal if you're going to be doing 1.2 okay yeah so doing it outside the uh handshake i mean this is general purpose so it can be used by any applications without doing uh you know um you know complications in the application that was probably the rationale but i guess we haven't really discussed that so right uh we we can have a discussion about that victor um i will encourage people to keep things somewhat short we only have enough yesterday okay um a couple of comments uh one the kind of clients that have privacy concerns generally don't end up as being nodes in the dns tree uh this was the primary use case for for this originally was mta to mta you know smtp and obviously it's being extended to all kinds of other client scenarios some of which may have privacy concerns but the initial ones uh in uta right there's a long discussion now in drafts where uta says you must implement tls 1.2 still tls 1.2 is not a dead protocol if you read you know many of the wonderful posts by peter goodman tls 1.2 is here forever so i don't think we can ignore tls 1.2 and perhaps some of the industrial applications if they need this would would stay in tls 1.2 for a very long time"
  },
  {
    "startTime": "00:14:00",
    "text": "and as for negotiation we now have for various security reasons about cpu denial of you know uh service attacks and so on uh many servers now turn off for renegotiation as a matter of policy it's now considered best practice to say no renegotiate so there are all kinds of barriers to doing it the privacy way in many scenarios in which the privacy is not a desirable or at least a required feature and unclear whether the privacy clients would find themselves published in dns with their tlsa records or whatever it does seem like there's fairly violent agreement that we do both 1.2 and 1.3 and you're willing to take that on i assume in the dark yeah i mean it's been taken out right so we kind of killed it somebody argues heavily so we shouldn't do 1.2 i think we've solidified yeah so so to victor's point uh so i agree for the smtp transport client case clearly there's probably no privacy issue but i think there's a bunch of emerging danger to use cases where probably it will become an issue right so we may have to deal with it it's a general purpose protocol after all in the for what it is worth department in the tls extension that the faa is doing with scvp draft they were specifically told to pull out 1.2 that this is only going to be done bb this is going to be done for 1.3 now of course there's is a green field situation so there is that distinction so you should undoubtedly put in text in here as for the justification of including 1.2 is that this is not for greenfield use and there is this this large community which which will take some decades to go away um so include tax forward that no why the 1.2 that's why i came to say it not to vote against"
  },
  {
    "startTime": "00:16:01",
    "text": "her for but explain why yeah that's a good suggestion bob thank you all right thank you nick hi can you hear me great you're good okay so i wanted to uh follow on one point that martin thompson raised and uh it goes back to some of the assumptions made in this um in this design which is that the authentication happens within the tls layer in the handshake and not after the fact um and i'm i'm wondering first of all question one is is that is that a hard requirement is that or is that just where the design um ended up naturally fitting um and if it's not a hard requirement i i would encourage you to look at exported authenticators because it provides a unified um way to to exchange bits of authentication from client server and and back that is compatible with tls 1.2 and 1.3 without tpls handshake changes um as you sort of raised at the microphone there will be potentially some additional changes at the application layer to support this exchange and that might be that that might be too difficult but if we're talking about legacy systems right now modifying old tls 1.2 server server implementations seems like it might be just as messy as having protocol specific uh game-based authentication post handshake with application messages and exported authenticators um we also have stronger guarantees of the security model there because it's based on tls 1.3 exclusively even though it works with 1.2 yeah yeah thank you nick so i don't think that this is just the way the protocol evolved so i don't think anyone really"
  },
  {
    "startTime": "00:18:00",
    "text": "looked at exported authenticators but that's something we could uh we could look at so but i do agree that we were trying to make it so that we reduce the burst and burden on application protocol we can just plug into the tls layer that has these features and then be done right so uh asking applications to do a lot more work i don't know if that's going to work or not i see victor says shaking his head okay all right can we let him finish the presentation victor and if you still have a co okay uh okay next slide so uh as i said uh barring that discussion i think the document is mostly done uh there were a couple of comments these are i think from months ago from from michael saying he found the introduction really he wanted more references to use cases and architecture so personally i think that's what the other document is for and i don't think we need to necessarily burn in this document with more details about application architectures and use cases that could be persuaded otherwise but if that's the case we're waiting for that other document to be completed so the question i'll throw out so the working group is if we think this is close to done uh should we each other doc are you referring to the architecture the architecture document yes uh push this ahead or do we need to wait for that uh document to be fleshed out so the tricky thing will be the forward reference to a document that needs more work than this one right okay and uh and uh yes michael will fix the uh capitalization of iot um i think i have one more slide uh okay so i think i'm done i said okay said once here i'll stop okay great um so i think it sounds like one of the documents is likely fairly well done and the other one sounds like after today's discussion needs a bit more work before we consider"
  },
  {
    "startTime": "00:20:01",
    "text": "going to last call so one of the things to the the working group is i really want to know you know what other outstanding issues are there before we go to last call for the documents because they're they have been not you know super actively edited recently because they're already fairly complete so yeah i mean the only thing is uh if we're going to go down the route of looking for how to do this outside the handshake with exported authenticators or not right so if folks are interested in exploring that i'm game but there are some downsides right so victor just in terms of being done i i do think we need to figure out whether the please uh solicit my certificate is uh sort of a requirement for this one to be finished or not if it doesn't go into this specification it could be done specifically for smtp through esmtp keywords and some ugly hacks that are kind of at the wrong layer but the client could issue an esmtp command that says please uh solicit my certificate before doing start tls i think that's a the wrong thing to do at the wrong layer uh and i so i think part of this protocol might be uh this one more extension that would go into it if there's no major objections we could add it in the other hand if there are serious objections we should figure that out on the list perhaps so the only objection that i can personally think of you know from the chair's point of view is is it going to be used right so uh i think that's the only way i can get this protocol into smtp without changing smtp well then there's a good use case right okay and then we'd also have to answer the question in which venue should that work be done right is it general purpose or does it apply only to the thing we're talking about here sorry sat down too early it applies any time that servers selectively uh solicit client certificates um yeah yeah yeah so i remember i had this"
  },
  {
    "startTime": "00:22:00",
    "text": "discussion with you i think smtp was the one arena where you encountered this issue right uh are there others anytime really that clients don't usually have certs where it's not anticipated and where there are interoperability concerns because when you request certificates from clients some of them will blow up and say i don't have a certificate game over uh it's common with java and you know some other you know systems yeah but if the protocol compliant they're not supposed to blow up the right who knows the implementations differ so in fact a server that isn't always requiring class certificates but optionally if a client presents one might do something with it any application like that could benefit from the client saying i'm happy to give you a certificate please ask me for it smtp is a mta to mta smtp is a good one uh i only know about that one other people can speak to their user non-use okay dan hi ben kaydak so um i came up to basically suggest that victor write a standalone draft about the please solicit my client certificate extension and that will give us a place to think about it write down some security considerations what not and discuss whether it actually fits better in this document or in a standalone thing that would go to tls or wherever i also want to note that i know of some other non-smtp cases where it would be useful i think that the official mit web server like 15 years ago if you spoke https to it it would request a client certificate and if you wanted public content it had to be http only and that of course has changed since then but the behavior regarding when to request client certificates on that particular web server is uh kind of interesting and i think would definitely benefit from the ability to say i want to get the authenticated functionality rather than the public"
  },
  {
    "startTime": "00:24:01",
    "text": "functionality and there's currently some hacks in place to uh approximate that but i would like to see that as well all right like michael michael michael richardson so that's an interesting thing and i actually work with a number of there's a couple organizations that have client certificates everywhere and it's actually really annoying because we have to split up web servers and stuff like this and be really nice to actually have that um but the case i wanted to speak about actually was and this is why i was thinking it did belong in this document and it did belong in its working group but ben has now convinced me otherwise um was i think there's an awful lot of really crappy tls implementations in uh microcontrollers um that um in iot devices and so what the situation would really be that there's you know a hundred thousand of them out there they're all going to crash if the if the you know the central point starts asking for certificates randomly and so this actually is how you get them updated and when they get updated they may also get updated for 1.3 and a bunch of stuff but that's not going to happen overnight it's going to be incremental and it's probably a sufficiently big upgrade that you know this may actually involve more for more more more uh code storage and stuff like this this may be forklift upgrades to to get rid of them um so i think that's something to think about and i also want to say from the earlier point was dtos 1.3 i think is much further away from being deployable than tls 1.3 which is pretty much widely available so for those reasons i really would like to have this please ask for my certificate that would be really lovely um and uh yeah please let's have another document i would have just stuck it in the client auth document not thinking that about the website use but yeah let's have another document and then let's argue or who gets to publish it yeah that's good"
  },
  {
    "startTime": "00:26:00",
    "text": "okay i think i'm persuaded we probably should write that uh certificate soliciting extension it does seem like they should be independent and decoupled if they yeah decouple them in case other stuff wants to use it too right right yeah all right okay so you're done yep thank you thank you very much with that we will move on to uh the use case presentations who were both hoping for plenty of time we will start with jacques hello all right so i'm joking i'm with uh syrah and i guess i'm here to talk about how we can leverage the nsx and digital identity and i think there's a really good use case for dance dane tlsa to work in this world so i've been doing a lot of work here recently on digital identity with diac and organization like that that focus on digital identity they spend all their time trying to figure out what trust bridges trees are and how they they work just a touch letter jacques if you can louder where do i set that up just talk louder that's how you do it talk louder there you go okay that's okay yeah we'll live just talk loud or i can adjust the uh is this better no that's worse"
  },
  {
    "startTime": "00:28:02",
    "text": "so i don't know why this is not um worse all right that's good so digital identity world is all about trust registries and the problem statement is i think there's missing support in dns the nsx well it doesn't exist for finding identifying and authenticating digital trust registry so that's next slide that's what we're working on um so based on the digital identity world there's an issuer of credential verifiable credential in our case it's the iot registry we have wallets holders of credential um iot device and an asp is a verifier and other stuff so i'll start with the credential next slide so we have a an issuer of credential in digital identity world so in this case the iot registry issues credential to a iot device so basically what that is it's a digital certificate it's got a sand the sand has a fully qualified domain name here that's dnsec with a unique identifier that's the id that's the identity of the iot device so you have a cert a san and it's signed by an issuer which is in this case the iot registry so you have a certificate sign and it's got two sands and it's no one sand and it's fully uh working so next slide so the issuer of the verifiable credential to that iot device publishes in the dns a tlsa record for that iot device so it's a hash"
  },
  {
    "startTime": "00:30:02",
    "text": "of the serv that was issue a public search that was issued to the iot device and the sand of that record matches the tlsa label here and then you can verify that the iot device is who they say they are and that's the cool part with dance this this work i i love that framework that's great so good stuff there so we got an underscore device and then the uid and that's i chose the certificate for that iot device the no i just yeah go back so the iot device the cert is signed by iot registry and that's what we need to to figure out so we need the tlsa record for the public key of the signer available in the dns so you can verify that this search matches the tlsa and the public key signing it to the designer matches with that tlsa record so this we can do today next so there's two ways to verify the certificate that's issued to the iot device there's the certificate itself that's it's signed by iot registry.ca you can find the sub certificate in the trust store somewhere and make sure it's done properly they did the digital world digital identity world works at this level and then in parallel with the nsx tlsc we can issue the lsa record for everything and do the same validation so that works today that's something we can do next so i'm going somewhere don't don't worry next slide so we what you have is an issuer of in this picture oh i see it so you have an issue where the yellow box that issues credential and they sign"
  },
  {
    "startTime": "00:32:02",
    "text": "with their yellow key you know and then the wallet the iot device in this example has a credential signed by the issuer the iot registry and then when you present those credentials to the verifier uh the application needs to verify that you know what in the digital identity world it goes to a trust registry they it's how do i know those were issued by the proper uh issuer the wallet says am i allowed to give this credential to that verifier do i trust that for a fire and the verifier says do i trust this wallet do i trust this work and that's there's a whole lot of discussion around trust registry focusing on that so next slide and the question is it's always around the famous word trust how do you trust something in the digital identity world and they they have human layer trust institutional trust legal trust technical trust so i'm focusing on technical trust so next slide so i've been watching way too much strange world thingy show on netflix so digital identity is on the top world and i think dns the nsx can be in the under world the upside down world and there i think there's a way we can do the nsx tlsa to support this environment so human legal trust in the front technical in the back with dns and the question is if you have a verifier how do you find the right trust registry that recorded that those digital those verifiable credentials so next slide so to do this after a bunch of brainstorming there's"
  },
  {
    "startTime": "00:34:01",
    "text": "two ways two things we need to do so a trust registry is a thing that has an identity and it needs to prove the itlsa record that an issuer or verifier has been registered in that ecosystem so trust registries it's all about that it's recording the issuers the verifiers and other trust registries so if the trustworthiness three proves what they trust were just relabeled that these things are part of it itself so that would facilitate one part of the process and the second issue part of the process is for a issuer of credential to have a new yeah yet another one tr record for example to prove that they belong to a certain trust registry so one or more trust registry so next slide so if we look in the case of the identity the iot registry issuer registration if we look at it in that context it builds a chain of trust between a trust registry and a issuer of credential so we have iot registry.ca they they have a tlsa record for the root cert that they use with the public key and they have a tr record saying you know what iot registry is uh registered in trustworth registry dot ca so trust registry.ca is the entity that registered iut registry based on its governance model and its rules and all that and then trust registry.ca publishes a tlsa record with a trustworthy label to say you know what i iot registry.ca dot underscore trust registry is registered inside the trust"
  },
  {
    "startTime": "00:36:00",
    "text": "registry for canada with a tlsa with a hash of its public key so it's kind of like a ds and dns key thing and it creates a chain of trust so if a credential is if somebody looks at a credential they can work out which trust registry uh you should go look at to find that issuer and get all the keys to make sure that they're signed properly and all that so the ability to do this in the digital world does not exist they haven't figured out how to do that part i think we do something like this it facilitates uh the process so next slide and then the other one is how do you work this all the way down to a global chain of trust for trust registries and i think that's kind of this answers the question for the people here in canada for example in the digital identity if they get a credential issued by a another country how do they go back to that country to figure out it exists so if you have a china trust like this where the iot registry.ta is registered in the trustworthiness without ca entity and the trustworthiness3.ca is part of the iana trust registry and the infrastructure registry as a trust anchor in the root zone then with the nsx you can build a chain of truss all the way down to make sure that you know what this truss registry there's a chain all the way down to then it's authentic information is it legit totally different issue we can have malicious dns records signed with the nsx"
  },
  {
    "startTime": "00:38:00",
    "text": "we don't care but we care but technically we don't so this is about building trust registries trust registries being part of other trust registries and having a chain of trust from iana and i think if we do something like this it would enable so there's there's a whole lot of discussion in the digital identity world in anchoring all the digital identity documents inside blockchain and my my hope here is that we could use this to anchor digital identity instead of blockchain and show that you know what this can be trusted from ayanna up it's kind of delegated decentralized model so next slide yeah next slide so i think you know at a high level there's a good story um alex started to work on the draft for did dns03 uh to link did to dns so you know for them i just focus on the dns part there but there's more to this story than this so we have a repo in get lab with dance with this presentation and other stuff but i think in the end if we had something like this it would be good value for the digital identity world with trust over ip with w3c to anchor uh with confidence the dns inside the digital identity world and that okay here's the deck all right thanks chuck um certainly interesting case with lots of new things um in the interest of time to keep on track so we have more time for another presentation i'm asking clarifying questions only uh if you have you know should we do this or should we not that it is a future charter item and should go to the"
  },
  {
    "startTime": "00:40:00",
    "text": "mailing list and i would love to see discussion on it don't get me wrong but uh not today on the mic line go ahead clarifying question uh why did you put ayanna in there other than the fact that other people know it could that be some other organization that is the uh collector of trust organizations could it be something in the u.n something else or does it need to be iana no it can be anything you're right but i know we know what ayanna does right so that's why i put it there but it could be somebody else victor uh just quick uh i'm a very simple person i don't understand this at all could you publish some simple use cases requirements documents i'm seeing an architecture that i just don't understand at all so it would be helpful to explain this to people who are not too clever like me yes exactly it took me a while to figure this stuff out i agree i think that'll come this is the high level early introduction john i'm an even simpler person than victor um why do we need a new uh rr type for this let's do so the clarification is if you have an issue where if somebody issues credentials to show which trusts or just trees they belong to so let's say you have a university that issues a graduation certificate or diplomas then in canada you would have a trust registry with all the universities in canada that are registered in there and then when you receive these credential from that this university you can check in that trust registry to make sure they're part of that group that's what they encourage everybody to to read the slides because i got it only after seeing the slides multiple times while doing review that it made sense so"
  },
  {
    "startTime": "00:42:00",
    "text": "it is a complex use case and but it's an interesting one so do read his slides multiple times and it will help i'll try to make a joke thank you all right thanks very much chuck all right so we'll turn to bob now for hillary's gonna talk about fun with drones okay thank you very much and this will be looking at identity identifier in a different light than we just had and how i'm looking at leveraging dance for online aircraft communications next slide and fortunately i'm dealing here with the green field most communications today is line of sight often with no ap and this is changing the r it will be constrained capacity that we have to deal with there are two basic types of communication command and control typically called just c2 between the unmanned aircraft and the ground control station the other one is network remote id which is the telemetry from the uh the unmanned aircraft to the unmanned traffic management system next even autonomous operations need communications um there is the c2 updates both ways but less traffic than non-autonomous operations but telemetry is always we always must do telemetry and if autonomous it must be from the unmanned aircraft not from the ground control station because in non-autonomous operations the ground control station gets telemetry anyway as part of the the c2 and may do the forwarding to the ut to the utm many of you may be aware of the manned aircraft adsb this is not an option we've been told in the regulations that adsb will not be used for unmanned aircraft and if you have any questions we do have some people here who can answer that directly but you can take my word for it and finally there is a lot of talk that um future of utm rerun directives direct to"
  },
  {
    "startTime": "00:44:02",
    "text": "the ua so how the utm will tell the ua you need to move here to avoid this situation and that will go particularly in autonomous operations we'll may go directly to the ua to make a timely move for whatever reason next so now i need to secure the ua communication there's likely two choices and that's esp and dtls dtls is a likely choice for most network remote id because it's to a fixed known network mode id service provider but when the ua is on multiple interfaces there's a known problem with current dtls code that it can't handle changes on which interface is coming but that should be fixable that sounds like just like um an implementation in the code problem um but it has been brought to my attention for trying to do this when the the ground control station is mobile esp is more likely to be the mole ike or hip for the can to control example that is ups is proposing that the ups trucks will be the ground control system with with the the ua being launched from the uh the the the uh the truck and they make and it's making delivery while the operator is going to the next um place and so it potentially moves around the network and so esp and beep mode is a natural is naturally multi-homed and will work well in this either keyed either way and all this is in my draft mosque which secure enrich c2 um this has not been adopted by the drip i left up drip in there left that out by the drip work group because they wanted to first finish the broadcast remote id before we tackled the network remote id but it is current work for the group next you want to tell martin's comment now martin yeah i just wanted to ask i can think of a third choice quick"
  },
  {
    "startTime": "00:46:01",
    "text": "does some of the multi-homing things and has all the same properties as dtls but provides some superior perhaps application layer semantics like um streams for instance it is a potential i've not heard discussed um there is a directive from iko for manned aircraft then man aircraft will be dtls okay um and so kind of fading up and you're right quick is potentially another option which i've not delved into yet okay okay yeah dvd these things are not made in a vacuum so i'm kind of surprised with that you're just accepting a mandate on that one but i guess it's maybe not your your decision to make yeah now um the ua identities are defined in draft ietf drip grid uh which is finishing up its review and could uh be done pretty soon um the registry's draft needs a lot of work still as came out from the hackathon this past weekend the drip entity tag the debt is the hierarchical host identity tag which is an update on rc 7401 that's our session ids which makes this for the life of the ua or for only a 30 minute operation technically we call them operations not flights and eddsa 2525519 is used for the raw public key that's because it gives us some nice size characteristics to work with so define dns fqdns for all drip enabled ua it's very easy because of the structure there to set up that that the the debt resolves to this particular fqdn um and if the debt is not in dns the debt"
  },
  {
    "startTime": "00:48:00",
    "text": "was revoked so there's no revocation process in here other than if you can't find it it was revoked and if you have authorization you can ask the registry why was it revoked and it may tell you if you have rights so that's stored in dns either or both in the hip or tsa resource record depending on which protocol you're using to to do it and these are all the raw public keys which is basically it's just how how they're wrapped differently from the two otherwise exact same content next so debts and dns trusts may be established by dns sec but will this be possible for zones run by the hcit domain authorities the hda with hundreds of new debts per hour be able to sign zone to be determined but no if if this is a a registry which is supporting a delivery service which is requesting you know a bunch of session ids for each delivery operation um there are going to be millions of these created and aged out quite rapidly and will dns sec be able to deal with that unfortunately now i say attestation here we have since learned that in rat determination it should be evidence so in my slides where i say attestation think um evidence in the terms of rats so the registration evidence insert resource records via private oid that's just how you can put private oid allows you to put any object you want in a cert resource record see the registry's draft and how i'm doing that the interesting thing is this is provides proof of registration and thus trust in the det without having dns set so if you receive the if you're able to pull out or actually receive it in the broadcast message um the the this registration evidence you know that this debt has"
  },
  {
    "startTime": "00:50:02",
    "text": "been registered you have the proof of that without having to have a signed zone because you have the independent tree of the signing of of the register at the registries and how they're how they are authorized next so that's all the background and now up to ua and dance when using dtls we could send an irc 2750 raw public key of the high but then how do we link it back to the det it's better to use dance with the known fqdn we derived from the debt to retrieve everything from dns the pieces just fit but server side may need some special help on the evidence for trust if it's not a dns sec evidence for trust next and but these are a limited number of servers these are the servers run by the the network remote id service providers so we're not talking about a large community um and if the if drip is widely adopted this could mean millions of uas in the coming years feeding telemetry into utm even via the ground control station and note that that c2 will tend to use pre-stored on ua identity for dtls authentication because you have this natural you purchase your ua with your ground control system or you install the software on your smartphone so that's like a closed environment there it's more involved but can work for other proposed solutions from other stos that my drip proposal for mode id is not the only extant one there are others it gets a little more complicated for what they're doing though it is doable for them as well next and that completes my slides and and our intent here that i'm looking that dtls may be"
  },
  {
    "startTime": "00:52:00",
    "text": "very important for a number of reasons and that then using dance for how the um identities uh how how they'd like to just pass the fqdn in in the handshake don't have to pass all the rest of it the server can look it up and it will just work well and could end up being a lot of it paul hi paul speaking as just an individual i just wanted to remind you that we have ways of storing chains of dns records uh the query chain and you can use them to offline synchronize your client server state if you pull that from the dns so if you're offline you can keep your own link to the root and refresh it regularly when you're online and then you have like a pretty up-to-date valid path you can send to the other side of the tls connection yeah and you can so these dns uh query chains you can embed in tls because they have also an extension for that when before you take off your ua has some good bandwidth connection maybe through the ground control system to to do that pre-setup or takeoff but then i'm dealing with for for like cargo delivery which is then going from one utm space to another utm space how do we do the handoff particularly if the the the operation that was filed you have to change it because of whether or whatever and so then that may get exciting i don't have an answer yet how to do that one that's that's still um tbd and uh looking at my colleague on the faa side and he's shaking his head because he has the same class of problem on much bigger pieces of hardware than i do so one you know thing that that has always been interesting to me with things like dance and dane is uh which i think matters to you more"
  },
  {
    "startTime": "00:54:00",
    "text": "than anybody else is bandwidth savings uh so have you done any measurements to determine you know by using dan and dance that you can actually reduce i am doing bike counting and i'm looking really hard at chic um for how we're going to be compressing this um and why i want chic end to end not just just see on the on on the wires because some of these the avionics that you may have an an ethernet network on the larger uas and so the avionics are ethernet connected they don't know the characteristics so wireless and so how do we do that so so i'm count i'm literally am counting bytes and and i haven't gotten into those i've been concentrating more on on the headers but that's the next step that i need to do and i'll be in the next three months be working through that yes it would be neat to see a comparison of of you know with and without dane and dance right yeah so that that that all has to that that is all on my list of things to do does some of this apply to i know the early discussions in drip had to do with uh sending data over bluetooth which is a pain in the neck or is that that is pretty much done okay that is the drip off draft which is in workgroup last call and that is how working within we only have 200 bytes to work with how do we do the proofs and everything in 200 bytes and i've done it all right victor just exactly two invites uh i applaud the use of raw public keys it's a cool idea i haven't seen any tls stacks that actually support this are these going to be sort of ground up not the usual tls decks we're used to seeing in sort of the open source world are there do they exist well that's yeah and and also that's why looking to dance that's it that dan's fqdn so that's sending back to this only the fqdn not the raw public key"
  },
  {
    "startTime": "00:56:02",
    "text": "in terms of what is what is passed you people know more about this than i do i may be stepping my foot in something that i don't know i stepped into okay i know that hanus actually has raw public keys working in various of the sex that he worked on thank you ben likewise there is also code for openssl to do drop of the key and i thought it had not been merged yet but i'm not seeing an open pr i can send the pointer to victor offline since victor is in positioning so we still have a row to hold here but this is the direction that we're going all right any last questions thank you for your time thank you so i'll remind everybody that you know uh the use case some of these use cases do require additional drafts and protocols and stuff and we knew when we started dance that that once we got over the base you know a couple of documents as well as how it was all going to fit together if you remember in the very first you know danish boss before we were dancing about danishes uh you know there was a lot of questions about how all these things were going to fit together and you can see some of these use cases are getting you know pretty complex and out there but that's how it started from the beginning so uh thank you everybody for coming um we if it looks like we're close to to getting the you know the first two real core pieces of protocol documents done that would be awesome and i think it'd be about a year i think that may be almost a record for dns for a working group certainly for a dns working group so thank you everybody uh that concludes today's dance session you may dance freely among yourselves"
  }
]
