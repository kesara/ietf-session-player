[
  {
    "startTime": "00:00:07",
    "text": "hello so let's just wait one minute before starting and karsten will be here a few minutes late anyway unfortunately i have to leave it half-past sorry no problem i might have to leave also at quarter to six in my time depending on on is a depending on the wife essentially okay it's a multi-dimensional problem [Laughter] yeah ultimately is the children problem right okay um yeah also considering the time constraints uh for thomas uh let's start the meeting then so welcome everybody to this interim meeting of the working group i am marketiloka my co-chairs are jaime jimenez and kirsten moorman and this is an official ipf meeting so we've been recorded uh the not well applies uh please be sure you're familiar with that it's not just about apr and patents it's also especially about our code of conduct so be nice and professional to each other and the agenda for today is about two documents uh problem details uh that had a running working group last call until uh yesterday and i believe we can close and then group com proxy and esco also would cover"
  },
  {
    "startTime": "00:02:01",
    "text": "about group communication with proxies uh before we start anyone has any agenda bashing or additional item to propose i think i think carsten had a few more slides to add to the problem details we discussed the morning but i'm not sure because i i couldn't i couldn't popping up in the in the materials page so okay they yeah there's one more set of slides you're right but we can start with yours right those are the main ones oh yeah sure i can all right your overview and then maybe casting can go in details and specific points all right then please thomas you can show the slides yourself can i let me see how are you sure it's okay how can i do that because on the top left the second icon from the left oh i don't know left and right marco sorry so you know problematic so only help you see the itf logo a little bit below you have a few icons and so you have the hand icon beside it you have a meeting material paper icon physically beside the screen icon presentation view no share preload the slides is the second icon i don't have it between gallery view for me on the other side of the screen thomas ah right it's the icon between the hand and the screen and you should be able that's right cool fantastic um probably it is"
  },
  {
    "startTime": "00:04:02",
    "text": "i suppose this is it there you go cool um okay wait a second [Music] right so um this is the update for for the concise problem details draft that went through working group school in fact a cross-working group was called involving core symbol and http api which seemed appropriate given the the footprint of this you know seemingly anodyne draft which instead has interesting ramifications and um the working group was called uh concluded uh on tuesday and uh we had a few by a few but but i would say high quality feedback thank you marco christian uh harian and roberto pauli for for the input and we are addressing all all the comments in one in one batch on the wgl dash processing branch on on the repo and uh if if you click on that rfc diff bit in the slides the the the you could see that the diff between zero three and the work in progress at the moment we had a parallel discussion on the tag 38 fix up mainly in in in sibor um and and just to present a refresher of the thing the the the the thing that we're doing here is"
  },
  {
    "startTime": "00:06:00",
    "text": "we are extending the uh semantics of 38 to add the language direction so left to right right to left indicator to the array as an optional as an optional element and this is i would say a quite a bold move because uh there is clearly th there is clearly a potential backwards compatibility problem that is that is introduced by the changes uh any old receiver um will not be able to interpret the l2r signal if included uh so you know we there was some debate between the co-authors around this on a late friday night um and then carsten went ahead and and sent this nice email to the to the zebra working group you know giving the rationale for for the for the for the thing and and the surprising thing for me was that we had no pushback on the contrary there was some appreciation for the you know no clutter aspects of the change so apparently carsten was right which doesn't come as a surprise but uh still so we had this positive comments from from michael and and christian and yeah appendix a contains the the fix up basically the rewrite of the of the registration for type 38 [Music] um so these were the two basic discussion threads we had um so shepherding is uh um started and has taken the lead thank you very much so we started the write up and also kicked off the ayana processing because we have a few things there we have a new media type we have the associated content format and a couple of new sub registries for um for slotting the new extension"
  },
  {
    "startTime": "00:08:01",
    "text": "points and uh as of this morning there was already uh his co providing his thumbs up on on the content format registration so we seem to be you know in good shape there but but the thing is that the um the milestone for this is the etas is june 2022 which seems like a date in the future but is in fact you know a week a week from now um for shipping this to isg which is quite tight and and just to to be clear the reason for this acceleration sudden acceleration and deadlines is that the some documented some documents in the in the 3gpp as you depend have taken a dependency on on problem details on concise problem details as well as the uh seven eight or seven uh the unconstrained version of this work um and they plan to publish in june so that's why we're trying to align the two um uh yes so i think next steps uh well we need first of all to you know uh to decide whether the we have addressed the comments in in a proper way and then uh submitter zero four which should be the signal to kick off id review but what i wanted to discuss maybe is that given the you know the stringent timeline maybe we should request error reviews in parallel to radio review um instead of waiting on on the output from francesca but you know this is just the my two cents that i'm throwing in there yeah i think that's it that's it from uh from me"
  },
  {
    "startTime": "00:10:02",
    "text": "should i close the deck keep it open not necessary let's see if there are questions but there's cars then i just wanted to to point out that it's not us who are usually asking for error reviews but the id so essentially the the next milestone is for us is to throw the thing over the fence and then it's all francesca's decision how to handle this but we might very well suggest that she should request error reviews right away okay yeah okay any questions or comments on the the slides i've just seen for thomas because well i know carson has more details on the actual uh changes on the github before getting into that maybe there are more high-level questions sounds like no cooler that works for you it can continue constant slice then cheers thank you thomas yeah so we did this relatively quickly with few of the usual breaks and stops since on we have because we want to beat this june submission milestone we want to do it this week so uh let me quickly run through the the regular blast call uh comments and see how we handled um them so as thomas said this is in a branch on on the repo there are some 18 commits in this pull request and those were essentially taken right from the"
  },
  {
    "startTime": "00:12:01",
    "text": "discussion in the mailing list without creating individual prs or even creating issues for them um we also have a few abbreviations that we have been using between the authors um uh but not not in the document uh so there is there are concise problem details data items these are the things that we are standardizing here and on the slides i will use cpddi for that then we have standard problem details entries which are one kind of entries in the data item and we have custom problem details entry which are the other um form of entries in in the map that that constitutes the concise problem details data item and the bug of course is that both the word concise and the word custom starts with a c so um if you hear me saying the wrong thing that i i i usually mean what what makes sense uh i should be saying um of course much of the work was on the editorial side so 11 of the 18 commits are editorial ones i've listed them here if you want to cross uh check them and one of them is consistently using concise problem details data item um there were some reference tweaks and so on um there was one technical knit um the the entry in the registry was wrong about uh what can be in the standard probability entries one and two and uh we changed that um tag 38 was already mentioned so one thing that i added very recently is making the base direction auto explicit in in the previous version auto was"
  },
  {
    "startTime": "00:14:03",
    "text": "always implicit by not giving a direction and sometimes when when you want to use this tag in a more complex framework where you have something like inheritance it makes sense to to reset a default that you would have been inheriting um so this is now explicit uh if you don't use that um just just treat null like absent and and you will be fine only when you have that such a more complex uh situation that change will make a difference the other thing that i think is really important to understand this whole attack 38 thing um is that the whole issue of how to actually handle um mixed direction text is still under ongoing standardization so for instance there is a w3w3c group draft note that explains how to do this and that's a draft it's it's not yet even taking a report or something and then it's definitely not the recommendation so we are defining this tag 38 in into a landscape that is somewhat uneven and we can't really define the meaning of this tag in in all uh necessary detail without defining that landscape and that doesn't make any sense whatsoever so the purpose of the tag 38 is to deliver the information that goes into those algorithms and the algorithms will be defined elsewhere and we cannot have normative references to them because yeah yeah do you find yet there is a pretty good understanding between the people who who are working"
  },
  {
    "startTime": "00:16:00",
    "text": "in this space we had a little side discussion in the internationalization directorate about that i'm not a member of that but but i could get some responses from some of them and they also see the problem that that right now there seems to be a rough consensus on how to handle this but it's not written up so that that's the the the space into which this tank 38 38 uh change goes but um i think it's better to to be prepared for what's going on there than then to be on the in this duration of 10 years ago so there is some new text there that you may want to uh read we actually went uh on and defined a term for problem shape uh because we we earlier got rid of the problem type uh which is the the simplistic way of talking about what the problem is about so the 7807 assumption is that you are in a situation where you can enumerate all your problems you might be having and that becomes part of the interface and that that doesn't really mesh with reality um so typically if you define an interface between two components that evolve separately then you are finding new kinds of problems all the time and if you want to be able to talk to other instances that that may not have that new problem type in mind then you do this in terms of problem details and that's why we removed the problem type apart from the fact that it's a big registration issue um there and the next dash problem because people will use your eyes before they are registering things and so on so all in all the thing becomes both"
  },
  {
    "startTime": "00:18:01",
    "text": "simpler and more aligned to reality except for the few cases where you actually already have 78 to 7 problem types and in that case you can simply import them from there and we have defined defined a custom problem details entry with the ominous number 7807 and that is actually meant to carry this kind of information around if you have it so that's um i think a pretty uh significant editorial change explaining what we had in mind but if the explanation before that has been so poor that you didn't quite understand what we are doing here now now it should be much more clear okay so the next one is base ui we had a discussion on the main list and and christian reminded us that if we define something that has that can have embedded relative ui references then we have to say what the base ui is and usually when you use problem details in its original function where where you get it back with a with an error response this error response is in response to a request which determines the base ui so usually you don't need that but as soon as you store a concise problem details data item um it's not clear that you stored the base ui with that so we defined uh base uri standard problem details entry which now has number -5 and explained how that is meant to be used and that meshes with the response code that we"
  },
  {
    "startTime": "00:20:01",
    "text": "already had because that is another thing that is clear from from the rest context from the request response context but would be lost when you store just a problem details data item um so um one one comment that christian just made on the list was that we really should be thinking more about what do we have to to store to keep information about the response that is usually implicit in the request response context and that's probably something we should define answer but we should provide some way to do this now in in the current spec there there is some text um in industrial tool that requires ignore unknown uh processing so if you have a problem details entry that you don't know um you should be safe uh to just examine the other ones and um make up your mind what happened from from the other entries so you can ignore unknown entries and that's a common json extensibility pattern that we we are just following uh here and this provides forward compatibility because you you can put new stuff into your problem details while you still have old systems out there that don't understand that stuff and that's a pretty important part for instance of http that you can put headers uh"
  },
  {
    "startTime": "00:22:01",
    "text": "in there that header fields in there that haven't been defined before before without breaking uh everything if you break everything then you are not going to do that and then you don't have a forward compatibility path you can take but if that is not the right choice you can put the data in a new custom problem details entry and that should prevent false intervariability um so the the other data that also go into this custom problem details entry will not be used uh by old systems so your backwards compatibility story is that uh new stuff that that is uh um changing the semantics of old stuff uh doesn't uh get to influence old receivers and that's exactly what we need to achieve here okay so we are not in a position to to actually write up the ignore unknown principle uh in all details and forever i think this is pretty much what we have to say about ignore unknown but there is one more detail that came up in the discussion on the list what if we are not just adding a new map key which is easily detectable as one that you don't know but if the data given for a map key look different from what they should and of course if you are using internal ignore unknown if the data you supply for an existing map keep internally have map keys that are new and you ignore them that's already this case but it is a special case of this case so this this is one of the reasons why why people who have been using validation in applications usually are"
  },
  {
    "startTime": "00:24:02",
    "text": "very weary of of the effects because you can over validate and and by that simply block paths for doing extensibility and and forward evolution so the question is do we need to define this part of j of the json ignore unknown pattern as well and there is a lot of assumptions that people make so for instance if you have a new enum in a set of allowed values for a string usually that new enum is not understandable so you would expect to ignore that if you have something that says you can have 0 to 10 uh boxes in in that palette and it suddenly has the number 20 um then the assumption is this is not something very different for instance telling you that in reality this is delivered with a rocket and not not on a pallet but it just means there are now 20 boxes on that pallet and your existing the main domain restriction is outdated so these are things that people who build applications in this space do intuitively and writing up all this intuitive processing uh probably what would uh take years so i don't think we should include text on this uh but we should be aware that this is something that is not really fully defined in the extensibility story of javascript or of json finally we had a little detail the slide is wrong the the bottom right character would need to be a brace not a bracket um so um there is an example for how to port"
  },
  {
    "startTime": "00:26:02",
    "text": "the 7807 like invalid parents construct out of 3gppts29 112 to this and the example uses an array where the the json form uses a map and i actually find this attractive because it allows us to to demonstrate that we don't have to do this exactly in the way the json specification uh would do so i would prefer to keep it this way because it's much more likely that you will do this uh in in a zero environment than the braces uh version but but of course it's a change and it depends on on the the actual meaning of ts29 112 whether that change would actually be desirable but this is not an example to to indicate how to do 29 112 in in our specification but it's an example to show the use of custom problem details entries um and we just took the the real-life content of that from 29 112 so i don't think we need to slavishly follow that okay so i think that that's complete summary of what we changed and where that still may be controversial in some ways thank you carson any comments question thomas okay so i i was not sure about the base"
  },
  {
    "startTime": "00:28:01",
    "text": "uri being in the standard space but um but the analogy with response code has made my mind conversion on that so now so i i am okay with that um i had expressed mild doubts about the you know um sort of isolating all the type decorators that are not necessarily uh generated by the origin but it can be you know produced on the path to the end to the pier you know including the the proxy chain into a separate um uh map a sub-map but uh yeah i think i think it's okay i think it's it works as customers described for the rest i have no i have no concerns go to here um yeah on the slide six on the topic of the type um i don't know if he was in the call of minutes ago i think he left but um we were discussing it at least with the three p colleagues that what they are looking is kind of like a one to one uh mapping like the simplest they can they can see i get the point of the problem shape i don't know if it is too late to add any more text there but it might be that for and i haven't checked the version of today if there is changes by the way maybe it's already there but it could be helpful to put more on the on the rfc 7807 and how how the problem type could be could be something like a problem that could be created if we don't go for the problem type at the end of the day basically the text as it was yesterday was not fully clear there"
  },
  {
    "startTime": "00:30:00",
    "text": "and the comments i mean the comments i got from the 3bp guys is always like where is type where is type and so on we have a whole appendix b on that so um that actually mentions type all right okay maybe i didn't have a too close look on that then uh anyway i can take that off offline it's not a problem and then on the i would check that next week and then on the last item i kind of agree with carsten on this one like it makes more sense to have the not have the array of objects um but i guess it's i mean at the end of the day is for the group to decide um so yeah whatever the authors on the group decide on that to me the array actually makes more sense after reading the 3bp table hey do you do you want some change in the in the draft um for this or not because as kasten has mentioned in a in a parallel email this is just an example right so it happens to be a i crafted it this way because i i took the 29 112 and then you know try and work out how it would look like but it was just you know i guess so unless you want this to be you know uh the kind of um blueprint for for for the 3gbp work right okay i thought that i mean if it's not a non-contentious issue and it's like a bike check thing uh then the second one with the fixed first bracket actually uh i think that would be more clear for the people just uh you know there's usually people through just browsing the draft and they may get confused if they're seeing the example so if it is not a problem for you the second one actually is um let's say more accurate to the to the"
  },
  {
    "startTime": "00:32:02",
    "text": "spec but i understood forecast from carson's presentation that actually the first one will be more uh better fit from zebra point of view yeah the first uh problem is is one that doesn't use any strings for identifying things and that's what we normally would want to see in a concise problem details um uh application so that that's that's a good example so that was my poetic license if you if you will i took the open api uh schema and translated into cyborg basically the the the way it is right now but uh you know knowing that you know i was i was making that choice but it seemed to me like you know the normal choice to do in in this kind of environment so it really depends whether you want this you know one-to-one parity or not which you know tails into the the discussion around where where's type right yeah we got rid of it because it was useless but anyway yeah i don't know i mean i'm not i'm not the boss of anybody i cannot put actionable items and kind of ambivalent as well to me it's a bike shed but um you know if you justify the way you have done in the presentation i think you can keep the the one you like um okay the second one is just to clarify for 3gbp folks that are checking this pic okay hey any more comments anyone and kristen by the way confirmed in the chat that also his comments were addressed in the latest comments i think"
  },
  {
    "startTime": "00:34:01",
    "text": "hi the technical issues i would like to know more or less that i mean the timeline is for june so uh how how are we going to be doing this in the coming well in the next week or so like we do in parallel uh we confirm that we check with francesca right and she does the 80 part in parallel and is there anything else so what i would like to do is submit the version based on this pull request today and have it submitted to the isg uh well the next possible time i mean tomorrow is a vacation day in much of europe but really friday uh should be possible and i don't think we have to wait a lot because we still have a whole itf last call to validate to verify that we didn't make any mistake here so i think we can be a little bit bolder here than we usually are so by the way can we have the shepherd app ready by friday for that i think it's pretty much ready now the current version i will have a last look if that's okay on the last version on the editorial the editor's view yeah i can do it today or friday yeah and if anybody else wants to have a look maybe there is more comments coming i don't know i would i would just like not to get stuck on this kind of like little whether we use array or object or something like that like that that's my hope okay and to confirm of course we can close the working group which was pretty intense and successful thanks a lot for the good and quick work on this"
  },
  {
    "startTime": "00:36:03",
    "text": "yeah it was actually super fast right like is there a year it became an urgent topic so yeah good job everyone okay um if there's nothing i suggest this the new draft within the next hour or so and then i think we really can press the isg submission button okay thank you carson okay if there's nothing else on this document then we can move to the next one group proxy and esco will present yeah that's right let's load up the slides loading um let's see locations looks like the interface changed again for this oh okay here they are it's good now thank you yeah yeah so i'll talk about group com proxy um yeah the recap is here i'm not sure if it is actually needed for the audience there so but i can do a very short version so we already discussed group communication of course in group combis and there we find issues when using a proxy in combination with group communication and we have this draft now to address all of these issues and that's the contribution that we make you get more of the details [Music] of the com in the coming slides basically"
  },
  {
    "startTime": "00:38:01",
    "text": "i think we repeat a couple of these things sometimes so in the figure on the right you can see [Music] an example situation so the black arrows come first so it's a request that the client makes the proxy proxy performs the group communication requests and then unicast responses are sent back by the servers and then collected by the proxy and sent back to the original client so what we defined for this here there was a problem uh for how long the proxy should wait to collect and then forward these responses so we address that with a new co-op option multicast timeout and that option is also removed by the proxy so the servers don't have to do anything with that and also the proxy adds something to a response so this is an option response forwarding so that's basically used to indicate to the client that the responses are coming from different servers and there's some information about these servers in there and that information can be used to later for example do more operations on that server for example contact it again we also define how a group group score can be used for security also for the situation that there is a proxy in between and yeah we also have a pointer here to another draft so that was core capable of proxies draft and that has more details on the security between the client and proxy if you use oscor so you get a kind of oscor within oscor type of security in that case so that's the short summary of the topics yeah what we address here now i'm going to talk about about updates since the"
  },
  {
    "startTime": "00:40:02",
    "text": "last version that was presented so that was version 5. this was an interim presentation and we did already earlier submitted version 6 before the itf meeting but this wasn't presented yet so first change is for the multicast timeout option well then the name has changed so it used to be multicast signaling so this is now updated to be more specific to the purpose of what it does so it sets basically timeout for the proxy the length of the uint is used in seconds is now four bytes and we also made updates for the response forwarding option so there's some changes in the semantics of the port number so basically the proxy will provide back information related to the port number of the server and yeah now it can be represented in a more compact form basically so it can be a null or it can be completely absent so in that case the the data element is completely left out from the cbor array so for now we have the semantics now that it's basically the same port as the destination port number that was used in the group request and absent means that it's the default port number for the transport protocol that was used in the group request so currently this will be 5683 because we only define the co-op scheme for multicast group requests but this can be of course for other schemes it can be used in the same way in the future so then the second slide with the changes so we've"
  },
  {
    "startTime": "00:42:00",
    "text": "provided more details of the processing what happens on the reverse proxy so there's a section now on that and in this case you can see a reverse proxy can act as a as if it's what is an origin server so um and it can be specific to an application domain as well so in that case it's logical that it could have a default timeout as well so the proxy basically determines its timeout for accepting the responses to a request and in that case the client can also omit omit the multicast timeout option so when it omits that it means or okay it will use the default timeout which is determined by the proxy and of course to make things work properly ideally the client also needs to be aware of this timeout of this default configuration that's yeah of course useful that it knows how long it will have to wait for responses coming back or how long responses can potentially come back and this should be okay in that situation because uh the proxy is expected to apply a security and authentication of clients so that it will they will have a relationship set up and configured so that same relationship can be used to also make sure that the client is aware of this situation yeah we put some notes in there so that this is not final text here but place on the notes regarding response revalidation so there is basically revalidation can take place between a proxy and servers and in combination with group or score"
  },
  {
    "startTime": "00:44:00",
    "text": "so this is a particular situation that that can happen although this doing this requires the use of cashable oscors there's also a pointer to that document otherwise you can cannot even revalidate such protected messages uh so we have yeah basically put a note in there and um i'm not sure marco has any further details you want to say about this not at the moment we can come back on that later if there are questions yeah we can discuss it if there are questions yeah so then the final slide for the updates that were made there was a new example added regarding a reverse proxy so we have that in the appendix and this is a bit different than the existing examples we have now so this requires one [Music] basically adders as a proxy so an ip address in the past examples where things were done in a different way you could have uh yeah like something like one headers per group in this case or you need an address per server in the group and this is of course less scalable because you need lots of ip address addresses so now we have proxy reciting and one ip address and the request target is expressed within the uri path and it uses the format from rfc 8075 actually we have now thomas also on the call so he's one of the co-authors of that and yeah this makes it more more stable scalable because it uses one header so i'm not sure if people can read the text here i actually hardly can read it in the example but maybe it's only on my side"
  },
  {
    "startTime": "00:46:02",
    "text": "it basically embeds the complete uri the group uri in the uri path that's basically the approach that's being used so other updates we have made are to consider http to co-op reverse proxy so that's in section 9.10 and there's also to do placeholder notes there discussing okay that you can have streamed delivery of responses so client talks to the proxy in http and then you can use the streaming using the transfer coding chunks you can basically send the chunk each time a co-op response comes in to the group request they can send it back to the client so we studied that a bit and it turns out to be doable but we have not have not made the final text there i think it would be good to have yeah final text here together with an example and of course we have capstan in the queue yeah go ahead yeah i was just wondering when you use transfer coding chunk how you actually delimit the responses from each other um yeah good point yeah there was i think various options discussed for that [Music] i was trying to remember what we used for that use a long string and pray no that wasn't it the problem is that you might have an http proxy that re-re-jungles your transfer coding chunks so you cannot"
  },
  {
    "startTime": "00:48:00",
    "text": "rely on the chunks uh the trunk boundary is making it to you so you have to have something in there that actually uh provides steady limiting i mean that there are obvious ways of doing that but you have to choose one yeah i think you may what you suggest is that there's another http to http proxy basically in front of the one we are describing and that could uh have its own way of processing of course the chunks i think that's already addressed in the draft version because it says that those come along as multi-part messages and those are just kind of good and the chunking hat may happen along the multi-path multi-part boundaries or not yep that's fine thank you your heart boundaries are where you have to pick a long string of prey yeah it's a multi-part mixed basically so you can have different types of responses as the parts of the multi-part response all right yeah then also clarifications were done editorial improvements as usual and i'm moving to the next slide so there's a sort of summary slide we have here of the current features at the glance so some little bit of repetition here but we have basically solved the issues as highlighted in the core group on this there's the signaling protocol that we started with and we basically deal with caching of responses at the proxy in this draft and there is basically two types of response validation that that can happen in that context that's also addressed uh it's maybe good to note that the one"
  },
  {
    "startTime": "00:50:00",
    "text": "revalidation between the client and the proxy we have a new co-op option for that so that's the group etag so it's kind of a validation of an entire group response at once and there are other issues that that we found but but noted that those could best be handled in other drafts like google this for example defines all the the caching of the responses at the at the client itself and the validation between the client and servers so that that's why we mainly focus here on what what does the yeah the caching uh what is the caching that the proxy itself has to do or are there special rules for that and when when our entries invalidated etc and we consider now the not only the forward proxies but also reverse proxies so that was added later on and also the http to co-op case is considered as well as chains of proxies so multiple uh yeah basically multiple proxies that can can be chained together so we have a couple of relations to other documents so that was already pointed out in the presentation so you see a few links and but there are more so there's the document draft borman core responses also about considering non-traditional responses to a co request so basically we we are in this uh in this case of course so we have um a client making a single request to the proxy"
  },
  {
    "startTime": "00:52:00",
    "text": "and then getting multiple responses back so this is kind of one case of that and here we have the multicast timeout option to basically provide a time indication to the proxy so how long should it collect and yeah basically there's the draft on score capable of proxies so that's basically also sharing the same use case that we outlined in this document and yeah this goes more into detail about the security so you have oscor between client and proxy and also group of score is end to end so between client and servers and yeah let's see finally we have some points here at the bottom of the slide um so i said we addressed the issues from coupon biz and [Music] now basically this draft is providing solutions to that and now carson provided a working group last call review of group from this also pointing out to the relation between these documents so we basically point to the present document from group convis to address these proxy issues and so we also refer to the google proxy document so carson's point was well we should at least have maybe accepted this as a working group document before we can proceed with group convince here and that means that that we accept that yeah part of the problems will be addressed in this document and not in google canvas"
  },
  {
    "startTime": "00:54:07",
    "text": "so then maybe look at the next steps [Music] so there's a couple of things we still want to do here so there's an alignment that can be made with terminology and concepts specifically from the core responses draft and in the options now we use basically to indicate the address and port etc of the server we use a custom format but we found that cris can also be used for that as a more maybe more standard way of including that addressing information so that's something we are considering to to add next um one thing is cancellation so this is not considered yet but uh should it be handy if clients have a way to stop the proxy so if it's collecting for a particular time is there also a way to cancel that so before the timeout expires clients might be able to stop that processing still i need to think about that i think and of course the part i mentioned the text for http to proxies that is not not yet complete just the placeholder we need to work on that as well and while we do that for http to co-op we can also add security considerations that are specific to the group case because that's those were not yet in rfc8705 okay i see the queue is filling up so let's start with the record yes thank you i just wanted to make kind of a general comment that i've been uh yeah following the work on this draft and i'm also actually working on an implementation where i'm trying to set up a forward"
  },
  {
    "startTime": "00:56:00",
    "text": "proxy that can forward a unicast request from a client to multiple servers using unicast so using multicast according to how things are refined in this document and i've come part of the way for that implementation and this is also based on the work i've been doing in the california co-op library where i have also worked on oscar and groupos core support so as a further step i want to enable on this proxy also a group of course group score between the proxy and the servers um so i just wanted to mention that as a as a piece of information okay thank you very good news i think so if you have further input of course to this document then we're happy to look at that of course definitely okay and then christian uh yeah thanks for this um i have two points i'd like to come back to could could you go to slide five yep um yeah i've i gotta admit i missed the dash of five version so this was rather new to me i don't think that having a default on a reverse proxy is such a good idea because a reverse proxy will might not need much custom configuration by the client because that's just how reverse proxies are set up the client may not even be aware that this is a reverse proxy and typically is not um so i think this should be more a matter of negotiation and possibly advertisement that this these resources there are um are might there might be multicast behind it so that the client would send a multicast timeout because if the server sends multiple response and the client did not ask for them then this is asking for for token disagreement so the clients might use shorter tokens on requests where they"
  },
  {
    "startTime": "00:58:00",
    "text": "expect the response to be sufficient and longer tokens for observations and that like so if this thing these things get out of sync um i think that's problematic so i think it's better to think about advertisement here rather than uh than defaults and micro i wrote some of this up already so you can you don't have to um type down again yeah so so it's like like well default is maybe not the right word than that it's like um timeout determined by the proxy right now even then if it's like if the proxy sends responses multiple responses even though the client didn't ask for it that i think that's problematic so if request comes into multicast proxy then the safer thing might be to say yeah sorry um there is no single answer or anything that like and not to just uh send multiple responses and i think carson's um plus one on the chat was meant for this comment yeah i think i must say i don't fully understand this because what we have here is not just a random client uh going to random resource and expecting one response it's the reverse proxy you can't be sure from the proxy client's point of view it looks like a regular server and that's the point of a reverse proxy that it appears like a regular server yeah and that's what we basically basically want to enable that so it it looks like a regular server but uh but the client in this case knows basically knows already it's not a regular server no why why would it it's a reverse proxy it didn't say anywhere that it's that it's odd i think that i would have to say that i mean maybe it uses a particular uh yeah"
  },
  {
    "startTime": "01:00:02",
    "text": "particular resource structure that is determined by by an application or application ecosystem and the problem yeah i are having is the same thing the the you cannot really make the the workings of of the state machine of the protocol uh depending it depends on context information that may be unevenly distributed um so the specific thing that broke me up here was that christian mentioned token retirement and if if i send a request to someone and get the response then i might want to reuse that token but if i'm still waiting for more responses to my original request um that's not so great um so i really need to know whether what i just did is is going to get me one response or multiple responses maybe you're thinking on the protocol level there so that's it's kind of you can say maybe it's independent from from what application resources are being used the the clients i said called clients at the protocol level uh must be generating the right uh tokens as well and then yeah and and we don't yeah we don't want to run possible risk that this co-op client is unaware of uh let's say the group comproxy graph and then uses the wrong token for example yeah so in that case what it could do is it acceptable if it would include the option but without the value let's say so it's like saying to the proxy uh you choose i"
  },
  {
    "startTime": "01:02:01",
    "text": "think that that could be still an option then a client may not know necessarily at the co-op level it doesn't know how long it will receive responses and that that maybe doesn't matter at the co-op level at application level it will know how long responses will be coming in because it's some kind of default that has been agreed for that resource for the application context one might certainly consider having having a some some value that indicates undefined but again this this might this might go through this might go through process in between and if it that's information from the application then that application that information is not available to other proxies on the path so um i think it's better to be explicit here yeah that's basically for the chain uh case you're saying that if the information is included then the chain can properly uh process that and then keep the state for for exactly that time as indicated right so yeah i think that does seem like the in general the safest approach if you consider all kinds of possible use cases and then deployments with chains and if if a reverse proxy receives a request that doesn't have a multicast timer there is still kind of there are there are still different options and that and those will depend on the configuration of the proxy so that might be something like sorry show uh show an error because and just tell them in plain text but sorry this is you have to be multicast or i can tell you something this might be um the multicast might really be more of an anycast and it might be in this particular application which is configured for the reverse proxy okay to just send whatever comes first"
  },
  {
    "startTime": "01:04:00",
    "text": "um or do something more application specific yeah so it can be coming your whole range of things actually yeah yeah and that's the application specific part also the reverse proxy kind of implementation specific part yeah setting up a reverse proxies always needs at least to some extent knowledge of of of are these things going to work through reverse proxy so whoever sets up a reverse proxy in my opinion needs to know needs to have a rough idea of the application but it might suffice to have that rough idea and if i may follow up with the second command unless here and that's on page six yep now i'm going to do that um could you elaborate a bit on on on why why these why the address gets packed into the i mean and i know and i understood this a2 807 5 uh construction to be relevant really for cases where a proxy doesn't work like a protocol independent proxy as we have it in co-op but just like an http proxy that can only work with http uris so that gets cram so the address gets crammed into the path um what's what's the problem here really because we already we also have the uri host so the request could indicate the group in the uri host and then come back from from from any resource yeah that's basically uh thinking about um you could use the forward uh proxy for that right if that may be no you can you you can have a uri host option even in both in a forward and a reverse case so especially in the reverse case that that that server could sit on one ip address but have all its groups advertised as different names which all resolve to that address and when the"
  },
  {
    "startTime": "01:06:01",
    "text": "request gets sent there the request contains the uri host option which then the reverse proxy translates to whatever the multicast or any cast or broadcast address on that medium is which really depends on on that precise reverse proxy but the information on the requested group is already available can already be available in the uri host option oh yeah and i'm wondering about that because we had similar uh these questions be before in convince about using the uri host options for particular things um yeah i think you do run into a problem then with the co-op uri encoding and decoding process so because if you follow yeah maybe let's revisit that offline but um i'm pretty confident that uri host is the right space here and that if you start um cramming things up into the uri path option then things like relative reference resolution in responses get really weird okay then so i would like to see you need how uh yeah how do you write well host option could be used there so that would be good to check so maybe that's something for the list discussion do you think that's good to have yeah you can send a comment by by mail for example and we'll be interested in that and just to finalize my comments and none of that should stand in the way of a working group adoption which in my opinion is really due for this document and it's a good thing to have this around and what we just talked about our details yeah okay that's uh it can be worked on then in this case yeah i agree okay thanks"
  },
  {
    "startTime": "01:08:00",
    "text": "yeah if there are no other technical comments christian took a little bit anticipated a little bit what i was going to say so i watched the conversation and these all look like things where where we are doing the usual tweaks that the working group does when working on a working document and it seems that we do agree on the fundamental approach that this specification is taking and it also looks to me that we do have energy for working on this so i think all the the uh prerequisites to doing regular adoption call um are there and um are we waiting for anything specific with a working redemption goal should we simply do that now yeah i'm not waiting for anything specific now uh and now there is indeed still energy now so let's hope uh after group convince we still have that energy well let's see that depends good uh marco is a coarser and the the other coach here has dropped out so maybe we cannot uh answer that question right now but i think uh the chairs should look at this question and and decide whether to do a working production call very soon okay thanks yeah that also was the last point of the slide here and that's the conclusion of the presentation thank you esko yeah just to be sure any other comments on this document"
  },
  {
    "startTime": "01:10:02",
    "text": "okay then we get into a b territory yeah i just wanted to to make a reminder that we actually have another uh documenting working group was called uh the original plan was until today it's conditional attributes but as far as i could see there's only my own review on the list that i sent yesterday so we clearly need more feedback before closing the working group last call and proceeding and what you have read the document please provide your feedback on the list preferably in the next couple of weeks and even saying that you are fine with it as is is valuable feedback if you haven't read the document yet that's a good time okay so there's anything of course don't forget to bring it out well ah thanks tristan for for another reminder is there anything else you want to discuss about core today you know i think we can adjourn the meeting and talk to you in two weeks okay thank you thank you all bye-bye thank you thank you"
  }
]
